This is maxima.info, produced by makeinfo version 5.1 from maxima.texi.


File: maxima.info,  Node: romberg,  Next: simplex,  Prev: orthopoly,  Up: Top

70 romberg
**********

* Menu:

* Funciones y variables para romberg::


File: maxima.info,  Node: Funciones y variables para romberg,  Prev: Top,  Up: Top

70.1 Funciones y variables para romberg
=======================================

 -- Función: romberg (<expr>, <x>, <a>, <b>)
 -- Función: romberg (<F>, <a>, <b>)

     Integra numéricamente por el método de Romberg.

     La llamada 'romberg(<expr>, <x>, <a>, <b>)' devuelve una estimación
     de la integral 'integrate(<expr>, <x>, <a>, <b>)'.  El argumento
     <expr> debe ser una expresión reducible a un valor decimal en coma
     flotante cuando <x> es a su vez un número decimal.

     La llamada 'romberg(<F>, <a>, <b>)' devuelve una estimación de la
     integral 'integrate(<F>(x), x, <a>, <b>)', siendo 'x' el único
     argumento de <F>.  El argumento <F> debe ser una función en Lisp o
     en Maxima que devuelva un valor decimal en coma flotante cuando <x>
     es a su vez un número decimal; <F> puede ser el nombre de una
     función de Maxima traducida o compilada.

     La exactitud de 'romberg' se controla con las variables globales
     'rombergabs' y 'rombergtol'.  La función 'romberg' termina con
     éxito su cálculo cuando la diferencia absoluta entre sucesivas
     aproximaciones es menor que 'rombergabs', o cuando la diferencia
     relativa de sucesivas aproximaciones es menor que 'rombergtol'.
     Así, cuando 'rombergabs' vale 0.0 (su valor por defecto) sólo tiene
     efecto el test del error relativo basado en 'romberg'.

     La función 'romberg' reduce a mitades sucesivas la amplitud del
     paso un máximo de 'rombergit' veces antes de abandonar el cómputo;
     el número máximo de evaluaciones del integrando es, por
     consiguiente, igual a '2^rombergit'.  De no satisfacerse el
     criterio de error establecido por 'rombergabs' y 'rombergtol',
     'romberg' devuelve un mensaje de error.  La función 'romberg' hace
     siempre al menos 'rombergmin' iteraciones; se trata de una
     heurística para evitar la finalización prematura cuando el
     integrando oscila mucho.

     La función 'romberg' evalúa el integrando repetidamente tras
     asignarle a la variable de integración un valor específico.  Este
     criterio permite anidar llamadas a 'romberg' para calcular
     integrales múltiples.  Sin embargo, los errores de cálculo no
     tienen en cuenta los errores de las integraciones anidadas, por lo
     que tales errores pueden subestimarse.  Por otro lado, métodos
     especialmente desarrollados para integraciones múltiples pueden dar
     la misma exactitud con menos evaluaciones del integrando.

     Para hacer uso de esta función ejecútese primero 'load(romberg)'.

     Véase también 'QUADPACK', un conjunto de funciones para integración
     numérica.

     Ejemplos:

     Una integración unidimensional.

          (%i1) load (romberg);
          (%o1)    /usr/share/maxima/5.11.0/share/numeric/romberg.lisp
          (%i2) f(x) := 1/((x - 1)^2 + 1/100) + 1/((x - 2)^2 + 1/1000)
                          + 1/((x - 3)^2 + 1/200);
                              1                 1                1
          (%o2) f(x) := -------------- + --------------- + --------------
                               2    1           2    1            2    1
                        (x - 1)  + ---   (x - 2)  + ----   (x - 3)  + ---
                                   100              1000              200
          (%i3) rombergtol : 1e-6;
          (%o3)                 9.9999999999999995E-7
          (%i4) rombergit : 15;
          (%o4)                          15
          (%i5) estimate : romberg (f(x), x, -5, 5);
          (%o5)                   173.6730736617464
          (%i6) exact : integrate (f(x), x, -5, 5);
          (%o6) 10 sqrt(10) atan(70 sqrt(10))
           + 10 sqrt(10) atan(30 sqrt(10)) + 10 sqrt(2) atan(80 sqrt(2))
           + 10 sqrt(2) atan(20 sqrt(2)) + 10 atan(60) + 10 atan(40)
          (%i7) abs (estimate - exact) / exact, numer;
          (%o7)                7.5527060865060088E-11

     Una integración bidimensional, implementada mediante llamadas
     anidadas a 'romberg'.

          (%i1) load (romberg);
          (%o1)    /usr/share/maxima/5.11.0/share/numeric/romberg.lisp
          (%i2) g(x, y) := x*y / (x + y);
                                              x y
          (%o2)                   g(x, y) := -----
                                             x + y
          (%i3) rombergtol : 1e-6;
          (%o3)                 9.9999999999999995E-7
          (%i4) estimate : romberg (romberg (g(x, y), y, 0, x/2), x, 1, 3);
          (%o4)                   0.81930239628356
          (%i5) assume (x > 0);
          (%o5)                        [x > 0]
          (%i6) integrate (integrate (g(x, y), y, 0, x/2), x, 1, 3);
                                                    3
                                              2 log(-) - 1
                              9                     2        9
          (%o6)       - 9 log(-) + 9 log(3) + ------------ + -
                              2                    6         2
          (%i7) exact : radcan (%);
                              26 log(3) - 26 log(2) - 13
          (%o7)             - --------------------------
                                          3
          (%i8) abs (estimate - exact) / exact, numer;
          (%o8)                1.3711979871851024E-10

 -- Variable opcional: rombergabs
     Valor por defecto: 0.0

     La exactitud de 'romberg' se controla con las variables globales
     'rombergabs' y 'rombergtol'.  La función 'romberg' termina con
     éxito su cálculo cuando la diferencia absoluta entre sucesivas
     aproximaciones es menor que 'rombergabs', o cuando la diferencia
     relativa de sucesivas aproximaciones es menor que 'rombergtol'.
     Así, cuando 'rombergabs' vale 0.0 (su valor por defecto) sólo tiene
     efecto el test del error relativo basado en 'romberg'.

     Véanse también 'rombergit' y 'rombergmin'.

 -- Variable opcional: rombergit
     Valor por defecto: 11

     La función 'romberg' reduce a mitades sucesivas la amplitud del
     paso un máximo de 'rombergit' veces antes de abandonar el cómputo;
     el número máximo de evaluaciones del integrando es, por
     consiguiente, igual a '2^rombergit'.  La función 'romberg' hace
     siempre al menos 'rombergmin' iteraciones; se trata de una
     heurística para evitar la finalización prematura cuando el
     integrando oscila mucho.

     Véanse también 'rombergabs' y 'rombergtol'.

 -- Variable opcional: rombergmin
     Valor por defecto: 0

     La función 'romberg' hace siempre al menos 'rombergmin'
     iteraciones; se trata de una heurística para evitar la finalización
     prematura cuando el integrando oscila mucho.

     Véanse también 'rombergit', 'rombergabs' y 'rombergtol'.

 -- Variable opcional: rombergtol
     Valor por defecto: 1e-4

     La exactitud de 'romberg' se controla con las variables globales
     'rombergabs' y 'rombergtol'.  La función 'romberg' termina con
     éxito su cálculo cuando la diferencia absoluta entre sucesivas
     aproximaciones es menor que 'rombergabs', o cuando la diferencia
     relativa de sucesivas aproximaciones es menor que 'rombergtol'.
     Así, cuando 'rombergabs' vale 0.0 (su valor por defecto) sólo tiene
     efecto el test del error relativo basado en 'romberg'.

     Véanse también 'rombergit' y 'rombergmin'.


File: maxima.info,  Node: simplex,  Next: simplification,  Prev: romberg,  Up: Top

71 simplex
**********

* Menu:

* Introducción a simplex::
* Funciones y variables para simplex::


File: maxima.info,  Node: Introducción a simplex,  Next: Funciones y variables para simplex,  Prev: simplex,  Up: simplex

71.1 Introducción a simplex
===========================

El paquete 'simplex' utiliza el algoritmo simplex para programación
lineal.

Ejemplo:

     (%i1) load("simplex")$
     (%i2) minimize_lp(x+y, [3*x+2*y>2, x+4*y>3]);
                            9        7       1
     (%o2)                 [--, [y = --, x = -]]
                            10       10      5


File: maxima.info,  Node: Funciones y variables para simplex,  Prev: Introducción a simplex,  Up: simplex

71.2 Funciones y variables para simplex
=======================================

 -- Variable opcional: epsilon_lp
     Valor por defecto: '10^-8'

     Error epsilon utilizado en los cálculos numéricos de
     'linear_program'.

     Véase también 'linear_program'.

 -- Función: linear_program (<A>, <b>, <c>)

     La función 'linear_program' es una implementación del algoritmo
     simplex.  La instrucción 'linear_program(A, b, c)' calcula un
     vector <x> tal que minimiza 'c.x' bajo las restricciones 'A.x = b'
     y 'x >= 0'.  El argumento <A> es una matriz y los argumentos <b> y
     <c> son listas.

     La función 'linear_program' devuelve una lista que contiene el
     vector solución <x> y el valor mínimo de 'c.x'.  Si el problema no
     está acotado, devuelve el mensaje "Problem not bounded!"  y si el
     problema no es factible, devuelve el mensaje "Problem not
     feasible!".

     Para usar esta función, cárguese primero el paquete con la
     instrucción 'load(simplex);'.

     Ejemplo:

          (%i2) A: matrix([1,1,-1,0], [2,-3,0,-1], [4,-5,0,0])$
          (%i3) b: [1,1,6]$
          (%i4) c: [1,-2,0,0]$
          (%i5) linear_program(A, b, c);
                             13     19        3
          (%o5)            [[--, 4, --, 0], - -]
                             2      2         2

     Véanse también 'minimize_lp', 'scale_lp' y 'epsilon_lp'.

 -- Función: maximize_lp (<obj>, <cond>, [<pos>])

     Maximiza la función objetivo lineal <obj> sujeta a ciertas
     restricciones lineales <cond>.  Véase 'minimize_lp' para una
     descripción detallada de los argumentos y de la respuesta dada por
     esta función.

 -- Función: minimize_lp (<obj>, <cond>, [<pos>])

     Minimiza la función objetivo lineal <obj> sujeta a ciertas
     restricciones lineales <cond>, siendo ésta una lista de ecuaciones
     o inecuaciones lineales.  En las inecuaciones estrictas se
     reemplaza '>' por '>=' y '<' por '<='.  El argumento opcional <pos>
     es una lista de variables de decisión que se suponen positivas.

     Si el mínimo existe, 'minimize_lp' devuelve una lista que contiene
     el valor mínimo de la función objetivo y una lista de valores para
     las variables de decisión con los que se alcanza el mínimo.  Si el
     problema no está acotado, devuelve el mensaje "Problem not
     bounded!"  y si el problema no es factible, devuelve el mensaje
     "Problem not feasible!".

     Las variables de decisión no se suponen no negativas.  Si todas las
     variables de decisión son no negativas, asígnese el valor 'true' a
     la variable 'nonegative_lp'.  Si sólo algunas de las variables de
     decisión son positivas, lístense en el argumento opcional <pos>, lo
     cual es más eficiente que añadir restricciones.

     La función 'minimize_lp' utiliza el algoritmo simplex implementado
     en la función 'linear_program' de Maxima.

     Para usar esta función, cárguese primero el paquete con la
     instrucción 'load(simplex);'.

     Ejemplos:

          (%i1) minimize_lp(x+y, [3*x+y=0, x+2*y>2]);
                                4       6        2
          (%o1)                [-, [y = -, x = - -]]
                                5       5        5
          (%i2) minimize_lp(x+y, [3*x+y>0, x+2*y>2]), nonegative_lp=true;
          (%o2)                [1, [y = 1, x = 0]]
          (%i3) minimize_lp(x+y, [3*x+y=0, x+2*y>2]), nonegative_lp=true;
          (%o3)                Problem not feasible!
          (%i4) minimize_lp(x+y, [3*x+y>0]);
          (%o4)                Problem not bounded!

     Véanse también 'maximize_lp', 'nonegative_lp' y 'epsilon_lp'.

 -- Variable opcional: nonegative_lp
     Valor por defecto: 'false'

     Si 'nonegative_lp' vale 'true' todas las variables de decisión
     pasadas a 'minimize_lp' y a 'maximize_lp' se suponen positivas.

     Véase también 'minimize_lp'.


File: maxima.info,  Node: simplification,  Next: solve_rec,  Prev: simplex,  Up: Top

72 simplification
*****************

* Menu:

* Introducción a simplification::
* Paquete absimp::
* Paquete facexp::
* Paquete functs::
* Paquete ineq::
* Paquete rducon::
* Paquete scifac::
* Paquete sqdnst::


File: maxima.info,  Node: Introducción a simplification,  Next: Paquete absimp,  Prev: simplification,  Up: simplification

72.1 Introducción a simplification
==================================

El directorio 'maxima/share/simplification' contiene programas que
implementan algunas reglas y funciones para simplificar expresiones, así
como ciertas funciones no relacionadas con la simplificación.


File: maxima.info,  Node: Paquete absimp,  Next: Paquete facexp,  Prev: Introducción a simplification,  Up: simplification

72.2 Paquete absimp
===================

El paquete 'absimp' contiene reglas para aplicar patrones que extienden
el sistema de reglas nativo de Maxima para las funciones 'abs' y
'signum', respetando las relaciones establecidas con la función 'assume'
o con declaraciones tales como 'modedeclare (m, even, n, odd)' para
enteros pares o impares.

En el paquete 'absimp' se definen las funciones 'unitramp' y 'unitstep'
en términos de 'abs' y 'signum'.

La instrucción 'load (absimp)' carga este paquete y 'demo (absimp)'
desarrolla una demostración sobre el uso del mismo.

Ejemplos:

     (%i1) load (absimp)$
     (%i2) (abs (x))^2;
                                            2
     (%o2)                                 x
     (%i3) diff (abs (x), x);
                                           x
     (%o3)                               ------
                                         abs(x)
     (%i4) cosh (abs (x));
     (%o4)                               cosh(x)


File: maxima.info,  Node: Paquete facexp,  Next: Paquete functs,  Prev: Paquete absimp,  Up: simplification

72.3 Paquete facexp
===================

El paquete 'facexp' contiene varias funciones que le aportan al usuario
la posibilidad de estructurar expresiones controlando su expansión.
Esta capacidad es especialmente útil cuando la expresión contiene
variables con significado físico, ya que se suele dar el caso de que la
forma más sencilla para estas expresiones se obtiene cuando se expanden
respecto de estas variables y luego se factoriza respecto de sus
coeficientes.  Si bien es cierto que este procedimiento no es difícil de
llevar a cabo con las funciones estándar de Maxima, pueden ser
necesarios algunos retoques adicionales que sí pueden ser más difíciles
de hacer.

La función 'facsum' y sus formas relacionadas proporcionan un método
para controlar la estructura de expresiones.  La función 'collectterms'
puede usarse para añadir dos o más expresiones que ya hayan sido
simplificadas de la forma indicada, sin necesidad de volver a
simplificar la expresión completa.  Esta función puede ser útil cuando
las expresiones sean largas.

La instrucción 'load (facexp)' carga este paquete y 'demo (facexp)' hace
una demostración sobre su uso.

 -- Función: facsum (<expr>, <arg_1>, ..., <arg_n>)

     Devuelve una expresión equivalente a <expr>, la cual depende de los
     argumentos <arg_1>, ..., <arg_n>, y éstos pueden ser de cualquiera
     de las formas aceptables para 'ratvars', o listas de estas formas.
     Si los argumentos no son listas, la forma devuelta se expande
     completamente con respecto de los argumentos, siendo los
     coeficientes de tales argumentos factorizados.  Estos coeficientes
     no contienen a ninguno de los argumentos, excepto quizás de una
     forma no racional.

     En caso de que cualquiera de los argumentos sea una lista, entonces
     todos ellos se combinan en una única lista, y en lugar de llamar a
     'factor' para los coeficientes de los argumentos, 'facsum' se llama
     a sí misma utilizando esta nueva lista única como lista de
     argumentos.

     Es posible que se quiera utilizar 'facsum' con respecto a
     expresiones más complicadas, tales como 'log (x + y)'.  Estos
     argumentos son también admisibles.

     En ocasiones puede ser necesario obtener cualquiera de las formas
     anteriores especificadas por sus operadores principales.  Por
     ejemplo, se puede querer aplicar 'facsum' con respecto a todos los
     'log'; en este caso, se puede incluir entre los argumentos bien los
     'log' específicos que se quieran tratar de esta manera, bien la
     expresión 'operator (log)' o ''operator (log)'.  Si se quiere
     aplicar 'facsum' a <expr> con respecto a los operadores <op_1>,
     ..., <op_n>, se debe evaluar 'facsum (<expr>, operator (<op_1>,
     ..., <op_n>))'.  La forma 'operator' puede aparecer también dentro
     de las listas de argumentos.

     Además, dándole valores a las variables opcionales 'facsum_combine'
     y 'nextlayerfactor' se puede controlar el resultado de 'facsum'.

 -- Variable global: nextlayerfactor
     Valor por defecto: 'false'

     Si 'nextlayerfactor' vale 'true', las llamadas recursivas de
     'facsum' se aplican a los factores de la forma factorizada de los
     coeficientes de los argumentos.

     Si vale 'false', 'facsum' se aplica a cada coeficiente como un todo
     cada vez que se efectúen llamadas recursivas a 'facsum'.

     La inclusión del átomo 'nextlayerfactor' en la lista de argumentos
     de 'facsum' tiene el mismo efecto que 'nextlayerfactor: true', pero
     solamente para el siguiente nivel de la expresión.  Puesto que
     'nextlayerfactor' toma siempre uno de los valores 'true' o 'false',
     debe aparecer comentado (comilla simple) cada vez que aparezca en
     la lista de argumentos de 'facsum'.

 -- Variable global: facsum_combine
     Valor por defecto: 'true'

     La variable 'facsum_combine' controla la forma del resultado final
     devuelto por 'facsum' si su argumento es un cociente de polinomios.
     Si 'facsum_combine' vale 'false', el resultado será una suma
     completamente expandida, pero si vale 'true', la expresión devuelta
     es un cociente de polinomios.

 -- Función: factorfacsum (<expr>, <arg_1>, ... <arg_n>)
     Devuelve una expresión equivalente a <expr> obtenida aplicando
     'facsum' a los factores de <expr>, de argumentos <arg_1>, ...
     <arg_n>.  Si alguno de los factores de <expr> se eleva a una
     potencia, tanto el factor como el exponente se procesarán de esta
     manera.

 -- Función: collectterms (<expr>, <arg_1>, ..., <arg_n>)
     Si algunas expresiones fueron ya simplificadas con 'facsum',
     'factorfacsum', 'factenexpand', 'facexpten' o 'factorfacexpten',
     debiendo ser luego sumadas, puede ser conveniente combinarlas
     utilizando la función 'collecterms', la cual admite como argumentos
     todos aquéllos que se puedan pasar a las anteriormente citadas
     funciones, con la excepción de 'nextlayerfactor', que no tiene
     efecto alguno sobre 'collectterms'.  La ventaja de 'collectterms'
     es que devuelve una forma similar a la de 'facsum', pero debido a
     que suma expresiones que ya han sido previamente procesadas, no
     necesita repetir esta operación, lo cual resulta ser especialmente
     útil cuando las expresiones a sumar son muy grandes.


File: maxima.info,  Node: Paquete functs,  Next: Paquete ineq,  Prev: Paquete facexp,  Up: simplification

72.4 Paquete functs
===================

 -- Función: rempart (<expr>, <n>)
     Elimina la parte <n> de la expresión <expr>.

     Si <n> es una lista de la forma '[<l>, <m>]', entonces las partes
     desde <l> a <m> serán eliminadas.

     Para hacer uso de esta función ejecutar 'load(functs)'.

 -- Función: wronskian ([<f_1>, ..., <f_n>], <x>)
     Devuelve la matriz wronskiana de las expresiones <f_1>, ..., <f_n>
     dependeientes de la variable <x>.  El determinante de la matriz
     wronskiana es el determinante wronskiano de la lista de
     expresiones.

     Para hacer uso de esta función ejecutar 'load(functs)'.

     Ejemplo:

          (%i1) load(functs)$
          (%i2) wronskian([f(x), g(x)],x);
          (%o2) matrix([f(x),g(x)],['diff(f(x),x,1),'diff(g(x),x,1)])

 -- Función: tracematrix (<M>)
     Devuelve la traza (suma de los elementos de la diagonal) de la
     matriz <M>.

     Para hacer uso de esta función ejecutar 'load(functs)'.

 -- Función: rational (<z>)
     Multiplica el numerador y denominador de <z> por el complejo
     conjugado del denominador, racionalizando así el denominador.
     Devuelve la expresión canónica racional (canonical rational
     expression, CRE) si el argumento <z> es de esta forma, en caso
     contrario devuelve una expresión en formato común.

     Para hacer uso de esta función ejecutar 'load(functs)'.

 -- Función: nonzeroandfreeof (<x>, <expr>)
     Devuelve 'true' si <expr> es diferente de cero y 'freeof (<x>,
     <expr>)' devuelve 'true'.  En caso contrario devuelve 'false'.

     Para hacer uso de esta función ejecutar 'load(functs)'.

 -- Función: linear (<expr>, <x>)
     Si <expr> es una expresión de la forma '<a>*<x> + <b>', siendo <a>
     no nulo y los argumentos <a> y <b> no contienen a <x>, 'linear'
     devuelve una lista con tres ecuaciones, una por cada variable <b>,
     <a> y <x>.  Si no se cumple la condición anterior, 'linear'
     devuelve 'false'.

     Para hacer uso de esta función ejecutar 'load(functs)'.

     Ejemplo:

          (%i1) load (antid);
          (%o1)        /usr/share/maxima/5.29.1/share/integration/antid.mac
          (%i2) linear ((1 - w)*(1 - x)*z, z);
          (%o2)  [bargumentb = 0, aargumenta = (w - 1) x - w + 1, xargumentx = z]
          (%i3) linear (cos(u - v) + cos(u + v), u);
          (%o3)                                false

 -- Función: gcdivide (<p>, <q>)
     Si la variable opcional 'takegcd' vale 'true', que es su valor por
     defecto, 'gcdivide' divide los polinomios <p> y <q> por su máximo
     común divisor y devuelve el cociente de los resultados.  'gcdivide'
     hace una llamada a la función 'ezgcd' para dividir los polinomios
     por su máximo común divisor.

     Si 'takegcd' vale 'false', 'gcdivide' devuelve el cociente
     '<p>/<q>'.

     Para hacer uso de esta función ejecutar 'load(functs)'.

     Véanse también 'ezgcd', 'gcd', 'gcdex' y 'poly_gcd'.

     Ejemplos:

          (%i1) load(functs)$

          (%i2) p1:6*x^3+19*x^2+19*x+6;
                                  3       2
          (%o2)                6 x  + 19 x  + 19 x + 6
          (%i3) p2:6*x^5+13*x^4+12*x^3+13*x^2+6*x;
                            5       4       3       2
          (%o3)          6 x  + 13 x  + 12 x  + 13 x  + 6 x
          (%i4) gcdivide(p1, p2);
                                       x + 1
          (%o4)                        ------
                                        3
                                       x  + x
          (%i5) takegcd:false;
          (%o5)                         false
          (%i6) gcdivide(p1, p2);
                                 3       2
                              6 x  + 19 x  + 19 x + 6
          (%o6)          ----------------------------------
                            5       4       3       2
                         6 x  + 13 x  + 12 x  + 13 x  + 6 x
          (%i7) ratsimp(%);
                                       x + 1
          (%o7)                        ------
                                        3
                                       x  + x

 -- Función: arithmetic (<a>, <d>, <n>)
     Devuelve el <n>-ésimo término de la progresión aritmética '<a>, <a>
     + <d>, <a> + 2*<d>, ..., <a> + (<n> - 1)*<d>'.

     Para hacer uso de esta función ejecutar 'load(functs)'.

 -- Función: geometric (<a>, <r>, <n>)
     Devuelve el <n>-ésimo término de la progresión geométrica '<a>,
     <a>*<r>, <a>*<r>^2, ..., <a>*<r>^(<n> - 1)'.

     Para hacer uso de esta función ejecutar 'load(functs)'.

 -- Función: harmonic (<a>, <b>, <c>, <n>)
     Devuelve el <n>-ésimo término de la progresión armónica '<a>/<b>,
     <a>/(<b> + <c>), <a>/(<b> + 2*<c>), ..., <a>/(<b> + (<n> -
     1)*<c>)'.

     Para hacer uso de esta función ejecutar 'load(functs)'.

 -- Función: arithsum (<a>, <d>, <n>)
     Devuelve la suma de la progresión aritmética desde hasta el
     <n>-ésimo término.

     Para hacer uso de esta función ejecutar 'load(functs)'.

 -- Función: geosum (<a>, <r>, <n>)
     Devuelve la suma de la sucesión geométrica hasta el <n>-ésimo
     término.  Si <n> es infinito ('inf') la suma será finita sólo si el
     valor absoluto de <r> es menor que 1.

     Para hacer uso de esta función ejecutar 'load(functs)'.

 -- Función: gaussprob (<x>)
     Devuelve la función de densidad de probabilidad, normal
     '%e^(-<x>^2/2) / sqrt(2*%pi)'.

     Para hacer uso de esta función ejecutar 'load(functs)'.

 -- Función: gd (<x>)
     Devuelve la función de Gudermann, '2*atan(%e^x)-%pi/2'.

     Para hacer uso de esta función ejecutar 'load(functs)'.

 -- Función: agd (<x>)
     Devuelve la inversa de la función de Gudermann, 'log (tan (%pi/4 +
     x/2))'.

     Para hacer uso de esta función ejecutar 'load(functs)'.

 -- Función: vers (<x>)
     Devuelve '1 - cos (x)'.

     Para hacer uso de esta función ejecutar 'load(functs)'.

 -- Función: covers (<x>)
     Devuelve '1 - sin (<x>)'.

     Para hacer uso de esta función ejecutar 'load(functs)'.

 -- Función: exsec (<x>)
     Devuelve 'sec (<x>) - 1'.

     Para hacer uso de esta función ejecutar 'load(functs)'.

 -- Función: hav (<x>)
     Devuelve '(1 - cos(x))/2'.

     Para hacer uso de esta función ejecutar 'load(functs)'.

 -- Función: combination (<n>, <r>)
     Calcula el número de combinaciones de <n> objetos tomados de <r> en
     <r>.

     Para hacer uso de esta función ejecutar 'load(functs)'.

 -- Función: permutation (<n>, <r>)
     Calcula el número de permutaciones de <r>, seleccionados de un
     conjunto de <n>.

     Para hacer uso de esta función ejecutar 'load(functs)'.


File: maxima.info,  Node: Paquete ineq,  Next: Paquete rducon,  Prev: Paquete functs,  Up: simplification

72.5 Paquete ineq
=================

El paquete 'ineq' contiene reglas de simplificación para desigualdades

Una sesión de ejemplo:

     (%i1) load(ineq)$
     Warning: Putting rules on '+' or '*' is inefficient, and may not work.
     Warning: Putting rules on '+' or '*' is inefficient, and may not work.
     Warning: Putting rules on '+' or '*' is inefficient, and may not work.
     Warning: Putting rules on '+' or '*' is inefficient, and may not work.
     Warning: Putting rules on '+' or '*' is inefficient, and may not work.
     Warning: Putting rules on '+' or '*' is inefficient, and may not work.
     Warning: Putting rules on '+' or '*' is inefficient, and may not work.
     Warning: Putting rules on '+' or '*' is inefficient, and may not work.
     (%i2) a>=4;  /* a sample inequality */
     (%o2)                               a >= 4
     (%i3) (b>c)+%; /* add a second, strict inequality */
     (%o3)                            b + a > c + 4
     (%i4) 7*(x<y); /* multiply by a positive number */
     (%o4)                              7 x < 7 y
     (%i5) -2*(x>=3*z); /* multiply by a negative number */
     (%o5)                           - 2 x <= - 6 z
     (%i6) (1+a^2)*(1/(1+a^2)<=1); /* Maxima knows that 1+a^2 > 0 */
                                             2
     (%o6)                             1 <= a  + 1
     (%i7) assume(x>0)$ x*(2<3); /* assuming x>0 */
     (%o7)                              2 x < 3 x
     (%i8) a>=b; /* another inequality */
     (%o8)                               a >= b
     (%i9) 3+%; /* add something */
     (%o9)                           a + 3 >= b + 3
     (%i10) %-3; /* subtract it out */
     (%o10)                              a >= b
     (%i11) a>=c-b; /* yet another inequality */
     (%o11)                            a >= c - b
     (%i12) b+%; /* add b to both sides */
     (%o12)                            b + a >= c
     (%i13) %-c; /* subtract c from both sides */
     (%o13)                         - c + b + a >= 0
     (%i14) -%;  /* multiply by -1 */
     (%o14)                          c - b - a <= 0
     (%i15) (z-1)^2>-2*z; /* determining truth of assertion */
                                           2
     (%o15)                         (z - 1)  > - 2 z
     (%i16) expand(%)+2*z; /* expand this and add 2*z to both sides */
                                        2
     (%o16)                            z  + 1 > 0
     (%i17) %,pred;
     (%o17)                               true

Debe tenerse cuidado con el uso de paréntesis que incluyan
desigualdades; si se escribe '(A > B) + (C = 5)' el resultado es 'A + C
> B + 5', pero 'A > B + C = 5' es un error sintáctico y '(A > B + C) =
5' es una cosa completamente diferente.

Ejecútese 'disprule (all)' para ver la lista completa de las reglas
definidas.

Maxima preguntará al usuario cuando desconozca el signo de una cantidad
que multiplica a una desigualdad.

Los fallos más comunes son:

     eq: a > b;
     2*eq;
     % - eq;

Otro problema es el producto de una desigualdad por cero.  Si se escribe
'x*<some_inequality>' y Maxima pregunta por el signo de 'x' y se
responde que vale 'zero' (o 'z'), el programa devuelve
'x*<some_inequality>' sin hacer uso de la información de que 'x' es 0.
En tal caso se debería escribir 'ev (%, x: 0)', ya que la base de datos
sólo será utilizada para fines comparativos y no para evaluar 'x'.

El usuario puede apreciar que las respuestas son más lentas al cargarse
este paquete, ya que el simplificador deberá examinar más reglas que
cuando no se hace uso del paquete, por lo que puede ser conveniente
borrar estas reglas cuando ya no se haga uso de ellas.  Ejecútese 'kill
(rules)' para eliminar todas las reglas (incluidas las definidas por el
usuario); también es posible eliminar parte de ellas o utilizar
'remrule' sobre una reglas específica.

Nótese que si se carga este paquete después de haber definido otras
reglas de igual nombre,se borrarán las antiguas.  Las reglas de este
paquete son: '*rule1', ..., '*rule8', '+rule1', ..., '+rule18',
debiéndose encerrar entre comillas el nombre de la reglas para
referenciarse a ellas, como en 'remrule ("+", "+rule1")' para eliminar
la primera regla sobre '"+"', o 'disprule ("*rule2")' para mostrar la
definición de la segunda regla multiplicativa.


File: maxima.info,  Node: Paquete rducon,  Next: Paquete scifac,  Prev: Paquete ineq,  Up: simplification

72.6 Paquete rducon
===================

 -- Función: reduce_consts (<expr>)
     Sustituye subexpresiones constantes de <expr> por átomos, guardando
     la definición de todos ellos en la lista de ecuaciones 'const_eqns'
     y devolviendo el expresión <expr> ya modificada.  Se consideran
     partes constantes de <expr> aquellas que devuelven 'true' cuando se
     les aplica la función 'constantp', por lo que antes de llamar a
     'reduce_consts' se debe ejecutar

          declare ([<objetos a los que se quiera dar la propiedad de ser constantes>], constant)$

     para crear la base de datos de las cantidades constantes presentes
     en la expresión.

     Si se pretende generar código Fortran después de estos cálculos
     simbólicos, una de las primeras secciones del código debe ser el
     cálculo de las constantes.  Para generar este segmento de código
     hacer

          map ('fortran, const_eqns)$

     Junto a 'const_eqns', otras variables que afectan a 'reduce_consts'
     son:

     'const_prefix' (Valor por defecto: 'xx') es la cadena de caracteres
     utilizada como prefijo para todos los símbolos generados por
     'reduce_consts' para representar subexpresiones constantes.

     'const_counter' (Valor por defecto: 1) es el índice entero
     utilizado para generar los símbolos que representen a las
     subexpresiones constantes encontradas por 'reduce_consts'.

     La instrucción 'load (rducon)' carga esta función y 'demo (rducon)'
     hace una demostración sobre su uso.


File: maxima.info,  Node: Paquete scifac,  Next: Paquete sqdnst,  Prev: Paquete rducon,  Up: simplification

72.7 Paquete scifac
===================

 -- Función: gcfac (<expr>)
     Es una función de factorización que intenta aplicar la misma
     heurística que los humanos cuando tratan de hacer las expresiones
     más simples, limitándose a la factorización de monomios.  En caso
     de sumas, 'gcfac' hace lo siguiente:

       1. Factoriza los enteros.
       2. Factoriza las potencias mayores de los términos que aparecen
          como coeficientes, independientemente de su complejidad.
       3. Utiliza (1) y (2) en la factorización de pares de términos
          adyacentes.
       4. Aplica estas técnicas repetida y recursivamente hasta que la
          expresión deje de sufrir cambios.

     En general, el apartado (3) no hace una factorización óptima debido
     a la naturaleza combinatoria y compleja de encontrar cuál de todas
     las ordenaciones posibles de los pares da lugar a la expresión más
     compacta.

     La instrucción 'load (scifac)' carga esta función y 'demo (scifac)'
     hace una demostración sobre su uso.


File: maxima.info,  Node: Paquete sqdnst,  Prev: Paquete scifac,  Up: simplification

72.8 Paquete sqdnst
===================

 -- Función: sqrtdenest (<expr>)
     Reduce expresiones en las que se encuentren raíces cuadradas
     anidadas, siempre que sea posible

     Ejemplo:

          (%i1) load (sqdnst)$
          (%i2) sqrt(sqrt(3)/2+1)/sqrt(11*sqrt(2)-12);
                                              sqrt(3)
                                         sqrt(------- + 1)
                                                 2
          (%o2)                        ---------------------
                                       sqrt(11 sqrt(2) - 12)
          (%i3) sqrtdenest(%);
                                            sqrt(3)   1
                                            ------- + -
                                               2      2
          (%o3)                            -------------
                                              1/4    3/4
                                           3 2    - 2

     A veces conviene aplicar 'sqrtdenest' más de una vez, como en el
     caso '(19601-13860 sqrt(2))^(7/4)'.

     La sentencia 'load (sqdnst)' carga esta función.


File: maxima.info,  Node: solve_rec,  Next: stats,  Prev: simplification,  Up: Top

73 solve_rec
************

* Menu:

* Introducción a solve_rec::
* Funciones y variables para solve_rec::


File: maxima.info,  Node: Introducción a solve_rec,  Next: Funciones y variables para solve_rec,  Prev: solve_rec,  Up: solve_rec

73.1 Introducción a solve_rec
=============================

El paquete 'solve_rec' resuelve expresiones recurrentes lineales con
coeficientes polinomiales.

Ejecútese 'demo(solve_rec);' para ver una demostración sobre la
utilización de este paquete.

Ejemplo:

     (%i1) load("solve_rec")$
     (%i2) solve_rec((n+4)*s[n+2] + s[n+1] - (n+1)*s[n], s[n]);
                                         n
                      %k  (2 n + 3) (- 1)          %k
                        1                            2
     (%o2)       s  = -------------------- + ---------------
                  n     (n + 1) (n + 2)      (n + 1) (n + 2)


File: maxima.info,  Node: Funciones y variables para solve_rec,  Prev: Introducción a solve_rec,  Up: solve_rec

73.2 Funciones y variables para solve_rec
=========================================

 -- Función: reduce_order (<rec>, <sol>, <var>)

     Reduce el orden de la expresión recurrente lineal <rec> cuando se
     conoce una solución particular <sol>.  La recurrencia reducida
     puede utilizarse para obterner más soluciones.

     Ejemplo:

          (%i3) rec: x[n+2] = x[n+1] + x[n]/n;
                                                x
                                                 n
          (%o3)               x      = x      + --
                               n + 2    n + 1   n
          (%i4) solve_rec(rec, x[n]);
          WARNING: found some hypergeometrical solutions!
          (%o4)                    x  = %k  n
                                    n     1
          (%i5) reduce_order(rec, n, x[n]);
          (%t5)                    x  = n %z
                                    n       n

                                     n - 1
                                     ====
                                     \
          (%t6)                %z  =  >     %u
                                 n   /        %j
                                     ====
                                     %j = 0

          (%o6)             (- n - 2) %u     - %u
                                        n + 1     n
          (%i6) solve_rec((n+2)*%u[n+1] + %u[n], %u[n]);
                                               n
                                      %k  (- 1)
                                        1
          (%o6)                 %u  = ----------
                                  n    (n + 1)!

          So the general solution is

                       n - 1
                       ====        j
                       \      (- 1)
                 %k  n  >    -------- + %k  n
                   2   /     (j + 1)!     1
                       ====
                       j = 0

 -- Variable opcional: simplify_products
     Valor por defecto: 'true'

     Si 'simplify_products' vale 'true', 'solve_rec' intentará
     simplificar los productos del resultado.

     Véase también 'solve_rec'.

 -- Función: simplify_sum (<expr>)

     Intenta reducir todas las sumas que aparecen en <expr> a una forma
     cerrada.

     Para utilizar esta función cárguese previamente el paquete
     'simplify_sum' ejecutando la instrucción 'load(simplify_sum)'.

     Ejemplo:

          (%i1) load("simplify_sum")$
          (%i2) sum(binomial(n+k,k)/2^k,k,1,n)+sum(binomial(2*n,2*k),k,1,n);
                  n                          n
                 ====                       ====
                 \     binomial(n + k, k)   \
          (%o2)   >    ------------------ +  >    binomial(2 n, 2 k)
                 /              k           /
                 ====          2            ====
                 k = 1                      k = 1
          (%i3) simplify_sum(%);

                                   2 n - 1    n
          (%o3)                   2        + 2  - 2

 -- Función: solve_rec (<eqn>, <var>, [<init>])

     Obtiene las soluciones hipergeométricas de la expresión recurrente
     <eqn> con coeficientes lineales en la variable <var>.  Los
     argumentos opcionales <init> son condiciones iniciales.

     La función 'solve_rec' puede resolver expresiones recurrentes con
     coeficientes constantes, encuentra soluciones hipergeométricas de
     expresiones recurrentes lineales homogéneas con coeficientes
     polinomiales, obtiene soluciones racionales de expresiones
     recurrentes lineales con coeficientes lineales y resuelve también
     expresiones recurrentes de Ricatti.

     Nótese que el tiempo de ejecución del algoritmo para encontrar
     soluciones hipergeométricas es exponencial respecto del grado del
     coeficiente principal.

     Para hacer uso de esta función ejecútese previamente
     'load(solve_rec);'.

     Ejemplo de recurrencia lineal con coeficientes constantes:

          (%i2) solve_rec(a[n]=a[n-1]+a[n-2]+n/2^n, a[n]);
                                  n          n
                     (sqrt(5) - 1)  %k  (- 1)
                                      1           n
          (%o2) a  = ------------------------- - ----
                 n               n                  n
                                2                5 2
                                                          n
                                             (sqrt(5) + 1)  %k
                                                              2    2
                                           + ------------------ - ----
                                                      n              n
                                                     2            5 2

     Ejemplo de recurrencia lineal con coeficientes polinomiales:

          (%i7) 2*x*(x+1)*y[x] - (x^2+3*x-2)*y[x+1] + (x-1)*y[x+2];
                                   2
          (%o7) (x - 1) y      - (x  + 3 x - 2) y      + 2 x (x + 1) y
                         x + 2                   x + 1                x
          (%i8) solve_rec(%, y[x], y[1]=1, y[3]=3);
                                        x
                                     3 2    x!
          (%o9)                 y  = ---- - --
                                 x    4     2

     Ejemplo de recurrencia de Ricatti:

          (%i2) x*y[x+1]*y[x] - y[x+1]/(x+2) + y[x]/(x-1) = 0;
                                      y         y
                                       x + 1     x
          (%o2)         x y  y      - ------ + ----- = 0
                           x  x + 1   x + 2    x - 1
          (%i3) solve_rec(%, y[x], y[3]=5)$
          (%i4) ratsimp(minfactorial(factcomb(%)));
                                             3
                                         30 x  - 30 x
          (%o4) y  = - -------------------------------------------------
                 x        6      5       4       3       2
                       5 x  - 3 x  - 25 x  + 15 x  + 20 x  - 12 x - 1584

     Véanse también 'solve_rec_rat', 'simplify_products' y
     'product_use_gamma'.

 -- Función: solve_rec_rat (<eqn>, <var>, [<init>])

     Calcula las soluciones racionales de las expresiones recurrentes
     lineales.  Véase 'solve_rec' para la descripción de sus argumentos.

     Para hacer uso de esta función ejecútese previamente
     'load(solve_rec);'.

     Ejemplo:

          (%i1) (x+4)*a[x+3] + (x+3)*a[x+2] - x*a[x+1] + (x^2-1)*a[x];
          (%o1)  (x + 4) a      + (x + 3) a      - x a
                          x + 3            x + 2      x + 1
                                                             2
                                                         + (x  - 1) a
                                                                      x
          (%i2) solve_rec_rat(% = (x+2)/(x+1), a[x]);
                                 1
          (%o2)      a  = ---------------
                      x   (x - 1) (x + 1)

     Véase también 'solve_rec'.

 -- Variable opcional: product_use_gamma
     Valor por defecto:'true'

     Si 'product_use_gamma' vale 'true', 'solve_rec' introduce la
     función gamma en la expresión del resultado cuando se simplifican
     productos.

     Véanse también 'simplify_products' y 'solve_rec'.

 -- Función: summand_to_rec (<summand>, <k>, <n>)

     Devuelve la expresión recurrente que satisface la suma

              inf
              ====
              \
               >     sumando
              /
              ====
            k = minf

     donde el sumando es hipergeométrico en <k> y <n>.

     Para hacer uso de esta función deben cargarse previamente los
     paquetes 'zeilberger' y 'solve_rec' mediante la ejecución de las
     sentencias 'load(solve_rec)' y 'load(zeilberger)'.

          (%i17) load("zeilberger")$
          (%i18) summand: binom(3*k+1,k)*binom(3*(n-k),n-k)/(3*k+1)$
          (%i19) summand_to_rec(summand, k, n);
          Dependent equations eliminated:  (3 2)
          (%o19) - 4 (n + 2) (2 n + 3) (2 n + 5) sm
                                                   n + 2
                              2
           + 12 (2 n + 3) (9 n  + 27 n + 22) sm
                                               n + 1
           - 81 (n + 1) (3 n + 2) (3 n + 4) sm
                                              n
          (%i21) sum(''summand, k, 0, n), n=0;
          (%o21)                       1
          (%i22) sum(''summand, k, 0, n), n=1;
          (%o22)                       4
          (%i23) product_use_gamma: false$
          (%i24) solve_rec(%o19, sm[n], sm[0]=1, sm[1]=4);
                        n - 1               n - 1
                        /===\               /===\
                         ! !                 ! !                n
                       ( ! !   (3 %j + 2)) ( ! !   (3 %j + 4)) 3
                         ! !                 ! !
                        %j = 0              %j = 0
          (%o24) sm  = ------------------------------------------
                   n            n - 1
                                /===\
                                 ! !                n
                               ( ! !   (2 %j + 3)) 2  n!
                                 ! !
                                %j = 0


File: maxima.info,  Node: stats,  Next: stirling,  Prev: solve_rec,  Up: Top

74 stats
********

* Menu:

* Introducción a stats::
* Funciones y variables para inference_result::
* Funciones y variables para stats::
* Funciones y variables para distribuciones especiales::


File: maxima.info,  Node: Introducción a stats,  Next: Funciones y variables para inference_result,  Prev: Top,  Up: Top

74.1 Introducción a stats
=========================

El paquete 'stats' contiene procedimientos clásicos sobre inferencia
estadística y contraste de hipótesis.

Todas estas funciones devuelven un objeto Maxima de tipo
'inference_result', el cual contiene los resultados necesarios para
hacer inferencias sobre la población y toma de decisiones.

La variable global 'stats_numer' controla si los resultados deben darse
en formato decimal o simbólico y racional; su valor por defecto es
'true', por lo que el formato de salida es decimal.

El paquete 'descriptive' contiene algunas utilidades para manipular
estructuras de datos (listas y matrices); por ejemplo para extraer
submuestras.  También contiene algunos ejemplos sobre cómo utilizar el
paquete 'numericalio' para leer datos de ficheros en texto plano.
Véanse 'descriptive' y 'numericalio' para más detalles.

El paquete 'stats' carga en memoria los paquetes 'descriptive',
'distrib' y 'inference_result'.

Para comentarios, errores o sugerencias, contáctese con el autor en

<'mario ARROBA edu PUNTO xunta PUNTO es'>.


File: maxima.info,  Node: Funciones y variables para inference_result,  Next: Funciones y variables para stats,  Prev: Introducción a stats,  Up: Top

74.2 Funciones y variables para inference_result
================================================

 -- Función: inference_result (<title>, <values>, <numbers>)

     Construye un objeto 'inference_result' del tipo devuelto por las
     funciones estadísticas.  El argumento <title> es una cadena con el
     nombre del procedimiento; <values> es una lista con elementos de la
     forma 'symbol = value' y <numbers> es una lista con enteros
     positivos desde uno hasta 'length(<values>)', que indican qué
     valores serán mostrados por defecto.

     Ejemplo:

     Este es un ejemplo que muestra los resultados asociados a un
     rectángulo.  El título de este objeto es la cadena '"Rectangle"',
     el cual almacena cinco resultados, a saber, ''base', ''height',
     ''diagonal', ''area' y ''perimeter', pero sólo muestra el primero,
     segundo, quinto y cuarto.  El resultado ''diagonal' también se
     almacena en este objeto, pero no se muestra por defecto; para tener
     acceso a este valor, hágase uso de la función 'take_inference'.

          (%i1) load(inference_result)$
          (%i2) b: 3$ h: 2$
          (%i3) inference_result("Rectangle",
                                  ['base=b,
                                   'height=h,
                                   'diagonal=sqrt(b^2+h^2),
                                   'area=b*h,
                                   'perimeter=2*(b+h)],
                                  [1,2,5,4] );
                                  |   Rectangle
                                  |
                                  |    base = 3
                                  |
          (%o3)                   |   height = 2
                                  |
                                  | perimeter = 10
                                  |
                                  |    area = 6
          (%i4) take_inference('diagonal,%);
          (%o4)                        sqrt(13)

     Véase también 'take_inference'.

 -- Función: inferencep (<obj>)

     Devuelve 'true' o 'false', dependiendo de que <obj> sea un objeto
     de tipo 'inference_result' o no.

 -- Función: items_inference (<obj>)

     Devuelve una lista con los nombres de los elementos almacenados en
     <obj>, el cual debe ser un objeto de tipo 'inference_result'.

     Ejemplo:

     El objeto 'inference_result' almacena dos valores, cuyos nombres
     son ''pi' y ''e', pero sólo se muestra el segundo.  La función
     'items_inference' devuelve los nombres de todos los elementos
     almacenados, independientemente de que sean mostrados o no.

          (%i1) load(inference_result)$
          (%i2) inference_result("Hi", ['pi=%pi,'e=%e],[2]);
                                      |   Hi
          (%o2)                       |
                                      | e = %e
          (%i3) items_inference(%);
          (%o3)                        [pi, e]

 -- Función: take_inference (<n>, <obj>)
 -- Función: take_inference (<name>, <obj>)
 -- Función: take_inference (<list>, <obj>)

     Si <n> es un entero positivo, devuelve el <n>-ésimo valor
     almacenado en <obj>; si el símbolo <name> es el nombre de uno de
     los elementos almacenados, también devuelve su valor.  Si el primer
     elemento es una lista de números y/o símbolos, la función
     'take_inference' devuelve una lista con los resultados
     correspondientes.

     Ejemplo:

     Dado un objeto 'inference_result', la función 'take_inference' es
     invocada para extraer cierta información almacenada en él.

          (%i1) load(inference_result)$
          (%i2) b: 3$ h: 2$
          (%i3) sol: inference_result("Rectangle",
                                      ['base=b,
                                       'height=h,
                                       'diagonal=sqrt(b^2+h^2),
                                       'area=b*h,
                                       'perimeter=2*(b+h)],
                                      [1,2,5,4] );
                                  |   Rectangle
                                  |
                                  |    base = 3
                                  |
          (%o3)                   |   height = 2
                                  |
                                  | perimeter = 10
                                  |
                                  |    area = 6
          (%i4) take_inference('base,sol);
          (%o4)                           3
          (%i5) take_inference(5,sol);
          (%o5)                          10
          (%i6) take_inference([1,'diagonal],sol);
          (%o6)                     [3, sqrt(13)]
          (%i7) take_inference(items_inference(sol),sol);
          (%o7)                [3, 2, sqrt(13), 6, 10]

     Véanse también 'inference_result' y 'take_inference'.


File: maxima.info,  Node: Funciones y variables para stats,  Next: Funciones y variables para distribuciones especiales,  Prev: Funciones y variables para inference_result,  Up: Top

74.3 Funciones y variables para stats
=====================================

 -- Variable opcional: stats_numer
     Valor por defecto: 'true'

     Cuando 'stats_numer' vale 'true', las funciones de inferencia
     estadística devuelven sus resultados en formato decimal de coma
     flotante.  Cuando vale 'false', los resultados se devuelven en
     formato simbólico y racional.

 -- Función: test_mean (<x>)
 -- Función: test_mean (<x>, <options> ...)

     Es el test <t> de la media.  El argumento <x> es una lista o matriz
     columna con los datos de una muestra unidimensional.  También
     realiza el test asintótico basado en el Teorema Central del límite
     si se le asigna a la opción ''asymptotic' el valor 'true'.

     Opciones:

        * ''mean', valor por defecto '0', es el valor de la media a
          contrastar.

        * ''alternative', valor por defecto ''twosided', es la hipótesis
          alternativa; valores válidos son: ''twosided', ''greater' y
          ''less'.

        * ''dev', valor por defecto ''unknown', este es el valor de la
          desviación típica cuando se conoce; valores válidos son:
          ''unknown' o una expresión con valor positivo.

        * ''conflevel', valor por defecto '95/100', nivel de confianza
          para el intervalo de confianza; debe ser una expresión que
          tome un valor en el intervalo (0,1).

        * ''asymptotic', valor por defecto 'false', indica si debe
          realizar el test exacto basado en la <t> de Student, o el
          asintótico basado en el Teorema Central del límite; valores
          válidos son 'true' y 'false'.

     El resultado devuelto por la función 'test_mean' es un objeto
     'inference_result' con los siguientes apartados:

       1. ''mean_estimate': la media muestral.

       2. ''conf_level': nivel de confianza seleccionado por el usuario.

       3. ''conf_interval': intervalo de confianza para la media
          poblacional.

       4. ''method': procedimiento de inferencia.

       5. ''hypotheses': hipótesis nula y alternativa a ser contrastada.

       6. ''statistic': valor del estadístico de contraste utilizado
          para probar la hipótesis.

       7. ''distribution': distribución del estadístico de contraste,
          junto con su(s) parámetro(s).

       8. ''p_value': p-valor del test.

     Ejemplos:

     Realiza el contraste exacto <t> con varianza desconocida.  La
     hipótesis nula es H_0: mean=50, frente a la alternativa unilátera
     H_1: mean<50; de acuerdo con los resultados, no hay evidencia para
     rechazar H_0, pues el p-valor es muy grande.

          (%i1) load("stats")$
          (%i2) data: [78,64,35,45,45,75,43,74,42,42]$
          (%i3) test_mean(data,'conflevel=0.9,'alternative='less,'mean=50);
                    |                 MEAN TEST
                    |
                    |            mean_estimate = 54.3
                    |
                    |              conf_level = 0.9
                    |
                    | conf_interval = [minf, 61.51314273502712]
                    |
          (%o3)     |  method = Exact t-test. Unknown variance.
                    |
                    | hypotheses = H0: mean = 50 , H1: mean < 50
                    |
                    |       statistic = .8244705235071678
                    |
                    |       distribution = [student_t, 9]
                    |
                    |        p_value = .7845100411786889

     En esta ocasión Maxima realiza un test asintótico.  La hipótesis
     nula es H_0: equal(mean, 50) frente a la alternativa bilátera H_1:
     not equal(mean, 50); de acuerdo con los resultados, H_0 debe
     rechazarse en favor de la alternativa H_1, pues el p-valor es muy
     pequeño.  Nótese que, tal como indica la componente 'Method', este
     procedimiento sólo puede aplicarse en muestras grandes.

          (%i1) load("stats")$
          (%i2) test_mean([36,118,52,87,35,256,56,178,57,57,89,34,25,98,35,
                        98,41,45,198,54,79,63,35,45,44,75,42,75,45,45,
                        45,51,123,54,151],
                        'asymptotic=true,'mean=50);
                    |                       MEAN TEST
                    |
                    |           mean_estimate = 74.88571428571429
                    |
                    |                   conf_level = 0.95
                    |
                    | conf_interval = [57.72848600856194, 92.04294256286663]
                    |
          (%o2)     |    method = Large sample z-test. Unknown variance.
                    |
                    |       hypotheses = H0: mean = 50 , H1: mean # 50
                    |
                    |             statistic = 2.842831192874313
                    |
                    |             distribution = [normal, 0, 1]
                    |
                    |             p_value = .004471474652002261

 -- Función: test_means_difference (<x1>, <x2>)
 -- Función: test_means_difference (<x1>, <x2>, <options> ...)

     Este es el test <t> para la diferencia de medias con muestras.  Los
     argumentos <x1> y <x2> son listas o matrices columna que contienen
     dos muestras independientes.  En caso de varianzas diferentes y
     desconocidas (véanse las opciones ''dev1', ''dev2' y ''varequal'
     más abajo) los grados de libertad se calculan mediante la
     aproximación de Welch.  También realiza el test asintótico basado
     en el Teorema Central del límite si se le asigna a la opción
     ''asymptotic' el valor 'true'.

     Opciones:

        * 
        * ''alternative', valor por defecto ''twosided', es la hipótesis
          alternativa; valores válidos son: ''twosided', ''greater' y
          ''less'.

        * ''dev1', valor por defecto ''unknown', es el valor de la
          desviación típica de la muestra <x1> cuando se conoce; valores
          válidos son: ''unknown' o una expresión positiva.

        * ''dev2', valor por defecto ''unknown', es el valor de la
          desviación típica de la muestra <x2> cuando se conoce; valores
          válidos son: ''unknown' o una expresión positiva.

        * ''varequal', valor por defecto 'false', indica si las
          varianzas deben considerarse iguales o no; esta opción sólo
          toma efecto cuando ''dev1' y/o ''dev2' tienen el valor
          ''unknown'.

        * ''conflevel', valor por defecto '95/100', nivel de confianza
          para el intervalo de confianza; debe ser una expresión que
          tome un valor en el intervalo (0,1).

        * ''asymptotic', valor por defecto 'false', indica si debe
          realizar el test exacto basado en la <t> de Student, o el
          asintótico basado en el Teorema Central del límite; valores
          válidos son 'true' y 'false'.

     El resultado devuelto por la función 'test_means_difference' es un
     objeto 'inference_result' con los siguientes apartados:

       1. ''diff_estimate': el estimador de la diferencia de medias.

       2. ''conf_level': nivel de confianza seleccionado por el usuario.

       3. ''conf_interval': intervalo de confianza para la diferencia de
          medias.

       4. ''method': procedimiento de inferencia.

       5. ''hypotheses': hipótesis nula y alternativa a ser contrastada.

       6. ''statistic': valor del estadístico de contraste utilizado
          para probar la hipótesis.

       7. ''distribution': distribución del estadístico de contraste,
          junto con su(s) parámetro(s).

       8. ''p_value': p-valor del test.

     Ejemplos:

     La igualdad de medias se contrasta con dos pequeñas muestras <x> y
     <y>, contra la alternativa H_1: m_1>m_2, siendo m_1 y m_2 las
     medias poblacionales; las varianzas son desconocidas y se supone
     que diferentes.

          (%i1) load("stats")$
          (%i2) x: [20.4,62.5,61.3,44.2,11.1,23.7]$
          (%i3) y: [1.2,6.9,38.7,20.4,17.2]$
          (%i4) test_means_difference(x,y,'alternative='greater);
                      |              DIFFERENCE OF MEANS TEST
                      |
                      |         diff_estimate = 20.31999999999999
                      |
                      |                 conf_level = 0.95
                      |
                      |    conf_interval = [- .04597417812882298, inf]
                      |
          (%o4)       |        method = Exact t-test. Welch approx.
                      |
                      | hypotheses = H0: mean1 = mean2 , H1: mean1 > mean2
                      |
                      |           statistic = 1.838004300728477
                      |
                      |    distribution = [student_t, 8.62758740184604]
                      |
                      |            p_value = .05032746527991905

     El mismo test que antes, pero ahora se suponen las varianzas
     iguales.

          (%i1) load("stats")$
          (%i2) x: [20.4,62.5,61.3,44.2,11.1,23.7]$
          (%i3) y: matrix([1.2],[6.9],[38.7],[20.4],[17.2])$
          (%i4) test_means_difference(x,y,
                                      'alternative='greater,
                                      'varequal=true);
                      |              DIFFERENCE OF MEANS TEST
                      |
                      |         diff_estimate = 20.31999999999999
                      |
                      |                 conf_level = 0.95
                      |
                      |     conf_interval = [- .7722627696897568, inf]
                      |
          (%o4)       |   method = Exact t-test. Unknown equal variances
                      |
                      | hypotheses = H0: mean1 = mean2 , H1: mean1 > mean2
                      |
                      |           statistic = 1.765996124515009
                      |
                      |           distribution = [student_t, 9]
                      |
                      |            p_value = .05560320992529344

 -- Función: test_variance (<x>)
 -- Función: test_variance (<x>, <options> ...)

     Este es el test <chi^2> de la varianza.  El argumento <x> es una
     lista o matriz columna con los datos de una muestra unidimensional
     extraída de una población normal.

     Opciones:

        * ''mean', valor por defecto ''unknown', es la media de la
          población, si se conoce.

        * ''alternative', valor por defecto ''twosided', es la hipótesis
          alternativa; valores válidos son: ''twosided', ''greater' y
          ''less'.

        * ''variance', valor por defecto '1', este es el valor
          (positivo) de la varianza a contrastar.

        * ''conflevel', valor por defecto '95/100', nivel de confianza
          para el intervalo de confianza; debe ser una expresión que
          tome un valor en el intervalo (0,1).

     El resultado devuelto por la función 'test_variance' es un objeto
     'inference_result' con los siguientes apartados:

       1. ''var_estimate': la varianza muestral.

       2. ''conf_level': nivel de confianza seleccionado por el usuario.

       3. ''conf_interval': intervalo de confianza para la varianza
          poblacional.

       4. ''method': procedimiento de inferencia.

       5. ''hypotheses': hipótesis nula y alternativa a ser contrastada.

       6. ''statistic': valor del estadístico de contraste utilizado
          para probar la hipótesis.

       7. ''distribution': distribución del estadístico de contraste,
          junto con su parámetro.

       8. ''p_value': p-valor del test.

     Ejemplos:

     Se contrasta si la varianza de una población de media desconocida
     es igual o mayor que 200.

          (%i1) load("stats")$
          (%i2) x: [203,229,215,220,223,233,208,228,209]$
          (%i3) test_variance(x,'alternative='greater,'variance=200);
                       |                  VARIANCE TEST
                       |
                       |              var_estimate = 110.75
                       |
                       |                conf_level = 0.95
                       |
                       |     conf_interval = [57.13433376937479, inf]
                       |
          (%o3)        | method = Variance Chi-square test. Unknown mean.
                       |
                       |    hypotheses = H0: var = 200 , H1: var > 200
                       |
                       |                 statistic = 4.43
                       |
                       |             distribution = [chi2, 8]
                       |
                       |           p_value = .8163948512777689

 -- Función: test_variance_ratio (<x1>, <x2>)
 -- Función: test_variance_ratio (<x1>, <x2>, <options> ...)

     Este es el test <F> del cociente de las varianzas para dos
     poblaciones normales.  Los argumentos <x1> y <x2> son listas o
     matrices columna que contienen los datos de dos muestras
     independientes.

     Opciones:

        * ''alternative', valor por defecto ''twosided', es la hipótesis
          alternativa; valores válidos son: ''twosided', ''greater' y
          ''less'.

        * ''mean1', valor por defecto ''unknown', es la media de la
          población de la que procede <x1> cuando se conoce.

        * ''mean2', valor por defecto ''unknown', es la media de la
          población de la que procede <x2> cuando se conoce.

        * ''conflevel', valor por defecto '95/100', nivel de confianza
          para el intervalo de confianza del cociente; debe ser una
          expresión que tome un valor en el intervalo (0,1).

     El resultado devuelto por la función 'test_variance_ratio' es un
     objeto 'inference_result' con los siguientes resultados

       1. ''ratio_estimate': el cociente de varianzas muestral.

       2. ''conf_level': nivel de confianza seleccionado por el usuario.

       3. ''conf_interval': intervalo de confianza para el cociente de
          varianzas.

       4. ''method': procedimiento de inferencia.

       5. ''hypotheses': hipótesis nula y alternativa a ser contrastada.

       6. ''statistic': valor del estadístico de contraste utilizado
          para probar la hipótesis.

       7. ''distribution': distribución del estadístico de contraste,
          junto con sus parámetros.

       8. ''p_value': p-valor del test.

     Ejemplos:

     Se contrasta la igualdad de varianzas de dos poblaciones normales
     frente a la alternativa de que la primera es mayor que la segunda.

          (%i1) load("stats")$
          (%i2) x: [20.4,62.5,61.3,44.2,11.1,23.7]$
          (%i3) y: [1.2,6.9,38.7,20.4,17.2]$
          (%i4) test_variance_ratio(x,y,'alternative='greater);
                        |              VARIANCE RATIO TEST
                        |
                        |       ratio_estimate = 2.316933391522034
                        |
                        |               conf_level = 0.95
                        |
                        |    conf_interval = [.3703504689507268, inf]
                        |
          (%o4)         | method = Variance ratio F-test. Unknown means.
                        |
                        | hypotheses = H0: var1 = var2 , H1: var1 > var2
                        |
                        |         statistic = 2.316933391522034
                        |
                        |            distribution = [f, 5, 4]
                        |
                        |          p_value = .2179269692254457

 -- Función: test_proportion (<x>, <n>)
 -- Función: test_proportion (<x>, <n>, <options> ...)

     Inferencias sobre una proporción.  El argumento <x> es el número de
     éxitos observados en <n> pruebas de Bernoulli con probabilidad
     desconocida.

     Opciones:

        * ''proportion', valor por defecto '1/2', es el valor de la
          probabilidad a contrastar.

        * ''alternative', valor por defecto ''twosided', es la hipótesis
          alternativa; valores válidos son: ''twosided', ''greater' y
          ''less'.

        * ''conflevel', valor por defecto '95/100', nivel de confianza
          para el intervalo de confianza; debe ser una expresión que
          tome un valor en el intervalo (0,1).

        * ''asymptotic', valor por defecto 'false', indica si debe
          realizar el test exacto basado en la binomial, o el asintótico
          basado en el Teorema Central del límite; valores válidos son
          'true' y 'false'.

        * ''correct', valor por defecto 'true', indica si se aplica o no
          la corrección de Yates.

     El resultado devuelto por la función 'test_proportion' es un objeto
     'inference_result' con los siguientes apartados:

       1. ''sample_proportion': proporción muestral.

       2. ''conf_level': nivel de confianza seleccionado.

       3. ''conf_interval': intervalo de confianza de Wilson para la
          proporción.

       4. ''method': procedimiento de inferencia.

       5. ''hypotheses': hipótesis nula y alternativa a ser contrastada.

       6. ''statistic': valor del estadístico de contraste utilizado
          para probar la hipótesis.

       7. ''distribution': distribución del estadístico de contraste,
          junto con sus parámetros.

       8. ''p_value': p-valor del test.

     Ejemplos:

     Realiza un contraste exacto.  La hipótesis nula es H_0: p=1/2 y la
     alternativa unilátera es H_1: p<1/2.

          (%i1) load("stats")$
          (%i2) test_proportion(45, 103, alternative = less);
                   |            PROPORTION TEST
                   |
                   | sample_proportion = .4368932038834951
                   |
                   |           conf_level = 0.95
                   |
                   | conf_interval = [0, 0.522714149150231]
                   |
          (%o2)    |     method = Exact binomial test.
                   |
                   | hypotheses = H0: p = 0.5 , H1: p < 0.5
                   |
                   |             statistic = 45
                   |
                   |  distribution = [binomial, 103, 0.5]
                   |
                   |      p_value = .1184509388901454

     Un contraste asintótico bilátero.  El nivel de confianza es 99/100.

          (%i1) load("stats")$
          (%i2) fpprintprec:7$
          (%i3) test_proportion(45, 103,
                            conflevel = 99/100, asymptotic=true);
                |                 PROPORTION TEST
                |
                |           sample_proportion = .43689
                |
                |                conf_level = 0.99
                |
                |        conf_interval = [.31422, .56749]
                |
          (%o3) | method = Asympthotic test with Yates correction.
                |
                |     hypotheses = H0: p = 0.5 , H1: p # 0.5
                |
                |               statistic = .43689
                |
                |      distribution = [normal, 0.5, .048872]
                |
                |                p_value = .19662

 -- Función: test_proportions_difference (<x1>, <n1>, <x2>, <n2>)
 -- Función: test_proportions_difference (<x1>, <n1>, <x2>, <n2>,
          <options> ...)

     Inferencias sobre la diferencia de dos proporciones.  El argumento
     <x1> es el número de éxitos en <n1> experimentos de Bernoulli en la
     primera población y <x2> y <n2> son los valores correspondientes
     para la segunda población.  Las muestras son independientes y el
     contraste es asintótico.

     Opciones:

        * ''alternative', valor por defecto ''twosided', es la hipótesis
          alternativa; valores válidos son:: ''twosided' ('p1 # p2'),
          ''greater' ('p1 > p2') and ''less' ('p1 < p2').

        * ''conflevel', valor por defecto '95/100', nivel de confianza
          para el intervalo de confianza; debe ser una expresión que
          tome un valor en el intervalo (0,1).

        * ''correct', valor por defecto 'true', indica si se aplica o no
          la corrección de Yates.

     El resultado devuelto por la función 'test_proportions_difference'
     es un objeto 'inference_result' con los siguientes apartados:

       1. ''proportions': lista con las dos proporciones muestrales.

       2. ''conf_level': nivel de confianza seleccionado.

       3. ''conf_interval': intervalo de confianza para la diferencia de
          proporciones 'p1 - p2'.

       4. ''method': procedimiento de inferencia y mensaje de aviso en
          caso de que alguno de los tamaños muestrales sea menor de 10.

       5. ''hypotheses': hipótesis nula y alternativa a ser contrastada.

       6. ''statistic': valor del estadístico de contraste utilizado
          para probar la hipótesis.

       7. ''distribution': distribución del estadístico de contraste,
          junto con sus parámetros.

       8. ''p_value': p-valor del test.

     Ejemplos:

     Una máquina produce 10 piezas defectuosas en un lote de 250.
     Después de ciertas tareas de mantenimiento, produce 4 piezas
     defectuosas de un lote de 150.  A fin de saber si la tarea de
     mantenimiento produjo alguna mejora, se contrasta la hipótesis nula
     'H0:p1=p2' contra la alternativa 'H0:p1>p2', donde 'p1' y 'p2' son
     las probabilidades de que un artículo producido por la máquina sea
     defectuoso, antes y después de la reparación.  De acuerdo con el p
     valor, no hay evidencia suficiente para aceptar la alternativa.

          (%i1) load("stats")$
          (%i2) fpprintprec:7$
          (%i3) test_proportions_difference(10, 250, 4, 150,
                                          alternative = greater);
                |       DIFFERENCE OF PROPORTIONS TEST
                |
                |       proportions = [0.04, .02666667]
                |
                |              conf_level = 0.95
                |
                |      conf_interval = [- .02172761, 1]
                |
          (%o3) | method = Asymptotic test. Yates correction.
                |
                |   hypotheses = H0: p1 = p2 , H1: p1 > p2
                |
                |            statistic = .01333333
                |
                |    distribution = [normal, 0, .01898069]
                |
                |             p_value = .2411936

     Desviación típica exacta de la distribución normal asintótica con
     datos desconocidos.

          (%i1) load("stats")$
          (%i2) stats_numer: false$
          (%i3) sol: test_proportions_difference(x1,n1,x2,n2)$
          (%i4) last(take_inference('distribution,sol));
                         1    1                  x2 + x1
                        (-- + --) (x2 + x1) (1 - -------)
                         n2   n1                 n2 + n1
          (%o4)    sqrt(---------------------------------)
                                     n2 + n1

 -- Función: test_sign (<x>)
 -- Función: test_sign (<x>, <options> ...)

     Este es el test no paramétrico de los signos para contrastes sobre
     la mediana de una población continua.  El argumento <x> es una
     lista o matriz columna que contiene los datos de una muestra
     unidimensional.

     Opciones:

        * ''alternative', valor por defecto ''twosided', es la hipótesis
          alternativa; valores válidos son: ''twosided', ''greater' y
          ''less'.

        * ''median', valor por defecto '0', es el valor de la mediana a
          contrastar.

     El resultado devuelto por la función 'test_sign' es un objeto
     'inference_result' con los siguientes apartados:

       1. ''med_estimate': la mediana muestral.

       2. ''method': procedimiento de inferencia.

       3. ''hypotheses': hipótesis nula y alternativa a ser contrastada.

       4. ''statistic': valor del estadístico de contraste utilizado
          para probar la hipótesis.

       5. ''distribution': distribución del estadístico de contraste,
          junto con sus parámetros.

       6. ''p_value': p-valor del test.

     Ejemplos:

     Contrasta si la mediana de la población de la que se ha extraido la
     muestra es 6, frente a la alternativa H_1: median > 6.

          (%i1) load("stats")$
          (%i2) x: [2,0.1,7,1.8,4,2.3,5.6,7.4,5.1,6.1,6]$
          (%i3) test_sign(x,'median=6,'alternative='greater);
                         |                  SIGN TEST
                         |
                         |              med_estimate = 5.1
                         |
                         |      method = Non parametric sign test.
                         |
          (%o3)          | hypotheses = H0: median = 6 , H1: median > 6
                         |
                         |                statistic = 7
                         |
                         |      distribution = [binomial, 10, 0.5]
                         |
                         |         p_value = .05468749999999989

 -- Función: test_signed_rank (<x>)
 -- Función: test_signed_rank (<x>, <options> ...)

     Este el test de los rangos signados de Wilcoxon para hacer
     inferencias sobre la mediana de una población continua.  El
     argumento <x> es una lista o matriz columna que contiene los datos
     de una muestra unidimensional.  Realiza la aproximación normal si
     el tamaño muestral es mayor que 20, o si en la muestra aparece
     algún cero o hay empates.

     Véanse también 'pdf_rank_test' y 'cdf_rank_test'.

     Opciones:

        * ''median', valor por defecto '0', es el valor de la mediana a
          ser contrastado.

        * ''alternative', valor por defecto ''twosided', es la hipótesis
          alternativa; valores válidos son: ''twosided', ''greater' y
          ''less'.

     El resultado devuelto por la función 'test_signed_rank' es un
     objeto 'inference_result' con los siguientes apartados:

       1. ''med_estimate': la mediana muestral.

       2. ''method': procedimiento de inferencia.

       3. ''hypotheses': hipótesis nula y alternativa a ser contrastada.

       4. ''statistic': valor del estadístico de contraste utilizado
          para probar la hipótesis.

       5. ''distribution': distribución del estadístico de contraste,
          junto con su(s) parámetro(s).

       6. ''p_value': p-valor del test.

     Ejemplos:

     Contrasta la hipótesis nula H_0: median = 15 frente a la
     alternativa H_1: median > 15.  Este test es exacto, puesto que no
     hay empates.

          (%i1) load("stats")$
          (%i2) x: [17.1,15.9,13.7,13.4,15.5,17.6]$
          (%i3) test_signed_rank(x,median=15,alternative=greater);
                           |             SIGNED RANK TEST
                           |
                           |           med_estimate = 15.7
                           |
                           |           method = Exact test
                           |
          (%o3)            | hypotheses = H0: med = 15 , H1: med > 15
                           |
                           |              statistic = 14
                           |
                           |     distribution = [signed_rank, 6]
                           |
                           |            p_value = 0.28125

     Contrasta la hipótesis nula H_0: equal(median, 2.5) frente a la
     alternativa H_1: not equal(median, 2.5).  Este es un test
     asintótico, debido a la presencia de empates.

          (%i1) load("stats")$
          (%i2) y:[1.9,2.3,2.6,1.9,1.6,3.3,4.2,4,2.4,2.9,1.5,3,2.9,4.2,3.1]$
          (%i3) test_signed_rank(y,median=2.5);
                       |                 SIGNED RANK TEST
                       |
                       |                med_estimate = 2.9
                       |
                       |          method = Asymptotic test. Ties
                       |
          (%o3)        |    hypotheses = H0: med = 2.5 , H1: med # 2.5
                       |
                       |                 statistic = 76.5
                       |
                       | distribution = [normal, 60.5, 17.58195097251724]
                       |
                       |           p_value = .3628097734643669

 -- Función: test_rank_sum (<x1>, <x2>)
 -- Función: test_rank_sum (<x1>, <x2>, <option>)

     Este es el test de Wilcoxon-Mann-Whitney para comparar las medianas
     de dos poblaciones continuas.  Los dos primeros argumentos <x1> y
     <x2> son listas o matrices columna con los datos de dos muestras
     independientes.  Realiza la aproximación normal si alguna de las
     muestras tiene tamaño mayor que 10, o si hay empates.

     Opción:

        * ''alternative', valor por defecto ''twosided', es la hipótesis
          alternativa; valores válidos son: ''twosided', ''greater' y
          ''less'.

     El resultado devuelto por la función 'test_rank_sum' es un objeto
     'inference_result' con los siguientes apartados:

       1. ''method': procedimiento de inferencia.

       2. ''hypotheses': hipótesis nula y alternativa a ser contrastada.

       3. ''statistic': valor del estadístico de contraste utilizado
          para probar la hipótesis.

       4. ''distribution': distribución del estadístico de contraste,
          junto con sus parámetros.

       5. ''p_value': p-valor del test.

     Ejemplos:

     Contrasta si dos poblaciones tiene medianas similares.  Al ser los
     tamaños muestrales pequeños, se realiza el test exacto.

          (%i1) load("stats")$
          (%i2) x:[12,15,17,38,42,10,23,35,28]$
          (%i3) y:[21,18,25,14,52,65,40,43]$
          (%i4) test_rank_sum(x,y);
                        |                 RANK SUM TEST
                        |
                        |              method = Exact test
                        |
                        | hypotheses = H0: med1 = med2 , H1: med1 # med2
          (%o4)         |
                        |                 statistic = 22
                        |
                        |        distribution = [rank_sum, 9, 8]
                        |
                        |          p_value = .1995886466474702

     Ahora, con muestras mayores y empates, el procedimiento realiza la
     aproximación normal.  La hipótesis alternativa es H_1: median1 <
     median2.

          (%i1) load("stats")$
          (%i2) x: [39,42,35,13,10,23,15,20,17,27]$
          (%i3) y: [20,52,66,19,41,32,44,25,14,39,43,35,19,56,27,15]$
          (%i4) test_rank_sum(x,y,'alternative='less);
                       |                  RANK SUM TEST
                       |
                       |          method = Asymptotic test. Ties
                       |
                       |  hypotheses = H0: med1 = med2 , H1: med1 < med2
          (%o4)        |
                       |                 statistic = 48.5
                       |
                       | distribution = [normal, 79.5, 18.95419580097078]
                       |
                       |           p_value = .05096985666598441

 -- Función: test_normality (<x>)

     Test de Shapiro-Wilk para el contraste de normalidad.  El argumento
     <x> es una lista de números, con tamaño muestral mayor que 2 y
     menor o igual que 5000; bajo cualesquiera otras condiciones, la
     función 'test_normality' emite un mensaje de error.

     Referencia:

     [1] Algorithm AS R94, Applied Statistics (1995), vol.44, no.4,
     547-551

     El resultado devuelto por la función 'test_normality' es un objeto
     'inference_result' con los siguientes apartados:

       1. ''statistic': valor del estadístico <W>.

       2. ''p_value': p-valor bajo la hipótesis de normalidad.

     Ejemplos:

     Contrasta la normalidad de una población a partir de una muestra de
     tamaño 9.

          (%i1) load("stats")$
          (%i2) x:[12,15,17,38,42,10,23,35,28]$
          (%i3) test_normality(x);
                                 |      SHAPIRO - WILK TEST
                                 |
          (%o3)                  | statistic = .9251055695162436
                                 |
                                 |  p_value = .4361763918860381

 -- Función: linear_regression (<x>)
 -- Función: linear_regression (<x> <option>)

     Regresión lineal múltiple, y_i = b0 + b1*x_1i + b2*x_2i + ... +
     bk*x_ki + u_i, donde u_i son variables aleatorias independientes
     N(0,sigma).  El argumento <x> debe ser una matriz con más de una
     columna.  La última columna se considera que son las respuestas
     (y_i).

     Opción:

        * ''conflevel', valor por defecto '95/100', nivel de confianza
          para los intervalos de confianza; debe ser una expresión que
          tome un valor en el intervalo (0,1).

     El resultado devuelto por la función 'linear_regression' es un
     objeto 'inference_result' de Maxima con los siguientes campos:

       1. ''b_estimation': estimadores de los coeficientes de regresión.

       2. ''b_covariances': matriz de covarianzas de los estimadores de
          los coeficientes de regresión.

       3. 'b_conf_int': intervalos de confianza para los coeficientes de
          regresión.

       4. 'b_statistics': estadísticos para los contrastes de los
          coeficientes.

       5. 'b_p_values': p-valores para los contrastes de los
          coeficientes.

       6. 'b_distribution': distribución de probabilidad para los
          contrastes de los coeficientes.

       7. 'v_estimation': estimador insesgado de la varianza.

       8. 'v_conf_int': intervalo de confianza de la varianza.

       9. 'v_distribution': distribución de probabilidad para el
          contraste de la varianza.

       10. 'residuals': residuos.

       11. 'adc': coeficiente de determinación ajustado.

       12. 'aic': Criterio de información de Akaike.

       13. 'bic': Criterio de información de Bayes.

     Solamente los apartados 1, 4, 5, 6, 7, 8, 9 y 11, en este orden, se
     muestran por defecto.  El resto permanecen ocultos hasta que el
     usuario haga uso de las funciones 'items_inference' y
     'take_inference'.

     Ejemplo:

     Ajustando un modelo lineal a una muestra tridimensional.  La última
     columna se considera que son las respuestas (y_i).

          (%i2) load("stats")$
          (%i3) X:matrix(
              [58,111,64],[84,131,78],[78,158,83],
              [81,147,88],[82,121,89],[102,165,99],
              [85,174,101],[102,169,102])$
          (%i4) fpprintprec: 4$
          (%i5) res: linear_regression(X);
                       |       LINEAR REGRESSION MODEL
                       |
                       | b_estimation = [9.054, .5203, .2397]
                       |
                       | b_statistics = [.6051, 2.246, 1.74]
                       |
                       | b_p_values = [.5715, .07466, .1423]
                       |
          (%o5)        |   b_distribution = [student_t, 5]
                       |
                       |         v_estimation = 35.27
                       |
                       |     v_conf_int = [13.74, 212.2]
                       |
                       |      v_distribution = [chi2, 5]
                       |
                       |             adc = .7922
          (%i6) items_inference(res);
          (%o6) [b_estimation, b_covariances, b_conf_int, b_statistics,
          b_p_values, b_distribution, v_estimation, v_conf_int,
          v_distribution, residuals, adc, aic, bic]
          (%i7) take_inference('b_covariances, res);
                            [  223.9    - 1.12   - .8532  ]
                            [                             ]
          (%o7)             [ - 1.12    .05367   - .02305 ]
                            [                             ]
                            [ - .8532  - .02305   .01898  ]
          (%i8) take_inference('bic, res);
          (%o8)                          30.98
          (%i9) load("draw")$
          (%i10) draw2d(
              points_joined = true,
              grid = true,
              points(take_inference('residuals, res)) )$


File: maxima.info,  Node: Funciones y variables para distribuciones especiales,  Prev: Funciones y variables para stats,  Up: Top

74.4 Funciones y variables para distribuciones especiales
=========================================================

 -- Función: pdf_signed_rank (<x>, <n>)
     Función de densidad de probabilidad de la distribución exacta del
     estadístico de contraste del test de los rangos signados.  El
     argumento <x> es un número real y <n> un entero positivo.

     Véase también 'test_signed_rank'.

 -- Función: cdf_signed_rank (<x>, <n>)
     Función de probabilidad acumulada de la distribución exacta del
     estadístico de contraste del test de los rangos signados.  El
     argumento <x> es un número real y <n> un entero positivo.

     Véase también 'test_signed_rank'.

 -- Función: pdf_rank_sum (<x>, <n>, <m>)
     Función de densidad de probabilidad de la distribución exacta del
     estadístico de contraste de Wilcoxon-Mann-Whitney.  El argumento
     <x> es un número real y <n> y <m> son ambos enteros positivos.

     Véase también 'test_rank_sum'.

 -- Función: cdf_rank_sum (<x>, <n>, <m>)
     Función de probabilidad acumulada de la distribución exacta del
     estadístico de contraste de Wilcoxon-Mann-Whitney.  El argumento
     <x> es un número real y <n> y <m> son ambos enteros positivos.

     Véase también 'test_rank_sum'.


File: maxima.info,  Node: stirling,  Next: stringproc,  Prev: stats,  Up: Top

75 stirling
***********

* Menu:

* Funciones y variables para stirling::


File: maxima.info,  Node: Funciones y variables para stirling,  Prev: stirling,  Up: stirling

75.1 Funciones y variables para stirling
========================================

 -- Función: stirling (<z>,<n>)
 -- Función: stirling (<z>,<n>,<pred>)

     Sustituye 'gamma(x)' por la fórmula de Stirling O(1/x^(2n-1)).  Si
     <n> no es un entero no negativo, emite un mensaje de error.  Con el
     tercer argumento opcional 'pred', la fórmula de Stirling sólo se
     aplica si 'pred' vale 'true'.

     Referencia: Abramowitz & Stegun, " Handbook of mathematical
     functions", 6.1.40.

     Ejemplos:
          (%i1) load (stirling)$

          (%i2) stirling(gamma(%alpha+x)/gamma(x),1);
                 1/2 - x             x + %alpha - 1/2
          (%o2) x        (x + %alpha)
                                             1           1
                                      --------------- - ---- - %alpha
                                      12 (x + %alpha)   12 x
                                    %e
          (%i3) taylor(%,x,inf,1);
                              %alpha       2    %alpha
                    %alpha   x       %alpha  - x       %alpha
          (%o3)/T/ x       + -------------------------------- + . . .
                                           2 x
          (%i4) map('factor,%);
                                                 %alpha - 1
                   %alpha   (%alpha - 1) %alpha x
          (%o4)   x       + -------------------------------
                                            2

     La función 'stirling' conoce la diferencia existente entre la
     variable 'gamma' y la función gamma:

          (%i5) stirling(gamma + gamma(x),0);
                                              x - 1/2   - x
          (%o5)    gamma + sqrt(2) sqrt(%pi) x        %e
          (%i6) stirling(gamma(y) + gamma(x),0);
                                   y - 1/2   - y
          (%o6) sqrt(2) sqrt(%pi) y        %e
                                                        x - 1/2   - x
                                   + sqrt(2) sqrt(%pi) x        %e

     Para aplicar la fórmula de Stirling sólo a aquellos términos que
     contengan la variable 'k', hágase uso del tercer argumento
     opcional; por ejemplo,
          (%i7) makegamma(pochhammer(a,k)/pochhammer(b,k));
          (%o7) (gamma(b)*gamma(k+a))/(gamma(a)*gamma(k+b))
          (%i8) stirling(%,1, lambda([s], not(freeof(k,s))));
          (%o8) (%e^(b-a)*gamma(b)*(k+a)^(k+a-1/2)*(k+b)^(-k-b+1/2))/gamma(a)

     Los términos 'gamma(a)' y 'gamma(b)' no contienen a 'k', por lo que
     la fórmula de Stirling no ha sido aplicada a ellos.

     Antes de hacer uso de esta función ejecútese 'load("stirling")'.


File: maxima.info,  Node: stringproc,  Next: to_poly_solve,  Prev: stirling,  Up: Top

76 stringproc
*************

* Menu:

* Introducción al procesamiento de cadenas::
* Funciones y variables para entrada y salida::
* Funciones y variables para caracteres::
* Funciones y variables para cadenas::


File: maxima.info,  Node: Introducción al procesamiento de cadenas,  Next: Funciones y variables para entrada y salida,  Prev: stringproc,  Up: stringproc

76.1 Introducción al procesamiento de cadenas
=============================================

El paquete 'stringproc' amplía las capacidades de Maxima para manipular
cadenas de caracteres, al tiempo que añade algunas funciones útiles para
la lectura y escritura de ficheros.

Para dudas y fallos, por favor contáctese con 'volkervannek at gmail dot
com'.

En Maxima, una cadena de caracteres se construye fácilmente
escribiéndola entre comillas dobles, como en '"texto"'.  La función
'stringp' comprueba si el argumento es una cadena.

     (%i1) m: "text";
     (%o1)                         text
     (%i2) stringp(m);
     (%o2)                         true

Los caracteres se representan como cadenas de longitud unidad.  No se
tratan como caracteres Lisp.  Se pueden chequear con la función 'charp'
(o con 'lcharp' para los caracteres Lisp).  La conversión de caracteres
Lisp a caracteres Maxima se realiza con la función 'cunlisp'.

     (%i1) c: "e";
     (%o1)                           e
     (%i2) [charp(c),lcharp(c)];
     (%o2)                     [true, false]
     (%i3) supcase(c);
     (%o3)                           E
     (%i4) charp(%);
     (%o4)                         true

Todos los caracteres devueltos por las funciones de 'stringproc' son
caracteres de Maxima.  Puesto que los caracteres introducidos son
cadenas de longitud igual a la unidad, se pueden utilizar las funciones
de cadenas también para los caracteres, como se ha hecho con 'supcase'
en el anterior ejemplo.

Es importante tener en cuenta que el primer carácter en una cadena de
Maxima ocupa la posición 1.  Esto se ha diseñado así para mantener la
compatibilidad con las listas de Maxima.  Véanse las definiciones de
'charat' y 'charlist' para ver ejemplos.

Las funciones de cadena se utilizan frecuentemente cuando se trabaja con
ficheros.  El siguiente ejemplo muestra algunas de estas funciones en
acción.

Ejemplo:

La función 'openw' envía un flujo de salida hacia un fichero, entonces
'printf' permitirá formatera la escritura en este fichero.  Véase
'printf' para más detalles.

     (%i1) s: openw("E:/file.txt");
     (%o1)                    #<output stream E:/file.txt>
     (%i2) for n:0 thru 10 do printf( s, "~d ", fib(n) );
     (%o2)                                done
     (%i3) printf( s, "~%~d ~f ~a ~a ~f ~e ~a~%",
                   42,1.234,sqrt(2),%pi,1.0e-2,1.0e-2,1.0b-2 );
     (%o3)                                false
     (%i4) close(s);
     (%o4)                                true

Una vez cerrado el flujo, se podrá abrir nuevamente.  La función
'readline' devuelve el renglón entero como una única cadena.  El paquete
'stringproc' dispone de muchas funciones para manipular cadenas.  La
separación de palabras se puede hacer con 'split' o 'tokens'.

     (%i5) s: openr("E:/file.txt");
     (%o5)                     #<input stream E:/file.txt>
     (%i6) readline(s);
     (%o6)                     0 1 1 2 3 5 8 13 21 34 55
     (%i7) line: readline(s);
     (%o7)               42 1.234 sqrt(2) %pi 0.01 1.0E-2 1.0b-2
     (%i8) list: tokens(line);
     (%o8)           [42, 1.234, sqrt(2), %pi, 0.01, 1.0E-2, 1.0b-2]
     (%i9) map( parsetoken, list );
     (%o9)           [42, 1.234, false, false, 0.01, 0.01, false]

La función 'parsetoken' sólo analiza sintácticamente números enteros y
decimales.  El análisis de símbolos y números decimales grandes (big
floats) necesita 'parse_string', que se cargar automáticamente desde
'eval_string.lisp'.

     (%i5) s: openr("E:/file.txt");
     (%o5)                     #<input stream E:/file.txt>
     (%i6) readline(s);
     (%o6)                     0 1 1 2 3 5 8 13 21 34 55
     (%i7) line: readline(s);
     (%o7)               42 1.234 sqrt(2) %pi 0.01 1.0E-2 1.0b-2
     (%i8) list: tokens(line);
     (%o8)           [42, 1.234, sqrt(2), %pi, 0.01, 1.0E-2, 1.0b-2]
     (%i9) map( parse_string, list );
     (%o9)            [42, 1.234, sqrt(2), %pi, 0.01, 0.01, 1.0b-2]
     (%i10) float(%);
     (%o10) [42.0, 1.234, 1.414213562373095, 3.141592653589793, 0.01,
                                                          0.01, 0.01]
     (%i11) readline(s);
     (%o11)                               false
     (%i12) close(s)$

La función 'readline' devuelve 'false' cuando se alcanza el final del
fichero.


File: maxima.info,  Node: Funciones y variables para entrada y salida,  Next: Funciones y variables para caracteres,  Prev: Introducción al procesamiento de cadenas,  Up: stringproc

76.2 Funciones y variables para entrada y salida
================================================

Ejemplo:

     (%i1) s: openw("E:/file.txt");
     (%o1)                     #<output stream E:/file.txt>
     (%i2) control:
     "~2tAn atom: ~20t~a~%~2tand a list: ~20t~{~r ~}~%~2t\
                and an integer: ~20t~d~%"$
     (%i3) printf( s,control, 'true,[1,2,3],42 )$
     (%o3)                                false
     (%i4) close(s);
     (%o4)                                true
     (%i5) s: openr("E:/file.txt");
     (%o5)                     #<input stream E:/file.txt>
     (%i6) while stringp( tmp:readline(s) ) do print(tmp)$
       An atom:          true
       and a list:       one two three
       and an integer:   42
     (%i7) close(s)$

 -- Función: close (<stream>)
     Cierra el flujo de datos <stream> y devuelve 'true' si <stream>
     había sido abierto.

 -- Función: flength (<stream>)
     Devuelve el número de elementos en <stream>, el cual debe ser un
     flujo de datos desde o hacia un fichero.

 -- Función: fposition (<stream>)
 -- Función: fposition (<stream>, <pos>)
     Devuelve la posición actual en el flujo de datos <stream> si no se
     utiliza <pos>.  Si se utiliza <pos>, 'fposition' fija la posición
     en <stream>.  <stream> debe ser un flujo de datos desde o hacia un
     fichero y <pos> debe ser un entero positivo que hace corresponder
     al primer elemento de <stream> la posición 1.

 -- Función: freshline ()
 -- Función: freshline (<stream>)
     Escribe una nueva línea (en el flujo de datos <stream>) si la
     posición actual no corresponde al inicio de la línea.

     Véase también 'newline'.

 -- Función: get_output_stream_string (<stream>)
     Devuelve una cadena con todos los caracteres presentes en <stream>,
     que debe ser un flujo de datos de salida abiero.  Los caracteres
     devueltos son eliminados de <stream>.

     Para un ejemplo, véase 'make_string_output_stream' .

 -- Función: make_string_input_stream (<string>)
 -- Función: make_string_input_stream (<string>, <start>)
 -- Función: make_string_input_stream (<string>, <start>, <end>)
     Devuelve un flujo de entrada que contiene partes de <string> junto
     con el carácter de final de fichero.  Sin argumentos opcionales, el
     flujo contiene la cadena entera y se posiciona frente al primer
     carácter.  Los argumentos <start> y <end> definen la subcadena
     contenida en el flujo.  El primer carácter está disponible en la
     posición 1.

     Ejemplo:

          (%i1) istream : make_string_input_stream("text", 1, 4);
          (%o1)              #<string-input stream from "text">
          (%i2) (while (c : readchar(istream)) # false do sprint(c), newline())$
          t e x
          (%i3) close(istream)$

 -- Función: make_string_output_stream ()
     Devuelve un flujo de salida que acepta caracteres.  Los caracteres
     de este flujo podrán obtenerse con 'get_output_stream_string'.

     Ejemplo:

          (%i1) ostream : make_string_output_stream();
          (%o1)               #<string-output stream 09622ea0>
          (%i2) printf(ostream, "foo")$

          (%i3) printf(ostream, "bar")$

          (%i4) string : get_output_stream_string(ostream);
          (%o4)                            foobar
          (%i5) printf(ostream, "baz")$

          (%i6) string : get_output_stream_string(ostream);
          (%o6)                              baz
          (%i7) close(ostream)$

 -- Función: newline ()
 -- Función: newline (<stream>)
     Escribe una nueva línea (en el flujo de datos <stream>).

     Véase 'sprint' para un ejemplo de uso de 'newline()'.

     Nótese que hay algunos casos en los que 'newline' no trabaja según
     lo esperado.

 -- Función: opena (<file>)
     Devuelve un flujo de datos al fichero <file>.  Si se abre un
     fichero ya existente, 'opena' añade elementos al final del fichero.

 -- Función: openr (<file>)
     Devuelve un flujo de datos de entrada al fichero <file>.  Si <file>
     no existe, será creado.

 -- Función: openw (<file>)
     Devuelve un flujo de datos de salida al fichero <file>.  Si <file>
     no existe, será creado.  Si se abre un fichero ya existente,
     'openw' lo modifica borrando el contenido anterior.

 -- Función: printf (<dest>, <string>)
 -- Función: printf (<dest>, <string>, <expr_1>, ..., <expr_n>)
     Genera una cadena de caracteres a partir de la cadena de control
     <string>, teniendo en cuenta que las tildes introducen directivas.
     El carácter que va después de la tilde, posiblemente precedido por
     parámetros y modificadores, especifica el tipo de formato que se
     desea.  La mayor parte de las directivas usan uno o más elementos
     de los argumentos <expr_1>, ..., <expr_n> para crear la salida.

     Si <dest> es un flujo o vale 'true', entonces 'printf' devuelve
     'false'.  En otro caso, 'printf' devuelve una cadena conteniendo la
     salida.

     'printf' da acceso a la función 'format' de Common Lisp.  El
     siguiente ejemplo muestra la relación entre estas dos funciones.

          (%i1) printf(true, "R~dD~d~%", 2, 2);
          R2D2
          (%o1)                                false
          (%i2) :lisp (format t "R~dD~d~%" 2 2)
          R2D2
          NIL

     La siguiente descripción es un simple resumen de las posibilidades
     de 'printf'.  La función 'format' de Common Lisp se encuentra
     descrita en detalle en muchas referencias, como el manual libre
     "Common Lisp the Language" de Guy L. Steele; en particular, el
     capítulo 22.3.3.

             ~%       nueva línea
             ~&       línea de refresco
             ~t       tabulación
             ~$       moneda
             ~d       entero en base decimal
             ~b       entero en base binaria
             ~o       entero en base octal
             ~x       entero en base hexadecimal
             ~br      entero en base b
             ~r       deletrea un entero
             ~p       plural
             ~f       decimal en coma flotante
             ~e       notación científica
             ~g       ~f o ~e, dependiendo de la magnitud
             ~h       número decimal grande (bigfloat)
             ~a       utiliza la función string de Maxima
             ~s       como ~a, pero las cadenas se devuelven entre "comillas dobles"
             ~~       ~
             ~<       justificación, ~> termina
             ~(       conversor mayúscula/minúscula, ~) termina
             ~[       selección, ~] termina
             ~{       iteración, ~} termina

     La directiva '~h' para números decimales grandes no pertenece al
     estándar de Lisp, por lo que se ilustra más abajo.

     La directiva '~*' no está soportada.

     Ejemplos:

     Si <dest> es un flujo o vale 'true', entonces 'printf' devuelve
     'false'.  En otro caso, 'printf' devuelve una cadena conteniendo la
     salida.

          (%i1) printf( false, "~a ~a ~4f ~a ~@r",
                        "String",sym,bound,sqrt(12),144), bound = 1.234;
          (%o1)                 String sym 1.23 2*sqrt(3) CXLIV
          (%i2) printf( false,"~{~a ~}",["one",2,"THREE"] );
          (%o2)                          one 2 THREE
          (%i3) printf(true,"~{~{~9,1f ~}~%~}",mat ),
                    mat = args(matrix([1.1,2,3.33],[4,5,6],[7,8.88,9]))$
                1.1       2.0       3.3
                4.0       5.0       6.0
                7.0       8.9       9.0
          (%i4) control: "~:(~r~) bird~p ~[is~;are~] singing."$
          (%i5) printf( false,control, n,n,if n=1 then 1 else 2 ), n=2;
          (%o5)                    Two birds are singing.

     La directiva '~h' se ha introducido para formatear decimales
     grandes.

          ~w,d,e,x,o,p@H
           w : width
           d : decimal digits behind floating point
           e : minimal exponent digits
           x : preferred exponent
           o : overflow character
           p : padding character
           @ : display sign for positive numbers

          (%i1) fpprec : 1000$
          (%i2) printf(true, "|~h|~%", 2.b0^-64)$
          |0.0000000000000000000542101086242752217003726400434970855712890625|
          (%i3) fpprec : 26$
          (%i4) printf(true, "|~h|~%", sqrt(2))$
          |1.4142135623730950488016887|
          (%i5) fpprec : 24$
          (%i6) printf(true, "|~h|~%", sqrt(2))$
          |1.41421356237309504880169|
          (%i7) printf(true, "|~28h|~%", sqrt(2))$
          |   1.41421356237309504880169|
          (%i8) printf(true, "|~28,,,,,'*h|~%", sqrt(2))$
          |***1.41421356237309504880169|
          (%i9) printf(true, "|~,18h|~%", sqrt(2))$
          |1.414213562373095049|
          (%i10) printf(true, "|~,,,-3h|~%", sqrt(2))$
          |1414.21356237309504880169b-3|
          (%i11) printf(true, "|~,,2,-3h|~%", sqrt(2))$
          |1414.21356237309504880169b-03|
          (%i12) printf(true, "|~20h|~%", sqrt(2))$
          |1.41421356237309504880169|
          (%i13) printf(true, "|~20,,,,'+h|~%", sqrt(2))$
          |++++++++++++++++++++|

 -- Función: readchar (<stream>)
     Elimina y devuelve el primer carácter de <stream>.  Si se ha
     alcanzado el final del fichero, 'readchar' devuelve 'false'.

     Para un ejemplo, véase 'make_string_input_stream'.

 -- Función: readline (<stream>)
     Devuelve una cadena con los caracteres desde la posición actual en
     el flujo de datos <stream> hasta el final de la línea, o 'false' si
     se ha alcanzado el final del fichero.

 -- Función: sprint (<expr_1>, ..., <expr_n>)
     Evalúa y muestra sus argumentos uno tras otro en un renglón
     comenzando por su extremo izquierdo.

     La función 'newline()', que se carga automáticamente desde
     'stringproc.lisp', puede ser de utilidad si se quiere intercalar un
     salto de línea.

          (%i1) for n:0 thru 19 do sprint( fib(n) )$
          0 1 1 2 3 5 8 13 21 34 55 89 144 233 377 610 987 1597 2584 4181
          (%i2) for n:0 thru 22 do (
                   sprint(fib(n)), if mod(n,10)=9 then newline() )$
          0 1 1 2 3 5 8 13 21 34
          55 89 144 233 377 610 987 1597 2584 4181
          6765 10946 17711


File: maxima.info,  Node: Funciones y variables para caracteres,  Next: Funciones y variables para cadenas,  Prev: Funciones y variables para entrada y salida,  Up: stringproc

76.3 Funciones y variables para caracteres
==========================================

 -- Función: alphacharp (<char>)
     Devuelve 'true' si <char> es una carácter alfabético.

 -- Función: alphanumericp (<char>)
     Devuelve 'true' si <char> es una carácter alfabético o un dígito.

 -- Función: ascii (<int>)
     Devuelve el carácter correspondiente al número ASCII <int>,
     debiendo ser -1 < int < 256.

          (%i1) for n from 0 thru 255 do (
            tmp: ascii(n),
            if alphacharp(tmp) then sprint(tmp), if n=96 then newline() )$
          A B C D E F G H I J K L M N O P Q R S T U V W X Y Z
          a b c d e f g h i j k l m n o p q r s t u v w x y z

 -- Función: cequal (<char_1>, <char_2>)
     Devuelve 'true' si <char_1> y <char_2> son el mismo carácter.

 -- Función: cequalignore (<char_1>, <char_2>)
     Como 'cequal', pero ignora si las letras están en mayúsculas o
     minúsculas.

 -- Función: cgreaterp (<char_1>, <char_2>)
     Devuelve 'true' si el número ASCII de <char_1> es mayor que el de
     <char_2>.

 -- Función: cgreaterpignore (<char_1>, <char_2>)
     Como 'cgreaterp', pero ignora si las letras están en mayúsculas o
     minúsculas.

 -- Función: charp (<obj>)
     Devuelve 'true' si <obj> es un carácter de Maxima.

 -- Función: cint (<char>)
     Devuelve el número ASCII de <char>.

 -- Función: clessp (<char_1>, <char_2>)
     Devuelve 'true' si el número ASCII de <char_1> es menor que el de
     <char_2>.

 -- Función: clesspignore (<char_1>, <char_2>)
     Como 'clessp', pero ignora si las letras están en mayúsculas o
     minúsculas.

 -- Función: constituent (<char>)
     Devuelve 'true' si <char> es un carácter gráfico y no el carácter
     espacio.  Un carácter gráfico es el que se puede ver y con un
     espacio añadido; 'constituent' está definido por Paul Graham, ANSI
     Common Lisp, 1996, page 67.

          (%i1) for n from 0 thru 255 do (
          tmp: ascii(n), if constituent(tmp) then sprint(tmp) )$
          ! " #  %  ' ( ) * + , - . / 0 1 2 3 4 5 6 7 8 9 : ; < = > ? @ A B
          C D E F G H I J K L M N O P Q R S T U V W X Y Z [ \ ] ^ _ ` a b c
          d e f g h i j k l m n o p q r s t u v w x y z { | } ~

 -- Función: cunlisp (<lisp_char>)
     Convierte un carácter Lisp en uno de Maxima.  El uso de esta
     función por parte del usuario no será necesario.

 -- Función: digitcharp (<char>)
     Devuelve 'true' si <char> es un dígito.

 -- Función: lcharp (<obj>)
     Devuelve 'true' si <obj> es un carácter de Lisp.  El uso de esta
     función por parte del usuario no será necesario.

 -- Función: lowercasep (<char>)
     Devuelve 'true' si <char> es un carácter en minúscula.

 -- Variable: newline
     El carácter de nueva línea.

 -- Variable: space
     El carácter de espacio.

 -- Variable: tab
     El carácter de tabulación.

 -- Función: uppercasep (<char>)
     Devuelve 'true' si <char> es un carácter en mayúscula.


File: maxima.info,  Node: Funciones y variables para cadenas,  Prev: Funciones y variables para caracteres,  Up: stringproc

76.4 Funciones y variables para cadenas
=======================================

 -- Función: base64 (<string>)
     Devuelve la representación en base 64 de <string> en formato de
     cadena de caracteres.

     Ejemplo:

          (%i1) base64 : base64("foo bar baz");
          (%o1)                       Zm9vIGJhciBiYXo=
          (%i2) string : base64_decode(base64);
          (%o2)                          foo bar baz

 -- Función: base64_decode (<base64-string>)
     Decodifica la cadena de caracteres <base64-string>, codificada en
     base 64, y devuelve la cadena original.

     Para un ejemplo, véase 'base64'.

 -- Función: charat (<string>, <n>)
     Devuelve el <n>-ésimo carácter de <string>.  Al primer carácter de
     <string> le corresponde <n> = 1.

          (%i1) charat("Lisp",1);
          (%o1)                           L

 -- Función: charlist (<string>)
     Devuelve una lista con todos los caracteres de <string>.

          (%i1) charlist("Lisp");
          (%o1)                     [L, i, s, p]
          (%i2) %[1];
          (%o2)                           L

 -- Función: eval_string (<str>)
     Analiza sintácticamente la cadena <str> como una expresión de
     Maxima y la evalúa.  La cadena <str> puede terminar o no con
     cualquiera de los símbolos de final de sentencia (dólar '$' o punto
     y coma ';').  Sólo se analiza la primera expresión si hay más de
     una.

     Se emitirá un mensaje de error si <str> no es una cadena.

     Ejemplos:

          (%i1) eval_string ("foo: 42; bar: foo^2 + baz");
          (%o1)                       42
          (%i2) eval_string ("(foo: 42, bar: foo^2 + baz)");
          (%o2)                   baz + 1764

     Véase también 'parse_string'.

 -- Función: md5sum (<string>)
     Devuelve, en formato de cadena de caracteres, el resultado de la
     suma de verificación md5 del argumento <string>.  Para obtener el
     valor devuelto por la función como número entero, fijar la base
     numérica de entrada a 16 y a~nadir como prefijo el cero.

     Ejemplo:

          (%i1) string : md5sum("foo bar baz");
          (%o1)                  ab07acbb1e496801937adfa772424bf7
          (%i2) ibase : obase : 16.$

          (%i3) integer : parse_string(sconcat(0, string));
          (%o3)                 0ab07acbb1e496801937adfa772424bf7

 -- Función: parse_string (<str>)
     Analiza sintácticamente la cadena <str> como una expresión de
     Maxima, pero no la evalúa.  La cadena <str> puede terminar o no con
     cualquiera de los símbolos de final de sentencia (dólar '$' o punto
     y coma ';').  Sólo se analiza la primera expresión si hay más de
     una.

     Se emitirá un mensaje de error si <str> no es una cadena.

     Ejemplos:

          (%i1) parse_string ("foo: 42; bar: foo^2 + baz");
          (%o1)                    foo : 42
          (%i2) parse_string ("(foo: 42, bar: foo^2 + baz)");
                                             2
          (%o2)          (foo : 42, bar : foo  + baz)

     Véase también 'eval_string'.

 -- Función: scopy (<string>)
     Devuelve una copia nueva de la cadena <string>.

 -- Función: sdowncase (<string>)
 -- Función: sdowncase (<string>, <start>)
 -- Función: sdowncase (<string>, <start>, <end>)
     Convierte caracteres en minúscula a mayúscula.  Véase también
     'supcase'.

 -- Función: sequal (<string_1>, <string_2>)
     Devuelve 'true' si <string_1> y <string_2> son dos cadenas de
     caracteres iguales.

 -- Función: sequalignore (<string_1>, <string_2>)
     Igual que 'sequal' pero no diferencia entre minúsculas y
     mayúsculas..

 -- Función: sexplode (<string>)
     El nombre 'sexplode' es un seudónimo de la función 'charlist'.

 -- Función: simplode (<list>)
 -- Función: simplode (<list>, <delim>)
     La función 'simplode' admite como entrada una lista de expresiones
     para luego convertirla en una cadena de caracteres.  Si no se
     utiliza la opción <delim> para indicar el delimitador, entonces
     'simplode' no hace uso de ninguno.  El valor de <delim> puede ser
     cualquier cadena.

          (%i1) simplode(["xx[",3,"]:",expand((x+y)^3)]);
          (%o1)             xx[3]:y^3+3*x*y^2+3*x^2*y+x^3
          (%i2) simplode( sexplode("stars")," * " );
          (%o2)                   s * t * a * r * s
          (%i3) simplode( ["One","more","coffee."]," " );
          (%o3)                   One more coffee.

 -- Función: sinsert (<seq>, <string>, <pos>)
     Devuelve la concatenación de las cadenas 'substring (<string>, 1,
     <pos> - 1)', <seq> y 'substring (<string>, <pos>)'.  Nótese que al
     primer carácter de <string> le corresponde la posición 1.

          (%i1) s: "A submarine."$
          (%i2) concat( substring(s,1,3),"yellow ",substring(s,3) );
          (%o2)                  A yellow submarine.
          (%i3) sinsert("hollow ",s,3);
          (%o3)                  A hollow submarine.

 -- Función: sinvertcase (<string>)
 -- Función: sinvertcase (<string>, <start>)
 -- Función: sinvertcase (<string>, <start>, <end>)
     Devuelve la misma cadena <string> pero con todos sus caracteres
     desde la posición <start> hasta <end> invertidos, esto es, las
     mayúsculas se convierten en minúsculas y éstas en mayúsculas.  Si
     no se incluye el argumento <end>, se invierten todos los caracteres
     desde <start> hasta el final de la cadena.

          (%i1) sinvertcase("sInvertCase");
          (%o1)                      SiNVERTcASE

 -- Función: slength (<string>)
     Devuelve el número de caracteres de <string>.

 -- Función: smake (<num>, <char>)
     Construye una cadena de longitud <num> con todos sus caracteres
     iguales a <char>.

          (%i1) smake(3,"w");
          (%o1)                          www

 -- Función: smismatch (<string_1>, <string_2>)
 -- Función: smismatch (<string_1>, <string_2>, <test>)
     Devuelve la posición del primer carácter de <string_1> distinto del
     correpondiente a <string_2>.  La respuesta será 'false' si no
     existe tal carácter.  Por defecto, la función de comparación es
     'sequal'.  Si se quiere ignorar la diferencia entre mayúsculas y
     minúsculas, hágase uso de 'sequalignore' para el argumento <test>.

          (%i1) smismatch("seven","seventh");
          (%o1)                           6

 -- Función: split (<string>)
 -- Función: split (<string>, <delim>)
 -- Función: split (<string>, <delim>, <multiple>)
     Devuelve la lista de todos los lexemas (tokens) de <string>.  La
     función 'split' utiliza <delim> como delimitador, y en caso de no
     ser utilizado este argumento, será utilizado el espacio en blanco
     como delimitador por defecto.  El argumento <multiple> es una
     variable booleana con valor 'true' por defecto.  Los delimitadores
     múltiples se leen como uno solo, lo que resulta de utilidad si las
     tabulaciones son almacenadas como secuencias de espacios en blanco.
     Si a <multiple> se le asigna el valor 'false', se consirararán
     todos los delimitadores.

          (%i1) split("1.2   2.3   3.4   4.5");
          (%o1)                 [1.2, 2.3, 3.4, 4.5]
          (%i2) split("first;;third;fourth",";",false);
          (%o2)               [first, , third, fourth]

 -- Función: sposition (<char>, <string>)
     Devuelve la posición del primer carácter de <string> que coincide
     con <char>.  Al primer carácter de <string> le corresponde la
     posición 1.  Para cuando se quiera ignorar la diferencia entre
     mayúsculas y minúsculas, véase <ssearch>.

 -- Función: sremove (<seq>, <string>)
 -- Función: sremove (<seq>, <string>, <test>)
 -- Función: sremove (<seq>, <string>, <test>, <start>)
 -- Función: sremove (<seq>, <string>, <test>, <start>, <end>)
     Devuelve la cadena <string> pero sin las subcadenas que coinciden
     con <seq>.  La función de comparación por defecto es 'sequal'.  Si
     se quiere ignorar la diferencia entre mayúsculas y minúsculas,
     hágase uso de 'sequalignore' para el argumento <test>.  Utilícense
     <start> y <end> para acotar la búsqueda.  Al primer carácter de
     <string> le corresponde la posición 1.

          (%i1) sremove("n't","I don't like coffee.");
          (%o1)                   I do like coffee.
          (%i2) sremove ("DO ",%,'sequalignore);
          (%o2)                    I like coffee.

 -- Función: sremovefirst (<seq>, <string>)
 -- Función: sremovefirst (<seq>, <string>, <test>)
 -- Función: sremovefirst (<seq>, <string>, <test>, <start>)
 -- Función: sremovefirst (<seq>, <string>, <test>, <start>, <end>)
     Actúa de forma similar a la función 'sremove', pero sólo elimina la
     primera aparición de la subcadena 'seq'.

 -- Función: sreverse (<string>)
     Devuelve una cadena con todos los caracteres de <string> en orden
     inverso.

 -- Función: ssearch (<seq>, <string>)
 -- Función: ssearch (<seq>, <string>, <test>)
 -- Función: ssearch (<seq>, <string>, <test>, <start>)
 -- Función: ssearch (<seq>, <string>, <test>, <start>, <end>)
     Devuelve la posición de la primera subcadena de <string> que
     coincide con la cadena <seq>.  La función de comparación por
     defecto es 'sequal'.  Si se quiere ignorar la diferencia entre
     mayúsculas y minúsculas, hágase uso de 'sequalignore' para el
     argumento <test>.  Utilícense <start> y <end> para acotar la
     búsqueda.  Al primer carácter de <string> le corresponde la
     posición 1.

          (%i1) ssearch("~s","~{~S ~}~%",'sequalignore);
          (%o1)                                  4

 -- Función: ssort (<string>)
 -- Función: ssort (<string>, <test>)
     Devuelve una cadena con todos los caracteres de <string> en un
     orden tal que no haya dos caracteres sucesivos <c> y <d> que
     verifiquen que 'test (<c>, <d>)' sea igual 'false' y 'test (<d>,
     <c>)' igual a 'true'.  La función de comparación <test> por defecto
     es <clessp>, siendo el conjunto de posibles valores para este
     argumento '{clessp, clesspignore, cgreaterp, cgreaterpignore,
     cequal, cequalignore}'.

          (%i1) ssort("I don't like Mondays.");
          (%o1)                    '.IMaddeiklnnoosty
          (%i2) ssort("I don't like Mondays.",'cgreaterpignore);
          (%o2)                 ytsoonnMlkIiedda.'

 -- Función: ssubst (<new>, <old>, <string>)
 -- Función: ssubst (<new>, <old>, <string>, <test>)
 -- Función: ssubst (<new>, <old>, <string>, <test>, <start>)
 -- Función: ssubst (<new>, <old>, <string>, <test>, <start>, <end>)
     Devuelve una cadena similar a <string> pero en la que aquellas
     subcadenas coincidentes con <old> han sido sustituidas por <new>.
     Las subcadenas <old> y <new> no necesitan ser de la misma longitud.
     La función de comparación por defecto es 'sequal'.  Si se quiere
     ignorar la diferencia entre mayúsculas y minúsculas durante la
     búsqueda de <old>, hágase uso de 'sequalignore' para el argumento
     <test>.  Utilícense <start> y <end> para acotar la búsqueda.  Al
     primer carácter de <string> le corresponde la posición 1.

          (%i1) ssubst("like","hate","I hate Thai food. I hate green tea.");
          (%o1)          I like Thai food. I like green tea.
          (%i2) ssubst("Indian","thai",%,'sequalignore,8,12);
          (%o2)         I like Indian food. I like green tea.

 -- Función: ssubstfirst (<new>, <old>, <string>)
 -- Función: ssubstfirst (<new>, <old>, <string>, <test>)
 -- Función: ssubstfirst (<new>, <old>, <string>, <test>, <start>)
 -- Función: ssubstfirst (<new>, <old>, <string>, <test>, <start>,
          <end>)
     Actúa de forma similar a la función 'subst', pero sólo hace la
     sustitución en la primera coincidencia con <old>.

 -- Función: strim (<seq>,<string>)
     Devuelve la cadena <string> pero recortando los caracteres de <seq>
     que tuviese en sus extremos.

          (%i1) "/* comment */"$
          (%i2) strim(" /*",%);
          (%o2)                        comment
          (%i3) slength(%);
          (%o3)                           7

 -- Función: striml (<seq>, <string>)
     Actúa de forma similar a 'strim', pero sólo recorta en el extremo
     final de <string>.

 -- Función: strimr (<seq>, <string>)
     Actúa de forma similar a 'strim', pero sólo recorta en el extremo
     inicial de <string>.

 -- Función: stringp (<obj>)
     Devuelve 'true' si <obj> es una cadena.  Véase un ejemplo en la
     introducción.

 -- Función: substring (<string>, <start>)
 -- Función: substring (<string>, <start>, <end>)
     Devuelve la subcadena de <string> que comienza en la posición
     <start> y termina en la posición <end>.  El carácter en la posición
     <end> no se incluye.  En caso de no suministrarse el argumento
     <end>, la subcadena se extenderá hasta el final.  Al primer
     carácter de <string> le corresponde la posición 1.

          (%i1) substring("substring",4);
          (%o1)                        string
          (%i2) substring(%,4,6);
          (%o2)                          in

 -- Función: supcase (<string>)
 -- Función: supcase (<string>, <start>)
 -- Función: supcase (<string>, <start>, <end>)
     Devuelve la cadena <string> con todos sus caracteres entre las
     posiciones <start> y <end> en minúscula transformados a mayúscula.
     En caso de no suministrarse el argumento <end>, los cambios se
     extenderán hasta el final.

          (%i1) supcase("english",1,2);
          (%o1)                        English

 -- Función: tokens (<string>)
 -- Función: tokens (<string>, <test>)
     Devuelve la lista de todos los lexemas (tokens) de <string>.  Los
     lexemas son subcadenas cuyos caracteres satisfacen la condición
     <test>.  Si no se suministra el argumento <test>, se utilizará la
     condición <constituent>, siendo el conjunto de las otras
     alternativas '{constituent, alphacharp, digitcharp, lowercasep,
     uppercasep, charp, characterp, alphanumericp}'.

          (%i1) tokens("24 October 2005");
          (%o1)                  [24, October, 2005]
          (%i2) tokens("05-10-24",'digitcharp);
          (%o2)                     [05, 10, 24]
          (%i3) map(parse_string,%);
          (%o3)                      [5, 10, 24]


File: maxima.info,  Node: to_poly_solve,  Next: unit,  Prev: stringproc,  Up: Top

77 to_poly_solve
****************

* Menu:

* Funciones y variables para to_poly_solve::


File: maxima.info,  Node: Funciones y variables para to_poly_solve,  Prev: to_poly_solve,  Up: to_poly_solve

77.1 Funciones y variables para to_poly_solve
=============================================

Los paquetes 'to_poly' y 'to_poly_solve' son experimentales, siendo
posible que las especificaciones de sus funciones puedan cambiar en el
futuro, o que algunas de estas funciones puedan ser incorporadas a otras
partes de Maxima.

Los paquetes 'to_poly' y 'to_poly_solve', junto con su documentación,
fue escrito por Barton Willis de la Universidad de Nebraska en Kearney.

 -- Operador: %and

     El operador '%and' es una conjunción lógica.  Maxima simplifica una
     expresión '%and' a 'true', 'false' o a una expresión lógicamente
     equivalente, pero simplificada.  El operador '%and' es asociativo,
     conmutativo e idempotente.  Así, cuando '%and' devuelva una forma
     nominal, sus argumentos no serán redundantes; por ejemplo,

          (%i1) a %and (a %and b);
          (%o1)                       a %and b

     Si uno de los argumentos de la conjunción es la negación de otro
     argumento, '%and' devuelve 'false':

           (%i2) a %and (not a);
           (%o2) false

     Si cualquiera de los argumentos vale 'false', la conjunción
     devuelve 'false', incluso cuando haya algún otro argumento que sea
     una expresión no booleana; por ejemplo,

          (%i2) a %and (not a);
          (%o2)                         false

     Los argumentos de la expresión '%and' que sean inecuaciones se
     reducen con la simplificación de Fourier; el método que se aplica
     dispone de un pre-procesador que convierte algunas, pero no todas,
     las inecuaciones no lineales a lineales.  Por ejemplo, el método de
     simplificación de Fourier simplifica 'abs(x) + 1 > 0' a 'true':

          (%i4) (x < 1) %and (abs(x) + 1 > 0);
          (%o4)                         x < 1

     Notas
        * La variable opcional 'prederror' no altera la simplificación
          de las expresiones '%and'.

        * Para evitar errores en la precedencia de las operaciones, se
          recomienda utilizar paréntesis en las expresiones combinadas
          en las que aparezcan los operadores '%and', '%or' y 'not' .

        * Los operadores 'and' y 'or', tal como están programados en
          Maxima, no conocen las propiedades asociativa ni conmutativa.

     Limitaciones La conjunción '%and' simplifica inecuaciones
     locamente, no globalmente, lo que significa que conjunciones tales
     como

          (%i5) (x < 1) %and (x > 1);
          (%o5)                 (x > 1) %and (x < 1)

     no simplifican a 'false'.  Además, las rutinas de eliminación de
     Fourier ignoran los hechos almacenados en la base de datos.

          (%i6) assume(x > 5);
          (%o6)                        [x > 5]
          (%i7) (x > 1) %and (x > 2);
          (%o7)                 (x > 1) %and (x > 2)

     Por último, las inecuaciones no lineales que no se puedan reducir
     de manera sencilla a formas lineales, no se simplifican.

     No está soportada la distributividad de '%and' respecto de '%or',
     ni la negación respecto de '%and'.

     Para hacer uso de este operador, ejecútese 'load(to_poly_solve)'.

     Véanse también '%or', '%if', 'and', 'or' y 'not'.

 -- Operador: %if ( <bool>, <a>, <b>)

     El operador '%if' es un condicional.  La condición <bool> debe
     tomar un valor lógico; cuando sea 'true', se devolverá el segundo
     argumento, y cuando valga 'false', el segundo.  En cualquier otro
     caso, se obtiene una forma nominal.

     En Maxima, las expresiones con desigualdades o igualdades no
     adquieren valores lógicos; por ejemplo, 5 < 6 no se simplifica a
     'true', ni 5 = 6 'false'.  Sin embargo, en la condición de una
     sentencia '%if', Maxima intenta determinar el valor lógico de la
     expresión de forma automática.  Véase un ejemplo:

          (%i1) f : %if(x # 1, 2, 8);
          (%o1)                 %if(x - 1 # 0, 2, 8)
          (%i2) [subst(x = -1,f), subst(x=1,f)];
          (%o2)                        [2, 8]

     Si en la condición aparece una inecuación, Maxima la reduce con una
     simplificación de Fourier.

     Notas
        bullet Si la condición no se reduce a un valor lógico, Maxima
          devuelve una forma nominal:
               (%i3) %if(42,1,2);
               (%o3)                     %if(42, 1, 2)

        bullet El operador 'if' de Maxima es n-ario, pero el operador
          '%if' no lo es.

     Por último, las inecuaciones no lineales que no se puedan reducir
     de manera sencilla a formas lineales, no se simplifican.

     Para hacer uso de este operador, ejecútese 'load(to_poly_solve)'.

 -- Operador: %or

     El operador '%or' es una disyunción lógica.  Maxima simplifica una
     expresión '%or' a 'true', 'false' o a una expresión lógicamente
     equivalente, pero simplificada.  El operador '%or' es asociativo,
     conmutativo e idempotente.  Así, cuando '%or' devuelva una forma
     nominal, sus argumentos no serán redundantes; por ejemplo,

          (%i1) a %or (a %or b);
          (%o1)                        a %or b

     Si uno de los argumentos de la disyunción es la negación de otro
     argumento, '%or' devuelve 'true':

          (%i2) a %or (not a);
          (%o2)                         true

     Si cualquiera de los argumentos vale 'true', la disyunción devuelve
     'true', incluso cuando haya algún otro argumento que sea una
     expresión no booleana; por ejemplo,

          (%i3) 42 %or true;
          (%o3)                         true

     Los argumentos de la expresión '%or' que sean inecuaciones se
     reducen con la simplificación de Fourier.  Por ejemplo, el método
     de simplificación de Fourier simplifica 'abs(x) + 1 > 0' a 'true':

          (%i4) (x < 1) %or (abs(x) + 1 > 0);
          (%o4)                         true

     Notas
        * La variable opcional 'prederror' no altera la simplificación
          de las expresiones '%or'.

        * Para evitar errores en la precedencia de las operaciones, se
          recomienda utilizar paréntesis en las expresiones combinadas
          en las que aparezcan los operadores '%and', '%or' y 'not' .

        * Los operadores 'and' y 'or', tal como están programados en
          Maxima, no conocen las propiedades asociativa ni conmutativa.

     Limitaciones La conjunción '%or' simplifica inecuaciones locamente,
     no globalmente, lo que significa que disyunciones tales como

           (%i1) (x < 1) %or (x >= 1);
           (%o1) (x > 1) %or (x >= 1)

     no simplifican a 'true'.  Además, las rutinas de eliminación de
     Fourier ignoran los hechos almacenados en la base de datos.

          (%i2) assume(x > 5);
          (%o2)                        [x > 5]
          (%i3) (x > 1) %and (x > 2);
          (%o3)                 (x > 1) %and (x > 2)

     Por último, las inecuaciones no lineales que no se puedan reducir
     de manera sencilla a formas lineales, no se simplifican.

     No está soportada la distributividad de '%or' respecto de '%and',
     ni la negación respecto de '%or'.

     Para hacer uso de este operador, ejecútese 'load(to_poly_solve)'.

     Véanse también '%and', '%if', 'and', 'or' y 'not'.

 -- Función: complex_number_p (<x>)

     La función 'complex_number_p' devuelve 'true' si su argumento es de
     cualquiera de las formas 'a + %i * b', 'a', '%i b' o '%i', donde
     'a' y 'b' son racionales o decimales en coma flotante, de precisión
     doble o arbitraria (bigfloats); para cualesquiera otros argumentos,
     'complex_number_p' devuelve 'false'.

     Ejemplo:

          (%i1) map('complex_number_p,[2/3, 2 + 1.5 * %i, %i]);
          (%o1)                  [true, true, true]
          (%i2) complex_number_p((2+%i)/(5-%i));
          (%o2)                         false
          (%i3) complex_number_p(cos(5 - 2 * %i));
          (%o3)                         false

     Véase también 'isreal_p'.

     Para hacer uso de esta función, ejecútese 'load(to_poly_solve)'.

 -- Función: compose_functions (<l>)

     La función 'compose_functions(l)' devuelve una expresión lambda que
     es la composición de las funciones presentes en la lista <l>.  Las
     funciones se aplican de derecha a izquierda.

     Ejemplo:

          (%i1) compose_functions([cos, exp]);
                                                  %g151
          (%o1)             lambda([%g151], cos(%e     ))
          (%i2) %(x);
                                            x
          (%o2)                       cos(%e )

     Si la lista está vacía devuelve la función identidad:

          (%i3) compose_functions([]);
          (%o3)                lambda([%g152], %g152)
          (%i4)  %(x);
          (%o4)                           x

     Notas
        * Cuando Maxima detecta que un miembro de la lista no es un
          símbolo o expresión lambda, la función 'funmake' (no
          'compose_functions') muestra un mensaje de error:
               (%i5) compose_functions([a < b]);

               funmake: first argument must be a symbol, subscripted symbol,
               string, or lambda expression; found: a < b
               #0: compose_functions(l=[a < b])(to_poly_solve.mac line 40)
                -- an error. To debug this try: debugmode(true);

        * Para evitar conflictos de nombres, la variable independiente
          se determina con la función 'new_variable':
               (%i6) compose_functions([%g0]);
               (%o6)              lambda([%g154], %g0(%g154))
               (%i7) compose_functions([%g0]);
               (%o7)              lambda([%g155], %g0(%g155))
          Aunque las variables dependientes sean diferentes, Maxima es
          capaz de determinar que las expresiones lambda son
          semánticamente equivalentes:
               (%i8) is(equal(%o6,%o7));
               (%o8)                         true

     Para hacer uso de esta función, ejecútese 'load(to_poly_solve)'.

 -- Función: dfloat (<x>)

     La función 'dfloat' es similar a 'float', pero 'dfloat' aplica
     'rectform' cuando 'float' no puede evaluar a un número decimal de
     coma flotante de doble precisión.  Ejemplo:

          (%i1) float(4.5^(1 + %i));
                                         %i + 1
          (%o1)                       4.5
          (%i2) dfloat(4.5^(1 + %i));
          (%o2)        4.48998802962884 %i + .3000124893895671

     Notas

        * La forma rectangular de una expresión puede no ser la más
          adecuada para cálculos numéricos

        * El identificador 'float' es al mismo tiempo una variable
          opcional, cuyo valor por defecto es 'false' y el nombre de una
          función.

     Véanse también 'float' y 'bfloat'.

     Para hacer uso de esta función, ejecútese 'load(to_poly_solve)'.

 -- Función: elim (<l>, <x>)

     La función 'elim' elimina las variables que se indican en el
     conjunto o lista 'x' del conjunto o lista de ecuaciones en 'l'.
     Cada elemento de 'x' debe ser un símbolo, mientras que los
     elementos de 'l' pueden ser ecuaciones o expresiones que se suponen
     igualadas a cero.

     La función 'elim' devuelve una lista formada por dos listas; la
     primera está formada por las expresiones con las variables
     eliminadas y la segunda es la lista de pivotes o, en otras
     palabras, es la lista de expresiones que 'elim' ha utilizado para
     proceder con la eliminación.

     Ejemplo:

     Eliminación entre ecuaciones lineales.  Eliminando 'x' e 'y' se
     obtiene una única ecuación '2 z - 7 = 0'; las ecuaciones 'y + 7 =
     0' y 'z - z + 1 = 1' se han utilizado como pivotes.

          (%i1) elim(set(x + y + z = 1, x - y  - z = 8, x - z = 1),
                     set(x,y));
          (%o1)            [[2 z - 7], [y + 7, z - x + 1]]

     Eliminando las tres variables de estas ecuaciones se triangulariza
     el sistema lineal:

          (%i2) elim(set(x + y + z = 1, x - y  - z = 8, x - z = 1),
                     set(x,y,z));
          (%o2)           [[], [2 z - 7, y + 7, z - x + 1]]

     Las ecuaciones no necesitan ser lineales:

          (%i3) elim(set(x^2 - 2 * y^3 = 1,  x - y = 5), [x,y]);
                               3    2
          (%o3)       [[], [2 y  - y  - 10 y - 24, y - x + 5]]

     El usuario no puede controlar el orden en el que se eliminan las
     variables.  El algoritmo utiliza una heurística con la que intenta
     escoger el mejor pivote y el mejor orden de eliminación.

     Notas

        * Al contrario que la función relacionada 'eliminate', la
          función 'elim' no llama a la función 'solve' cuando el número
          de ecuaciones iguala al de variables.

        * La función 'elim' trabaja aplicando resultantes; la variable
          opcional 'resultant' determina qué algoritmo va a utilizar
          Maxima.  Con 'sqfr', Maxima factoriza cada resultante y
          suprime ceros múltiples.

        * 'elim' triangulariza un conjunto de ecuaciones polinómicas no
          lineales; el conjunto solución del conjunto triangularizado
          puede ser mayor que el conjunto de soluciones del conjunto no
          triangularizado, por lo que las ecuaciones triangularizadas
          pueden tener soluciones falsas.

     Véanse también 'elim_allbut', 'eliminate_using', 'eliminate' y
     'resultant'.

     Para hacer uso de esta función, ejecútese 'load(to_poly)'.

 -- Función: elim_allbut (<l>, <x>)

     Es similar a 'elim', excepto por el hecho de que elimina todas las
     variables que aparecen en la lista de ecuaciones 'l' que no están
     en 'x'.

     Ejemplo:

          (%i1) elim_allbut([x+y = 1, x - 5*y = 1],[]);
          (%o1)                 [[], [y, y + x - 1]]
          (%i2) elim_allbut([x+y = 1, x - 5*y = 1],[x]);
          (%o2)                [[x - 1], [y + x - 1]]

     Para hacer uso de esta función, ejecútese 'load(to_poly)'.

     Véanse también 'elim', 'eliminate_using', 'eliminate' y
     'resultant'.

 -- Función: eliminate_using (<l>, <e>, <x>)

     Elmina el símbolo 'x' de la lista o conjunto de ecuaciones 'l'
     haciendo uso del pivote 'e'.

     Ejemplos:

          (%i1) eq : [x^2 - y^2 - z^3 , x*y - z^2 - 5, x - y + z];
                         3    2    2     2
          (%o1)      [- z  - y  + x , - z  + x y - 5, z - y + x]
          (%i2) eliminate_using(eq,first(eq),z);
                  3              2      2      3    2
          (%o2) {y  + (1 - 3 x) y  + 3 x  y - x  - x ,
                                  4    3  3       2  2             4
                                 y  - x  y  + 13 x  y  - 75 x y + x  + 125}
          (%i3) eliminate_using(eq,second(eq),z);
                  2            2       4    3  3       2  2             4
          (%o3) {y  - 3 x y + x  + 5, y  - x  y  + 13 x  y  - 75 x y + x
                                                                     + 125}
          (%i4) eliminate_using(eq, third(eq),z);
                  2            2       3              2      2      3    2
          (%o4) {y  - 3 x y + x  + 5, y  + (1 - 3 x) y  + 3 x  y - x  - x }

     Para hacer uso de esta función, ejecútese 'load(to_poly)'.

     Véanse también 'elim', 'elim_allbut', 'eliminate' y 'resultant'.

 -- Función: fourier_elim ([<eq1>, <eq2>, ...], [<var1>, <var>, ...])

     La instrucción 'fourier_elim([eq1,eq2,...], [var1,var2,...]' aplica
     el algoritmo de eliminación de Fourier para resolver el sistema de
     inecuaciones lineales '[eq1,eq2,...]' respecto de las variables
     '[var1,var2,...]'.

     Ejemplos:

          (%i1) fourier_elim([y-x < 5, x - y < 7, 10 < y],[x,y]);
          (%o1)            [y - 5 < x, x < y + 7, 10 < y]
          (%i2) fourier_elim([y-x < 5, x - y < 7, 10 < y],[y,x]);
          (%o2)        [max(10, x - 7) < y, y < x + 5, 5 < x]

     Eliminando primero respecto de x y luego respecto de y, se obtienen
     límites inferior y superior para x que dependen de y, y límites
     numéricos para y.  Si se eliminan en orden inverso, se obtienen los
     límites de y en función de x, y los de x son números.

     De ser necesario, 'fourier_elim' devuelve una disyunción de listas
     de ecuaciones:

          (%i3) fourier_elim([x # 6],[x]);
          (%o3)                  [x < 6] or [6 < x]

     Si no existe solución, 'fourier_elim' devuelve 'emptyset', y si la
     solución son todos los reales, 'fourier_elim' devuelve
     'universalset':

          (%i4) fourier_elim([x < 1, x > 1],[x]);
          (%o4)                       emptyset
          (%i5) fourier_elim([minf < x, x < inf],[x]);
          (%o5)                     universalset

     En caso de que las inecuaciones no sean lineales, 'fourier_elim'
     devuelve una lista de inecuaciones simplificadas:

          (%i6) fourier_elim([x^3 - 1 > 0],[x]);
                         2                             2
          (%o6) [1 < x, x  + x + 1 > 0] or [x < 1, - (x  + x + 1) > 0]
          (%i7) fourier_elim([cos(x) < 1/2],[x]);
          (%o7)                  [1 - 2 cos(x) > 0]

     En lugar de una lista de inecuaciones, el primer argumento pasado a
     'fourier_elim' puede ser una conjunción o disyunción lógica.

          (%i8) fourier_elim((x + y < 5) and (x - y >8),[x,y]);
                                                        3
          (%o8)            [y + 8 < x, x < 5 - y, y < - -]
                                                        2
          (%i9) fourier_elim(((x + y < 5) and x < 1) or  (x - y >8),[x,y]);
          (%o9)          [y + 8 < x] or [x < min(1, 5 - y)]

     La función 'fourier_elim' soporta los operadores de desigualdad
     '<', '<=', '>', '>=', '#' y '='.

     La rutina de eliminación de Fourier dispone de un preprocesador que
     convierte algunas inecuaciones no lineales formadas con las
     funciones del valor absoluto, mínimo y máximo a inecuaciones
     lineales.  Además, el preprocesador admite algunas expresiones que
     son productos o cocientes de términos lineales:

          (%i10) fourier_elim([max(x,y) > 6, x # 8, abs(y-1) > 12],[x,y]);
          (%o10) [6 < x, x < 8, y < - 11] or [8 < x, y < - 11]
           or [x < 8, 13 < y] or [x = y, 13 < y] or [8 < x, x < y, 13 < y]
           or [y < x, 13 < y]
          (%i11) fourier_elim([(x+6)/(x-9) <= 6],[x]);
          (%o11)           [x = 12] or [12 < x] or [x < 9]
          (%i12) fourier_elim([x^2 - 1 # 0],[x]);
          (%o12)      [- 1 < x, x < 1] or [1 < x] or [x < - 1]

     Para hacer uso de esta función, ejecútese 'load(fourier_elim)'.

 -- Función: isreal_p (<e>)

     El predicado 'isreal_p' devuelve 'true' si 'e' representa un número
     real y 'false' si no representa un punto de la recta; en cualquier
     otro caso devuelve una forma nominal.

          (%i1) map('isreal_p, [-1, 0, %i, %pi]);
          (%o1)               [true, true, false, true]

     Las variables de Maxima se interpretan como números reales:

          (%i2) isreal_p(x);
          (%o2)                         true

     La función 'isreal_p' consulta los hechos almacenados en la base de
     datos:
          (%i3) declare(z,complex)$

          (%i4) isreal_p(z);
          (%o4)                      isreal_p(z)

     Con frecuencia, 'isreal_p' devuelve una forma nominal cuando
     debería devolver 'false'; por ejemplo, la función logarítmica no
     toma valores reales en toda la recta real, por lo que
     'isreal_p(log(x))' debería devolver 'false', sin embargo:

          (%i5) isreal_p(log(x));
          (%o5)                   isreal_p(log(x))

     Para hacer uso de esta función, ejecútese 'load(to_poly_solve)'.

     Véase también 'complex_number_p'.

     La función 'isreal_p' es experimental; sus especificaciones pueden
     cambiar y su funcionalidad puede incorporarse a otras funciones de
     Maxima.

 -- Función: new_variable (<type>)

     Devuelve un símbolo de la forma '%[z,n,r,c,g]k', siendo 'k' un
     número entero.  Los valores admisibles para <type> son 'integer',
     'natural_number', 'real', 'natural_number' y 'general'.  Por número
     natural se entiende entero negativo, de manera que el ceero es un
     número natural.

     Cuando <type> no es de ninguno de los tipos indicados más arriba,
     <type> toma por defecto el valor 'general'.  Para enteros, números
     naturales y números complejos, Maxima añade esta información a la
     base de datos de forma automática.

          (%i1) map('new_variable,
                    ['integer, 'natural_number, 'real, 'complex, 'general]);
          (%o1)          [%z144, %n145, %r146, %c147, %g148]
          (%i2) nicedummies(%);
          (%o2)               [%z0, %n0, %r0, %c0, %g0]
          (%i3) featurep(%z0, 'integer);
          (%o3)                         true
          (%i4) featurep(%n0, 'integer);
          (%o4)                         true
          (%i5) is(%n0 >= 0);
          (%o5)                         true
          (%i6) featurep(%c0, 'complex);
          (%o6)                         true

     Es recomendable que al argumento de 'new_variable' se le aplique el
     operador de comilla simple para evitar su evaluación, de esta
     manera se evitan errores como el siguiente:

          (%i7) integer : 12$

          (%i8) new_variable(integer);
          (%o8)                         %g149
          (%i9) new_variable('integer);
          (%o9)                         %z150

     Para hacer uso de esta función, ejecútese 'load(to_poly_solve)'.

     Véase también 'nicedummies'.

 -- Función: nicedummies

     La función 'nicedummies' reescribe los índices, comenzando por
     cero, de las variables de una expresión qua hayan sido introducidas
     por 'new_variable':

          (%i1) new_variable('integer) + 52 * new_variable('integer);
          (%o1)                   52 %z136 + %z135
          (%i2) new_variable('integer) - new_variable('integer);
          (%o2)                     %z137 - %z138
          (%i3) nicedummies(%);
          (%o3)                       %z0 - %z1

     Para hacer uso de esta función, ejecútese 'load(to_poly_solve)'.

     Véase también 'new_variable'.

 -- Función: parg (<x>)

     La función 'parg' es una versión con capacidades simplificadoras de
     la función de argumento complejo 'carg':

          (%i1) map('parg,[1,1+%i,%i, -1 + %i, -1]);
                                  %pi  %pi  3 %pi
          (%o1)               [0, ---, ---, -----, %pi]
                                   4    2     4

     Si el argumento pasado a la función 'parg' no es una constante, se
     devolverá una forma nominal:

          (%i2) parg(x + %i * sqrt(x));
          (%o2)                 parg(x + %i sqrt(x))

     Si 'sign' detecta que la entrada es un número real negativo o
     positivo, 'parg' devuelve una forma no nominal aunque la entrada no
     sea una constante:

          (%i3) parg(abs(x));
          (%o3) 0
          (%i4) parg(-x^2-1);
          (%o4)                          %pi

     La función 'sign' suele ignorar las variables declaradas complejas
     ('declare(x,complex)'); en tales casos, 'parg' puede retornar
     valores incorrectos:

          (%i1) declare(x,complex)$

          (%i2) parg(x^2 + 1);
          (%o2) 0

     Para hacer uso de esta función, ejecútese 'load(to_poly_solve)'.

     Véanse también 'carg', 'isreal_p'.

 -- Función: real_imagpart_to_conjugate (<e>)

     La función 'real_imagpart_to_conjugate' reemplaza todas las
     llamadas a 'realpart' y 'imagpart' presentes en una expresión por
     llamadas a 'conjugate', obteniendo otra expresión equivalente:

          (%i1) declare(x, complex)$

          (%i2) real_imagpart_to_conjugate(realpart(x) +  imagpart(x) = 3);
                    conjugate(x) + x   %i (x - conjugate(x))
          (%o2)     ---------------- - --------------------- = 3
                           2                     2

     Para hacer uso de esta función, ejecútese 'load(to_poly_solve)'.

 -- Función: rectform_log_if_constant (<e>)

     La función 'rectform_log_if_constant' convierte todos los términos
     de la forma 'log(c)' a 'rectform(log(c))', siendo 'c' una expresión
     constante o declarada como tal.

          (%i1) rectform_log_if_constant(log(1-%i) - log(x - %i));
                                           log(2)   %i %pi
          (%o1)            - log(x - %i) + ------ - ------
                                             2        4
          (%i2) declare(a,constant, b,constant)$

          (%i3) rectform_log_if_constant(log(a + %i*b));
                                 2    2
                            log(b  + a )
          (%o3)             ------------ + %i atan2(b, a)
                                 2

     Para hacer uso de esta función, ejecútese 'load(to_poly_solve)'.

 -- Función: simp_inequality (<e>)

     La función 'simp_inequality' aplica ciertas simplificaciones a
     conjunciones y disyunciones de inecuaciones.

     Limitaciones La función 'simp_inequality' está limitada en al menos
     dos aspectos; en primer lugar, las simplificaciones son locales:

          (%i1) simp_inequality((x > minf) %and (x < 0));
          (%o2) (x>1) %and (x<1)

     En segundo lugar, 'simp_inequality' no tiene en cuenta los hechos
     de la base de datos:

          (%i2) assume(x > 0)$

          (%i3) simp_inequality(x > 0);
          (%o3)                         x > 0

     Para hacer uso de esta función, ejecútese 'load(to_poly_solve)'.

 -- Función: standardize_inverse_trig (<e>)

     Esta función aplica las identidades 'cot(x) = atan(1/x)' y 'acsc(x)
     = asin(1/x)' y similares con 'asec', 'acoth' y 'acsch'.  Consúltese
     Abramowitz y Stegun, ecuaciones 4.4.6 a 4.4.8 y 4.6.4 a 4.6.6.

     Para hacer uso de esta función, ejecútese 'load(to_poly_solve)'.

 -- Función: subst_parallel (<l>, <e>)

     Dada la ecuación o lista de ecuaciones <l> y la expresión <e>,
     sustituye en paralelo en <e> los miembros izquierdos de las
     ecuaciones por los derechos:

          (%i1) load(to_poly_solve)$

          (%i2) subst_parallel([x=y,y=x], [x,y]);
          (%o2)                        [y, x]

     Compárese el resultado anterior con las sustituciones hechas en
     serie:

          (%i3) subst([x=y,y=x],[x,y]);
          (%o3)                        [x, x]

     La función 'subst_parallel' es similar a 'sublis', excepto por el
     hecho de que 'subst_parallel' permite la sustitución de expresiones
     no atómicas:

          (%i4) subst_parallel([x^2 = a, y = b], x^2 * y);
          (%o4)                          a b
          (%i5) sublis([x^2 = a, y = b], x^2 * y);

                                                                       2
          sublis: left-hand side of equation must be a symbol; found: x
           -- an error. To debug this try: debugmode(true);

     Las sustituciones hechas por 'subst_parallel' son literales, no
     semánticas, por lo que 'subst_parallel' no reconoce que x * y sea
     una subexpresión de x^2 * y:

          (%i6) subst_parallel([x * y = a], x^2 * y);
                                         2
          (%o6)                         x  y

     La función 'subst_parallel' realiza todas las sustituciones antes
     de proceder a la simplificación, lo que permite sustituciones en
     expresiones condicionales que podrín producir errores en caso de
     simplificar antes de sustituir:

          (%i7) subst_parallel([x = 0], %if(x < 1, 5, log(x)));
          (%o7)                           5
          (%i8) subst([x = 0], %if(x < 1, 5, log(x)));

          log: encountered log(0).
           -- an error. To debug this try: debugmode(true);

     Para hacer uso de esta función, ejecútese
     'load(to_poly_solve_extra.lisp)'.

     Véanse también 'subst', 'sublis' y 'ratsubst'.

 -- Función: to_poly (<e>, <l>)

     La función 'to_poly' intenta convertir la ecuación <e> en un
     sistema de polinomios, junto con restricciones en forma de
     desigualdades.  Las soluciones del sistema polinómico que cumplan
     las restricciones son, a su vez, las soluciones de la ecuación <e>.
     Dicho de manera informal, 'to_poly' intenta pasar a forma de
     polinomio la ecuación <e>; un ejemplo ayudará a aclarar su
     comportamiento:

          (%i1) load(to_poly_solve)$

          (%i2) to_poly(sqrt(x) = 3, [x]);
                                      2
          (%o2) [[%g130 - 3, x = %g130 ],
                                %pi                               %pi
                             [- --- < parg(%g130), parg(%g130) <= ---], []]
                                 2                                 2

     Las condiciones '-%pi/2<parg(%g130),parg(%g130)<=%pi/2' dicen que
     '%g130' está en el rango de la función radical; cuando eso se
     cumpla, el conjunto de ecuaciones de 'sqrt(x) = 3' coincide con el
     de '%g130-3,x=%g130^2'.

     Para convertir a forma polinómica una expresión trigonométrica, es
     necesario introducir una sustitución no algebraica; tal sustitución
     se devuelve en la tercera lista de la respuesta de 'to_poly':

          (%i3) to_poly(cos(x),[x]);
                          2                                 %i x
          (%o3)    [[%g131  + 1], [2 %g131 # 0], [%g131 = %e    ]]

     Los términos constantes no se transforman a polinomios a menos que
     el número uno se introduzca en la lista de variables:

          (%i4) to_poly(x = sqrt(5),[x]);
          (%o4)                [[x - sqrt(5)], [], []]
          (%i5) to_poly(x = sqrt(5),[1,x]);
                                      2
          (%o5) [[x - %g132, 5 = %g132 ],
                                %pi                               %pi
                             [- --- < parg(%g132), parg(%g132) <= ---], []]
                                 2                                 2

     Para generar un polinomio que tenga sqrt(5) + sqrt(7) como raíz
     puede hacerse lo siguiente:

          (%i6) first(elim_allbut(first(to_poly(x = sqrt(5) + sqrt(7),
                                                [1,x])), [x]));
                                    4       2
          (%o6)                   [x  - 24 x  + 4]

     Para hacer uso de esta función, ejecútese 'load(to_poly)'.

     Véase también 'to_poly_solve'.

 -- Función: to_poly_solve (<e>, <l>, [options])

     La función 'to_poly_solve' intenta resolver las ecuaciones <e> de
     incógnitas <l>.  El argumento <e> puede ser una única ecuación, o
     una lista o conjunto de ecuaciones; de forma similar, <l> puede ser
     un símbolo o una lista o conjunto de símbolos.  Cuando uno de los
     elementos de <e> no sea una igualdad, como x^2 -1, se supodrá que
     es igual a cero.

     La estrategia básica de 'to_poly_solve' consiste en convertir la
     entrada en un polinomio y luego invocar a la función 'algsys'.
     Internamente, 'to_poly_solve' asigna a 'algexact' el valor 'true'.
     Para cambiar el valor de 'algexact', debe anñadirse
     ''algexact=false' a la lista de argumentos de 'to_poly_solve'.

     Cuando 'to_poly_solve' consigue determinar el conjunto de
     soluciones, cada miembro del conjunto de soluciones es una lista en
     un objeto '%union':

          (%i1) load(to_poly_solve)$

          (%i2) to_poly_solve(x*(x-1) = 0, x);
          (%o2)               %union([x = 0], [x = 1])

     Cuando 'to_poly_solve' es incapaz de determinar el conjunto de
     soluciones, devuelve una forma nominal de '%solve' y muestra un
     mensaje de aviso:

          (%i3) to_poly_solve(x^k + 2* x + 1 = 0, x);

          Nonalgebraic argument given to 'to_poly'
          unable to solve
                                    k
          (%o3)            %solve([x  + 2 x + 1 = 0], [x])

     A veces se puede obtener la solución haciendo una sustitución en
     '%solve':

          (%i4) subst(k = 2, %);
          (%o4)                   %union([x = - 1])

     Especialmente en el caso de las funciones trigonométricas, los
     resultados pueden incorporar números enteros arbitrarios de la
     forma '%zXXX', siendo 'XXX' un índice entero:

          (%i5) to_poly_solve(sin(x) = 0, x);
          (%o5)   %union([x = 2 %pi %z33 + %pi], [x = 2 %pi %z35])

     Para inicializar los índices, hágase uso de 'nicedummies':

          (%i6) nicedummies(%);
          (%o6)    %union([x = 2 %pi %z0 + %pi], [x = 2 %pi %z1])

     En ocasiones, se introducen números complejos arbitrarios de la
     forma '%cXXX', o reales de la forma '%rXXX'.  La función
     'nicedummies' inicializa estos identificadores a cero.

     También a veces, la solución incorpora versiones simplificadas de
     los operadores lógicos '%and', '%or' y '%if', que representan,
     respectivamente, la conjunción, la disyunción y la implicación:

          (%i7) sol : to_poly_solve(abs(x) = a, x);
          (%o7) %union(%if(isnonnegative_p(a), [x = - a], %union()),
                                %if(isnonnegative_p(a), [x = a], %union()))
          (%i8) subst(a = 42, sol);
          (%o8)             %union([x = - 42], [x = 42])
          (%i9) subst(a = -42, sol);
          (%o9)                       %union()

     El conjunto vacío se representa por '%union'.

     La función 'to_poly_solve' es capaz de resolver algunas ecuaciones
     con potencias racionales, potencias no racionales, valores
     absolutos, funciones trigonométricas y funciones del mínimo y del
     máximo.  También puede resolver algunas ecuaciones resolubles en
     términos de la función W de Lambert:

          (%i1) load(to_poly_solve)$

          (%i2) to_poly_solve(set(max(x,y) = 5, x+y = 2), set(x,y));
          (%o2)      %union([x = - 3, y = 5], [x = 5, y = - 3])
          (%i3) to_poly_solve(abs(1-abs(1-x)) = 10,x);
          (%o3)             %union([x = - 10], [x = 12])
          (%i4) to_poly_solve(set(sqrt(x) + sqrt(y) = 5, x + y = 10),
                              set(x,y));
                               3/2               3/2
                              5    %i - 10      5    %i + 10
          (%o4) %union([x = - ------------, y = ------------],
                                   2                 2
                                          3/2                 3/2
                                         5    %i + 10        5    %i - 10
                                    [x = ------------, y = - ------------])
                                              2                   2
          (%i5) to_poly_solve(cos(x) * sin(x) = 1/2,x,
                              'simpfuncs = ['expand, 'nicedummies]);
                                                   %pi
          (%o5)              %union([x = %pi %z0 + ---])
                                                    4
          (%i6) to_poly_solve(x^(2*a) + x^a + 1,x);
                                                  2 %i %pi %z81
                                                  -------------
                                            1/a         a
                            (sqrt(3) %i - 1)    %e
          (%o6) %union([x = -----------------------------------],
                                            1/a
                                           2
                                                            2 %i %pi %z83
                                                            -------------
                                                      1/a         a
                                    (- sqrt(3) %i - 1)    %e
                               [x = -------------------------------------])
                                                     1/a
                                                    2
          (%i7) to_poly_solve(x * exp(x) = a, x);
          (%o7)              %union([x = lambert_w(a)])

     En el caso de inecuaciones lineales, 'to_poly_solve' aplica
     automáticamente la eliminación de Fourier:

          (%i8) to_poly_solve([x + y < 1, x - y >= 8], [x,y]);
                                         7
          (%o8) %union([x = y + 8, y < - -],
                                         2
                                                                        7
                                           [y + 8 < x, x < 1 - y, y < - -])
                                                                        2

     Los argumentos opcionales deben tener forma de ecuación;
     generalmente, el orden de estas opciones no reviste importancia.

        * 'simpfuncs = l', siendo 'l' una lista de funciones, aplica la
          composición de los elementos de 'l' a cada solución:
               (%i1) to_poly_solve(x^2=%i,x);
                                              1/4             1/4
               (%o1)       %union([x = - (- 1)   ], [x = (- 1)   ])
               (%i2) to_poly_solve(x^2= %i,x, 'simpfuncs = ['rectform]);
                                     %i         1             %i         1
               (%o2) %union([x = - ------- - -------], [x = ------- + -------])
                                   sqrt(2)   sqrt(2)        sqrt(2)   sqrt(2)

          A veces, una simplificación puede anular una simplificación
          anterior:
               (%i3) to_poly_solve(x^2=1,x);
               (%o3)              %union([x = - 1], [x = 1])
               (%i4) to_poly_solve(x^2= 1,x, 'simpfuncs = [polarform]);
                                                       %i %pi
               (%o4)            %union([x = 1], [x = %e      ]

          Maxima no comprueba que los elementos de la lista de funciones
          'l' sean todos simplificaciones:
               (%i5) to_poly_solve(x^2 = %i,x, 'simpfuncs = [lambda([s],s^2)]);
               (%o5)                   %union([x = %i])

          Para convertir cada solución a real de doble precisión hágase
          uso de 'simpfunc = ['dfloat]':
               (%i6) to_poly_solve(x^3 +x + 1 = 0,x,
                                   'simpfuncs = ['dfloat]), algexact : true;
               (%o6) %union([x = - .6823278038280178],
               [x = .3411639019140089 - 1.161541399997251 %i],
               [x = 1.161541399997251 %i + .3411639019140089])

        * Con la opción 'use_grobner = true' se aplica la función
          'poly_reduced_grobner' a las ecuaciones antes de intentar
          resolverlas.  En primer lugar, esta opción proporciona una
          manera de soslayar algunas debilidades de la función 'algsys':

               (%i7) to_poly_solve([x^2+y^2=2^2,(x-1)^2+(y-1)^2=2^2],[x,y],
                                   'use_grobner = true);
                                   sqrt(7) - 1      sqrt(7) + 1
               (%o7) %union([x = - -----------, y = -----------],
                                        2                2
                                                sqrt(7) + 1        sqrt(7) - 1
                                           [x = -----------, y = - -----------])
                                                     2                  2
               (%i8) to_poly_solve([x^2+y^2=2^2,(x-1)^2+(y-1)^2=2^2],[x,y]);
               (%o8)                       %union()

        * 'maxdepth = k', siendo 'k' un positivo entero, controla el
          nivel de recursión.  El valor por defecto es cinco.  Cuando se
          excede el nivel de recursión se obtiene un mensaje de error:
               (%i9) to_poly_solve(cos(x) = x,x, 'maxdepth = 2);

               Unable to solve
               Unable to solve
               (%o9)        %solve([cos(x) = x], [x], maxdepth = 2)

        * Con 'parameters = l', siendo 'l' una lista de símbolos, el
          programa intenta encontrar una solución válida para todos los
          miembros de la lista 'l':
               (%i10) to_poly_solve(a * x = x, x);
               (%o10)                   %union([x = 0])
               (%i11) to_poly_solve(a * x = x, x, 'parameters = [a]);
               (%o11) %union(%if(a - 1 = 0, [x = %c111], %union()),
                                              %if(a - 1 # 0, [x = 0], %union()))
          En '(%o2)', el programa introduce una variable ficticia; para
          reinicializarla, úsese la función 'nicedummies':
               (%i12) nicedummies(%);
               (%o12) %union(%if(a - 1 = 0, [x = %c0], %union()),
                                              %if(a - 1 # 0, [x = 0], %union()))

     'to_poly_solve' utiliza información almacenada en el array
     'one_to_one_reduce' para resolver ecuaciones de la forma f(a) =
     f(b).  La asignación 'one_to_one_reduce['f,'f] : lambda([a,b],
     a=b)' le dice a 'to_poly_solve' que el conjunto de soluciones de
     f(a) = f(b) es igual al conjunto de soluciones de a=b:
          (%i13) one_to_one_reduce['f,'f] : lambda([a,b], a=b)$

          (%i14) to_poly_solve(f(x^2-1) = f(0),x);
          (%o14)             %union([x = - 1], [x = 1])

     De forma más general, la asignación 'one_to_one_reduce['f,'g] :
     lambda([a,b], w(a,b)=0' le indica a 'to_poly_solve' que el cojunto
     de soluciones de f(a) = f(b) es igual al conjunto de soluciones de
     w(a,b) = 0:
          (%i15) one_to_one_reduce['f,'g] : lambda([a,b], a = 1 + b/2)$

          (%i16) to_poly_solve(f(x) - g(x),x);
          (%o16)                   %union([x = 2])

     Además, 'to_poly_solve' utiliza información almacenada en el array
     'function_inverse' para resolver ecuaciones de la forma f(a) = b.
     La asignación 'function_inverse['f] : lambda([s], g(s))' le dice a
     'to_poly_solve' que el conjunto de soluciones de f(x) = b es igual
     al conjunto de soluciones de x = g(b):
          (%i17) function_inverse['Q] : lambda([s], P(s))$

          (%i18) to_poly_solve(Q(x-1) = 2009,x);
          (%o18)              %union([x = P(2009) + 1])
          (%i19) function_inverse['G] : lambda([s], s+new_variable(integer));
          (%o19)       lambda([s], s + new_variable(integer))
          (%i20) to_poly_solve(G(x - a) = b,x);
          (%o20)             %union([x = b + a + %z125])

     Notas

        * Las incógnitas a resolver no necesitan ser símbolos, lo cual
          es cierto cuando 'fullratsubst' es capaz de hacer las
          sustituciones de forma apropiadas:
               (%i1) to_poly_solve([x^2 + y^2 + x * y = 5, x * y = 8],
                                   [x^2 + y^2, x * y]);
                                                 2    2
               (%o1)           %union([x y = 8, y  + x  = - 3])

        * Cuando las ecuaciones involucran conjugados de complejos, el
          programa añade automáticamente las ecuaciones conjugadas:
               (%i1) declare(x,complex)$

               (%i2) to_poly_solve(x + (5 + %i) * conjugate(x) = 1, x);
                                                  %i + 21
               (%o2)              %union([x = - -----------])
                                                25 %i - 125
               (%i3) declare(y,complex)$

               (%i4) to_poly_solve(set(conjugate(x) - y = 42 + %i,
                                       x + conjugate(y) = 0), set(x,y));
                                          %i - 42        %i + 42
               (%o4)        %union([x = - -------, y = - -------])
                                             2              2

        * Cuando las funciones involucran valores absolutos,
          'to_poly_solve' consulta los hechos de la base de datos para
          decidir si los argumentos de los valores absolutos son números
          complejos:
               (%i1) to_poly_solve(abs(x) = 6, x);
               (%o1)              %union([x = - 6], [x = 6])
               (%i2) declare(z,complex)$

               (%i3) to_poly_solve(abs(z) = 6, z);
               (%o3) %union(%if((%c11 # 0) %and (%c11 conjugate(%c11) - 36 =
                                                      0), [z = %c11], %union()))

          Esta es la única situación en la que 'to_poly_solve' consulta
          la base de datos; si una incógnita se declara, por ejemplo,
          como entero, 'to_poly_solve' lo ignora.

     Para hacer uso de esta función, ejecútese 'load(to_poly_solve)'.

     Véase también 'algexact', 'resultant', 'algebraic' y 'to_poly'.


File: maxima.info,  Node: unit,  Next: zeilberger,  Prev: to_poly_solve,  Up: Top

78 unit
*******

* Menu:

* Introducción a units::       
* Funciones y variables para units::       


File: maxima.info,  Node: Introducción a units,  Next: Funciones y variables para units,  Prev: unit,  Up: unit

78.1 Introducción a units
=========================

El paquete 'unit' permite al usuario hacer cambios de unidades y llevar
a cabo el análisis dimensional de las ecuaciones.  La forma de operar de
este paquete es radicalmente diferente de la del paquete original de
Maxima; mientras que en el paquete original era tan solo una lista de
definiciones, aquí se utiliza un conjunto de reglas que permiten
seleccionar al usuario en qué unidades debe devolverse la expresión
final.

Junto con el análisis dimensional, el paquete aporta una serie de
herramientas para controlar las opciones de conversión y simplificación.
Además de la conversión automática adaptable a las necesidades del
usuario, el paquete 'unit' permite hacer conversiones a la manera
tradicional.

Nota: Cuando los factores de conversión no son exactos, Maxima los
transformará a fracciones como consecuencia de la metodología utilizada
para simplificar las unidades.  Los mensajes de aviso concernientes a
estas transformaciones están desactivados por defecto en el caso de las
unidades (lo habitual es que estén activados en otros contextos) debido
a que al ser una operación muy frecuente, serían un estorbo.  El estado
previo de la variable 'ratprint' queda restaurado tras la conversión de
las unidades, de manera que se mantendrá la opción seleccionada por el
usuario; en caso de que éste necesite ver dichos avisos, podrá hacer la
asignación 'unitverbose:on' para reactivarlos desde el proceso de
conversión de unidades.

El paquete 'unit' se aloja en el directorio 'share/contrib/unit' y se
ajusta a las convenciones de Maxima para la carga de paquetes:

     (%i1) load("unit")$
     *******************************************************************
     *                       Units version 0.50                        *
     *          Definitions based on the NIST Reference on             *
     *              Constants, Units, and Uncertainty                  *
     *       Conversion factors from various sources including         *
     *                   NIST and the GNU units package                *
     *******************************************************************

     Redefining necessary functions...
     WARNING: DEFUN/DEFMACRO:
              redefining function TOPLEVEL-MACSYMA-EVAL ...
     WARNING: DEFUN/DEFMACRO: redefining function MSETCHK ...
     WARNING: DEFUN/DEFMACRO: redefining function KILL1 ...
     WARNING: DEFUN/DEFMACRO: redefining function NFORMAT ...
     Initializing unit arrays...
     Done.

Los avisos del tipo 'WARNING' son normales y no deben interpretarse como
errores; tan solo indican que el paquete 'unit' está redefiniendo
funciones que ya estaban definidas en Maxima.  Esto es necesario para
que las unidades se gestionen de forma correcta.  El usuario debe tener
en cuenta que si otros paquetes han cambiado las definiciones de estas
funciones, tales cambios serán ignorados por el proceso de carga de
'unit'.

El paquete 'unit' también carga el fichero de Lisp
'unit-functions.lisp', el cual contiene las funciones Lisp necesarias.

El autor principal de este paquete es Clifford Yapp, quien ha recibido
ayuda y asistencia, entre otros, de Barton Willis y Robert Dodier.


File: maxima.info,  Node: Funciones y variables para units,  Prev: Introducción a units,  Up: unit

78.2 Funciones y variables para units
=====================================

 -- Función: setunits (<list>)

     El paquete 'unit' no utiliza por defecto dimensiones derivadas,
     pero convierte todas las unidades a las siete fundamentales en
     unidades MKS.

          (%i2) N;
                                               kg m
          (%o2)                                ----
                                                 2
                                                s
          (%i3) dyn;
                                             1      kg m
          (%o3)                           (------) (----)
                                           100000     2
                                                     s
          (%i4) g;
                                              1
          (%o4)                             (----) (kg)
                                             1000
          (%i5) centigram*inch/minutes^2;
                                            127        kg m
          (%o5)                       (-------------) (----)
                                       1800000000000     2
                                                        s

     Este es el comportamiento que se desea en ciertos casos.  Si el
     usuario necesita utilizar otras unidades, habrá de utilizar la
     instrucción 'setunits':
          (%i6) setunits([centigram,inch,minute]);
          (%o6)                                done
          (%i7) N;
                                      1800000000000   %in cg
          (%o7)                      (-------------) (------)
                                           127            2
                                                      %min
          (%i8) dyn;
                                         18000000   %in cg
          (%o8)                         (--------) (------)
                                           127          2
                                                    %min
          (%i9) g;
          (%o9)                             (100) (cg)
          (%i10) centigram*inch/minutes^2;
                                              %in cg
          (%o10)                              ------
                                                  2
                                              %min

     La especificación de las variables es relativamente flexible.  Por
     ejemplo, si se quiere volver a utilizar kilogramos, metros y
     segundos como unidades por defecto, podemos hacer:
          (%i11) setunits([kg,m,s]);
          (%o11)                               done
          (%i12) centigram*inch/minutes^2;
                                            127        kg m
          (%o12)                      (-------------) (----)
                                       1800000000000     2
                                                        s

     Las unidades derivadas también se controlan con esta misma
     instrucción:
          (%i17) setunits(N);
          (%o17)                               done
          (%i18) N;
          (%o18)                                 N
          (%i19) dyn;
                                              1
          (%o19)                           (------) (N)
                                            100000
          (%i20) kg*m/s^2;
          (%o20)                                 N
          (%i21) centigram*inch/minutes^2;
                                              127
          (%o21)                        (-------------) (N)
                                         1800000000000

     Téngase en cuenta que el paquete 'unit' reconoce que la combinación
     de masa, longitud e inversa del cuadrado del tiempo da lugar a una
     fuerza, convirtiéndola a newtons.  Esta es la forma general en la
     que trabaja Maxima.  Si el usuario prefiere dinas a newtons, tan
     solo tendrá que hacer lo siguiente:
          (%i22) setunits(dyn);
          (%o22)                               done
          (%i23) kg*m/s^2;
          (%o23)                          (100000) (dyn)
          (%i24) centigram*inch/minutes^2;
                                            127
          (%o24)                         (--------) (dyn)
                                          18000000

     Para desactivar una unidad se utiliza la instrucción 'uforget':
          (%i26) uforget(dyn);
          (%o26)                               false
          (%i27) kg*m/s^2;
                                               kg m
          (%o27)                               ----
                                                 2
                                                s
          (%i28) centigram*inch/minutes^2;
                                            127        kg m
          (%o28)                      (-------------) (----)
                                       1800000000000     2
                                                        s
     Esto también hubiese funcionado con 'uforget(N)' o
     'uforget(%force)'.

     Véase también 'uforget'.  Para hacer uso de esta función ejecútese
     'load("unit")'.

 -- Función: uforget (<list>)
     Por defecto, el paquete 'unit' convierte todas las unidades a las
     siete fundamentales del sistema MKS. Este comportamiento puede
     alterarse mediante la instrucción 'setunits'.  Después, si el
     usuario quiere restaurar el comportamiento por defecto podrá
     hacerlo para una dimensión determinada haciendo uso de la
     instrucción 'uforget':
          (%i13) setunits([centigram,inch,minute]);
          (%o13)                               done
          (%i14) centigram*inch/minutes^2;
                                              %in cg
          (%o14)                              ------
                                                  2
                                              %min
          (%i15) uforget([cg,%in,%min]);
          (%o15)                      [false, false, false]
          (%i16) centigram*inch/minutes^2;
                                            127        kg m
          (%o16)                      (-------------) (----)
                                       1800000000000     2
                                                        s

     La instrucción 'uforget' opera sobre dimensiones, no sobre
     unidades, de modo que valdrá para cualquier unidad de una dimensión
     concreta.  La propia dimensión es una argumento válido para esta
     función.

     Véase también 'setunits'.  Para hacer uso de esta función ejecútese
     'load("unit")'.

 -- Función: convert (<expr>, <list>)
     La función 'convert' permite conversiones de una sola vez sin
     alterar el entorno global de ejecución.  Acepta tanto un único
     argumento como una lista de unidades a utilizar en las
     conversiones.  Cuando se realiza una llamada a 'convert' se ignora
     el sistema global de evaluación, con el fin de evitar que el
     resultado deseado sea nuevamente transformado.  Como consecuencia
     de esto, en los cálculos con decimales, los avisos de tipo 'rat' se
     harán visibles si la variable global 'ratprint' vale 'true'.  Otra
     propiedad de 'convert' es que permite al usuario hacer conversiones
     al sistema fundamental de dimensiones incluso cuando el entorno ha
     sido ajustado para simplificar a una dimensión derivada.
          (%i2) kg*m/s^2;
                                               kg m
          (%o2)                                ----
                                                 2
                                                s
          (%i3) convert(kg*m/s^2,[g,km,s]);
                                               g km
          (%o3)                                ----
                                                 2
                                                s
          (%i4) convert(kg*m/s^2,[g,inch,minute]);

          `rat' replaced 39.37007874015748 by 5000/127 = 39.37007874015748
                                        18000000000   %in g
          (%o4)                        (-----------) (-----)
                                            127           2
                                                      %min
          (%i5) convert(kg*m/s^2,[N]);
          (%o5)                                  N
          (%i6) convert(kg*m^2/s^2,[N]);
          (%o6)                                 m N
          (%i7) setunits([N,J]);
          (%o7)                                done
          (%i8) convert(kg*m^2/s^2,[N]);
          (%o8)                                 m N
          (%i9) convert(kg*m^2/s^2,[N,inch]);

          `rat' replaced 39.37007874015748 by 5000/127 = 39.37007874015748
                                           5000
          (%o9)                           (----) (%in N)
                                           127
          (%i10) convert(kg*m^2/s^2,[J]);
          (%o10)                                 J
          (%i11) kg*m^2/s^2;
          (%o11)                                 J
          (%i12) setunits([g,inch,s]);
          (%o12)                               done
          (%i13) kg*m/s^2;
          (%o13)                                 N
          (%i14) uforget(N);
          (%o14)                               false
          (%i15) kg*m/s^2;
                                          5000000   %in g
          (%o15)                         (-------) (-----)
                                            127       2
                                                     s
          (%i16) convert(kg*m/s^2,[g,inch,s]);

          `rat' replaced 39.37007874015748 by 5000/127 = 39.37007874015748
                                          5000000   %in g
          (%o16)                         (-------) (-----)
                                            127       2
                                                     s

     Véanse también 'setunits' y 'uforget'.  Para hacer uso de esta
     función ejecútese 'load("unit")'.

 -- Variable opcional: usersetunits
     Valor por defecto: ninguno

     En caso de que el usuario desee que el comportamiento por defecto
     del paquete 'unit' sea distinto del descrito, puede hacer uso del
     fichero 'maxima-init.mac' y de la variable global 'usersetunits'.
     El paquete 'unit' comprobará al ser cargado si se le ha dado a esta
     variable una lista de unidades; en caso afirmativo, aplicará
     'setunits' a las unidades de esta lista y las utilizará por
     defecto.  Una llamada a la función 'uforget' permitirá retornar al
     comportamiento establecido por defecto por el usuario.  Por
     ejemplo, si en el archivo 'maxima-init.mac' se tiene el siguiente
     código:
          usersetunits : [N,J];

     observaríamos el siguiente comportamiento:
          (%i1) load("unit")$
          *******************************************************************
          *                       Units version 0.50                        *
          *          Definitions based on the NIST Reference on             *
          *              Constants, Units, and Uncertainty                  *
          *       Conversion factors from various sources including         *
          *                   NIST and the GNU units package                *
          *******************************************************************

          Redefining necessary functions...
          WARNING: DEFUN/DEFMACRO: redefining function
           TOPLEVEL-MACSYMA-EVAL ...
          WARNING: DEFUN/DEFMACRO: redefining function MSETCHK ...
          WARNING: DEFUN/DEFMACRO: redefining function KILL1 ...
          WARNING: DEFUN/DEFMACRO: redefining function NFORMAT ...
          Initializing unit arrays...
          Done.
          User defaults found...
          User defaults initialized.
          (%i2) kg*m/s^2;
          (%o2)                                  N
          (%i3) kg*m^2/s^2;
          (%o3)                                  J
          (%i4) kg*m^3/s^2;
          (%o4)                                 J m
          (%i5) kg*m*km/s^2;
          (%o5)                             (1000) (J)
          (%i6) setunits([dyn,eV]);
          (%o6)                                done
          (%i7) kg*m/s^2;
          (%o7)                           (100000) (dyn)
          (%i8) kg*m^2/s^2;
          (%o8)                     (6241509596477042688) (eV)
          (%i9) kg*m^3/s^2;
          (%o9)                    (6241509596477042688) (eV m)
          (%i10) kg*m*km/s^2;
          (%o10)                   (6241509596477042688000) (eV)
          (%i11) uforget([dyn,eV]);
          (%o11)                           [false, false]
          (%i12) kg*m/s^2;
          (%o12)                                 N
          (%i13) kg*m^2/s^2;
          (%o13)                                 J
          (%i14) kg*m^3/s^2;
          (%o14)                                J m
          (%i15) kg*m*km/s^2;
          (%o15)                            (1000) (J)

     De no haber hecho uso de 'usersetunits', las entradas iniciales
     hubiesen sido convertidas a unidades MKS y cualquier llamada a
     'uforget' hubiese retornado también a MKS. Sin embargo, las
     preferencias establecidas por el usuario se respetan en ambos
     casos.  Para eliminar las preferencias del usuario y volver a
     utilizar las establecidas por defecto por el paquete 'unit', debe
     utilizarse la instrucción 'dontusedimension'.  La función 'uforget'
     puede restaurar nuevamente las preferencias del usuario, pero sólo
     si 'usedimension' mantiene su valor.  Alternativamente,
     'kill(usersetunits)' eliminará completamente cualquier vestigio de
     las preferencias del usuario durante la sesión actual.  Véanse a
     continuación algunos ejemplos de aplicación de estas opciones:
          (%i2) kg*m/s^2;
          (%o2)                                  N
          (%i3) kg*m^2/s^2;
          (%o3)                                  J
          (%i4) setunits([dyn,eV]);
          (%o4)                                done
          (%i5) kg*m/s^2;
          (%o5)                           (100000) (dyn)
          (%i6) kg*m^2/s^2;
          (%o6)                     (6241509596477042688) (eV)
          (%i7) uforget([dyn,eV]);
          (%o7)                          [false, false]
          (%i8) kg*m/s^2;
          (%o8)                                  N
          (%i9) kg*m^2/s^2;
          (%o9)                                  J
          (%i10) dontusedimension(N);
          (%o10)                             [%force]
          (%i11) dontusedimension(J);
          (%o11)                         [%energy, %force]
          (%i12) kg*m/s^2;
                                               kg m
          (%o12)                               ----
                                                 2
                                                s
          (%i13) kg*m^2/s^2;
                                                   2
                                               kg m
          (%o13)                               -----
                                                 2
                                                s
          (%i14) setunits([dyn,eV]);
          (%o14)                               done
          (%i15) kg*m/s^2;
                                               kg m
          (%o15)                               ----
                                                 2
                                                s
          (%i16) kg*m^2/s^2;
                                                   2
                                               kg m
          (%o16)                               -----
                                                 2
                                                s
          (%i17) uforget([dyn,eV]);
          (%o17)                         [false, false]
          (%i18) kg*m/s^2;
                                               kg m
          (%o18)                               ----
                                                 2
                                                s
          (%i19) kg*m^2/s^2;
                                                   2
                                               kg m
          (%o19)                               -----
                                                 2
                                                s
          (%i20) usedimension(N);
          Done.  To have Maxima simplify to this dimension, use
          setunits([unit]) to select a unit.
          (%o20)                               true
          (%i21) usedimension(J);
          Done.  To have Maxima simplify to this dimension, use
          setunits([unit]) to select a unit.
          (%o21)                               true
          (%i22) kg*m/s^2;
                                               kg m
          (%o22)                               ----
                                                 2
                                                s
          (%i23) kg*m^2/s^2;
                                                   2
                                               kg m
          (%o23)                               -----
                                                 2
                                                s
          (%i24) setunits([dyn,eV]);
          (%o24)                               done
          (%i25) kg*m/s^2;
          (%o25)                          (100000) (dyn)
          (%i26) kg*m^2/s^2;
          (%o26)                    (6241509596477042688) (eV)
          (%i27) uforget([dyn,eV]);
          (%o27)                           [false, false]
          (%i28) kg*m/s^2;
          (%o28)                                 N
          (%i29) kg*m^2/s^2;
          (%o29)                                 J
          (%i30) kill(usersetunits);
          (%o30)                               done
          (%i31) uforget([dyn,eV]);
          (%o31)                          [false, false]
          (%i32) kg*m/s^2;
                                               kg m
          (%o32)                               ----
                                                 2
                                                s
          (%i33) kg*m^2/s^2;
                                                   2
                                               kg m
          (%o33)                               -----
                                                 2
                                                s

     Desafortunadamente, esta amplia variedad de opciones puede resultar
     confusa en un primer momento, pero una vez se practica un poco con
     ellas, el usuario comprobará que tiene un control absoluto sobre su
     entorno de trabajo.

 -- Función: metricexpandall (<x>)

     Reconstruye automáticamente las listas globales de unidades creando
     todas los múltiplos y submúltiplos métricos necesarios.  El
     argumento numérico <x> se utiliza para especificar cuántos prefijos
     numéricos quiere utilizar el usuario.  Los argumentos son los
     siguientes:
                         0 - none. Only base units
                         1 - kilo, centi, milli
          (por defecto)  2 - giga, mega, kilo, hecto, deka, deci, centi,
                             milli, micro, nano
                         3 - peta, tera, giga, mega, kilo, hecto, deka,
                             deci, centi, milli, micro, nano, pico,
                             femto
                         4 - todos

     Normalmente, Maxima no definirá el juego completo de múltiplos y
     submúltiplos, lo que implica un número muy grande de unidades, pero
     'metricexpandall' puede utilizarse para reconstruir la lista.  La
     variable fundamental del paquete 'unit' es '%unitexpand'.

 -- Variable opcional: %unitexpand
     Valor por defecto: '2'

     Es el valor suministrado a 'metricexpandall' durante la carga del
     paquete 'unit'.


File: maxima.info,  Node: zeilberger,  Next: Índice de Funciones y Variables,  Prev: unit,  Up: Top

79 zeilberger
*************

* Menu:

* Introducción a zeilberger::
* Funciones y variables para zeilberger::


File: maxima.info,  Node: Introducción a zeilberger,  Next: Funciones y variables para zeilberger,  Prev: zeilberger,  Up: zeilberger

79.1 Introducción a zeilberger
==============================

El paquete 'zeilberger' implementa el algoritmo de Zeilberger para la
suma hipergeométrica definida y el algoritmo de Gosper para la suma
hipergeométrica indefinida.  Además, hace uso del método de optimización
por filtrado desarrollado por Axel Riese.

El autor de este paquete es Fabrizio Caruso.

Antes de hacer uso de las funciones aquí definidas, ejecútese la
sentencia 'load (zeilberger)'.

79.1.1 El problema de la suma indefinida
----------------------------------------

El paquete 'zeilberger' implementa el algoritmo de Gosper para la suma
hipergeométrica indefinida.  Dado el término general hipergeométrico F_k
de índice k, se plantea el problema de encontrar su antidiferencia
hipergeométrica, esto es, el término hipergeométrico tal que

F_k = f_(k+1) - f_k.

79.1.2 El problema de la suma definida
--------------------------------------

El paquete 'zeilberger' implementa el algoritmo de Zeilberger para la
suma hipergeométrica definida.  Dados el término hipergeométrico propio
F_(n,k), de índices n y k, y el entero positivo d, se plantea el
problema de encontrar una expresión recurrente lineal de orden d con
coeficientes polinomiales en n y una función racional R en n y k tales
que

a_0 F_(n,k) + ... + a_d F_(n+d),k = Delta_K(R(n,k) F_(n,k))

donde Delta_k es el k-ésimo operador diferencia hacia adelante, esto es,
Delta_k(t_k) := t_(k+1) - t_k.

79.1.3 Niveles de información
-----------------------------

Hay versiones extendidas de los nombres de las instrucciones, que se
construyen añadiendo uno de los siguientes prefijos:

'Summary'
     Tan solo muestra un sumario al final
'Verbose'
     Alguna información en los niveles intermedios
'VeryVerbose'
     Más información
'Extra'
     Aún más información, incluida alguna sobre el sistema lineal en el
     algoritmo de Zeilberger.

Por ejemplo: 'GosperVerbose', 'parGosperVeryVerbose', 'ZeilbergerExtra',
'AntiDifferenceSummary'.


File: maxima.info,  Node: Funciones y variables para zeilberger,  Prev: Introducción a zeilberger,  Up: zeilberger

79.2 Funciones y variables para zeilberger
==========================================

 -- Función: AntiDifference (<F_k>, <k>)

     Returns the hypergeometric anti-difference of F_k, if it exists.
     Otherwise 'AntiDifference' returns 'no_hyp_antidifference'.

 -- Función: Gosper (<F_k>, <k>)
     Devuelve, si existe, el elemento racional asociado a <F_k>, esto
     es, la función racional que verifica

     F_k = R(k+1) F_(k+1) - R(k) F_k,

     En caso de no existir este elemento, 'Gosper' devuelve
     'no_hyp_sol'.

 -- Función: GosperSum (<F_k>, <k>, <a>, <b>)
     Devuelve la suma de los términos F_k desde <k> = <a> hasta <k> =
     <b> si F_k tiene una antidiferencia hipergeométrica.  En caso
     contrario, 'GosperSum' devuelve 'nongosper_summable'.

     Ejemplos:

          (%i1) load (zeilberger)$
          (%i2) GosperSum ((-1)^k*k / (4*k^2 - 1), k, 1, n);
          Dependent equations eliminated:  (1)
                                     3       n + 1
                                (n + -) (- 1)
                                     2               1
          (%o2)               - ------------------ - -
                                            2        4
                                2 (4 (n + 1)  - 1)
          (%i3) GosperSum (1 / (4*k^2 - 1), k, 1, n);
                                          3
                                    - n - -
                                          2       1
          (%o3)                  -------------- + -
                                          2       2
                                 4 (n + 1)  - 1
          (%i4) GosperSum (x^k, k, 1, n);
                                    n + 1
                                   x          x
          (%o4)                    ------ - -----
                                   x - 1    x - 1
          (%i5) GosperSum ((-1)^k*a! / (k!*(a - k)!), k, 1, n);
                                          n + 1
                          a! (n + 1) (- 1)              a!
          (%o5)       - ------------------------- - ----------
                        a (- n + a - 1)! (n + 1)!   a (a - 1)!
          (%i6) GosperSum (k*k!, k, 1, n);
          Dependent equations eliminated:  (1)
          (%o6)                     (n + 1)! - 1
          (%i7) GosperSum ((k + 1)*k! / (k + 1)!, k, 1, n);
                            (n + 1) (n + 2) (n + 1)!
          (%o7)             ------------------------ - 1
                                    (n + 2)!
          (%i8) GosperSum (1 / ((a - k)!*k!), k, 1, n);
          (%o8)                  NON_GOSPER_SUMMABLE

 -- Función: parGosper (<F_{n,k}>, <k>, <n>, <d>)
     Intenta calcular una recurrecia de orden <d> para <F_{n,k}>.

     El algoritmo devuelve una secuencia [s_1, s_2, ..., s_m] de
     soluciones, cada una de las cuales tiene la forma

     [R(n, k), [a_0, a_1, ..., a_d]].

     La función 'parGosper' devuelve '[]' si no encuentra ninguna
     recurrencia.

 -- Función: Zeilberger (<F_{n,k}>, <k>, <n>)
     Intenta calcular la suma hipergeométrica indefinida de <F_{n,k}>.

     La función 'Zeilberger' invoca en primer lugar a 'Gosper', y en
     caso de no encontrar una solución, llama después a 'parGosper' con
     los órdenes 1, 2, 3, ..., hasta 'max_ord'.  Si 'Zeilberger'
     encuentra una solución antes de alcanzar 'max_ord', se detiene su
     ejecución y devuelve el resultado.

     El algoritmo devuelve una secuencia [s_1, s_2, ..., s_m] de
     soluciones, cada una de las cuales tiene la forma

     [R(n, k), [a_0, a_1, ..., a_d]].

     La función 'Zeilberger' devuelve '[]' si no encuentra ninguna
     solución.

     La función 'Zeilberger' llama a 'Gosper' sólo si
     'Gosper_in_Zeilberger' tiene el valor 'true'.

 -- Variable opcional: max_ord
     Valor por defecto: 5

     'max_ord' es el máximo orden de recurrencia que ensayará la función
     'Zeilberger'.

 -- Variable opcional: simplified_output
     Valor por defecto: 'false'

     Si 'simplified_output' vale 'true', las funciones del paquete
     'zeilberger' tratan de presentar las soluciones simplificadas.

 -- Variable opcional: linear_solver
     Valor por defecto: 'linsolve'

     La variable 'linear_solver' guarda el nombre de la función que se
     utilizará para resolver el sistema de ecuaciones del algoritmo de
     Zeilberger.

 -- Variable opcional: warnings
     Valor por defecto: 'true'

     Si 'warnings' vale 'true', las funciones del paquete 'zeilberger'
     emiten mensajes de aviso durante su ejecución.

 -- Variable opcional: Gosper_in_Zeilberger
     Valor por defecto: 'true'

     Si 'Gosper_in_Zeilberger' vale 'true', la función 'Zeilberger'
     llama a la función 'Gosper' antes de llamar a 'parGosper'.  En caso
     contrario, 'Zeilberger' invoca inmediatamente a 'parGosper'.

 -- Variable opcional: trivial_solutions
     Valor por defecto: 'true'

     Si 'trivial_solutions' vale 'true', la función 'Zeilberger'
     devuelve soluciones triviales.

 -- Variable opcional: mod_test
     Valor por defecto: 'false'

     Si 'mod_test' vale 'true', la función 'parGosper' ejecuta una
     prueba modular para descartar sistemas sin soluciones.

 -- Variable opcional: modular_linear_solver
     Valor por defecto: 'linsolve'

     La variable 'modular_linear_solver' guarda el nombre de la función
     que deberá ser llamada por la prueba modular de 'parGosper' para
     resolver sistemas lineales.

 -- Variable opcional: ev_point
     Valor por defecto: 'big_primes[10]'

     La variable 'ev_point' guarda el valor para el que debe evaluarse
     <n> durante la ejecución de la prueba modular de 'parGosper'.

 -- Variable opcional: mod_big_prime
     Valor por defecto: 'big_primes[1]'

     La variable 'mod_big_prime' guarda el módulo utilizado por la
     prueba modular de 'parGosper'.

 -- Variable opcional: mod_threshold
     Valor por defecto: 4

     La variable 'mod_threshold' es el máximo orden que ensaya la prueba
     modular de 'parGosper'.


File: maxima.info,  Node: Índice de Funciones y Variables,  Prev: zeilberger,  Up: Top

Appendix A Índice de Funciones y Variables
******************************************

 [index ]
* Menu:

* !:                                     Funciones combinatorias.
                                                             (line   56)
* !!:                                    Funciones combinatorias.
                                                             (line    6)
* #:                                     Operadores para ecuaciones.
                                                             (line    6)
* %:                                     Funciones y variables para la línea de comandos.
                                                             (line   95)
* %%:                                    Funciones y variables para la línea de comandos.
                                                             (line  111)
* %and:                                  Funciones y variables para to_poly_solve.
                                                             (line   14)
* '%c':                                  Funciones y variables para contrib_ode.
                                                             (line   76)
* %e:                                    Funciones y variables para Constantes.
                                                             (line    6)
* %edispflag:                            Funciones y variables para la impresión.
                                                             (line    6)
* %emode:                                Funciones radicales exponenciales y logarítmicas.
                                                             (line   15)
* %enumer:                               Funciones radicales exponenciales y logarítmicas.
                                                             (line   31)
* %e_to_numlog:                          Funciones radicales exponenciales y logarítmicas.
                                                             (line    6)
* %f:                                    Funciones hipergeométricas.
                                                             (line   19)
* %gamma:                                Funciones y variables para Constantes.
                                                             (line   18)
* %i:                                    Funciones y variables para Constantes.
                                                             (line   11)
* %iargs:                                Funciones y variables para trigonometría.
                                                             (line   52)
* %if:                                   Funciones y variables para to_poly_solve.
                                                             (line   83)
* '%k1':                                 Funciones y variables para contrib_ode.
                                                             (line   80)
* '%k2':                                 Funciones y variables para contrib_ode.
                                                             (line   85)
* %m:                                    Funciones hipergeométricas.
                                                             (line   12)
* %or:                                   Funciones y variables para to_poly_solve.
                                                             (line  118)
* %phi:                                  Funciones y variables para Constantes.
                                                             (line   41)
* %pi:                                   Funciones y variables para Constantes.
                                                             (line   98)
* %piargs:                               Funciones y variables para trigonometría.
                                                             (line    6)
* %rnum_list:                            Funciones y variable para las ecuaciones.
                                                             (line    6)
* %s:                                    Funciones de Bessel.
                                                             (line  175)
* %th:                                   Funciones y variables para la línea de comandos.
                                                             (line  158)
* %unitexpand:                           Funciones y variables para units.
                                                             (line  421)
* %w:                                    Funciones hipergeométricas.
                                                             (line   16)
* ':                                     Funciones y variables para la evaluación.
                                                             (line    6)
* '':                                    Funciones y variables para la evaluación.
                                                             (line  105)
* *:                                     Operadores aritméticos.
                                                             (line    8)
* **:                                    Operadores aritméticos.
                                                             (line  171)
* +:                                     Operadores aritméticos.
                                                             (line    6)
* -:                                     Operadores aritméticos.
                                                             (line    7)
* .:                                     Operadores aritméticos.
                                                             (line  214)
* /:                                     Operadores aritméticos.
                                                             (line    9)
* ::                                     Operadores de asignación.
                                                             (line    6)
* :::                                    Operadores de asignación.
                                                             (line   89)
* ::=:                                   Operadores de asignación.
                                                             (line  114)
* :=:                                    Operadores de asignación.
                                                             (line  202)
* <:                                     Operadores relacionales.
                                                             (line    6)
* <=:                                    Operadores relacionales.
                                                             (line    7)
* =:                                     Operadores para ecuaciones.
                                                             (line   29)
* >:                                     Operadores relacionales.
                                                             (line    9)
* >=:                                    Operadores relacionales.
                                                             (line    8)
* ?:                                     Funciones y variables para la línea de comandos.
                                                             (line  187)
* ??:                                    Funciones y variables para la línea de comandos.
                                                             (line  200)
* @:                                     Funciones y variables para las estructuras.
                                                             (line   73)
* [:                                     Funciones y variables para listas.
                                                             (line    6)
* [ <1>:                                 Funciones y variables para las matrices y el álgebra lineal.
                                                             (line 1206)
* [ <2>:                                 Funciones y variables para las matrices y el álgebra lineal.
                                                             (line 1207)
* ]:                                     Funciones y variables para listas.
                                                             (line    7)
* ^:                                     Operadores aritméticos.
                                                             (line   10)
* ^^:                                    Operadores aritméticos.
                                                             (line  194)
* _:                                     Funciones y variables para la línea de comandos.
                                                             (line   49)
* __:                                    Funciones y variables para la línea de comandos.
                                                             (line    6)
* `:                                     Funciones y variables para ezunits.
                                                             (line    6)
* ` <1>:                                 Funciones y variables para ezunits.
                                                             (line   92)
* |:                                     Funciones y variables para itensor.
                                                             (line 1418)
* ~:                                     Funciones y variables para itensor.
                                                             (line 1384)
* abasep:                                Funciones y variables para atensor.
                                                             (line  133)
* abs:                                   Funciones para los números.
                                                             (line    6)
* absboxchar:                            Funciones y variables para la impresión.
                                                             (line   25)
* absint:                                Funciones y variables para series de Fourier.
                                                             (line   29)
* absint <1>:                            Funciones y variables para series de Fourier.
                                                             (line   30)
* absint <2>:                            Funciones y variables para series de Fourier.
                                                             (line   31)
* absolute_real_time:                    Funciones y variables para el entorno de ejecución.
                                                             (line  153)
* acos:                                  Funciones y variables para trigonometría.
                                                             (line   81)
* acosh:                                 Funciones y variables para trigonometría.
                                                             (line   84)
* acot:                                  Funciones y variables para trigonometría.
                                                             (line   87)
* Acotador de listas:                    Funciones y variables para listas.
                                                             (line    8)
* acoth:                                 Funciones y variables para trigonometría.
                                                             (line   90)
* acsc:                                  Funciones y variables para trigonometría.
                                                             (line   93)
* acsch:                                 Funciones y variables para trigonometría.
                                                             (line   96)
* activate:                              Funciones y variables para los hechos.
                                                             (line    6)
* activecontexts:                        Funciones y variables para los hechos.
                                                             (line   15)
* adapt_depth:                           Opciones gráficas.  (line   12)
* adapt_depth <1>:                       Funciones y variables para draw.
                                                             (line  196)
* addcol:                                Funciones y variables para las matrices y el álgebra lineal.
                                                             (line    6)
* additive:                              Funciones y variables para simplificación.
                                                             (line    6)
* addmatrices:                           Funciones y variables para linearalgebra.
                                                             (line    6)
* addrow:                                Funciones y variables para las matrices y el álgebra lineal.
                                                             (line   10)
* add_edge:                              Funciones y variables para graphs.
                                                             (line 1194)
* add_edges:                             Funciones y variables para graphs.
                                                             (line 1208)
* add_vertex:                            Funciones y variables para graphs.
                                                             (line 1223)
* add_vertices:                          Funciones y variables para graphs.
                                                             (line 1238)
* adim:                                  Funciones y variables para atensor.
                                                             (line   76)
* adjacency_matrix:                      Funciones y variables para graphs.
                                                             (line  320)
* adjoin:                                Funciones y variables para los conjuntos.
                                                             (line    6)
* adjoint:                               Funciones y variables para las matrices y el álgebra lineal.
                                                             (line   14)
* af:                                    Funciones y variables para atensor.
                                                             (line  101)
* aform:                                 Funciones y variables para atensor.
                                                             (line   83)
* agd:                                   Paquete functs.     (line  153)
* airy_ai:                               Funciones de Airy.  (line   15)
* airy_bi:                               Funciones de Airy.  (line   27)
* airy_dai:                              Funciones de Airy.  (line   22)
* airy_dbi:                              Funciones de Airy.  (line   41)
* algebraic:                             Funciones y variables para polinomios.
                                                             (line    6)
* algepsilon:                            Funciones Gamma y factorial.
                                                             (line   14)
* algepsilon <1>:                        Funciones y variable para las ecuaciones.
                                                             (line   28)
* algexact:                              Funciones y variable para las ecuaciones.
                                                             (line   33)
* algsys:                                Funciones y variable para las ecuaciones.
                                                             (line   50)
* algsys <1>:                            Funciones y variable para las ecuaciones.
                                                             (line   51)
* alg_type:                              Funciones y variables para atensor.
                                                             (line   71)
* alias:                                 Funciones y variables para expresiones.
                                                             (line    6)
* aliases:                               Funciones y variables para expresiones.
                                                             (line   12)
* allbut:                                Funciones y variables para expresiones.
                                                             (line   20)
* allocation:                            Funciones y variables para draw.
                                                             (line  205)
* allroots:                              Funciones y variable para las ecuaciones.
                                                             (line  150)
* allroots <1>:                          Funciones y variable para las ecuaciones.
                                                             (line  151)
* allsym:                                Funciones y variables para itensor.
                                                             (line  526)
* all_dotsimp_denoms:                    Funciones y variables para Afines.
                                                             (line  122)
* alphabetic:                            Funciones y variables para las propiedades.
                                                             (line    6)
* alphacharp:                            Funciones y variables para caracteres.
                                                             (line    6)
* alphanumericp:                         Funciones y variables para caracteres.
                                                             (line    9)
* amortization:                          Funciones y Variables para finance.
                                                             (line  105)
* and:                                   Operadores lógicos. (line    6)
* animation:                             Visualización usando VTK.
                                                             (line  173)
* annuity_fv:                            Funciones y Variables para finance.
                                                             (line   66)
* annuity_pv:                            Funciones y Variables para finance.
                                                             (line   53)
* antid:                                 Funciones y variables para la diferenciación.
                                                             (line    6)
* antidiff:                              Funciones y variables para la diferenciación.
                                                             (line   61)
* AntiDifference:                        Funciones y variables para zeilberger.
                                                             (line    6)
* antisymmetric:                         Funciones y variables para simplificación.
                                                             (line   29)
* append:                                Funciones y variables para listas.
                                                             (line   41)
* appendfile:                            Funciones y variables para lectura y escritura.
                                                             (line    6)
* apply:                                 Funciones y variables para la definición de funciones.
                                                             (line    6)
* apply1:                                Funciones y variables sobre reglas y patrones.
                                                             (line    6)
* apply2:                                Funciones y variables sobre reglas y patrones.
                                                             (line   22)
* applyb1:                               Funciones y variables sobre reglas y patrones.
                                                             (line   36)
* apropos:                               Funciones y variables para la ayuda.
                                                             (line    6)
* args:                                  Funciones y variables para expresiones.
                                                             (line   49)
* arithmetic:                            Paquete functs.     (line  110)
* arithsum:                              Paquete functs.     (line  129)
* arit_amortization:                     Funciones y Variables para finance.
                                                             (line  130)
* array:                                 Funciones y variables para los arrays.
                                                             (line    6)
* array <1>:                             Funciones y variables para los arrays.
                                                             (line    7)
* array <2>:                             Funciones y variables para los arrays.
                                                             (line    8)
* arrayapply:                            Funciones y variables para los arrays.
                                                             (line   39)
* arrayinfo:                             Funciones y variables para los arrays.
                                                             (line   46)
* arraymake:                             Funciones y variables para los arrays.
                                                             (line  142)
* arrays:                                Funciones y variables para los arrays.
                                                             (line  189)
* arraysetapply:                         Funciones y variables para los arrays.
                                                             (line  217)
* ascii:                                 Funciones y variables para caracteres.
                                                             (line   12)
* asec:                                  Funciones y variables para trigonometría.
                                                             (line   99)
* asech:                                 Funciones y variables para trigonometría.
                                                             (line  102)
* asin:                                  Funciones y variables para trigonometría.
                                                             (line  105)
* asinh:                                 Funciones y variables para trigonometría.
                                                             (line  108)
* askexp:                                Funciones y variables para la miscelánea de opciones.
                                                             (line    6)
* askinteger:                            Funciones y variables para los hechos.
                                                             (line   22)
* askinteger <1>:                        Funciones y variables para los hechos.
                                                             (line   23)
* askinteger <2>:                        Funciones y variables para los hechos.
                                                             (line   24)
* askinteger <3>:                        Funciones y variables para los hechos.
                                                             (line   25)
* asksign:                               Funciones y variables para los hechos.
                                                             (line   38)
* assoc:                                 Funciones y variables para listas.
                                                             (line   50)
* assoc <1>:                             Funciones y variables para listas.
                                                             (line   51)
* assoc_legendre_p:                      Funciones y variables para polinomios ortogonales.
                                                             (line    6)
* assoc_legendre_q:                      Funciones y variables para polinomios ortogonales.
                                                             (line   13)
* assume:                                Funciones y variables para los hechos.
                                                             (line   46)
* assumescalar:                          Funciones y variables para los hechos.
                                                             (line  103)
* assume_external_byte_order:            Funciones y variables para entrada y salida en formato binario.
                                                             (line    6)
* assume_pos:                            Funciones y variables para los hechos.
                                                             (line  126)
* assume_pos_pred:                       Funciones y variables para los hechos.
                                                             (line  155)
* asymbol:                               Funciones y variables para atensor.
                                                             (line   89)
* at:                                    Funciones y variables para la diferenciación.
                                                             (line  113)
* at <1>:                                Funciones y variables para la diferenciación.
                                                             (line  114)
* atan:                                  Funciones y variables para trigonometría.
                                                             (line  111)
* atan2:                                 Funciones y variables para trigonometría.
                                                             (line  114)
* atanh:                                 Funciones y variables para trigonometría.
                                                             (line  118)
* atensimp:                              Funciones y variables para atensor.
                                                             (line   62)
* atom:                                  Funciones y variables para expresiones.
                                                             (line   65)
* atomgrad:                              Funciones y variables para la diferenciación.
                                                             (line  158)
* atrig1:                                Funciones y variables para trigonometría.
                                                             (line  121)
* atvalue:                               Funciones y variables para la diferenciación.
                                                             (line  162)
* atvalue <1>:                           Funciones y variables para la diferenciación.
                                                             (line  163)
* augcoefmatrix:                         Funciones y variables para las matrices y el álgebra lineal.
                                                             (line   18)
* augmented_lagrangian_method:           Funciones y variables para augmented_lagrangian.
                                                             (line    6)
* augmented_lagrangian_method <1>:       Funciones y variables para augmented_lagrangian.
                                                             (line    7)
* augmented_lagrangian_method <2>:       Funciones y variables para augmented_lagrangian.
                                                             (line    9)
* augmented_lagrangian_method <3>:       Funciones y variables para augmented_lagrangian.
                                                             (line   11)
* av:                                    Funciones y variables para atensor.
                                                             (line  108)
* average_degree:                        Funciones y variables para graphs.
                                                             (line  336)
* axes:                                  Opciones gráficas.  (line   18)
* axis_3d:                               Funciones y variables para draw.
                                                             (line  246)
* axis_bottom:                           Funciones y variables para draw.
                                                             (line  264)
* axis_left:                             Funciones y variables para draw.
                                                             (line  281)
* axis_right:                            Funciones y variables para draw.
                                                             (line  298)
* axis_top:                              Funciones y variables para draw.
                                                             (line  315)
* Ayuda:                                 Funciones y variables para la ayuda.
                                                             (line  123)
* azimuth:                               Opciones gráficas.  (line   28)
* azimuth <1>:                           Visualización usando VTK.
                                                             (line   63)
* background:                            Visualización usando VTK.
                                                             (line   71)
* background_color:                      Funciones y variables para draw.
                                                             (line  333)
* backsubst:                             Funciones y variable para las ecuaciones.
                                                             (line  220)
* backtrace:                             Funciones y variables para la programación.
                                                             (line    6)
* backtrace <1>:                         Funciones y variables para la programación.
                                                             (line    7)
* bars:                                  Funciones y variables para draw.
                                                             (line 2817)
* barsplot:                              Funciones y variables para gráficos estadísticos.
                                                             (line    6)
* barsplot_description:                  Funciones y variables para gráficos estadísticos.
                                                             (line    8)
* Base de los logaritmos naturales:      Funciones y variables para Constantes.
                                                             (line    7)
* base64:                                Funciones y variables para cadenas.
                                                             (line    6)
* base64_decode:                         Funciones y variables para cadenas.
                                                             (line   17)
* bashindices:                           Funciones y variables para sumas y productos.
                                                             (line    6)
* batch:                                 Funciones y variables para lectura y escritura.
                                                             (line   14)
* batch <1>:                             Funciones y variables para lectura y escritura.
                                                             (line   15)
* batchload:                             Funciones y variables para lectura y escritura.
                                                             (line   63)
* bc2:                                   Funciones y variables para ecuaciones diferenciales.
                                                             (line    6)
* bdvac:                                 Funciones y variables para ctensor.
                                                             (line  751)
* belln:                                 Funciones y variables para los conjuntos.
                                                             (line   26)
* benefit_cost:                          Funciones y Variables para finance.
                                                             (line  244)
* berlefact:                             Funciones y variables para polinomios.
                                                             (line   12)
* bern:                                  Funciones y variables para teoría de números.
                                                             (line    6)
* bernpoly:                              Funciones y variables para teoría de números.
                                                             (line   24)
* bernstein_approx:                      Funciones y variables para Bernstein.
                                                             (line   81)
* bernstein_expand:                      Funciones y variables para Bernstein.
                                                             (line  109)
* bernstein_explicit:                    Funciones y variables para Bernstein.
                                                             (line   52)
* bernstein_poly:                        Funciones y variables para Bernstein.
                                                             (line    6)
* besselexpand:                          Funciones de Bessel.
                                                             (line  135)
* bessel_i:                              Funciones de Bessel.
                                                             (line   33)
* bessel_j:                              Funciones de Bessel.
                                                             (line    6)
* bessel_k:                              Funciones de Bessel.
                                                             (line   49)
* bessel_y:                              Funciones de Bessel.
                                                             (line   21)
* beta:                                  Funciones Gamma y factorial.
                                                             (line  221)
* beta_args_sum_to_integer:              Funciones Gamma y factorial.
                                                             (line  707)
* beta_expand:                           Funciones Gamma y factorial.
                                                             (line  700)
* beta_incomplete:                       Funciones Gamma y factorial.
                                                             (line  334)
* beta_incomplete_generalized:           Funciones Gamma y factorial.
                                                             (line  580)
* beta_incomplete_regularized:           Funciones Gamma y factorial.
                                                             (line  482)
* bezout:                                Funciones y variables para polinomios.
                                                             (line   19)
* bfallroots:                            Funciones y variable para las ecuaciones.
                                                             (line  208)
* bfallroots <1>:                        Funciones y variable para las ecuaciones.
                                                             (line  209)
* bffac:                                 Funciones Gamma y factorial.
                                                             (line    9)
* bfhzeta:                               Funciones y variables para teoría de números.
                                                             (line   35)
* bfloat:                                Funciones y variables para los números.
                                                             (line    6)
* bfloatp:                               Funciones y variables para los números.
                                                             (line   17)
* bfpsi:                                 Funciones Gamma y factorial.
                                                             (line   19)
* bfpsi0:                                Funciones Gamma y factorial.
                                                             (line   20)
* bftorat:                               Funciones y variables para los números.
                                                             (line   21)
* bftrunc:                               Funciones y variables para los números.
                                                             (line   32)
* bfzeta:                                Funciones y variables para teoría de números.
                                                             (line   27)
* bf_find_root:                          Funciones para la resolución numérica de ecuaciones.
                                                             (line   35)
* bf_find_root <1>:                      Funciones para la resolución numérica de ecuaciones.
                                                             (line   36)
* bf_fmin_cobyla:                        Funciones y variables para cobyla.
                                                             (line   61)
* bf_fmin_cobyla <1>:                    Funciones y variables para cobyla.
                                                             (line   62)
* biconnected_components:                Funciones y variables para graphs.
                                                             (line  347)
* bindtest:                              Funciones y variables para las propiedades.
                                                             (line   26)
* binomial:                              Funciones combinatorias.
                                                             (line   24)
* bipartition:                           Funciones y variables para graphs.
                                                             (line  362)
* block:                                 Funciones y variables para la definición de funciones.
                                                             (line   65)
* block <1>:                             Funciones y variables para la definición de funciones.
                                                             (line   66)
* blockmatrixp:                          Funciones y variables para linearalgebra.
                                                             (line   22)
* bode_gain:                             Funciones y variables para bode.
                                                             (line    6)
* bode_phase:                            Funciones y variables para bode.
                                                             (line   51)
* border:                                Funciones y variables para draw.
                                                             (line  347)
* bothcoef:                              Funciones y variables para polinomios.
                                                             (line   33)
* boundaries_array:                      Funciones y variables para worldmap.
                                                             (line   11)
* box:                                   Opciones gráficas.  (line   40)
* box <1>:                               Funciones y variables para expresiones.
                                                             (line   73)
* box <2>:                               Funciones y variables para expresiones.
                                                             (line   74)
* boxchar:                               Funciones y variables para expresiones.
                                                             (line  121)
* boxplot:                               Funciones y variables para gráficos estadísticos.
                                                             (line  150)
* boxplot <1>:                           Funciones y variables para gráficos estadísticos.
                                                             (line  151)
* boxplot_description:                   Funciones y variables para gráficos estadísticos.
                                                             (line  152)
* break:                                 Funciones y variables para la definición de funciones.
                                                             (line  122)
* breakup:                               Funciones y variable para las ecuaciones.
                                                             (line  239)
* bug_report:                            Funciones y variables para la detección e informe de fallos.
                                                             (line   67)
* buildq:                                Macros.             (line    6)
* build_info:                            Funciones y variables para la detección e informe de fallos.
                                                             (line   79)
* build_sample:                          Funciones y variables para el tratamiento de datos.
                                                             (line    6)
* build_sample <1>:                      Funciones y variables para el tratamiento de datos.
                                                             (line    7)
* burn:                                  Funciones y variables para teoría de números.
                                                             (line   52)
* Busca coincidencias inexactas en la documentaci&oacute;n: Funciones y variables para la línea de comandos.
                                                             (line  201)
* Busca en la documentaci&oacute;n:      Funciones y variables para la línea de comandos.
                                                             (line  188)
* cabs:                                  Funciones para los números complejos.
                                                             (line    6)
* canform:                               Funciones y variables para itensor.
                                                             (line  592)
* canform <1>:                           Funciones y variables para itensor.
                                                             (line  593)
* canten:                                Funciones y variables para itensor.
                                                             (line  505)
* capping:                               Funciones y variables para draw.
                                                             (line  366)
* capping <1>:                           Visualización usando VTK.
                                                             (line  187)
* cardinality:                           Funciones y variables para los conjuntos.
                                                             (line   54)
* carg:                                  Funciones para los números complejos.
                                                             (line   65)
* cartan:                                Funciones y variables para la diferenciación.
                                                             (line  219)
* cartesian_product:                     Funciones y variables para los conjuntos.
                                                             (line   72)
* catch:                                 Funciones y variables para la definición de funciones.
                                                             (line  129)
* cauchysum:                             Funciones y variables para las series.
                                                             (line    6)
* cauchy_matrix:                         Funciones y variables para las matrices y el álgebra lineal.
                                                             (line   33)
* cauchy_matrix <1>:                     Funciones y variables para las matrices y el álgebra lineal.
                                                             (line   35)
* cbffac:                                Funciones Gamma y factorial.
                                                             (line   28)
* cbrange:                               Funciones y variables para draw.
                                                             (line  384)
* cbtics:                                Funciones y variables para draw.
                                                             (line  413)
* cdf_bernoulli:                         Funciones y variables para distribuciones discretas.
                                                             (line  228)
* cdf_beta:                              Funciones y variables para distribuciones continuas.
                                                             (line  723)
* cdf_binomial:                          Funciones y variables para distribuciones discretas.
                                                             (line  102)
* cdf_cauchy:                            Funciones y variables para distribuciones continuas.
                                                             (line 1163)
* cdf_chi2:                              Funciones y variables para distribuciones continuas.
                                                             (line  271)
* cdf_continuous_uniform:                Funciones y variables para distribuciones continuas.
                                                             (line  782)
* cdf_discrete_uniform:                  Funciones y variables para distribuciones discretas.
                                                             (line  364)
* cdf_empirical:                         Funciones y variables de parámetros descriptivos.
                                                             (line  518)
* cdf_empirical <1>:                     Funciones y variables de parámetros descriptivos.
                                                             (line  519)
* cdf_exp:                               Funciones y variables para distribuciones continuas.
                                                             (line  497)
* cdf_f:                                 Funciones y variables para distribuciones continuas.
                                                             (line  420)
* cdf_gamma:                             Funciones y variables para distribuciones continuas.
                                                             (line  658)
* cdf_general_finite_discrete:           Funciones y variables para distribuciones discretas.
                                                             (line   24)
* cdf_geometric:                         Funciones y variables para distribuciones discretas.
                                                             (line  311)
* cdf_gumbel:                            Funciones y variables para distribuciones continuas.
                                                             (line 1189)
* cdf_hypergeometric:                    Funciones y variables para distribuciones discretas.
                                                             (line  425)
* cdf_laplace:                           Funciones y variables para distribuciones continuas.
                                                             (line 1112)
* cdf_logistic:                          Funciones y variables para distribuciones continuas.
                                                             (line  837)
* cdf_lognormal:                         Funciones y variables para distribuciones continuas.
                                                             (line  595)
* cdf_negative_binomial:                 Funciones y variables para distribuciones discretas.
                                                             (line  483)
* cdf_noncentral_chi2:                   Funciones y variables para distribuciones continuas.
                                                             (line  366)
* cdf_noncentral_student_t:              Funciones y variables para distribuciones continuas.
                                                             (line  176)
* cdf_normal:                            Funciones y variables para distribuciones continuas.
                                                             (line   11)
* cdf_pareto:                            Funciones y variables para distribuciones continuas.
                                                             (line  888)
* cdf_poisson:                           Funciones y variables para distribuciones discretas.
                                                             (line  164)
* cdf_rank_sum:                          Funciones y variables para distribuciones especiales.
                                                             (line   27)
* cdf_rayleigh:                          Funciones y variables para distribuciones continuas.
                                                             (line  997)
* cdf_signed_rank:                       Funciones y variables para distribuciones especiales.
                                                             (line   13)
* cdf_student_t:                         Funciones y variables para distribuciones continuas.
                                                             (line   82)
* cdf_weibull:                           Funciones y variables para distribuciones continuas.
                                                             (line  939)
* cdisplay:                              Funciones y variables para ctensor.
                                                             (line  784)
* ceiling:                               Funciones para los números.
                                                             (line   94)
* center:                                Visualización usando VTK.
                                                             (line  194)
* central_moment:                        Funciones y variables de parámetros descriptivos.
                                                             (line  133)
* central_moment <1>:                    Funciones y variables de parámetros descriptivos.
                                                             (line  134)
* cequal:                                Funciones y variables para caracteres.
                                                             (line   22)
* cequalignore:                          Funciones y variables para caracteres.
                                                             (line   25)
* cf:                                    Funciones y variables para teoría de números.
                                                             (line   95)
* cfdisrep:                              Funciones y variables para teoría de números.
                                                             (line  168)
* cfexpand:                              Funciones y variables para teoría de números.
                                                             (line  184)
* cflength:                              Funciones y variables para teoría de números.
                                                             (line  200)
* cframe_flag:                           Funciones y variables para ctensor.
                                                             (line 1028)
* cgeodesic:                             Funciones y variables para ctensor.
                                                             (line  745)
* cgreaterp:                             Funciones y variables para caracteres.
                                                             (line   29)
* cgreaterpignore:                       Funciones y variables para caracteres.
                                                             (line   33)
* changename:                            Funciones y variables para itensor.
                                                             (line   23)
* changevar:                             Funciones y variables para integración.
                                                             (line    6)
* chaosgame:                             Análisis gráfico de sistemas dinámicos discretos.
                                                             (line    6)
* charat:                                Funciones y variables para cadenas.
                                                             (line   23)
* charfun:                               Funciones y variables para los predicados.
                                                             (line    6)
* charfun2:                              Funciones y variables para interpol.
                                                             (line  104)
* charlist:                              Funciones y variables para cadenas.
                                                             (line   30)
* charp:                                 Funciones y variables para caracteres.
                                                             (line   37)
* charpoly:                              Funciones y variables para las matrices y el álgebra lineal.
                                                             (line   65)
* chebyshev_t:                           Funciones y variables para polinomios ortogonales.
                                                             (line   19)
* chebyshev_u:                           Funciones y variables para polinomios ortogonales.
                                                             (line   24)
* checkdiv:                              Funciones y variables para ctensor.
                                                             (line  738)
* check_overlaps:                        Funciones y variables para Afines.
                                                             (line   83)
* chinese:                               Funciones y variables para teoría de números.
                                                             (line   73)
* cholesky:                              Funciones y variables para linearalgebra.
                                                             (line   69)
* cholesky <1>:                          Funciones y variables para linearalgebra.
                                                             (line   70)
* christof:                              Funciones y variables para ctensor.
                                                             (line  183)
* chromatic_index:                       Funciones y variables para graphs.
                                                             (line  374)
* chromatic_number:                      Funciones y variables para graphs.
                                                             (line  384)
* cint:                                  Funciones y variables para caracteres.
                                                             (line   40)
* circulant_graph:                       Funciones y variables para graphs.
                                                             (line   75)
* clear_edge_weight:                     Funciones y variables para graphs.
                                                             (line  395)
* clear_rules:                           Funciones y variables sobre reglas y patrones.
                                                             (line  847)
* clear_vertex_label:                    Funciones y variables para graphs.
                                                             (line  408)
* clebsch_graph:                         Funciones y variables para graphs.
                                                             (line   96)
* clessp:                                Funciones y variables para caracteres.
                                                             (line   43)
* clesspignore:                          Funciones y variables para caracteres.
                                                             (line   47)
* close:                                 Funciones y variables para entrada y salida.
                                                             (line   25)
* closefile:                             Funciones y variables para lectura y escritura.
                                                             (line   81)
* cmetric:                               Funciones y variables para ctensor.
                                                             (line   14)
* cmetric <1>:                           Funciones y variables para ctensor.
                                                             (line   15)
* cnonmet_flag:                          Funciones y variables para ctensor.
                                                             (line 1040)
* coeff:                                 Funciones y variables para polinomios.
                                                             (line   48)
* coeff <1>:                             Funciones y variables para polinomios.
                                                             (line   49)
* coefmatrix:                            Funciones y variables para las matrices y el álgebra lineal.
                                                             (line  101)
* cograd:                                Funciones y variables para ctensor.
                                                             (line  683)
* col:                                   Funciones y variables para las matrices y el álgebra lineal.
                                                             (line  110)
* collapse:                              Funciones y variables para expresiones.
                                                             (line  130)
* collectterms:                          Paquete facexp.     (line   95)
* color:                                 Opciones gráficas.  (line   46)
* color <1>:                             Funciones y variables para draw.
                                                             (line  437)
* color <2>:                             Visualización usando VTK.
                                                             (line  203)
* colorbox:                              Opciones gráficas.  (line   63)
* colorbox <1>:                          Funciones y variables para draw.
                                                             (line  483)
* columnop:                              Funciones y variables para linearalgebra.
                                                             (line   27)
* columns:                               Funciones y variables para draw.
                                                             (line  515)
* columnspace:                           Funciones y variables para linearalgebra.
                                                             (line   39)
* columnswap:                            Funciones y variables para linearalgebra.
                                                             (line   33)
* columnvector:                          Funciones y variables para las matrices y el álgebra lineal.
                                                             (line  114)
* combination:                           Paquete functs.     (line  179)
* combine:                               Funciones y variables para simplificación.
                                                             (line   56)
* commutative:                           Funciones y variables para simplificación.
                                                             (line   60)
* comp2pui:                              Funciones y variables para simetrías.
                                                             (line    6)
* compare:                               Funciones y variables para los predicados.
                                                             (line   23)
* compfile:                              Funciones y variables para la definición de funciones.
                                                             (line  154)
* compfile <1>:                          Funciones y variables para la definición de funciones.
                                                             (line  155)
* compfile <2>:                          Funciones y variables para la definición de funciones.
                                                             (line  156)
* compile:                               Funciones y variables para la definición de funciones.
                                                             (line  173)
* compile <1>:                           Funciones y variables para la definición de funciones.
                                                             (line  174)
* compile <2>:                           Funciones y variables para la definición de funciones.
                                                             (line  175)
* compile_file:                          Funciones y variables para la definición de funciones.
                                                             (line 1265)
* compile_file <1>:                      Funciones y variables para la definición de funciones.
                                                             (line 1266)
* compile_file <2>:                      Funciones y variables para la definición de funciones.
                                                             (line 1267)
* complement_graph:                      Funciones y variables para graphs.
                                                             (line   99)
* complete_bipartite_graph:              Funciones y variables para graphs.
                                                             (line  102)
* complete_graph:                        Funciones y variables para graphs.
                                                             (line  105)
* complex:                               Funciones y variables para las propiedades.
                                                             (line  540)
* complex_number_p:                      Funciones y variables para to_poly_solve.
                                                             (line  184)
* components:                            Funciones y variables para itensor.
                                                             (line  200)
* compose_functions:                     Funciones y variables para to_poly_solve.
                                                             (line  205)
* concan:                                Funciones y variables para itensor.
                                                             (line  518)
* concat:                                Funciones y variables para las cadenas de texto.
                                                             (line    6)
* cone:                                  Visualización usando VTK.
                                                             (line  129)
* conjugate:                             Funciones para los números complejos.
                                                             (line   94)
* Conjunción lógica:                     Operadores lógicos. (line    7)
* Conjunción lógica <1>:                 Funciones y variables para to_poly_solve.
                                                             (line   15)
* conmetderiv:                           Funciones y variables para itensor.
                                                             (line  785)
* connected_components:                  Funciones y variables para graphs.
                                                             (line  422)
* connect_vertices:                      Funciones y variables para graphs.
                                                             (line 1241)
* cons:                                  Funciones y variables para listas.
                                                             (line   63)
* constant:                              Funciones y variables para las propiedades.
                                                             (line   45)
* Constante de Euler-Mascheroni:         Funciones y variables para Constantes.
                                                             (line   19)
* constantp:                             Funciones y variables para las propiedades.
                                                             (line   63)
* constituent:                           Funciones y variables para caracteres.
                                                             (line   51)
* constvalue:                            Funciones y variables para ezunits.
                                                             (line  254)
* cont2part:                             Funciones y variables para simetrías.
                                                             (line   18)
* content:                               Funciones y variables para polinomios.
                                                             (line  137)
* context:                               Funciones y variables para los hechos.
                                                             (line  224)
* contexts:                              Funciones y variables para los hechos.
                                                             (line  237)
* continuous_freq:                       Funciones y variables para el tratamiento de datos.
                                                             (line   61)
* continuous_freq <1>:                   Funciones y variables para el tratamiento de datos.
                                                             (line   62)
* contortion:                            Funciones y variables para ctensor.
                                                             (line  618)
* contour:                               Funciones y variables para draw.
                                                             (line  534)
* contour_levels:                        Funciones y variables para draw.
                                                             (line  567)
* contour_plot:                          Funciones y variables para gráficos.
                                                             (line    6)
* Contracción con vector:                Funciones y variables para itensor.
                                                             (line 1419)
* contract:                              Funciones y variables para itensor.
                                                             (line  184)
* contract <1>:                          Funciones y variables para simetrías.
                                                             (line   33)
* contract_edge:                         Funciones y variables para graphs.
                                                             (line 1261)
* contragrad:                            Funciones y variables para ctensor.
                                                             (line  689)
* contrib_ode:                           Funciones y variables para contrib_ode.
                                                             (line    6)
* convert:                               Funciones y variables para units.
                                                             (line  146)
* coord:                                 Funciones y variables para itensor.
                                                             (line  762)
* copy:                                  Funciones y variables para linearalgebra.
                                                             (line   45)
* copylist:                              Funciones y variables para listas.
                                                             (line   70)
* copymatrix:                            Funciones y variables para las matrices y el álgebra lineal.
                                                             (line  137)
* copy_graph:                            Funciones y variables para graphs.
                                                             (line   72)
* cor:                                   Funciones y variables de parámetros descriptivos.
                                                             (line  653)
* cor <1>:                               Funciones y variables de parámetros descriptivos.
                                                             (line  654)
* cos:                                   Funciones y variables para trigonometría.
                                                             (line  130)
* cosh:                                  Funciones y variables para trigonometría.
                                                             (line  133)
* cosnpiflag:                            Funciones y variables para series de Fourier.
                                                             (line   56)
* cot:                                   Funciones y variables para trigonometría.
                                                             (line  136)
* coth:                                  Funciones y variables para trigonometría.
                                                             (line  139)
* cov:                                   Funciones y variables de parámetros descriptivos.
                                                             (line  548)
* cov1:                                  Funciones y variables de parámetros descriptivos.
                                                             (line  579)
* covdiff:                               Funciones y variables para itensor.
                                                             (line  931)
* covect:                                Funciones y variables para las matrices y el álgebra lineal.
                                                             (line  115)
* covers:                                Paquete functs.     (line  164)
* create_graph:                          Funciones y variables para graphs.
                                                             (line    9)
* create_graph <1>:                      Funciones y variables para graphs.
                                                             (line   10)
* create_graph <2>:                      Funciones y variables para graphs.
                                                             (line   11)
* create_list:                           Funciones y variables para listas.
                                                             (line   74)
* csc:                                   Funciones y variables para trigonometría.
                                                             (line  142)
* csch:                                  Funciones y variables para trigonometría.
                                                             (line  145)
* csetup:                                Funciones y variables para ctensor.
                                                             (line    9)
* cspline:                               Funciones y variables para interpol.
                                                             (line  174)
* cspline <1>:                           Funciones y variables para interpol.
                                                             (line  175)
* ctaylor:                               Funciones y variables para ctensor.
                                                             (line  319)
* ctaypov:                               Funciones y variables para ctensor.
                                                             (line 1059)
* ctaypt:                                Funciones y variables para ctensor.
                                                             (line 1064)
* ctayswitch:                            Funciones y variables para ctensor.
                                                             (line 1047)
* ctayvar:                               Funciones y variables para ctensor.
                                                             (line 1054)
* ctorsion_flag:                         Funciones y variables para ctensor.
                                                             (line 1033)
* ctransform:                            Funciones y variables para ctensor.
                                                             (line  631)
* ctranspose:                            Funciones y variables para linearalgebra.
                                                             (line   77)
* ctrgsimp:                              Funciones y variables para ctensor.
                                                             (line 1022)
* ct_coords:                             Funciones y variables para ctensor.
                                                             (line 1207)
* ct_coordsys:                           Funciones y variables para ctensor.
                                                             (line   33)
* ct_coordsys <1>:                       Funciones y variables para ctensor.
                                                             (line   34)
* cube:                                  Visualización usando VTK.
                                                             (line  146)
* cube_graph:                            Funciones y variables para graphs.
                                                             (line  117)
* cuboctahedron_graph:                   Funciones y variables para graphs.
                                                             (line  114)
* cunlisp:                               Funciones y variables para caracteres.
                                                             (line   63)
* current_let_rule_package:              Funciones y variables sobre reglas y patrones.
                                                             (line   54)
* cv:                                    Funciones y variables de parámetros descriptivos.
                                                             (line  157)
* cv <1>:                                Funciones y variables de parámetros descriptivos.
                                                             (line  158)
* cycle_digraph:                         Funciones y variables para graphs.
                                                             (line  108)
* cycle_graph:                           Funciones y variables para graphs.
                                                             (line  111)
* cylinder:                              Visualización usando VTK.
                                                             (line  154)
* cylindrical:                           Funciones y variables para draw.
                                                             (line 2844)
* data_file_name:                        Funciones y variables para draw.
                                                             (line  618)
* days360:                               Funciones y Variables para finance.
                                                             (line    6)
* dblint:                                Funciones y variables para integración.
                                                             (line   61)
* deactivate:                            Funciones y variables para los hechos.
                                                             (line  269)
* debugmode:                             Funciones y variables para depurado.
                                                             (line    6)
* declare:                               Funciones y variables para las propiedades.
                                                             (line   93)
* declare_constvalue:                    Funciones y variables para ezunits.
                                                             (line  255)
* declare_dimensions:                    Funciones y variables para ezunits.
                                                             (line  492)
* declare_fundamental_dimensions:        Funciones y variables para ezunits.
                                                             (line  522)
* declare_fundamental_units:             Funciones y variables para ezunits.
                                                             (line  553)
* declare_qty:                           Funciones y variables para ezunits.
                                                             (line  362)
* declare_translated:                    Funciones y variables para la definición de funciones.
                                                             (line 1295)
* declare_units:                         Funciones y variables para ezunits.
                                                             (line  299)
* declare_unit_conversion:               Funciones y variables para ezunits.
                                                             (line  447)
* declare_weights:                       Funciones y variables para Afines.
                                                             (line   51)
* decreasing:                            Funciones y variables para las propiedades.
                                                             (line  241)
* decsym:                                Funciones y variables para itensor.
                                                             (line  536)
* default_let_rule_package:              Funciones y variables sobre reglas y patrones.
                                                             (line   67)
* defcon:                                Funciones y variables para itensor.
                                                             (line  159)
* defcon <1>:                            Funciones y variables para itensor.
                                                             (line  160)
* define:                                Funciones y variables para la definición de funciones.
                                                             (line  188)
* define <1>:                            Funciones y variables para la definición de funciones.
                                                             (line  189)
* define <2>:                            Funciones y variables para la definición de funciones.
                                                             (line  190)
* define <3>:                            Funciones y variables para la definición de funciones.
                                                             (line  191)
* define <4>:                            Funciones y variables para la definición de funciones.
                                                             (line  192)
* define_variable:                       Funciones y variables para la definición de funciones.
                                                             (line  281)
* defint:                                Funciones y variables para integración.
                                                             (line  102)
* defmatch:                              Funciones y variables sobre reglas y patrones.
                                                             (line   75)
* defmatch <1>:                          Funciones y variables sobre reglas y patrones.
                                                             (line   76)
* defrule:                               Funciones y variables sobre reglas y patrones.
                                                             (line  181)
* defstruct:                             Funciones y variables para las estructuras.
                                                             (line   11)
* defstruct <1>:                         Funciones y variables para las estructuras.
                                                             (line   12)
* deftaylor:                             Funciones y variables para las series.
                                                             (line   36)
* degree_sequence:                       Funciones y variables para graphs.
                                                             (line  461)
* del:                                   Funciones y variables para la diferenciación.
                                                             (line  232)
* delay:                                 Funciones y variables para draw.
                                                             (line  631)
* delete:                                Funciones y variables para listas.
                                                             (line  105)
* delete <1>:                            Funciones y variables para listas.
                                                             (line  106)
* deleten:                               Funciones y variables para ctensor.
                                                             (line  999)
* Delimitadores de listas:               Funciones y variables para las matrices y el álgebra lineal.
                                                             (line 1208)
* delta:                                 Funciones y variables para la diferenciación.
                                                             (line  252)
* demo:                                  Funciones y variables para la ayuda.
                                                             (line   36)
* demoivre:                              Funciones y variables para simplificación.
                                                             (line   65)
* demoivre <1>:                          Funciones y variables para simplificación.
                                                             (line   66)
* denom:                                 Funciones y variables para polinomios.
                                                             (line  149)
* dependencies:                          Funciones y variables para la diferenciación.
                                                             (line  267)
* depends:                               Funciones y variables para la diferenciación.
                                                             (line  277)
* derivabbrev:                           Funciones y variables para la diferenciación.
                                                             (line  333)
* derivdegree:                           Funciones y variables para la diferenciación.
                                                             (line  340)
* derivlist:                             Funciones y variables para la diferenciación.
                                                             (line  355)
* derivsubst:                            Funciones y variables para la diferenciación.
                                                             (line  359)
* describe:                              Funciones y variables para la ayuda.
                                                             (line  120)
* describe <1>:                          Funciones y variables para la ayuda.
                                                             (line  121)
* describe <2>:                          Funciones y variables para la ayuda.
                                                             (line  122)
* desolve:                               Funciones y variables para ecuaciones diferenciales.
                                                             (line   16)
* desolve <1>:                           Funciones y variables para ecuaciones diferenciales.
                                                             (line   17)
* determinant:                           Funciones y variables para las matrices y el álgebra lineal.
                                                             (line  148)
* detout:                                Funciones y variables para las matrices y el álgebra lineal.
                                                             (line  158)
* dfloat:                                Funciones y variables para to_poly_solve.
                                                             (line  252)
* dgauss_a:                              Funciones y variables para contrib_ode.
                                                             (line  107)
* dgauss_b:                              Funciones y variables para contrib_ode.
                                                             (line  110)
* dgeev:                                 Funciones y variables para lapack.
                                                             (line    6)
* dgeev <1>:                             Funciones y variables para lapack.
                                                             (line    7)
* dgemm:                                 Funciones y variables para lapack.
                                                             (line  307)
* dgemm <1>:                             Funciones y variables para lapack.
                                                             (line  308)
* dgeqrf:                                Funciones y variables para lapack.
                                                             (line   75)
* dgesv:                                 Funciones y variables para lapack.
                                                             (line  105)
* dgesvd:                                Funciones y variables para lapack.
                                                             (line  181)
* dgesvd <1>:                            Funciones y variables para lapack.
                                                             (line  182)
* diag:                                  Funciones y variables para diag.
                                                             (line    6)
* diagmatrix:                            Funciones y variables para las matrices y el álgebra lineal.
                                                             (line  184)
* diagmatrixp:                           Funciones y variables para ctensor.
                                                             (line  771)
* diagmetric:                            Funciones y variables para ctensor.
                                                             (line 1013)
* diag_matrix:                           Funciones y variables para linearalgebra.
                                                             (line   83)
* diameter:                              Funciones y variables para graphs.
                                                             (line  432)
* diff:                                  Funciones y variables para la diferenciación.
                                                             (line  443)
* diff <1>:                              Funciones y variables para la diferenciación.
                                                             (line  366)
* diff <2>:                              Funciones y variables para la diferenciación.
                                                             (line  367)
* diff <3>:                              Funciones y variables para la diferenciación.
                                                             (line  368)
* diff <4>:                              Funciones y variables para la diferenciación.
                                                             (line  369)
* diff <5>:                              Funciones y variables para itensor.
                                                             (line  614)
* digitcharp:                            Funciones y variables para caracteres.
                                                             (line   67)
* dim:                                   Funciones y variables para ctensor.
                                                             (line 1006)
* dimacs_export:                         Funciones y variables para graphs.
                                                             (line 1327)
* dimacs_export <1>:                     Funciones y variables para graphs.
                                                             (line 1328)
* dimacs_import:                         Funciones y variables para graphs.
                                                             (line 1332)
* dimension:                             Funciones y variable para las ecuaciones.
                                                             (line  313)
* dimension <1>:                         Funciones y variable para las ecuaciones.
                                                             (line  314)
* dimensionless:                         Funciones y variables para ezunits.
                                                             (line  674)
* dimensions:                            Funciones y variables para draw.
                                                             (line  659)
* dimensions <1>:                        Funciones y variables para ezunits.
                                                             (line  593)
* dimensions_as_list:                    Funciones y variables para ezunits.
                                                             (line  594)
* direct:                                Funciones y variables para simetrías.
                                                             (line   55)
* discrete_freq:                         Funciones y variables para el tratamiento de datos.
                                                             (line  104)
* disjoin:                               Funciones y variables para los conjuntos.
                                                             (line   92)
* disjointp:                             Funciones y variables para los conjuntos.
                                                             (line  113)
* disolate:                              Funciones y variables para expresiones.
                                                             (line  141)
* disp:                                  Funciones y variables para la impresión.
                                                             (line   38)
* dispcon:                               Funciones y variables para itensor.
                                                             (line    9)
* dispcon <1>:                           Funciones y variables para itensor.
                                                             (line   10)
* dispflag:                              Funciones y variable para las ecuaciones.
                                                             (line  320)
* dispform:                              Funciones y variables para expresiones.
                                                             (line  150)
* dispform <1>:                          Funciones y variables para expresiones.
                                                             (line  151)
* dispfun:                               Funciones y variables para la definición de funciones.
                                                             (line  369)
* dispfun <1>:                           Funciones y variables para la definición de funciones.
                                                             (line  370)
* dispJordan:                            Funciones y variables para diag.
                                                             (line   96)
* display:                               Funciones y variables para la impresión.
                                                             (line   61)
* display2d:                             Funciones y variables para la impresión.
                                                             (line   87)
* display_format_internal:               Funciones y variables para la impresión.
                                                             (line  107)
* disprule:                              Funciones y variables sobre reglas y patrones.
                                                             (line  194)
* disprule <1>:                          Funciones y variables sobre reglas y patrones.
                                                             (line  195)
* dispterms:                             Funciones y variables para la impresión.
                                                             (line  130)
* distrib:                               Funciones y variables para simplificación.
                                                             (line   83)
* distribute_over:                       Funciones y variables para simplificación.
                                                             (line  104)
* Disyunción lógica:                     Operadores lógicos. (line   43)
* Disyunción lógica <1>:                 Funciones y variables para to_poly_solve.
                                                             (line  119)
* divide:                                Funciones y variables para polinomios.
                                                             (line  152)
* División:                              Operadores aritméticos.
                                                             (line   10)
* divisors:                              Funciones y variables para los conjuntos.
                                                             (line  127)
* divsum:                                Funciones y variables para teoría de números.
                                                             (line  218)
* divsum <1>:                            Funciones y variables para teoría de números.
                                                             (line  219)
* dkummer_m:                             Funciones y variables para contrib_ode.
                                                             (line  132)
* dkummer_u:                             Funciones y variables para contrib_ode.
                                                             (line  135)
* dlange:                                Funciones y variables para lapack.
                                                             (line  287)
* do:                                    Funciones y variables para la programación.
                                                             (line   46)
* doallmxops:                            Funciones y variables para las matrices y el álgebra lineal.
                                                             (line  196)
* Doble factorial:                       Funciones combinatorias.
                                                             (line    7)
* dodecahedron_graph:                    Funciones y variables para graphs.
                                                             (line  120)
* domain:                                Funciones y variables para simplificación.
                                                             (line  152)
* domxexpt:                              Funciones y variables para las matrices y el álgebra lineal.
                                                             (line  203)
* domxmxops:                             Funciones y variables para las matrices y el álgebra lineal.
                                                             (line  235)
* domxnctimes:                           Funciones y variables para las matrices y el álgebra lineal.
                                                             (line  243)
* dontfactor:                            Funciones y variables para las matrices y el álgebra lineal.
                                                             (line  249)
* doscmxops:                             Funciones y variables para las matrices y el álgebra lineal.
                                                             (line  256)
* doscmxplus:                            Funciones y variables para las matrices y el álgebra lineal.
                                                             (line  262)
* dot0nscsimp:                           Funciones y variables para las matrices y el álgebra lineal.
                                                             (line  268)
* dotassoc:                              Funciones y variables para las matrices y el álgebra lineal.
                                                             (line  273)
* dotconstrules:                         Funciones y variables para las matrices y el álgebra lineal.
                                                             (line  279)
* dotdistrib:                            Funciones y variables para las matrices y el álgebra lineal.
                                                             (line  286)
* dotexptsimp:                           Funciones y variables para las matrices y el álgebra lineal.
                                                             (line  292)
* dotident:                              Funciones y variables para las matrices y el álgebra lineal.
                                                             (line  298)
* dotproduct:                            Funciones y variables para linearalgebra.
                                                             (line  105)
* dotscrules:                            Funciones y variables para las matrices y el álgebra lineal.
                                                             (line  304)
* dotsimp:                               Funciones y variables para Afines.
                                                             (line   64)
* dpart:                                 Funciones y variables para expresiones.
                                                             (line  201)
* draw:                                  Funciones y variables para draw.
                                                             (line   53)
* draw2d:                                Funciones y variables para draw.
                                                             (line  102)
* draw3d:                                Funciones y variables para draw.
                                                             (line  113)
* drawdf:                                Funciones y variables para drawdf.
                                                             (line    9)
* drawdf <1>:                            Funciones y variables para drawdf.
                                                             (line   10)
* drawdf <2>:                            Funciones y variables para drawdf.
                                                             (line   11)
* drawdf <3>:                            Funciones y variables para drawdf.
                                                             (line   13)
* drawdf <4>:                            Funciones y variables para drawdf.
                                                             (line   14)
* drawdf <5>:                            Funciones y variables para drawdf.
                                                             (line   16)
* draw_file:                             Funciones y variables para draw.
                                                             (line  124)
* draw_graph:                            Funciones y variables para graphs.
                                                             (line 1366)
* draw_graph <1>:                        Funciones y variables para graphs.
                                                             (line 1367)
* draw_graph_program:                    Funciones y variables para graphs.
                                                             (line 1463)
* draw_realpart:                         Funciones y variables para draw.
                                                             (line  704)
* dscalar:                               Funciones y variables para ctensor.
                                                             (line  718)
* e:                                     Funciones y variables para Constantes.
                                                             (line    7)
* echelon:                               Funciones y variables para las matrices y el álgebra lineal.
                                                             (line  310)
* edges:                                 Funciones y variables para graphs.
                                                             (line  475)
* edge_color:                            Funciones y variables para graphs.
                                                             (line 1532)
* edge_coloring:                         Funciones y variables para graphs.
                                                             (line 1559)
* edge_coloring <1>:                     Funciones y variables para graphs.
                                                             (line  441)
* edge_connectivity:                     Funciones y variables para graphs.
                                                             (line  470)
* edge_partition:                        Funciones y variables para graphs.
                                                             (line 1555)
* edge_type:                             Funciones y variables para graphs.
                                                             (line 1538)
* edge_width:                            Funciones y variables para graphs.
                                                             (line 1535)
* eigens_by_jacobi:                      Funciones y variables para linearalgebra.
                                                             (line  111)
* eigens_by_jacobi <1>:                  Funciones y variables para linearalgebra.
                                                             (line  112)
* eigenvalues:                           Funciones y variables para las matrices y el álgebra lineal.
                                                             (line  342)
* eigenvectors:                          Funciones y variables para las matrices y el álgebra lineal.
                                                             (line  366)
* eighth:                                Funciones y variables para listas.
                                                             (line  169)
* einstein:                              Funciones y variables para ctensor.
                                                             (line  218)
* eivals:                                Funciones y variables para las matrices y el álgebra lineal.
                                                             (line  343)
* eivects:                               Funciones y variables para las matrices y el álgebra lineal.
                                                             (line  367)
* elapsed_real_time:                     Funciones y variables para el entorno de ejecución.
                                                             (line  168)
* elapsed_run_time:                      Funciones y variables para el entorno de ejecución.
                                                             (line  184)
* ele2comp:                              Funciones y variables para simetrías.
                                                             (line  135)
* ele2polynome:                          Funciones y variables para simetrías.
                                                             (line  145)
* ele2pui:                               Funciones y variables para simetrías.
                                                             (line  164)
* elem:                                  Funciones y variables para simetrías.
                                                             (line  174)
* elementp:                              Funciones y variables para los conjuntos.
                                                             (line  172)
* elevation:                             Opciones gráficas.  (line   72)
* elevation <1>:                         Visualización usando VTK.
                                                             (line   78)
* elevation_grid:                        Funciones y variables para draw.
                                                             (line 2865)
* elim:                                  Funciones y variables para to_poly_solve.
                                                             (line  277)
* eliminate:                             Funciones y variables para polinomios.
                                                             (line  168)
* eliminate_using:                       Funciones y variables para to_poly_solve.
                                                             (line  358)
* elim_allbut:                           Funciones y variables para to_poly_solve.
                                                             (line  340)
* ellipse:                               Funciones y variables para draw.
                                                             (line 2892)
* elliptic_e:                            Funciones y variables para integrales elípticas.
                                                             (line   13)
* elliptic_ec:                           Funciones y variables para integrales elípticas.
                                                             (line   50)
* elliptic_eu:                           Funciones y variables para integrales elípticas.
                                                             (line   20)
* elliptic_f:                            Funciones y variables para integrales elípticas.
                                                             (line    6)
* elliptic_kc:                           Funciones y variables para integrales elípticas.
                                                             (line   41)
* elliptic_pi:                           Funciones y variables para integrales elípticas.
                                                             (line   34)
* ematrix:                               Funciones y variables para las matrices y el álgebra lineal.
                                                             (line  483)
* emptyp:                                Funciones y variables para los conjuntos.
                                                             (line  186)
* empty_graph:                           Funciones y variables para graphs.
                                                             (line  123)
* endcons:                               Funciones y variables para listas.
                                                             (line  174)
* endphi:                                Visualización usando VTK.
                                                             (line  210)
* endtheta:                              Visualización usando VTK.
                                                             (line  221)
* enhanced3d:                            Funciones y variables para draw.
                                                             (line  728)
* entermatrix:                           Funciones y variables para las matrices y el álgebra lineal.
                                                             (line  488)
* entertensor:                           Funciones y variables para itensor.
                                                             (line   16)
* entier:                                Funciones para los números.
                                                             (line  174)
* Entrada anterior:                      Funciones y variables para la línea de comandos.
                                                             (line   50)
* epsilon_lp:                            Funciones y variables para simplex.
                                                             (line    6)
* equal:                                 Funciones y variables para los predicados.
                                                             (line   54)
* equalp:                                Funciones y variables para series de Fourier.
                                                             (line    6)
* equiv_classes:                         Funciones y variables para los conjuntos.
                                                             (line  197)
* erf:                                   Función de error.   (line    9)
* erfc:                                  Función de error.   (line   14)
* erfflag:                               Funciones y variables para integración.
                                                             (line  114)
* erfi:                                  Función de error.   (line   19)
* erf_generalized:                       Función de error.   (line   24)
* erf_representation:                    Función de error.   (line   53)
* errcatch:                              Funciones y variables para la programación.
                                                             (line  231)
* error:                                 Funciones y variables para la programación.
                                                             (line  242)
* error <1>:                             Funciones y variables para la programación.
                                                             (line  243)
* errormsg:                              Funciones y variables para la programación.
                                                             (line  321)
* errormsg <1>:                          Funciones y variables para la programación.
                                                             (line  316)
* errors:                                Funciones y variables para draw.
                                                             (line 2923)
* error_size:                            Funciones y variables para la programación.
                                                             (line  256)
* error_syms:                            Funciones y variables para la programación.
                                                             (line  300)
* error_type:                            Funciones y variables para draw.
                                                             (line  872)
* euler:                                 Funciones y variables para teoría de números.
                                                             (line  235)
* ev:                                    Funciones y variables para la evaluación.
                                                             (line  248)
* eval:                                  Funciones y variables para la evaluación.
                                                             (line  426)
* Evaluación condicionada:               Funciones y variables para to_poly_solve.
                                                             (line   84)
* eval_string:                           Funciones y variables para cadenas.
                                                             (line   38)
* even:                                  Funciones y variables para las propiedades.
                                                             (line  261)
* evenfun:                               Funciones y variables para simplificación.
                                                             (line  158)
* evenp:                                 Funciones y variables para los números.
                                                             (line   40)
* every:                                 Funciones y variables para los conjuntos.
                                                             (line  233)
* every <1>:                             Funciones y variables para los conjuntos.
                                                             (line  234)
* evflag:                                Funciones y variables para la evaluación.
                                                             (line  445)
* evfun:                                 Funciones y variables para la evaluación.
                                                             (line  507)
* evolution:                             Análisis gráfico de sistemas dinámicos discretos.
                                                             (line   23)
* evolution2d:                           Análisis gráfico de sistemas dinámicos discretos.
                                                             (line   41)
* evundiff:                              Funciones y variables para itensor.
                                                             (line  679)
* ev_point:                              Funciones y variables para zeilberger.
                                                             (line  145)
* example:                               Funciones y variables para la ayuda.
                                                             (line  188)
* example <1>:                           Funciones y variables para la ayuda.
                                                             (line  189)
* exp:                                   Funciones radicales exponenciales y logarítmicas.
                                                             (line   42)
* expand:                                Funciones y variables para simplificación.
                                                             (line  179)
* expand <1>:                            Funciones y variables para simplificación.
                                                             (line  180)
* expandwrt:                             Funciones y variables para simplificación.
                                                             (line  273)
* expandwrt_denom:                       Funciones y variables para simplificación.
                                                             (line  287)
* expandwrt_factored:                    Funciones y variables para simplificación.
                                                             (line  296)
* expintegral_chi:                       Integral exponencial.
                                                             (line   30)
* expintegral_ci:                        Integral exponencial.
                                                             (line   24)
* expintegral_e:                         Integral exponencial.
                                                             (line   18)
* expintegral_e1:                        Integral exponencial.
                                                             (line    9)
* expintegral_ei:                        Integral exponencial.
                                                             (line   12)
* expintegral_li:                        Integral exponencial.
                                                             (line   15)
* expintegral_shi:                       Integral exponencial.
                                                             (line   27)
* expintegral_si:                        Integral exponencial.
                                                             (line   21)
* expintexpand:                          Integral exponencial.
                                                             (line   41)
* expintrep:                             Integral exponencial.
                                                             (line   33)
* explicit:                              Funciones y variables para draw.
                                                             (line 2963)
* explicit <1>:                          Funciones y variables para draw.
                                                             (line 2964)
* explose:                               Funciones y variables para simetrías.
                                                             (line  206)
* expon:                                 Funciones y variables para simplificación.
                                                             (line  305)
* Exponenciación:                        Operadores aritméticos.
                                                             (line   11)
* Exponenciación no conmutativa:         Operadores aritméticos.
                                                             (line  195)
* exponentialize:                        Funciones y variables para simplificación.
                                                             (line  313)
* exponentialize <1>:                    Funciones y variables para simplificación.
                                                             (line  314)
* expop:                                 Funciones y variables para simplificación.
                                                             (line  328)
* Expresión actual de entrada:           Funciones y variables para la línea de comandos.
                                                             (line    7)
* express:                               Funciones y variables para la diferenciación.
                                                             (line  449)
* expt:                                  Funciones y variables para la impresión.
                                                             (line  158)
* exptdispflag:                          Funciones y variables para la impresión.
                                                             (line  166)
* exptisolate:                           Funciones y variables para expresiones.
                                                             (line  215)
* exptsubst:                             Funciones y variables para expresiones.
                                                             (line  220)
* exsec:                                 Paquete functs.     (line  169)
* extdiff:                               Funciones y variables para itensor.
                                                             (line 1449)
* extract_linear_equations:              Funciones y variables para Afines.
                                                             (line  106)
* extremal_subset:                       Funciones y variables para los conjuntos.
                                                             (line  303)
* extremal_subset <1>:                   Funciones y variables para los conjuntos.
                                                             (line  304)
* ezgcd:                                 Funciones y variables para polinomios.
                                                             (line  195)
* f90:                                   Funciones y variables para f90.
                                                             (line    6)
* facexpand:                             Funciones y variables para polinomios.
                                                             (line  225)
* facsum:                                Paquete facexp.     (line   27)
* facsum_combine:                        Paquete facexp.     (line   79)
* factcomb:                              Funciones combinatorias.
                                                             (line   47)
* factlim:                               Funciones combinatorias.
                                                             (line  148)
* factor:                                Funciones y variables para polinomios.
                                                             (line  232)
* factor <1>:                            Funciones y variables para polinomios.
                                                             (line  233)
* factorfacsum:                          Paquete facexp.     (line   88)
* factorflag:                            Funciones y variables para polinomios.
                                                             (line  367)
* factorial:                             Funciones combinatorias.
                                                             (line   55)
* factorial_expand:                      Funciones combinatorias.
                                                             (line  155)
* factorout:                             Funciones y variables para polinomios.
                                                             (line  373)
* factorsum:                             Funciones y variables para polinomios.
                                                             (line  390)
* factors_only:                          Funciones y variables para teoría de números.
                                                             (line  249)
* facts:                                 Funciones y variables para los hechos.
                                                             (line  273)
* facts <1>:                             Funciones y variables para los hechos.
                                                             (line  274)
* false:                                 Funciones y variables para Constantes.
                                                             (line   14)
* fasttimes:                             Funciones y variables para polinomios.
                                                             (line  409)
* fast_central_elements:                 Funciones y variables para Afines.
                                                             (line   71)
* fast_linsolve:                         Funciones y variables para Afines.
                                                             (line    6)
* fb:                                    Funciones y variables para ctensor.
                                                             (line 1152)
* feature:                               Funciones y variables para las propiedades.
                                                             (line  282)
* featurep:                              Funciones y variables para las propiedades.
                                                             (line  292)
* features:                              Funciones y variables para las propiedades.
                                                             (line  311)
* fernfale:                              Definiciones para IFS fractals.
                                                             (line   44)
* fft:                                   Funciones y variables para la transformada rápida de Fourier.
                                                             (line  106)
* fib:                                   Funciones y variables para teoría de números.
                                                             (line  260)
* fibtophi:                              Funciones y variables para teoría de números.
                                                             (line  272)
* fifth:                                 Funciones y variables para listas.
                                                             (line  181)
* filename_merge:                        Funciones y variables para lectura y escritura.
                                                             (line  104)
* file_name:                             Funciones y variables para draw.
                                                             (line  882)
* file_name <1>:                         Funciones y variables para graphs.
                                                             (line 1589)
* file_output_append:                    Funciones y variables para lectura y escritura.
                                                             (line   85)
* file_search:                           Funciones y variables para lectura y escritura.
                                                             (line  112)
* file_search <1>:                       Funciones y variables para lectura y escritura.
                                                             (line  113)
* file_search_demo:                      Funciones y variables para lectura y escritura.
                                                             (line  156)
* file_search_lisp:                      Funciones y variables para lectura y escritura.
                                                             (line  155)
* file_search_maxima:                    Funciones y variables para lectura y escritura.
                                                             (line  154)
* file_search_tests:                     Funciones y variables para lectura y escritura.
                                                             (line  158)
* file_search_usage:                     Funciones y variables para lectura y escritura.
                                                             (line  157)
* file_type:                             Funciones y variables para lectura y escritura.
                                                             (line  194)
* file_type_lisp:                        Funciones y variables para lectura y escritura.
                                                             (line  212)
* file_type_maxima:                      Funciones y variables para lectura y escritura.
                                                             (line  220)
* fillarray:                             Funciones y variables para los arrays.
                                                             (line  224)
* filled_func:                           Funciones y variables para draw.
                                                             (line  919)
* fill_color:                            Funciones y variables para draw.
                                                             (line  902)
* fill_density:                          Funciones y variables para draw.
                                                             (line  910)
* findde:                                Funciones y variables para ctensor.
                                                             (line  637)
* find_root:                             Funciones para la resolución numérica de ecuaciones.
                                                             (line   33)
* find_root <1>:                         Funciones para la resolución numérica de ecuaciones.
                                                             (line   34)
* find_root_abs:                         Funciones para la resolución numérica de ecuaciones.
                                                             (line   38)
* find_root_error:                       Funciones para la resolución numérica de ecuaciones.
                                                             (line   37)
* find_root_rel:                         Funciones para la resolución numérica de ecuaciones.
                                                             (line   39)
* first:                                 Funciones y variables para listas.
                                                             (line  186)
* fix:                                   Funciones para los números.
                                                             (line  226)
* fixed_vertices:                        Funciones y variables para graphs.
                                                             (line 1602)
* flatten:                               Funciones y variables para los conjuntos.
                                                             (line  324)
* flength:                               Funciones y variables para entrada y salida.
                                                             (line   29)
* flipflag:                              Funciones y variables para itensor.
                                                             (line  145)
* float:                                 Funciones y variables para los números.
                                                             (line   44)
* float2bf:                              Funciones y variables para los números.
                                                             (line   49)
* floatnump:                             Funciones y variables para los números.
                                                             (line   57)
* floor:                                 Funciones para los números.
                                                             (line  179)
* flower_snark:                          Funciones y variables para graphs.
                                                             (line  126)
* flush:                                 Funciones y variables para itensor.
                                                             (line  734)
* flush1deriv:                           Funciones y variables para itensor.
                                                             (line  881)
* flushd:                                Funciones y variables para itensor.
                                                             (line  739)
* flushnd:                               Funciones y variables para itensor.
                                                             (line  744)
* fmin_cobyla:                           Funciones y variables para cobyla.
                                                             (line    6)
* fmin_cobyla <1>:                       Funciones y variables para cobyla.
                                                             (line    7)
* font:                                  Funciones y variables para draw.
                                                             (line  956)
* font_size:                             Funciones y variables para draw.
                                                             (line 1045)
* for:                                   Funciones y variables para la programación.
                                                             (line  359)
* forget:                                Funciones y variables para los hechos.
                                                             (line  285)
* forget <1>:                            Funciones y variables para los hechos.
                                                             (line  286)
* fortindent:                            Funciones y variables para salida Fortran.
                                                             (line    6)
* fortran:                               Funciones y variables para salida Fortran.
                                                             (line   14)
* fortspaces:                            Funciones y variables para salida Fortran.
                                                             (line   69)
* fourcos:                               Funciones y variables para series de Fourier.
                                                             (line   67)
* fourexpand:                            Funciones y variables para series de Fourier.
                                                             (line   61)
* fourier:                               Funciones y variables para series de Fourier.
                                                             (line   43)
* fourier_elim:                          Funciones y variables para to_poly_solve.
                                                             (line  385)
* fourint:                               Funciones y variables para series de Fourier.
                                                             (line   79)
* fourintcos:                            Funciones y variables para series de Fourier.
                                                             (line   83)
* fourintsin:                            Funciones y variables para series de Fourier.
                                                             (line   87)
* foursimp:                              Funciones y variables para series de Fourier.
                                                             (line   47)
* foursin:                               Funciones y variables para series de Fourier.
                                                             (line   71)
* fourth:                                Funciones y variables para listas.
                                                             (line  202)
* fposition:                             Funciones y variables para entrada y salida.
                                                             (line   33)
* fposition <1>:                         Funciones y variables para entrada y salida.
                                                             (line   34)
* fpprec:                                Funciones y variables para los números.
                                                             (line   61)
* fpprintprec:                           Funciones y variables para los números.
                                                             (line   71)
* frame_bracket:                         Funciones y variables para ctensor.
                                                             (line  453)
* freeof:                                Funciones y variables para expresiones.
                                                             (line  226)
* freshline:                             Funciones y variables para entrada y salida.
                                                             (line   41)
* freshline <1>:                         Funciones y variables para entrada y salida.
                                                             (line   42)
* fresnel_c:                             Función de error.   (line   27)
* fresnel_s:                             Función de error.   (line   40)
* from_adjacency_matrix:                 Funciones y variables para graphs.
                                                             (line  136)
* frucht_graph:                          Funciones y variables para graphs.
                                                             (line  139)
* fullmap:                               Funciones y variables para la definición de funciones.
                                                             (line  457)
* fullmapl:                              Funciones y variables para la definición de funciones.
                                                             (line  474)
* fullratsimp:                           Funciones y variables para polinomios.
                                                             (line  417)
* fullratsubst:                          Funciones y variables para polinomios.
                                                             (line  452)
* fullsetify:                            Funciones y variables para los conjuntos.
                                                             (line  407)
* full_listify:                          Funciones y variables para los conjuntos.
                                                             (line  391)
* funcsolve:                             Funciones y variable para las ecuaciones.
                                                             (line  329)
* functions:                             Funciones y variables para la definición de funciones.
                                                             (line  481)
* fundamental_dimensions:                Funciones y variables para ezunits.
                                                             (line  524)
* fundamental_units:                     Funciones y variables para ezunits.
                                                             (line  637)
* fundamental_units <1>:                 Funciones y variables para ezunits.
                                                             (line  638)
* fundef:                                Funciones y variables para la definición de funciones.
                                                             (line  528)
* funmake:                               Funciones y variables para la definición de funciones.
                                                             (line  548)
* funp:                                  Funciones y variables para series de Fourier.
                                                             (line   20)
* funp <1>:                              Funciones y variables para series de Fourier.
                                                             (line   21)
* fv:                                    Funciones y Variables para finance.
                                                             (line   17)
* gamma:                                 Funciones Gamma y factorial.
                                                             (line   34)
* gammalim:                              Funciones Gamma y factorial.
                                                             (line  206)
* gamma_expand:                          Funciones Gamma y factorial.
                                                             (line  187)
* gamma_incomplete:                      Funciones Gamma y factorial.
                                                             (line  141)
* gamma_incomplete_generalized:          Funciones Gamma y factorial.
                                                             (line  173)
* gamma_incomplete_lower:                Funciones Gamma y factorial.
                                                             (line  126)
* gamma_incomplete_regularized:          Funciones Gamma y factorial.
                                                             (line  159)
* gaussprob:                             Paquete functs.     (line  142)
* gauss_a:                               Funciones y variables para contrib_ode.
                                                             (line   90)
* gauss_b:                               Funciones y variables para contrib_ode.
                                                             (line  104)
* gcd:                                   Funciones y variables para polinomios.
                                                             (line  498)
* gcdex:                                 Funciones y variables para polinomios.
                                                             (line  520)
* gcdex <1>:                             Funciones y variables para polinomios.
                                                             (line  521)
* gcdivide:                              Paquete functs.     (line   67)
* gcfac:                                 Paquete scifac.     (line    6)
* gcfactor:                              Funciones y variables para polinomios.
                                                             (line  541)
* gd:                                    Paquete functs.     (line  148)
* gdet:                                  Funciones y variables para ctensor.
                                                             (line 1069)
* generalized_lambert_w:                 Funciones y variables para las funciones especiales.
                                                             (line  157)
* genfact:                               Funciones combinatorias.
                                                             (line  163)
* genindex:                              Funciones y variables para la miscelánea de opciones.
                                                             (line   10)
* genmatrix:                             Funciones y variables para las matrices y el álgebra lineal.
                                                             (line  529)
* genmatrix <1>:                         Funciones y variables para las matrices y el álgebra lineal.
                                                             (line  530)
* genmatrix <2>:                         Funciones y variables para las matrices y el álgebra lineal.
                                                             (line  531)
* gensumnum:                             Funciones y variables para la miscelánea de opciones.
                                                             (line   16)
* gensym:                                Funciones y variables para la miscelánea de opciones.
                                                             (line   24)
* gensym <1>:                            Funciones y variables para la miscelánea de opciones.
                                                             (line   25)
* gen_laguerre:                          Funciones y variables para polinomios ortogonales.
                                                             (line   29)
* geomap:                                Funciones y variables para worldmap.
                                                             (line  153)
* geomap <1>:                            Funciones y variables para worldmap.
                                                             (line  154)
* geometric:                             Paquete functs.     (line  116)
* geometric_mean:                        Funciones y variables de parámetros descriptivos.
                                                             (line  358)
* geometric_mean <1>:                    Funciones y variables de parámetros descriptivos.
                                                             (line  359)
* geosum:                                Paquete functs.     (line  135)
* geo_amortization:                      Funciones y Variables para finance.
                                                             (line  159)
* geo_annuity_fv:                        Funciones y Variables para finance.
                                                             (line   92)
* geo_annuity_pv:                        Funciones y Variables para finance.
                                                             (line   79)
* get:                                   Funciones y variables para las propiedades.
                                                             (line  350)
* get_edge_weight:                       Funciones y variables para graphs.
                                                             (line  484)
* get_edge_weight <1>:                   Funciones y variables para graphs.
                                                             (line  485)
* get_lu_factors:                        Funciones y variables para linearalgebra.
                                                             (line  172)
* get_output_stream_string:              Funciones y variables para entrada y salida.
                                                             (line   48)
* get_pixel:                             Funciones y variables para picture.
                                                             (line    6)
* get_plot_option:                       Funciones y variables para gráficos.
                                                             (line   31)
* get_tex_environment:                   Funciones y variables para salida TeX.
                                                             (line  215)
* get_tex_environment_default:           Funciones y variables para salida TeX.
                                                             (line  250)
* get_vertex_label:                      Funciones y variables para graphs.
                                                             (line  503)
* gfactor:                               Funciones y variables para polinomios.
                                                             (line  548)
* gfactorsum:                            Funciones y variables para polinomios.
                                                             (line  559)
* ggf:                                   Funciones y variables para ggf.
                                                             (line   36)
* GGFCFMAX:                              Funciones y variables para ggf.
                                                             (line   21)
* GGFINFINITY:                           Funciones y variables para ggf.
                                                             (line    6)
* girth:                                 Funciones y variables para graphs.
                                                             (line  577)
* globalsolve:                           Funciones y variable para las ecuaciones.
                                                             (line  351)
* global_variances:                      Funciones y variables de parámetros descriptivos.
                                                             (line  610)
* global_variances <1>:                  Funciones y variables de parámetros descriptivos.
                                                             (line  611)
* gnuplot_close:                         Funciones para el formato Gnuplot_pipes.
                                                             (line   12)
* gnuplot_curve_styles:                  Opciones para Gnuplot.
                                                             (line   74)
* gnuplot_curve_titles:                  Opciones para Gnuplot.
                                                             (line   70)
* gnuplot_default_term_command:          Opciones para Gnuplot.
                                                             (line   78)
* gnuplot_dumb_term_command:             Opciones para Gnuplot.
                                                             (line   83)
* gnuplot_file_name:                     Funciones y variables para draw.
                                                             (line 1058)
* gnuplot_out_file:                      Opciones para Gnuplot.
                                                             (line   46)
* gnuplot_pm3d:                          Opciones para Gnuplot.
                                                             (line   56)
* gnuplot_preamble:                      Opciones para Gnuplot.
                                                             (line   63)
* gnuplot_ps_term_command:               Opciones para Gnuplot.
                                                             (line   89)
* gnuplot_replot:                        Funciones para el formato Gnuplot_pipes.
                                                             (line   22)
* gnuplot_replot <1>:                    Funciones para el formato Gnuplot_pipes.
                                                             (line   23)
* gnuplot_reset:                         Funciones para el formato Gnuplot_pipes.
                                                             (line   29)
* gnuplot_restart:                       Funciones para el formato Gnuplot_pipes.
                                                             (line   17)
* gnuplot_start:                         Funciones para el formato Gnuplot_pipes.
                                                             (line    6)
* gnuplot_term:                          Opciones para Gnuplot.
                                                             (line   10)
* go:                                    Funciones y variables para la programación.
                                                             (line  363)
* Gosper:                                Funciones y variables para zeilberger.
                                                             (line   11)
* GosperSum:                             Funciones y variables para zeilberger.
                                                             (line   20)
* Gosper_in_Zeilberger:                  Funciones y variables para zeilberger.
                                                             (line  119)
* gr2d:                                  Funciones y variables para draw.
                                                             (line    9)
* gr3d:                                  Funciones y variables para draw.
                                                             (line   29)
* gradef:                                Funciones y variables para la diferenciación.
                                                             (line  511)
* gradef <1>:                            Funciones y variables para la diferenciación.
                                                             (line  512)
* gradefs:                               Funciones y variables para la diferenciación.
                                                             (line  557)
* gramschmidt:                           Funciones y variables para las matrices y el álgebra lineal.
                                                             (line  587)
* gramschmidt <1>:                       Funciones y variables para las matrices y el álgebra lineal.
                                                             (line  588)
* graph6_decode:                         Funciones y variables para graphs.
                                                             (line 1335)
* graph6_encode:                         Funciones y variables para graphs.
                                                             (line 1338)
* graph6_export:                         Funciones y variables para graphs.
                                                             (line 1341)
* graph6_import:                         Funciones y variables para graphs.
                                                             (line 1345)
* graph_center:                          Funciones y variables para graphs.
                                                             (line  525)
* graph_charpoly:                        Funciones y variables para graphs.
                                                             (line  513)
* graph_eigenvalues:                     Funciones y variables para graphs.
                                                             (line  535)
* graph_flow:                            Funciones y Variables para finance.
                                                             (line   41)
* graph_order:                           Funciones y variables para graphs.
                                                             (line  567)
* graph_periphery:                       Funciones y variables para graphs.
                                                             (line  547)
* graph_product:                         Funciones y variables para graphs.
                                                             (line  142)
* graph_size:                            Funciones y variables para graphs.
                                                             (line  557)
* graph_union:                           Funciones y variables para graphs.
                                                             (line  151)
* great_rhombicosidodecahedron_graph:    Funciones y variables para graphs.
                                                             (line  157)
* great_rhombicuboctahedron_graph:       Funciones y variables para graphs.
                                                             (line  160)
* grid:                                  Opciones gráficas.  (line   84)
* grid <1>:                              Funciones y variables para draw.
                                                             (line 1080)
* grid_graph:                            Funciones y variables para graphs.
                                                             (line  154)
* grind:                                 Funciones y variables para la impresión.
                                                             (line  187)
* grind <1>:                             Funciones y variables para la impresión.
                                                             (line  188)
* grobner_basis:                         Funciones y variables para Afines.
                                                             (line   23)
* grotzch_graph:                         Funciones y variables para graphs.
                                                             (line  163)
* halfangles:                            Funciones y variables para trigonometría.
                                                             (line  148)
* hamilton_cycle:                        Funciones y variables para graphs.
                                                             (line  587)
* hamilton_path:                         Funciones y variables para graphs.
                                                             (line  599)
* hankel:                                Funciones y variables para linearalgebra.
                                                             (line  179)
* hankel <1>:                            Funciones y variables para linearalgebra.
                                                             (line  180)
* hankel_1:                              Funciones de Bessel.
                                                             (line   62)
* hankel_2:                              Funciones de Bessel.
                                                             (line  115)
* harmonic:                              Paquete functs.     (line  122)
* harmonic_mean:                         Funciones y variables de parámetros descriptivos.
                                                             (line  332)
* harmonic_mean <1>:                     Funciones y variables de parámetros descriptivos.
                                                             (line  333)
* hav:                                   Paquete functs.     (line  174)
* head_angle:                            Funciones y variables para draw.
                                                             (line 1101)
* head_angle <1>:                        Funciones y variables para graphs.
                                                             (line 1570)
* head_both:                             Funciones y variables para draw.
                                                             (line 1136)
* head_length:                           Funciones y variables para draw.
                                                             (line 1156)
* head_length <1>:                       Funciones y variables para graphs.
                                                             (line 1575)
* head_type:                             Funciones y variables para draw.
                                                             (line 1179)
* heawood_graph:                         Funciones y variables para graphs.
                                                             (line  166)
* height:                                Visualización usando VTK.
                                                             (line   86)
* height <1>:                            Visualización usando VTK.
                                                             (line  232)
* hermite:                               Funciones y variables para polinomios ortogonales.
                                                             (line   34)
* hessian:                               Funciones y variables para linearalgebra.
                                                             (line  187)
* hgfred:                                Funciones y variables para las funciones especiales.
                                                             (line  102)
* hilbertmap:                            Definiciones para curvas de Peano.
                                                             (line    9)
* hilbert_matrix:                        Funciones y variables para linearalgebra.
                                                             (line  214)
* hipow:                                 Funciones y variables para polinomios.
                                                             (line  563)
* histogram:                             Funciones y variables para gráficos estadísticos.
                                                             (line  246)
* histogram <1>:                         Funciones y variables para gráficos estadísticos.
                                                             (line  247)
* histogram <2>:                         Funciones y variables para gráficos estadísticos.
                                                             (line  248)
* histogram <3>:                         Funciones y variables para gráficos estadísticos.
                                                             (line  249)
* histogram <4>:                         Funciones y variables para gráficos estadísticos.
                                                             (line  251)
* histogram <5>:                         Funciones y variables para gráficos estadísticos.
                                                             (line  252)
* histogram_description:                 Funciones y variables para gráficos estadísticos.
                                                             (line  253)
* hodge:                                 Funciones y variables para itensor.
                                                             (line 1480)
* horner:                                Funciones para la resolución numérica de ecuaciones.
                                                             (line    6)
* horner <1>:                            Funciones para la resolución numérica de ecuaciones.
                                                             (line    7)
* hypergeometric:                        Funciones hipergeométricas.
                                                             (line   23)
* hypergeometric_representation:         Función de error.   (line   59)
* i:                                     Funciones y variables para Constantes.
                                                             (line   12)
* i-ésima salida anterior:               Funciones y variables para la línea de comandos.
                                                             (line  159)
* ibase:                                 Funciones y variables para la impresión.
                                                             (line  290)
* ic1:                                   Funciones y variables para ecuaciones diferenciales.
                                                             (line   68)
* ic2:                                   Funciones y variables para ecuaciones diferenciales.
                                                             (line   77)
* icc1:                                  Funciones y variables para itensor.
                                                             (line 1121)
* icc2:                                  Funciones y variables para itensor.
                                                             (line 1137)
* ichr1:                                 Funciones y variables para itensor.
                                                             (line  903)
* ichr2:                                 Funciones y variables para itensor.
                                                             (line  913)
* icosahedron_graph:                     Funciones y variables para graphs.
                                                             (line  169)
* icosidodecahedron_graph:               Funciones y variables para graphs.
                                                             (line  172)
* icounter:                              Funciones y variables para itensor.
                                                             (line  353)
* icurvature:                            Funciones y variables para itensor.
                                                             (line  920)
* ic_convert:                            Funciones y variables para itensor.
                                                             (line 1575)
* ident:                                 Funciones y variables para las matrices y el álgebra lineal.
                                                             (line  643)
* identfor:                              Funciones y variables para linearalgebra.
                                                             (line  219)
* identfor <1>:                          Funciones y variables para linearalgebra.
                                                             (line  220)
* identity:                              Funciones y variables para los conjuntos.
                                                             (line  426)
* idiff:                                 Funciones y variables para itensor.
                                                             (line  638)
* idim:                                  Funciones y variables para itensor.
                                                             (line  898)
* idummy:                                Funciones y variables para itensor.
                                                             (line  340)
* idummyx:                               Funciones y variables para itensor.
                                                             (line  348)
* ieqn:                                  Funciones y variable para las ecuaciones.
                                                             (line  408)
* ieqnprint:                             Funciones y variable para las ecuaciones.
                                                             (line  434)
* if:                                    Funciones y variables para la programación.
                                                             (line  377)
* ifactors:                              Funciones y variables para teoría de números.
                                                             (line  297)
* ifb:                                   Funciones y variables para itensor.
                                                             (line 1091)
* ifc1:                                  Funciones y variables para itensor.
                                                             (line 1154)
* ifc2:                                  Funciones y variables para itensor.
                                                             (line 1168)
* ifg:                                   Funciones y variables para itensor.
                                                             (line 1191)
* ifgi:                                  Funciones y variables para itensor.
                                                             (line 1196)
* ifr:                                   Funciones y variables para itensor.
                                                             (line 1180)
* iframe_bracket_form:                   Funciones y variables para itensor.
                                                             (line 1201)
* ifri:                                  Funciones y variables para itensor.
                                                             (line 1186)
* ifs:                                   Análisis gráfico de sistemas dinámicos discretos.
                                                             (line   65)
* igcdex:                                Funciones y variables para teoría de números.
                                                             (line  319)
* igeodesic_coords:                      Funciones y variables para itensor.
                                                             (line  979)
* igeowedge_flag:                        Funciones y variables para itensor.
                                                             (line 1518)
* Igualdad sintáctica:                   Operadores para ecuaciones.
                                                             (line   30)
* ikt1:                                  Funciones y variables para itensor.
                                                             (line 1254)
* ikt2:                                  Funciones y variables para itensor.
                                                             (line 1269)
* ilt:                                   Funciones y variables para integración.
                                                             (line  120)
* image:                                 Funciones y variables para draw.
                                                             (line 3014)
* imaginary:                             Funciones y variables para las propiedades.
                                                             (line  539)
* imagpart:                              Funciones para los números complejos.
                                                             (line  113)
* imetric:                               Funciones y variables para itensor.
                                                             (line  889)
* imetric <1>:                           Funciones y variables para itensor.
                                                             (line  890)
* implicit:                              Funciones y variables para draw.
                                                             (line 3105)
* implicit <1>:                          Funciones y variables para draw.
                                                             (line 3106)
* implicit_derivative:                   Funciones y variables para impdiff.
                                                             (line    6)
* inchar:                                Funciones y variables para la línea de comandos.
                                                             (line  208)
* increasing:                            Funciones y variables para las propiedades.
                                                             (line  242)
* ind:                                   Funciones y variables para Constantes.
                                                             (line   21)
* Indefinido:                            Funciones y variables para Constantes.
                                                             (line  108)
* Indeterminado:                         Funciones y variables para Constantes.
                                                             (line   22)
* indexed_tensor:                        Funciones y variables para itensor.
                                                             (line  194)
* indices:                               Funciones y variables para itensor.
                                                             (line   54)
* induced_subgraph:                      Funciones y variables para graphs.
                                                             (line  175)
* inf:                                   Funciones y variables para Constantes.
                                                             (line   32)
* inferencep:                            Funciones y variables para inference_result.
                                                             (line   48)
* inference_result:                      Funciones y variables para inference_result.
                                                             (line    6)
* infeval:                               Funciones y variables para la evaluación.
                                                             (line  577)
* Infinito complejo:                     Funciones y variables para Constantes.
                                                             (line   36)
* Infinito negativo:                     Funciones y variables para Constantes.
                                                             (line   39)
* infinity:                              Funciones y variables para Constantes.
                                                             (line   35)
* infix:                                 Operadores definidos por el usuario.
                                                             (line    6)
* infix <1>:                             Operadores definidos por el usuario.
                                                             (line    7)
* infix <2>:                             Operadores definidos por el usuario.
                                                             (line    8)
* inflag:                                Funciones y variables para expresiones.
                                                             (line  314)
* infolists:                             Funciones y variables para la línea de comandos.
                                                             (line  234)
* init_atensor:                          Funciones y variables para atensor.
                                                             (line    6)
* init_atensor <1>:                      Funciones y variables para atensor.
                                                             (line    7)
* init_ctensor:                          Funciones y variables para ctensor.
                                                             (line  138)
* inm:                                   Funciones y variables para itensor.
                                                             (line 1214)
* inmc1:                                 Funciones y variables para itensor.
                                                             (line 1224)
* inmc2:                                 Funciones y variables para itensor.
                                                             (line 1238)
* innerproduct:                          Funciones y variables para las matrices y el álgebra lineal.
                                                             (line  646)
* inpart:                                Funciones y variables para expresiones.
                                                             (line  332)
* inprod:                                Funciones y variables para las matrices y el álgebra lineal.
                                                             (line  647)
* inrt:                                  Funciones y variables para teoría de números.
                                                             (line  341)
* intanalysis:                           Funciones y variables para integración.
                                                             (line  163)
* integer:                               Funciones y variables para las propiedades.
                                                             (line  377)
* integerp:                              Funciones y variables para los números.
                                                             (line   92)
* integervalued:                         Funciones y variables para las propiedades.
                                                             (line  394)
* integer_partitions:                    Funciones y variables para los conjuntos.
                                                             (line  439)
* integer_partitions <1>:                Funciones y variables para los conjuntos.
                                                             (line  440)
* integrate:                             Funciones y variables para integración.
                                                             (line  202)
* integrate <1>:                         Funciones y variables para integración.
                                                             (line  203)
* integrate_use_rootsof:                 Funciones y variables para integración.
                                                             (line  440)
* integration_constant:                  Funciones y variables para integración.
                                                             (line  379)
* integration_constant_counter:          Funciones y variables para integración.
                                                             (line  404)
* interpolate_color:                     Funciones y variables para draw.
                                                             (line 1203)
* intersect:                             Funciones y variables para los conjuntos.
                                                             (line  484)
* intersection:                          Funciones y variables para los conjuntos.
                                                             (line  487)
* intervalp:                             Funciones y variables para polinomios ortogonales.
                                                             (line   39)
* intfaclim:                             Funciones y variables para polinomios.
                                                             (line  586)
* intopois:                              Funciones y variables para series de Poisson.
                                                             (line    6)
* intosum:                               Funciones y variables para sumas y productos.
                                                             (line   34)
* invariant1:                            Funciones y variables para ctensor.
                                                             (line  762)
* inverse_fft:                           Funciones y variables para la transformada rápida de Fourier.
                                                             (line   46)
* inverse_jacobi_cd:                     Funciones y variables para funciones elípticas.
                                                             (line   66)
* inverse_jacobi_cn:                     Funciones y variables para funciones elípticas.
                                                             (line   45)
* inverse_jacobi_cs:                     Funciones y variables para funciones elípticas.
                                                             (line   63)
* inverse_jacobi_dc:                     Funciones y variables para funciones elípticas.
                                                             (line   75)
* inverse_jacobi_dn:                     Funciones y variables para funciones elípticas.
                                                             (line   48)
* inverse_jacobi_ds:                     Funciones y variables para funciones elípticas.
                                                             (line   72)
* inverse_jacobi_nc:                     Funciones y variables para funciones elípticas.
                                                             (line   60)
* inverse_jacobi_nd:                     Funciones y variables para funciones elípticas.
                                                             (line   69)
* inverse_jacobi_ns:                     Funciones y variables para funciones elípticas.
                                                             (line   51)
* inverse_jacobi_sc:                     Funciones y variables para funciones elípticas.
                                                             (line   54)
* inverse_jacobi_sd:                     Funciones y variables para funciones elípticas.
                                                             (line   57)
* inverse_jacobi_sn:                     Funciones y variables para funciones elípticas.
                                                             (line   42)
* invert:                                Funciones y variables para las matrices y el álgebra lineal.
                                                             (line  657)
* invert_by_lu:                          Funciones y variables para linearalgebra.
                                                             (line  234)
* inv_mod:                               Funciones y variables para teoría de números.
                                                             (line  348)
* in_neighbors:                          Funciones y variables para graphs.
                                                             (line  623)
* ip_grid:                               Funciones y variables para draw.
                                                             (line 1270)
* ip_grid_in:                            Funciones y variables para draw.
                                                             (line 1278)
* irr:                                   Funciones y Variables para finance.
                                                             (line  230)
* irrational:                            Funciones y variables para las propiedades.
                                                             (line  530)
* is:                                    Funciones y variables para los hechos.
                                                             (line  294)
* ishow:                                 Funciones y variables para itensor.
                                                             (line   46)
* isolate:                               Funciones y variables para expresiones.
                                                             (line  359)
* isolate_wrt_times:                     Funciones y variables para expresiones.
                                                             (line  377)
* isomorphism:                           Funciones y variables para graphs.
                                                             (line  611)
* isqrt:                                 Funciones y variables para teoría de números.
                                                             (line  359)
* isreal_p:                              Funciones y variables para to_poly_solve.
                                                             (line  458)
* is_biconnected:                        Funciones y variables para graphs.
                                                             (line  636)
* is_bipartite:                          Funciones y variables para graphs.
                                                             (line  649)
* is_connected:                          Funciones y variables para graphs.
                                                             (line  661)
* is_digraph:                            Funciones y variables para graphs.
                                                             (line  671)
* is_edge_in_graph:                      Funciones y variables para graphs.
                                                             (line  683)
* is_graph:                              Funciones y variables para graphs.
                                                             (line  700)
* is_graph_or_digraph:                   Funciones y variables para graphs.
                                                             (line  711)
* is_isomorphic:                         Funciones y variables para graphs.
                                                             (line  723)
* is_planar:                             Funciones y variables para graphs.
                                                             (line  736)
* is_sconnected:                         Funciones y variables para graphs.
                                                             (line  753)
* is_tree:                               Funciones y variables para graphs.
                                                             (line  778)
* is_vertex_in_graph:                    Funciones y variables para graphs.
                                                             (line  765)
* items_inference:                       Funciones y variables para inference_result.
                                                             (line   53)
* itr:                                   Funciones y variables para itensor.
                                                             (line 1282)
* jacobi:                                Funciones y variables para teoría de números.
                                                             (line  363)
* jacobian:                              Funciones y variables para linearalgebra.
                                                             (line  239)
* jacobi_cd:                             Funciones y variables para funciones elípticas.
                                                             (line   30)
* jacobi_cn:                             Funciones y variables para funciones elípticas.
                                                             (line    9)
* jacobi_cs:                             Funciones y variables para funciones elípticas.
                                                             (line   27)
* jacobi_dc:                             Funciones y variables para funciones elípticas.
                                                             (line   39)
* jacobi_dn:                             Funciones y variables para funciones elípticas.
                                                             (line   12)
* jacobi_ds:                             Funciones y variables para funciones elípticas.
                                                             (line   36)
* jacobi_nc:                             Funciones y variables para funciones elípticas.
                                                             (line   24)
* jacobi_nd:                             Funciones y variables para funciones elípticas.
                                                             (line   33)
* jacobi_ns:                             Funciones y variables para funciones elípticas.
                                                             (line   15)
* jacobi_p:                              Funciones y variables para polinomios ortogonales.
                                                             (line   43)
* jacobi_sc:                             Funciones y variables para funciones elípticas.
                                                             (line   18)
* jacobi_sd:                             Funciones y variables para funciones elípticas.
                                                             (line   21)
* jacobi_sn:                             Funciones y variables para funciones elípticas.
                                                             (line    6)
* JF:                                    Funciones y variables para diag.
                                                             (line   32)
* join:                                  Funciones y variables para listas.
                                                             (line  207)
* jordan:                                Funciones y variables para diag.
                                                             (line   56)
* julia_parameter:                       Definiciones para fractales complejos.
                                                             (line   40)
* julia_set:                             Definiciones para fractales complejos.
                                                             (line   22)
* julia_sin:                             Definiciones para fractales complejos.
                                                             (line   48)
* kdels:                                 Funciones y variables para itensor.
                                                             (line  375)
* kdelta:                                Funciones y variables para itensor.
                                                             (line  360)
* keepfloat:                             Funciones y variables para polinomios.
                                                             (line  606)
* key:                                   Funciones y variables para draw.
                                                             (line 1286)
* key_pos:                               Funciones y variables para draw.
                                                             (line 1309)
* kill:                                  Funciones y variables para la línea de comandos.
                                                             (line  282)
* kill <1>:                              Funciones y variables para la línea de comandos.
                                                             (line  283)
* kill <2>:                              Funciones y variables para la línea de comandos.
                                                             (line  284)
* kill <3>:                              Funciones y variables para la línea de comandos.
                                                             (line  285)
* kill <4>:                              Funciones y variables para la línea de comandos.
                                                             (line  286)
* kill <5>:                              Funciones y variables para la línea de comandos.
                                                             (line  287)
* kill <6>:                              Funciones y variables para la línea de comandos.
                                                             (line  288)
* kill <7>:                              Funciones y variables para la línea de comandos.
                                                             (line  289)
* killcontext:                           Funciones y variables para los hechos.
                                                             (line  347)
* kinvariant:                            Funciones y variables para ctensor.
                                                             (line 1157)
* km:                                    Funciones y variables de parámetros descriptivos.
                                                             (line  477)
* km <1>:                                Funciones y variables de parámetros descriptivos.
                                                             (line  478)
* kostka:                                Funciones y variables para simetrías.
                                                             (line  217)
* kronecker_product:                     Funciones y variables para linearalgebra.
                                                             (line  262)
* kron_delta:                            Funciones y variables para los conjuntos.
                                                             (line  514)
* kt:                                    Funciones y variables para ctensor.
                                                             (line 1187)
* kummer_m:                              Funciones y variables para contrib_ode.
                                                             (line  113)
* kummer_u:                              Funciones y variables para contrib_ode.
                                                             (line  125)
* kurtosis:                              Funciones y variables de parámetros descriptivos.
                                                             (line  382)
* kurtosis <1>:                          Funciones y variables de parámetros descriptivos.
                                                             (line  383)
* kurtosis_bernoulli:                    Funciones y variables para distribuciones discretas.
                                                             (line  282)
* kurtosis_beta:                         Funciones y variables para distribuciones continuas.
                                                             (line  760)
* kurtosis_binomial:                     Funciones y variables para distribuciones discretas.
                                                             (line  142)
* kurtosis_chi2:                         Funciones y variables para distribuciones continuas.
                                                             (line  337)
* kurtosis_continuous_uniform:           Funciones y variables para distribuciones continuas.
                                                             (line  815)
* kurtosis_discrete_uniform:             Funciones y variables para distribuciones discretas.
                                                             (line  397)
* kurtosis_exp:                          Funciones y variables para distribuciones continuas.
                                                             (line  570)
* kurtosis_f:                            Funciones y variables para distribuciones continuas.
                                                             (line  464)
* kurtosis_gamma:                        Funciones y variables para distribuciones continuas.
                                                             (line  695)
* kurtosis_general_finite_discrete:      Funciones y variables para distribuciones discretas.
                                                             (line   75)
* kurtosis_geometric:                    Funciones y variables para distribuciones discretas.
                                                             (line  343)
* kurtosis_gumbel:                       Funciones y variables para distribuciones continuas.
                                                             (line 1233)
* kurtosis_laplace:                      Funciones y variables para distribuciones continuas.
                                                             (line 1143)
* kurtosis_logistic:                     Funciones y variables para distribuciones continuas.
                                                             (line  868)
* kurtosis_lognormal:                    Funciones y variables para distribuciones continuas.
                                                             (line  637)
* kurtosis_negative_binomial:            Funciones y variables para distribuciones discretas.
                                                             (line  521)
* kurtosis_noncentral_chi2:              Funciones y variables para distribuciones continuas.
                                                             (line  401)
* kurtosis_noncentral_student_t:         Funciones y variables para distribuciones continuas.
                                                             (line  230)
* kurtosis_normal:                       Funciones y variables para distribuciones continuas.
                                                             (line   60)
* kurtosis_pareto:                       Funciones y variables para distribuciones continuas.
                                                             (line  919)
* kurtosis_poisson:                      Funciones y variables para distribuciones discretas.
                                                             (line  199)
* kurtosis_rayleigh:                     Funciones y variables para distribuciones continuas.
                                                             (line 1080)
* kurtosis_student_t:                    Funciones y variables para distribuciones continuas.
                                                             (line  127)
* kurtosis_weibull:                      Funciones y variables para distribuciones continuas.
                                                             (line  970)
* label:                                 Funciones y variables para draw.
                                                             (line 3156)
* label <1>:                             Funciones y variables para draw.
                                                             (line 3157)
* labels:                                Funciones y variables para la línea de comandos.
                                                             (line  350)
* labels <1>:                            Funciones y variables para la línea de comandos.
                                                             (line  351)
* label_alignment:                       Funciones y variables para draw.
                                                             (line 1340)
* label_alignment <1>:                   Funciones y variables para graphs.
                                                             (line 1481)
* label_orientation:                     Funciones y variables para draw.
                                                             (line 1365)
* lagrange:                              Funciones y variables para interpol.
                                                             (line    6)
* lagrange <1>:                          Funciones y variables para interpol.
                                                             (line    7)
* laguerre:                              Funciones y variables para polinomios ortogonales.
                                                             (line   52)
* lambda:                                Funciones y variables para la definición de funciones.
                                                             (line  635)
* lambda <1>:                            Funciones y variables para la definición de funciones.
                                                             (line  636)
* lambda <2>:                            Funciones y variables para la definición de funciones.
                                                             (line  637)
* lambert_w:                             Funciones y variables para las funciones especiales.
                                                             (line  153)
* laplace:                               Funciones y variables para la diferenciación.
                                                             (line  565)
* laplacian_matrix:                      Funciones y variables para graphs.
                                                             (line  789)
* lassociative:                          Funciones y variables para simplificación.
                                                             (line  338)
* last:                                  Funciones y variables para listas.
                                                             (line  227)
* lbfgs:                                 Funciones y variables para lbfgs.
                                                             (line    6)
* lbfgs <1>:                             Funciones y variables para lbfgs.
                                                             (line    7)
* lbfgs_ncorrections:                    Funciones y variables para lbfgs.
                                                             (line  277)
* lbfgs_nfeval_max:                      Funciones y variables para lbfgs.
                                                             (line  269)
* lc2kdt:                                Funciones y variables para itensor.
                                                             (line  403)
* lcharp:                                Funciones y variables para caracteres.
                                                             (line   70)
* lcm:                                   Funciones y variables para teoría de números.
                                                             (line  370)
* lc_l:                                  Funciones y variables para itensor.
                                                             (line  475)
* lc_u:                                  Funciones y variables para itensor.
                                                             (line  498)
* ldefint:                               Funciones y variables para integración.
                                                             (line  491)
* ldisp:                                 Funciones y variables para la impresión.
                                                             (line  348)
* ldisplay:                              Funciones y variables para la impresión.
                                                             (line  376)
* legend:                                Opciones gráficas.  (line   90)
* legend <1>:                            Opciones gráficas.  (line   91)
* legendre_p:                            Funciones y variables para polinomios ortogonales.
                                                             (line   58)
* legendre_q:                            Funciones y variables para polinomios ortogonales.
                                                             (line   64)
* leinstein:                             Funciones y variables para ctensor.
                                                             (line  229)
* length:                                Funciones y variables para listas.
                                                             (line  232)
* let:                                   Funciones y variables sobre reglas y patrones.
                                                             (line  231)
* let <1>:                               Funciones y variables sobre reglas y patrones.
                                                             (line  232)
* letrat:                                Funciones y variables sobre reglas y patrones.
                                                             (line  310)
* letrules:                              Funciones y variables sobre reglas y patrones.
                                                             (line  334)
* letrules <1>:                          Funciones y variables sobre reglas y patrones.
                                                             (line  335)
* letsimp:                               Funciones y variables sobre reglas y patrones.
                                                             (line  350)
* letsimp <1>:                           Funciones y variables sobre reglas y patrones.
                                                             (line  351)
* letsimp <2>:                           Funciones y variables sobre reglas y patrones.
                                                             (line  352)
* let_rule_packages:                     Funciones y variables sobre reglas y patrones.
                                                             (line  370)
* levi_civita:                           Funciones y variables para itensor.
                                                             (line  396)
* lfg:                                   Funciones y variables para ctensor.
                                                             (line 1102)
* lfreeof:                               Funciones y variables para expresiones.
                                                             (line  446)
* lg:                                    Funciones y variables para ctensor.
                                                             (line 1139)
* lgtreillis:                            Funciones y variables para simetrías.
                                                             (line  224)
* lhospitallim:                          Funciones y variables para límites.
                                                             (line    6)
* lhs:                                   Funciones y variable para las ecuaciones.
                                                             (line  450)
* li:                                    Funciones radicales exponenciales y logarítmicas.
                                                             (line   57)
* liediff:                               Funciones y variables para itensor.
                                                             (line  649)
* limit:                                 Funciones y variables para límites.
                                                             (line   13)
* limit <1>:                             Funciones y variables para límites.
                                                             (line   14)
* limit <2>:                             Funciones y variables para límites.
                                                             (line   15)
* limsubst:                              Funciones y variables para límites.
                                                             (line   60)
* Lindstedt:                             Funciones y variables para lindstedt.
                                                             (line    6)
* linear:                                Funciones y variables para simplificación.
                                                             (line  344)
* linear <1>:                            Paquete functs.     (line   49)
* linearinterpol:                        Funciones y variables para interpol.
                                                             (line  108)
* linearinterpol <1>:                    Funciones y variables para interpol.
                                                             (line  109)
* linear_program:                        Funciones y variables para simplex.
                                                             (line   14)
* linear_regression:                     Funciones y variables para stats.
                                                             (line  820)
* linear_regression <1>:                 Funciones y variables para stats.
                                                             (line  821)
* linear_solver:                         Funciones y variables para zeilberger.
                                                             (line  106)
* linechar:                              Funciones y variables para la línea de comandos.
                                                             (line  392)
* linel:                                 Funciones y variables para la impresión.
                                                             (line  407)
* linenum:                               Funciones y variables para la línea de comandos.
                                                             (line  410)
* linewidth:                             Visualización usando VTK.
                                                             (line  238)
* line_graph:                            Funciones y variables para graphs.
                                                             (line  194)
* line_type:                             Funciones y variables para draw.
                                                             (line 1392)
* line_width:                            Funciones y variables para draw.
                                                             (line 1418)
* linsolve:                              Funciones y variable para las ecuaciones.
                                                             (line  491)
* linsolvewarn:                          Funciones y variable para las ecuaciones.
                                                             (line  560)
* linsolve_params:                       Funciones y variable para las ecuaciones.
                                                             (line  566)
* lispdisp:                              Funciones y variables para la impresión.
                                                             (line  418)
* listarith:                             Funciones y variables para listas.
                                                             (line  246)
* listarray:                             Funciones y variables para los arrays.
                                                             (line  278)
* listconstvars:                         Funciones y variables para expresiones.
                                                             (line  404)
* listdummyvars:                         Funciones y variables para expresiones.
                                                             (line  412)
* listify:                               Funciones y variables para los conjuntos.
                                                             (line  538)
* listoftens:                            Funciones y variables para itensor.
                                                             (line   31)
* listofvars:                            Funciones y variables para expresiones.
                                                             (line  429)
* listp:                                 Funciones y variables para listas.
                                                             (line  256)
* listp <1>:                             Funciones y variables para linearalgebra.
                                                             (line  266)
* listp <2>:                             Funciones y variables para linearalgebra.
                                                             (line  267)
* list_correlations:                     Funciones y variables de parámetros descriptivos.
                                                             (line  701)
* list_correlations <1>:                 Funciones y variables de parámetros descriptivos.
                                                             (line  702)
* list_matrix_entries:                   Funciones y variables para las matrices y el álgebra lineal.
                                                             (line  674)
* list_nc_monomials:                     Funciones y variables para Afines.
                                                             (line  115)
* list_nc_monomials <1>:                 Funciones y variables para Afines.
                                                             (line  116)
* lmax:                                  Funciones para los números.
                                                             (line  229)
* lmin:                                  Funciones para los números.
                                                             (line  235)
* lmxchar:                               Funciones y variables para las matrices y el álgebra lineal.
                                                             (line  682)
* load:                                  Funciones y variables para lectura y escritura.
                                                             (line  228)
* loadfile:                              Funciones y variables para lectura y escritura.
                                                             (line  285)
* loadprint:                             Funciones y variables para lectura y escritura.
                                                             (line  294)
* load_pathname:                         Funciones y variables para lectura y escritura.
                                                             (line  259)
* local:                                 Funciones y variables para la definición de funciones.
                                                             (line  759)
* locate_matrix_entry:                   Funciones y variables para linearalgebra.
                                                             (line  275)
* log:                                   Funciones radicales exponenciales y logarítmicas.
                                                             (line  116)
* logabs:                                Funciones radicales exponenciales y logarítmicas.
                                                             (line  151)
* logarc:                                Funciones radicales exponenciales y logarítmicas.
                                                             (line  162)
* logarc <1>:                            Funciones radicales exponenciales y logarítmicas.
                                                             (line  163)
* logcb:                                 Funciones y variables para draw.
                                                             (line 1441)
* logconcoeffp:                          Funciones radicales exponenciales y logarítmicas.
                                                             (line  174)
* logcontract:                           Funciones radicales exponenciales y logarítmicas.
                                                             (line  184)
* logexpand:                             Funciones radicales exponenciales y logarítmicas.
                                                             (line  205)
* lognegint:                             Funciones radicales exponenciales y logarítmicas.
                                                             (line  216)
* logsimp:                               Funciones radicales exponenciales y logarítmicas.
                                                             (line  222)
* logx:                                  Opciones gráficas.  (line  100)
* logx <1>:                              Funciones y variables para draw.
                                                             (line 1466)
* logx_secondary:                        Funciones y variables para draw.
                                                             (line 1483)
* logy:                                  Opciones gráficas.  (line  105)
* logy <1>:                              Funciones y variables para draw.
                                                             (line 1509)
* logy_secondary:                        Funciones y variables para draw.
                                                             (line 1526)
* logz:                                  Funciones y variables para draw.
                                                             (line 1552)
* log_gamma:                             Funciones Gamma y factorial.
                                                             (line  123)
* lopow:                                 Funciones y variables para polinomios.
                                                             (line  636)
* lorentz_gauge:                         Funciones y variables para itensor.
                                                             (line  974)
* lowercasep:                            Funciones y variables para caracteres.
                                                             (line   74)
* lpart:                                 Funciones y variables para expresiones.
                                                             (line  451)
* lratsubst:                             Funciones y variables para polinomios.
                                                             (line  644)
* lreduce:                               Funciones y variables para los conjuntos.
                                                             (line  553)
* lreduce <1>:                           Funciones y variables para los conjuntos.
                                                             (line  554)
* lriem:                                 Funciones y variables para ctensor.
                                                             (line 1120)
* lriemann:                              Funciones y variables para ctensor.
                                                             (line  261)
* lsquares_estimates:                    Funciones y variables para lsquares.
                                                             (line    6)
* lsquares_estimates <1>:                Funciones y variables para lsquares.
                                                             (line    7)
* lsquares_estimates_approximate:        Funciones y variables para lsquares.
                                                             (line  151)
* lsquares_estimates_exact:              Funciones y variables para lsquares.
                                                             (line  100)
* lsquares_mse:                          Funciones y variables para lsquares.
                                                             (line  218)
* lsquares_residuals:                    Funciones y variables para lsquares.
                                                             (line  286)
* lsquares_residual_mse:                 Funciones y variables para lsquares.
                                                             (line  337)
* lsum:                                  Funciones y variables para sumas y productos.
                                                             (line   14)
* ltreillis:                             Funciones y variables para simetrías.
                                                             (line  232)
* lucas:                                 Funciones y variables para teoría de números.
                                                             (line  377)
* lu_backsub:                            Funciones y variables para linearalgebra.
                                                             (line  303)
* lu_factor:                             Funciones y variables para linearalgebra.
                                                             (line  308)
* m1pbranch:                             Funciones y variables para los números.
                                                             (line  121)
* macroexpand:                           Macros.             (line  104)
* macroexpand1:                          Macros.             (line  137)
* macroexpansion:                        Funciones y variables para la definición de funciones.
                                                             (line  795)
* macros:                                Macros.             (line  168)
* mainvar:                               Funciones y variables para expresiones.
                                                             (line  456)
* makebox:                               Funciones y variables para itensor.
                                                             (line  779)
* makefact:                              Funciones Gamma y factorial.
                                                             (line  762)
* makegamma:                             Funciones Gamma y factorial.
                                                             (line  215)
* makelist:                              Funciones y variables para listas.
                                                             (line  261)
* makelist <1>:                          Funciones y variables para listas.
                                                             (line  262)
* makelist <2>:                          Funciones y variables para listas.
                                                             (line  263)
* makelist <3>:                          Funciones y variables para listas.
                                                             (line  264)
* makelist <4>:                          Funciones y variables para listas.
                                                             (line  265)
* makelist <5>:                          Funciones y variables para listas.
                                                             (line  266)
* makeOrders:                            Funciones y variables para makeOrders.
                                                             (line    6)
* makeset:                               Funciones y variables para los conjuntos.
                                                             (line  593)
* make_array:                            Funciones y variables para los arrays.
                                                             (line  369)
* make_graph:                            Funciones y variables para graphs.
                                                             (line  197)
* make_graph <1>:                        Funciones y variables para graphs.
                                                             (line  198)
* make_level_picture:                    Funciones y variables para picture.
                                                             (line   10)
* make_level_picture <1>:                Funciones y variables para picture.
                                                             (line   11)
* make_polygon:                          Funciones y variables para worldmap.
                                                             (line   64)
* make_poly_continent:                   Funciones y variables para worldmap.
                                                             (line   38)
* make_poly_continent <1>:               Funciones y variables para worldmap.
                                                             (line   39)
* make_poly_country:                     Funciones y variables para worldmap.
                                                             (line   53)
* make_random_state:                     Números aleatorios. (line    6)
* make_random_state <1>:                 Números aleatorios. (line    7)
* make_random_state <2>:                 Números aleatorios. (line    8)
* make_random_state <3>:                 Números aleatorios. (line    9)
* make_rgb_picture:                      Funciones y variables para picture.
                                                             (line   42)
* make_string_input_stream:              Funciones y variables para entrada y salida.
                                                             (line   55)
* make_string_input_stream <1>:          Funciones y variables para entrada y salida.
                                                             (line   56)
* make_string_input_stream <2>:          Funciones y variables para entrada y salida.
                                                             (line   57)
* make_string_output_stream:             Funciones y variables para entrada y salida.
                                                             (line   73)
* make_transform:                        Funciones y variables para gráficos.
                                                             (line   41)
* mandelbrot_set:                        Definiciones para fractales complejos.
                                                             (line    6)
* manual_demo:                           Funciones y variables para la ayuda.
                                                             (line  233)
* map:                                   Funciones y variables para la programación.
                                                             (line  430)
* mapatom:                               Funciones y variables para la programación.
                                                             (line  460)
* maperror:                              Funciones y variables para la programación.
                                                             (line  464)
* maplist:                               Funciones y variables para la programación.
                                                             (line  489)
* mapprint:                              Funciones y variables para la programación.
                                                             (line  480)
* matchdeclare:                          Funciones y variables sobre reglas y patrones.
                                                             (line  377)
* matchfix:                              Operadores definidos por el usuario.
                                                             (line  100)
* matchfix <1>:                          Operadores definidos por el usuario.
                                                             (line  101)
* matrix:                                Funciones y variables para las matrices y el álgebra lineal.
                                                             (line  698)
* matrixmap:                             Funciones y variables para las matrices y el álgebra lineal.
                                                             (line  825)
* matrixp:                               Funciones y variables para las matrices y el álgebra lineal.
                                                             (line  830)
* matrixp <1>:                           Funciones y variables para linearalgebra.
                                                             (line  446)
* matrixp <2>:                           Funciones y variables para linearalgebra.
                                                             (line  447)
* matrix_element_add:                    Funciones y variables para las matrices y el álgebra lineal.
                                                             (line  833)
* matrix_element_mult:                   Funciones y variables para las matrices y el álgebra lineal.
                                                             (line  864)
* matrix_element_transpose:              Funciones y variables para las matrices y el álgebra lineal.
                                                             (line  907)
* matrix_size:                           Funciones y variables para linearalgebra.
                                                             (line  457)
* mattrace:                              Funciones y variables para las matrices y el álgebra lineal.
                                                             (line  958)
* mat_cond:                              Funciones y variables para linearalgebra.
                                                             (line  427)
* mat_cond <1>:                          Funciones y variables para linearalgebra.
                                                             (line  428)
* mat_fullunblocker:                     Funciones y variables para linearalgebra.
                                                             (line  462)
* mat_function:                          Funciones y variables para diag.
                                                             (line  183)
* mat_norm:                              Funciones y variables para linearalgebra.
                                                             (line  438)
* mat_norm <1>:                          Funciones y variables para linearalgebra.
                                                             (line  439)
* mat_norm <2>:                          Funciones y variables para linearalgebra.
                                                             (line  440)
* mat_trace:                             Funciones y variables para linearalgebra.
                                                             (line  469)
* mat_unblocker:                         Funciones y variables para linearalgebra.
                                                             (line  476)
* max:                                   Funciones para los números.
                                                             (line  241)
* maxapplydepth:                         Funciones y variables sobre reglas y patrones.
                                                             (line  501)
* maxapplyheight:                        Funciones y variables sobre reglas y patrones.
                                                             (line  507)
* maxima_tempdir:                        Funciones y variables para el entorno de ejecución.
                                                             (line    6)
* maxima_userdir:                        Funciones y variables para el entorno de ejecución.
                                                             (line   21)
* maximize_lp:                           Funciones y variables para simplex.
                                                             (line   43)
* maxnegex:                              Funciones y variables para simplificación.
                                                             (line  376)
* maxposex:                              Funciones y variables para simplificación.
                                                             (line  382)
* maxpsifracdenom:                       Funciones Gamma y factorial.
                                                             (line  755)
* maxpsifracnum:                         Funciones Gamma y factorial.
                                                             (line  748)
* maxpsinegint:                          Funciones Gamma y factorial.
                                                             (line  740)
* maxpsiposint:                          Funciones Gamma y factorial.
                                                             (line  734)
* maxtayorder:                           Funciones y variables para las series.
                                                             (line   67)
* max_clique:                            Funciones y variables para graphs.
                                                             (line  806)
* max_degree:                            Funciones y variables para graphs.
                                                             (line  816)
* max_flow:                              Funciones y variables para graphs.
                                                             (line  829)
* max_independent_set:                   Funciones y variables para graphs.
                                                             (line  861)
* max_matching:                          Funciones y variables para graphs.
                                                             (line  873)
* max_ord:                               Funciones y variables para zeilberger.
                                                             (line   94)
* maybe:                                 Funciones y variables para los hechos.
                                                             (line  363)
* Mayor o igual que:                     Operadores relacionales.
                                                             (line    9)
* Mayor que:                             Operadores relacionales.
                                                             (line   10)
* md5sum:                                Funciones y variables para cadenas.
                                                             (line   56)
* mean:                                  Funciones y variables de parámetros descriptivos.
                                                             (line    6)
* mean <1>:                              Funciones y variables de parámetros descriptivos.
                                                             (line    7)
* mean_bernoulli:                        Funciones y variables para distribuciones discretas.
                                                             (line  240)
* mean_beta:                             Funciones y variables para distribuciones continuas.
                                                             (line  741)
* mean_binomial:                         Funciones y variables para distribuciones discretas.
                                                             (line  122)
* mean_chi2:                             Funciones y variables para distribuciones continuas.
                                                             (line  296)
* mean_continuous_uniform:               Funciones y variables para distribuciones continuas.
                                                             (line  795)
* mean_deviation:                        Funciones y variables de parámetros descriptivos.
                                                             (line  279)
* mean_deviation <1>:                    Funciones y variables de parámetros descriptivos.
                                                             (line  280)
* mean_discrete_uniform:                 Funciones y variables para distribuciones discretas.
                                                             (line  377)
* mean_exp:                              Funciones y variables para distribuciones continuas.
                                                             (line  523)
* mean_f:                                Funciones y variables para distribuciones continuas.
                                                             (line  445)
* mean_gamma:                            Funciones y variables para distribuciones continuas.
                                                             (line  676)
* mean_general_finite_discrete:          Funciones y variables para distribuciones discretas.
                                                             (line   51)
* mean_geometric:                        Funciones y variables para distribuciones discretas.
                                                             (line  323)
* mean_gumbel:                           Funciones y variables para distribuciones continuas.
                                                             (line 1200)
* mean_hypergeometric:                   Funciones y variables para distribuciones discretas.
                                                             (line  441)
* mean_laplace:                          Funciones y variables para distribuciones continuas.
                                                             (line 1123)
* mean_logistic:                         Funciones y variables para distribuciones continuas.
                                                             (line  848)
* mean_lognormal:                        Funciones y variables para distribuciones continuas.
                                                             (line  617)
* mean_negative_binomial:                Funciones y variables para distribuciones discretas.
                                                             (line  501)
* mean_noncentral_chi2:                  Funciones y variables para distribuciones continuas.
                                                             (line  381)
* mean_noncentral_student_t:             Funciones y variables para distribuciones continuas.
                                                             (line  196)
* mean_normal:                           Funciones y variables para distribuciones continuas.
                                                             (line   41)
* mean_pareto:                           Funciones y variables para distribuciones continuas.
                                                             (line  899)
* mean_poisson:                          Funciones y variables para distribuciones discretas.
                                                             (line  180)
* mean_rayleigh:                         Funciones y variables para distribuciones continuas.
                                                             (line 1022)
* mean_student_t:                        Funciones y variables para distribuciones continuas.
                                                             (line  102)
* mean_weibull:                          Funciones y variables para distribuciones continuas.
                                                             (line  950)
* median:                                Funciones y variables de parámetros descriptivos.
                                                             (line  239)
* median <1>:                            Funciones y variables de parámetros descriptivos.
                                                             (line  240)
* median_deviation:                      Funciones y variables de parámetros descriptivos.
                                                             (line  305)
* median_deviation <1>:                  Funciones y variables de parámetros descriptivos.
                                                             (line  306)
* member:                                Funciones y variables para listas.
                                                             (line  303)
* Menor o igual que:                     Operadores relacionales.
                                                             (line    8)
* Menor que:                             Operadores relacionales.
                                                             (line    7)
* Menos infinito:                        Funciones y variables para Constantes.
                                                             (line   39)
* mesh:                                  Funciones y variables para draw.
                                                             (line 3197)
* mesh_lines_color:                      Opciones gráficas.  (line  110)
* 'method':                              Funciones y variables para contrib_ode.
                                                             (line   72)
* metricexpandall:                       Funciones y variables para units.
                                                             (line  400)
* min:                                   Funciones para los números.
                                                             (line  250)
* minf:                                  Funciones y variables para Constantes.
                                                             (line   38)
* minfactorial:                          Funciones combinatorias.
                                                             (line  168)
* minimalPoly:                           Funciones y variables para diag.
                                                             (line  125)
* minimize_lp:                           Funciones y variables para simplex.
                                                             (line   50)
* minimum_spanning_tree:                 Funciones y variables para graphs.
                                                             (line  914)
* minor:                                 Funciones y variables para las matrices y el álgebra lineal.
                                                             (line  965)
* minpack_lsquares:                      Funciones y variables para minpack.
                                                             (line    6)
* minpack_solve:                         Funciones y variables para minpack.
                                                             (line   68)
* min_degree:                            Funciones y variables para graphs.
                                                             (line  886)
* min_edge_cut:                          Funciones y variables para graphs.
                                                             (line  899)
* min_vertex_cover:                      Funciones y variables para graphs.
                                                             (line  906)
* min_vertex_cut:                        Funciones y variables para graphs.
                                                             (line  909)
* mnewton:                               Funciones y variables para mnewton.
                                                             (line   24)
* mod:                                   Funciones y variables para teoría de números.
                                                             (line  396)
* ModeMatrix:                            Funciones y variables para diag.
                                                             (line  146)
* mode_checkp:                           Funciones y variables para la definición de funciones.
                                                             (line  929)
* mode_check_errorp:                     Funciones y variables para la definición de funciones.
                                                             (line  935)
* mode_check_warnp:                      Funciones y variables para la definición de funciones.
                                                             (line  941)
* mode_declare:                          Funciones y variables para la definición de funciones.
                                                             (line  947)
* mode_identity:                         Funciones y variables para la definición de funciones.
                                                             (line  978)
* modular_linear_solver:                 Funciones y variables para zeilberger.
                                                             (line  138)
* modulus:                               Funciones y variables para polinomios.
                                                             (line  669)
* mod_big_prime:                         Funciones y variables para zeilberger.
                                                             (line  151)
* mod_test:                              Funciones y variables para zeilberger.
                                                             (line  132)
* mod_threshold:                         Funciones y variables para zeilberger.
                                                             (line  157)
* moebius:                               Funciones y variables para los conjuntos.
                                                             (line  629)
* mon2schur:                             Funciones y variables para simetrías.
                                                             (line  241)
* mono:                                  Funciones y variables para Afines.
                                                             (line   95)
* monomial_dimensions:                   Funciones y variables para Afines.
                                                             (line  100)
* multibernstein_poly:                   Funciones y variables para Bernstein.
                                                             (line   70)
* multinomial:                           Funciones y variables para simetrías.
                                                             (line  318)
* multinomial_coeff:                     Funciones y variables para los conjuntos.
                                                             (line  663)
* multinomial_coeff <1>:                 Funciones y variables para los conjuntos.
                                                             (line  664)
* Multiplicación:                        Operadores aritméticos.
                                                             (line    9)
* Multiplicación no conmutativa:         Operadores aritméticos.
                                                             (line  215)
* multiplicative:                        Funciones y variables para simplificación.
                                                             (line  388)
* multiplicities:                        Funciones y variable para las ecuaciones.
                                                             (line  575)
* multiplot_mode:                        Funciones y variables para draw.
                                                             (line  138)
* multi_elem:                            Funciones y variables para simetrías.
                                                             (line  273)
* multi_orbit:                           Funciones y variables para simetrías.
                                                             (line  293)
* multi_pui:                             Funciones y variables para simetrías.
                                                             (line  307)
* multsym:                               Funciones y variables para simetrías.
                                                             (line  324)
* multthru:                              Funciones y variables para simplificación.
                                                             (line  412)
* multthru <1>:                          Funciones y variables para simplificación.
                                                             (line  413)
* mycielski_graph:                       Funciones y variables para graphs.
                                                             (line  227)
* myoptions:                             Funciones y variables para la línea de comandos.
                                                             (line  414)
* Más infinito:                          Funciones y variables para Constantes.
                                                             (line   33)
* nary:                                  Funciones y variables para simplificación.
                                                             (line  457)
* nary <1>:                              Operadores definidos por el usuario.
                                                             (line  201)
* nary <2>:                              Operadores definidos por el usuario.
                                                             (line  202)
* natural_unit:                          Funciones y variables para ezunits.
                                                             (line  705)
* ncexpt:                                Funciones y variables para la impresión.
                                                             (line  159)
* ncharpoly:                             Funciones y variables para las matrices y el álgebra lineal.
                                                             (line  969)
* nc_degree:                             Funciones y variables para Afines.
                                                             (line   58)
* Negación de la igualdad sintáctica:    Operadores para ecuaciones.
                                                             (line    7)
* Negación lógica:                       Operadores lógicos. (line   29)
* negative_picture:                      Funciones y variables para picture.
                                                             (line   70)
* negdistrib:                            Funciones y variables para simplificación.
                                                             (line  477)
* negsumdispflag:                        Funciones y variables para la impresión.
                                                             (line  434)
* neighbors:                             Funciones y variables para graphs.
                                                             (line  924)
* new:                                   Funciones y variables para las estructuras.
                                                             (line   50)
* new <1>:                               Funciones y variables para las estructuras.
                                                             (line   51)
* newcontext:                            Funciones y variables para los hechos.
                                                             (line  386)
* newdet:                                Funciones y variables para las matrices y el álgebra lineal.
                                                             (line  986)
* newline:                               Funciones y variables para caracteres.
                                                             (line   77)
* newline <1>:                           Funciones y variables para entrada y salida.
                                                             (line   93)
* newline <2>:                           Funciones y variables para entrada y salida.
                                                             (line   94)
* newton:                                Funciones para la resolución numérica de ecuaciones.
                                                             (line  121)
* newtonepsilon:                         Funciones y variables para mnewton.
                                                             (line    6)
* newtonmaxiter:                         Funciones y variables para mnewton.
                                                             (line   16)
* new_graph:                             Funciones y variables para graphs.
                                                             (line  230)
* new_variable:                          Funciones y variables para to_poly_solve.
                                                             (line  495)
* nextlayerfactor:                       Paquete facexp.     (line   62)
* next_prime:                            Funciones y variables para teoría de números.
                                                             (line  426)
* nicedummies:                           Funciones y variables para to_poly_solve.
                                                             (line  537)
* niceindices:                           Funciones y variables para las series.
                                                             (line   74)
* niceindicespref:                       Funciones y variables para las series.
                                                             (line  109)
* ninth:                                 Funciones y variables para listas.
                                                             (line  339)
* nm:                                    Funciones y variables para ctensor.
                                                             (line 1192)
* nmc:                                   Funciones y variables para ctensor.
                                                             (line 1197)
* noeval:                                Funciones y variables para la evaluación.
                                                             (line  585)
* nofix:                                 Operadores definidos por el usuario.
                                                             (line  211)
* nofix <1>:                             Operadores definidos por el usuario.
                                                             (line  212)
* nolabels:                              Funciones y variables para la línea de comandos.
                                                             (line  421)
* nonarray:                              Funciones y variables para las propiedades.
                                                             (line  412)
* noncentral_moment:                     Funciones y variables de parámetros descriptivos.
                                                             (line  109)
* noncentral_moment <1>:                 Funciones y variables de parámetros descriptivos.
                                                             (line  110)
* nonegative_lp:                         Funciones y variables para simplex.
                                                             (line   92)
* noninteger:                            Funciones y variables para las propiedades.
                                                             (line  378)
* nonmetricity:                          Funciones y variables para ctensor.
                                                             (line  623)
* nonnegintegerp:                        Funciones y variables para los números.
                                                             (line  139)
* nonscalar:                             Funciones y variables para las propiedades.
                                                             (line  433)
* nonscalarp:                            Funciones y variables para las propiedades.
                                                             (line  439)
* nonzeroandfreeof:                      Paquete functs.     (line   43)
* not:                                   Operadores lógicos. (line   28)
* notequal:                              Funciones y variables para los predicados.
                                                             (line  152)
* noun:                                  Funciones y variables para expresiones.
                                                             (line  468)
* noundisp:                              Funciones y variables para expresiones.
                                                             (line  473)
* nounify:                               Funciones y variables para expresiones.
                                                             (line  480)
* nouns:                                 Funciones y variables para la evaluación.
                                                             (line  590)
* np:                                    Funciones y variables para ctensor.
                                                             (line 1162)
* npi:                                   Funciones y variables para ctensor.
                                                             (line 1167)
* nptetrad:                              Funciones y variables para ctensor.
                                                             (line  471)
* npv:                                   Funciones y Variables para finance.
                                                             (line  218)
* nroots:                                Funciones y variable para las ecuaciones.
                                                             (line  581)
* nterms:                                Funciones y variables para expresiones.
                                                             (line  488)
* ntermst:                               Funciones y variables para ctensor.
                                                             (line  781)
* nthroot:                               Funciones y variable para las ecuaciones.
                                                             (line  592)
* nticks:                                Opciones gráficas.  (line  118)
* nticks <1>:                            Funciones y variables para draw.
                                                             (line 1569)
* ntrig:                                 Funciones y variables para trigonometría.
                                                             (line  202)
* nullity:                               Funciones y variables para linearalgebra.
                                                             (line  517)
* nullspace:                             Funciones y variables para linearalgebra.
                                                             (line  511)
* num:                                   Funciones y variables para polinomios.
                                                             (line  708)
* numbered_boundaries:                   Funciones y variables para worldmap.
                                                             (line   23)
* numberp:                               Funciones y variables para los números.
                                                             (line  143)
* numer:                                 Funciones y variables para los números.
                                                             (line  173)
* numerval:                              Funciones y variables para los números.
                                                             (line  219)
* numer_pbranch:                         Funciones y variables para los números.
                                                             (line  192)
* numfactor:                             Funciones Gamma y factorial.
                                                             (line  768)
* num_distinct_partitions:               Funciones y variables para los conjuntos.
                                                             (line  696)
* num_distinct_partitions <1>:           Funciones y variables para los conjuntos.
                                                             (line  697)
* num_partitions:                        Funciones y variables para los conjuntos.
                                                             (line  718)
* num_partitions <1>:                    Funciones y variables para los conjuntos.
                                                             (line  719)
* nusum:                                 Funciones y variables para las series.
                                                             (line  138)
* nzeta:                                 Funciones y variables para las funciones especiales.
                                                             (line  167)
* nzetai:                                Funciones y variables para las funciones especiales.
                                                             (line  174)
* nzetar:                                Funciones y variables para las funciones especiales.
                                                             (line  171)
* Número de Euler:                       Funciones y variables para Constantes.
                                                             (line    7)
* obase:                                 Funciones y variables para la impresión.
                                                             (line  444)
* odd:                                   Funciones y variables para las propiedades.
                                                             (line  262)
* oddfun:                                Funciones y variables para simplificación.
                                                             (line  159)
* oddp:                                  Funciones y variables para los números.
                                                             (line  228)
* odd_girth:                             Funciones y variables para graphs.
                                                             (line  934)
* ode2:                                  Funciones y variables para ecuaciones diferenciales.
                                                             (line   90)
* odelin:                                Funciones y variables para contrib_ode.
                                                             (line   12)
* ode_check:                             Funciones y variables para contrib_ode.
                                                             (line   42)
* op:                                    Funciones y variables para expresiones.
                                                             (line  496)
* opacity:                               Visualización usando VTK.
                                                             (line  244)
* opena:                                 Funciones y variables para entrada y salida.
                                                             (line  102)
* opena_binary:                          Funciones y variables para entrada y salida en formato binario.
                                                             (line   26)
* openr:                                 Funciones y variables para entrada y salida.
                                                             (line  106)
* openr_binary:                          Funciones y variables para entrada y salida en formato binario.
                                                             (line   18)
* openw:                                 Funciones y variables para entrada y salida.
                                                             (line  110)
* openw_binary:                          Funciones y variables para entrada y salida en formato binario.
                                                             (line   22)
* Operador comilla:                      Funciones y variables para la evaluación.
                                                             (line    7)
* Operador comilla-comilla:              Funciones y variables para la evaluación.
                                                             (line  106)
* Operador de asignación:                Operadores de asignación.
                                                             (line    7)
* Operador de asignación (evalúa el miembro izquierdo): Operadores de asignación.
                                                             (line   90)
* Operador de definición de funciones:   Operadores de asignación.
                                                             (line  203)
* Operador de definición de funciones macro: Operadores de asignación.
                                                             (line  115)
* Operador de ecuación:                  Operadores para ecuaciones.
                                                             (line   30)
* Operador de subíndice:                 Funciones y variables para las matrices y el álgebra lineal.
                                                             (line 1208)
* Operador para subíndices:              Funciones y variables para listas.
                                                             (line    8)
* operatorp:                             Funciones y variables para expresiones.
                                                             (line  545)
* operatorp <1>:                         Funciones y variables para expresiones.
                                                             (line  546)
* opproperties:                          Funciones y variables para simplificación.
                                                             (line  486)
* opsubst:                               Funciones y variables para expresiones.
                                                             (line  555)
* opsubst <1>:                           Funciones y variables para opsubst.
                                                             (line    6)
* opsubst <2>:                           Funciones y variables para opsubst.
                                                             (line    7)
* opsubst <3>:                           Funciones y variables para opsubst.
                                                             (line    8)
* optimize:                              Funciones y variables para expresiones.
                                                             (line  562)
* optimprefix:                           Funciones y variables para expresiones.
                                                             (line  570)
* optionset:                             Funciones y variables para la línea de comandos.
                                                             (line  443)
* or:                                    Operadores lógicos. (line   42)
* orbit:                                 Funciones y variables para simetrías.
                                                             (line  345)
* orbits:                                Análisis gráfico de sistemas dinámicos discretos.
                                                             (line   97)
* ordergreat:                            Funciones y variables para expresiones.
                                                             (line  576)
* ordergreatp:                           Funciones y variables para expresiones.
                                                             (line  596)
* orderless:                             Funciones y variables para expresiones.
                                                             (line  577)
* orderlessp:                            Funciones y variables para expresiones.
                                                             (line  597)
* orientation:                           Visualización usando VTK.
                                                             (line  251)
* origin:                                Visualización usando VTK.
                                                             (line  260)
* orthogonal_complement:                 Funciones y variables para linearalgebra.
                                                             (line  522)
* orthopoly_recur:                       Funciones y variables para polinomios ortogonales.
                                                             (line   69)
* orthopoly_returns_intervals:           Funciones y variables para polinomios ortogonales.
                                                             (line   97)
* orthopoly_weight:                      Funciones y variables para polinomios ortogonales.
                                                             (line  106)
* outative:                              Funciones y variables para simplificación.
                                                             (line  494)
* outchar:                               Funciones y variables para la línea de comandos.
                                                             (line  462)
* outermap:                              Funciones y variables para la programación.
                                                             (line  570)
* outofpois:                             Funciones y variables para series de Poisson.
                                                             (line    9)
* out_neighbors:                         Funciones y variables para graphs.
                                                             (line  946)
* packagefile:                           Funciones y variables para lectura y escritura.
                                                             (line  308)
* packagefile <1>:                       Funciones y variables para la miscelánea de opciones.
                                                             (line   56)
* pade:                                  Funciones y variables para las series.
                                                             (line  186)
* palette:                               Opciones gráficas.  (line  127)
* palette <1>:                           Opciones gráficas.  (line  129)
* palette <2>:                           Funciones y variables para draw.
                                                             (line 1590)
* parabolic_cylinder_d:                  Funciones de cilindro parabólico.
                                                             (line   12)
* parametric:                            Funciones y variables para draw.
                                                             (line 3243)
* parametric <1>:                        Funciones y variables para draw.
                                                             (line 3244)
* parametric_surface:                    Funciones y variables para draw.
                                                             (line 3283)
* parg:                                  Funciones y variables para to_poly_solve.
                                                             (line  554)
* parGosper:                             Funciones y variables para zeilberger.
                                                             (line   63)
* parse_string:                          Funciones y variables para cadenas.
                                                             (line   71)
* part:                                  Funciones y variables para expresiones.
                                                             (line  681)
* part2cont:                             Funciones y variables para simetrías.
                                                             (line  359)
* partfrac:                              Funciones y variables para teoría de números.
                                                             (line  432)
* partition:                             Funciones y variables para expresiones.
                                                             (line  719)
* partition_set:                         Funciones y variables para los conjuntos.
                                                             (line  742)
* partpol:                               Funciones y variables para simetrías.
                                                             (line  373)
* partswitch:                            Funciones y variables para expresiones.
                                                             (line  732)
* pathname_directory:                    Funciones y variables para lectura y escritura.
                                                             (line  317)
* pathname_name:                         Funciones y variables para lectura y escritura.
                                                             (line  318)
* pathname_type:                         Funciones y variables para lectura y escritura.
                                                             (line  319)
* path_digraph:                          Funciones y variables para graphs.
                                                             (line  233)
* path_graph:                            Funciones y variables para graphs.
                                                             (line  236)
* pdf_bernoulli:                         Funciones y variables para distribuciones discretas.
                                                             (line  217)
* pdf_beta:                              Funciones y variables para distribuciones continuas.
                                                             (line  718)
* pdf_binomial:                          Funciones y variables para distribuciones discretas.
                                                             (line   96)
* pdf_cauchy:                            Funciones y variables para distribuciones continuas.
                                                             (line 1158)
* pdf_chi2:                              Funciones y variables para distribuciones continuas.
                                                             (line  257)
* pdf_continuous_uniform:                Funciones y variables para distribuciones continuas.
                                                             (line  777)
* pdf_discrete_uniform:                  Funciones y variables para distribuciones discretas.
                                                             (line  358)
* pdf_exp:                               Funciones y variables para distribuciones continuas.
                                                             (line  486)
* pdf_f:                                 Funciones y variables para distribuciones continuas.
                                                             (line  415)
* pdf_gamma:                             Funciones y variables para distribuciones continuas.
                                                             (line  653)
* pdf_general_finite_discrete:           Funciones y variables para distribuciones discretas.
                                                             (line    6)
* pdf_geometric:                         Funciones y variables para distribuciones discretas.
                                                             (line  305)
* pdf_gumbel:                            Funciones y variables para distribuciones continuas.
                                                             (line 1184)
* pdf_hypergeometric:                    Funciones y variables para distribuciones discretas.
                                                             (line  414)
* pdf_laplace:                           Funciones y variables para distribuciones continuas.
                                                             (line 1107)
* pdf_logistic:                          Funciones y variables para distribuciones continuas.
                                                             (line  832)
* pdf_lognormal:                         Funciones y variables para distribuciones continuas.
                                                             (line  590)
* pdf_negative_binomial:                 Funciones y variables para distribuciones discretas.
                                                             (line  477)
* pdf_noncentral_chi2:                   Funciones y variables para distribuciones continuas.
                                                             (line  360)
* pdf_noncentral_student_t:              Funciones y variables para distribuciones continuas.
                                                             (line  153)
* pdf_normal:                            Funciones y variables para distribuciones continuas.
                                                             (line    6)
* pdf_pareto:                            Funciones y variables para distribuciones continuas.
                                                             (line  883)
* pdf_poisson:                           Funciones y variables para distribuciones discretas.
                                                             (line  159)
* pdf_rank_sum:                          Funciones y variables para distribuciones especiales.
                                                             (line   20)
* pdf_rayleigh:                          Funciones y variables para distribuciones continuas.
                                                             (line  985)
* pdf_signed_rank:                       Funciones y variables para distribuciones especiales.
                                                             (line    6)
* pdf_student_t:                         Funciones y variables para distribuciones continuas.
                                                             (line   77)
* pdf_weibull:                           Funciones y variables para distribuciones continuas.
                                                             (line  934)
* pearson_skewness:                      Funciones y variables de parámetros descriptivos.
                                                             (line  430)
* pearson_skewness <1>:                  Funciones y variables de parámetros descriptivos.
                                                             (line  431)
* permanent:                             Funciones y variables para las matrices y el álgebra lineal.
                                                             (line  991)
* permut:                                Funciones y variables para simetrías.
                                                             (line  385)
* permutation:                           Paquete functs.     (line  185)
* permutations:                          Funciones y variables para los conjuntos.
                                                             (line  767)
* petersen_graph:                        Funciones y variables para graphs.
                                                             (line  239)
* petersen_graph <1>:                    Funciones y variables para graphs.
                                                             (line  240)
* petrov:                                Funciones y variables para ctensor.
                                                             (line  501)
* pfeformat:                             Funciones y variables para la impresión.
                                                             (line  479)
* phi:                                   Funciones y variables para Constantes.
                                                             (line   42)
* phiresolution:                         Visualización usando VTK.
                                                             (line  267)
* pi:                                    Funciones y variables para Constantes.
                                                             (line   99)
* pickapart:                             Funciones y variables para expresiones.
                                                             (line  739)
* picturep:                              Funciones y variables para picture.
                                                             (line   78)
* picture_equalp:                        Funciones y variables para picture.
                                                             (line   74)
* piece:                                 Funciones y variables para expresiones.
                                                             (line  827)
* piechart:                              Funciones y variables para gráficos estadísticos.
                                                             (line  335)
* piechart <1>:                          Funciones y variables para gráficos estadísticos.
                                                             (line  336)
* piechart <2>:                          Funciones y variables para gráficos estadísticos.
                                                             (line  337)
* piechart <3>:                          Funciones y variables para gráficos estadísticos.
                                                             (line  338)
* piechart <4>:                          Funciones y variables para gráficos estadísticos.
                                                             (line  339)
* piechart <5>:                          Funciones y variables para gráficos estadísticos.
                                                             (line  340)
* piechart_description:                  Funciones y variables para gráficos estadísticos.
                                                             (line  341)
* planar_embedding:                      Funciones y variables para graphs.
                                                             (line  959)
* playback:                              Funciones y variables para la línea de comandos.
                                                             (line  488)
* playback <1>:                          Funciones y variables para la línea de comandos.
                                                             (line  489)
* playback <2>:                          Funciones y variables para la línea de comandos.
                                                             (line  490)
* playback <3>:                          Funciones y variables para la línea de comandos.
                                                             (line  491)
* playback <4>:                          Funciones y variables para la línea de comandos.
                                                             (line  492)
* playback <5>:                          Funciones y variables para la línea de comandos.
                                                             (line  493)
* playback <6>:                          Funciones y variables para la línea de comandos.
                                                             (line  494)
* playback <7>:                          Funciones y variables para la línea de comandos.
                                                             (line  495)
* plog:                                  Funciones radicales exponenciales y logarítmicas.
                                                             (line  228)
* plot2d:                                Funciones y variables para gráficos.
                                                             (line   61)
* plot2d <1>:                            Funciones y variables para gráficos.
                                                             (line   62)
* plot2d <2>:                            Funciones y variables para gráficos.
                                                             (line   63)
* plot3d:                                Funciones y variables para gráficos.
                                                             (line  206)
* plot3d <1>:                            Funciones y variables para gráficos.
                                                             (line  207)
* plotdf:                                Funciones para la resolución numérica de ecuaciones diferenciales.
                                                             (line    6)
* plotdf <1>:                            Funciones para la resolución numérica de ecuaciones diferenciales.
                                                             (line    7)
* plotdf <2>:                            Funciones para la resolución numérica de ecuaciones diferenciales.
                                                             (line    8)
* plotdf <3>:                            Funciones para la resolución numérica de ecuaciones diferenciales.
                                                             (line    9)
* ploteq:                                Funciones para la resolución numérica de ecuaciones diferenciales.
                                                             (line  201)
* plot_format:                           Opciones gráficas.  (line  153)
* plot_options:                          Funciones y variables para gráficos.
                                                             (line  309)
* plot_realpart:                         Opciones gráficas.  (line  162)
* plsquares:                             Funciones y variables para lsquares.
                                                             (line  388)
* plsquares <1>:                         Funciones y variables para lsquares.
                                                             (line  389)
* plsquares <2>:                         Funciones y variables para lsquares.
                                                             (line  390)
* pochhammer:                            Funciones y variables para polinomios ortogonales.
                                                             (line  124)
* pochhammer_max_index:                  Funciones y variables para polinomios ortogonales.
                                                             (line  155)
* points:                                Visualización usando VTK.
                                                             (line  276)
* points <1>:                            Funciones y variables para draw.
                                                             (line 3313)
* points <2>:                            Funciones y variables para draw.
                                                             (line 3314)
* points <3>:                            Funciones y variables para draw.
                                                             (line 3315)
* points <4>:                            Funciones y variables para draw.
                                                             (line 3316)
* points <5>:                            Funciones y variables para draw.
                                                             (line 3317)
* points <6>:                            Funciones y variables para draw.
                                                             (line 3319)
* points <7>:                            Funciones y variables para draw.
                                                             (line 3320)
* points <8>:                            Funciones y variables para draw.
                                                             (line 3321)
* points <9>:                            Funciones y variables para draw.
                                                             (line 3322)
* points <10>:                           Funciones y variables para draw.
                                                             (line 3323)
* points <11>:                           Funciones y variables para draw.
                                                             (line 3324)
* pointsize:                             Visualización usando VTK.
                                                             (line  284)
* points_joined:                         Funciones y variables para draw.
                                                             (line 1734)
* point_size:                            Funciones y variables para draw.
                                                             (line 1670)
* point_type:                            Opciones gráficas.  (line  173)
* point_type <1>:                        Funciones y variables para draw.
                                                             (line 1692)
* poisdiff:                              Funciones y variables para series de Poisson.
                                                             (line   16)
* poisexpt:                              Funciones y variables para series de Poisson.
                                                             (line   20)
* poisint:                               Funciones y variables para series de Poisson.
                                                             (line   24)
* poislim:                               Funciones y variables para series de Poisson.
                                                             (line   27)
* poismap:                               Funciones y variables para series de Poisson.
                                                             (line   35)
* poisplus:                              Funciones y variables para series de Poisson.
                                                             (line   42)
* poissimp:                              Funciones y variables para series de Poisson.
                                                             (line   45)
* poisson:                               Funciones y variables para series de Poisson.
                                                             (line   49)
* poissubst:                             Funciones y variables para series de Poisson.
                                                             (line   53)
* poistimes:                             Funciones y variables para series de Poisson.
                                                             (line   63)
* polar:                                 Funciones y variables para draw.
                                                             (line 3478)
* polarform:                             Funciones para los números complejos.
                                                             (line  120)
* polartorect:                           Funciones y variables para la transformada rápida de Fourier.
                                                             (line    6)
* polar_to_xy:                           Funciones y variables para gráficos.
                                                             (line   54)
* polydecomp:                            Funciones y variables para polinomios.
                                                             (line  714)
* polyfactor:                            Funciones y variable para las ecuaciones.
                                                             (line  600)
* polygon:                               Funciones y variables para draw.
                                                             (line 3502)
* polygon <1>:                           Funciones y variables para draw.
                                                             (line 3503)
* polymod:                               Funciones y variables para polinomios.
                                                             (line  766)
* polymod <1>:                           Funciones y variables para polinomios.
                                                             (line  767)
* polynome2ele:                          Funciones y variables para simetrías.
                                                             (line  388)
* polynomialp:                           Funciones y variables para linearalgebra.
                                                             (line  528)
* polynomialp <1>:                       Funciones y variables para linearalgebra.
                                                             (line  529)
* polynomialp <2>:                       Funciones y variables para linearalgebra.
                                                             (line  530)
* polytocompanion:                       Funciones y variables para linearalgebra.
                                                             (line  570)
* poly_add:                              Funciones y variables para grobner.
                                                             (line   84)
* poly_buchberger:                       Funciones y variables para grobner.
                                                             (line  189)
* poly_buchberger_criterion:             Funciones y variables para grobner.
                                                             (line  183)
* poly_coefficient_ring:                 Funciones y variables para grobner.
                                                             (line   16)
* poly_colon_ideal:                      Funciones y variables para grobner.
                                                             (line  239)
* poly_content:                          Funciones y variables para grobner.
                                                             (line  155)
* poly_depends_p:                        Funciones y variables para grobner.
                                                             (line  230)
* poly_elimination_ideal:                Funciones y variables para grobner.
                                                             (line  234)
* poly_elimination_order:                Funciones y variables para grobner.
                                                             (line   38)
* poly_exact_divide:                     Funciones y variables para grobner.
                                                             (line  174)
* poly_expand:                           Funciones y variables para grobner.
                                                             (line  123)
* poly_expt:                             Funciones y variables para grobner.
                                                             (line  147)
* poly_gcd:                              Funciones y variables para grobner.
                                                             (line  254)
* poly_grobner:                          Funciones y variables para grobner.
                                                             (line  221)
* poly_grobner_algorithm:                Funciones y variables para grobner.
                                                             (line   59)
* poly_grobner_debug:                    Funciones y variables para grobner.
                                                             (line   54)
* poly_grobner_equal:                    Funciones y variables para grobner.
                                                             (line  271)
* poly_grobner_member:                   Funciones y variables para grobner.
                                                             (line  290)
* poly_grobner_subsetp:                  Funciones y variables para grobner.
                                                             (line  284)
* poly_ideal_intersection:               Funciones y variables para grobner.
                                                             (line  246)
* poly_ideal_polysaturation:             Funciones y variables para grobner.
                                                             (line  324)
* poly_ideal_polysaturation1:            Funciones y variables para grobner.
                                                             (line  313)
* poly_ideal_saturation:                 Funciones y variables para grobner.
                                                             (line  304)
* poly_ideal_saturation1:                Funciones y variables para grobner.
                                                             (line  295)
* poly_lcm:                              Funciones y variables para grobner.
                                                             (line  251)
* poly_minimization:                     Funciones y variables para grobner.
                                                             (line  210)
* poly_monomial_order:                   Funciones y variables para grobner.
                                                             (line    9)
* poly_multiply:                         Funciones y variables para grobner.
                                                             (line   98)
* poly_normalize:                        Funciones y variables para grobner.
                                                             (line  115)
* poly_normalize_list:                   Funciones y variables para grobner.
                                                             (line  216)
* poly_normal_form:                      Funciones y variables para grobner.
                                                             (line  179)
* poly_polysaturation_extension:         Funciones y variables para grobner.
                                                             (line  336)
* poly_primary_elimination_order:        Funciones y variables para grobner.
                                                             (line   24)
* poly_primitive_part:                   Funciones y variables para grobner.
                                                             (line  108)
* poly_pseudo_divide:                    Funciones y variables para grobner.
                                                             (line  161)
* poly_reduced_grobner:                  Funciones y variables para grobner.
                                                             (line  225)
* poly_reduction:                        Funciones y variables para grobner.
                                                             (line  205)
* poly_return_term_list:                 Funciones y variables para grobner.
                                                             (line   47)
* poly_saturation_extension:             Funciones y variables para grobner.
                                                             (line  332)
* poly_secondary_elimination_order:      Funciones y variables para grobner.
                                                             (line   31)
* poly_subtract:                         Funciones y variables para grobner.
                                                             (line   91)
* poly_s_polynomial:                     Funciones y variables para grobner.
                                                             (line  104)
* poly_top_reduction_only:               Funciones y variables para grobner.
                                                             (line   70)
* pop:                                   Funciones y variables para listas.
                                                             (line  344)
* posfun:                                Funciones y variables para las propiedades.
                                                             (line  443)
* position:                              Visualización usando VTK.
                                                             (line  290)
* postfix:                               Operadores definidos por el usuario.
                                                             (line  221)
* postfix <1>:                           Operadores definidos por el usuario.
                                                             (line  222)
* powerdisp:                             Funciones y variables para la impresión.
                                                             (line  500)
* powers:                                Funciones y variables para polinomios.
                                                             (line  777)
* powerseries:                           Funciones y variables para las series.
                                                             (line  247)
* powerset:                              Funciones y variables para los conjuntos.
                                                             (line  788)
* powerset <1>:                          Funciones y variables para los conjuntos.
                                                             (line  789)
* power_mod:                             Funciones y variables para teoría de números.
                                                             (line  457)
* pred:                                  Funciones y variables para la evaluación.
                                                             (line  597)
* prederror:                             Funciones y variables para la programación.
                                                             (line  499)
* prefix:                                Operadores definidos por el usuario.
                                                             (line  228)
* prefix <1>:                            Operadores definidos por el usuario.
                                                             (line  229)
* prev_prime:                            Funciones y variables para teoría de números.
                                                             (line  495)
* primep:                                Funciones y variables para teoría de números.
                                                             (line  471)
* primep_number_of_tests:                Funciones y variables para teoría de números.
                                                             (line  490)
* principal_components:                  Funciones y variables de parámetros descriptivos.
                                                             (line  768)
* principal_components <1>:              Funciones y variables de parámetros descriptivos.
                                                             (line  769)
* print:                                 Funciones y variables para la impresión.
                                                             (line  524)
* printf:                                Funciones y variables para entrada y salida.
                                                             (line  115)
* printf <1>:                            Funciones y variables para entrada y salida.
                                                             (line  116)
* printfile:                             Funciones y variables para lectura y escritura.
                                                             (line  332)
* printpois:                             Funciones y variables para series de Poisson.
                                                             (line   66)
* printprops:                            Funciones y variables para las propiedades.
                                                             (line  449)
* printprops <1>:                        Funciones y variables para las propiedades.
                                                             (line  450)
* printprops <2>:                        Funciones y variables para las propiedades.
                                                             (line  451)
* print_graph:                           Funciones y variables para graphs.
                                                             (line  975)
* prodrac:                               Funciones y variables para simetrías.
                                                             (line  401)
* product:                               Funciones y variables para sumas y productos.
                                                             (line   63)
* Producto exterior:                     Funciones y variables para itensor.
                                                             (line 1385)
* product_use_gamma:                     Funciones y variables para solve_rec.
                                                             (line  175)
* program:                               Funciones y variables para graphs.
                                                             (line 1593)
* programmode:                           Funciones y variable para las ecuaciones.
                                                             (line  610)
* prompt:                                Funciones y variables para la línea de comandos.
                                                             (line  540)
* properties:                            Funciones y variables para las propiedades.
                                                             (line  460)
* proportional_axes:                     Funciones y variables para draw.
                                                             (line 1766)
* props:                                 Funciones y variables para las propiedades.
                                                             (line  464)
* propvars:                              Funciones y variables para las propiedades.
                                                             (line  471)
* psexpand:                              Funciones y variables para las series.
                                                             (line  292)
* psfile:                                Opciones gráficas.  (line  186)
* psi:                                   Funciones Gamma y factorial.
                                                             (line  714)
* psi <1>:                               Funciones y variables para ctensor.
                                                             (line  494)
* psubst:                                Funciones y variables para expresiones.
                                                             (line  830)
* psubst <1>:                            Funciones y variables para expresiones.
                                                             (line  831)
* ptriangularize:                        Funciones y variables para linearalgebra.
                                                             (line  578)
* pui:                                   Funciones y variables para simetrías.
                                                             (line  407)
* pui2comp:                              Funciones y variables para simetrías.
                                                             (line  438)
* pui2ele:                               Funciones y variables para simetrías.
                                                             (line  468)
* pui2polynome:                          Funciones y variables para simetrías.
                                                             (line  479)
* puireduc:                              Funciones y variables para simetrías.
                                                             (line  541)
* pui_direct:                            Funciones y variables para simetrías.
                                                             (line  497)
* push:                                  Funciones y variables para listas.
                                                             (line  356)
* put:                                   Funciones y variables para las propiedades.
                                                             (line  478)
* pv:                                    Funciones y Variables para finance.
                                                             (line   29)
* qput:                                  Funciones y variables para las propiedades.
                                                             (line  503)
* qrange:                                Funciones y variables de parámetros descriptivos.
                                                             (line  261)
* qrange <1>:                            Funciones y variables de parámetros descriptivos.
                                                             (line  262)
* qty:                                   Funciones y variables para ezunits.
                                                             (line  361)
* quadrilateral:                         Funciones y variables para draw.
                                                             (line 3526)
* quad_control:                          Funciones y variables para QUADPACK.
                                                             (line  635)
* quad_qag:                              Funciones y variables para QUADPACK.
                                                             (line    6)
* quad_qag <1>:                          Funciones y variables para QUADPACK.
                                                             (line    8)
* quad_qagi:                             Funciones y variables para QUADPACK.
                                                             (line  154)
* quad_qagi <1>:                         Funciones y variables para QUADPACK.
                                                             (line  156)
* quad_qagp:                             Funciones y variables para QUADPACK.
                                                             (line  559)
* quad_qagp <1>:                         Funciones y variables para QUADPACK.
                                                             (line  561)
* quad_qags:                             Funciones y variables para QUADPACK.
                                                             (line   85)
* quad_qags <1>:                         Funciones y variables para QUADPACK.
                                                             (line   87)
* quad_qawc:                             Funciones y variables para QUADPACK.
                                                             (line  233)
* quad_qawc <1>:                         Funciones y variables para QUADPACK.
                                                             (line  235)
* quad_qawf:                             Funciones y variables para QUADPACK.
                                                             (line  317)
* quad_qawf <1>:                         Funciones y variables para QUADPACK.
                                                             (line  319)
* quad_qawo:                             Funciones y variables para QUADPACK.
                                                             (line  392)
* quad_qawo <1>:                         Funciones y variables para QUADPACK.
                                                             (line  394)
* quad_qaws:                             Funciones y variables para QUADPACK.
                                                             (line  474)
* quad_qaws <1>:                         Funciones y variables para QUADPACK.
                                                             (line  476)
* quantile:                              Funciones y variables de parámetros descriptivos.
                                                             (line  219)
* quantile <1>:                          Funciones y variables de parámetros descriptivos.
                                                             (line  220)
* quantile_bernoulli:                    Funciones y variables para distribuciones discretas.
                                                             (line  234)
* quantile_beta:                         Funciones y variables para distribuciones continuas.
                                                             (line  735)
* quantile_binomial:                     Funciones y variables para distribuciones discretas.
                                                             (line  115)
* quantile_cauchy:                       Funciones y variables para distribuciones continuas.
                                                             (line 1168)
* quantile_chi2:                         Funciones y variables para distribuciones continuas.
                                                             (line  284)
* quantile_continuous_uniform:           Funciones y variables para distribuciones continuas.
                                                             (line  788)
* quantile_discrete_uniform:             Funciones y variables para distribuciones discretas.
                                                             (line  370)
* quantile_exp:                          Funciones y variables para distribuciones continuas.
                                                             (line  508)
* quantile_f:                            Funciones y variables para distribuciones continuas.
                                                             (line  432)
* quantile_gamma:                        Funciones y variables para distribuciones continuas.
                                                             (line  670)
* quantile_general_finite_discrete:      Funciones y variables para distribuciones discretas.
                                                             (line   45)
* quantile_geometric:                    Funciones y variables para distribuciones discretas.
                                                             (line  317)
* quantile_gumbel:                       Funciones y variables para distribuciones continuas.
                                                             (line 1194)
* quantile_hypergeometric:               Funciones y variables para distribuciones discretas.
                                                             (line  433)
* quantile_laplace:                      Funciones y variables para distribuciones continuas.
                                                             (line 1117)
* quantile_logistic:                     Funciones y variables para distribuciones continuas.
                                                             (line  842)
* quantile_lognormal:                    Funciones y variables para distribuciones continuas.
                                                             (line  611)
* quantile_negative_binomial:            Funciones y variables para distribuciones discretas.
                                                             (line  494)
* quantile_noncentral_chi2:              Funciones y variables para distribuciones continuas.
                                                             (line  371)
* quantile_noncentral_student_t:         Funciones y variables para distribuciones continuas.
                                                             (line  188)
* quantile_normal:                       Funciones y variables para distribuciones continuas.
                                                             (line   27)
* quantile_pareto:                       Funciones y variables para distribuciones continuas.
                                                             (line  893)
* quantile_poisson:                      Funciones y variables para distribuciones discretas.
                                                             (line  174)
* quantile_rayleigh:                     Funciones y variables para distribuciones continuas.
                                                             (line 1009)
* quantile_student_t:                    Funciones y variables para distribuciones continuas.
                                                             (line   96)
* quantile_weibull:                      Funciones y variables para distribuciones continuas.
                                                             (line  944)
* quartile_skewness:                     Funciones y variables de parámetros descriptivos.
                                                             (line  453)
* quartile_skewness <1>:                 Funciones y variables de parámetros descriptivos.
                                                             (line  454)
* quit:                                  Funciones y variables para la línea de comandos.
                                                             (line  547)
* qunit:                                 Funciones y variables para teoría de números.
                                                             (line  501)
* quotient:                              Funciones y variables para polinomios.
                                                             (line  782)
* quotient <1>:                          Funciones y variables para polinomios.
                                                             (line  783)
* radcan:                                Funciones y variables para simplificación.
                                                             (line  526)
* radexpand:                             Funciones y variables para simplificación.
                                                             (line  553)
* radius:                                Visualización usando VTK.
                                                             (line  296)
* radius <1>:                            Funciones y variables para graphs.
                                                             (line 1002)
* radsubstflag:                          Funciones y variables para polinomios.
                                                             (line 1145)
* random:                                Números aleatorios. (line   34)
* random_bernoulli:                      Funciones y variables para distribuciones discretas.
                                                             (line  294)
* random_bernoulli <1>:                  Funciones y variables para distribuciones discretas.
                                                             (line  295)
* random_beta:                           Funciones y variables para distribuciones continuas.
                                                             (line  765)
* random_beta <1>:                       Funciones y variables para distribuciones continuas.
                                                             (line  766)
* random_binomial:                       Funciones y variables para distribuciones discretas.
                                                             (line  147)
* random_binomial <1>:                   Funciones y variables para distribuciones discretas.
                                                             (line  148)
* random_bipartite_graph:                Funciones y variables para graphs.
                                                             (line  244)
* random_cauchy:                         Funciones y variables para distribuciones continuas.
                                                             (line 1174)
* random_cauchy <1>:                     Funciones y variables para distribuciones continuas.
                                                             (line 1175)
* random_chi2:                           Funciones y variables para distribuciones continuas.
                                                             (line  349)
* random_chi2 <1>:                       Funciones y variables para distribuciones continuas.
                                                             (line  350)
* random_continuous_uniform:             Funciones y variables para distribuciones continuas.
                                                             (line  820)
* random_continuous_uniform <1>:         Funciones y variables para distribuciones continuas.
                                                             (line  821)
* random_digraph:                        Funciones y variables para graphs.
                                                             (line  248)
* random_discrete_uniform:               Funciones y variables para distribuciones discretas.
                                                             (line  402)
* random_discrete_uniform <1>:           Funciones y variables para distribuciones discretas.
                                                             (line  403)
* random_exp:                            Funciones y variables para distribuciones continuas.
                                                             (line  580)
* random_exp <1>:                        Funciones y variables para distribuciones continuas.
                                                             (line  581)
* random_f:                              Funciones y variables para distribuciones continuas.
                                                             (line  469)
* random_f <1>:                          Funciones y variables para distribuciones continuas.
                                                             (line  470)
* random_gamma:                          Funciones y variables para distribuciones continuas.
                                                             (line  700)
* random_gamma <1>:                      Funciones y variables para distribuciones continuas.
                                                             (line  701)
* random_general_finite_discrete:        Funciones y variables para distribuciones discretas.
                                                             (line   81)
* random_general_finite_discrete <1>:    Funciones y variables para distribuciones discretas.
                                                             (line   82)
* random_geometric:                      Funciones y variables para distribuciones discretas.
                                                             (line  348)
* random_geometric <1>:                  Funciones y variables para distribuciones discretas.
                                                             (line  349)
* random_graph:                          Funciones y variables para graphs.
                                                             (line  257)
* random_graph1:                         Funciones y variables para graphs.
                                                             (line  261)
* random_gumbel:                         Funciones y variables para distribuciones continuas.
                                                             (line 1238)
* random_gumbel <1>:                     Funciones y variables para distribuciones continuas.
                                                             (line 1239)
* random_hypergeometric:                 Funciones y variables para distribuciones discretas.
                                                             (line  464)
* random_hypergeometric <1>:             Funciones y variables para distribuciones discretas.
                                                             (line  465)
* random_laplace:                        Funciones y variables para distribuciones continuas.
                                                             (line 1148)
* random_laplace <1>:                    Funciones y variables para distribuciones continuas.
                                                             (line 1149)
* random_logistic:                       Funciones y variables para distribuciones continuas.
                                                             (line  873)
* random_logistic <1>:                   Funciones y variables para distribuciones continuas.
                                                             (line  874)
* random_lognormal:                      Funciones y variables para distribuciones continuas.
                                                             (line  642)
* random_lognormal <1>:                  Funciones y variables para distribuciones continuas.
                                                             (line  643)
* random_negative_binomial:              Funciones y variables para distribuciones discretas.
                                                             (line  526)
* random_negative_binomial <1>:          Funciones y variables para distribuciones discretas.
                                                             (line  527)
* random_network:                        Funciones y variables para graphs.
                                                             (line  264)
* random_noncentral_chi2:                Funciones y variables para distribuciones continuas.
                                                             (line  406)
* random_noncentral_chi2 <1>:            Funciones y variables para distribuciones continuas.
                                                             (line  407)
* random_noncentral_student_t:           Funciones y variables para distribuciones continuas.
                                                             (line  236)
* random_noncentral_student_t <1>:       Funciones y variables para distribuciones continuas.
                                                             (line  237)
* random_normal:                         Funciones y variables para distribuciones continuas.
                                                             (line   65)
* random_normal <1>:                     Funciones y variables para distribuciones continuas.
                                                             (line   66)
* random_pareto:                         Funciones y variables para distribuciones continuas.
                                                             (line  924)
* random_pareto <1>:                     Funciones y variables para distribuciones continuas.
                                                             (line  925)
* random_permutation:                    Funciones y variables para los conjuntos.
                                                             (line  818)
* random_poisson:                        Funciones y variables para distribuciones discretas.
                                                             (line  204)
* random_poisson <1>:                    Funciones y variables para distribuciones discretas.
                                                             (line  205)
* random_rayleigh:                       Funciones y variables para distribuciones continuas.
                                                             (line 1097)
* random_rayleigh <1>:                   Funciones y variables para distribuciones continuas.
                                                             (line 1098)
* random_regular_graph:                  Funciones y variables para graphs.
                                                             (line  252)
* random_regular_graph <1>:              Funciones y variables para graphs.
                                                             (line  253)
* random_student_t:                      Funciones y variables para distribuciones continuas.
                                                             (line  132)
* random_student_t <1>:                  Funciones y variables para distribuciones continuas.
                                                             (line  133)
* random_tournament:                     Funciones y variables para graphs.
                                                             (line  278)
* random_tree:                           Funciones y variables para graphs.
                                                             (line  281)
* random_weibull:                        Funciones y variables para distribuciones continuas.
                                                             (line  975)
* random_weibull <1>:                    Funciones y variables para distribuciones continuas.
                                                             (line  976)
* range:                                 Funciones y variables de parámetros descriptivos.
                                                             (line  205)
* range <1>:                             Funciones y variables de parámetros descriptivos.
                                                             (line  206)
* rank:                                  Funciones y variables para las matrices y el álgebra lineal.
                                                             (line  999)
* rank <1>:                              Funciones y variables para linearalgebra.
                                                             (line  599)
* rassociative:                          Funciones y variables para simplificación.
                                                             (line  575)
* rat:                                   Funciones y variables para polinomios.
                                                             (line  791)
* rat <1>:                               Funciones y variables para polinomios.
                                                             (line  792)
* ratalgdenom:                           Funciones y variables para polinomios.
                                                             (line  834)
* ratchristof:                           Funciones y variables para ctensor.
                                                             (line 1074)
* ratcoef:                               Funciones y variables para polinomios.
                                                             (line  842)
* ratcoef <1>:                           Funciones y variables para polinomios.
                                                             (line  843)
* ratdenom:                              Funciones y variables para polinomios.
                                                             (line  870)
* ratdenomdivide:                        Funciones y variables para polinomios.
                                                             (line  886)
* ratdiff:                               Funciones y variables para polinomios.
                                                             (line  930)
* ratdisrep:                             Funciones y variables para polinomios.
                                                             (line  975)
* rateinstein:                           Funciones y variables para ctensor.
                                                             (line 1079)
* ratepsilon:                            Funciones y variables para los números.
                                                             (line  232)
* ratexpand:                             Funciones y variables para polinomios.
                                                             (line  987)
* ratexpand <1>:                         Funciones y variables para polinomios.
                                                             (line  988)
* ratfac:                                Funciones y variables para polinomios.
                                                             (line 1034)
* ratinterpol:                           Funciones y variables para interpol.
                                                             (line  278)
* ratinterpol <1>:                       Funciones y variables para interpol.
                                                             (line  279)
* rational:                              Funciones y variables para las propiedades.
                                                             (line  529)
* rational <1>:                          Paquete functs.     (line   34)
* rationalize:                           Funciones y variables para los números.
                                                             (line  239)
* ratmx:                                 Funciones y variables para las matrices y el álgebra lineal.
                                                             (line 1006)
* ratnumer:                              Funciones y variables para polinomios.
                                                             (line 1059)
* ratnump:                               Funciones y variables para los números.
                                                             (line  271)
* ratp:                                  Funciones y variables para polinomios.
                                                             (line 1075)
* ratprint:                              Funciones y variables para polinomios.
                                                             (line 1083)
* ratriemann:                            Funciones y variables para ctensor.
                                                             (line 1086)
* ratsimp:                               Funciones y variables para polinomios.
                                                             (line 1090)
* ratsimp <1>:                           Funciones y variables para polinomios.
                                                             (line 1091)
* ratsimpexpons:                         Funciones y variables para polinomios.
                                                             (line 1139)
* ratsubst:                              Funciones y variables para polinomios.
                                                             (line 1151)
* ratvars:                               Funciones y variables para polinomios.
                                                             (line 1190)
* ratvars <1>:                           Funciones y variables para polinomios.
                                                             (line 1191)
* ratvars <2>:                           Funciones y variables para polinomios.
                                                             (line 1192)
* ratvarswitch:                          Funciones y variables para polinomios.
                                                             (line 1212)
* ratweight:                             Funciones y variables para polinomios.
                                                             (line 1263)
* ratweight <1>:                         Funciones y variables para polinomios.
                                                             (line 1264)
* ratweights:                            Funciones y variables para polinomios.
                                                             (line 1293)
* ratweyl:                               Funciones y variables para ctensor.
                                                             (line 1094)
* ratwtlvl:                              Funciones y variables para polinomios.
                                                             (line 1301)
* Razón áurea:                           Funciones y variables para Constantes.
                                                             (line   42)
* read:                                  Funciones y variables para la línea de comandos.
                                                             (line  556)
* readchar:                              Funciones y variables para entrada y salida.
                                                             (line  228)
* readline:                              Funciones y variables para entrada y salida.
                                                             (line  234)
* readonly:                              Funciones y variables para la línea de comandos.
                                                             (line  571)
* read_array:                            Funciones y variables para entrada y salida en formato texto.
                                                             (line   30)
* read_array <1>:                        Funciones y variables para entrada y salida en formato texto.
                                                             (line   31)
* read_binary_array:                     Funciones y variables para entrada y salida en formato binario.
                                                             (line   41)
* read_binary_list:                      Funciones y variables para entrada y salida en formato binario.
                                                             (line   53)
* read_binary_list <1>:                  Funciones y variables para entrada y salida en formato binario.
                                                             (line   54)
* read_binary_matrix:                    Funciones y variables para entrada y salida en formato binario.
                                                             (line   30)
* read_hashed_array:                     Funciones y variables para entrada y salida en formato texto.
                                                             (line   45)
* read_hashed_array <1>:                 Funciones y variables para entrada y salida en formato texto.
                                                             (line   46)
* read_list:                             Funciones y variables para entrada y salida en formato texto.
                                                             (line   80)
* read_list <1>:                         Funciones y variables para entrada y salida en formato texto.
                                                             (line   81)
* read_list <2>:                         Funciones y variables para entrada y salida en formato texto.
                                                             (line   82)
* read_list <3>:                         Funciones y variables para entrada y salida en formato texto.
                                                             (line   83)
* read_matrix:                           Funciones y variables para entrada y salida en formato texto.
                                                             (line    6)
* read_matrix <1>:                       Funciones y variables para entrada y salida en formato texto.
                                                             (line    7)
* read_matrix <2>:                       Funciones y variables para entrada y salida en formato texto.
                                                             (line    8)
* read_matrix <3>:                       Funciones y variables para entrada y salida en formato texto.
                                                             (line    9)
* read_nested_list:                      Funciones y variables para entrada y salida en formato texto.
                                                             (line   63)
* read_nested_list <1>:                  Funciones y variables para entrada y salida en formato texto.
                                                             (line   64)
* read_xpm:                              Funciones y variables para picture.
                                                             (line   82)
* real:                                  Funciones y variables para las propiedades.
                                                             (line  538)
* realonly:                              Funciones y variable para las ecuaciones.
                                                             (line  637)
* realpart:                              Funciones para los números complejos.
                                                             (line  124)
* realroots:                             Funciones y variable para las ecuaciones.
                                                             (line  643)
* realroots <1>:                         Funciones y variable para las ecuaciones.
                                                             (line  644)
* realroots <2>:                         Funciones y variable para las ecuaciones.
                                                             (line  645)
* realroots <3>:                         Funciones y variable para las ecuaciones.
                                                             (line  646)
* real_imagpart_to_conjugate:            Funciones y variables para to_poly_solve.
                                                             (line  592)
* rearray:                               Funciones y variables para los arrays.
                                                             (line  415)
* rectangle:                             Funciones y variables para draw.
                                                             (line 3558)
* rectform:                              Funciones para los números complejos.
                                                             (line  130)
* rectform_log_if_constant:              Funciones y variables para to_poly_solve.
                                                             (line  607)
* recttopolar:                           Funciones y variables para la transformada rápida de Fourier.
                                                             (line   25)
* rediff:                                Funciones y variables para itensor.
                                                             (line  668)
* redraw:                                Funciones y variables para graphs.
                                                             (line 1563)
* reduce_consts:                         Paquete rducon.     (line    6)
* reduce_order:                          Funciones y variables para solve_rec.
                                                             (line    6)
* refcheck:                              Funciones y variables para depurado.
                                                             (line   17)
* region:                                Funciones y variables para draw.
                                                             (line 3586)
* region_boundaries:                     Funciones y variables para worldmap.
                                                             (line  121)
* region_boundaries_plus:                Funciones y variables para worldmap.
                                                             (line  136)
* rem:                                   Funciones y variables para las propiedades.
                                                             (line  548)
* remainder:                             Funciones y variables para polinomios.
                                                             (line 1309)
* remainder <1>:                         Funciones y variables para polinomios.
                                                             (line 1310)
* remarray:                              Funciones y variables para los arrays.
                                                             (line  422)
* remarray <1>:                          Funciones y variables para los arrays.
                                                             (line  423)
* rembox:                                Funciones y variables para expresiones.
                                                             (line  851)
* rembox <1>:                            Funciones y variables para expresiones.
                                                             (line  852)
* rembox <2>:                            Funciones y variables para expresiones.
                                                             (line  853)
* remcomps:                              Funciones y variables para itensor.
                                                             (line  293)
* remcon:                                Funciones y variables para itensor.
                                                             (line  177)
* remcon <1>:                            Funciones y variables para itensor.
                                                             (line  178)
* remcoord:                              Funciones y variables para itensor.
                                                             (line  771)
* remcoord <1>:                          Funciones y variables para itensor.
                                                             (line  772)
* remfun:                                Funciones y variables para series de Fourier.
                                                             (line   11)
* remfun <1>:                            Funciones y variables para series de Fourier.
                                                             (line   12)
* remfunction:                           Funciones y variables para la definición de funciones.
                                                             (line  982)
* remfunction <1>:                       Funciones y variables para la definición de funciones.
                                                             (line  983)
* remlet:                                Funciones y variables sobre reglas y patrones.
                                                             (line  513)
* remlet <1>:                            Funciones y variables sobre reglas y patrones.
                                                             (line  514)
* remlet <2>:                            Funciones y variables sobre reglas y patrones.
                                                             (line  515)
* remlet <3>:                            Funciones y variables sobre reglas y patrones.
                                                             (line  516)
* remove:                                Funciones y variables para las propiedades.
                                                             (line  557)
* remove <1>:                            Funciones y variables para las propiedades.
                                                             (line  558)
* remove <2>:                            Funciones y variables para las propiedades.
                                                             (line  559)
* remove <3>:                            Funciones y variables para las propiedades.
                                                             (line  560)
* remove <4>:                            Funciones y variables para las propiedades.
                                                             (line  561)
* remove_constvalue:                     Funciones y variables para ezunits.
                                                             (line  256)
* remove_dimensions:                     Funciones y variables para ezunits.
                                                             (line  493)
* remove_edge:                           Funciones y variables para graphs.
                                                             (line 1292)
* remove_fundamental_dimensions:         Funciones y variables para ezunits.
                                                             (line  523)
* remove_fundamental_units:              Funciones y variables para ezunits.
                                                             (line  554)
* remove_vertex:                         Funciones y variables para graphs.
                                                             (line 1307)
* rempart:                               Paquete functs.     (line    6)
* remrule:                               Funciones y variables sobre reglas y patrones.
                                                             (line  537)
* remrule <1>:                           Funciones y variables sobre reglas y patrones.
                                                             (line  538)
* remsym:                                Funciones y variables para itensor.
                                                             (line  587)
* remvalue:                              Funciones y variables para la miscelánea de opciones.
                                                             (line   65)
* remvalue <1>:                          Funciones y variables para la miscelánea de opciones.
                                                             (line   66)
* rename:                                Funciones y variables para itensor.
                                                             (line   77)
* rename <1>:                            Funciones y variables para itensor.
                                                             (line   78)
* reset:                                 Funciones y variables para la línea de comandos.
                                                             (line  589)
* residue:                               Funciones y variables para integración.
                                                             (line  505)
* resolution:                            Visualización usando VTK.
                                                             (line  303)
* resolvante:                            Funciones y variables para simetrías.
                                                             (line  557)
* resolvante_alternee1:                  Funciones y variables para simetrías.
                                                             (line  717)
* resolvante_bipartite:                  Funciones y variables para simetrías.
                                                             (line  726)
* resolvante_diedrale:                   Funciones y variables para simetrías.
                                                             (line  739)
* resolvante_klein:                      Funciones y variables para simetrías.
                                                             (line  757)
* resolvante_klein3:                     Funciones y variables para simetrías.
                                                             (line  766)
* resolvante_produit_sym:                Funciones y variables para simetrías.
                                                             (line  775)
* resolvante_unitaire:                   Funciones y variables para simetrías.
                                                             (line  801)
* resolvante_vierer:                     Funciones y variables para simetrías.
                                                             (line  810)
* rest:                                  Funciones y variables para listas.
                                                             (line  396)
* rest <1>:                              Funciones y variables para listas.
                                                             (line  397)
* Resta:                                 Operadores aritméticos.
                                                             (line    8)
* restart:                               Visualización usando VTK.
                                                             (line   92)
* Resultado anterior en una sentencia compuesta: Funciones y variables para la línea de comandos.
                                                             (line  112)
* resultant:                             Funciones y variables para polinomios.
                                                             (line 1353)
* resultant <1>:                         Funciones y variables para polinomios.
                                                             (line 1317)
* return:                                Funciones y variables para la programación.
                                                             (line  514)
* reveal:                                Funciones y variables para expresiones.
                                                             (line  920)
* reverse:                               Funciones y variables para listas.
                                                             (line  404)
* revert:                                Funciones y variables para las series.
                                                             (line  305)
* revert2:                               Funciones y variables para las series.
                                                             (line  306)
* rgb2level:                             Funciones y variables para picture.
                                                             (line   86)
* rhs:                                   Funciones y variable para las ecuaciones.
                                                             (line  692)
* ric:                                   Funciones y variables para ctensor.
                                                             (line 1130)
* ricci:                                 Funciones y variables para ctensor.
                                                             (line  197)
* riem:                                  Funciones y variables para ctensor.
                                                             (line 1112)
* riemann:                               Funciones y variables para ctensor.
                                                             (line  237)
* rinvariant:                            Funciones y variables para ctensor.
                                                             (line  280)
* risch:                                 Funciones y variables para integración.
                                                             (line  521)
* rk:                                    Funciones para la resolución numérica de ecuaciones diferenciales.
                                                             (line  229)
* rk <1>:                                Funciones para la resolución numérica de ecuaciones diferenciales.
                                                             (line  230)
* rmxchar:                               Funciones y variables para las matrices y el álgebra lineal.
                                                             (line 1024)
* rncombine:                             Funciones y variables para la miscelánea de opciones.
                                                             (line   78)
* romberg:                               Funciones y variables para romberg.
                                                             (line    6)
* romberg <1>:                           Funciones y variables para romberg.
                                                             (line    7)
* rombergabs:                            Funciones y variables para romberg.
                                                             (line  109)
* rombergit:                             Funciones y variables para romberg.
                                                             (line  122)
* rombergmin:                            Funciones y variables para romberg.
                                                             (line  135)
* rombergtol:                            Funciones y variables para romberg.
                                                             (line  144)
* room:                                  Funciones y variables para el entorno de ejecución.
                                                             (line   39)
* room <1>:                              Funciones y variables para el entorno de ejecución.
                                                             (line   40)
* room <2>:                              Funciones y variables para el entorno de ejecución.
                                                             (line   41)
* rootsconmode:                          Funciones y variable para las ecuaciones.
                                                             (line  733)
* rootscontract:                         Funciones y variable para las ecuaciones.
                                                             (line  740)
* rootsepsilon:                          Funciones y variable para las ecuaciones.
                                                             (line  801)
* round:                                 Funciones para los números.
                                                             (line  259)
* row:                                   Funciones y variables para las matrices y el álgebra lineal.
                                                             (line 1020)
* rowop:                                 Funciones y variables para linearalgebra.
                                                             (line  593)
* rowswap:                               Funciones y variables para linearalgebra.
                                                             (line  609)
* rreduce:                               Funciones y variables para los conjuntos.
                                                             (line  838)
* rreduce <1>:                           Funciones y variables para los conjuntos.
                                                             (line  839)
* run_testsuite:                         Funciones y variables para la detección e informe de fallos.
                                                             (line    6)
* run_viewer:                            Opciones gráficas.  (line  193)
* Salida anterior:                       Funciones y variables para la línea de comandos.
                                                             (line   96)
* save:                                  Funciones y variables para lectura y escritura.
                                                             (line  346)
* save <1>:                              Funciones y variables para lectura y escritura.
                                                             (line  347)
* save <2>:                              Funciones y variables para lectura y escritura.
                                                             (line  348)
* save <3>:                              Funciones y variables para lectura y escritura.
                                                             (line  349)
* save <4>:                              Funciones y variables para lectura y escritura.
                                                             (line  350)
* save <5>:                              Funciones y variables para lectura y escritura.
                                                             (line  351)
* savedef:                               Funciones y variables para la definición de funciones.
                                                             (line 1003)
* savefactors:                           Funciones y variables para polinomios.
                                                             (line 1373)
* saving:                                Funciones y Variables para finance.
                                                             (line  189)
* scalar:                                Funciones y variables para las propiedades.
                                                             (line  590)
* scalarmatrixp:                         Funciones y variables para las matrices y el álgebra lineal.
                                                             (line 1032)
* scalarp:                               Funciones y variables para las propiedades.
                                                             (line  597)
* scale:                                 Visualización usando VTK.
                                                             (line  310)
* scaled_bessel_i:                       Funciones de Bessel.
                                                             (line  157)
* scaled_bessel_i0:                      Funciones de Bessel.
                                                             (line  167)
* scaled_bessel_i1:                      Funciones de Bessel.
                                                             (line  171)
* scanmap:                               Funciones y variables para la programación.
                                                             (line  518)
* scanmap <1>:                           Funciones y variables para la programación.
                                                             (line  519)
* scatterplot:                           Funciones y variables para gráficos estadísticos.
                                                             (line  383)
* scatterplot <1>:                       Funciones y variables para gráficos estadísticos.
                                                             (line  384)
* scatterplot <2>:                       Funciones y variables para gráficos estadísticos.
                                                             (line  385)
* scatterplot <3>:                       Funciones y variables para gráficos estadísticos.
                                                             (line  386)
* scatterplot_description:               Funciones y variables para gráficos estadísticos.
                                                             (line  387)
* scene:                                 Visualización usando VTK.
                                                             (line   12)
* schur2comp:                            Funciones y variables para simetrías.
                                                             (line  819)
* sconcat:                               Funciones y variables para las cadenas de texto.
                                                             (line   44)
* scopy:                                 Funciones y variables para cadenas.
                                                             (line   90)
* scsimp:                                Funciones y variables para simplificación.
                                                             (line  580)
* scurvature:                            Funciones y variables para ctensor.
                                                             (line  213)
* sdowncase:                             Funciones y variables para cadenas.
                                                             (line   93)
* sdowncase <1>:                         Funciones y variables para cadenas.
                                                             (line   94)
* sdowncase <2>:                         Funciones y variables para cadenas.
                                                             (line   95)
* sec:                                   Funciones y variables para trigonometría.
                                                             (line  209)
* sech:                                  Funciones y variables para trigonometría.
                                                             (line  212)
* second:                                Funciones y variables para listas.
                                                             (line  410)
* sequal:                                Funciones y variables para cadenas.
                                                             (line   99)
* sequalignore:                          Funciones y variables para cadenas.
                                                             (line  103)
* setcheck:                              Funciones y variables para depurado.
                                                             (line   23)
* setcheckbreak:                         Funciones y variables para depurado.
                                                             (line   54)
* setdifference:                         Funciones y variables para los conjuntos.
                                                             (line  881)
* setelmx:                               Funciones y variables para las matrices y el álgebra lineal.
                                                             (line 1045)
* setequalp:                             Funciones y variables para los conjuntos.
                                                             (line  906)
* setify:                                Funciones y variables para los conjuntos.
                                                             (line  923)
* setp:                                  Funciones y variables para los conjuntos.
                                                             (line  941)
* setunits:                              Funciones y variables para units.
                                                             (line    6)
* setup_autoload:                        Funciones y variables para la miscelánea de opciones.
                                                             (line   93)
* setval:                                Funciones y variables para depurado.
                                                             (line   66)
* set_draw_defaults:                     Funciones y variables para draw.
                                                             (line  169)
* set_edge_weight:                       Funciones y variables para graphs.
                                                             (line 1011)
* set_partitions:                        Funciones y variables para los conjuntos.
                                                             (line  960)
* set_partitions <1>:                    Funciones y variables para los conjuntos.
                                                             (line  961)
* set_plot_option:                       Funciones y variables para gráficos.
                                                             (line  327)
* set_random_state:                      Números aleatorios. (line   29)
* set_tex_environment:                   Funciones y variables para salida TeX.
                                                             (line  216)
* set_tex_environment_default:           Funciones y variables para salida TeX.
                                                             (line  251)
* set_up_dot_simplifications:            Funciones y variables para Afines.
                                                             (line   38)
* set_up_dot_simplifications <1>:        Funciones y variables para Afines.
                                                             (line   39)
* set_vertex_label:                      Funciones y variables para graphs.
                                                             (line 1025)
* seventh:                               Funciones y variables para listas.
                                                             (line  415)
* sexplode:                              Funciones y variables para cadenas.
                                                             (line  107)
* sf:                                    Funciones y variables para atensor.
                                                             (line   94)
* shortest_path:                         Funciones y variables para graphs.
                                                             (line 1039)
* shortest_weighted_path:                Funciones y variables para graphs.
                                                             (line 1050)
* show:                                  Funciones y variables para itensor.
                                                             (line  139)
* showcomps:                             Funciones y variables para itensor.
                                                             (line  298)
* showratvars:                           Funciones y variables para polinomios.
                                                             (line 1381)
* showtime:                              Funciones y variables para la línea de comandos.
                                                             (line  600)
* show_edges:                            Funciones y variables para graphs.
                                                             (line 1542)
* show_edge_color:                       Funciones y variables para graphs.
                                                             (line 1545)
* show_edge_type:                        Funciones y variables para graphs.
                                                             (line 1551)
* show_edge_width:                       Funciones y variables para graphs.
                                                             (line 1548)
* show_id:                               Funciones y variables para graphs.
                                                             (line 1469)
* show_label:                            Funciones y variables para graphs.
                                                             (line 1475)
* show_vertex_color:                     Funciones y variables para graphs.
                                                             (line 1519)
* show_vertex_size:                      Funciones y variables para graphs.
                                                             (line 1516)
* show_vertex_type:                      Funciones y variables para graphs.
                                                             (line 1512)
* show_vertices:                         Funciones y variables para graphs.
                                                             (line 1506)
* show_weight:                           Funciones y variables para graphs.
                                                             (line 1488)
* sierpinskiale:                         Definiciones para IFS fractals.
                                                             (line   19)
* sierpinskimap:                         Definiciones para curvas de Peano.
                                                             (line   19)
* sign:                                  Funciones y variables para los hechos.
                                                             (line  393)
* signum:                                Funciones para los números.
                                                             (line  264)
* similaritytransform:                   Funciones y variables para las matrices y el álgebra lineal.
                                                             (line 1052)
* simp:                                  Funciones y variables para simplificación.
                                                             (line  590)
* simplified_output:                     Funciones y variables para zeilberger.
                                                             (line  100)
* simplify_products:                     Funciones y variables para solve_rec.
                                                             (line   54)
* simplify_sum:                          Funciones y variables para solve_rec.
                                                             (line   62)
* simplode:                              Funciones y variables para cadenas.
                                                             (line  110)
* simplode <1>:                          Funciones y variables para cadenas.
                                                             (line  111)
* simpmetderiv:                          Funciones y variables para itensor.
                                                             (line  805)
* simpmetderiv <1>:                      Funciones y variables para itensor.
                                                             (line  806)
* simpsum:                               Funciones y variables para sumas y productos.
                                                             (line  122)
* simp_inequality:                       Funciones y variables para to_poly_solve.
                                                             (line  627)
* simtran:                               Funciones y variables para las matrices y el álgebra lineal.
                                                             (line 1053)
* sin:                                   Funciones y variables para trigonometría.
                                                             (line  215)
* sinh:                                  Funciones y variables para trigonometría.
                                                             (line  218)
* sinnpiflag:                            Funciones y variables para series de Fourier.
                                                             (line   51)
* sinsert:                               Funciones y variables para cadenas.
                                                             (line  125)
* sinvertcase:                           Funciones y variables para cadenas.
                                                             (line  136)
* sinvertcase <1>:                       Funciones y variables para cadenas.
                                                             (line  137)
* sinvertcase <2>:                       Funciones y variables para cadenas.
                                                             (line  138)
* sixth:                                 Funciones y variables para listas.
                                                             (line  420)
* skewness:                              Funciones y variables de parámetros descriptivos.
                                                             (line  406)
* skewness <1>:                          Funciones y variables de parámetros descriptivos.
                                                             (line  407)
* skewness_bernoulli:                    Funciones y variables para distribuciones discretas.
                                                             (line  270)
* skewness_beta:                         Funciones y variables para distribuciones continuas.
                                                             (line  755)
* skewness_binomial:                     Funciones y variables para distribuciones discretas.
                                                             (line  137)
* skewness_chi2:                         Funciones y variables para distribuciones continuas.
                                                             (line  324)
* skewness_continuous_uniform:           Funciones y variables para distribuciones continuas.
                                                             (line  810)
* skewness_discrete_uniform:             Funciones y variables para distribuciones discretas.
                                                             (line  392)
* skewness_exp:                          Funciones y variables para distribuciones continuas.
                                                             (line  560)
* skewness_f:                            Funciones y variables para distribuciones continuas.
                                                             (line  459)
* skewness_gamma:                        Funciones y variables para distribuciones continuas.
                                                             (line  690)
* skewness_general_finite_discrete:      Funciones y variables para distribuciones discretas.
                                                             (line   69)
* skewness_geometric:                    Funciones y variables para distribuciones discretas.
                                                             (line  338)
* skewness_gumbel:                       Funciones y variables para distribuciones continuas.
                                                             (line 1220)
* skewness_hypergeometric:               Funciones y variables para distribuciones discretas.
                                                             (line  458)
* skewness_laplace:                      Funciones y variables para distribuciones continuas.
                                                             (line 1138)
* skewness_logistic:                     Funciones y variables para distribuciones continuas.
                                                             (line  863)
* skewness_lognormal:                    Funciones y variables para distribuciones continuas.
                                                             (line  632)
* skewness_negative_binomial:            Funciones y variables para distribuciones discretas.
                                                             (line  516)
* skewness_noncentral_chi2:              Funciones y variables para distribuciones continuas.
                                                             (line  396)
* skewness_noncentral_student_t:         Funciones y variables para distribuciones continuas.
                                                             (line  224)
* skewness_normal:                       Funciones y variables para distribuciones continuas.
                                                             (line   55)
* skewness_pareto:                       Funciones y variables para distribuciones continuas.
                                                             (line  914)
* skewness_poisson:                      Funciones y variables para distribuciones discretas.
                                                             (line  194)
* skewness_rayleigh:                     Funciones y variables para distribuciones continuas.
                                                             (line 1063)
* skewness_student_t:                    Funciones y variables para distribuciones continuas.
                                                             (line  122)
* skewness_weibull:                      Funciones y variables para distribuciones continuas.
                                                             (line  965)
* slength:                               Funciones y variables para cadenas.
                                                             (line  148)
* smake:                                 Funciones y variables para cadenas.
                                                             (line  151)
* small_rhombicosidodecahedron_graph:    Funciones y variables para graphs.
                                                             (line  284)
* small_rhombicuboctahedron_graph:       Funciones y variables para graphs.
                                                             (line  287)
* smax:                                  Funciones y variables de parámetros descriptivos.
                                                             (line  189)
* smax <1>:                              Funciones y variables de parámetros descriptivos.
                                                             (line  190)
* smin:                                  Funciones y variables de parámetros descriptivos.
                                                             (line  173)
* smin <1>:                              Funciones y variables de parámetros descriptivos.
                                                             (line  174)
* smismatch:                             Funciones y variables para cadenas.
                                                             (line  158)
* smismatch <1>:                         Funciones y variables para cadenas.
                                                             (line  159)
* snowmap:                               Definiciones para cops de Koch.
                                                             (line    6)
* snub_cube_graph:                       Funciones y variables para graphs.
                                                             (line  290)
* snub_dodecahedron_graph:               Funciones y variables para graphs.
                                                             (line  293)
* solve:                                 Funciones y variable para las ecuaciones.
                                                             (line  808)
* solve <1>:                             Funciones y variable para las ecuaciones.
                                                             (line  809)
* solve <2>:                             Funciones y variable para las ecuaciones.
                                                             (line  810)
* solvedecomposes:                       Funciones y variable para las ecuaciones.
                                                             (line  974)
* solveexplicit:                         Funciones y variable para las ecuaciones.
                                                             (line  980)
* solvefactors:                          Funciones y variable para las ecuaciones.
                                                             (line  987)
* solvenullwarn:                         Funciones y variable para las ecuaciones.
                                                             (line  994)
* solveradcan:                           Funciones y variable para las ecuaciones.
                                                             (line 1002)
* solvetrigwarn:                         Funciones y variable para las ecuaciones.
                                                             (line 1010)
* solve_rec:                             Funciones y variables para solve_rec.
                                                             (line   86)
* solve_rec_rat:                         Funciones y variables para solve_rec.
                                                             (line  152)
* some:                                  Funciones y variables para los conjuntos.
                                                             (line 1013)
* some <1>:                              Funciones y variables para los conjuntos.
                                                             (line 1014)
* somrac:                                Funciones y variables para simetrías.
                                                             (line  834)
* sort:                                  Funciones y variables para listas.
                                                             (line  425)
* sort <1>:                              Funciones y variables para listas.
                                                             (line  426)
* space:                                 Funciones y variables para caracteres.
                                                             (line   80)
* sparse:                                Funciones y variables para las matrices y el álgebra lineal.
                                                             (line 1077)
* sparse6_decode:                        Funciones y variables para graphs.
                                                             (line 1349)
* sparse6_encode:                        Funciones y variables para graphs.
                                                             (line 1352)
* sparse6_export:                        Funciones y variables para graphs.
                                                             (line 1355)
* sparse6_import:                        Funciones y variables para graphs.
                                                             (line 1359)
* specint:                               Funciones y variables para las funciones especiales.
                                                             (line    6)
* sphere:                                Visualización usando VTK.
                                                             (line  166)
* spherical:                             Funciones y variables para draw.
                                                             (line 3607)
* spherical_bessel_j:                    Funciones y variables para polinomios ortogonales.
                                                             (line  171)
* spherical_bessel_y:                    Funciones y variables para polinomios ortogonales.
                                                             (line  177)
* spherical_hankel1:                     Funciones y variables para polinomios ortogonales.
                                                             (line  183)
* spherical_hankel2:                     Funciones y variables para polinomios ortogonales.
                                                             (line  188)
* spherical_harmonic:                    Funciones y variables para polinomios ortogonales.
                                                             (line  193)
* spherical_to_xyz:                      Funciones y variables para gráficos.
                                                             (line  358)
* splice:                                Macros.             (line  178)
* split:                                 Funciones y variables para cadenas.
                                                             (line  169)
* split <1>:                             Funciones y variables para cadenas.
                                                             (line  170)
* split <2>:                             Funciones y variables para cadenas.
                                                             (line  171)
* sposition:                             Funciones y variables para cadenas.
                                                             (line  187)
* spring_embedding_depth:                Funciones y variables para graphs.
                                                             (line 1580)
* sprint:                                Funciones y variables para entrada y salida.
                                                             (line  239)
* sqrt:                                  Funciones radicales exponenciales y logarítmicas.
                                                             (line  232)
* sqrtdenest:                            Paquete sqdnst.     (line    6)
* sqrtdispflag:                          Funciones y variables para la impresión.
                                                             (line  558)
* sremove:                               Funciones y variables para cadenas.
                                                             (line  193)
* sremove <1>:                           Funciones y variables para cadenas.
                                                             (line  194)
* sremove <2>:                           Funciones y variables para cadenas.
                                                             (line  195)
* sremove <3>:                           Funciones y variables para cadenas.
                                                             (line  196)
* sremovefirst:                          Funciones y variables para cadenas.
                                                             (line  209)
* sremovefirst <1>:                      Funciones y variables para cadenas.
                                                             (line  210)
* sremovefirst <2>:                      Funciones y variables para cadenas.
                                                             (line  211)
* sremovefirst <3>:                      Funciones y variables para cadenas.
                                                             (line  212)
* sreverse:                              Funciones y variables para cadenas.
                                                             (line  216)
* ssearch:                               Funciones y variables para cadenas.
                                                             (line  220)
* ssearch <1>:                           Funciones y variables para cadenas.
                                                             (line  221)
* ssearch <2>:                           Funciones y variables para cadenas.
                                                             (line  222)
* ssearch <3>:                           Funciones y variables para cadenas.
                                                             (line  223)
* ssort:                                 Funciones y variables para cadenas.
                                                             (line  235)
* ssort <1>:                             Funciones y variables para cadenas.
                                                             (line  236)
* sstatus:                               Funciones y variables para el entorno de ejecución.
                                                             (line   51)
* ssubst:                                Funciones y variables para cadenas.
                                                             (line  250)
* ssubst <1>:                            Funciones y variables para cadenas.
                                                             (line  251)
* ssubst <2>:                            Funciones y variables para cadenas.
                                                             (line  252)
* ssubst <3>:                            Funciones y variables para cadenas.
                                                             (line  253)
* ssubstfirst:                           Funciones y variables para cadenas.
                                                             (line  268)
* ssubstfirst <1>:                       Funciones y variables para cadenas.
                                                             (line  269)
* ssubstfirst <2>:                       Funciones y variables para cadenas.
                                                             (line  270)
* ssubstfirst <3>:                       Funciones y variables para cadenas.
                                                             (line  271)
* staircase:                             Análisis gráfico de sistemas dinámicos discretos.
                                                             (line  123)
* standardize:                           Funciones y variables para el tratamiento de datos.
                                                             (line  118)
* standardize <1>:                       Funciones y variables para el tratamiento de datos.
                                                             (line  119)
* standardize_inverse_trig:              Funciones y variables para to_poly_solve.
                                                             (line  648)
* stardisp:                              Funciones y variables para la impresión.
                                                             (line  564)
* starplot:                              Funciones y variables para gráficos estadísticos.
                                                             (line  446)
* starplot_description:                  Funciones y variables para gráficos estadísticos.
                                                             (line  448)
* startphi:                              Visualización usando VTK.
                                                             (line  321)
* starttheta:                            Visualización usando VTK.
                                                             (line  332)
* stats_numer:                           Funciones y variables para stats.
                                                             (line    6)
* status:                                Funciones y variables para el entorno de ejecución.
                                                             (line   63)
* status <1>:                            Funciones y variables para el entorno de ejecución.
                                                             (line   64)
* std:                                   Funciones y variables de parámetros descriptivos.
                                                             (line   75)
* std <1>:                               Funciones y variables de parámetros descriptivos.
                                                             (line   76)
* std1:                                  Funciones y variables de parámetros descriptivos.
                                                             (line   92)
* std1 <1>:                              Funciones y variables de parámetros descriptivos.
                                                             (line   93)
* std_bernoulli:                         Funciones y variables para distribuciones discretas.
                                                             (line  260)
* std_beta:                              Funciones y variables para distribuciones continuas.
                                                             (line  750)
* std_binomial:                          Funciones y variables para distribuciones discretas.
                                                             (line  132)
* std_chi2:                              Funciones y variables para distribuciones continuas.
                                                             (line  314)
* std_continuous_uniform:                Funciones y variables para distribuciones continuas.
                                                             (line  805)
* std_discrete_uniform:                  Funciones y variables para distribuciones discretas.
                                                             (line  387)
* std_exp:                               Funciones y variables para distribuciones continuas.
                                                             (line  548)
* std_f:                                 Funciones y variables para distribuciones continuas.
                                                             (line  454)
* std_gamma:                             Funciones y variables para distribuciones continuas.
                                                             (line  685)
* std_general_finite_discrete:           Funciones y variables para distribuciones discretas.
                                                             (line   63)
* std_geometric:                         Funciones y variables para distribuciones discretas.
                                                             (line  333)
* std_gumbel:                            Funciones y variables para distribuciones continuas.
                                                             (line 1215)
* std_hypergeometric:                    Funciones y variables para distribuciones discretas.
                                                             (line  452)
* std_laplace:                           Funciones y variables para distribuciones continuas.
                                                             (line 1133)
* std_logistic:                          Funciones y variables para distribuciones continuas.
                                                             (line  858)
* std_lognormal:                         Funciones y variables para distribuciones continuas.
                                                             (line  627)
* std_negative_binomial:                 Funciones y variables para distribuciones discretas.
                                                             (line  511)
* std_noncentral_chi2:                   Funciones y variables para distribuciones continuas.
                                                             (line  391)
* std_noncentral_student_t:              Funciones y variables para distribuciones continuas.
                                                             (line  218)
* std_normal:                            Funciones y variables para distribuciones continuas.
                                                             (line   50)
* std_pareto:                            Funciones y variables para distribuciones continuas.
                                                             (line  909)
* std_poisson:                           Funciones y variables para distribuciones discretas.
                                                             (line  189)
* std_rayleigh:                          Funciones y variables para distribuciones continuas.
                                                             (line 1049)
* std_student_t:                         Funciones y variables para distribuciones continuas.
                                                             (line  117)
* std_weibull:                           Funciones y variables para distribuciones continuas.
                                                             (line  960)
* stemplot:                              Funciones y variables para gráficos estadísticos.
                                                             (line  514)
* stemplot <1>:                          Funciones y variables para gráficos estadísticos.
                                                             (line  515)
* stirling:                              Funciones y variables para stirling.
                                                             (line    6)
* stirling <1>:                          Funciones y variables para stirling.
                                                             (line    7)
* stirling1:                             Funciones y variables para los conjuntos.
                                                             (line 1083)
* stirling2:                             Funciones y variables para los conjuntos.
                                                             (line 1139)
* strim:                                 Funciones y variables para cadenas.
                                                             (line  276)
* striml:                                Funciones y variables para cadenas.
                                                             (line  286)
* strimr:                                Funciones y variables para cadenas.
                                                             (line  290)
* string:                                Funciones y variables para las cadenas de texto.
                                                             (line   54)
* stringdisp:                            Funciones y variables para las cadenas de texto.
                                                             (line   61)
* stringout:                             Funciones y variables para lectura y escritura.
                                                             (line  404)
* stringout <1>:                         Funciones y variables para lectura y escritura.
                                                             (line  405)
* stringout <2>:                         Funciones y variables para lectura y escritura.
                                                             (line  406)
* stringout <3>:                         Funciones y variables para lectura y escritura.
                                                             (line  407)
* stringout <4>:                         Funciones y variables para lectura y escritura.
                                                             (line  408)
* stringp:                               Funciones y variables para cadenas.
                                                             (line  294)
* strong_components:                     Funciones y variables para graphs.
                                                             (line 1066)
* structures:                            Funciones y variables para las estructuras.
                                                             (line    6)
* struve_h:                              Funciones de Struve.
                                                             (line    9)
* struve_l:                              Funciones de Struve.
                                                             (line   12)
* style:                                 Opciones gráficas.  (line  199)
* style <1>:                             Opciones gráficas.  (line  200)
* sublis:                                Funciones y variables para expresiones.
                                                             (line  977)
* sublist:                               Funciones y variables para listas.
                                                             (line  562)
* sublist_indices:                       Funciones y variables para listas.
                                                             (line  573)
* sublis_apply_lambda:                   Funciones y variables para expresiones.
                                                             (line  993)
* submatrix:                             Funciones y variables para las matrices y el álgebra lineal.
                                                             (line 1084)
* submatrix <1>:                         Funciones y variables para las matrices y el álgebra lineal.
                                                             (line 1085)
* submatrix <2>:                         Funciones y variables para las matrices y el álgebra lineal.
                                                             (line 1086)
* subnumsimp:                            Funciones y variables para expresiones.
                                                             (line 1001)
* subsample:                             Funciones y variables para el tratamiento de datos.
                                                             (line  127)
* subsample <1>:                         Funciones y variables para el tratamiento de datos.
                                                             (line  128)
* subset:                                Funciones y variables para los conjuntos.
                                                             (line 1203)
* subsetp:                               Funciones y variables para los conjuntos.
                                                             (line 1225)
* subst:                                 Funciones y variables para expresiones.
                                                             (line 1019)
* substinpart:                           Funciones y variables para expresiones.
                                                             (line 1071)
* substpart:                             Funciones y variables para expresiones.
                                                             (line 1127)
* substring:                             Funciones y variables para cadenas.
                                                             (line  298)
* substring <1>:                         Funciones y variables para cadenas.
                                                             (line  299)
* subst_parallel:                        Funciones y variables para to_poly_solve.
                                                             (line  656)
* subvar:                                Funciones y variables para los arrays.
                                                             (line  436)
* subvarp:                               Funciones y variables para los arrays.
                                                             (line  463)
* sum:                                   Funciones y variables para sumas y productos.
                                                             (line  131)
* Suma:                                  Operadores aritméticos.
                                                             (line    7)
* sumcontract:                           Funciones y variables para sumas y productos.
                                                             (line  233)
* sumexpand:                             Funciones y variables para sumas y productos.
                                                             (line  264)
* summand_to_rec:                        Funciones y variables para solve_rec.
                                                             (line  184)
* sumsplitfact:                          Funciones combinatorias.
                                                             (line  183)
* supcase:                               Funciones y variables para cadenas.
                                                             (line  311)
* supcase <1>:                           Funciones y variables para cadenas.
                                                             (line  312)
* supcase <2>:                           Funciones y variables para cadenas.
                                                             (line  313)
* supcontext:                            Funciones y variables para los hechos.
                                                             (line  401)
* supcontext <1>:                        Funciones y variables para los hechos.
                                                             (line  402)
* surface:                               Visualización usando VTK.
                                                             (line  343)
* surface_hide:                          Funciones y variables para draw.
                                                             (line 1804)
* symbolp:                               Funciones y variables para expresiones.
                                                             (line 1156)
* symmdifference:                        Funciones y variables para los conjuntos.
                                                             (line 1240)
* symmetric:                             Funciones y variables para simplificación.
                                                             (line  630)
* symmetricp:                            Funciones y variables para ctensor.
                                                             (line  776)
* system:                                Funciones y variables para el entorno de ejecución.
                                                             (line   87)
* tab:                                   Funciones y variables para caracteres.
                                                             (line   83)
* take_channel:                          Funciones y variables para picture.
                                                             (line   90)
* take_inference:                        Funciones y variables para inference_result.
                                                             (line   73)
* take_inference <1>:                    Funciones y variables para inference_result.
                                                             (line   74)
* take_inference <2>:                    Funciones y variables para inference_result.
                                                             (line   75)
* tan:                                   Funciones y variables para trigonometría.
                                                             (line  221)
* tanh:                                  Funciones y variables para trigonometría.
                                                             (line  224)
* taylor:                                Funciones y variables para las series.
                                                             (line  349)
* taylor <1>:                            Funciones y variables para las series.
                                                             (line  350)
* taylor <2>:                            Funciones y variables para las series.
                                                             (line  351)
* taylor <3>:                            Funciones y variables para las series.
                                                             (line  352)
* taylor <4>:                            Funciones y variables para las series.
                                                             (line  354)
* taylordepth:                           Funciones y variables para las series.
                                                             (line  511)
* taylorinfo:                            Funciones y variables para las series.
                                                             (line  519)
* taylorp:                               Funciones y variables para las series.
                                                             (line  545)
* taylor_logexpand:                      Funciones y variables para las series.
                                                             (line  549)
* taylor_order_coefficients:             Funciones y variables para las series.
                                                             (line  561)
* taylor_simplifier:                     Funciones y variables para las series.
                                                             (line  570)
* taylor_truncate_polynomials:           Funciones y variables para las series.
                                                             (line  574)
* taytorat:                              Funciones y variables para las series.
                                                             (line  583)
* tcl_output:                            Funciones y variables para la miscelánea de opciones.
                                                             (line  128)
* tcl_output <1>:                        Funciones y variables para la miscelánea de opciones.
                                                             (line  129)
* tcl_output <2>:                        Funciones y variables para la miscelánea de opciones.
                                                             (line  130)
* tcontract:                             Funciones y variables para simetrías.
                                                             (line  841)
* tellrat:                               Funciones y variables para polinomios.
                                                             (line 1387)
* tellrat <1>:                           Funciones y variables para polinomios.
                                                             (line 1388)
* tellsimp:                              Funciones y variables sobre reglas y patrones.
                                                             (line  589)
* tellsimpafter:                         Funciones y variables sobre reglas y patrones.
                                                             (line  650)
* tensorkill:                            Funciones y variables para ctensor.
                                                             (line 1202)
* tentex:                                Funciones y variables para itensor.
                                                             (line 1537)
* tenth:                                 Funciones y variables para listas.
                                                             (line  612)
* terminal:                              Funciones y variables para draw.
                                                             (line 1821)
* terminal <1>:                          Funciones y variables para graphs.
                                                             (line 1585)
* testsuite_files:                       Funciones y variables para la detección e informe de fallos.
                                                             (line   50)
* test_mean:                             Funciones y variables para stats.
                                                             (line   14)
* test_mean <1>:                         Funciones y variables para stats.
                                                             (line   15)
* test_means_difference:                 Funciones y variables para stats.
                                                             (line  124)
* test_means_difference <1>:             Funciones y variables para stats.
                                                             (line  125)
* test_normality:                        Funciones y variables para stats.
                                                             (line  787)
* test_proportion:                       Funciones y variables para stats.
                                                             (line  387)
* test_proportion <1>:                   Funciones y variables para stats.
                                                             (line  388)
* test_proportions_difference:           Funciones y variables para stats.
                                                             (line  486)
* test_proportions_difference <1>:       Funciones y variables para stats.
                                                             (line  487)
* test_rank_sum:                         Funciones y variables para stats.
                                                             (line  716)
* test_rank_sum <1>:                     Funciones y variables para stats.
                                                             (line  717)
* test_sign:                             Funciones y variables para stats.
                                                             (line  578)
* test_sign <1>:                         Funciones y variables para stats.
                                                             (line  579)
* test_signed_rank:                      Funciones y variables para stats.
                                                             (line  634)
* test_signed_rank <1>:                  Funciones y variables para stats.
                                                             (line  635)
* test_variance:                         Funciones y variables para stats.
                                                             (line  243)
* test_variance <1>:                     Funciones y variables para stats.
                                                             (line  244)
* test_variance_ratio:                   Funciones y variables para stats.
                                                             (line  314)
* test_variance_ratio <1>:               Funciones y variables para stats.
                                                             (line  315)
* tex:                                   Funciones y variables para salida TeX.
                                                             (line    6)
* tex <1>:                               Funciones y variables para salida TeX.
                                                             (line    7)
* tex <2>:                               Funciones y variables para salida TeX.
                                                             (line    8)
* tex <3>:                               Funciones y variables para salida TeX.
                                                             (line    9)
* tex <4>:                               Funciones y variables para salida TeX.
                                                             (line   10)
* tex <5>:                               Funciones y variables para salida TeX.
                                                             (line   11)
* tex1:                                  Funciones y variables para salida TeX.
                                                             (line   70)
* texput:                                Funciones y variables para salida TeX.
                                                             (line   80)
* texput <1>:                            Funciones y variables para salida TeX.
                                                             (line   81)
* texput <2>:                            Funciones y variables para salida TeX.
                                                             (line   82)
* texput <3>:                            Funciones y variables para salida TeX.
                                                             (line   83)
* texput <4>:                            Funciones y variables para salida TeX.
                                                             (line   84)
* thetaresolution:                       Visualización usando VTK.
                                                             (line  350)
* third:                                 Funciones y variables para listas.
                                                             (line  617)
* throw:                                 Funciones y variables para la programación.
                                                             (line  560)
* time:                                  Funciones y variables para el entorno de ejecución.
                                                             (line  108)
* timedate:                              Funciones y variables para el entorno de ejecución.
                                                             (line  121)
* timedate <1>:                          Funciones y variables para el entorno de ejecución.
                                                             (line  122)
* timer:                                 Funciones y variables para depurado.
                                                             (line   74)
* timer <1>:                             Funciones y variables para depurado.
                                                             (line   75)
* timer <2>:                             Funciones y variables para depurado.
                                                             (line   76)
* timer_devalue:                         Funciones y variables para depurado.
                                                             (line  121)
* timer_info:                            Funciones y variables para depurado.
                                                             (line  135)
* timer_info <1>:                        Funciones y variables para depurado.
                                                             (line  136)
* title:                                 Funciones y variables para draw.
                                                             (line 1903)
* tldefint:                              Funciones y variables para integración.
                                                             (line  543)
* tlimit:                                Funciones y variables para límites.
                                                             (line   68)
* tlimit <1>:                            Funciones y variables para límites.
                                                             (line   69)
* tlimit <2>:                            Funciones y variables para límites.
                                                             (line   70)
* tlimswitch:                            Funciones y variables para límites.
                                                             (line   74)
* todd_coxeter:                          Funciones y variables para grupos.
                                                             (line    6)
* todd_coxeter <1>:                      Funciones y variables para grupos.
                                                             (line    7)
* toeplitz:                              Funciones y variables para linearalgebra.
                                                             (line  614)
* toeplitz <1>:                          Funciones y variables para linearalgebra.
                                                             (line  615)
* tokens:                                Funciones y variables para cadenas.
                                                             (line  322)
* tokens <1>:                            Funciones y variables para cadenas.
                                                             (line  323)
* topological_sort:                      Funciones y variables para graphs.
                                                             (line 1078)
* totaldisrep:                           Funciones y variables para polinomios.
                                                             (line 1440)
* totalfourier:                          Funciones y variables para series de Fourier.
                                                             (line   75)
* totient:                               Funciones y variables para teoría de números.
                                                             (line  511)
* to_lisp:                               Funciones y variables para la línea de comandos.
                                                             (line  613)
* to_poly:                               Funciones y variables para to_poly_solve.
                                                             (line  710)
* to_poly_solve:                         Funciones y variables para to_poly_solve.
                                                             (line  766)
* tpartpol:                              Funciones y variables para simetrías.
                                                             (line  850)
* tr:                                    Funciones y variables para ctensor.
                                                             (line 1182)
* trace:                                 Funciones y variables para depurado.
                                                             (line  157)
* trace <1>:                             Funciones y variables para depurado.
                                                             (line  158)
* trace <2>:                             Funciones y variables para depurado.
                                                             (line  159)
* tracematrix:                           Paquete functs.     (line   28)
* trace_options:                         Funciones y variables para depurado.
                                                             (line  187)
* trace_options <1>:                     Funciones y variables para depurado.
                                                             (line  188)
* track:                                 Visualización usando VTK.
                                                             (line  358)
* transcompile:                          Funciones y variables para la definición de funciones.
                                                             (line 1014)
* transform:                             Funciones y variables para draw.
                                                             (line 1918)
* transform_sample:                      Funciones y variables para el tratamiento de datos.
                                                             (line  242)
* transform_xy:                          Opciones gráficas.  (line  238)
* translate:                             Funciones y variables para la definición de funciones.
                                                             (line 1023)
* translate <1>:                         Funciones y variables para la definición de funciones.
                                                             (line 1024)
* translate <2>:                         Funciones y variables para la definición de funciones.
                                                             (line 1025)
* translate_file:                        Funciones y variables para la definición de funciones.
                                                             (line 1081)
* translate_file <1>:                    Funciones y variables para la definición de funciones.
                                                             (line 1082)
* transparent:                           Funciones y variables para draw.
                                                             (line 1960)
* transpose:                             Funciones y variables para las matrices y el álgebra lineal.
                                                             (line 1091)
* transrun:                              Funciones y variables para la definición de funciones.
                                                             (line 1133)
* treefale:                              Definiciones para IFS fractals.
                                                             (line   32)
* tree_reduce:                           Funciones y variables para los conjuntos.
                                                             (line 1270)
* tree_reduce <1>:                       Funciones y variables para los conjuntos.
                                                             (line 1271)
* treillis:                              Funciones y variables para simetrías.
                                                             (line  859)
* treinat:                               Funciones y variables para simetrías.
                                                             (line  867)
* triangle:                              Funciones y variables para draw.
                                                             (line 3629)
* triangularize:                         Funciones y variables para las matrices y el álgebra lineal.
                                                             (line 1103)
* trigexpand:                            Funciones y variables para trigonometría.
                                                             (line  227)
* trigexpandplus:                        Funciones y variables para trigonometría.
                                                             (line  260)
* trigexpandtimes:                       Funciones y variables para trigonometría.
                                                             (line  268)
* triginverses:                          Funciones y variables para trigonometría.
                                                             (line  276)
* trigrat:                               Funciones y variables para trigonometría.
                                                             (line  336)
* trigreduce:                            Funciones y variables para trigonometría.
                                                             (line  292)
* trigreduce <1>:                        Funciones y variables para trigonometría.
                                                             (line  293)
* trigsign:                              Funciones y variables para trigonometría.
                                                             (line  317)
* trigsimp:                              Funciones y variables para trigonometría.
                                                             (line  325)
* trivial_solutions:                     Funciones y variables para zeilberger.
                                                             (line  126)
* true:                                  Funciones y variables para Constantes.
                                                             (line  103)
* trunc:                                 Funciones y variables para las series.
                                                             (line  588)
* truncated_cube_graph:                  Funciones y variables para graphs.
                                                             (line  296)
* truncated_dodecahedron_graph:          Funciones y variables para graphs.
                                                             (line  299)
* truncated_icosahedron_graph:           Funciones y variables para graphs.
                                                             (line  302)
* truncated_tetrahedron_graph:           Funciones y variables para graphs.
                                                             (line  305)
* tr_array_as_ref:                       Funciones y variables para la definición de funciones.
                                                             (line 1140)
* tr_bound_function_applyp:              Funciones y variables para la definición de funciones.
                                                             (line 1150)
* tr_file_tty_messagesp:                 Funciones y variables para la definición de funciones.
                                                             (line 1161)
* tr_float_can_branch_complex:           Funciones y variables para la definición de funciones.
                                                             (line 1170)
* tr_function_call_default:              Funciones y variables para la definición de funciones.
                                                             (line 1176)
* tr_numer:                              Funciones y variables para la definición de funciones.
                                                             (line 1191)
* tr_optimize_max_loop:                  Funciones y variables para la definición de funciones.
                                                             (line 1197)
* tr_semicompile:                        Funciones y variables para la definición de funciones.
                                                             (line 1204)
* tr_state_vars:                         Funciones y variables para la definición de funciones.
                                                             (line 1211)
* tr_warnings_get:                       Funciones y variables para la definición de funciones.
                                                             (line 1225)
* tr_warn_bad_function_calls:            Funciones y variables para la definición de funciones.
                                                             (line 1229)
* tr_warn_fexpr:                         Funciones y variables para la definición de funciones.
                                                             (line 1236)
* tr_warn_meval:                         Funciones y variables para la definición de funciones.
                                                             (line 1242)
* tr_warn_mode:                          Funciones y variables para la definición de funciones.
                                                             (line 1248)
* tr_warn_undeclared:                    Funciones y variables para la definición de funciones.
                                                             (line 1254)
* tr_warn_undefined_variable:            Funciones y variables para la definición de funciones.
                                                             (line 1259)
* tstep:                                 Visualización usando VTK.
                                                             (line   99)
* ttyoff:                                Funciones y variables para la impresión.
                                                             (line  570)
* tube:                                  Funciones y variables para draw.
                                                             (line 3658)
* tutte_graph:                           Funciones y variables para graphs.
                                                             (line  308)
* ueivects:                              Funciones y variables para las matrices y el álgebra lineal.
                                                             (line 1126)
* ufg:                                   Funciones y variables para ctensor.
                                                             (line 1108)
* uforget:                               Funciones y variables para units.
                                                             (line  116)
* ug:                                    Funciones y variables para ctensor.
                                                             (line 1144)
* ultraspherical:                        Funciones y variables para polinomios ortogonales.
                                                             (line  206)
* und:                                   Funciones y variables para Constantes.
                                                             (line  107)
* underlying_graph:                      Funciones y variables para graphs.
                                                             (line  311)
* undiff:                                Funciones y variables para itensor.
                                                             (line  673)
* Unidad imaginaria:                     Funciones y variables para Constantes.
                                                             (line   12)
* union:                                 Funciones y variables para los conjuntos.
                                                             (line 1307)
* unique:                                Funciones y variables para listas.
                                                             (line  597)
* uniteigenvectors:                      Funciones y variables para las matrices y el álgebra lineal.
                                                             (line 1125)
* unitp:                                 Funciones y variables para ezunits.
                                                             (line  409)
* units:                                 Funciones y variables para ezunits.
                                                             (line  298)
* unitvector:                            Funciones y variables para las matrices y el álgebra lineal.
                                                             (line 1152)
* unit_step:                             Funciones y variables para polinomios ortogonales.
                                                             (line  198)
* unit_vectors:                          Funciones y variables para draw.
                                                             (line 1977)
* unknown:                               Funciones y variables para los predicados.
                                                             (line  178)
* unless:                                Funciones y variables para la programación.
                                                             (line  566)
* unorder:                               Funciones y variables para expresiones.
                                                             (line 1163)
* unsum:                                 Funciones y variables para las series.
                                                             (line  604)
* untellrat:                             Funciones y variables para polinomios.
                                                             (line 1449)
* untimer:                               Funciones y variables para depurado.
                                                             (line  105)
* untimer <1>:                           Funciones y variables para depurado.
                                                             (line  106)
* untrace:                               Funciones y variables para depurado.
                                                             (line  249)
* untrace <1>:                           Funciones y variables para depurado.
                                                             (line  250)
* uppercasep:                            Funciones y variables para caracteres.
                                                             (line   86)
* uric:                                  Funciones y variables para ctensor.
                                                             (line 1134)
* uricci:                                Funciones y variables para ctensor.
                                                             (line  203)
* uriem:                                 Funciones y variables para ctensor.
                                                             (line 1125)
* uriemann:                              Funciones y variables para ctensor.
                                                             (line  275)
* usersetunits:                          Funciones y variables para units.
                                                             (line  215)
* user_preamble:                         Funciones y variables para draw.
                                                             (line 1998)
* use_fast_arrays:                       Funciones y variables para los arrays.
                                                             (line  466)
* uvect:                                 Funciones y variables para las matrices y el álgebra lineal.
                                                             (line 1153)
* values:                                Funciones y variables para la línea de comandos.
                                                             (line  641)
* vandermonde_matrix:                    Funciones y variables para linearalgebra.
                                                             (line  633)
* var:                                   Funciones y variables de parámetros descriptivos.
                                                             (line   31)
* var <1>:                               Funciones y variables de parámetros descriptivos.
                                                             (line   32)
* var1:                                  Funciones y variables de parámetros descriptivos.
                                                             (line   51)
* var1 <1>:                              Funciones y variables de parámetros descriptivos.
                                                             (line   52)
* var_bernoulli:                         Funciones y variables para distribuciones discretas.
                                                             (line  250)
* var_beta:                              Funciones y variables para distribuciones continuas.
                                                             (line  745)
* var_binomial:                          Funciones y variables para distribuciones discretas.
                                                             (line  127)
* var_chi2:                              Funciones y variables para distribuciones continuas.
                                                             (line  305)
* var_continuous_uniform:                Funciones y variables para distribuciones continuas.
                                                             (line  800)
* var_discrete_uniform:                  Funciones y variables para distribuciones discretas.
                                                             (line  382)
* var_exp:                               Funciones y variables para distribuciones continuas.
                                                             (line  535)
* var_f:                                 Funciones y variables para distribuciones continuas.
                                                             (line  449)
* var_gamma:                             Funciones y variables para distribuciones continuas.
                                                             (line  680)
* var_general_finite_discrete:           Funciones y variables para distribuciones discretas.
                                                             (line   57)
* var_geometric:                         Funciones y variables para distribuciones discretas.
                                                             (line  328)
* var_gumbel:                            Funciones y variables para distribuciones continuas.
                                                             (line 1210)
* var_hypergeometric:                    Funciones y variables para distribuciones discretas.
                                                             (line  446)
* var_laplace:                           Funciones y variables para distribuciones continuas.
                                                             (line 1128)
* var_logistic:                          Funciones y variables para distribuciones continuas.
                                                             (line  853)
* var_lognormal:                         Funciones y variables para distribuciones continuas.
                                                             (line  622)
* var_negative_binomial:                 Funciones y variables para distribuciones discretas.
                                                             (line  506)
* var_noncentral_chi2:                   Funciones y variables para distribuciones continuas.
                                                             (line  386)
* var_noncentral_student_t:              Funciones y variables para distribuciones continuas.
                                                             (line  212)
* var_normal:                            Funciones y variables para distribuciones continuas.
                                                             (line   46)
* var_pareto:                            Funciones y variables para distribuciones continuas.
                                                             (line  904)
* var_poisson:                           Funciones y variables para distribuciones discretas.
                                                             (line  184)
* var_rayleigh:                          Funciones y variables para distribuciones continuas.
                                                             (line 1034)
* var_student_t:                         Funciones y variables para distribuciones continuas.
                                                             (line  107)
* var_weibull:                           Funciones y variables para distribuciones continuas.
                                                             (line  955)
* vector:                                Funciones y variables para draw.
                                                             (line 3681)
* vector <1>:                            Funciones y variables para draw.
                                                             (line 3682)
* vectorpotential:                       Funciones y variables para las matrices y el álgebra lineal.
                                                             (line 1164)
* vectorsimp:                            Funciones y variables para las matrices y el álgebra lineal.
                                                             (line 1170)
* verbify:                               Funciones y variables para expresiones.
                                                             (line 1200)
* verbose:                               Funciones y variables para las series.
                                                             (line  633)
* vers:                                  Paquete functs.     (line  159)
* vertex_color:                          Funciones y variables para graphs.
                                                             (line 1503)
* vertex_coloring:                       Funciones y variables para graphs.
                                                             (line 1528)
* vertex_coloring <1>:                   Funciones y variables para graphs.
                                                             (line 1169)
* vertex_coloring <2>:                   Funciones y variables para graphs.
                                                             (line 1310)
* vertex_connectivity:                   Funciones y variables para graphs.
                                                             (line 1095)
* vertex_degree:                         Funciones y variables para graphs.
                                                             (line 1100)
* vertex_distance:                       Funciones y variables para graphs.
                                                             (line 1103)
* vertex_eccentricity:                   Funciones y variables para graphs.
                                                             (line 1116)
* vertex_in_degree:                      Funciones y variables para graphs.
                                                             (line 1126)
* vertex_out_degree:                     Funciones y variables para graphs.
                                                             (line 1147)
* vertex_partition:                      Funciones y variables para graphs.
                                                             (line 1522)
* vertex_size:                           Funciones y variables para graphs.
                                                             (line 1500)
* vertex_type:                           Funciones y variables para graphs.
                                                             (line 1494)
* vertices:                              Funciones y variables para graphs.
                                                             (line 1160)
* vertices_to_cycle:                     Funciones y variables para graphs.
                                                             (line 1611)
* vertices_to_path:                      Funciones y variables para graphs.
                                                             (line 1607)
* view:                                  Funciones y variables para draw.
                                                             (line 2022)
* warnings:                              Funciones y variables para zeilberger.
                                                             (line  113)
* weyl:                                  Funciones y variables para ctensor.
                                                             (line 1148)
* weyl <1>:                              Funciones y variables para ctensor.
                                                             (line  289)
* wheel_graph:                           Funciones y variables para graphs.
                                                             (line  314)
* while:                                 Funciones y variables para la programación.
                                                             (line  565)
* width:                                 Visualización usando VTK.
                                                             (line  106)
* wiener_index:                          Funciones y variables para graphs.
                                                             (line 1183)
* windowname:                            Visualización usando VTK.
                                                             (line  112)
* windowtitle:                           Visualización usando VTK.
                                                             (line  120)
* wired_surface:                         Funciones y variables para draw.
                                                             (line 2047)
* wireframe:                             Visualización usando VTK.
                                                             (line  404)
* with_stdout:                           Funciones y variables para lectura y escritura.
                                                             (line  446)
* with_stdout <1>:                       Funciones y variables para lectura y escritura.
                                                             (line  447)
* writefile:                             Funciones y variables para lectura y escritura.
                                                             (line  473)
* write_binary_data:                     Funciones y variables para entrada y salida en formato binario.
                                                             (line   69)
* write_data:                            Funciones y variables para entrada y salida en formato texto.
                                                             (line   99)
* write_data <1>:                        Funciones y variables para entrada y salida en formato texto.
                                                             (line  100)
* wronskian:                             Paquete functs.     (line   14)
* x:                                     Opciones gráficas.  (line  247)
* xaxis:                                 Funciones y variables para draw.
                                                             (line 2072)
* xaxis_color:                           Funciones y variables para draw.
                                                             (line 2089)
* xaxis_secondary:                       Funciones y variables para draw.
                                                             (line 2107)
* xaxis_type:                            Funciones y variables para draw.
                                                             (line 2133)
* xaxis_width:                           Funciones y variables para draw.
                                                             (line 2151)
* xlabel:                                Opciones gráficas.  (line  256)
* xlabel <1>:                            Funciones y variables para draw.
                                                             (line 2169)
* xlabel_secondary:                      Funciones y variables para draw.
                                                             (line 2188)
* xlength:                               Visualización usando VTK.
                                                             (line  383)
* xrange:                                Funciones y variables para draw.
                                                             (line 2209)
* xrange_secondary:                      Funciones y variables para draw.
                                                             (line 2229)
* xreduce:                               Funciones y variables para los conjuntos.
                                                             (line 1335)
* xreduce <1>:                           Funciones y variables para los conjuntos.
                                                             (line 1336)
* xthru:                                 Funciones y variables para simplificación.
                                                             (line  637)
* xtics:                                 Funciones y variables para draw.
                                                             (line 2244)
* xtics_axis:                            Funciones y variables para draw.
                                                             (line 2302)
* xtics_rotate:                          Funciones y variables para draw.
                                                             (line 2312)
* xtics_rotate_secondary:                Funciones y variables para draw.
                                                             (line 2321)
* xtics_secondary:                       Funciones y variables para draw.
                                                             (line 2330)
* xtics_secondary_axis:                  Funciones y variables para draw.
                                                             (line 2338)
* xu_grid:                               Funciones y variables para draw.
                                                             (line 2348)
* xyplane:                               Funciones y variables para draw.
                                                             (line 2378)
* xy_file:                               Funciones y variables para draw.
                                                             (line 2367)
* x_voxel:                               Funciones y variables para draw.
                                                             (line 2064)
* y:                                     Opciones gráficas.  (line  265)
* yaxis:                                 Funciones y variables para draw.
                                                             (line 2403)
* yaxis_color:                           Funciones y variables para draw.
                                                             (line 2420)
* yaxis_secondary:                       Funciones y variables para draw.
                                                             (line 2438)
* yaxis_type:                            Funciones y variables para draw.
                                                             (line 2461)
* yaxis_width:                           Funciones y variables para draw.
                                                             (line 2479)
* ylabel:                                Opciones gráficas.  (line  272)
* ylabel <1>:                            Funciones y variables para draw.
                                                             (line 2497)
* ylabel_secondary:                      Funciones y variables para draw.
                                                             (line 2516)
* ylength:                               Visualización usando VTK.
                                                             (line  390)
* yrange:                                Funciones y variables para draw.
                                                             (line 2541)
* yrange_secondary:                      Funciones y variables para draw.
                                                             (line 2562)
* ytics:                                 Funciones y variables para draw.
                                                             (line 2589)
* ytics_axis:                            Funciones y variables para draw.
                                                             (line 2597)
* ytics_rotate:                          Funciones y variables para draw.
                                                             (line 2607)
* ytics_rotate_secondary:                Funciones y variables para draw.
                                                             (line 2616)
* ytics_secondary:                       Funciones y variables para draw.
                                                             (line 2625)
* ytics_secondary_axis:                  Funciones y variables para draw.
                                                             (line 2633)
* yv_grid:                               Funciones y variables para draw.
                                                             (line 2643)
* y_voxel:                               Funciones y variables para draw.
                                                             (line 2395)
* z:                                     Opciones gráficas.  (line  281)
* zaxis:                                 Funciones y variables para draw.
                                                             (line 2669)
* zaxis_color:                           Funciones y variables para draw.
                                                             (line 2688)
* zaxis_type:                            Funciones y variables para draw.
                                                             (line 2708)
* zaxis_width:                           Funciones y variables para draw.
                                                             (line 2727)
* Zeilberger:                            Funciones y variables para zeilberger.
                                                             (line   74)
* zeroa:                                 Funciones y variables para Constantes.
                                                             (line  118)
* zerob:                                 Funciones y variables para Constantes.
                                                             (line  134)
* zerobern:                              Funciones y variables para teoría de números.
                                                             (line  515)
* zeroequiv:                             Funciones y variables para los predicados.
                                                             (line  182)
* zerofor:                               Funciones y variables para linearalgebra.
                                                             (line  638)
* zerofor <1>:                           Funciones y variables para linearalgebra.
                                                             (line  639)
* zeromatrix:                            Funciones y variables para las matrices y el álgebra lineal.
                                                             (line 1202)
* zeromatrixp:                           Funciones y variables para linearalgebra.
                                                             (line  652)
* zeta:                                  Funciones y variables para teoría de números.
                                                             (line  522)
* zeta%pi:                               Funciones y variables para teoría de números.
                                                             (line  554)
* zlabel:                                Opciones gráficas.  (line  286)
* zlabel <1>:                            Funciones y variables para draw.
                                                             (line 2746)
* zlange:                                Funciones y variables para lapack.
                                                             (line  288)
* zlength:                               Visualización usando VTK.
                                                             (line  397)
* zn_add_table:                          Funciones y variables para teoría de números.
                                                             (line  574)
* zn_determinant:                        Funciones y variables para teoría de números.
                                                             (line  579)
* zn_invert_by_lu:                       Funciones y variables para teoría de números.
                                                             (line  607)
* zn_log:                                Funciones y variables para teoría de números.
                                                             (line  632)
* zn_log <1>:                            Funciones y variables para teoría de números.
                                                             (line  633)
* zn_mult_table:                         Funciones y variables para teoría de números.
                                                             (line  687)
* zn_mult_table <1>:                     Funciones y variables para teoría de números.
                                                             (line  688)
* zn_order:                              Funciones y variables para teoría de números.
                                                             (line  711)
* zn_order <1>:                          Funciones y variables para teoría de números.
                                                             (line  712)
* zn_power_table:                        Funciones y variables para teoría de números.
                                                             (line  760)
* zn_power_table <1>:                    Funciones y variables para teoría de números.
                                                             (line  761)
* zn_primroot:                           Funciones y variables para teoría de números.
                                                             (line  792)
* zn_primroot <1>:                       Funciones y variables para teoría de números.
                                                             (line  793)
* zn_primroot_limit:                     Funciones y variables para teoría de números.
                                                             (line  849)
* zn_primroot_p:                         Funciones y variables para teoría de números.
                                                             (line  857)
* zn_primroot_p <1>:                     Funciones y variables para teoría de números.
                                                             (line  858)
* zn_primroot_pretest:                   Funciones y variables para teoría de números.
                                                             (line  897)
* zn_primroot_verbose:                   Funciones y variables para teoría de números.
                                                             (line  909)
* zrange:                                Funciones y variables para draw.
                                                             (line 2765)
* ztics:                                 Funciones y variables para draw.
                                                             (line 2787)
* ztics_axis:                            Funciones y variables para draw.
                                                             (line 2795)
* ztics_rotate:                          Funciones y variables para draw.
                                                             (line 2805)
* z_voxel:                               Funciones y variables para draw.
                                                             (line 2662)

