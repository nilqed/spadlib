# Makefile.in generated by automake 1.13.4 from Makefile.am.
# @configure_input@

# Copyright (C) 1994-2013 Free Software Foundation, Inc.

# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.

@SET_MAKE@

# versioned installation directories


VPATH = @srcdir@
am__is_gnu_make = test -n '$(MAKEFILE_LIST)' && test -n '$(MAKELEVEL)'
am__make_running_with_option = \
  case $${target_option-} in \
      ?) ;; \
      *) echo "am__make_running_with_option: internal error: invalid" \
              "target option '$${target_option-}' specified" >&2; \
         exit 1;; \
  esac; \
  has_opt=no; \
  sane_makeflags=$$MAKEFLAGS; \
  if $(am__is_gnu_make); then \
    sane_makeflags=$$MFLAGS; \
  else \
    case $$MAKEFLAGS in \
      *\\[\ \	]*) \
        bs=\\; \
        sane_makeflags=`printf '%s\n' "$$MAKEFLAGS" \
          | sed "s/$$bs$$bs[$$bs $$bs	]*//g"`;; \
    esac; \
  fi; \
  skip_next=no; \
  strip_trailopt () \
  { \
    flg=`printf '%s\n' "$$flg" | sed "s/$$1.*$$//"`; \
  }; \
  for flg in $$sane_makeflags; do \
    test $$skip_next = yes && { skip_next=no; continue; }; \
    case $$flg in \
      *=*|--*) continue;; \
        -*I) strip_trailopt 'I'; skip_next=yes;; \
      -*I?*) strip_trailopt 'I';; \
        -*O) strip_trailopt 'O'; skip_next=yes;; \
      -*O?*) strip_trailopt 'O';; \
        -*l) strip_trailopt 'l'; skip_next=yes;; \
      -*l?*) strip_trailopt 'l';; \
      -[dEDm]) skip_next=yes;; \
      -[JT]) skip_next=yes;; \
    esac; \
    case $$flg in \
      *$$target_option*) has_opt=yes; break;; \
    esac; \
  done; \
  test $$has_opt = yes
am__make_dryrun = (target_option=n; $(am__make_running_with_option))
am__make_keepgoing = (target_option=k; $(am__make_running_with_option))
pkgdatadir = $(datadir)/@PACKAGE@
pkgincludedir = $(includedir)/@PACKAGE@
pkglibdir = $(libdir)/@PACKAGE@
pkglibexecdir = $(libexecdir)/@PACKAGE@
am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_HEADER = $(INSTALL_DATA)
transform = $(program_transform_name)
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
build_triplet = @build@
host_triplet = @host@
DIST_COMMON = $(top_srcdir)/common.mk $(srcdir)/Makefile.in \
	$(srcdir)/Makefile.am $(srcdir)/startmaxima_abcl.sh.in \
	$(srcdir)/maxima.bat.in $(srcdir)/maxima.in \
	$(srcdir)/rmaxima.in $(srcdir)/autoconf-variables.lisp.in \
	$(srcdir)/share-subdirs_autogenerated.lisp.in \
	$(srcdir)/lisp.in $(nobase_dist_instsrc_DATA)
@CLISP_TRUE@am__append_1 = $(CLISP_MAXIMA)
@CLISP_EXEC_FALSE@@CLISP_TRUE@am__append_2 = install-clisp-copy
@CLISP_EXEC_FALSE@@CLISP_TRUE@am__append_3 = uninstall-clisp-copy
@CLISP_TRUE@am__append_4 = $(CLISP_MAXIMA)
@CMUCL_TRUE@am__append_5 = $(CMU_MAXIMA) lisp
@CMUCL_TRUE@am__append_6 = $(CMU_MAXIMA)
@SCL_TRUE@am__append_7 = binary-scl/maxima.core
@SCL_TRUE@am__append_8 = install-scl-copy
@SCL_TRUE@am__append_9 = uninstall-scl-copy
@ACL_TRUE@am__append_10 = binary-acl/maxima.dxl
@SBCL_TRUE@am__append_11 = $(SBCL_MAXIMA)
@SBCL_TRUE@am__append_12 = $(SBCL_MAXIMA)
@GCL_TRUE@am__append_13 = binary-gcl/maxima
@GCL_TRUE@am__append_14 = binary-gcl/maxima
@OPENMCL_TRUE@am__append_15 = $(OPENMCL_MAXIMA)
@OPENMCL_TRUE@am__append_16 = $(OPENMCL_MAXIMA)
@CCL64_TRUE@am__append_17 = $(OPENMCL_MAXIMA)
@CCL64_TRUE@am__append_18 = $(CCL64_MAXIMA)
@ECL_TRUE@am__append_19 = binary-ecl/maxima
@ECL_TRUE@am__append_20 = binary-ecl/maxima
@ABCL_TRUE@am__append_21 = binary-abcl/maxima
@ABCL_TRUE@am__append_22 = binary-abcl/maxima
@ABCL_TRUE@am__append_23 = install-abcl-folder
@ABCL_TRUE@am__append_24 = uninstall-abcl-folder
subdir = src
ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
am__aclocal_m4_deps = $(top_srcdir)/configure.ac
am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \
	$(ACLOCAL_M4)
mkinstalldirs = $(install_sh) -d
CONFIG_CLEAN_FILES = startmaxima_abcl.sh maxima.bat maxima rmaxima \
	autoconf-variables.lisp share-subdirs_autogenerated.lisp lisp
CONFIG_CLEAN_VPATH_FILES =
am__vpath_adj_setup = srcdirstrip=`echo "$(srcdir)" | sed 's|.|.|g'`;
am__vpath_adj = case $$p in \
    $(srcdir)/*) f=`echo "$$p" | sed "s|^$$srcdirstrip/||"`;; \
    *) f=$$p;; \
  esac;
am__strip_dir = f=`echo $$p | sed -e 's|^.*/||'`;
am__install_max = 40
am__nobase_strip_setup = \
  srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*|]/\\\\&/g'`
am__nobase_strip = \
  for p in $$list; do echo "$$p"; done | sed -e "s|$$srcdirstrip/||"
am__nobase_list = $(am__nobase_strip_setup); \
  for p in $$list; do echo "$$p $$p"; done | \
  sed "s| $$srcdirstrip/| |;"' / .*\//!s/ .*/ ./; s,\( .*\)/[^/]*$$,\1,' | \
  $(AWK) 'BEGIN { files["."] = "" } { files[$$2] = files[$$2] " " $$1; \
    if (++n[$$2] == $(am__install_max)) \
      { print $$2, files[$$2]; n[$$2] = 0; files[$$2] = "" } } \
    END { for (dir in files) print dir, files[dir] }'
am__base_list = \
  sed '$$!N;$$!N;$$!N;$$!N;$$!N;$$!N;$$!N;s/\n/ /g' | \
  sed '$$!N;$$!N;$$!N;$$!N;s/\n/ /g'
am__uninstall_files_from_dir = { \
  test -z "$$files" \
    || { test ! -d "$$dir" && test ! -f "$$dir" && test ! -r "$$dir"; } \
    || { echo " ( cd '$$dir' && rm -f" $$files ")"; \
         $(am__cd) "$$dir" && rm -f $$files; }; \
  }
am__installdirs = "$(DESTDIR)$(abcllibdir)" "$(DESTDIR)$(bindir)" \
	"$(DESTDIR)$(ccl64libdir)" "$(DESTDIR)$(clisplibdir)" \
	"$(DESTDIR)$(cmucllibdir)" "$(DESTDIR)$(ecllibdir)" \
	"$(DESTDIR)$(gcllibdir)" "$(DESTDIR)$(openmcllibdir)" \
	"$(DESTDIR)$(sbcllibdir)" "$(DESTDIR)$(acllibdir)" \
	"$(DESTDIR)$(ccl64libdir)" "$(DESTDIR)$(clisplibdir)" \
	"$(DESTDIR)$(cmucllibdir)" "$(DESTDIR)$(instsrcdir)" \
	"$(DESTDIR)$(openmcllibdir)" "$(DESTDIR)$(sbcllibdir)" \
	"$(DESTDIR)$(scllibdir)"
SCRIPTS = $(abcllib_SCRIPTS) $(bin_SCRIPTS) $(ccl64lib_SCRIPTS) \
	$(clisplib_SCRIPTS) $(cmucllib_SCRIPTS) $(ecllib_SCRIPTS) \
	$(gcllib_SCRIPTS) $(openmcllib_SCRIPTS) $(sbcllib_SCRIPTS)
AM_V_P = $(am__v_P_@AM_V@)
am__v_P_ = $(am__v_P_@AM_DEFAULT_V@)
am__v_P_0 = false
am__v_P_1 = :
AM_V_GEN = $(am__v_GEN_@AM_V@)
am__v_GEN_ = $(am__v_GEN_@AM_DEFAULT_V@)
am__v_GEN_0 = @echo "  GEN     " $@;
am__v_GEN_1 = 
AM_V_at = $(am__v_at_@AM_V@)
am__v_at_ = $(am__v_at_@AM_DEFAULT_V@)
am__v_at_0 = @
am__v_at_1 = 
SOURCES =
DIST_SOURCES =
am__can_run_installinfo = \
  case $$AM_UPDATE_INFO_DIR in \
    n|no|NO) false;; \
    *) (install-info --version) >/dev/null 2>&1;; \
  esac
DATA = $(acllib_DATA) $(ccl64lib_DATA) $(clisplib_DATA) \
	$(cmucllib_DATA) $(nobase_dist_instsrc_DATA) \
	$(openmcllib_DATA) $(sbcllib_DATA) $(scllib_DATA)
am__tagged_files = $(HEADERS) $(SOURCES) $(TAGS_FILES) $(LISP)
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)
ABCL_JAR = @ABCL_JAR@
ACLOCAL = @ACLOCAL@
ACL_NAME = @ACL_NAME@
AMTAR = @AMTAR@
AM_DEFAULT_VERBOSITY = @AM_DEFAULT_VERBOSITY@
AUTOCONF = @AUTOCONF@
AUTOHEADER = @AUTOHEADER@
AUTOMAKE = @AUTOMAKE@
AWK = @AWK@
CAT = @CAT@
CCL64_NAME = @CCL64_NAME@
CLISP_NAME = @CLISP_NAME@
CLISP_RUNTIME = @CLISP_RUNTIME@
CLISP_RUNTIME_PATH = @CLISP_RUNTIME_PATH@
CMUCL_EXEC = @CMUCL_EXEC@
CMUCL_NAME = @CMUCL_NAME@
CMUCL_RUNTIME = @CMUCL_RUNTIME@
CMUCL_RUNTIME_PATH = @CMUCL_RUNTIME_PATH@
CYGPATH_W = @CYGPATH_W@
DEFAULTLISP = @DEFAULTLISP@
DEFS = @DEFS@
DISTCLEAN_EXTRA_SRC_FILES = @DISTCLEAN_EXTRA_SRC_FILES@
ECHO_C = @ECHO_C@
ECHO_N = @ECHO_N@
ECHO_T = @ECHO_T@
ECL_NAME = @ECL_NAME@
EGREP = @EGREP@
EMACS = @EMACS@
EMACSDIR = @EMACSDIR@
EMACSLOADPATH = @EMACSLOADPATH@
EXEEXT = @EXEEXT@
GCCVER = @GCCVER@
GCL_NAME = @GCL_NAME@
GREP = @GREP@
HHC = @HHC@
IMGKIT = @IMGKIT@
INSTALL = @INSTALL@
INSTALL_DATA = @INSTALL_DATA@
INSTALL_PROGRAM = @INSTALL_PROGRAM@
INSTALL_SCRIPT = @INSTALL_SCRIPT@
INSTALL_STRIP_PROGRAM = @INSTALL_STRIP_PROGRAM@
JRE = @JRE@
LDFLAGS = @LDFLAGS@
LIBOBJS = @LIBOBJS@
LIBS = @LIBS@
LTLIBOBJS = @LTLIBOBJS@
MAKEINFO = @MAKEINFO@
MKDIR_P = @MKDIR_P@
OPENMCL_NAME = @OPENMCL_NAME@
PACKAGE = @PACKAGE@
PACKAGE_BUGREPORT = @PACKAGE_BUGREPORT@
PACKAGE_NAME = @PACKAGE_NAME@
PACKAGE_STRING = @PACKAGE_STRING@
PACKAGE_TARNAME = @PACKAGE_TARNAME@
PACKAGE_URL = @PACKAGE_URL@
PACKAGE_VERSION = @PACKAGE_VERSION@
PATH_SEPARATOR = @PATH_SEPARATOR@
POSIX_SHELL = @POSIX_SHELL@
PYTHON = @PYTHON@
PYTHON_EXEC_PREFIX = @PYTHON_EXEC_PREFIX@
PYTHON_PLATFORM = @PYTHON_PLATFORM@
PYTHON_PREFIX = @PYTHON_PREFIX@
PYTHON_VERSION = @PYTHON_VERSION@
SBCL_EXTRA_ARGS = @SBCL_EXTRA_ARGS@
SBCL_NAME = @SBCL_NAME@
SCL_NAME = @SCL_NAME@
SCL_RUNTIME = @SCL_RUNTIME@
SCL_RUNTIME_PATH = @SCL_RUNTIME_PATH@
SDXKIT = @SDXKIT@
SED = @SED@
SET_MAKE = @SET_MAKE@
SHELL = @SHELL@
STRIP = @STRIP@
TCLKITSH = @TCLKITSH@
TCLKIT_RUNTIME = @TCLKIT_RUNTIME@
VERSION = @VERSION@
WISH = @WISH@
abs_builddir = @abs_builddir@
abs_srcdir = @abs_srcdir@
abs_top_builddir = @abs_top_builddir@
abs_top_srcdir = @abs_top_srcdir@
acl_found = @acl_found@
am__leading_dot = @am__leading_dot@
am__tar = @am__tar@
am__untar = @am__untar@
bindir = @bindir@
build = @build@
build_alias = @build_alias@
build_cpu = @build_cpu@
build_os = @build_os@
build_vendor = @build_vendor@
builddir = @builddir@
ccl64_found = @ccl64_found@
clisp_found = @clisp_found@
cmucl_found = @cmucl_found@
datadir = @datadir@
datarootdir = @datarootdir@
default_layout_autotools = @default_layout_autotools@
default_sharedirs = @default_sharedirs@
docdir = $(verpkgdatadir)/doc
dvidir = @dvidir@
ecl_found = @ecl_found@
exec_prefix = @exec_prefix@
expanded_datadir = @expanded_datadir@
expanded_exec_prefix = @expanded_exec_prefix@
expanded_infodir = @expanded_infodir@
expanded_libdir = @expanded_libdir@
expanded_libexecdir = @expanded_libexecdir@
expanded_top_srcdir = @expanded_top_srcdir@
gcl_found = @gcl_found@
git_found = @git_found@
hhc_found = @hhc_found@
host = @host@
host_alias = @host_alias@
host_cpu = @host_cpu@
host_os = @host_os@
host_vendor = @host_vendor@
htmldir = @htmldir@
iconv_found = @iconv_found@
includedir = @includedir@
infodir = @infodir@
install_sh = @install_sh@
lang_es = @lang_es@
lang_pt = @lang_pt@
lang_pt_br = @lang_pt_br@
libdir = @libdir@
libexecdir = @libexecdir@
lisp_only_build = @lisp_only_build@
lispdir = @lispdir@
lisps_enabled = @lisps_enabled@
localedir = @localedir@
localstatedir = @localstatedir@
mandir = @mandir@
manual_version = @manual_version@
mathjax_enable = @mathjax_enable@
mathjax_script = @mathjax_script@
mkdir_p = @mkdir_p@
oldincludedir = @oldincludedir@
openmcl_found = @openmcl_found@
pdfdir = @pdfdir@
pkgpyexecdir = @pkgpyexecdir@
pkgpythondir = @pkgpythondir@
prefix = @prefix@
program_transform_name = @program_transform_name@
psdir = @psdir@
pyexecdir = @pyexecdir@
pythondir = @pythondir@
recode_found = @recode_found@
sbcl_found = @sbcl_found@
sbindir = @sbindir@
scl_found = @scl_found@
sharedstatedir = @sharedstatedir@
srcdir = @srcdir@
sysconfdir = @sysconfdir@
target_alias = @target_alias@
top_build_prefix = @top_build_prefix@
top_builddir = @top_builddir@
top_srcdir = @top_srcdir@
win32 = @win32@
win64 = @win64@
win64_installer = @win64_installer@
verpkglibdir = $(pkglibdir)/@VERSION@
verpkglibexecdir = $(libexecdir)/@PACKAGE@/@VERSION@
verpkgdatadir = $(pkgdatadir)/@VERSION@
docchmdir = $(docdir)/chm
dochtmldir = $(docdir)/html
docsharedir = $(docdir)/share
demodir = $(verpkgdatadir)/demo
emacsdir = $(EMACSDIR)
sharedir = $(verpkgdatadir)/share
instsrcdir = $(verpkgdatadir)/src
xmaximadir = $(verpkgdatadir)/xmaxima
insttestsdir = $(verpkgdatadir)/tests
@WIN32_FALSE@bin_SCRIPTS = maxima rmaxima
@WIN32_TRUE@bin_SCRIPTS = maxima-command.ico maxima.bat set_lang.vbs
real_lisp_sources := $(shell echo *.lisp $(srcdir)/numerical/*.lisp $(srcdir)/numerical/slatec/*.lisp)
nobase_dist_instsrc_DATA = $(real_lisp_sources)
EXTRA_DIST = \
  maxima.asd maxima.system \
  numerical/slatec/fortran \
  maxima-build.lisp maxima-command.ico set_lang.vbs \
  lisp \
  share-subdirs.lisp

EXTRA_SCRIPTS = $(am__append_1) $(am__append_5) $(am__append_11) \
	$(am__append_13) $(am__append_15) $(am__append_17) \
	$(am__append_19) $(am__append_21)
BUILT_FILES = $(am__append_4) $(am__append_6) $(am__append_7) \
	$(am__append_10) $(am__append_12) $(am__append_14) \
	$(am__append_16) $(am__append_18) $(am__append_20) \
	$(am__append_22)
DISTCLEAN_FILES = $(DISTCLEAN_EXTRA_SRC_FILES)
CLEAN_TARGETS = clean-clisp clean-cmucl clean-scl clean-acl clean-sbcl \
	clean-gcl clean-openmcl clean-ccl64 clean-ecl clean-abcl
DEPENDS_FILES = \
  clisp-depends.mk cmucl-depends.mk scl-depends.mk acl-depends.mk \
  sbcl-depends.mk gcl-depends.mk openmcl-depends.mk ecl-depends.mk abcl-depends.mk

CLEANFILES = $(DEPENDS_FILES) tools/sys-proclaim.lisp
WEIRD_INSTALL_TARGETS = $(am__append_2) $(am__append_8) \
	$(am__append_23)
WEIRD_UNINSTALL_TARGETS = $(am__append_3) $(am__append_9) \
	$(am__append_24)
binary_subdirs = / /numerical /numerical/slatec
LOADDEFSYSTEM = (load "$(top_srcdir)/lisp-utils/defsystem.lisp") (mk:add-registry-location "$(top_srcdir)/src/")
LOADMAKEDEPENDS = (load "$(top_srcdir)/lisp-utils/make-depends.lisp")
DS_OOS = funcall (intern (symbol-name :operate-on-system) :mk) "maxima"
@QUIET_BUILD_TRUE@QUIET = "(setf *compile-print* nil) (setq *compile-verbose* nil)"
@QUIET_BUILD_FALSE@DEFSYSTEMCOMPILE = ($(DS_OOS) :compile :verbose t)
@QUIET_BUILD_TRUE@DEFSYSTEMCOMPILE = ($(DS_OOS) :compile :verbose nil)
@QUIET_BUILD_FALSE@DEFSYSTEMLOAD = ($(DS_OOS) :load :verbose t)
@QUIET_BUILD_TRUE@DEFSYSTEMLOAD = ($(DS_OOS) :load :verbose nil )
DEFSYSTEMTESTLOAD = ($(DS_OOS) :load :verbose t :test t)
MAKE_DEPENDS = '$(LOADDEFSYSTEM) $(LOADMAKEDEPENDS) (funcall (intern "CREATE-DEPENDENCY-FILE" :mk) $(1) "$(2)") $(3)'
@CLISP_EXEC_FALSE@@CLISP_TRUE@CLISP_MAXIMA = binary-clisp/maxima.mem
@CLISP_EXEC_TRUE@@CLISP_TRUE@CLISP_MAXIMA = binary-clisp/maxima$(EXEEXT)
@CLISP_EXEC_TRUE@@CLISP_TRUE@clisplib_SCRIPTS = $(CLISP_MAXIMA)
@CLISP_EXEC_FALSE@@CLISP_TRUE@clispexeflag = 
@CLISP_EXEC_TRUE@@CLISP_TRUE@clispexeflag = :EXECUTABLE t
@CLISP_EXEC_FALSE@@CLISP_TRUE@clisplib_DATA = $(CLISP_MAXIMA)
@CLISP_TRUE@EXECUTECLISP = $(CLISP_NAME) -norc -q
@CLISP_TRUE@clisplibdir = $(verpkglibdir)/binary-clisp
@CMUCL_EXEC_FALSE@@CMUCL_TRUE@CMU_MAXIMA = binary-cmucl/maxima.core
@CMUCL_EXEC_TRUE@@CMUCL_TRUE@CMU_MAXIMA = binary-cmucl/maxima
@CMUCL_EXEC_FALSE@@CMUCL_TRUE@cmucllib_SCRIPTS = lisp
@CMUCL_EXEC_TRUE@@CMUCL_TRUE@cmucllib_SCRIPTS = $(CMU_MAXIMA)
@CMUCL_EXEC_FALSE@@CMUCL_TRUE@cmuflag = 
@CMUCL_EXEC_TRUE@@CMUCL_TRUE@cmuflag = :executable t :init-function '\''cl-user::run
@CMUCL_EXEC_FALSE@@CMUCL_TRUE@cmucllib_DATA = $(CMU_MAXIMA)

# Newer versions of CMUCL have an INTL package that is compatible with
# maxima's.  We just bind intl::*default-domain* here so that when we
# compile the files, we will get appropriate translations.  (Otherwise
# we have to put (intl:textdomain "maxima") in each Lisp file.
@CMUCL_TRUE@INITINTL = (when (find-package "INTL") (set (find-symbol "*DEFAULT-DOMAIN*" "INTL") "maxima"))
@CMUCL_TRUE@CMU_COMPILE = echo '$(QUIET) $(INITINTL) $(LOADDEFSYSTEM) $(DEFSYSTEMCOMPILE)' | $(EXECUTECMUCL)
@CMUCL_TRUE@CMU_WRITE = echo '$(LOADDEFSYSTEM) $(DEFSYSTEMLOAD) (ext:save-lisp "$(CMU_MAXIMA)" $(cmuflag))' | $(EXECUTECMUCL)
@CMUCL_TRUE@CMU_BUILD = ($(CMU_COMPILE)) && ($(CMU_WRITE))
@CMUCL_TRUE@EXECUTECMUCL = $(CMUCL_NAME) -noinit -batch
@CMUCL_TRUE@cmucllibdir = $(verpkglibdir)/binary-cmucl
@SCL_TRUE@scllibdir = $(verpkglibdir)/binary-scl
@SCL_TRUE@EXECUTESCL = $(SCL_NAME) -noinit -batch
@SCL_TRUE@scllib_DATA = binary-scl/maxima.core
@ACL_TRUE@acllibdir = $(verpkglibdir)/binary-acl
@ACL_TRUE@EXECUTEACL = $(ACL_NAME) -batch
@ACL_TRUE@acllib_DATA = binary-acl/maxima.dxl
@SBCL_TRUE@sbcllibdir = $(verpkglibdir)/binary-sbcl
@SBCL_EXEC_FALSE@@SBCL_TRUE@SBCL_MAXIMA = binary-sbcl/maxima.core
@SBCL_EXEC_TRUE@@SBCL_TRUE@SBCL_MAXIMA = binary-sbcl/maxima$(EXEEXT)
@SBCL_EXEC_TRUE@@SBCL_TRUE@sbcllib_SCRIPTS = $(SBCL_MAXIMA)
@SBCL_EXEC_FALSE@@SBCL_TRUE@sb_slad = (sb-ext:save-lisp-and-die "$@")
@SBCL_EXEC_TRUE@@SBCL_TRUE@sb_slad = (sb-ext:save-lisp-and-die "$@" :executable t)
@SBCL_EXEC_FALSE@@SBCL_TRUE@sbcllib_DATA = $(SBCL_MAXIMA)
@SBCL_TRUE@EXECUTESBCL = "$(SBCL_NAME)" --noinform --noprint $(SBCL_EXTRA_ARGS)
@SBCL_TRUE@COMPILE_SBCL = echo '$(QUIET) $(LOADDEFSYSTEM) $(DEFSYSTEMCOMPILE) (sb-ext:quit)' | $(EXECUTESBCL) 
@SBCL_TRUE@WRITE_SBCL = echo '$(LOADDEFSYSTEM) $(DEFSYSTEMLOAD) $(sb_slad) (sb-ext:quit)' | $(EXECUTESBCL)
@SBCL_TRUE@BUILD_SBCL = $(COMPILE_SBCL) && $(WRITE_SBCL)

#
# For gcl we execute all commands from a temp file for the following motive:
#
# Some versions of GCL 2.6.12 don't automatically close at the end of a lisp
# file that contains the commands needed for compiling maxima and crash if
# they reach a (quit). In newer versions of 2.6.12 sending the (quit) from the
# command-line causes a crash.
# GCL's --eval switch adds an implicit (progn) that breaks defsystem's
# (mk:add-registry-location).
# And when executing commands from stdin some GCL versions get the
# end-of-file from the end of the command list too early and therefore close
# before the last command has been processed.
# Providing all commands from the command-line and ending them with a
# (quit) so it doesn't matter if lisp automatically closes at the last
# or the second last command seems to work, though.
@GCL_TRUE@gcllibdir = $(verpkglibdir)/binary-gcl
@GCL_TRUE@gcllib_SCRIPTS = binary-gcl/maxima
@GCL_TRUE@EXECUTEGCL = $(GCL_NAME)
@GCL_TRUE@sys_proc_dependency = tools/sys-proclaim.lisp
@GCL_TRUE@gcl_depends_targets = (list "binary-gcl/maxima" "tools/sys-proclaim.lisp")
@OPENMCL_TRUE@openmcllibdir = $(verpkglibdir)/binary-openmcl
@OPENMCL_EXEC_FALSE@@OPENMCL_TRUE@OPENMCL_MAXIMA = binary-openmcl/maxima.image
@OPENMCL_EXEC_TRUE@@OPENMCL_TRUE@OPENMCL_MAXIMA = binary-openmcl/maxima$(EXEEXT)
@OPENMCL_EXEC_TRUE@@OPENMCL_TRUE@openmcllib_SCRIPTS = $(OPENMCL_MAXIMA)
@CCL64_EXEC_FALSE@@CCL64_TRUE@omcl_flag = 
@CCL64_EXEC_TRUE@@CCL64_TRUE@omcl_flag = :prepend-kernel t
@OPENMCL_EXEC_FALSE@@OPENMCL_TRUE@omcl_flag = 
@OPENMCL_EXEC_TRUE@@OPENMCL_TRUE@omcl_flag = :prepend-kernel t
@OPENMCL_EXEC_FALSE@@OPENMCL_TRUE@openmcllib_DATA = $(OPENMCL_MAXIMA)
@OPENMCL_TRUE@EXECUTEOPENMCL = $(OPENMCL_NAME)
@OPENMCL_TRUE@COMPILE_OMCL = echo '$(QUIET) (require :defsystem) (mk:add-registry-location "$(top_srcdir)/src/") $(DEFSYSTEMCOMPILE) (ccl::quit)' | $(EXECUTEOPENMCL)
@OPENMCL_TRUE@WRITE_OMCL = echo '(require :defsystem) (mk:add-registry-location "$(top_srcdir)/src/") $(DEFSYSTEMLOAD) (ccl:save-application "$@") (ccl::quit)' | $(EXECUTEOPENMCL)
@OPENMCL_TRUE@BUILD_OMCL = $(COMPILE_OMCL) && $(WRITE_OMCL)
@CCL64_TRUE@ccl64libdir = $(verpkglibdir)/binary-ccl64
@CCL64_EXEC_FALSE@@CCL64_TRUE@CCL64_MAXIMA = binary-ccl64/maxima.image
@CCL64_EXEC_TRUE@@CCL64_TRUE@CCL64_MAXIMA = binary-ccl64/maxima$(EXEEXT)
@CCL64_EXEC_TRUE@@CCL64_TRUE@ccl64lib_SCRIPTS = $(CCL64_MAXIMA)
@CCL64_EXEC_FALSE@@CCL64_TRUE@ccl64lib_DATA = $(CCL64_MAXIMA)
@CCL64_TRUE@EXECUTECCL64 = $(CCL64_NAME)
@CCL64_TRUE@COMPILE_CCL64 = echo '$(QUIET) (require :defsystem) (mk:add-registry-location "$(top_srcdir)/src/") $(DEFSYSTEMCOMPILE) (ccl::quit)' | $(EXECUTECCL64)
@CCL64_TRUE@WRITE_CCL64 = echo '(require :defsystem) (mk:add-registry-location "$(top_srcdir)/src/") $(DEFSYSTEMLOAD) (ccl:save-application "$@") (ccl::quit)' | $(EXECUTECCL64)
@CCL64_TRUE@BUILD_CCL64 = $(COMPILE_CCL64) && $(WRITE_CCL64)
@ECL_TRUE@ecllibdir = $(verpkglibdir)/binary-ecl
@ECL_TRUE@ecllib_SCRIPTS = binary-ecl/maxima
@ECL_TRUE@EXECUTEECL = $(ECL_NAME) -norc

# ABCL compiles the individual files maxima is comprised of. But they aren't 
# compiled into a single .jar archive, but need to be loaded by abcl in the
# right order => We need to copy all the stuff defsystem needs into the binary
# folder and need to use defsystem for loading all the files in the Right Order.
@ABCL_TRUE@abcllibdir = $(verpkglibdir)/binary-abcl
@ABCL_TRUE@abcllib_SCRIPTS = binary-abcl/maxima
@ABCL_TRUE@EXECUTEABCL = $(JRE) -jar $(ABCL_JAR) --noinit
all: all-am

.SUFFIXES:
$(srcdir)/Makefile.in:  $(srcdir)/Makefile.am $(top_srcdir)/common.mk $(am__configure_deps)
	@for dep in $?; do \
	  case '$(am__configure_deps)' in \
	    *$$dep*) \
	      ( cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh ) \
	        && { if test -f $@; then exit 0; else break; fi; }; \
	      exit 1;; \
	  esac; \
	done; \
	echo ' cd $(top_srcdir) && $(AUTOMAKE) --gnu src/Makefile'; \
	$(am__cd) $(top_srcdir) && \
	  $(AUTOMAKE) --gnu src/Makefile
.PRECIOUS: Makefile
Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
	@case '$?' in \
	  *config.status*) \
	    cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh;; \
	  *) \
	    echo ' cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe)'; \
	    cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe);; \
	esac;
$(top_srcdir)/common.mk:

$(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh

$(top_srcdir)/configure:  $(am__configure_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(ACLOCAL_M4):  $(am__aclocal_m4_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(am__aclocal_m4_deps):
startmaxima_abcl.sh: $(top_builddir)/config.status $(srcdir)/startmaxima_abcl.sh.in
	cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@
maxima.bat: $(top_builddir)/config.status $(srcdir)/maxima.bat.in
	cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@
maxima: $(top_builddir)/config.status $(srcdir)/maxima.in
	cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@
rmaxima: $(top_builddir)/config.status $(srcdir)/rmaxima.in
	cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@
autoconf-variables.lisp: $(top_builddir)/config.status $(srcdir)/autoconf-variables.lisp.in
	cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@
share-subdirs_autogenerated.lisp: $(top_builddir)/config.status $(srcdir)/share-subdirs_autogenerated.lisp.in
	cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@
lisp: $(top_builddir)/config.status $(srcdir)/lisp.in
	cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@
install-abcllibSCRIPTS: $(abcllib_SCRIPTS)
	@$(NORMAL_INSTALL)
	@list='$(abcllib_SCRIPTS)'; test -n "$(abcllibdir)" || list=; \
	if test -n "$$list"; then \
	  echo " $(MKDIR_P) '$(DESTDIR)$(abcllibdir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(abcllibdir)" || exit 1; \
	fi; \
	for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  if test -f "$$d$$p"; then echo "$$d$$p"; echo "$$p"; else :; fi; \
	done | \
	sed -e 'p;s,.*/,,;n' \
	    -e 'h;s|.*|.|' \
	    -e 'p;x;s,.*/,,;$(transform)' | sed 'N;N;N;s,\n, ,g' | \
	$(AWK) 'BEGIN { files["."] = ""; dirs["."] = 1; } \
	  { d=$$3; if (dirs[d] != 1) { print "d", d; dirs[d] = 1 } \
	    if ($$2 == $$4) { files[d] = files[d] " " $$1; \
	      if (++n[d] == $(am__install_max)) { \
		print "f", d, files[d]; n[d] = 0; files[d] = "" } } \
	    else { print "f", d "/" $$4, $$1 } } \
	  END { for (d in files) print "f", d, files[d] }' | \
	while read type dir files; do \
	     if test "$$dir" = .; then dir=; else dir=/$$dir; fi; \
	     test -z "$$files" || { \
	       echo " $(INSTALL_SCRIPT) $$files '$(DESTDIR)$(abcllibdir)$$dir'"; \
	       $(INSTALL_SCRIPT) $$files "$(DESTDIR)$(abcllibdir)$$dir" || exit $$?; \
	     } \
	; done

uninstall-abcllibSCRIPTS:
	@$(NORMAL_UNINSTALL)
	@list='$(abcllib_SCRIPTS)'; test -n "$(abcllibdir)" || exit 0; \
	files=`for p in $$list; do echo "$$p"; done | \
	       sed -e 's,.*/,,;$(transform)'`; \
	dir='$(DESTDIR)$(abcllibdir)'; $(am__uninstall_files_from_dir)
install-binSCRIPTS: $(bin_SCRIPTS)
	@$(NORMAL_INSTALL)
	@list='$(bin_SCRIPTS)'; test -n "$(bindir)" || list=; \
	if test -n "$$list"; then \
	  echo " $(MKDIR_P) '$(DESTDIR)$(bindir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(bindir)" || exit 1; \
	fi; \
	for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  if test -f "$$d$$p"; then echo "$$d$$p"; echo "$$p"; else :; fi; \
	done | \
	sed -e 'p;s,.*/,,;n' \
	    -e 'h;s|.*|.|' \
	    -e 'p;x;s,.*/,,;$(transform)' | sed 'N;N;N;s,\n, ,g' | \
	$(AWK) 'BEGIN { files["."] = ""; dirs["."] = 1; } \
	  { d=$$3; if (dirs[d] != 1) { print "d", d; dirs[d] = 1 } \
	    if ($$2 == $$4) { files[d] = files[d] " " $$1; \
	      if (++n[d] == $(am__install_max)) { \
		print "f", d, files[d]; n[d] = 0; files[d] = "" } } \
	    else { print "f", d "/" $$4, $$1 } } \
	  END { for (d in files) print "f", d, files[d] }' | \
	while read type dir files; do \
	     if test "$$dir" = .; then dir=; else dir=/$$dir; fi; \
	     test -z "$$files" || { \
	       echo " $(INSTALL_SCRIPT) $$files '$(DESTDIR)$(bindir)$$dir'"; \
	       $(INSTALL_SCRIPT) $$files "$(DESTDIR)$(bindir)$$dir" || exit $$?; \
	     } \
	; done

uninstall-binSCRIPTS:
	@$(NORMAL_UNINSTALL)
	@list='$(bin_SCRIPTS)'; test -n "$(bindir)" || exit 0; \
	files=`for p in $$list; do echo "$$p"; done | \
	       sed -e 's,.*/,,;$(transform)'`; \
	dir='$(DESTDIR)$(bindir)'; $(am__uninstall_files_from_dir)
install-ccl64libSCRIPTS: $(ccl64lib_SCRIPTS)
	@$(NORMAL_INSTALL)
	@list='$(ccl64lib_SCRIPTS)'; test -n "$(ccl64libdir)" || list=; \
	if test -n "$$list"; then \
	  echo " $(MKDIR_P) '$(DESTDIR)$(ccl64libdir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(ccl64libdir)" || exit 1; \
	fi; \
	for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  if test -f "$$d$$p"; then echo "$$d$$p"; echo "$$p"; else :; fi; \
	done | \
	sed -e 'p;s,.*/,,;n' \
	    -e 'h;s|.*|.|' \
	    -e 'p;x;s,.*/,,;$(transform)' | sed 'N;N;N;s,\n, ,g' | \
	$(AWK) 'BEGIN { files["."] = ""; dirs["."] = 1; } \
	  { d=$$3; if (dirs[d] != 1) { print "d", d; dirs[d] = 1 } \
	    if ($$2 == $$4) { files[d] = files[d] " " $$1; \
	      if (++n[d] == $(am__install_max)) { \
		print "f", d, files[d]; n[d] = 0; files[d] = "" } } \
	    else { print "f", d "/" $$4, $$1 } } \
	  END { for (d in files) print "f", d, files[d] }' | \
	while read type dir files; do \
	     if test "$$dir" = .; then dir=; else dir=/$$dir; fi; \
	     test -z "$$files" || { \
	       echo " $(INSTALL_SCRIPT) $$files '$(DESTDIR)$(ccl64libdir)$$dir'"; \
	       $(INSTALL_SCRIPT) $$files "$(DESTDIR)$(ccl64libdir)$$dir" || exit $$?; \
	     } \
	; done

uninstall-ccl64libSCRIPTS:
	@$(NORMAL_UNINSTALL)
	@list='$(ccl64lib_SCRIPTS)'; test -n "$(ccl64libdir)" || exit 0; \
	files=`for p in $$list; do echo "$$p"; done | \
	       sed -e 's,.*/,,;$(transform)'`; \
	dir='$(DESTDIR)$(ccl64libdir)'; $(am__uninstall_files_from_dir)
install-clisplibSCRIPTS: $(clisplib_SCRIPTS)
	@$(NORMAL_INSTALL)
	@list='$(clisplib_SCRIPTS)'; test -n "$(clisplibdir)" || list=; \
	if test -n "$$list"; then \
	  echo " $(MKDIR_P) '$(DESTDIR)$(clisplibdir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(clisplibdir)" || exit 1; \
	fi; \
	for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  if test -f "$$d$$p"; then echo "$$d$$p"; echo "$$p"; else :; fi; \
	done | \
	sed -e 'p;s,.*/,,;n' \
	    -e 'h;s|.*|.|' \
	    -e 'p;x;s,.*/,,;$(transform)' | sed 'N;N;N;s,\n, ,g' | \
	$(AWK) 'BEGIN { files["."] = ""; dirs["."] = 1; } \
	  { d=$$3; if (dirs[d] != 1) { print "d", d; dirs[d] = 1 } \
	    if ($$2 == $$4) { files[d] = files[d] " " $$1; \
	      if (++n[d] == $(am__install_max)) { \
		print "f", d, files[d]; n[d] = 0; files[d] = "" } } \
	    else { print "f", d "/" $$4, $$1 } } \
	  END { for (d in files) print "f", d, files[d] }' | \
	while read type dir files; do \
	     if test "$$dir" = .; then dir=; else dir=/$$dir; fi; \
	     test -z "$$files" || { \
	       echo " $(INSTALL_SCRIPT) $$files '$(DESTDIR)$(clisplibdir)$$dir'"; \
	       $(INSTALL_SCRIPT) $$files "$(DESTDIR)$(clisplibdir)$$dir" || exit $$?; \
	     } \
	; done

uninstall-clisplibSCRIPTS:
	@$(NORMAL_UNINSTALL)
	@list='$(clisplib_SCRIPTS)'; test -n "$(clisplibdir)" || exit 0; \
	files=`for p in $$list; do echo "$$p"; done | \
	       sed -e 's,.*/,,;$(transform)'`; \
	dir='$(DESTDIR)$(clisplibdir)'; $(am__uninstall_files_from_dir)
install-cmucllibSCRIPTS: $(cmucllib_SCRIPTS)
	@$(NORMAL_INSTALL)
	@list='$(cmucllib_SCRIPTS)'; test -n "$(cmucllibdir)" || list=; \
	if test -n "$$list"; then \
	  echo " $(MKDIR_P) '$(DESTDIR)$(cmucllibdir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(cmucllibdir)" || exit 1; \
	fi; \
	for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  if test -f "$$d$$p"; then echo "$$d$$p"; echo "$$p"; else :; fi; \
	done | \
	sed -e 'p;s,.*/,,;n' \
	    -e 'h;s|.*|.|' \
	    -e 'p;x;s,.*/,,;$(transform)' | sed 'N;N;N;s,\n, ,g' | \
	$(AWK) 'BEGIN { files["."] = ""; dirs["."] = 1; } \
	  { d=$$3; if (dirs[d] != 1) { print "d", d; dirs[d] = 1 } \
	    if ($$2 == $$4) { files[d] = files[d] " " $$1; \
	      if (++n[d] == $(am__install_max)) { \
		print "f", d, files[d]; n[d] = 0; files[d] = "" } } \
	    else { print "f", d "/" $$4, $$1 } } \
	  END { for (d in files) print "f", d, files[d] }' | \
	while read type dir files; do \
	     if test "$$dir" = .; then dir=; else dir=/$$dir; fi; \
	     test -z "$$files" || { \
	       echo " $(INSTALL_SCRIPT) $$files '$(DESTDIR)$(cmucllibdir)$$dir'"; \
	       $(INSTALL_SCRIPT) $$files "$(DESTDIR)$(cmucllibdir)$$dir" || exit $$?; \
	     } \
	; done

uninstall-cmucllibSCRIPTS:
	@$(NORMAL_UNINSTALL)
	@list='$(cmucllib_SCRIPTS)'; test -n "$(cmucllibdir)" || exit 0; \
	files=`for p in $$list; do echo "$$p"; done | \
	       sed -e 's,.*/,,;$(transform)'`; \
	dir='$(DESTDIR)$(cmucllibdir)'; $(am__uninstall_files_from_dir)
install-ecllibSCRIPTS: $(ecllib_SCRIPTS)
	@$(NORMAL_INSTALL)
	@list='$(ecllib_SCRIPTS)'; test -n "$(ecllibdir)" || list=; \
	if test -n "$$list"; then \
	  echo " $(MKDIR_P) '$(DESTDIR)$(ecllibdir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(ecllibdir)" || exit 1; \
	fi; \
	for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  if test -f "$$d$$p"; then echo "$$d$$p"; echo "$$p"; else :; fi; \
	done | \
	sed -e 'p;s,.*/,,;n' \
	    -e 'h;s|.*|.|' \
	    -e 'p;x;s,.*/,,;$(transform)' | sed 'N;N;N;s,\n, ,g' | \
	$(AWK) 'BEGIN { files["."] = ""; dirs["."] = 1; } \
	  { d=$$3; if (dirs[d] != 1) { print "d", d; dirs[d] = 1 } \
	    if ($$2 == $$4) { files[d] = files[d] " " $$1; \
	      if (++n[d] == $(am__install_max)) { \
		print "f", d, files[d]; n[d] = 0; files[d] = "" } } \
	    else { print "f", d "/" $$4, $$1 } } \
	  END { for (d in files) print "f", d, files[d] }' | \
	while read type dir files; do \
	     if test "$$dir" = .; then dir=; else dir=/$$dir; fi; \
	     test -z "$$files" || { \
	       echo " $(INSTALL_SCRIPT) $$files '$(DESTDIR)$(ecllibdir)$$dir'"; \
	       $(INSTALL_SCRIPT) $$files "$(DESTDIR)$(ecllibdir)$$dir" || exit $$?; \
	     } \
	; done

uninstall-ecllibSCRIPTS:
	@$(NORMAL_UNINSTALL)
	@list='$(ecllib_SCRIPTS)'; test -n "$(ecllibdir)" || exit 0; \
	files=`for p in $$list; do echo "$$p"; done | \
	       sed -e 's,.*/,,;$(transform)'`; \
	dir='$(DESTDIR)$(ecllibdir)'; $(am__uninstall_files_from_dir)
install-gcllibSCRIPTS: $(gcllib_SCRIPTS)
	@$(NORMAL_INSTALL)
	@list='$(gcllib_SCRIPTS)'; test -n "$(gcllibdir)" || list=; \
	if test -n "$$list"; then \
	  echo " $(MKDIR_P) '$(DESTDIR)$(gcllibdir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(gcllibdir)" || exit 1; \
	fi; \
	for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  if test -f "$$d$$p"; then echo "$$d$$p"; echo "$$p"; else :; fi; \
	done | \
	sed -e 'p;s,.*/,,;n' \
	    -e 'h;s|.*|.|' \
	    -e 'p;x;s,.*/,,;$(transform)' | sed 'N;N;N;s,\n, ,g' | \
	$(AWK) 'BEGIN { files["."] = ""; dirs["."] = 1; } \
	  { d=$$3; if (dirs[d] != 1) { print "d", d; dirs[d] = 1 } \
	    if ($$2 == $$4) { files[d] = files[d] " " $$1; \
	      if (++n[d] == $(am__install_max)) { \
		print "f", d, files[d]; n[d] = 0; files[d] = "" } } \
	    else { print "f", d "/" $$4, $$1 } } \
	  END { for (d in files) print "f", d, files[d] }' | \
	while read type dir files; do \
	     if test "$$dir" = .; then dir=; else dir=/$$dir; fi; \
	     test -z "$$files" || { \
	       echo " $(INSTALL_SCRIPT) $$files '$(DESTDIR)$(gcllibdir)$$dir'"; \
	       $(INSTALL_SCRIPT) $$files "$(DESTDIR)$(gcllibdir)$$dir" || exit $$?; \
	     } \
	; done

uninstall-gcllibSCRIPTS:
	@$(NORMAL_UNINSTALL)
	@list='$(gcllib_SCRIPTS)'; test -n "$(gcllibdir)" || exit 0; \
	files=`for p in $$list; do echo "$$p"; done | \
	       sed -e 's,.*/,,;$(transform)'`; \
	dir='$(DESTDIR)$(gcllibdir)'; $(am__uninstall_files_from_dir)
install-openmcllibSCRIPTS: $(openmcllib_SCRIPTS)
	@$(NORMAL_INSTALL)
	@list='$(openmcllib_SCRIPTS)'; test -n "$(openmcllibdir)" || list=; \
	if test -n "$$list"; then \
	  echo " $(MKDIR_P) '$(DESTDIR)$(openmcllibdir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(openmcllibdir)" || exit 1; \
	fi; \
	for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  if test -f "$$d$$p"; then echo "$$d$$p"; echo "$$p"; else :; fi; \
	done | \
	sed -e 'p;s,.*/,,;n' \
	    -e 'h;s|.*|.|' \
	    -e 'p;x;s,.*/,,;$(transform)' | sed 'N;N;N;s,\n, ,g' | \
	$(AWK) 'BEGIN { files["."] = ""; dirs["."] = 1; } \
	  { d=$$3; if (dirs[d] != 1) { print "d", d; dirs[d] = 1 } \
	    if ($$2 == $$4) { files[d] = files[d] " " $$1; \
	      if (++n[d] == $(am__install_max)) { \
		print "f", d, files[d]; n[d] = 0; files[d] = "" } } \
	    else { print "f", d "/" $$4, $$1 } } \
	  END { for (d in files) print "f", d, files[d] }' | \
	while read type dir files; do \
	     if test "$$dir" = .; then dir=; else dir=/$$dir; fi; \
	     test -z "$$files" || { \
	       echo " $(INSTALL_SCRIPT) $$files '$(DESTDIR)$(openmcllibdir)$$dir'"; \
	       $(INSTALL_SCRIPT) $$files "$(DESTDIR)$(openmcllibdir)$$dir" || exit $$?; \
	     } \
	; done

uninstall-openmcllibSCRIPTS:
	@$(NORMAL_UNINSTALL)
	@list='$(openmcllib_SCRIPTS)'; test -n "$(openmcllibdir)" || exit 0; \
	files=`for p in $$list; do echo "$$p"; done | \
	       sed -e 's,.*/,,;$(transform)'`; \
	dir='$(DESTDIR)$(openmcllibdir)'; $(am__uninstall_files_from_dir)
install-sbcllibSCRIPTS: $(sbcllib_SCRIPTS)
	@$(NORMAL_INSTALL)
	@list='$(sbcllib_SCRIPTS)'; test -n "$(sbcllibdir)" || list=; \
	if test -n "$$list"; then \
	  echo " $(MKDIR_P) '$(DESTDIR)$(sbcllibdir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(sbcllibdir)" || exit 1; \
	fi; \
	for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  if test -f "$$d$$p"; then echo "$$d$$p"; echo "$$p"; else :; fi; \
	done | \
	sed -e 'p;s,.*/,,;n' \
	    -e 'h;s|.*|.|' \
	    -e 'p;x;s,.*/,,;$(transform)' | sed 'N;N;N;s,\n, ,g' | \
	$(AWK) 'BEGIN { files["."] = ""; dirs["."] = 1; } \
	  { d=$$3; if (dirs[d] != 1) { print "d", d; dirs[d] = 1 } \
	    if ($$2 == $$4) { files[d] = files[d] " " $$1; \
	      if (++n[d] == $(am__install_max)) { \
		print "f", d, files[d]; n[d] = 0; files[d] = "" } } \
	    else { print "f", d "/" $$4, $$1 } } \
	  END { for (d in files) print "f", d, files[d] }' | \
	while read type dir files; do \
	     if test "$$dir" = .; then dir=; else dir=/$$dir; fi; \
	     test -z "$$files" || { \
	       echo " $(INSTALL_SCRIPT) $$files '$(DESTDIR)$(sbcllibdir)$$dir'"; \
	       $(INSTALL_SCRIPT) $$files "$(DESTDIR)$(sbcllibdir)$$dir" || exit $$?; \
	     } \
	; done

uninstall-sbcllibSCRIPTS:
	@$(NORMAL_UNINSTALL)
	@list='$(sbcllib_SCRIPTS)'; test -n "$(sbcllibdir)" || exit 0; \
	files=`for p in $$list; do echo "$$p"; done | \
	       sed -e 's,.*/,,;$(transform)'`; \
	dir='$(DESTDIR)$(sbcllibdir)'; $(am__uninstall_files_from_dir)
install-acllibDATA: $(acllib_DATA)
	@$(NORMAL_INSTALL)
	@list='$(acllib_DATA)'; test -n "$(acllibdir)" || list=; \
	if test -n "$$list"; then \
	  echo " $(MKDIR_P) '$(DESTDIR)$(acllibdir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(acllibdir)" || exit 1; \
	fi; \
	for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  echo "$$d$$p"; \
	done | $(am__base_list) | \
	while read files; do \
	  echo " $(INSTALL_DATA) $$files '$(DESTDIR)$(acllibdir)'"; \
	  $(INSTALL_DATA) $$files "$(DESTDIR)$(acllibdir)" || exit $$?; \
	done

uninstall-acllibDATA:
	@$(NORMAL_UNINSTALL)
	@list='$(acllib_DATA)'; test -n "$(acllibdir)" || list=; \
	files=`for p in $$list; do echo $$p; done | sed -e 's|^.*/||'`; \
	dir='$(DESTDIR)$(acllibdir)'; $(am__uninstall_files_from_dir)
install-ccl64libDATA: $(ccl64lib_DATA)
	@$(NORMAL_INSTALL)
	@list='$(ccl64lib_DATA)'; test -n "$(ccl64libdir)" || list=; \
	if test -n "$$list"; then \
	  echo " $(MKDIR_P) '$(DESTDIR)$(ccl64libdir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(ccl64libdir)" || exit 1; \
	fi; \
	for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  echo "$$d$$p"; \
	done | $(am__base_list) | \
	while read files; do \
	  echo " $(INSTALL_DATA) $$files '$(DESTDIR)$(ccl64libdir)'"; \
	  $(INSTALL_DATA) $$files "$(DESTDIR)$(ccl64libdir)" || exit $$?; \
	done

uninstall-ccl64libDATA:
	@$(NORMAL_UNINSTALL)
	@list='$(ccl64lib_DATA)'; test -n "$(ccl64libdir)" || list=; \
	files=`for p in $$list; do echo $$p; done | sed -e 's|^.*/||'`; \
	dir='$(DESTDIR)$(ccl64libdir)'; $(am__uninstall_files_from_dir)
install-clisplibDATA: $(clisplib_DATA)
	@$(NORMAL_INSTALL)
	@list='$(clisplib_DATA)'; test -n "$(clisplibdir)" || list=; \
	if test -n "$$list"; then \
	  echo " $(MKDIR_P) '$(DESTDIR)$(clisplibdir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(clisplibdir)" || exit 1; \
	fi; \
	for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  echo "$$d$$p"; \
	done | $(am__base_list) | \
	while read files; do \
	  echo " $(INSTALL_DATA) $$files '$(DESTDIR)$(clisplibdir)'"; \
	  $(INSTALL_DATA) $$files "$(DESTDIR)$(clisplibdir)" || exit $$?; \
	done

uninstall-clisplibDATA:
	@$(NORMAL_UNINSTALL)
	@list='$(clisplib_DATA)'; test -n "$(clisplibdir)" || list=; \
	files=`for p in $$list; do echo $$p; done | sed -e 's|^.*/||'`; \
	dir='$(DESTDIR)$(clisplibdir)'; $(am__uninstall_files_from_dir)
install-cmucllibDATA: $(cmucllib_DATA)
	@$(NORMAL_INSTALL)
	@list='$(cmucllib_DATA)'; test -n "$(cmucllibdir)" || list=; \
	if test -n "$$list"; then \
	  echo " $(MKDIR_P) '$(DESTDIR)$(cmucllibdir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(cmucllibdir)" || exit 1; \
	fi; \
	for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  echo "$$d$$p"; \
	done | $(am__base_list) | \
	while read files; do \
	  echo " $(INSTALL_DATA) $$files '$(DESTDIR)$(cmucllibdir)'"; \
	  $(INSTALL_DATA) $$files "$(DESTDIR)$(cmucllibdir)" || exit $$?; \
	done

uninstall-cmucllibDATA:
	@$(NORMAL_UNINSTALL)
	@list='$(cmucllib_DATA)'; test -n "$(cmucllibdir)" || list=; \
	files=`for p in $$list; do echo $$p; done | sed -e 's|^.*/||'`; \
	dir='$(DESTDIR)$(cmucllibdir)'; $(am__uninstall_files_from_dir)
install-nobase_dist_instsrcDATA: $(nobase_dist_instsrc_DATA)
	@$(NORMAL_INSTALL)
	@list='$(nobase_dist_instsrc_DATA)'; test -n "$(instsrcdir)" || list=; \
	if test -n "$$list"; then \
	  echo " $(MKDIR_P) '$(DESTDIR)$(instsrcdir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(instsrcdir)" || exit 1; \
	fi; \
	$(am__nobase_list) | while read dir files; do \
	  xfiles=; for file in $$files; do \
	    if test -f "$$file"; then xfiles="$$xfiles $$file"; \
	    else xfiles="$$xfiles $(srcdir)/$$file"; fi; done; \
	  test -z "$$xfiles" || { \
	    test "x$$dir" = x. || { \
	      echo " $(MKDIR_P) '$(DESTDIR)$(instsrcdir)/$$dir'"; \
	      $(MKDIR_P) "$(DESTDIR)$(instsrcdir)/$$dir"; }; \
	    echo " $(INSTALL_DATA) $$xfiles '$(DESTDIR)$(instsrcdir)/$$dir'"; \
	    $(INSTALL_DATA) $$xfiles "$(DESTDIR)$(instsrcdir)/$$dir" || exit $$?; }; \
	done

uninstall-nobase_dist_instsrcDATA:
	@$(NORMAL_UNINSTALL)
	@list='$(nobase_dist_instsrc_DATA)'; test -n "$(instsrcdir)" || list=; \
	$(am__nobase_strip_setup); files=`$(am__nobase_strip)`; \
	dir='$(DESTDIR)$(instsrcdir)'; $(am__uninstall_files_from_dir)
install-openmcllibDATA: $(openmcllib_DATA)
	@$(NORMAL_INSTALL)
	@list='$(openmcllib_DATA)'; test -n "$(openmcllibdir)" || list=; \
	if test -n "$$list"; then \
	  echo " $(MKDIR_P) '$(DESTDIR)$(openmcllibdir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(openmcllibdir)" || exit 1; \
	fi; \
	for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  echo "$$d$$p"; \
	done | $(am__base_list) | \
	while read files; do \
	  echo " $(INSTALL_DATA) $$files '$(DESTDIR)$(openmcllibdir)'"; \
	  $(INSTALL_DATA) $$files "$(DESTDIR)$(openmcllibdir)" || exit $$?; \
	done

uninstall-openmcllibDATA:
	@$(NORMAL_UNINSTALL)
	@list='$(openmcllib_DATA)'; test -n "$(openmcllibdir)" || list=; \
	files=`for p in $$list; do echo $$p; done | sed -e 's|^.*/||'`; \
	dir='$(DESTDIR)$(openmcllibdir)'; $(am__uninstall_files_from_dir)
install-sbcllibDATA: $(sbcllib_DATA)
	@$(NORMAL_INSTALL)
	@list='$(sbcllib_DATA)'; test -n "$(sbcllibdir)" || list=; \
	if test -n "$$list"; then \
	  echo " $(MKDIR_P) '$(DESTDIR)$(sbcllibdir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(sbcllibdir)" || exit 1; \
	fi; \
	for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  echo "$$d$$p"; \
	done | $(am__base_list) | \
	while read files; do \
	  echo " $(INSTALL_DATA) $$files '$(DESTDIR)$(sbcllibdir)'"; \
	  $(INSTALL_DATA) $$files "$(DESTDIR)$(sbcllibdir)" || exit $$?; \
	done

uninstall-sbcllibDATA:
	@$(NORMAL_UNINSTALL)
	@list='$(sbcllib_DATA)'; test -n "$(sbcllibdir)" || list=; \
	files=`for p in $$list; do echo $$p; done | sed -e 's|^.*/||'`; \
	dir='$(DESTDIR)$(sbcllibdir)'; $(am__uninstall_files_from_dir)
install-scllibDATA: $(scllib_DATA)
	@$(NORMAL_INSTALL)
	@list='$(scllib_DATA)'; test -n "$(scllibdir)" || list=; \
	if test -n "$$list"; then \
	  echo " $(MKDIR_P) '$(DESTDIR)$(scllibdir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(scllibdir)" || exit 1; \
	fi; \
	for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  echo "$$d$$p"; \
	done | $(am__base_list) | \
	while read files; do \
	  echo " $(INSTALL_DATA) $$files '$(DESTDIR)$(scllibdir)'"; \
	  $(INSTALL_DATA) $$files "$(DESTDIR)$(scllibdir)" || exit $$?; \
	done

uninstall-scllibDATA:
	@$(NORMAL_UNINSTALL)
	@list='$(scllib_DATA)'; test -n "$(scllibdir)" || list=; \
	files=`for p in $$list; do echo $$p; done | sed -e 's|^.*/||'`; \
	dir='$(DESTDIR)$(scllibdir)'; $(am__uninstall_files_from_dir)
tags TAGS:

ctags CTAGS:

cscope cscopelist:


distdir: $(DISTFILES)
	@srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	list='$(DISTFILES)'; \
	  dist_files=`for file in $$list; do echo $$file; done | \
	  sed -e "s|^$$srcdirstrip/||;t" \
	      -e "s|^$$topsrcdirstrip/|$(top_builddir)/|;t"`; \
	case $$dist_files in \
	  */*) $(MKDIR_P) `echo "$$dist_files" | \
			   sed '/\//!d;s|^|$(distdir)/|;s,/[^/]*$$,,' | \
			   sort -u` ;; \
	esac; \
	for file in $$dist_files; do \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  if test -d $$d/$$file; then \
	    dir=`echo "/$$file" | sed -e 's,/[^/]*$$,,'`; \
	    if test -d "$(distdir)/$$file"; then \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -fpR $(srcdir)/$$file "$(distdir)$$dir" || exit 1; \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    cp -fpR $$d/$$file "$(distdir)$$dir" || exit 1; \
	  else \
	    test -f "$(distdir)/$$file" \
	    || cp -p $$d/$$file "$(distdir)/$$file" \
	    || exit 1; \
	  fi; \
	done
check-am: all-am
check: check-am
all-am: Makefile $(SCRIPTS) $(DATA) all-local
installdirs:
	for dir in "$(DESTDIR)$(abcllibdir)" "$(DESTDIR)$(bindir)" "$(DESTDIR)$(ccl64libdir)" "$(DESTDIR)$(clisplibdir)" "$(DESTDIR)$(cmucllibdir)" "$(DESTDIR)$(ecllibdir)" "$(DESTDIR)$(gcllibdir)" "$(DESTDIR)$(openmcllibdir)" "$(DESTDIR)$(sbcllibdir)" "$(DESTDIR)$(acllibdir)" "$(DESTDIR)$(ccl64libdir)" "$(DESTDIR)$(clisplibdir)" "$(DESTDIR)$(cmucllibdir)" "$(DESTDIR)$(instsrcdir)" "$(DESTDIR)$(openmcllibdir)" "$(DESTDIR)$(sbcllibdir)" "$(DESTDIR)$(scllibdir)"; do \
	  test -z "$$dir" || $(MKDIR_P) "$$dir"; \
	done
install: install-am
install-exec: install-exec-am
install-data: install-data-am
uninstall: uninstall-am

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-am
install-strip:
	if test -z '$(STRIP)'; then \
	  $(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	    install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	      install; \
	else \
	  $(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	    install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	    "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'" install; \
	fi
mostlyclean-generic:

clean-generic:
	-test -z "$(CLEANFILES)" || rm -f $(CLEANFILES)

distclean-generic:
	-test -z "$(CONFIG_CLEAN_FILES)" || rm -f $(CONFIG_CLEAN_FILES)
	-test . = "$(srcdir)" || test -z "$(CONFIG_CLEAN_VPATH_FILES)" || rm -f $(CONFIG_CLEAN_VPATH_FILES)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
clean: clean-am

clean-am: clean-generic clean-local mostlyclean-am

distclean: distclean-am
	-rm -f Makefile
distclean-am: clean-am distclean-generic

dvi: dvi-am

dvi-am:

html: html-am

html-am:

info: info-am

info-am:

install-data-am: install-abcllibSCRIPTS install-acllibDATA \
	install-ccl64libDATA install-ccl64libSCRIPTS \
	install-clisplibDATA install-clisplibSCRIPTS \
	install-cmucllibDATA install-cmucllibSCRIPTS \
	install-data-local install-ecllibSCRIPTS install-gcllibSCRIPTS \
	install-nobase_dist_instsrcDATA install-openmcllibDATA \
	install-openmcllibSCRIPTS install-sbcllibDATA \
	install-sbcllibSCRIPTS install-scllibDATA

install-dvi: install-dvi-am

install-dvi-am:

install-exec-am: install-binSCRIPTS install-exec-local

install-html: install-html-am

install-html-am:

install-info: install-info-am

install-info-am:

install-man:

install-pdf: install-pdf-am

install-pdf-am:

install-ps: install-ps-am

install-ps-am:

installcheck-am:

maintainer-clean: maintainer-clean-am
	-rm -f Makefile
maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-am

mostlyclean-am: mostlyclean-generic

pdf: pdf-am

pdf-am:

ps: ps-am

ps-am:

uninstall-am: uninstall-abcllibSCRIPTS uninstall-acllibDATA \
	uninstall-binSCRIPTS uninstall-ccl64libDATA \
	uninstall-ccl64libSCRIPTS uninstall-clisplibDATA \
	uninstall-clisplibSCRIPTS uninstall-cmucllibDATA \
	uninstall-cmucllibSCRIPTS uninstall-ecllibSCRIPTS \
	uninstall-gcllibSCRIPTS uninstall-local \
	uninstall-nobase_dist_instsrcDATA uninstall-openmcllibDATA \
	uninstall-openmcllibSCRIPTS uninstall-sbcllibDATA \
	uninstall-sbcllibSCRIPTS uninstall-scllibDATA
	@$(NORMAL_INSTALL)
	$(MAKE) $(AM_MAKEFLAGS) uninstall-hook
.MAKE: install-am install-strip uninstall-am

.PHONY: all all-am all-local check check-am clean clean-generic \
	clean-local cscopelist-am ctags-am distclean distclean-generic \
	distdir dvi dvi-am html html-am info info-am install \
	install-abcllibSCRIPTS install-acllibDATA install-am \
	install-binSCRIPTS install-ccl64libDATA \
	install-ccl64libSCRIPTS install-clisplibDATA \
	install-clisplibSCRIPTS install-cmucllibDATA \
	install-cmucllibSCRIPTS install-data install-data-am \
	install-data-local install-dvi install-dvi-am \
	install-ecllibSCRIPTS install-exec install-exec-am \
	install-exec-local install-gcllibSCRIPTS install-html \
	install-html-am install-info install-info-am install-man \
	install-nobase_dist_instsrcDATA install-openmcllibDATA \
	install-openmcllibSCRIPTS install-pdf install-pdf-am \
	install-ps install-ps-am install-sbcllibDATA \
	install-sbcllibSCRIPTS install-scllibDATA install-strip \
	installcheck installcheck-am installdirs maintainer-clean \
	maintainer-clean-generic mostlyclean mostlyclean-generic pdf \
	pdf-am ps ps-am tags-am uninstall uninstall-abcllibSCRIPTS \
	uninstall-acllibDATA uninstall-am uninstall-binSCRIPTS \
	uninstall-ccl64libDATA uninstall-ccl64libSCRIPTS \
	uninstall-clisplibDATA uninstall-clisplibSCRIPTS \
	uninstall-cmucllibDATA uninstall-cmucllibSCRIPTS \
	uninstall-ecllibSCRIPTS uninstall-gcllibSCRIPTS uninstall-hook \
	uninstall-local uninstall-nobase_dist_instsrcDATA \
	uninstall-openmcllibDATA uninstall-openmcllibSCRIPTS \
	uninstall-sbcllibDATA uninstall-sbcllibSCRIPTS \
	uninstall-scllibDATA


# Support for installation of DATA files in a generic directory
# with subdirectories.
# To use, set genericdir to point to the installation directory.
# Set genericdirDATA to hold the list of files to install.
# genericdirDATA may contain subdirectories. Subdirectories will
# be created if necessary.

install-data-local: install-datafiles
install-datafiles: $(genericdirDATA)
	@$(NORMAL_INSTALL)
	$(mkinstalldirs) $(DESTDIR)$(genericdir)
	@list='$(genericdirDATA)'; for p in $$list; do \
	  if test -f $(srcdir)/$$p; then \
            if test ! -d `dirname $(DESTDIR)$(genericdir)/$$p`; then \
              $(mkinstalldirs) `dirname $(DESTDIR)$(genericdir)/$$p`; \
            fi; \
	    echo " $(INSTALL_DATA) $(srcdir)/$$p $(DESTDIR)$(genericdir)/$$p"; \
	    $(INSTALL_DATA) $(srcdir)/$$p $(DESTDIR)$(genericdir)/$$p; \
	  else if test -f $$p; then \
            if test ! -d `dirname $(DESTDIR)$(genericdir)/$$p`; then \
              $(mkinstalldirs) `dirname $(DESTDIR)$(genericdir)/$$p`; \
            fi; \
	    echo " $(INSTALL_DATA) $$p $(DESTDIR)$(genericdir)/$$p"; \
	    $(INSTALL_DATA) $$p $(DESTDIR)$(genericdir)/$$p; \
	  fi; fi; \
	done

uninstall-local: uninstall-datafiles
uninstall-datafiles:
	@$(NORMAL_UNINSTALL)
	list='$(genericdirDATA)'; for p in $$list; do \
	  rm -f $(DESTDIR)$(genericdir)/$$p; \
	done

echo_%:
	@echo "$(subst echo_,,$@)=$($(subst echo_,,$@))"
	@echo "origin $(subst echo_,,$@) returns $(origin $(subst echo_,,$@))"
all-local: $(BUILT_FILES) share-subdirs_autogenerated.lisp
	if test share-subdirs_autogenerated.lisp -nt share-subdirs.lisp; then cp share-subdirs_autogenerated.lisp share-subdirs.lisp; fi
clean-local: $(CLEAN_TARGETS)
install-exec-local: $(WEIRD_INSTALL_TARGETS)
uninstall-hook: $(WEIRD_UNINSTALL_TARGETS)
.PHONY: bd
bd:
	for l in $(lisps_enabled); do for d in $(binary_subdirs); do $(MKDIR_P) binary-$$l$$d; done; done
@CLISP_EXEC_FALSE@@CLISP_TRUE@install-clisp-copy:
@CLISP_EXEC_FALSE@@CLISP_TRUE@	$(mkinstalldirs) $(DESTDIR)$(clisplibdir)
@CLISP_EXEC_FALSE@@CLISP_TRUE@	$(INSTALL_PROGRAM) @CLISP_RUNTIME_PATH@ "$(DESTDIR)$(clisplibdir)/@CLISP_RUNTIME@"
@CLISP_EXEC_FALSE@@CLISP_TRUE@uninstall-clisp-copy:
@CLISP_EXEC_FALSE@@CLISP_TRUE@	rm -f "$(DESTDIR)$(clisplibdir)/@CLISP_RUNTIME@"

@CLISP_TRUE@clisp: $(CLISP_MAXIMA)

@CLISP_TRUE@$(CLISP_MAXIMA):
@CLISP_TRUE@	$(MAKE) bd
@CLISP_TRUE@	echo '$(QUIET) $(LOADDEFSYSTEM) $(DEFSYSTEMCOMPILE)' > clisp-command.lisp
@CLISP_TRUE@	$(EXECUTECLISP) clisp-command.lisp
@CLISP_TRUE@	echo '$(LOADDEFSYSTEM) $(DEFSYSTEMLOAD) (ext:saveinitmem "$@" :init-function (function cl-user::run) $(clispexeflag))' > clisp-command.lisp
@CLISP_TRUE@	$(EXECUTECLISP) clisp-command.lisp
@CLISP_TRUE@	rm clisp-command.lisp

@CLISP_TRUE@clisp-depends.mk: maxima.system Makefile *.lisp
@CLISP_TRUE@	echo $(call MAKE_DEPENDS,"$(CLISP_MAXIMA)",clisp-depends.mk.tmp) > clisp-command2.lisp
@CLISP_TRUE@	$(EXECUTECLISP) clisp-command2.lisp
@CLISP_TRUE@	cat clisp-depends.mk.tmp | sed -e "s#\\\\#/#g" > clisp-depends.mk

@CLISP_TRUE@-include clisp-depends.mk

clean-clisp:
	rm -rf binary-clisp clisp-command.lisp clisp-command2.lisp

@CMUCL_TRUE@cmucl: $(CMU_MAXIMA)

@CMUCL_TRUE@$(CMU_MAXIMA):
@CMUCL_TRUE@	$(MAKE) bd
@CMUCL_TRUE@	$(CMU_BUILD)

@CMUCL_TRUE@cmucl-depends.mk: maxima.system Makefile *.lisp
@CMUCL_TRUE@	echo $(call MAKE_DEPENDS,"$(CMU_MAXIMA)",cmucl-depends.mk.tmp) | $(EXECUTECMUCL)
@CMUCL_TRUE@	cat cmucl-depends.mk.tmp | sed -e "s#\\\\#/#g" > cmucl-depends.mk

@CMUCL_TRUE@-include cmucl-depends.mk

clean-cmucl:
	rm -rf binary-cmucl

@SCL_TRUE@scl: binary-scl/maxima.core

@SCL_TRUE@binary-scl/maxima.core:
@SCL_TRUE@	$(MAKE) bd
@SCL_TRUE@	(echo '$(QUIET) $(LOADDEFSYSTEM) $(DEFSYSTEMCOMPILE)' | $(EXECUTESCL)) && \
@SCL_TRUE@	(echo '$(LOADDEFSYSTEM) $(DEFSYSTEMLOAD) (ext:save-lisp "binary-scl/maxima.core")' | $(EXECUTESCL))
@SCL_TRUE@install-scl-copy:
@SCL_TRUE@	$(mkinstalldirs) $(DESTDIR)$(scllibdir)
@SCL_TRUE@	$(INSTALL_PROGRAM) @SCL_RUNTIME_PATH@ "$(DESTDIR)$(scllibdir)/@SCL_RUNTIME@"
@SCL_TRUE@uninstall-scl-copy:
@SCL_TRUE@	rm -f "$(DESTDIR)$(scllibdir)/@SCL_RUNTIME@"

@SCL_TRUE@scl-depends.mk: maxima.system Makefile *.lisp
@SCL_TRUE@	echo $(call MAKE_DEPENDS,"binary-scl/maxima.core",scl-depends.mk.tmp) | $(EXECUTESCL)
@SCL_TRUE@	cat scl-depends.mk.tmp | sed -e "s#\\\\#/#g" > scl-depends.mk

@SCL_TRUE@-include scl-depends.mk

clean-scl:
	rm -rf binary-scl

@ACL_TRUE@acl: binary-acl/maxima.dxl

@ACL_TRUE@binary-acl/maxima.dxl:
@ACL_TRUE@	$(MAKE) bd
@ACL_TRUE@	(echo '$(QUIET) $(LOADDEFSYSTEM) $(DEFSYSTEMCOMPILE)' | $(EXECUTEACL)) && \
@ACL_TRUE@	(echo '$(LOADDEFSYSTEM) $(DEFSYSTEMLOAD) (excl:dumplisp :name "binary-acl/maxima.dxl")' | $(EXECUTEACL))

@ACL_TRUE@acl-depends.mk: maxima.system Makefile *.lisp
@ACL_TRUE@	echo $(call MAKE_DEPENDS,"binary-acl/maxima.dxl",acl-depends.mk.tmp) | $(EXECUTEACL)
@ACL_TRUE@	cat acl-depends.mk.tmp | sed -e "s#\\\\#/#g" > acl-depends.mk

@ACL_TRUE@-include acl-depends.mk

clean-acl:
	rm -rf binary-acl

@SBCL_TRUE@sbcl: $(SBCL_MAXIMA)

@SBCL_TRUE@$(SBCL_MAXIMA):
@SBCL_TRUE@	$(MAKE) bd
@SBCL_TRUE@	$(BUILD_SBCL)

@SBCL_TRUE@sbcl-depends.mk: maxima.system Makefile *.lisp
@SBCL_TRUE@	echo $(call MAKE_DEPENDS,"$(SBCL_MAXIMA)",sbcl-depends.mk.tmp,(sb-ext:quit)) | $(EXECUTESBCL)
@SBCL_TRUE@	cat sbcl-depends.mk.tmp | sed -e "s#\\\\#/#g" > sbcl-depends.mk

@SBCL_TRUE@-include sbcl-depends.mk

clean-sbcl:
	rm -rf binary-sbcl numerical/binary-sbcl numerical/slatec/binary-sbcl

@GCL_TRUE@tools/sys-proclaim.lisp: maxima.system *.lisp
@GCL_TRUE@	rm -rf binary-gcl
@GCL_TRUE@	touch sys-proclaim.lisp
@GCL_TRUE@	$(MAKE) bd
@GCL_TRUE@	echo '(load "generate-sys-proclaim.lisp") (system::quit)' | $(EXECUTEGCL)
@GCL_TRUE@	rm -rf binary-gcl
@GCL_TRUE@	mkdir -p tools
@GCL_TRUE@	mv sys-proclaim.lisp tools

@GCL_TRUE@gcl: binary-gcl/maxima

@GCL_TRUE@binary-gcl/maxima: $(sys_proc_dependency) gcl-depends.mk
@GCL_TRUE@	$(MAKE) bd
@GCL_ALT_LINK_TRUE@@GCL_TRUE@	echo '$(QUIET) $(LOADDEFSYSTEM) $(DEFSYSTEMCOMPILE) (system::quit)' | $(EXECUTEGCL)
@GCL_ALT_LINK_TRUE@@GCL_TRUE@	echo '(let ((com (quote (progn (defvar compiler::*gazonk-prefix* "gazonk") (defun compiler::gazonk-name (&aux tem)(dotimes (i 1000) (unless (probe-file (setq tem (merge-pathnames (format nil "~d~d.lsp" compiler::*gazonk-prefix* i))))(return-from compiler::gazonk-name (pathname tem))))(error "1000 gazonk names used already!"))(let ((compiler::*gazonk-prefix* "maxima_gazonk")(compiler::*keep-gaz* t))$(LOADDEFSYSTEM)$(DEFSYSTEMLOAD))))))(let ((si::*collect-binary-modules* t))(eval com)(let ((compiler::*default-system-p* t))(dolist (l (directory "maxima_gazonk*.lsp")) (compile-file l) (delete-file l)))(compiler::link si::*binary-modules* "binary-gcl/maxima" (format nil "~S" com) "" nil)(dolist (l (directory "maxima_gazonk*.lsp")) (delete-file l)))) (system::quit)' | $(EXECUTEGCL)
@GCL_ALT_LINK_FALSE@@GCL_TRUE@	echo '$(LOADDEFSYSTEM) $(DEFSYSTEMCOMPILE) (system::quit)' | $(EXECUTEGCL)
@GCL_ALT_LINK_FALSE@@GCL_TRUE@	echo '$(LOADDEFSYSTEM) $(DEFSYSTEMLOAD) (when (fboundp (quote si::sgc-on))(si::sgc-on t)) (si:save-system "binary-gcl/maxima") (system::quit)'  | $(EXECUTEGCL)

@GCL_TRUE@gcl-depends.mk: maxima.system Makefile *.lisp
@GCL_TRUE@	echo $(call MAKE_DEPENDS,$(gcl_depends_targets),gcl-depends.mk.tmp) '(system::quit)' | $(EXECUTEGCL)
@GCL_TRUE@	cat gcl-depends.mk.tmp | sed -e "s#\\\\#/#g" > gcl-depends.mk
@GCL_TRUE@-include gcl-depends.mk

clean-gcl:
	rm -rf binary-gcl

@OPENMCL_TRUE@openmcl: $(OPENMCL_MAXIMA)

@OPENMCL_TRUE@$(OPENMCL_MAXIMA):
@OPENMCL_TRUE@	$(BUILD_OMCL)
@OPENMCL_TRUE@	echo '(require :defsystem)  $(DEFSYSTEMCOMPILE) (ccl::quit)' | $(EXECUTEOPENMCL) \
@OPENMCL_TRUE@	   && \
@OPENMCL_TRUE@	echo '(require :defsystem) $(DEFSYSTEMLOAD) (ccl:save-application "$@" $(omcl_flag)) (ccl::quit)' | $(EXECUTEOPENMCL)

@OPENMCL_TRUE@openmcl-depends.mk: maxima.system Makefile *.lisp
@OPENMCL_TRUE@	echo $(call MAKE_DEPENDS,"$(OPENMCL_MAXIMA)",openmcl-depends.mk.tmp,(ccl:quit)) | $(EXECUTEOPENMCL)
@OPENMCL_TRUE@	cat openmcl-depends.mk.tmp | sed -e "s#\\\\#/#g" > openmcl-depends.mk

@OPENMCL_TRUE@-include openmcl-depends.mk

clean-openmcl:
	rm -rf binary-openmcl

@CCL64_TRUE@ccl64: $(CCL64_MAXIMA)

@CCL64_TRUE@$(CCL64_MAXIMA):
@CCL64_TRUE@	$(BUILD_CCL64)
@CCL64_TRUE@	echo '(require :defsystem)  $(DEFSYSTEMCOMPILE) (ccl::quit)' | $(EXECUTECCL64) \
@CCL64_TRUE@	   && \
@CCL64_TRUE@	echo '(require :defsystem) $(DEFSYSTEMLOAD) (ccl:save-application "$@" $(omcl_flag)) (ccl::quit)' | $(EXECUTECCL64)

@CCL64_TRUE@ccl64-depends.mk: maxima.system Makefile *.lisp
@CCL64_TRUE@	echo $(call MAKE_DEPENDS,"$(CCL64_MAXIMA)",ccl64-depends.mk.tmp,(ccl:quit)) | $(EXECUTECCL64)
@CCL64_TRUE@	cat ccl64-depends.mk.tmp | sed -e "s#\\\\#/#g" > ccl64-depends.mk

@CCL64_TRUE@-include ccl64-depends.mk

clean-ccl64:
	rm -rf binary-ccl64

@ECL_TRUE@ecl:binary-ecl/maxima

@ECL_TRUE@binary-ecl/maxima:
@ECL_TRUE@	$(MAKE) bd
@ECL_TRUE@	echo '$(QUIET) $(LOADDEFSYSTEM) $(DEFSYSTEMCOMPILE) (build-maxima-lib) (ext:quit)' | $(EXECUTEECL)

@ECL_TRUE@ecl-depends.mk: maxima.system Makefile *.lisp
@ECL_TRUE@	echo $(call MAKE_DEPENDS,"binary-ecl/maxima",ecl-depends.mk.tmp,(quit)) | $(EXECUTEECL)
@ECL_TRUE@	cat ecl-depends.mk.tmp | sed -e "s#\\\\#/#g" > ecl-depends.mk

@ECL_TRUE@-include ecl-depends.mk

clean-ecl:
	rm -rf binary-ecl libmaxima.a

@ABCL_TRUE@install-abcl-folder:
@ABCL_TRUE@	$(mkinstalldirs) $(DESTDIR)$(abcllibdir)
@ABCL_TRUE@	cp -r binary-abcl/* "$(DESTDIR)$(abcllibdir)"
@ABCL_TRUE@	chmod +x $(DESTDIR)$(abcllibdir)/maxima
@ABCL_TRUE@uninstall-abcl-folder:
@ABCL_TRUE@	if test x"$(abcllibdir)" = x"" ; then echo "Error: No known maxima version"; exit -1; else rm -f "$(DESTDIR)$(abcllibdir)/*"; fi

@ABCL_TRUE@abcl:binary-abcl/maxima

@ABCL_TRUE@binary-abcl/maxima: Makefile.am startmaxima_abcl.sh
@ABCL_TRUE@	$(MAKE) bd
@ABCL_TRUE@@QUIET_BUILD_TRUE@	$(EXECUTEABCL) --eval '(setq *compile-verbose* nil)' --eval '(setf *compile-print* nil)' --eval '(load "$(top_srcdir)/lisp-utils/defsystem.lisp")' --eval '(mk:add-registry-location "$(top_srcdir)/src/")' --eval '($(DS_OOS) :compile :verbose nil)' --eval '(quit)'
@ABCL_TRUE@@QUIET_BUILD_FALSE@	$(EXECUTEABCL) --eval '(load "$(top_srcdir)/lisp-utils/defsystem.lisp")' --eval '(mk:add-registry-location "$(top_srcdir)/src/")' --eval '($(DS_OOS) :compile :verbose t)' --eval '(quit)'
@ABCL_TRUE@	cat $(srcdir)/maxima.system | sed -e 's#"binary-abcl"#(ext:getenv "MAXIMA_IMAGESDIR_BIN")#g' > binary-abcl/maxima.system
@ABCL_TRUE@	cp $(srcdir)/maxima-package.lisp binary-abcl
@ABCL_TRUE@	cp $(srcdir)/autol.lisp binary-abcl
@ABCL_TRUE@	cp $(srcdir)/init-cl.lisp binary-abcl
@ABCL_TRUE@	cp $(srcdir)/max_ext.lisp binary-abcl
@ABCL_TRUE@	cp share-subdirs.lisp binary-abcl
@ABCL_TRUE@	cp autoconf-variables.lisp binary-abcl
@ABCL_TRUE@	cp $(ABCL_JAR) binary-abcl/abcl.jar
@ABCL_TRUE@	cp $(srcdir)/../lisp-utils/defsystem.lisp binary-abcl
@ABCL_TRUE@	cp -a startmaxima_abcl.sh binary-abcl/maxima
@ABCL_TRUE@	touch binary-abcl/maxima
@ABCL_TRUE@	chmod +x binary-abcl/maxima

@ABCL_TRUE@abcl-depends.mk: maxima.system Makefile *.lisp
@ABCL_TRUE@	echo $(call MAKE_DEPENDS,"binary-abcl/maxima",abcl-depends.mk.tmp,(quit)) | $(EXECUTEABCL)
@ABCL_TRUE@	cat abcl-depends.mk.tmp | sed -e "s#\\\\#/#g" > abcl-depends.mk

@ABCL_TRUE@-include abcl-depends.mk

clean-abcl:
	rm -rf binary-abcl libmaxima.a

# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
