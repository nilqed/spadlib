(cl:declaim (cl:optimize cl:debug cl:safety))
(cl:declaim (sb-ext:muffle-conditions sb-ext:compiler-note cl:style-warning))
(MODULE (LIST 'DMODE)) 
(FLUID '(*COMPLEX DMODE* GDMODE*)) 
(GLOBAL '(DOMAINLIST*)) 
(PUT 'INITDMODE 'NUMBER-OF-ARGS 1) 
(PUT 'INITDMODE 'DEFINED-ON-LINE '125) 
(PUT 'INITDMODE 'DEFINED-IN-FILE 'POLY/DMODE.RED) 
(PUT 'INITDMODE 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE INITDMODE (U)
    (PROG ()
      (DMODECHK U)
      (PUT U 'SIMPFG
           (LIST (LIST T (LIST 'SETDMODE (MKQUOTE U) T))
                 (LIST NIL (LIST 'SETDMODE (MKQUOTE U) NIL)))))) 
(PUT 'SETDMODE 'NUMBER-OF-ARGS 2) 
(PUT 'SETDMODE 'DEFINED-ON-LINE '136) 
(PUT 'SETDMODE 'DEFINED-IN-FILE 'POLY/DMODE.RED) 
(PUT 'SETDMODE 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE SETDMODE (U BOOL)
    (PROG (X)
      (COND ((SETQ X (GET U 'DNAME)) (SETQ U X)))
      (COND
       ((EQ U 'COMPLEX-RATIONAL)
        (PROGN
         (COND ((SETQ X DMODE*) (SETQ X (GET X 'DNAME))))
         (ONOFF 'COMPLEX BOOL)
         (ONOFF 'RATIONAL BOOL)
         (RETURN X)))
       ((EQ U 'COMPLEX-ROUNDED)
        (PROGN
         (COND ((SETQ X DMODE*) (SETQ X (GET X 'DNAME))))
         (ONOFF 'COMPLEX BOOL)
         (ONOFF 'ROUNDED BOOL)
         (RETURN X))))
      (COND
       ((NULL (GET U 'TAG))
        (RERROR 'POLY 5 (LIST "Domain mode error:" U "is not a domain mode"))))
      (COND ((SETQ X (GET U 'PACKAGE-NAME)) (LOAD-PACKAGE X)))
      (RETURN
       (COND ((OR (EQ U 'COMPLEX) *COMPLEX) (SETCMPXMODE U BOOL))
             (T (SETDMODE1 U BOOL)))))) 
(PUT 'SETDMODE1 'NUMBER-OF-ARGS 2) 
(PUT 'SETDMODE1 'DEFINED-ON-LINE '158) 
(PUT 'SETDMODE1 'DEFINED-IN-FILE 'POLY/DMODE.RED) 
(PUT 'SETDMODE1 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE SETDMODE1 (U BOOL)
    (PROG (X Y Z)
      (SETQ X (GET U 'TAG))
      (SETQ Y DMODE*)
      (COND
       ((NULL BOOL)
        (RETURN
         (COND ((NULL Y) NIL)
               ((EQ U (SETQ Y (GET Y 'DNAME)))
                (PROGN (RMSUBS) (SETQ GDMODE* (SETQ DMODE* NIL)) Y))
               (T (OFFMODERR U Y)))))
       (T
        (PROGN
         (COND ((MEMQ U '(ROUNDED COMPLEX-ROUNDED)) (!MFEFIX)))
         (COND ((EQ X Y) (RETURN X))))))
      (COND ((NOT (SETQ Z (GET X 'REALTYPE))) (SETQ Z X)))
      (PROG (J)
        (SETQ J DOMAINLIST*)
       LAB
        (COND ((NULL J) (RETURN NIL)))
        ((LAMBDA (J)
           (COND
            ((AND (NEQ J '|:GI:|) (NOT (EQ J Z)))
             (SET
              (INTERN
               (COMPRESS (APPEND (EXPLODE '*) (EXPLODE (GET J 'DNAME)))))
              NIL))))
         (CAR J))
        (SETQ J (CDR J))
        (GO LAB))
      (RMSUBS)
      (SETQ Y (GET Y 'DNAME))
      (COND (Y (LPRIM (LIST "Domain mode" Y "changed to" U))))
      (SETQ GDMODE* (SETQ DMODE* X))
      (RETURN Y))) 
(PUT 'OFFMODERR 'NUMBER-OF-ARGS 2) 
(PUT 'OFFMODERR 'DEFINED-ON-LINE '183) 
(PUT 'OFFMODERR 'DEFINED-IN-FILE 'POLY/DMODE.RED) 
(PUT 'OFFMODERR 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE OFFMODERR (U Y)
    (LPRIW "***" (LIST "Failed attempt to turn off" U "when" Y "is on"))) 
(PUT 'DMODECHK 'NUMBER-OF-ARGS 1) 
(PUT 'DMODECHK 'DEFINED-ON-LINE '186) 
(PUT 'DMODECHK 'DEFINED-IN-FILE 'POLY/DMODE.RED) 
(PUT 'DMODECHK 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE DMODECHK (U)
    (PROG (Z)
      (COND
       ((NOT (SETQ Z (GET U 'TAG)))
        (RERROR 'POLY 6 (LIST "Domain mode error:" "No tag for" U)))
       ((NOT (EQ (GET Z 'DNAME) U))
        (RERROR 'POLY 7
                (LIST "Domain mode error:" "Inconsistent or missing DNAME for"
                      Z)))
       ((NOT (MEMQ Z DOMAINLIST*))
        (RERROR 'POLY 8 (LIST "Domain mode error:" Z "not on domain list"))))
      (SETQ U Z)
      (PROG (X)
        (SETQ X DOMAINLIST*)
       LAB
        (COND ((NULL X) (RETURN NIL)))
        ((LAMBDA (X)
           (COND ((EQUAL U X) NIL)
                 (T
                  (PROGN
                   (COND ((NOT (GET U X)) (PUT U X (MKDMODERR U X))))
                   (COND ((NOT (GET X U)) (PUT X U (MKDMODERR X U))))))))
         (CAR X))
        (SETQ X (CDR X))
        (GO LAB))
      (SETQ Z
              '(PLUS DIFFERENCE TIMES QUOTIENT I2D PREPFN PRIFN MINUSP ONEP
                     ZEROP))
      (COND ((NOT (FLAGP U 'FIELD)) (SETQ Z (CONS 'DIVIDE (CONS 'GCD Z)))))
      (PROG (X)
        (SETQ X Z)
       LAB
        (COND ((NULL X) (RETURN NIL)))
        ((LAMBDA (X)
           (COND
            ((NOT (GET U X))
             (RERROR 'POLY 9
                     (LIST "Domain mode error:" X "is not defined for" U)))))
         (CAR X))
        (SETQ X (CDR X))
        (GO LAB)))) 
(PUT 'DMODERR 'NUMBER-OF-ARGS 2) 
(PUT 'DMODERR 'DEFINED-ON-LINE '212) 
(PUT 'DMODERR 'DEFINED-IN-FILE 'POLY/DMODE.RED) 
(PUT 'DMODERR 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE DMODERR (U V)
    (RERROR 'POLY 10
            (LIST "Conversion between" (GET U 'DNAME) "and" (GET V 'DNAME)
                  "not defined"))) 
(PUT 'MKDMODERR 'NUMBER-OF-ARGS 2) 
(PUT 'MKDMODERR 'DEFINED-ON-LINE '216) 
(PUT 'MKDMODERR 'DEFINED-IN-FILE 'POLY/DMODE.RED) 
(PUT 'MKDMODERR 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE MKDMODERR (U V)
    (LIST 'LAMBDA '(*X*) (LIST 'DMODERR (MKQUOTE U) (MKQUOTE V)))) 
(ENDMODULE) 