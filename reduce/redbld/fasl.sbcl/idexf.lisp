(cl:declaim (cl:optimize cl:debug cl:safety))
(cl:declaim (sb-ext:muffle-conditions sb-ext:compiler-note cl:style-warning))
(MODULE (LIST 'IDEXF)) 
(GLOBAL '(EXFIDEAL*)) 
(PUT 'EXTERIOR-IDEAL 'NUMBER-OF-ARGS 1) 
(PUT 'EXTERIOR-IDEAL 'DEFINED-ON-LINE '32) 
(PUT 'EXTERIOR-IDEAL 'DEFINED-IN-FILE 'EXCALC/IDEXF.RED) 
(PUT 'EXTERIOR-IDEAL 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE EXTERIOR-IDEAL (U)
    (PROG (X Y)
      (RMSUBS)
      (PROG (J)
        (SETQ J U)
       LAB
        (COND ((NULL J) (RETURN NIL)))
        ((LAMBDA (J)
           (COND
            ((INDEXVP J)
             (PROG (K)
               (SETQ K (MKAINDXC (SETQ Y (FLATINDXL (CDR J))) NIL))
              LAB
               (COND ((NULL K) (RETURN NIL)))
               ((LAMBDA (K)
                  (SETQ X
                          (CONS
                           (PARTITSQ
                            (SIMPINDEXVAR
                             (CONS (CAR J) (SUBLA (PAIR Y K) (CDR J))))
                            'WEDGEFP)
                           X)))
                (CAR K))
               (SETQ K (CDR K))
               (GO LAB)))
            (T (SETQ X (CONS (PARTITSQ (SIMP* J) 'WEDGEFP) X)))))
         (CAR J))
        (SETQ J (CDR J))
        (GO LAB))
      (SETQ EXFIDEAL* (APPEND X EXFIDEAL*)))) 
(RLISTAT '(EXTERIOR-IDEAL)) 
(PUT 'REMEXF 'NUMBER-OF-ARGS 2) 
(PUT 'REMEXF 'DEFINED-ON-LINE '46) 
(PUT 'REMEXF 'DEFINED-IN-FILE 'EXCALC/IDEXF.RED) 
(PUT 'REMEXF 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE REMEXF (U V)
    (PROG (LU LV X Y Z)
      (SETQ LV (CAAR V))
     A
      (COND
       ((OR (NULL U)
            ((LAMBDA (U) (OR (ATOM U) (ATOM (CAR U)))) (SETQ LU (CAAR U))))
        (RETURN U)))
      (COND
       ((SETQ X (DIVEXF LU LV))
        (PROGN
         (SETQ Y (PARTITSQ (SIMP (LIST 'WEDGE (PREPF V) X)) 'WEDGEFP))
         (SETQ Z (NEGSQ (MULTSQ (CDAR U) (INVSQ (CDAR Y)))))
         (SETQ U (ADDPSF U (MULTPSF (CONS (CONS 1 Z) NIL) Y)))))
       (T (RETURN U)))
      (GO A))) 
(PUT 'DIVEXF 'NUMBER-OF-ARGS 2) 
(PUT 'DIVEXF 'DEFINED-ON-LINE '59) 
(PUT 'DIVEXF 'DEFINED-IN-FILE 'EXCALC/IDEXF.RED) 
(PUT 'DIVEXF 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE DIVEXF (U V)
    (PROG (X Y)
      (SETQ X (PREPF U))
      (SETQ Y (PREPF V))
      (COND ((ATOM X) (SETQ X (LIST X)))
            ((EQ (CAR X) 'WEDGE) (SETQ X (CDR X))))
      (COND ((ATOM Y) (SETQ Y (LIST Y)))
            ((EQ (CAR Y) 'WEDGE) (SETQ Y (CDR Y))))
     A
      (COND ((NULL Y) (RETURN (CONS 'WEDGE X))))
      (COND ((NULL (SETQ X (DELFORM (CAR Y) X))) (RETURN NIL)))
      (SETQ Y (CDR Y))
      (GO A))) 
(PUT 'DELFORM 'NUMBER-OF-ARGS 2) 
(PUT 'DELFORM 'DEFINED-ON-LINE '73) 
(PUT 'DELFORM 'DEFINED-IN-FILE 'EXCALC/IDEXF.RED) 
(PUT 'DELFORM 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE DELFORM (U V) (DELFORM1 U V NIL)) 
(PUT 'DELFORM1 'NUMBER-OF-ARGS 3) 
(PUT 'DELFORM1 'DEFINED-ON-LINE '76) 
(PUT 'DELFORM1 'DEFINED-IN-FILE 'EXCALC/IDEXF.RED) 
(PUT 'DELFORM1 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL GENERAL) GENERAL)) 
(DE DELFORM1 (U V W)
    (COND ((NULL V) NIL)
          ((EQUAL U (CAR V))
           (COND ((OR W (CDR V)) (APPEND (REVERSE W) (CDR V))) (T (LIST 1))))
          (T (DELFORM1 U (CDR V) (CONS (CAR V) W))))) 
(PUT 'EXF-MOD-IDEAL 'NUMBER-OF-ARGS 1) 
(PUT 'EXF-MOD-IDEAL 'DEFINED-ON-LINE '83) 
(PUT 'EXF-MOD-IDEAL 'DEFINED-IN-FILE 'EXCALC/IDEXF.RED) 
(PUT 'EXF-MOD-IDEAL 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE EXF-MOD-IDEAL (U)
    (PROG ()
      (PROG (J)
        (SETQ J EXFIDEAL*)
       LAB
        (COND ((NULL J) (RETURN NIL)))
        ((LAMBDA (J) (SETQ U (REMEXF U J))) (CAR J))
        (SETQ J (CDR J))
        (GO LAB))
      (RETURN U))) 
(ENDMODULE) 