(cl:declaim (cl:optimize cl:debug cl:safety))
(cl:declaim (sb-ext:muffle-conditions sb-ext:compiler-note cl:style-warning))
(MODULE (LIST 'HILBERTS)) 
(FLUID '(NVARS*)) 
(DE TERM (C V E) (LIST 'TIMES C (LIST 'EXPT V E))) 
(PUT 'TERM 'NUMBER-OF-ARGS 3) 
(PUT 'TERM 'DEFINED-ON-LINE '88) 
(PUT 'TERM 'DEFINED-IN-FILE 'GROEBNER/HILBERTS.RED) 
(PUT 'TERM 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL GENERAL) GENERAL)) 
(PUTC 'TERM 'INLINE '(LAMBDA (C V E) (LIST 'TIMES C (LIST 'EXPT V E)))) 
(DE VARP (M)
    (OR (AND (IDP M) M)
        (AND (PAIRP M) (EQUAL (GET (CAR M) 'SIMPFN) 'SIMPIDEN)))) 
(PUT 'VARP 'NUMBER-OF-ARGS 1) 
(PUT 'VARP 'DEFINED-ON-LINE '92) 
(PUT 'VARP 'DEFINED-IN-FILE 'GROEBNER/HILBERTS.RED) 
(PUT 'VARP 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(PUTC 'VARP 'INLINE
      '(LAMBDA (M)
         (OR (AND (IDP M) M)
             (AND (PAIRP M) (EQUAL (GET (CAR M) 'SIMPFN) 'SIMPIDEN))))) 
(DE CHECKEXPT (M)
    (AND (EQCAR M 'EXPT)
         (OR (AND (IDP (CADR M)) (CADR M))
             (AND (PAIRP (CADR M))
                  (EQUAL (GET (CAR (CADR M)) 'SIMPFN) 'SIMPIDEN)))
         (NUMBERP (CADDR M)))) 
(PUT 'CHECKEXPT 'NUMBER-OF-ARGS 1) 
(PUT 'CHECKEXPT 'DEFINED-ON-LINE '95) 
(PUT 'CHECKEXPT 'DEFINED-IN-FILE 'GROEBNER/HILBERTS.RED) 
(PUT 'CHECKEXPT 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(PUTC 'CHECKEXPT 'INLINE
      '(LAMBDA (M)
         (AND (EQCAR M 'EXPT)
              (OR (AND (IDP (CADR M)) (CADR M))
                  (AND (PAIRP (CADR M))
                       (EQUAL (GET (CAR (CADR M)) 'SIMPFN) 'SIMPIDEN)))
              (NUMBERP (CADDR M))))) 
(DE CHECKSINGLEVAR (M)
    (COND
     ((OR (AND (IDP M) M)
          (AND (PAIRP M) (EQUAL (GET (CAR M) 'SIMPFN) 'SIMPIDEN)))
      T)
     (T
      (AND (EQCAR M 'EXPT)
           (OR (AND (IDP (CADR M)) (CADR M))
               (AND (PAIRP (CADR M))
                    (EQUAL (GET (CAR (CADR M)) 'SIMPFN) 'SIMPIDEN)))
           (NUMBERP (CADDR M)))))) 
(PUT 'CHECKSINGLEVAR 'NUMBER-OF-ARGS 1) 
(PUT 'CHECKSINGLEVAR 'DEFINED-ON-LINE '98) 
(PUT 'CHECKSINGLEVAR 'DEFINED-IN-FILE 'GROEBNER/HILBERTS.RED) 
(PUT 'CHECKSINGLEVAR 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(PUTC 'CHECKSINGLEVAR 'INLINE
      '(LAMBDA (M)
         (COND
          ((OR (AND (IDP M) M)
               (AND (PAIRP M) (EQUAL (GET (CAR M) 'SIMPFN) 'SIMPIDEN)))
           T)
          (T
           (AND (EQCAR M 'EXPT)
                (OR (AND (IDP (CADR M)) (CADR M))
                    (AND (PAIRP (CADR M))
                         (EQUAL (GET (CAR (CADR M)) 'SIMPFN) 'SIMPIDEN)))
                (NUMBERP (CADDR M))))))) 
(DE CHECKMON (M)
    (COND
     ((COND
       ((OR (AND (IDP M) M)
            (AND (PAIRP M) (EQUAL (GET (CAR M) 'SIMPFN) 'SIMPIDEN)))
        T)
       (T
        (AND (EQCAR M 'EXPT)
             (OR (AND (IDP (CADR M)) (CADR M))
                 (AND (PAIRP (CADR M))
                      (EQUAL (GET (CAR (CADR M)) 'SIMPFN) 'SIMPIDEN)))
             (NUMBERP (CADDR M)))))
      T)
     ((EQCAR M 'TIMES) (CHECKTIMES (CDR M))) (T NIL))) 
(PUT 'CHECKMON 'NUMBER-OF-ARGS 1) 
(PUT 'CHECKMON 'DEFINED-ON-LINE '101) 
(PUT 'CHECKMON 'DEFINED-IN-FILE 'GROEBNER/HILBERTS.RED) 
(PUT 'CHECKMON 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(PUTC 'CHECKMON 'INLINE
      '(LAMBDA (M)
         (COND
          ((COND
            ((OR (AND (IDP M) M)
                 (AND (PAIRP M) (EQUAL (GET (CAR M) 'SIMPFN) 'SIMPIDEN)))
             T)
            (T
             (AND (EQCAR M 'EXPT)
                  (OR (AND (IDP (CADR M)) (CADR M))
                      (AND (PAIRP (CADR M))
                           (EQUAL (GET (CAR (CADR M)) 'SIMPFN) 'SIMPIDEN)))
                  (NUMBERP (CADDR M)))))
           T)
          ((EQCAR M 'TIMES) (CHECKTIMES (CDR M))) (T NIL)))) 
(DE CHECKARGS (MONL VAR)
    (AND (LISTP MONL) (EQCAR MONL 'LIST)
         (OR (AND (IDP VAR) VAR)
             (AND (PAIRP VAR) (EQUAL (GET (CAR VAR) 'SIMPFN) 'SIMPIDEN)))
         (CHECKMONL MONL))) 
(PUT 'CHECKARGS 'NUMBER-OF-ARGS 2) 
(PUT 'CHECKARGS 'DEFINED-ON-LINE '105) 
(PUT 'CHECKARGS 'DEFINED-IN-FILE 'GROEBNER/HILBERTS.RED) 
(PUT 'CHECKARGS 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(PUTC 'CHECKARGS 'INLINE
      '(LAMBDA (MONL VAR)
         (AND (LISTP MONL) (EQCAR MONL 'LIST)
              (OR (AND (IDP VAR) VAR)
                  (AND (PAIRP VAR) (EQUAL (GET (CAR VAR) 'SIMPFN) 'SIMPIDEN)))
              (CHECKMONL MONL)))) 
(PUT 'MAKEVECTOR 'NUMBER-OF-ARGS 2) 
(PUT 'MAKEVECTOR 'DEFINED-ON-LINE '109) 
(PUT 'MAKEVECTOR 'DEFINED-IN-FILE 'GROEBNER/HILBERTS.RED) 
(PUT 'MAKEVECTOR 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE MAKEVECTOR (N PAT)
    (PROG (V)
      (SETQ V (MKVECT N))
      (PROG (I)
        (SETQ I 1)
       LAB
        (COND ((MINUSP (DIFFERENCE N I)) (RETURN NIL)))
        (PUTV V I PAT)
        (SETQ I (PLUS2 I 1))
        (GO LAB))
      (RETURN V))) 
(DE ALLOCMON (N) (MAKEVECTOR N 0)) 
(PUT 'ALLOCMON 'NUMBER-OF-ARGS 1) 
(PUT 'ALLOCMON 'DEFINED-ON-LINE '115) 
(PUT 'ALLOCMON 'DEFINED-IN-FILE 'GROEBNER/HILBERTS.RED) 
(PUT 'ALLOCMON 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(PUTC 'ALLOCMON 'INLINE '(LAMBDA (N) (MAKEVECTOR N 0))) 
(DE GETNTHEXP (MON N) (GETV MON N)) 
(PUT 'GETNTHEXP 'NUMBER-OF-ARGS 2) 
(PUT 'GETNTHEXP 'DEFINED-ON-LINE '117) 
(PUT 'GETNTHEXP 'DEFINED-IN-FILE 'GROEBNER/HILBERTS.RED) 
(PUT 'GETNTHEXP 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(PUTC 'GETNTHEXP 'INLINE '(LAMBDA (MON N) (GETV MON N))) 
(DE SETNTHEXP (MON N D) (PUTV MON N D)) 
(PUT 'SETNTHEXP 'NUMBER-OF-ARGS 3) 
(PUT 'SETNTHEXP 'DEFINED-ON-LINE '119) 
(PUT 'SETNTHEXP 'DEFINED-IN-FILE 'GROEBNER/HILBERTS.RED) 
(PUT 'SETNTHEXP 'PROCEDURE_TYPE
     '(ARROW (TIMES GENERAL GENERAL GENERAL) GENERAL)) 
(PUTC 'SETNTHEXP 'INLINE '(LAMBDA (MON N D) (PUTV MON N D))) 
(DE GETTDEG (MON) (GETV MON 0)) 
(PUT 'GETTDEG 'NUMBER-OF-ARGS 1) 
(PUT 'GETTDEG 'DEFINED-ON-LINE '121) 
(PUT 'GETTDEG 'DEFINED-IN-FILE 'GROEBNER/HILBERTS.RED) 
(PUT 'GETTDEG 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(PUTC 'GETTDEG 'INLINE '(LAMBDA (MON) (GETV MON 0))) 
(DE SETTDEG (MON D) (PUTV MON 0 D)) 
(PUT 'SETTDEG 'NUMBER-OF-ARGS 2) 
(PUT 'SETTDEG 'DEFINED-ON-LINE '123) 
(PUT 'SETTDEG 'DEFINED-IN-FILE 'GROEBNER/HILBERTS.RED) 
(PUT 'SETTDEG 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(PUTC 'SETTDEG 'INLINE '(LAMBDA (MON D) (PUTV MON 0 D))) 
(DE THEEMPTYIDEAL NIL (LIST NIL NIL)) 
(PUT 'THEEMPTYIDEAL 'NUMBER-OF-ARGS 0) 
(PUT 'THEEMPTYIDEAL 'DEFINED-ON-LINE '127) 
(PUT 'THEEMPTYIDEAL 'DEFINED-IN-FILE 'GROEBNER/HILBERTS.RED) 
(PUT 'THEEMPTYIDEAL 'PROCEDURE_TYPE '(ARROW UNIT GENERAL)) 
(PUTC 'THEEMPTYIDEAL 'INLINE '(LAMBDA () (LIST NIL NIL))) 
(PUT 'GETNEXTMON 'NUMBER-OF-ARGS 1) 
(PUT 'GETNEXTMON 'DEFINED-ON-LINE '131) 
(PUT 'GETNEXTMON 'DEFINED-IN-FILE 'GROEBNER/HILBERTS.RED) 
(PUT 'GETNEXTMON 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(PUTC 'GETNEXTMON 'SMACRO
      '(LAMBDA (IDEAL)
         (PROGN
          (SETQ X (CAADR IDEAL))
          (COND ((CDADR IDEAL) (SETQ IDEAL (LIST (CAR IDEAL) (CDADR IDEAL))))
                (T (SETQ IDEAL (LIST NIL NIL))))
          X))) 
(DE NOTEMPTYIDEAL (IDEAL) (CADR IDEAL)) 
(PUT 'NOTEMPTYIDEAL 'NUMBER-OF-ARGS 1) 
(PUT 'NOTEMPTYIDEAL 'DEFINED-ON-LINE '136) 
(PUT 'NOTEMPTYIDEAL 'DEFINED-IN-FILE 'GROEBNER/HILBERTS.RED) 
(PUT 'NOTEMPTYIDEAL 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(PUTC 'NOTEMPTYIDEAL 'INLINE '(LAMBDA (IDEAL) (CADR IDEAL))) 
(DE FIRSTMON (IDEAL) (CAADR IDEAL)) 
(PUT 'FIRSTMON 'NUMBER-OF-ARGS 1) 
(PUT 'FIRSTMON 'DEFINED-ON-LINE '138) 
(PUT 'FIRSTMON 'DEFINED-IN-FILE 'GROEBNER/HILBERTS.RED) 
(PUT 'FIRSTMON 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(PUTC 'FIRSTMON 'INLINE '(LAMBDA (IDEAL) (CAADR IDEAL))) 
(DE APPENDIDEALS (IDEAL1 IDEAL2)
    (LIST (CAR IDEAL2) (APPEND (CADR IDEAL1) (CADR IDEAL2)))) 
(PUT 'APPENDIDEALS 'NUMBER-OF-ARGS 2) 
(PUT 'APPENDIDEALS 'DEFINED-ON-LINE '140) 
(PUT 'APPENDIDEALS 'DEFINED-IN-FILE 'GROEBNER/HILBERTS.RED) 
(PUT 'APPENDIDEALS 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(PUTC 'APPENDIDEALS 'INLINE
      '(LAMBDA (IDEAL1 IDEAL2)
         (LIST (CAR IDEAL2) (APPEND (CADR IDEAL1) (CADR IDEAL2))))) 
(PUT 'INSERTVAR 'NUMBER-OF-ARGS 2) 
(PUT 'INSERTVAR 'DEFINED-ON-LINE '143) 
(PUT 'INSERTVAR 'DEFINED-IN-FILE 'GROEBNER/HILBERTS.RED) 
(PUT 'INSERTVAR 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE INSERTVAR (VAR IDEAL)
    (PROG (LAST)
      (SETQ LAST (LIST (MAKEONEVARMON VAR)))
      (RETURN (LIST LAST (APPEND (CADR IDEAL) LAST))))) 
(PUT 'ADDTOIDEAL 'NUMBER-OF-ARGS 2) 
(PUT 'ADDTOIDEAL 'DEFINED-ON-LINE '148) 
(PUT 'ADDTOIDEAL 'DEFINED-IN-FILE 'GROEBNER/HILBERTS.RED) 
(PUT 'ADDTOIDEAL 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE ADDTOIDEAL (MON IDEAL)
    (PROG (LAST)
      (SETQ LAST (LIST MON))
      (COND ((EQUAL IDEAL (LIST NIL NIL)) (RPLACA (CDR IDEAL) LAST))
            (T (RPLACD (CAR IDEAL) LAST)))
      (RPLACA IDEAL LAST))) 
(PUT 'HILBSEREVAL 'NUMBER-OF-ARGS 1) 
(PUT 'HILBSEREVAL 'DEFINED-ON-LINE '159) 
(PUT 'HILBSEREVAL 'DEFINED-IN-FILE 'GROEBNER/HILBERTS.RED) 
(PUT 'HILBSEREVAL 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE HILBSEREVAL (U)
    (PROG (L MONL VAR)
      (SETQ L (LENGTH U))
      (COND
       ((OR (LESSP L 1) (GREATERP L 2))
        (RERROR 'GROEBNR2 17
                "Usage: hilb({monomial_1,...,monomial_n} [,variable])"))
       ((EQUAL L 1) (PROGN (SETQ MONL (REVAL1 (CAR U) T)) (SETQ VAR 'X)))
       (T
        (PROGN (SETQ MONL (REVAL1 (CAR U) T)) (SETQ VAR (REVAL1 (CADR U) T)))))
      (SETQ MONL
              (CONS 'LIST
                    (PROG (AA FORALL-RESULT FORALL-ENDPTR)
                      (SETQ AA (CDR MONL))
                      (COND ((NULL AA) (RETURN NIL)))
                      (SETQ FORALL-RESULT
                              (SETQ FORALL-ENDPTR
                                      (CONS
                                       ((LAMBDA (AA) (REVAL1 AA T)) (CAR AA))
                                       NIL)))
                     LOOPLABEL
                      (SETQ AA (CDR AA))
                      (COND ((NULL AA) (RETURN FORALL-RESULT)))
                      (RPLACD FORALL-ENDPTR
                              (CONS ((LAMBDA (AA) (REVAL1 AA T)) (CAR AA))
                                    NIL))
                      (SETQ FORALL-ENDPTR (CDR FORALL-ENDPTR))
                      (GO LOOPLABEL))))
      (COND
       ((NOT
         (AND (LISTP MONL) (EQCAR MONL 'LIST)
              (OR (AND (IDP VAR) VAR)
                  (AND (PAIRP VAR) (EQUAL (GET (CAR VAR) 'SIMPFN) 'SIMPIDEN)))
              (CHECKMONL MONL)))
        (RERROR 'GROEBNR2 18
                "Usage: hilb({monomial_1,...,monomial_n} [,variable])")))
      (RETURN (REVAL1 (COEFFLIST2PREFIX (NPOL (GLTB2ARRIDEAL MONL)) VAR) NIL)))) 
(PUT 'HILB 'PSOPFN 'HILBSEREVAL) 
(PUT 'CHECKMONL 'NUMBER-OF-ARGS 1) 
(PUT 'CHECKMONL 'DEFINED-ON-LINE '179) 
(PUT 'CHECKMONL 'DEFINED-IN-FILE 'GROEBNER/HILBERTS.RED) 
(PUT 'CHECKMONL 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE CHECKMONL (MONL)
    (PROG (FLAG TMP)
      (SETQ FLAG T)
      (SETQ MONL (GLTBFIX MONL))
      (PROG ()
       WHILELABEL
        (COND ((NOT (AND MONL FLAG)) (RETURN NIL)))
        (PROGN
         (SETQ TMP (CAR MONL))
         (SETQ FLAG
                 (COND
                  ((COND
                    ((OR (AND (IDP TMP) TMP)
                         (AND (PAIRP TMP)
                              (EQUAL (GET (CAR TMP) 'SIMPFN) 'SIMPIDEN)))
                     T)
                    (T
                     (AND (EQCAR TMP 'EXPT)
                          (OR (AND (IDP (CADR TMP)) (CADR TMP))
                              (AND (PAIRP (CADR TMP))
                                   (EQUAL (GET (CAR (CADR TMP)) 'SIMPFN)
                                          'SIMPIDEN)))
                          (NUMBERP (CADDR TMP)))))
                   T)
                  ((EQCAR TMP 'TIMES) (CHECKTIMES (CDR TMP))) (T NIL)))
         (SETQ MONL (CDR MONL)))
        (GO WHILELABEL))
      (RETURN FLAG))) 
(PUT 'CHECKTIMES 'NUMBER-OF-ARGS 1) 
(PUT 'CHECKTIMES 'DEFINED-ON-LINE '186) 
(PUT 'CHECKTIMES 'DEFINED-IN-FILE 'GROEBNER/HILBERTS.RED) 
(PUT 'CHECKTIMES 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE CHECKTIMES (M)
    (PROG (FLAG TMP)
      (SETQ FLAG T)
      (PROG ()
       WHILELABEL
        (COND ((NOT (AND M FLAG)) (RETURN NIL)))
        (PROGN
         (SETQ TMP (CAR M))
         (SETQ FLAG
                 (COND
                  ((OR (AND (IDP TMP) TMP)
                       (AND (PAIRP TMP)
                            (EQUAL (GET (CAR TMP) 'SIMPFN) 'SIMPIDEN)))
                   T)
                  (T
                   (AND (EQCAR TMP 'EXPT)
                        (OR (AND (IDP (CADR TMP)) (CADR TMP))
                            (AND (PAIRP (CADR TMP))
                                 (EQUAL (GET (CAR (CADR TMP)) 'SIMPFN)
                                        'SIMPIDEN)))
                        (NUMBERP (CADDR TMP))))))
         (SETQ M (CDR M)))
        (GO WHILELABEL))
      (RETURN FLAG))) 
(PUT 'COEFFLIST2PREFIX 'NUMBER-OF-ARGS 2) 
(PUT 'COEFFLIST2PREFIX 'DEFINED-ON-LINE '192) 
(PUT 'COEFFLIST2PREFIX 'DEFINED-IN-FILE 'GROEBNER/HILBERTS.RED) 
(PUT 'COEFFLIST2PREFIX 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE COEFFLIST2PREFIX (CL VAR)
    (PROG (POLY I)
      (SETQ I 0)
      (PROG (C)
        (SETQ C CL)
       LAB
        (COND ((NULL C) (RETURN NIL)))
        ((LAMBDA (C)
           (PROGN
            (SETQ POLY (CONS (LIST 'TIMES C (LIST 'EXPT VAR I)) POLY))
            (SETQ I (PLUS I 1))))
         (CAR C))
        (SETQ C (CDR C))
        (GO LAB))
      (RETURN (CONS 'PLUS POLY)))) 
(PUT 'INDETS 'NUMBER-OF-ARGS 1) 
(PUT 'INDETS 'DEFINED-ON-LINE '198) 
(PUT 'INDETS 'DEFINED-IN-FILE 'GROEBNER/HILBERTS.RED) 
(PUT 'INDETS 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE INDETS (L)
    (PROG (VARLIST)
      (PROG (M)
        (SETQ M L)
       LAB
        (COND ((NULL M) (RETURN NIL)))
        ((LAMBDA (M)
           (COND
            ((NEQ M 'LIST)
             (COND ((ATOM M) (SETQ VARLIST (UNION (LIST M) VARLIST)))
                   ((EQCAR M 'EXPT)
                    (SETQ VARLIST (UNION (LIST (CADR M)) VARLIST)))
                   (T (SETQ VARLIST (UNION (INDETS (CDR M)) VARLIST)))))))
         (CAR M))
        (SETQ M (CDR M))
        (GO LAB))
      (RETURN VARLIST))) 
(PUT 'BUILDASSOC 'NUMBER-OF-ARGS 1) 
(PUT 'BUILDASSOC 'DEFINED-ON-LINE '212) 
(PUT 'BUILDASSOC 'DEFINED-IN-FILE 'GROEBNER/HILBERTS.RED) 
(PUT 'BUILDASSOC 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE BUILDASSOC (L)
    (PROG (I)
      (SETQ I 0)
      (RETURN
       (PROG (VAR FORALL-RESULT FORALL-ENDPTR)
         (SETQ VAR L)
         (COND ((NULL VAR) (RETURN NIL)))
         (SETQ FORALL-RESULT
                 (SETQ FORALL-ENDPTR
                         (CONS
                          ((LAMBDA (VAR)
                             (PROGN (SETQ I (IPLUS2 I 1)) (CONS VAR I)))
                           (CAR VAR))
                          NIL)))
        LOOPLABEL
         (SETQ VAR (CDR VAR))
         (COND ((NULL VAR) (RETURN FORALL-RESULT)))
         (RPLACD FORALL-ENDPTR
                 (CONS
                  ((LAMBDA (VAR) (PROGN (SETQ I (IPLUS2 I 1)) (CONS VAR I)))
                   (CAR VAR))
                  NIL))
         (SETQ FORALL-ENDPTR (CDR FORALL-ENDPTR))
         (GO LOOPLABEL))))) 
(PUT 'MONS 'NUMBER-OF-ARGS 1) 
(PUT 'MONS 'DEFINED-ON-LINE '218) 
(PUT 'MONS 'DEFINED-IN-FILE 'GROEBNER/HILBERTS.RED) 
(PUT 'MONS 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE MONS (L)
    (PROG (MONLIST)
      (PROG (M)
        (SETQ M L)
       LAB
        (COND ((NULL M) (RETURN NIL)))
        ((LAMBDA (M)
           (COND
            ((NEQ M 'LIST)
             (SETQ MONLIST
                     (COND ((ATOM M) (CONS (CONS M 1) MONLIST))
                           ((EQCAR M 'EXPT)
                            (CONS (CONS (CADR M) (CADDR M)) MONLIST))
                           (T
                            (CONS
                             (PROG (X FORALL-RESULT FORALL-ENDPTR)
                               (SETQ X (CDR M))
                               (COND ((NULL X) (RETURN NIL)))
                               (SETQ FORALL-RESULT
                                       (SETQ FORALL-ENDPTR
                                               (CONS
                                                ((LAMBDA (X) (MONSAUX X))
                                                 (CAR X))
                                                NIL)))
                              LOOPLABEL
                               (SETQ X (CDR X))
                               (COND ((NULL X) (RETURN FORALL-RESULT)))
                               (RPLACD FORALL-ENDPTR
                                       (CONS ((LAMBDA (X) (MONSAUX X)) (CAR X))
                                             NIL))
                               (SETQ FORALL-ENDPTR (CDR FORALL-ENDPTR))
                               (GO LOOPLABEL))
                             MONLIST)))))))
         (CAR M))
        (SETQ M (CDR M))
        (GO LAB))
      (RETURN MONLIST))) 
(PUT 'MONSAUX 'NUMBER-OF-ARGS 1) 
(PUT 'MONSAUX 'DEFINED-ON-LINE '235) 
(PUT 'MONSAUX 'DEFINED-IN-FILE 'GROEBNER/HILBERTS.RED) 
(PUT 'MONSAUX 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE MONSAUX (M)
    (COND ((EQCAR M 'EXPT) (CONS (CADR M) (CADDR M))) (T (CONS M 1)))) 
(PUT 'LMON2ARRMON 'NUMBER-OF-ARGS 1) 
(PUT 'LMON2ARRMON 'DEFINED-ON-LINE '238) 
(PUT 'LMON2ARRMON 'DEFINED-IN-FILE 'GROEBNER/HILBERTS.RED) 
(PUT 'LMON2ARRMON 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE LMON2ARRMON (M)
    (PROG (MON TDEG)
      (SETQ TDEG 0)
      (SETQ MON (MAKEVECTOR NVARS* 0))
      (COND
       ((LISTP M)
        (PROG (VARNODOTEXP)
          (SETQ VARNODOTEXP M)
         LAB
          (COND ((NULL VARNODOTEXP) (RETURN NIL)))
          ((LAMBDA (VARNODOTEXP)
             (PROGN
              (PUTV MON (CAR VARNODOTEXP) (CDR VARNODOTEXP))
              (SETQ TDEG (PLUS TDEG (CDR VARNODOTEXP)))))
           (CAR VARNODOTEXP))
          (SETQ VARNODOTEXP (CDR VARNODOTEXP))
          (GO LAB)))
       (T (PROGN (PUTV MON (CAR M) (CDR M)) (SETQ TDEG (PLUS TDEG (CDR M))))))
      (PUTV MON 0 TDEG)
      (RETURN MON))) 
(PUT 'GLTBFIX 'NUMBER-OF-ARGS 1) 
(PUT 'GLTBFIX 'DEFINED-ON-LINE '253) 
(PUT 'GLTBFIX 'DEFINED-IN-FILE 'GROEBNER/HILBERTS.RED) 
(PUT 'GLTBFIX 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE GLTBFIX (L)
    (COND ((AND (LISTP (CADR L)) (EQUAL (CAADR L) 'LIST)) (CADR L)) (T L))) 
(PUT 'GEGE 'NUMBER-OF-ARGS 2) 
(PUT 'GEGE 'DEFINED-ON-LINE '258) 
(PUT 'GEGE 'DEFINED-IN-FILE 'GROEBNER/HILBERTS.RED) 
(PUT 'GEGE 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE GEGE (M1 M2) (COND ((GEQ (GETV M1 0) (GETV M2 0)) T) (T NIL))) 
(PUT 'GETENDPTR 'NUMBER-OF-ARGS 1) 
(PUT 'GETENDPTR 'DEFINED-ON-LINE '261) 
(PUT 'GETENDPTR 'DEFINED-IN-FILE 'GROEBNER/HILBERTS.RED) 
(PUT 'GETENDPTR 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE GETENDPTR (L)
    (PROG (PTR)
      (PROG ()
       WHILELABEL
        (COND ((NOT L) (RETURN NIL)))
        (PROGN (SETQ PTR L) (SETQ L (CDR L)))
        (GO WHILELABEL))
      (RETURN PTR))) 
(PUT 'GLTB2ARRIDEAL 'NUMBER-OF-ARGS 1) 
(PUT 'GLTB2ARRIDEAL 'DEFINED-ON-LINE '265) 
(PUT 'GLTB2ARRIDEAL 'DEFINED-IN-FILE 'GROEBNER/HILBERTS.RED) 
(PUT 'GLTB2ARRIDEAL 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE GLTB2ARRIDEAL (XGLTB)
    (PROG (L)
      (SETQ L (INDETS (GLTBFIX XGLTB)))
      (SETQ NVARS* (LENGTH L))
      (SETQ L (SUBLIS (BUILDASSOC L) (MONS (GLTBFIX XGLTB))))
      (SETQ L
              (PROG (M FORALL-RESULT FORALL-ENDPTR)
                (SETQ M L)
                (COND ((NULL M) (RETURN NIL)))
                (SETQ FORALL-RESULT
                        (SETQ FORALL-ENDPTR
                                (CONS ((LAMBDA (M) (LMON2ARRMON M)) (CAR M))
                                      NIL)))
               LOOPLABEL
                (SETQ M (CDR M))
                (COND ((NULL M) (RETURN FORALL-RESULT)))
                (RPLACD FORALL-ENDPTR
                        (CONS ((LAMBDA (M) (LMON2ARRMON M)) (CAR M)) NIL))
                (SETQ FORALL-ENDPTR (CDR FORALL-ENDPTR))
                (GO LOOPLABEL)))
      (SETQ L (SORT L 'GEGE))
      (RETURN (LIST (GETENDPTR L) L)))) 
(PUT 'NPOL 'NUMBER-OF-ARGS 1) 
(PUT 'NPOL 'DEFINED-ON-LINE '278) 
(PUT 'NPOL 'DEFINED-IN-FILE 'GROEBNER/HILBERTS.RED) 
(PUT 'NPOL 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE NPOL (IDEAL)
    (PROG (V SI)
      (SETQ V (NEXTVAR IDEAL))
      (COND ((NOT V) (RETURN (BASECASEPOL IDEAL))))
      (SETQ SI (SPLITIDEAL IDEAL V))
      (RETURN (SHIFTADD (NPOL (CAR SI)) (NPOL (CADR SI)))))) 
(PUT 'DIVIDESBYVAR 'NUMBER-OF-ARGS 2) 
(PUT 'DIVIDESBYVAR 'DEFINED-ON-LINE '285) 
(PUT 'DIVIDESBYVAR 'DEFINED-IN-FILE 'GROEBNER/HILBERTS.RED) 
(PUT 'DIVIDESBYVAR 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE DIVIDESBYVAR (VAR MON)
    (PROG (DIV)
      (COND ((EQUAL (GETV MON VAR) 0) (RETURN NIL)))
      (SETQ DIV (MAKEVECTOR NVARS* 0))
      (PROG (I)
        (SETQ I 1)
       LAB
        (COND ((MINUSP (DIFFERENCE NVARS* I)) (RETURN NIL)))
        (PUTV DIV I (GETV MON I))
        (SETQ I (PLUS2 I 1))
        (GO LAB))
      (PUTV DIV VAR (DIFFERENCE (GETV MON VAR) 1))
      (PUTV DIV 0 (DIFFERENCE (GETV MON 0) 1))
      (RETURN DIV))) 
(PUT 'DIVIDES 'NUMBER-OF-ARGS 2) 
(PUT 'DIVIDES 'DEFINED-ON-LINE '292) 
(PUT 'DIVIDES 'DEFINED-IN-FILE 'GROEBNER/HILBERTS.RED) 
(PUT 'DIVIDES 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE DIVIDES (M1 M2)
    (PROG (M D I)
      (SETQ I 1)
      (SETQ M (MAKEVECTOR NVARS* 0))
      (PUTV M 0 (SETQ D (DIFFERENCE (GETV M2 0) (GETV M1 0))))
      (PROG ()
       WHILELABEL
        (COND ((NOT (AND (GEQ D 0) (LEQ I NVARS*))) (RETURN NIL)))
        (PROGN
         (PUTV M I (SETQ D (DIFFERENCE (GETV M2 I) (GETV M1 I))))
         (SETQ I (PLUS I 1)))
        (GO WHILELABEL))
      (RETURN (COND ((LESSP D 0) NIL) (T M))))) 
(PUT 'SHIFTADD 'NUMBER-OF-ARGS 2) 
(PUT 'SHIFTADD 'DEFINED-ON-LINE '303) 
(PUT 'SHIFTADD 'DEFINED-IN-FILE 'GROEBNER/HILBERTS.RED) 
(PUT 'SHIFTADD 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE SHIFTADD (P1 P2)
    (PROG (P PPTR)
      (SETQ PPTR (SETQ P (CONS (CAR P1) NIL)))
      (SETQ P1 (CDR P1))
      (PROG ()
       WHILELABEL
        (COND ((NOT (AND P1 P2)) (RETURN NIL)))
        (PROGN
         (RPLACD PPTR (CONS (PLUS (CAR P1) (CAR P2)) NIL))
         (SETQ P1 (CDR P1))
         (SETQ P2 (CDR P2))
         (SETQ PPTR (CDR PPTR)))
        (GO WHILELABEL))
      (COND (P1 (RPLACD PPTR P1)) (T (RPLACD PPTR P2)))
      (RETURN P))) 
(PUT 'REMMULT 'NUMBER-OF-ARGS 2) 
(PUT 'REMMULT 'DEFINED-ON-LINE '314) 
(PUT 'REMMULT 'DEFINED-IN-FILE 'GROEBNER/HILBERTS.RED) 
(PUT 'REMMULT 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE REMMULT (IPP1 IPP2)
    (PROG (FMON INEW ISEARCH PRIMEFLAG X)
      (SETQ X NIL)
      (SETQ INEW (LIST NIL NIL))
      (PROG ()
       WHILELABEL
        (COND ((NOT (AND (CADR IPP1) (CADR IPP2))) (RETURN NIL)))
        (PROG ()
          (COND
           ((LESSP (GETV (CAADR IPP2) 0) (GETV (CAADR IPP1) 0))
            (PROGN
             (SETQ FMON
                     (PROGN
                      (SETQ X (CAADR IPP1))
                      (COND
                       ((CDADR IPP1)
                        (SETQ IPP1 (LIST (CAR IPP1) (CDADR IPP1))))
                       (T (SETQ IPP1 (LIST NIL NIL))))
                      X))
             (SETQ ISEARCH IPP2)))
           (T
            (PROGN
             (SETQ FMON
                     (PROGN
                      (SETQ X (CAADR IPP2))
                      (COND
                       ((CDADR IPP2)
                        (SETQ IPP2 (LIST (CAR IPP2) (CDADR IPP2))))
                       (T (SETQ IPP2 (LIST NIL NIL))))
                      X))
             (SETQ ISEARCH IPP1))))
          (SETQ PRIMEFLAG T)
          (PROG ()
           WHILELABEL
            (COND ((NOT (AND PRIMEFLAG (CADR ISEARCH))) (RETURN NIL)))
            (COND
             ((DIVIDES
               (PROGN
                (SETQ X (CAADR ISEARCH))
                (COND
                 ((CDADR ISEARCH)
                  (SETQ ISEARCH (LIST (CAR ISEARCH) (CDADR ISEARCH))))
                 (T (SETQ ISEARCH (LIST NIL NIL))))
                X)
               FMON)
              (SETQ PRIMEFLAG NIL)))
            (GO WHILELABEL))
          (COND (PRIMEFLAG (ADDTOIDEAL FMON INEW))))
        (GO WHILELABEL))
      (RETURN
       (COND ((CADR IPP1) (LIST (CAR IPP1) (APPEND (CADR INEW) (CADR IPP1))))
             (T (LIST (CAR IPP2) (APPEND (CADR INEW) (CADR IPP2)))))))) 
(PUT 'NEXTVAR 'NUMBER-OF-ARGS 1) 
(PUT 'NEXTVAR 'DEFINED-ON-LINE '330) 
(PUT 'NEXTVAR 'DEFINED-IN-FILE 'GROEBNER/HILBERTS.RED) 
(PUT 'NEXTVAR 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE NEXTVAR (IDEAL)
    (PROG (M VAR X)
      (SETQ X NIL)
      (PROG ()
       REPEATLABEL
        (PROGN
         (SETQ M
                 (PROGN
                  (SETQ X (CAADR IDEAL))
                  (COND
                   ((CDADR IDEAL)
                    (SETQ IDEAL (LIST (CAR IDEAL) (CDADR IDEAL))))
                   (T (SETQ IDEAL (LIST NIL NIL))))
                  X))
         (SETQ VAR (GETVARIFNOTSINGLE M))
         NIL)
        (COND ((NOT (OR VAR (EQUAL IDEAL (LIST NIL NIL)))) (GO REPEATLABEL))))
      (RETURN VAR))) 
(PUT 'GETVARIFNOTSINGLE 'NUMBER-OF-ARGS 1) 
(PUT 'GETVARIFNOTSINGLE 'DEFINED-ON-LINE '339) 
(PUT 'GETVARIFNOTSINGLE 'DEFINED-IN-FILE 'GROEBNER/HILBERTS.RED) 
(PUT 'GETVARIFNOTSINGLE 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE GETVARIFNOTSINGLE (MON)
    (PROG (FOUNDVARFLAG EXP I)
      (SETQ I 0)
      (PROG ()
       WHILELABEL
        (COND ((NOT (NOT FOUNDVARFLAG)) (RETURN NIL)))
        (PROGN
         (SETQ I (PLUS I 1))
         (SETQ EXP (GETV MON I))
         (COND ((GREATERP EXP 0) (SETQ FOUNDVARFLAG T))))
        (GO WHILELABEL))
      (SETQ FOUNDVARFLAG NIL)
      (PROG ()
       WHILELABEL
        (COND ((NOT (AND (LESSP I NVARS*) (NOT FOUNDVARFLAG))) (RETURN NIL)))
        (PROGN
         (SETQ I (PLUS I 1))
         (SETQ EXP (GETV MON I))
         (COND ((GREATERP EXP 0) (SETQ FOUNDVARFLAG T))))
        (GO WHILELABEL))
      (COND (FOUNDVARFLAG (RETURN I)) (T (RETURN NIL))))) 
(PUT 'MAKEONEVARMON 'NUMBER-OF-ARGS 1) 
(PUT 'MAKEONEVARMON 'DEFINED-ON-LINE '352) 
(PUT 'MAKEONEVARMON 'DEFINED-IN-FILE 'GROEBNER/HILBERTS.RED) 
(PUT 'MAKEONEVARMON 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE MAKEONEVARMON (VINDEX)
    (PROG (MON)
      (SETQ MON (MAKEVECTOR NVARS* 0))
      (PROG (I)
        (SETQ I 1)
       LAB
        (COND ((MINUSP (DIFFERENCE NVARS* I)) (RETURN NIL)))
        (PUTV MON I 0)
        (SETQ I (PLUS2 I 1))
        (GO LAB))
      (PUTV MON VINDEX 1)
      (PUTV MON 0 1)
      (RETURN MON))) 
(PUT 'SPLITIDEAL 'NUMBER-OF-ARGS 2) 
(PUT 'SPLITIDEAL 'DEFINED-ON-LINE '359) 
(PUT 'SPLITIDEAL 'DEFINED-IN-FILE 'GROEBNER/HILBERTS.RED) 
(PUT 'SPLITIDEAL 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE SPLITIDEAL (IDEAL VAR)
    (PROG (DIV IDEAL1 IDEAL2 M X)
      (SETQ X NIL)
      (SETQ IDEAL1 (LIST NIL NIL))
      (SETQ IDEAL2 (LIST NIL NIL))
      (PROG ()
       WHILELABEL
        (COND ((NOT (CADR IDEAL)) (RETURN NIL)))
        (PROGN
         (SETQ M
                 (PROGN
                  (SETQ X (CAADR IDEAL))
                  (COND
                   ((CDADR IDEAL)
                    (SETQ IDEAL (LIST (CAR IDEAL) (CDADR IDEAL))))
                   (T (SETQ IDEAL (LIST NIL NIL))))
                  X))
         (COND ((SETQ DIV (DIVIDESBYVAR VAR M)) (ADDTOIDEAL DIV IDEAL2))
               (T (ADDTOIDEAL M IDEAL1))))
        (GO WHILELABEL))
      (SETQ IDEAL2 (REMMULT IDEAL1 IDEAL2))
      (SETQ IDEAL1 (INSERTVAR VAR IDEAL1))
      (RETURN (LIST IDEAL1 IDEAL2)))) 
(PUT 'BASECASEPOL 'NUMBER-OF-ARGS 1) 
(PUT 'BASECASEPOL 'DEFINED-ON-LINE '370) 
(PUT 'BASECASEPOL 'DEFINED-IN-FILE 'GROEBNER/HILBERTS.RED) 
(PUT 'BASECASEPOL 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE BASECASEPOL (IDEAL)
    (PROG (P DEGSOFAR E TDEG)
      (SETQ TDEG 0)
      (PROG (MON)
        (SETQ MON (CADR IDEAL))
       LAB
        (COND ((NULL MON) (RETURN NIL)))
        ((LAMBDA (MON) (SETQ TDEG (PLUS TDEG (GETV MON 0)))) (CAR MON))
        (SETQ MON (CDR MON))
        (GO LAB))
      (SETQ P (MAKEVECTOR TDEG 0))
      (PUTV P 0 1)
      (SETQ DEGSOFAR 0)
      (PROG (MON)
        (SETQ MON (CADR IDEAL))
       LAB
        (COND ((NULL MON) (RETURN NIL)))
        ((LAMBDA (MON)
           (PROGN
            (SETQ E (GETV MON 0))
            (PROG (J)
              (SETQ J DEGSOFAR)
             LAB
              (COND ((MINUSP (TIMES (MINUS 1) (DIFFERENCE 0 J))) (RETURN NIL)))
              (PUTV P (PLUS J E) (DIFFERENCE (GETV P (PLUS J E)) (GETV P J)))
              (SETQ J (PLUS2 J (MINUS 1)))
              (GO LAB))
            (SETQ DEGSOFAR (PLUS DEGSOFAR E))))
         (CAR MON))
        (SETQ MON (CDR MON))
        (GO LAB))
      (RETURN (VECTOR2LIST P)))) 
(PUT 'VECTOR2LIST 'NUMBER-OF-ARGS 1) 
(PUT 'VECTOR2LIST 'DEFINED-ON-LINE '384) 
(PUT 'VECTOR2LIST 'DEFINED-IN-FILE 'GROEBNER/HILBERTS.RED) 
(PUT 'VECTOR2LIST 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE VECTOR2LIST (V)
    (PROG (U)
      (PROG (I)
        (SETQ I (UPBV V))
       LAB
        (COND ((MINUSP (TIMES (MINUS 1) (DIFFERENCE 0 I))) (RETURN NIL)))
        (SETQ U (CONS (GETV V I) U))
        (SETQ I (PLUS2 I (MINUS 1)))
        (GO LAB))
      (RETURN U))) 
(ENDMODULE) 