(cl:declaim (cl:optimize cl:debug cl:safety))
(cl:declaim (sb-ext:muffle-conditions sb-ext:compiler-note cl:style-warning))
(MODULE (LIST 'RLSERVICES)) 
(REVISION 'RLSERVICES
          "$Id: rlservices.red 6081 2021-10-05 12:19:46Z thomas-sturm $") 
(COPYRIGHT 'RLSERVICES "(c) 2016-2017 T. Sturm") 
(PUT 'RL1EQUATION 'RTYPEFN 'RTYPEPART) 
(PUT 'RL1EQUATION 'RL_SUPPORT 'RL_AMSERVICE) 
(PUT 'RL1EQUATION 'RL_SMSERVICE 'RL_1EQUATION) 
(PUT 'RL1EQUATION 'NAMES '(CONJUNCTION VARIABLE ASSUME)) 
(PUT 'RL1EQUATION 'INTYPES '("Formula" "Variable" "List(Atom)")) 
(PUT 'RL1EQUATION 'DEFAULTS '((ASSUME LIST))) 
(PUT 'RL1EQUATION 'OUTTYPE "Formula") 
(PUT 'RL1EQUATION 'DESCRIPTION
     "equivalent DNF with one relevant equation in each branch (DCFSF)") 
(PUT 'RL1EQUATION 'DOCS
     '("conjunction of atoms" "variable to be considered"
       "atomic input assumptions")) 
(PUT 'RL_1EQUATION 'RL_AMSERVICE 'RL1EQUATION) 
(PUT 'RL1EQUATION 'PSOPFN 'RL_1EQUATION$) 
(PUT 'RL_1EQUATION$ 'CLEANUPFN 'RL_CLEANUP) 
(PUT 'RL_1EQUATION$ 'NUMBER-OF-ARGS 1) 
(DE RL_1EQUATION$ (U)
    (RL_SERVICEWRAPPER 'RL_*1EQUATION U '(CONJUNCTION VARIABLE ASSUME)
                       '(FORMULA VARIABLE (LIST ATOM)) '((ASSUME LIST))
                       'FORMULA 'RL_1EQUATION* 'RL1EQUATION)) 
(PUT 'RL_*1EQUATION 'NUMBER-OF-ARGS 3) 
(DE RL_*1EQUATION (CONJUNCTION VARIABLE ASSUME)
    (APPLY 'RL_1EQUATION (LIST CONJUNCTION VARIABLE ASSUME))) 
(FLUID '(RL_1EQUATION*)) 
(SETQ RL_SERVL* (CONS 'RL_1EQUATION* RL_SERVL*)) 
(PUT 'RL_1EQUATION 'RL_SUPPORT 'RL_SMSERVICE) 
(SETQ RL_SERVICES* (CONS 'RL_1EQUATION RL_SERVICES*)) 
(PUT 'RL_1EQUATION 'NUMBER-OF-ARGS 3) 
(DE RL_1EQUATION (CONJUNCTION VARIABLE ASSUME)
    (APPLY RL_1EQUATION* (LIST CONJUNCTION VARIABLE ASSUME))) 
(PUT 'RLALL 'RTYPEFN 'RTYPEPART) 
(PUT 'RLALL 'RL_SUPPORT 'RL_AMSERVICE) 
(PUT 'RLALL 'RL_SMSERVICE 'RL_ALL) 
(PUT 'RLALL 'NAMES '(FORMULA EXCEPT)) 
(PUT 'RLALL 'INTYPES '("Formula" "List(Variable)")) 
(PUT 'RLALL 'DEFAULTS '((EXCEPT LIST))) 
(PUT 'RLALL 'OUTTYPE "Formula") 
(PUT 'RLALL 'DESCRIPTION "universal closure") 
(PUT 'RLALL 'SEEALSO '(RLEX)) 
(PUT 'RLALL 'DOCS
     '("first-order input formula" "variables not to be quantified")) 
(PUT 'RL_ALL 'RL_AMSERVICE 'RLALL) 
(PUT 'RLALL 'PSOPFN 'RL_ALL$) 
(PUT 'RL_ALL$ 'CLEANUPFN 'RL_CLEANUP) 
(PUT 'RL_ALL$ 'NUMBER-OF-ARGS 1) 
(DE RL_ALL$ (U)
    (RL_SERVICEWRAPPER 'RL_*ALL U '(FORMULA EXCEPT) '(FORMULA (LIST VARIABLE))
                       '((EXCEPT LIST)) 'FORMULA 'RL_ALL* 'RLALL)) 
(PUT 'RL_*ALL 'NUMBER-OF-ARGS 2) 
(DE RL_*ALL (FORMULA EXCEPT) (APPLY 'RL_ALL (LIST FORMULA EXCEPT))) 
(FLUID '(RL_ALL*)) 
(SETQ RL_SERVL* (CONS 'RL_ALL* RL_SERVL*)) 
(PUT 'RL_ALL 'RL_SUPPORT 'RL_SMSERVICE) 
(SETQ RL_SERVICES* (CONS 'RL_ALL RL_SERVICES*)) 
(PUT 'RL_ALL 'NUMBER-OF-ARGS 2) 
(DE RL_ALL (FORMULA EXCEPT) (APPLY RL_ALL* (LIST FORMULA EXCEPT))) 
(PUT 'RLATL 'RTYPEFN 'RTYPEPART) 
(PUT 'RLATL 'RL_SUPPORT 'RL_AMSERVICE) 
(PUT 'RLATL 'RL_SMSERVICE 'RL_ATL) 
(PUT 'RLATL 'NAMES '(FORMULA)) 
(PUT 'RLATL 'INTYPES '("Formula")) 
(PUT 'RLATL 'DEFAULTS 'NIL) 
(PUT 'RLATL 'OUTTYPE "List(Atom)") 
(PUT 'RLATL 'DESCRIPTION "set of contained atomic formulas") 
(PUT 'RLATL 'SEEALSO '(RLATML RLATNUM RLTERML)) 
(PUT 'RLATL 'DOCS '("first-order input formula")) 
(PUT 'RL_ATL 'RL_AMSERVICE 'RLATL) 
(PUT 'RLATL 'PSOPFN 'RL_ATL$) 
(PUT 'RL_ATL$ 'CLEANUPFN 'RL_CLEANUP) 
(PUT 'RL_ATL$ 'NUMBER-OF-ARGS 1) 
(DE RL_ATL$ (U)
    (RL_SERVICEWRAPPER 'RL_*ATL U '(FORMULA) '(FORMULA) 'NIL '(LIST ATOM)
                       'RL_ATL* 'RLATL)) 
(PUT 'RL_*ATL 'NUMBER-OF-ARGS 1) 
(DE RL_*ATL (FORMULA) (APPLY 'RL_ATL (LIST FORMULA))) 
(FLUID '(RL_ATL*)) 
(SETQ RL_SERVL* (CONS 'RL_ATL* RL_SERVL*)) 
(PUT 'RL_ATL 'RL_SUPPORT 'RL_SMSERVICE) 
(SETQ RL_SERVICES* (CONS 'RL_ATL RL_SERVICES*)) 
(PUT 'RL_ATL 'NUMBER-OF-ARGS 1) 
(DE RL_ATL (FORMULA) (APPLY RL_ATL* (LIST FORMULA))) 
(PUT 'RLATML 'RTYPEFN 'RTYPEPART) 
(PUT 'RLATML 'RL_SUPPORT 'RL_AMSERVICE) 
(PUT 'RLATML 'RL_SMSERVICE 'RL_ATML) 
(PUT 'RLATML 'NAMES '(FORMULA)) 
(PUT 'RLATML 'INTYPES '("Formula")) 
(PUT 'RLATML 'DEFAULTS 'NIL) 
(PUT 'RLATML 'OUTTYPE "MList(Atom)") 
(PUT 'RLATML 'DESCRIPTION
     "list of contained atomic formulas with numbers of occurrences") 
(PUT 'RLATML 'DOCS '("first-order input formula")) 
(PUT 'RL_ATML 'RL_AMSERVICE 'RLATML) 
(PUT 'RLATML 'PSOPFN 'RL_ATML$) 
(PUT 'RL_ATML$ 'CLEANUPFN 'RL_CLEANUP) 
(PUT 'RL_ATML$ 'NUMBER-OF-ARGS 1) 
(DE RL_ATML$ (U)
    (RL_SERVICEWRAPPER 'RL_*ATML U '(FORMULA) '(FORMULA) 'NIL '(MLIST ATOM)
                       'RL_ATML* 'RLATML)) 
(PUT 'RL_*ATML 'NUMBER-OF-ARGS 1) 
(DE RL_*ATML (FORMULA) (APPLY 'RL_ATML (LIST FORMULA))) 
(FLUID '(RL_ATML*)) 
(SETQ RL_SERVL* (CONS 'RL_ATML* RL_SERVL*)) 
(PUT 'RL_ATML 'RL_SUPPORT 'RL_SMSERVICE) 
(SETQ RL_SERVICES* (CONS 'RL_ATML RL_SERVICES*)) 
(PUT 'RL_ATML 'NUMBER-OF-ARGS 1) 
(DE RL_ATML (FORMULA) (APPLY RL_ATML* (LIST FORMULA))) 
(PUT 'RLATNUM 'RTYPEFN 'RTYPEPART) 
(PUT 'RLATNUM 'RL_SUPPORT 'RL_AMSERVICE) 
(PUT 'RLATNUM 'RL_SMSERVICE 'RL_ATNUM) 
(PUT 'RLATNUM 'NAMES '(FORMULA)) 
(PUT 'RLATNUM 'INTYPES '("Formula")) 
(PUT 'RLATNUM 'DEFAULTS 'NIL) 
(PUT 'RLATNUM 'OUTTYPE "Integer") 
(PUT 'RLATNUM 'DESCRIPTION
     "number of contained atomic formulas counting multiplicities") 
(PUT 'RLATNUM 'DOCS '("first-order input formula")) 
(PUT 'RL_ATNUM 'RL_AMSERVICE 'RLATNUM) 
(PUT 'RLATNUM 'PSOPFN 'RL_ATNUM$) 
(PUT 'RL_ATNUM$ 'CLEANUPFN 'RL_CLEANUP) 
(PUT 'RL_ATNUM$ 'NUMBER-OF-ARGS 1) 
(DE RL_ATNUM$ (U)
    (RL_SERVICEWRAPPER 'RL_*ATNUM U '(FORMULA) '(FORMULA) 'NIL 'INTEGER
                       'RL_ATNUM* 'RLATNUM)) 
(PUT 'RL_*ATNUM 'NUMBER-OF-ARGS 1) 
(DE RL_*ATNUM (FORMULA) (APPLY 'RL_ATNUM (LIST FORMULA))) 
(FLUID '(RL_ATNUM*)) 
(SETQ RL_SERVL* (CONS 'RL_ATNUM* RL_SERVL*)) 
(PUT 'RL_ATNUM 'RL_SUPPORT 'RL_SMSERVICE) 
(SETQ RL_SERVICES* (CONS 'RL_ATNUM RL_SERVICES*)) 
(PUT 'RL_ATNUM 'NUMBER-OF-ARGS 1) 
(DE RL_ATNUM (FORMULA) (APPLY RL_ATNUM* (LIST FORMULA))) 
(PUT 'RLBVARL 'RTYPEFN 'RTYPEPART) 
(PUT 'RLBVARL 'RL_SUPPORT 'RL_AMSERVICE) 
(PUT 'RLBVARL 'RL_SMSERVICE 'RL_BVARL) 
(PUT 'RLBVARL 'NAMES '(FORMULA)) 
(PUT 'RLBVARL 'INTYPES '("Formula")) 
(PUT 'RLBVARL 'DEFAULTS 'NIL) 
(PUT 'RLBVARL 'OUTTYPE "List(Variable)") 
(PUT 'RLBVARL 'DESCRIPTION "list of variables with bound occurrences") 
(PUT 'RLBVARL 'DOCS '("first-order input formula")) 
(PUT 'RL_BVARL 'RL_AMSERVICE 'RLBVARL) 
(PUT 'RLBVARL 'PSOPFN 'RL_BVARL$) 
(PUT 'RL_BVARL$ 'CLEANUPFN 'RL_CLEANUP) 
(PUT 'RL_BVARL$ 'NUMBER-OF-ARGS 1) 
(DE RL_BVARL$ (U)
    (RL_SERVICEWRAPPER 'RL_*BVARL U '(FORMULA) '(FORMULA) 'NIL '(LIST VARIABLE)
                       'RL_BVARL* 'RLBVARL)) 
(PUT 'RL_*BVARL 'NUMBER-OF-ARGS 1) 
(DE RL_*BVARL (FORMULA) (APPLY 'RL_BVARL (LIST FORMULA))) 
(FLUID '(RL_BVARL*)) 
(SETQ RL_SERVL* (CONS 'RL_BVARL* RL_SERVL*)) 
(PUT 'RL_BVARL 'RL_SUPPORT 'RL_SMSERVICE) 
(SETQ RL_SERVICES* (CONS 'RL_BVARL RL_SERVICES*)) 
(PUT 'RL_BVARL 'NUMBER-OF-ARGS 1) 
(DE RL_BVARL (FORMULA) (APPLY RL_BVARL* (LIST FORMULA))) 
(PUT 'RLCAD 'RTYPEFN 'RTYPEPART) 
(PUT 'RLCAD 'RL_SUPPORT 'RL_AMSERVICE) 
(PUT 'RLCAD 'RL_SMSERVICE 'RL_CAD) 
(PUT 'RLCAD 'NAMES '(FORMULA PORDER XPOLYS VERBOSE)) 
(PUT 'RLCAD 'INTYPES '("Formula" "List(Variable)" "List(Term)" "Switch")) 
(PUT 'RLCAD 'DEFAULTS '((PORDER LIST) (XPOLYS LIST) (VERBOSE . *RLVERBOSE))) 
(PUT 'RLCAD 'OUTTYPE "Formula") 
(PUT 'RLCAD 'DESCRIPTION "cylindrical algebraic decomposition") 
(PUT 'RLCAD 'SEEALSO
     '(RLGCAD RLHQE RLLQE RLMATHEMATICA RLPOSQE RLQE RLQEIPO RLQEPCAD RLQEWS)) 
(PUT 'RLCAD 'DOCS
     '("first-order input formula" "projection order"
       "extra polynomials for projection"
       "print information on progress of computation")) 
(PUT 'RL_CAD 'RL_AMSERVICE 'RLCAD) 
(PUT 'RLCAD 'PSOPFN 'RL_CAD$) 
(PUT 'RL_CAD$ 'CLEANUPFN 'RL_CLEANUP) 
(PUT 'RL_CAD$ 'NUMBER-OF-ARGS 1) 
(DE RL_CAD$ (U)
    (RL_SERVICEWRAPPER 'RL_*CAD U '(FORMULA PORDER XPOLYS VERBOSE)
                       '(FORMULA (LIST VARIABLE) (LIST TERM) SWITCH)
                       '((PORDER LIST) (XPOLYS LIST) (VERBOSE . *RLVERBOSE))
                       'FORMULA 'RL_CAD* 'RLCAD)) 
(PUT 'RL_*CAD 'NUMBER-OF-ARGS 4) 
(DE RL_*CAD (FORMULA PORDER XPOLYS *RLVERBOSE)
    (APPLY 'RL_CAD (LIST FORMULA PORDER XPOLYS))) 
(FLUID '(RL_CAD*)) 
(SETQ RL_SERVL* (CONS 'RL_CAD* RL_SERVL*)) 
(PUT 'RL_CAD 'RL_SUPPORT 'RL_SMSERVICE) 
(SETQ RL_SERVICES* (CONS 'RL_CAD RL_SERVICES*)) 
(PUT 'RL_CAD 'NUMBER-OF-ARGS 3) 
(DE RL_CAD (FORMULA PORDER XPOLYS) (APPLY RL_CAD* (LIST FORMULA PORDER XPOLYS))) 
(PUT 'RLCADPORDER 'RTYPEFN 'RTYPEPART) 
(PUT 'RLCADPORDER 'RL_SUPPORT 'RL_AMSERVICE) 
(PUT 'RLCADPORDER 'RL_SMSERVICE 'RL_CADPORDER) 
(PUT 'RLCADPORDER 'NAMES '(FORMULA)) 
(PUT 'RLCADPORDER 'INTYPES '("Formula")) 
(PUT 'RLCADPORDER 'DEFAULTS 'NIL) 
(PUT 'RLCADPORDER 'OUTTYPE "List(Variable)") 
(PUT 'RLCADPORDER 'DESCRIPTION
     "cylindrical algebraic decomposition projection order") 
(PUT 'RLCADPORDER 'DOCS '("first-order input formula")) 
(PUT 'RL_CADPORDER 'RL_AMSERVICE 'RLCADPORDER) 
(PUT 'RLCADPORDER 'PSOPFN 'RL_CADPORDER$) 
(PUT 'RL_CADPORDER$ 'CLEANUPFN 'RL_CLEANUP) 
(PUT 'RL_CADPORDER$ 'NUMBER-OF-ARGS 1) 
(DE RL_CADPORDER$ (U)
    (RL_SERVICEWRAPPER 'RL_*CADPORDER U '(FORMULA) '(FORMULA) 'NIL
                       '(LIST VARIABLE) 'RL_CADPORDER* 'RLCADPORDER)) 
(PUT 'RL_*CADPORDER 'NUMBER-OF-ARGS 1) 
(DE RL_*CADPORDER (FORMULA) (APPLY 'RL_CADPORDER (LIST FORMULA))) 
(FLUID '(RL_CADPORDER*)) 
(SETQ RL_SERVL* (CONS 'RL_CADPORDER* RL_SERVL*)) 
(PUT 'RL_CADPORDER 'RL_SUPPORT 'RL_SMSERVICE) 
(SETQ RL_SERVICES* (CONS 'RL_CADPORDER RL_SERVICES*)) 
(PUT 'RL_CADPORDER 'NUMBER-OF-ARGS 1) 
(DE RL_CADPORDER (FORMULA) (APPLY RL_CADPORDER* (LIST FORMULA))) 
(PUT 'RLCADPROJ 'RTYPEFN 'RTYPEPART) 
(PUT 'RLCADPROJ 'RL_SUPPORT 'RL_AMSERVICE) 
(PUT 'RLCADPROJ 'RL_SMSERVICE 'RL_CADPROJ) 
(PUT 'RLCADPROJ 'NAMES '(FORMULA PORDER)) 
(PUT 'RLCADPROJ 'INTYPES '("Formula" "List(Variable)")) 
(PUT 'RLCADPROJ 'DEFAULTS '((PORDER LIST))) 
(PUT 'RLCADPROJ 'OUTTYPE "List(Term)") 
(PUT 'RLCADPROJ 'DESCRIPTION "cylindrical algebraic decomposition projection") 
(PUT 'RLCADPROJ 'DOCS '("first-order input formula" "projection order")) 
(PUT 'RL_CADPROJ 'RL_AMSERVICE 'RLCADPROJ) 
(PUT 'RLCADPROJ 'PSOPFN 'RL_CADPROJ$) 
(PUT 'RL_CADPROJ$ 'CLEANUPFN 'RL_CLEANUP) 
(PUT 'RL_CADPROJ$ 'NUMBER-OF-ARGS 1) 
(DE RL_CADPROJ$ (U)
    (RL_SERVICEWRAPPER 'RL_*CADPROJ U '(FORMULA PORDER)
                       '(FORMULA (LIST VARIABLE)) '((PORDER LIST)) '(LIST TERM)
                       'RL_CADPROJ* 'RLCADPROJ)) 
(PUT 'RL_*CADPROJ 'NUMBER-OF-ARGS 2) 
(DE RL_*CADPROJ (FORMULA PORDER) (APPLY 'RL_CADPROJ (LIST FORMULA PORDER))) 
(FLUID '(RL_CADPROJ*)) 
(SETQ RL_SERVL* (CONS 'RL_CADPROJ* RL_SERVL*)) 
(PUT 'RL_CADPROJ 'RL_SUPPORT 'RL_SMSERVICE) 
(SETQ RL_SERVICES* (CONS 'RL_CADPROJ RL_SERVICES*)) 
(PUT 'RL_CADPROJ 'NUMBER-OF-ARGS 2) 
(DE RL_CADPROJ (FORMULA PORDER) (APPLY RL_CADPROJ* (LIST FORMULA PORDER))) 
(PUT 'RLCNF 'RTYPEFN 'RTYPEPART) 
(PUT 'RLCNF 'RL_SUPPORT 'RL_AMSERVICE) 
(PUT 'RLCNF 'RL_SMSERVICE 'RL_CNF) 
(PUT 'RLCNF 'NAMES '(FORMULA BNFSM BNFSAC)) 
(PUT 'RLCNF 'INTYPES '("Formula" "Switch" "Switch")) 
(PUT 'RLCNF 'DEFAULTS '((BNFSM . *RLBNFSM) (BNFSAC . *RLBNFSAC))) 
(PUT 'RLCNF 'OUTTYPE "Formula") 
(PUT 'RLCNF 'DESCRIPTION "conjunctive normal form") 
(PUT 'RLCNF 'DOCS
     '("quantifier-free input formula" "smart" "subsumption and cut")) 
(PUT 'RL_CNF 'RL_AMSERVICE 'RLCNF) 
(PUT 'RLCNF 'PSOPFN 'RL_CNF$) 
(PUT 'RL_CNF$ 'CLEANUPFN 'RL_CLEANUP) 
(PUT 'RL_CNF$ 'NUMBER-OF-ARGS 1) 
(DE RL_CNF$ (U)
    (RL_SERVICEWRAPPER 'RL_*CNF U '(FORMULA BNFSM BNFSAC)
                       '(FORMULA SWITCH SWITCH)
                       '((BNFSM . *RLBNFSM) (BNFSAC . *RLBNFSAC)) 'FORMULA
                       'RL_CNF* 'RLCNF)) 
(PUT 'RL_*CNF 'NUMBER-OF-ARGS 3) 
(DE RL_*CNF (FORMULA *RLBNFSM *RLBNFSAC) (APPLY 'RL_CNF (LIST FORMULA))) 
(FLUID '(RL_CNF*)) 
(SETQ RL_SERVL* (CONS 'RL_CNF* RL_SERVL*)) 
(PUT 'RL_CNF 'RL_SUPPORT 'RL_SMSERVICE) 
(SETQ RL_SERVICES* (CONS 'RL_CNF RL_SERVICES*)) 
(PUT 'RL_CNF 'NUMBER-OF-ARGS 1) 
(DE RL_CNF (FORMULA) (APPLY RL_CNF* (LIST FORMULA))) 
(PUT 'RLDECDEG 'RTYPEFN 'RTYPEPART) 
(PUT 'RLDECDEG 'RL_SUPPORT 'RL_AMSERVICE) 
(PUT 'RLDECDEG 'RL_SMSERVICE 'RL_DECDEG) 
(PUT 'RLDECDEG 'NAMES '(FORMULA)) 
(PUT 'RLDECDEG 'INTYPES '("Formula")) 
(PUT 'RLDECDEG 'DEFAULTS 'NIL) 
(PUT 'RLDECDEG 'OUTTYPE "Formula") 
(PUT 'RLDECDEG 'DESCRIPTION "decrease degree") 
(PUT 'RLDECDEG 'DOCS '("first-order input formula")) 
(PUT 'RL_DECDEG 'RL_AMSERVICE 'RLDECDEG) 
(PUT 'RLDECDEG 'PSOPFN 'RL_DECDEG$) 
(PUT 'RL_DECDEG$ 'CLEANUPFN 'RL_CLEANUP) 
(PUT 'RL_DECDEG$ 'NUMBER-OF-ARGS 1) 
(DE RL_DECDEG$ (U)
    (RL_SERVICEWRAPPER 'RL_*DECDEG U '(FORMULA) '(FORMULA) 'NIL 'FORMULA
                       'RL_DECDEG* 'RLDECDEG)) 
(PUT 'RL_*DECDEG 'NUMBER-OF-ARGS 1) 
(DE RL_*DECDEG (FORMULA) (APPLY 'RL_DECDEG (LIST FORMULA))) 
(FLUID '(RL_DECDEG*)) 
(SETQ RL_SERVL* (CONS 'RL_DECDEG* RL_SERVL*)) 
(PUT 'RL_DECDEG 'RL_SUPPORT 'RL_SMSERVICE) 
(SETQ RL_SERVICES* (CONS 'RL_DECDEG RL_SERVICES*)) 
(PUT 'RL_DECDEG 'NUMBER-OF-ARGS 1) 
(DE RL_DECDEG (FORMULA) (APPLY RL_DECDEG* (LIST FORMULA))) 
(PUT 'RLDECDEG1 'RTYPEFN 'RTYPEPART) 
(PUT 'RLDECDEG1 'RL_SUPPORT 'RL_AMSERVICE) 
(PUT 'RLDECDEG1 'RL_SMSERVICE 'RL_DECDEG1) 
(PUT 'RLDECDEG1 'NAMES '(FORMULA VARIABLES)) 
(PUT 'RLDECDEG1 'INTYPES '("Formula" "List(Variable)")) 
(PUT 'RLDECDEG1 'DEFAULTS 'NIL) 
(PUT 'RLDECDEG1 'OUTTYPE "Pair(Formula,List(Pair(Variable,Integer)))") 
(PUT 'RLDECDEG1 'DESCRIPTION "low-level decrease degree information") 
(PUT 'RLDECDEG1 'DOCS '("first-order input formula" "variables to consider")) 
(PUT 'RL_DECDEG1 'RL_AMSERVICE 'RLDECDEG1) 
(PUT 'RLDECDEG1 'PSOPFN 'RL_DECDEG1$) 
(PUT 'RL_DECDEG1$ 'CLEANUPFN 'RL_CLEANUP) 
(PUT 'RL_DECDEG1$ 'NUMBER-OF-ARGS 1) 
(DE RL_DECDEG1$ (U)
    (RL_SERVICEWRAPPER 'RL_*DECDEG1 U '(FORMULA VARIABLES)
                       '(FORMULA (LIST VARIABLE)) 'NIL
                       '(PAIR FORMULA (LIST (PAIR VARIABLE INTEGER)))
                       'RL_DECDEG1* 'RLDECDEG1)) 
(PUT 'RL_*DECDEG1 'NUMBER-OF-ARGS 2) 
(DE RL_*DECDEG1 (FORMULA VARIABLES)
    (APPLY 'RL_DECDEG1 (LIST FORMULA VARIABLES))) 
(FLUID '(RL_DECDEG1*)) 
(SETQ RL_SERVL* (CONS 'RL_DECDEG1* RL_SERVL*)) 
(PUT 'RL_DECDEG1 'RL_SUPPORT 'RL_SMSERVICE) 
(SETQ RL_SERVICES* (CONS 'RL_DECDEG1 RL_SERVICES*)) 
(PUT 'RL_DECDEG1 'NUMBER-OF-ARGS 2) 
(DE RL_DECDEG1 (FORMULA VARIABLES) (APPLY RL_DECDEG1* (LIST FORMULA VARIABLES))) 
(PUT 'RLDEPTH 'RTYPEFN 'RTYPEPART) 
(PUT 'RLDEPTH 'RL_SUPPORT 'RL_AMSERVICE) 
(PUT 'RLDEPTH 'RL_SMSERVICE 'RL_DEPTH) 
(PUT 'RLDEPTH 'NAMES '(FORMULA)) 
(PUT 'RLDEPTH 'INTYPES '("Formula")) 
(PUT 'RLDEPTH 'DEFAULTS 'NIL) 
(PUT 'RLDEPTH 'OUTTYPE "Integer") 
(PUT 'RLDEPTH 'DESCRIPTION "depth of the tree representation of a formula") 
(PUT 'RLDEPTH 'DOCS '("first-order input formula")) 
(PUT 'RL_DEPTH 'RL_AMSERVICE 'RLDEPTH) 
(PUT 'RLDEPTH 'PSOPFN 'RL_DEPTH$) 
(PUT 'RL_DEPTH$ 'CLEANUPFN 'RL_CLEANUP) 
(PUT 'RL_DEPTH$ 'NUMBER-OF-ARGS 1) 
(DE RL_DEPTH$ (U)
    (RL_SERVICEWRAPPER 'RL_*DEPTH U '(FORMULA) '(FORMULA) 'NIL 'INTEGER
                       'RL_DEPTH* 'RLDEPTH)) 
(PUT 'RL_*DEPTH 'NUMBER-OF-ARGS 1) 
(DE RL_*DEPTH (FORMULA) (APPLY 'RL_DEPTH (LIST FORMULA))) 
(FLUID '(RL_DEPTH*)) 
(SETQ RL_SERVL* (CONS 'RL_DEPTH* RL_SERVL*)) 
(PUT 'RL_DEPTH 'RL_SUPPORT 'RL_SMSERVICE) 
(SETQ RL_SERVICES* (CONS 'RL_DEPTH RL_SERVICES*)) 
(PUT 'RL_DEPTH 'NUMBER-OF-ARGS 1) 
(DE RL_DEPTH (FORMULA) (APPLY RL_DEPTH* (LIST FORMULA))) 
(PUT 'RLDIMA 'RTYPEFN 'RTYPEPART) 
(PUT 'RLDIMA 'RL_SUPPORT 'RL_AMSERVICE) 
(PUT 'RLDIMA 'RL_SMSERVICE 'RL_DIMA) 
(PUT 'RLDIMA 'NAMES '(INNER OUTER)) 
(PUT 'RLDIMA 'INTYPES '("List(Term)" "Term")) 
(PUT 'RLDIMA 'DEFAULTS 'NIL) 
(PUT 'RLDIMA 'OUTTYPE "List(Formula)") 
(PUT 'RLDIMA 'DESCRIPTION
     "experimental implementation of Grigoriev & Pasechnik, doi:10.1007/s00037-005-0189-7") 
(PUT 'RLDIMA 'DOCS '("Q_1(X), ..., Q_k(X)" "P(y_1, ..., y_k)")) 
(PUT 'RL_DIMA 'RL_AMSERVICE 'RLDIMA) 
(PUT 'RLDIMA 'PSOPFN 'RL_DIMA$) 
(PUT 'RL_DIMA$ 'CLEANUPFN 'RL_CLEANUP) 
(PUT 'RL_DIMA$ 'NUMBER-OF-ARGS 1) 
(DE RL_DIMA$ (U)
    (RL_SERVICEWRAPPER 'RL_*DIMA U '(INNER OUTER) '((LIST TERM) TERM) 'NIL
                       '(LIST FORMULA) 'RL_DIMA* 'RLDIMA)) 
(PUT 'RL_*DIMA 'NUMBER-OF-ARGS 2) 
(DE RL_*DIMA (INNER OUTER) (APPLY 'RL_DIMA (LIST INNER OUTER))) 
(FLUID '(RL_DIMA*)) 
(SETQ RL_SERVL* (CONS 'RL_DIMA* RL_SERVL*)) 
(PUT 'RL_DIMA 'RL_SUPPORT 'RL_SMSERVICE) 
(SETQ RL_SERVICES* (CONS 'RL_DIMA RL_SERVICES*)) 
(PUT 'RL_DIMA 'NUMBER-OF-ARGS 2) 
(DE RL_DIMA (INNER OUTER) (APPLY RL_DIMA* (LIST INNER OUTER))) 
(PUT 'RLDNF 'RTYPEFN 'RTYPEPART) 
(PUT 'RLDNF 'RL_SUPPORT 'RL_AMSERVICE) 
(PUT 'RLDNF 'RL_SMSERVICE 'RL_DNF) 
(PUT 'RLDNF 'NAMES '(FORMULA BNFSM BNFSAC)) 
(PUT 'RLDNF 'INTYPES '("Formula" "Switch" "Switch")) 
(PUT 'RLDNF 'DEFAULTS '((BNFSM . *RLBNFSM) (BNFSAC . *RLBNFSAC))) 
(PUT 'RLDNF 'OUTTYPE "Formula") 
(PUT 'RLDNF 'DESCRIPTION "disjunctive normal form") 
(PUT 'RLDNF 'DOCS
     '("quantifier-free input formula" "smart" "subsumption and cut")) 
(PUT 'RL_DNF 'RL_AMSERVICE 'RLDNF) 
(PUT 'RLDNF 'PSOPFN 'RL_DNF$) 
(PUT 'RL_DNF$ 'CLEANUPFN 'RL_CLEANUP) 
(PUT 'RL_DNF$ 'NUMBER-OF-ARGS 1) 
(DE RL_DNF$ (U)
    (RL_SERVICEWRAPPER 'RL_*DNF U '(FORMULA BNFSM BNFSAC)
                       '(FORMULA SWITCH SWITCH)
                       '((BNFSM . *RLBNFSM) (BNFSAC . *RLBNFSAC)) 'FORMULA
                       'RL_DNF* 'RLDNF)) 
(PUT 'RL_*DNF 'NUMBER-OF-ARGS 3) 
(DE RL_*DNF (FORMULA *RLBNFSM *RLBNFSAC) (APPLY 'RL_DNF (LIST FORMULA))) 
(FLUID '(RL_DNF*)) 
(SETQ RL_SERVL* (CONS 'RL_DNF* RL_SERVL*)) 
(PUT 'RL_DNF 'RL_SUPPORT 'RL_SMSERVICE) 
(SETQ RL_SERVICES* (CONS 'RL_DNF RL_SERVICES*)) 
(PUT 'RL_DNF 'NUMBER-OF-ARGS 1) 
(DE RL_DNF (FORMULA) (APPLY RL_DNF* (LIST FORMULA))) 
(PUT 'RLDPEP 'RTYPEFN 'RTYPEPART) 
(PUT 'RLDPEP 'RL_SUPPORT 'RL_AMSERVICE) 
(PUT 'RLDPEP 'RL_SMSERVICE 'RL_DPEP) 
(PUT 'RLDPEP 'NAMES '(FORMULA ACCURACY)) 
(PUT 'RLDPEP 'INTYPES '("Formula" "Integer")) 
(PUT 'RLDPEP 'DEFAULTS '((ACCURACY . 20))) 
(PUT 'RLDPEP 'OUTTYPE "Formula") 
(PUT 'RLDPEP 'DESCRIPTION "deciding polynomial exponential problems") 
(PUT 'RLDPEP 'SEEALSO '(RLCAD)) 
(PUT 'RLDPEP 'DOCS
     '("quantifier-free input formula" "length of taylor expanson of exp")) 
(PUT 'RL_DPEP 'RL_AMSERVICE 'RLDPEP) 
(PUT 'RLDPEP 'PSOPFN 'RL_DPEP$) 
(PUT 'RL_DPEP$ 'CLEANUPFN 'RL_CLEANUP) 
(PUT 'RL_DPEP$ 'NUMBER-OF-ARGS 1) 
(DE RL_DPEP$ (U)
    (RL_SERVICEWRAPPER 'RL_*DPEP U '(FORMULA ACCURACY) '(FORMULA INTEGER)
                       '((ACCURACY . 20)) 'FORMULA 'RL_DPEP* 'RLDPEP)) 
(PUT 'RL_*DPEP 'NUMBER-OF-ARGS 2) 
(DE RL_*DPEP (FORMULA ACCURACY) (APPLY 'RL_DPEP (LIST FORMULA ACCURACY))) 
(FLUID '(RL_DPEP*)) 
(SETQ RL_SERVL* (CONS 'RL_DPEP* RL_SERVL*)) 
(PUT 'RL_DPEP 'RL_SUPPORT 'RL_SMSERVICE) 
(SETQ RL_SERVICES* (CONS 'RL_DPEP RL_SERVICES*)) 
(PUT 'RL_DPEP 'NUMBER-OF-ARGS 2) 
(DE RL_DPEP (FORMULA ACCURACY) (APPLY RL_DPEP* (LIST FORMULA ACCURACY))) 
(PUT 'RLDUMP 'RTYPEFN 'RTYPEPART) 
(PUT 'RLDUMP 'RL_SUPPORT 'RL_AMSERVICE) 
(PUT 'RLDUMP 'RL_SMSERVICE 'RL_DUMP) 
(PUT 'RLDUMP 'NAMES '(FORMULA FORMAT FILENAME)) 
(PUT 'RLDUMP 'INTYPES
     '("Formula" "Enum(qepcad,dfg,smt2,slfq,mathematica)" "String")) 
(PUT 'RLDUMP 'DEFAULTS '((FILENAME . ""))) 
(PUT 'RLDUMP 'OUTTYPE "Void") 
(PUT 'RLDUMP 'DESCRIPTION "dump formula into input file for external software") 
(PUT 'RLDUMP 'DOCS
     '("quantifier-free input formula" "target software"
       "\"\" dumps to screen")) 
(PUT 'RL_DUMP 'RL_AMSERVICE 'RLDUMP) 
(PUT 'RLDUMP 'PSOPFN 'RL_DUMP$) 
(PUT 'RL_DUMP$ 'CLEANUPFN 'RL_CLEANUP) 
(PUT 'RL_DUMP$ 'NUMBER-OF-ARGS 1) 
(DE RL_DUMP$ (U)
    (RL_SERVICEWRAPPER 'RL_*DUMP U '(FORMULA FORMAT FILENAME)
                       '(FORMULA (ENUM QEPCAD DFG SMT2 SLFQ MATHEMATICA)
                         STRING)
                       '((FILENAME . "")) 'VOID 'RL_DUMP* 'RLDUMP)) 
(PUT 'RL_*DUMP 'NUMBER-OF-ARGS 3) 
(DE RL_*DUMP (FORMULA FORMAT FILENAME)
    (APPLY 'RL_DUMP (LIST FORMULA FORMAT FILENAME))) 
(FLUID '(RL_DUMP*)) 
(SETQ RL_SERVL* (CONS 'RL_DUMP* RL_SERVL*)) 
(PUT 'RL_DUMP 'RL_SUPPORT 'RL_SMSERVICE) 
(SETQ RL_SERVICES* (CONS 'RL_DUMP RL_SERVICES*)) 
(PUT 'RL_DUMP 'NUMBER-OF-ARGS 3) 
(DE RL_DUMP (FORMULA FORMAT FILENAME)
    (APPLY RL_DUMP* (LIST FORMULA FORMAT FILENAME))) 
(PUT 'RLENF 'RTYPEFN 'RTYPEPART) 
(PUT 'RLENF 'RL_SUPPORT 'RL_AMSERVICE) 
(PUT 'RLENF 'RL_SMSERVICE 'RL_ENF) 
(PUT 'RLENF 'NAMES '(FORMULA VARIABLE ASSUME)) 
(PUT 'RLENF 'INTYPES '("Formula" "Variable" "List(Atom)")) 
(PUT 'RLENF 'DEFAULTS '((ASSUME LIST))) 
(PUT 'RLENF 'OUTTYPE "Formula") 
(PUT 'RLENF 'DESCRIPTION "elimination normal form (DCFSF)") 
(PUT 'RLENF 'DOCS
     '("first-order input formula" "variable to be eliminated next"
       "atomic input assumptions")) 
(PUT 'RL_ENF 'RL_AMSERVICE 'RLENF) 
(PUT 'RLENF 'PSOPFN 'RL_ENF$) 
(PUT 'RL_ENF$ 'CLEANUPFN 'RL_CLEANUP) 
(PUT 'RL_ENF$ 'NUMBER-OF-ARGS 1) 
(DE RL_ENF$ (U)
    (RL_SERVICEWRAPPER 'RL_*ENF U '(FORMULA VARIABLE ASSUME)
                       '(FORMULA VARIABLE (LIST ATOM)) '((ASSUME LIST))
                       'FORMULA 'RL_ENF* 'RLENF)) 
(PUT 'RL_*ENF 'NUMBER-OF-ARGS 3) 
(DE RL_*ENF (FORMULA VARIABLE ASSUME)
    (APPLY 'RL_ENF (LIST FORMULA VARIABLE ASSUME))) 
(FLUID '(RL_ENF*)) 
(SETQ RL_SERVL* (CONS 'RL_ENF* RL_SERVL*)) 
(PUT 'RL_ENF 'RL_SUPPORT 'RL_SMSERVICE) 
(SETQ RL_SERVICES* (CONS 'RL_ENF RL_SERVICES*)) 
(PUT 'RL_ENF 'NUMBER-OF-ARGS 3) 
(DE RL_ENF (FORMULA VARIABLE ASSUME)
    (APPLY RL_ENF* (LIST FORMULA VARIABLE ASSUME))) 
(PUT 'RLEX 'RTYPEFN 'RTYPEPART) 
(PUT 'RLEX 'RL_SUPPORT 'RL_AMSERVICE) 
(PUT 'RLEX 'RL_SMSERVICE 'RL_EX) 
(PUT 'RLEX 'NAMES '(FORMULA EXCEPT)) 
(PUT 'RLEX 'INTYPES '("Formula" "List(Variable)")) 
(PUT 'RLEX 'DEFAULTS '((EXCEPT LIST))) 
(PUT 'RLEX 'OUTTYPE "Formula") 
(PUT 'RLEX 'DESCRIPTION "existential closure") 
(PUT 'RLEX 'SEEALSO '(RLALL)) 
(PUT 'RLEX 'DOCS
     '("first-order input formula" "variables not to be quantified")) 
(PUT 'RL_EX 'RL_AMSERVICE 'RLEX) 
(PUT 'RLEX 'PSOPFN 'RL_EX$) 
(PUT 'RL_EX$ 'CLEANUPFN 'RL_CLEANUP) 
(PUT 'RL_EX$ 'NUMBER-OF-ARGS 1) 
(DE RL_EX$ (U)
    (RL_SERVICEWRAPPER 'RL_*EX U '(FORMULA EXCEPT) '(FORMULA (LIST VARIABLE))
                       '((EXCEPT LIST)) 'FORMULA 'RL_EX* 'RLEX)) 
(PUT 'RL_*EX 'NUMBER-OF-ARGS 2) 
(DE RL_*EX (FORMULA EXCEPT) (APPLY 'RL_EX (LIST FORMULA EXCEPT))) 
(FLUID '(RL_EX*)) 
(SETQ RL_SERVL* (CONS 'RL_EX* RL_SERVL*)) 
(PUT 'RL_EX 'RL_SUPPORT 'RL_SMSERVICE) 
(SETQ RL_SERVICES* (CONS 'RL_EX RL_SERVICES*)) 
(PUT 'RL_EX 'NUMBER-OF-ARGS 2) 
(DE RL_EX (FORMULA EXCEPT) (APPLY RL_EX* (LIST FORMULA EXCEPT))) 
(PUT 'RLEX2 'RTYPEFN 'RTYPEPART) 
(PUT 'RLEX2 'RL_SUPPORT 'RL_AMSERVICE) 
(PUT 'RLEX2 'RL_SMSERVICE 'RL_EX2) 
(PUT 'RLEX2 'NAMES '(FORMULA EXCEPT)) 
(PUT 'RLEX2 'INTYPES '("Formula" "List(Variable)")) 
(PUT 'RLEX2 'DEFAULTS '((EXCEPT LIST))) 
(PUT 'RLEX2 'OUTTYPE "Formula") 
(PUT 'RLEX2 'DESCRIPTION "'exists at least two' closure") 
(PUT 'RLEX2 'DOCS
     '("first-order input formula" "variables not to be quantified")) 
(PUT 'RL_EX2 'RL_AMSERVICE 'RLEX2) 
(PUT 'RLEX2 'PSOPFN 'RL_EX2$) 
(PUT 'RL_EX2$ 'CLEANUPFN 'RL_CLEANUP) 
(PUT 'RL_EX2$ 'NUMBER-OF-ARGS 1) 
(DE RL_EX2$ (U)
    (RL_SERVICEWRAPPER 'RL_*EX2 U '(FORMULA EXCEPT) '(FORMULA (LIST VARIABLE))
                       '((EXCEPT LIST)) 'FORMULA 'RL_EX2* 'RLEX2)) 
(PUT 'RL_*EX2 'NUMBER-OF-ARGS 2) 
(DE RL_*EX2 (FORMULA EXCEPT) (APPLY 'RL_EX2 (LIST FORMULA EXCEPT))) 
(FLUID '(RL_EX2*)) 
(SETQ RL_SERVL* (CONS 'RL_EX2* RL_SERVL*)) 
(PUT 'RL_EX2 'RL_SUPPORT 'RL_SMSERVICE) 
(SETQ RL_SERVICES* (CONS 'RL_EX2 RL_SERVICES*)) 
(PUT 'RL_EX2 'NUMBER-OF-ARGS 2) 
(DE RL_EX2 (FORMULA EXCEPT) (APPLY RL_EX2* (LIST FORMULA EXCEPT))) 
(PUT 'RLEXPAND 'RTYPEFN 'RTYPEPART) 
(PUT 'RLEXPAND 'RL_SUPPORT 'RL_AMSERVICE) 
(PUT 'RLEXPAND 'RL_SMSERVICE 'RL_EXPAND) 
(PUT 'RLEXPAND 'NAMES '(FORMULA)) 
(PUT 'RLEXPAND 'INTYPES '("Formula")) 
(PUT 'RLEXPAND 'DEFAULTS 'NIL) 
(PUT 'RLEXPAND 'OUTTYPE "Formula") 
(PUT 'RLEXPAND 'DESCRIPTION "expand  bounded quantifiers (INTEGERS only)") 
(PUT 'RLEXPAND 'DOCS '("weakly quantified formula")) 
(PUT 'RL_EXPAND 'RL_AMSERVICE 'RLEXPAND) 
(PUT 'RLEXPAND 'PSOPFN 'RL_EXPAND$) 
(PUT 'RL_EXPAND$ 'CLEANUPFN 'RL_CLEANUP) 
(PUT 'RL_EXPAND$ 'NUMBER-OF-ARGS 1) 
(DE RL_EXPAND$ (U)
    (RL_SERVICEWRAPPER 'RL_*EXPAND U '(FORMULA) '(FORMULA) 'NIL 'FORMULA
                       'RL_EXPAND* 'RLEXPAND)) 
(PUT 'RL_*EXPAND 'NUMBER-OF-ARGS 1) 
(DE RL_*EXPAND (FORMULA) (APPLY 'RL_EXPAND (LIST FORMULA))) 
(FLUID '(RL_EXPAND*)) 
(SETQ RL_SERVL* (CONS 'RL_EXPAND* RL_SERVL*)) 
(PUT 'RL_EXPAND 'RL_SUPPORT 'RL_SMSERVICE) 
(SETQ RL_SERVICES* (CONS 'RL_EXPAND RL_SERVICES*)) 
(PUT 'RL_EXPAND 'NUMBER-OF-ARGS 1) 
(DE RL_EXPAND (FORMULA) (APPLY RL_EXPAND* (LIST FORMULA))) 
(PUT 'RLEXPANDA 'RTYPEFN 'RTYPEPART) 
(PUT 'RLEXPANDA 'RL_SUPPORT 'RL_AMSERVICE) 
(PUT 'RLEXPANDA 'RL_SMSERVICE 'RL_EXPANDA) 
(PUT 'RLEXPANDA 'NAMES '(RESULT FORMULA)) 
(PUT 'RLEXPANDA 'INTYPES
     '("List(Triplet(Formula,List(Formula),List(Assignment(Any))))" "Formula")) 
(PUT 'RLEXPANDA 'DEFAULTS '((FORMULA . FALSE))) 
(PUT 'RLEXPANDA 'OUTTYPE "List(Pair(Formula,List(Assignment(Any))))") 
(PUT 'RLEXPANDA 'DESCRIPTION "expand rlwqea result (INTEGERS only)") 
(PUT 'RLEXPANDA 'DOCS '("rlwqea result" "unused")) 
(PUT 'RL_EXPANDA 'RL_AMSERVICE 'RLEXPANDA) 
(PUT 'RLEXPANDA 'PSOPFN 'RL_EXPANDA$) 
(PUT 'RL_EXPANDA$ 'CLEANUPFN 'RL_CLEANUP) 
(PUT 'RL_EXPANDA$ 'NUMBER-OF-ARGS 1) 
(DE RL_EXPANDA$ (U)
    (RL_SERVICEWRAPPER 'RL_*EXPANDA U '(RESULT FORMULA)
                       '((LIST (TRIPLET FORMULA (LIST FORMULA))) FORMULA)
                       '((FORMULA . FALSE))
                       '(LIST (PAIR FORMULA (LIST (ASSIGNMENT ANY))))
                       'RL_EXPANDA* 'RLEXPANDA)) 
(PUT 'RL_*EXPANDA 'NUMBER-OF-ARGS 2) 
(DE RL_*EXPANDA (RESULT FORMULA) (APPLY 'RL_EXPANDA (LIST RESULT FORMULA))) 
(FLUID '(RL_EXPANDA*)) 
(SETQ RL_SERVL* (CONS 'RL_EXPANDA* RL_SERVL*)) 
(PUT 'RL_EXPANDA 'RL_SUPPORT 'RL_SMSERVICE) 
(SETQ RL_SERVICES* (CONS 'RL_EXPANDA RL_SERVICES*)) 
(PUT 'RL_EXPANDA 'NUMBER-OF-ARGS 2) 
(DE RL_EXPANDA (RESULT FORMULA) (APPLY RL_EXPANDA* (LIST RESULT FORMULA))) 
(PUT 'RLEXPLATS 'RTYPEFN 'RTYPEPART) 
(PUT 'RLEXPLATS 'RL_SUPPORT 'RL_AMSERVICE) 
(PUT 'RLEXPLATS 'RL_SMSERVICE 'RL_EXPLATS) 
(PUT 'RLEXPLATS 'NAMES '(FORMULA SIEXPL SIEXPLA)) 
(PUT 'RLEXPLATS 'INTYPES '("Formula" "Switch" "Switch")) 
(PUT 'RLEXPLATS 'DEFAULTS '((SIEXPL . *RLSIEXPL) (SIEXPLA . *RLSIEXPLA))) 
(PUT 'RLEXPLATS 'OUTTYPE "Formula") 
(PUT 'RLEXPLATS 'DESCRIPTION
     "explode (factor) atoms of the form z ~ 1 or z /~ 1 with z in Z (PADICS only)") 
(PUT 'RLEXPLATS 'DOCS
     '("first-order input formula" "explode if boolean operator matches"
       "explode always")) 
(PUT 'RL_EXPLATS 'RL_AMSERVICE 'RLEXPLATS) 
(PUT 'RLEXPLATS 'PSOPFN 'RL_EXPLATS$) 
(PUT 'RL_EXPLATS$ 'CLEANUPFN 'RL_CLEANUP) 
(PUT 'RL_EXPLATS$ 'NUMBER-OF-ARGS 1) 
(DE RL_EXPLATS$ (U)
    (RL_SERVICEWRAPPER 'RL_*EXPLATS U '(FORMULA SIEXPL SIEXPLA)
                       '(FORMULA SWITCH SWITCH)
                       '((SIEXPL . *RLSIEXPL) (SIEXPLA . *RLSIEXPLA)) 'FORMULA
                       'RL_EXPLATS* 'RLEXPLATS)) 
(PUT 'RL_*EXPLATS 'NUMBER-OF-ARGS 3) 
(DE RL_*EXPLATS (FORMULA *RLSIEXPL *RLSIEXPLA)
    (APPLY 'RL_EXPLATS (LIST FORMULA))) 
(FLUID '(RL_EXPLATS*)) 
(SETQ RL_SERVL* (CONS 'RL_EXPLATS* RL_SERVL*)) 
(PUT 'RL_EXPLATS 'RL_SUPPORT 'RL_SMSERVICE) 
(SETQ RL_SERVICES* (CONS 'RL_EXPLATS RL_SERVICES*)) 
(PUT 'RL_EXPLATS 'NUMBER-OF-ARGS 1) 
(DE RL_EXPLATS (FORMULA) (APPLY RL_EXPLATS* (LIST FORMULA))) 
(PUT 'RLFVARL 'RTYPEFN 'RTYPEPART) 
(PUT 'RLFVARL 'RL_SUPPORT 'RL_AMSERVICE) 
(PUT 'RLFVARL 'RL_SMSERVICE 'RL_FVARL) 
(PUT 'RLFVARL 'NAMES '(FORMULA)) 
(PUT 'RLFVARL 'INTYPES '("Formula")) 
(PUT 'RLFVARL 'DEFAULTS 'NIL) 
(PUT 'RLFVARL 'OUTTYPE "List(Variable)") 
(PUT 'RLFVARL 'DESCRIPTION "list of variables with free occurrences") 
(PUT 'RLFVARL 'DOCS '("first-order input formula")) 
(PUT 'RL_FVARL 'RL_AMSERVICE 'RLFVARL) 
(PUT 'RLFVARL 'PSOPFN 'RL_FVARL$) 
(PUT 'RL_FVARL$ 'CLEANUPFN 'RL_CLEANUP) 
(PUT 'RL_FVARL$ 'NUMBER-OF-ARGS 1) 
(DE RL_FVARL$ (U)
    (RL_SERVICEWRAPPER 'RL_*FVARL U '(FORMULA) '(FORMULA) 'NIL '(LIST VARIABLE)
                       'RL_FVARL* 'RLFVARL)) 
(PUT 'RL_*FVARL 'NUMBER-OF-ARGS 1) 
(DE RL_*FVARL (FORMULA) (APPLY 'RL_FVARL (LIST FORMULA))) 
(FLUID '(RL_FVARL*)) 
(SETQ RL_SERVL* (CONS 'RL_FVARL* RL_SERVL*)) 
(PUT 'RL_FVARL 'RL_SUPPORT 'RL_SMSERVICE) 
(SETQ RL_SERVICES* (CONS 'RL_FVARL RL_SERVICES*)) 
(PUT 'RL_FVARL 'NUMBER-OF-ARGS 1) 
(DE RL_FVARL (FORMULA) (APPLY RL_FVARL* (LIST FORMULA))) 
(PUT 'RLGCAD 'RTYPEFN 'RTYPEPART) 
(PUT 'RLGCAD 'RL_SUPPORT 'RL_AMSERVICE) 
(PUT 'RLGCAD 'RL_SMSERVICE 'RL_GCAD) 
(PUT 'RLGCAD 'NAMES '(FORMULA PORDER XPOLYS VERBOSE)) 
(PUT 'RLGCAD 'INTYPES '("Formula" "List(Variable)" "List(Term)" "Switch")) 
(PUT 'RLGCAD 'DEFAULTS '((PORDER LIST) (XPOLYS LIST) (VERBOSE . *RLVERBOSE))) 
(PUT 'RLGCAD 'OUTTYPE "Pair(List(Atom),Formula)") 
(PUT 'RLGCAD 'DESCRIPTION "generic cylindrical algebraic decomposition") 
(PUT 'RLGCAD 'DOCS
     '("first-order input formula" "projection order"
       "extra polynomials for projection"
       "print information on progress of computation")) 
(PUT 'RL_GCAD 'RL_AMSERVICE 'RLGCAD) 
(PUT 'RLGCAD 'PSOPFN 'RL_GCAD$) 
(PUT 'RL_GCAD$ 'CLEANUPFN 'RL_CLEANUP) 
(PUT 'RL_GCAD$ 'NUMBER-OF-ARGS 1) 
(DE RL_GCAD$ (U)
    (RL_SERVICEWRAPPER 'RL_*GCAD U '(FORMULA PORDER XPOLYS VERBOSE)
                       '(FORMULA (LIST VARIABLE) (LIST TERM) SWITCH)
                       '((PORDER LIST) (XPOLYS LIST) (VERBOSE . *RLVERBOSE))
                       '(PAIR (LIST ATOM) FORMULA) 'RL_GCAD* 'RLGCAD)) 
(PUT 'RL_*GCAD 'NUMBER-OF-ARGS 4) 
(DE RL_*GCAD (FORMULA PORDER XPOLYS *RLVERBOSE)
    (APPLY 'RL_GCAD (LIST FORMULA PORDER XPOLYS))) 
(FLUID '(RL_GCAD*)) 
(SETQ RL_SERVL* (CONS 'RL_GCAD* RL_SERVL*)) 
(PUT 'RL_GCAD 'RL_SUPPORT 'RL_SMSERVICE) 
(SETQ RL_SERVICES* (CONS 'RL_GCAD RL_SERVICES*)) 
(PUT 'RL_GCAD 'NUMBER-OF-ARGS 3) 
(DE RL_GCAD (FORMULA PORDER XPOLYS)
    (APPLY RL_GCAD* (LIST FORMULA PORDER XPOLYS))) 
(PUT 'RLGCADPORDER 'RTYPEFN 'RTYPEPART) 
(PUT 'RLGCADPORDER 'RL_SUPPORT 'RL_AMSERVICE) 
(PUT 'RLGCADPORDER 'RL_SMSERVICE 'RL_GCADPORDER) 
(PUT 'RLGCADPORDER 'NAMES '(FORMULA)) 
(PUT 'RLGCADPORDER 'INTYPES '("Formula")) 
(PUT 'RLGCADPORDER 'DEFAULTS 'NIL) 
(PUT 'RLGCADPORDER 'OUTTYPE "List(Variable)") 
(PUT 'RLGCADPORDER 'DESCRIPTION
     "generic cylindrical algebraic decomposition projection order") 
(PUT 'RLGCADPORDER 'DOCS '("first-order input formula")) 
(PUT 'RL_GCADPORDER 'RL_AMSERVICE 'RLGCADPORDER) 
(PUT 'RLGCADPORDER 'PSOPFN 'RL_GCADPORDER$) 
(PUT 'RL_GCADPORDER$ 'CLEANUPFN 'RL_CLEANUP) 
(PUT 'RL_GCADPORDER$ 'NUMBER-OF-ARGS 1) 
(DE RL_GCADPORDER$ (U)
    (RL_SERVICEWRAPPER 'RL_*GCADPORDER U '(FORMULA) '(FORMULA) 'NIL
                       '(LIST VARIABLE) 'RL_GCADPORDER* 'RLGCADPORDER)) 
(PUT 'RL_*GCADPORDER 'NUMBER-OF-ARGS 1) 
(DE RL_*GCADPORDER (FORMULA) (APPLY 'RL_GCADPORDER (LIST FORMULA))) 
(FLUID '(RL_GCADPORDER*)) 
(SETQ RL_SERVL* (CONS 'RL_GCADPORDER* RL_SERVL*)) 
(PUT 'RL_GCADPORDER 'RL_SUPPORT 'RL_SMSERVICE) 
(SETQ RL_SERVICES* (CONS 'RL_GCADPORDER RL_SERVICES*)) 
(PUT 'RL_GCADPORDER 'NUMBER-OF-ARGS 1) 
(DE RL_GCADPORDER (FORMULA) (APPLY RL_GCADPORDER* (LIST FORMULA))) 
(PUT 'RLGENTHEO 'RTYPEFN 'RTYPEPART) 
(PUT 'RLGENTHEO 'RL_SUPPORT 'RL_AMSERVICE) 
(PUT 'RLGENTHEO 'RL_SMSERVICE 'RL_GENTHEO) 
(PUT 'RLGENTHEO 'NAMES '(THEORY FORMULA EXCLUDE)) 
(PUT 'RLGENTHEO 'INTYPES '("List(Atom)" "Formula" "List(Variable)")) 
(PUT 'RLGENTHEO 'DEFAULTS '((EXCLUDE LIST))) 
(PUT 'RLGENTHEO 'OUTTYPE "Pair(List(Atom),Formula)") 
(PUT 'RLGENTHEO 'DESCRIPTION
     "heuristically add assumptions to theory to make formula true") 
(PUT 'RLGENTHEO 'DOCS
     '("input theory" "input formula" "variables not to make assumptions on")) 
(PUT 'RL_GENTHEO 'RL_AMSERVICE 'RLGENTHEO) 
(PUT 'RLGENTHEO 'PSOPFN 'RL_GENTHEO$) 
(PUT 'RL_GENTHEO$ 'CLEANUPFN 'RL_CLEANUP) 
(PUT 'RL_GENTHEO$ 'NUMBER-OF-ARGS 1) 
(DE RL_GENTHEO$ (U)
    (RL_SERVICEWRAPPER 'RL_*GENTHEO U '(THEORY FORMULA EXCLUDE)
                       '((LIST ATOM) FORMULA (LIST VARIABLE)) '((EXCLUDE LIST))
                       '(PAIR (LIST ATOM) FORMULA) 'RL_GENTHEO* 'RLGENTHEO)) 
(PUT 'RL_*GENTHEO 'NUMBER-OF-ARGS 3) 
(DE RL_*GENTHEO (THEORY FORMULA EXCLUDE)
    (APPLY 'RL_GENTHEO (LIST THEORY FORMULA EXCLUDE))) 
(FLUID '(RL_GENTHEO*)) 
(SETQ RL_SERVL* (CONS 'RL_GENTHEO* RL_SERVL*)) 
(PUT 'RL_GENTHEO 'RL_SUPPORT 'RL_SMSERVICE) 
(SETQ RL_SERVICES* (CONS 'RL_GENTHEO RL_SERVICES*)) 
(PUT 'RL_GENTHEO 'NUMBER-OF-ARGS 3) 
(DE RL_GENTHEO (THEORY FORMULA EXCLUDE)
    (APPLY RL_GENTHEO* (LIST THEORY FORMULA EXCLUDE))) 
(PUT 'RLGHQE 'RTYPEFN 'RTYPEPART) 
(PUT 'RLGHQE 'RL_SUPPORT 'RL_AMSERVICE) 
(PUT 'RLGHQE 'RL_SMSERVICE 'RL_GHQE) 
(PUT 'RLGHQE 'NAMES '(FORMULA)) 
(PUT 'RLGHQE 'INTYPES '("Formula")) 
(PUT 'RLGHQE 'DEFAULTS 'NIL) 
(PUT 'RLGHQE 'OUTTYPE "Pair(List(Atom),Formula)") 
(PUT 'RLGHQE 'DESCRIPTION "generic Hermitian quantifier elimination") 
(PUT 'RLGHQE 'DOCS '("first-order input formula")) 
(PUT 'RL_GHQE 'RL_AMSERVICE 'RLGHQE) 
(PUT 'RLGHQE 'PSOPFN 'RL_GHQE$) 
(PUT 'RL_GHQE$ 'CLEANUPFN 'RL_CLEANUP) 
(PUT 'RL_GHQE$ 'NUMBER-OF-ARGS 1) 
(DE RL_GHQE$ (U)
    (RL_SERVICEWRAPPER 'RL_*GHQE U '(FORMULA) '(FORMULA) 'NIL
                       '(PAIR (LIST ATOM) FORMULA) 'RL_GHQE* 'RLGHQE)) 
(PUT 'RL_*GHQE 'NUMBER-OF-ARGS 1) 
(DE RL_*GHQE (FORMULA) (APPLY 'RL_GHQE (LIST FORMULA))) 
(FLUID '(RL_GHQE*)) 
(SETQ RL_SERVL* (CONS 'RL_GHQE* RL_SERVL*)) 
(PUT 'RL_GHQE 'RL_SUPPORT 'RL_SMSERVICE) 
(SETQ RL_SERVICES* (CONS 'RL_GHQE RL_SERVICES*)) 
(PUT 'RL_GHQE 'NUMBER-OF-ARGS 1) 
(DE RL_GHQE (FORMULA) (APPLY RL_GHQE* (LIST FORMULA))) 
(PUT 'RLGQE 'RTYPEFN 'RTYPEPART) 
(PUT 'RLGQE 'RL_SUPPORT 'RL_AMSERVICE) 
(PUT 'RLGQE 'RL_SMSERVICE 'RL_GQE) 
(PUT 'RLGQE 'NAMES '(FORMULA ASSUME EXCEPT)) 
(PUT 'RLGQE 'INTYPES '("Formula" "List(Atom)" "List(Variable)")) 
(PUT 'RLGQE 'DEFAULTS '((ASSUME LIST) (EXCEPT LIST))) 
(PUT 'RLGQE 'OUTTYPE "Pair(List(Atom),Formula)") 
(PUT 'RLGQE 'DESCRIPTION "generic quantifier elimination") 
(PUT 'RLGQE 'DOCS
     '("first-order input formula" "atomic input assumptions on the parameters"
       "parameters to exclude from assumptions")) 
(PUT 'RL_GQE 'RL_AMSERVICE 'RLGQE) 
(PUT 'RLGQE 'PSOPFN 'RL_GQE$) 
(PUT 'RL_GQE$ 'CLEANUPFN 'RL_CLEANUP) 
(PUT 'RL_GQE$ 'NUMBER-OF-ARGS 1) 
(DE RL_GQE$ (U)
    (RL_SERVICEWRAPPER 'RL_*GQE U '(FORMULA ASSUME EXCEPT)
                       '(FORMULA (LIST ATOM) (LIST VARIABLE))
                       '((ASSUME LIST) (EXCEPT LIST))
                       '(PAIR (LIST ATOM) FORMULA) 'RL_GQE* 'RLGQE)) 
(PUT 'RL_*GQE 'NUMBER-OF-ARGS 3) 
(DE RL_*GQE (FORMULA ASSUME EXCEPT)
    (APPLY 'RL_GQE (LIST FORMULA ASSUME EXCEPT))) 
(FLUID '(RL_GQE*)) 
(SETQ RL_SERVL* (CONS 'RL_GQE* RL_SERVL*)) 
(PUT 'RL_GQE 'RL_SUPPORT 'RL_SMSERVICE) 
(SETQ RL_SERVICES* (CONS 'RL_GQE RL_SERVICES*)) 
(PUT 'RL_GQE 'NUMBER-OF-ARGS 3) 
(DE RL_GQE (FORMULA ASSUME EXCEPT) (APPLY RL_GQE* (LIST FORMULA ASSUME EXCEPT))) 
(PUT 'RLGQEA 'RTYPEFN 'RTYPEPART) 
(PUT 'RLGQEA 'RL_SUPPORT 'RL_AMSERVICE) 
(PUT 'RLGQEA 'RL_SMSERVICE 'RL_GQEA) 
(PUT 'RLGQEA 'NAMES '(FORMULA ASSUME EXCEPT)) 
(PUT 'RLGQEA 'INTYPES '("Formula" "List(Atom)" "List(Variable)")) 
(PUT 'RLGQEA 'DEFAULTS '((ASSUME LIST) (EXCEPT LIST))) 
(PUT 'RLGQEA 'OUTTYPE
     "Pair(List(Atom),List(Pair(Formula,List(Assignment(Any)))))") 
(PUT 'RLGQEA 'DESCRIPTION "generic quantifier elimination with answer") 
(PUT 'RLGQEA 'DOCS
     '("first-order input formula" "atomic input assumptions"
       "parameters to exclude from assumptions")) 
(PUT 'RL_GQEA 'RL_AMSERVICE 'RLGQEA) 
(PUT 'RLGQEA 'PSOPFN 'RL_GQEA$) 
(PUT 'RL_GQEA$ 'CLEANUPFN 'RL_CLEANUP) 
(PUT 'RL_GQEA$ 'NUMBER-OF-ARGS 1) 
(DE RL_GQEA$ (U)
    (RL_SERVICEWRAPPER 'RL_*GQEA U '(FORMULA ASSUME EXCEPT)
                       '(FORMULA (LIST ATOM) (LIST VARIABLE))
                       '((ASSUME LIST) (EXCEPT LIST))
                       '(PAIR (LIST ATOM)
                         (LIST (PAIR FORMULA (LIST (ASSIGNMENT ANY)))))
                       'RL_GQEA* 'RLGQEA)) 
(PUT 'RL_*GQEA 'NUMBER-OF-ARGS 3) 
(DE RL_*GQEA (FORMULA ASSUME EXCEPT)
    (APPLY 'RL_GQEA (LIST FORMULA ASSUME EXCEPT))) 
(FLUID '(RL_GQEA*)) 
(SETQ RL_SERVL* (CONS 'RL_GQEA* RL_SERVL*)) 
(PUT 'RL_GQEA 'RL_SUPPORT 'RL_SMSERVICE) 
(SETQ RL_SERVICES* (CONS 'RL_GQEA RL_SERVICES*)) 
(PUT 'RL_GQEA 'NUMBER-OF-ARGS 3) 
(DE RL_GQEA (FORMULA ASSUME EXCEPT)
    (APPLY RL_GQEA* (LIST FORMULA ASSUME EXCEPT))) 
(PUT 'RLGSN 'RTYPEFN 'RTYPEPART) 
(PUT 'RLGSN 'RL_SUPPORT 'RL_AMSERVICE) 
(PUT 'RLGSN 'RL_SMSERVICE 'RL_GSN) 
(PUT 'RLGSN 'NAMES '(FORMULA ASSUME FORM)) 
(PUT 'RLGSN 'INTYPES '("Formula" "List(Atom)" "Enum(auto,cnf,dnf)")) 
(PUT 'RLGSN 'DEFAULTS '((ASSUME LIST) (FORM . AUTO))) 
(PUT 'RLGSN 'OUTTYPE "Formula") 
(PUT 'RLGSN 'DESCRIPTION "Groebner simplifier") 
(PUT 'RLGSN 'DOCS
     '("quantifier-free input formula" "atomic input assumptions"
       "Boolean normal form to use")) 
(PUT 'RL_GSN 'RL_AMSERVICE 'RLGSN) 
(PUT 'RLGSN 'PSOPFN 'RL_GSN$) 
(PUT 'RL_GSN$ 'CLEANUPFN 'RL_CLEANUP) 
(PUT 'RL_GSN$ 'NUMBER-OF-ARGS 1) 
(DE RL_GSN$ (U)
    (RL_SERVICEWRAPPER 'RL_*GSN U '(FORMULA ASSUME FORM)
                       '(FORMULA (LIST ATOM) (ENUM AUTO CNF DNF))
                       '((ASSUME LIST) (FORM . AUTO)) 'FORMULA 'RL_GSN* 'RLGSN)) 
(PUT 'RL_*GSN 'NUMBER-OF-ARGS 3) 
(DE RL_*GSN (FORMULA ASSUME FORM) (APPLY 'RL_GSN (LIST FORMULA ASSUME FORM))) 
(FLUID '(RL_GSN*)) 
(SETQ RL_SERVL* (CONS 'RL_GSN* RL_SERVL*)) 
(PUT 'RL_GSN 'RL_SUPPORT 'RL_SMSERVICE) 
(SETQ RL_SERVICES* (CONS 'RL_GSN RL_SERVICES*)) 
(PUT 'RL_GSN 'NUMBER-OF-ARGS 3) 
(DE RL_GSN (FORMULA ASSUME FORM) (APPLY RL_GSN* (LIST FORMULA ASSUME FORM))) 
(PUT 'RLHQE 'RTYPEFN 'RTYPEPART) 
(PUT 'RLHQE 'RL_SUPPORT 'RL_AMSERVICE) 
(PUT 'RLHQE 'RL_SMSERVICE 'RL_HQE) 
(PUT 'RLHQE 'NAMES '(FORMULA)) 
(PUT 'RLHQE 'INTYPES '("Formula")) 
(PUT 'RLHQE 'DEFAULTS 'NIL) 
(PUT 'RLHQE 'OUTTYPE "Formula") 
(PUT 'RLHQE 'DESCRIPTION "Hermitian quantifier elimination") 
(PUT 'RLHQE 'DOCS '("first-order input formula")) 
(PUT 'RL_HQE 'RL_AMSERVICE 'RLHQE) 
(PUT 'RLHQE 'PSOPFN 'RL_HQE$) 
(PUT 'RL_HQE$ 'CLEANUPFN 'RL_CLEANUP) 
(PUT 'RL_HQE$ 'NUMBER-OF-ARGS 1) 
(DE RL_HQE$ (U)
    (RL_SERVICEWRAPPER 'RL_*HQE U '(FORMULA) '(FORMULA) 'NIL 'FORMULA 'RL_HQE*
                       'RLHQE)) 
(PUT 'RL_*HQE 'NUMBER-OF-ARGS 1) 
(DE RL_*HQE (FORMULA) (APPLY 'RL_HQE (LIST FORMULA))) 
(FLUID '(RL_HQE*)) 
(SETQ RL_SERVL* (CONS 'RL_HQE* RL_SERVL*)) 
(PUT 'RL_HQE 'RL_SUPPORT 'RL_SMSERVICE) 
(SETQ RL_SERVICES* (CONS 'RL_HQE RL_SERVICES*)) 
(PUT 'RL_HQE 'NUMBER-OF-ARGS 1) 
(DE RL_HQE (FORMULA) (APPLY RL_HQE* (LIST FORMULA))) 
(PUT 'RLIFACL 'RTYPEFN 'RTYPEPART) 
(PUT 'RLIFACL 'RL_SUPPORT 'RL_AMSERVICE) 
(PUT 'RLIFACL 'RL_SMSERVICE 'RL_IFACL) 
(PUT 'RLIFACL 'NAMES '(FORMULA)) 
(PUT 'RLIFACL 'INTYPES '("Formula")) 
(PUT 'RLIFACL 'DEFAULTS 'NIL) 
(PUT 'RLIFACL 'OUTTYPE "List(Term)") 
(PUT 'RLIFACL 'DESCRIPTION "list of irreducible factors") 
(PUT 'RLIFACL 'DOCS '("first-order input formula")) 
(PUT 'RL_IFACL 'RL_AMSERVICE 'RLIFACL) 
(PUT 'RLIFACL 'PSOPFN 'RL_IFACL$) 
(PUT 'RL_IFACL$ 'CLEANUPFN 'RL_CLEANUP) 
(PUT 'RL_IFACL$ 'NUMBER-OF-ARGS 1) 
(DE RL_IFACL$ (U)
    (RL_SERVICEWRAPPER 'RL_*IFACL U '(FORMULA) '(FORMULA) 'NIL '(LIST TERM)
                       'RL_IFACL* 'RLIFACL)) 
(PUT 'RL_*IFACL 'NUMBER-OF-ARGS 1) 
(DE RL_*IFACL (FORMULA) (APPLY 'RL_IFACL (LIST FORMULA))) 
(FLUID '(RL_IFACL*)) 
(SETQ RL_SERVL* (CONS 'RL_IFACL* RL_SERVL*)) 
(PUT 'RL_IFACL 'RL_SUPPORT 'RL_SMSERVICE) 
(SETQ RL_SERVICES* (CONS 'RL_IFACL RL_SERVICES*)) 
(PUT 'RL_IFACL 'NUMBER-OF-ARGS 1) 
(DE RL_IFACL (FORMULA) (APPLY RL_IFACL* (LIST FORMULA))) 
(PUT 'RLIFACML 'RTYPEFN 'RTYPEPART) 
(PUT 'RLIFACML 'RL_SUPPORT 'RL_AMSERVICE) 
(PUT 'RLIFACML 'RL_SMSERVICE 'RL_IFACML) 
(PUT 'RLIFACML 'NAMES '(FORMULA)) 
(PUT 'RLIFACML 'INTYPES '("Formula")) 
(PUT 'RLIFACML 'DEFAULTS 'NIL) 
(PUT 'RLIFACML 'OUTTYPE "MList(Term)") 
(PUT 'RLIFACML 'DESCRIPTION
     "list of irreducible factors with numbers of occurrences") 
(PUT 'RLIFACML 'DOCS '("first-order input formula")) 
(PUT 'RL_IFACML 'RL_AMSERVICE 'RLIFACML) 
(PUT 'RLIFACML 'PSOPFN 'RL_IFACML$) 
(PUT 'RL_IFACML$ 'CLEANUPFN 'RL_CLEANUP) 
(PUT 'RL_IFACML$ 'NUMBER-OF-ARGS 1) 
(DE RL_IFACML$ (U)
    (RL_SERVICEWRAPPER 'RL_*IFACML U '(FORMULA) '(FORMULA) 'NIL '(MLIST TERM)
                       'RL_IFACML* 'RLIFACML)) 
(PUT 'RL_*IFACML 'NUMBER-OF-ARGS 1) 
(DE RL_*IFACML (FORMULA) (APPLY 'RL_IFACML (LIST FORMULA))) 
(FLUID '(RL_IFACML*)) 
(SETQ RL_SERVL* (CONS 'RL_IFACML* RL_SERVL*)) 
(PUT 'RL_IFACML 'RL_SUPPORT 'RL_SMSERVICE) 
(SETQ RL_SERVICES* (CONS 'RL_IFACML RL_SERVICES*)) 
(PUT 'RL_IFACML 'NUMBER-OF-ARGS 1) 
(DE RL_IFACML (FORMULA) (APPLY RL_IFACML* (LIST FORMULA))) 
(PUT 'RLIFACDEGL 'RTYPEFN 'RTYPEPART) 
(PUT 'RLIFACDEGL 'RL_SUPPORT 'RL_AMSERVICE) 
(PUT 'RLIFACDEGL 'RL_SMSERVICE 'RL_IFACDEGL) 
(PUT 'RLIFACDEGL 'NAMES '(FORMULA)) 
(PUT 'RLIFACDEGL 'INTYPES '("Formula")) 
(PUT 'RLIFACDEGL 'DEFAULTS 'NIL) 
(PUT 'RLIFACDEGL 'OUTTYPE
     "Pair(List(Pair(Variable,Integer)),List(Pair(Variable,Integer)))") 
(PUT 'RLIFACDEGL 'DESCRIPTION
     "maximal degrees of variables in irreducible factors") 
(PUT 'RLIFACDEGL 'DOCS '("first-order input formula")) 
(PUT 'RL_IFACDEGL 'RL_AMSERVICE 'RLIFACDEGL) 
(PUT 'RLIFACDEGL 'PSOPFN 'RL_IFACDEGL$) 
(PUT 'RL_IFACDEGL$ 'CLEANUPFN 'RL_CLEANUP) 
(PUT 'RL_IFACDEGL$ 'NUMBER-OF-ARGS 1) 
(DE RL_IFACDEGL$ (U)
    (RL_SERVICEWRAPPER 'RL_*IFACDEGL U '(FORMULA) '(FORMULA) 'NIL
                       '(PAIR (LIST (PAIR VARIABLE INTEGER))
                         (LIST (PAIR VARIABLE INTEGER)))
                       'RL_IFACDEGL* 'RLIFACDEGL)) 
(PUT 'RL_*IFACDEGL 'NUMBER-OF-ARGS 1) 
(DE RL_*IFACDEGL (FORMULA) (APPLY 'RL_IFACDEGL (LIST FORMULA))) 
(FLUID '(RL_IFACDEGL*)) 
(SETQ RL_SERVL* (CONS 'RL_IFACDEGL* RL_SERVL*)) 
(PUT 'RL_IFACDEGL 'RL_SUPPORT 'RL_SMSERVICE) 
(SETQ RL_SERVICES* (CONS 'RL_IFACDEGL RL_SERVICES*)) 
(PUT 'RL_IFACDEGL 'NUMBER-OF-ARGS 1) 
(DE RL_IFACDEGL (FORMULA) (APPLY RL_IFACDEGL* (LIST FORMULA))) 
(PUT 'RLIN 'RTYPEFN 'RTYPEPART) 
(PUT 'RLIN 'RL_SUPPORT 'RL_AMSERVICE) 
(PUT 'RLIN 'RL_SMSERVICE 'RL_IN) 
(PUT 'RLIN 'NAMES '(FILE MSG OUTPUT)) 
(PUT 'RLIN 'INTYPES '("String" "Flag" "Flag")) 
(PUT 'RLIN 'DEFAULTS '((MSG . NO) (OUTPUT . NO))) 
(PUT 'RLIN 'OUTTYPE "Void") 
(PUT 'RLIN 'DESCRIPTION "silently read *.red file") 
(PUT 'RLIN 'DOCS '("file name" "print warnings" "print output")) 
(PUT 'RL_IN 'RL_AMSERVICE 'RLIN) 
(PUT 'RLIN 'PSOPFN 'RL_IN$) 
(PUT 'RL_IN$ 'CLEANUPFN 'RL_CLEANUP) 
(PUT 'RL_IN$ 'NUMBER-OF-ARGS 1) 
(DE RL_IN$ (U)
    (RL_SERVICEWRAPPER 'RL_*IN U '(FILE MSG OUTPUT) '(STRING FLAG FLAG)
                       '((MSG . NO) (OUTPUT . NO)) 'VOID 'RL_IN* 'RLIN)) 
(PUT 'RL_*IN 'NUMBER-OF-ARGS 3) 
(DE RL_*IN (FILE MSG OUTPUT) (APPLY 'RL_IN (LIST FILE MSG OUTPUT))) 
(FLUID '(RL_IN*)) 
(SETQ RL_SERVL* (CONS 'RL_IN* RL_SERVL*)) 
(PUT 'RL_IN 'RL_SUPPORT 'RL_SMSERVICE) 
(SETQ RL_SERVICES* (CONS 'RL_IN RL_SERVICES*)) 
(PUT 'RL_IN 'NUMBER-OF-ARGS 3) 
(DE RL_IN (FILE MSG OUTPUT) (APPLY RL_IN* (LIST FILE MSG OUTPUT))) 
(PUT 'RLKAPUR 'RTYPEFN 'RTYPEPART) 
(PUT 'RLKAPUR 'RL_SUPPORT 'RL_AMSERVICE) 
(PUT 'RLKAPUR 'RL_SMSERVICE 'RL_KAPUR) 
(PUT 'RLKAPUR 'NAMES '(FORMULA)) 
(PUT 'RLKAPUR 'INTYPES '("Formula")) 
(PUT 'RLKAPUR 'DEFAULTS 'NIL) 
(PUT 'RLKAPUR 'OUTTYPE "TruthValue") 
(PUT 'RLKAPUR 'DESCRIPTION "GB-based satisfiability") 
(PUT 'RLKAPUR 'DOCS '("quantifier-free input formula")) 
(PUT 'RL_KAPUR 'RL_AMSERVICE 'RLKAPUR) 
(PUT 'RLKAPUR 'PSOPFN 'RL_KAPUR$) 
(PUT 'RL_KAPUR$ 'CLEANUPFN 'RL_CLEANUP) 
(PUT 'RL_KAPUR$ 'NUMBER-OF-ARGS 1) 
(DE RL_KAPUR$ (U)
    (RL_SERVICEWRAPPER 'RL_*KAPUR U '(FORMULA) '(FORMULA) 'NIL 'TRUTHVALUE
                       'RL_KAPUR* 'RLKAPUR)) 
(PUT 'RL_*KAPUR 'NUMBER-OF-ARGS 1) 
(DE RL_*KAPUR (FORMULA) (APPLY 'RL_KAPUR (LIST FORMULA))) 
(FLUID '(RL_KAPUR*)) 
(SETQ RL_SERVL* (CONS 'RL_KAPUR* RL_SERVL*)) 
(PUT 'RL_KAPUR 'RL_SUPPORT 'RL_SMSERVICE) 
(SETQ RL_SERVICES* (CONS 'RL_KAPUR RL_SERVICES*)) 
(PUT 'RL_KAPUR 'NUMBER-OF-ARGS 1) 
(DE RL_KAPUR (FORMULA) (APPLY RL_KAPUR* (LIST FORMULA))) 
(PUT 'RLLQE 'RTYPEFN 'RTYPEPART) 
(PUT 'RLLQE 'RL_SUPPORT 'RL_AMSERVICE) 
(PUT 'RLLQE 'RL_SMSERVICE 'RL_LQE) 
(PUT 'RLLQE 'NAMES '(FORMULA ASSUME POINT)) 
(PUT 'RLLQE 'INTYPES '("Formula" "List(Atom)" "List(Assignment(Rational))")) 
(PUT 'RLLQE 'DEFAULTS '((ASSUME LIST) (POINT LIST))) 
(PUT 'RLLQE 'OUTTYPE "Pair(List(Atom),Formula)") 
(PUT 'RLLQE 'DESCRIPTION "local quantifier elimination") 
(PUT 'RLLQE 'DOCS
     '("first-order input formula" "atomic input assumptions on the parameters"
       "point where generated theory will be consistent")) 
(PUT 'RL_LQE 'RL_AMSERVICE 'RLLQE) 
(PUT 'RLLQE 'PSOPFN 'RL_LQE$) 
(PUT 'RL_LQE$ 'CLEANUPFN 'RL_CLEANUP) 
(PUT 'RL_LQE$ 'NUMBER-OF-ARGS 1) 
(DE RL_LQE$ (U)
    (RL_SERVICEWRAPPER 'RL_*LQE U '(FORMULA ASSUME POINT)
                       '(FORMULA (LIST ATOM) (LIST (ASSIGNMENT RATIONAL)))
                       '((ASSUME LIST) (POINT LIST))
                       '(PAIR (LIST ATOM) FORMULA) 'RL_LQE* 'RLLQE)) 
(PUT 'RL_*LQE 'NUMBER-OF-ARGS 3) 
(DE RL_*LQE (FORMULA ASSUME POINT) (APPLY 'RL_LQE (LIST FORMULA ASSUME POINT))) 
(FLUID '(RL_LQE*)) 
(SETQ RL_SERVL* (CONS 'RL_LQE* RL_SERVL*)) 
(PUT 'RL_LQE 'RL_SUPPORT 'RL_SMSERVICE) 
(SETQ RL_SERVICES* (CONS 'RL_LQE RL_SERVICES*)) 
(PUT 'RL_LQE 'NUMBER-OF-ARGS 3) 
(DE RL_LQE (FORMULA ASSUME POINT) (APPLY RL_LQE* (LIST FORMULA ASSUME POINT))) 
(PUT 'RLMATRIX 'RTYPEFN 'RTYPEPART) 
(PUT 'RLMATRIX 'RL_SUPPORT 'RL_AMSERVICE) 
(PUT 'RLMATRIX 'RL_SMSERVICE 'RL_MATRIX) 
(PUT 'RLMATRIX 'NAMES '(FORMULA)) 
(PUT 'RLMATRIX 'INTYPES '("Formula")) 
(PUT 'RLMATRIX 'DEFAULTS 'NIL) 
(PUT 'RLMATRIX 'OUTTYPE "Formula") 
(PUT 'RLMATRIX 'DESCRIPTION "matrix - remove all leading quantifiers") 
(PUT 'RLMATRIX 'DOCS '("first-order input formula")) 
(PUT 'RL_MATRIX 'RL_AMSERVICE 'RLMATRIX) 
(PUT 'RLMATRIX 'PSOPFN 'RL_MATRIX$) 
(PUT 'RL_MATRIX$ 'CLEANUPFN 'RL_CLEANUP) 
(PUT 'RL_MATRIX$ 'NUMBER-OF-ARGS 1) 
(DE RL_MATRIX$ (U)
    (RL_SERVICEWRAPPER 'RL_*MATRIX U '(FORMULA) '(FORMULA) 'NIL 'FORMULA
                       'RL_MATRIX* 'RLMATRIX)) 
(PUT 'RL_*MATRIX 'NUMBER-OF-ARGS 1) 
(DE RL_*MATRIX (FORMULA) (APPLY 'RL_MATRIX (LIST FORMULA))) 
(FLUID '(RL_MATRIX*)) 
(SETQ RL_SERVL* (CONS 'RL_MATRIX* RL_SERVL*)) 
(PUT 'RL_MATRIX 'RL_SUPPORT 'RL_SMSERVICE) 
(SETQ RL_SERVICES* (CONS 'RL_MATRIX RL_SERVICES*)) 
(PUT 'RL_MATRIX 'NUMBER-OF-ARGS 1) 
(DE RL_MATRIX (FORMULA) (APPLY RL_MATRIX* (LIST FORMULA))) 
(PUT 'RLMINISCOPE 'RTYPEFN 'RTYPEPART) 
(PUT 'RLMINISCOPE 'RL_SUPPORT 'RL_AMSERVICE) 
(PUT 'RLMINISCOPE 'RL_SMSERVICE 'RL_MINISCOPE) 
(PUT 'RLMINISCOPE 'NAMES '(FORMULA)) 
(PUT 'RLMINISCOPE 'INTYPES '("Formula")) 
(PUT 'RLMINISCOPE 'DEFAULTS 'NIL) 
(PUT 'RLMINISCOPE 'OUTTYPE "Formula") 
(PUT 'RLMINISCOPE 'DESCRIPTION "miniscoping, aka anti-prenex normal form") 
(PUT 'RLMINISCOPE 'DOCS '("first-order input formula")) 
(PUT 'RL_MINISCOPE 'RL_AMSERVICE 'RLMINISCOPE) 
(PUT 'RLMINISCOPE 'PSOPFN 'RL_MINISCOPE$) 
(PUT 'RL_MINISCOPE$ 'CLEANUPFN 'RL_CLEANUP) 
(PUT 'RL_MINISCOPE$ 'NUMBER-OF-ARGS 1) 
(DE RL_MINISCOPE$ (U)
    (RL_SERVICEWRAPPER 'RL_*MINISCOPE U '(FORMULA) '(FORMULA) 'NIL 'FORMULA
                       'RL_MINISCOPE* 'RLMINISCOPE)) 
(PUT 'RL_*MINISCOPE 'NUMBER-OF-ARGS 1) 
(DE RL_*MINISCOPE (FORMULA) (APPLY 'RL_MINISCOPE (LIST FORMULA))) 
(FLUID '(RL_MINISCOPE*)) 
(SETQ RL_SERVL* (CONS 'RL_MINISCOPE* RL_SERVL*)) 
(PUT 'RL_MINISCOPE 'RL_SUPPORT 'RL_SMSERVICE) 
(SETQ RL_SERVICES* (CONS 'RL_MINISCOPE RL_SERVICES*)) 
(PUT 'RL_MINISCOPE 'NUMBER-OF-ARGS 1) 
(DE RL_MINISCOPE (FORMULA) (APPLY RL_MINISCOPE* (LIST FORMULA))) 
(PUT 'RLMKCANONIC 'RTYPEFN 'RTYPEPART) 
(PUT 'RLMKCANONIC 'RL_SUPPORT 'RL_AMSERVICE) 
(PUT 'RLMKCANONIC 'RL_SMSERVICE 'RL_MKCANONIC) 
(PUT 'RLMKCANONIC 'NAMES '(FORMULA)) 
(PUT 'RLMKCANONIC 'INTYPES '("Formula")) 
(PUT 'RLMKCANONIC 'DEFAULTS 'NIL) 
(PUT 'RLMKCANONIC 'OUTTYPE "Formula") 
(PUT 'RLMKCANONIC 'DESCRIPTION
     "a canonical form for variable-free formulas (PADICS only)") 
(PUT 'RLMKCANONIC 'DOCS '("variable-free input formula")) 
(PUT 'RL_MKCANONIC 'RL_AMSERVICE 'RLMKCANONIC) 
(PUT 'RLMKCANONIC 'PSOPFN 'RL_MKCANONIC$) 
(PUT 'RL_MKCANONIC$ 'CLEANUPFN 'RL_CLEANUP) 
(PUT 'RL_MKCANONIC$ 'NUMBER-OF-ARGS 1) 
(DE RL_MKCANONIC$ (U)
    (RL_SERVICEWRAPPER 'RL_*MKCANONIC U '(FORMULA) '(FORMULA) 'NIL 'FORMULA
                       'RL_MKCANONIC* 'RLMKCANONIC)) 
(PUT 'RL_*MKCANONIC 'NUMBER-OF-ARGS 1) 
(DE RL_*MKCANONIC (FORMULA) (APPLY 'RL_MKCANONIC (LIST FORMULA))) 
(FLUID '(RL_MKCANONIC*)) 
(SETQ RL_SERVL* (CONS 'RL_MKCANONIC* RL_SERVL*)) 
(PUT 'RL_MKCANONIC 'RL_SUPPORT 'RL_SMSERVICE) 
(SETQ RL_SERVICES* (CONS 'RL_MKCANONIC RL_SERVICES*)) 
(PUT 'RL_MKCANONIC 'NUMBER-OF-ARGS 1) 
(DE RL_MKCANONIC (FORMULA) (APPLY RL_MKCANONIC* (LIST FORMULA))) 
(PUT 'RLMATHEMATICA 'RTYPEFN 'RTYPEPART) 
(PUT 'RLMATHEMATICA 'RL_SUPPORT 'RL_AMSERVICE) 
(PUT 'RLMATHEMATICA 'RL_SMSERVICE 'RL_MATHEMATICA) 
(PUT 'RLMATHEMATICA 'NAMES '(FORMULA)) 
(PUT 'RLMATHEMATICA 'INTYPES '("Formula")) 
(PUT 'RLMATHEMATICA 'DEFAULTS 'NIL) 
(PUT 'RLMATHEMATICA 'OUTTYPE "Formula") 
(PUT 'RLMATHEMATICA 'DESCRIPTION
     "interface to external mathematica using Resolve[]") 
(PUT 'RLMATHEMATICA 'SEEALSO '(RLCAD RLQE RLQEPCAD)) 
(PUT 'RLMATHEMATICA 'DOCS '("first-order input formula")) 
(PUT 'RL_MATHEMATICA 'RL_AMSERVICE 'RLMATHEMATICA) 
(PUT 'RLMATHEMATICA 'PSOPFN 'RL_MATHEMATICA$) 
(PUT 'RL_MATHEMATICA$ 'CLEANUPFN 'RL_CLEANUP) 
(PUT 'RL_MATHEMATICA$ 'NUMBER-OF-ARGS 1) 
(DE RL_MATHEMATICA$ (U)
    (RL_SERVICEWRAPPER 'RL_*MATHEMATICA U '(FORMULA) '(FORMULA) 'NIL 'FORMULA
                       'RL_MATHEMATICA* 'RLMATHEMATICA)) 
(PUT 'RL_*MATHEMATICA 'NUMBER-OF-ARGS 1) 
(DE RL_*MATHEMATICA (FORMULA) (APPLY 'RL_MATHEMATICA (LIST FORMULA))) 
(FLUID '(RL_MATHEMATICA*)) 
(SETQ RL_SERVL* (CONS 'RL_MATHEMATICA* RL_SERVL*)) 
(PUT 'RL_MATHEMATICA 'RL_SUPPORT 'RL_SMSERVICE) 
(SETQ RL_SERVICES* (CONS 'RL_MATHEMATICA RL_SERVICES*)) 
(PUT 'RL_MATHEMATICA 'NUMBER-OF-ARGS 1) 
(DE RL_MATHEMATICA (FORMULA) (APPLY RL_MATHEMATICA* (LIST FORMULA))) 
(PUT 'RLNNF 'RTYPEFN 'RTYPEPART) 
(PUT 'RLNNF 'RL_SUPPORT 'RL_AMSERVICE) 
(PUT 'RLNNF 'RL_SMSERVICE 'RL_NNF) 
(PUT 'RLNNF 'NAMES '(FORMULA)) 
(PUT 'RLNNF 'INTYPES '("Formula")) 
(PUT 'RLNNF 'DEFAULTS 'NIL) 
(PUT 'RLNNF 'OUTTYPE "Formula") 
(PUT 'RLNNF 'DESCRIPTION "negation normal form") 
(PUT 'RLNNF 'DOCS '("first-order input formula")) 
(PUT 'RL_NNF 'RL_AMSERVICE 'RLNNF) 
(PUT 'RLNNF 'PSOPFN 'RL_NNF$) 
(PUT 'RL_NNF$ 'CLEANUPFN 'RL_CLEANUP) 
(PUT 'RL_NNF$ 'NUMBER-OF-ARGS 1) 
(DE RL_NNF$ (U)
    (RL_SERVICEWRAPPER 'RL_*NNF U '(FORMULA) '(FORMULA) 'NIL 'FORMULA 'RL_NNF*
                       'RLNNF)) 
(PUT 'RL_*NNF 'NUMBER-OF-ARGS 1) 
(DE RL_*NNF (FORMULA) (APPLY 'RL_NNF (LIST FORMULA))) 
(FLUID '(RL_NNF*)) 
(SETQ RL_SERVL* (CONS 'RL_NNF* RL_SERVL*)) 
(PUT 'RL_NNF 'RL_SUPPORT 'RL_SMSERVICE) 
(SETQ RL_SERVICES* (CONS 'RL_NNF RL_SERVICES*)) 
(PUT 'RL_NNF 'NUMBER-OF-ARGS 1) 
(DE RL_NNF (FORMULA) (APPLY RL_NNF* (LIST FORMULA))) 
(PUT 'RLNRA2QF 'RTYPEFN 'RTYPEPART) 
(PUT 'RLNRA2QF 'RL_SUPPORT 'RL_AMSERVICE) 
(PUT 'RLNRA2QF 'RL_SMSERVICE 'RL_NRA2QF) 
(PUT 'RLNRA2QF 'NAMES '(INFILE OUTFILE)) 
(PUT 'RLNRA2QF 'INTYPES '("String" "String")) 
(PUT 'RLNRA2QF 'DEFAULTS 'NIL) 
(PUT 'RLNRA2QF 'OUTTYPE "Void") 
(PUT 'RLNRA2QF 'DESCRIPTION "translate SMTLIB file from NRA to QF_NRA") 
(PUT 'RLNRA2QF 'DOCS '("smt2 input file (NRA)" "smt2 output file (QF_NRA)")) 
(PUT 'RL_NRA2QF 'RL_AMSERVICE 'RLNRA2QF) 
(PUT 'RLNRA2QF 'PSOPFN 'RL_NRA2QF$) 
(PUT 'RL_NRA2QF$ 'CLEANUPFN 'RL_CLEANUP) 
(PUT 'RL_NRA2QF$ 'NUMBER-OF-ARGS 1) 
(DE RL_NRA2QF$ (U)
    (RL_SERVICEWRAPPER 'RL_*NRA2QF U '(INFILE OUTFILE) '(STRING STRING) 'NIL
                       'VOID 'RL_NRA2QF* 'RLNRA2QF)) 
(PUT 'RL_*NRA2QF 'NUMBER-OF-ARGS 2) 
(DE RL_*NRA2QF (INFILE OUTFILE) (APPLY 'RL_NRA2QF (LIST INFILE OUTFILE))) 
(FLUID '(RL_NRA2QF*)) 
(SETQ RL_SERVL* (CONS 'RL_NRA2QF* RL_SERVL*)) 
(PUT 'RL_NRA2QF 'RL_SUPPORT 'RL_SMSERVICE) 
(SETQ RL_SERVICES* (CONS 'RL_NRA2QF RL_SERVICES*)) 
(PUT 'RL_NRA2QF 'NUMBER-OF-ARGS 2) 
(DE RL_NRA2QF (INFILE OUTFILE) (APPLY RL_NRA2QF* (LIST INFILE OUTFILE))) 
(PUT 'RLOPT 'RTYPEFN 'RTYPEPART) 
(PUT 'RLOPT 'RL_SUPPORT 'RL_AMSERVICE) 
(PUT 'RLOPT 'RL_SMSERVICE 'RL_OPT) 
(PUT 'RLOPT 'NAMES '(CONSTRAINTS OBJECTIVE UNUSED PROCESSORS PARALLEL)) 
(PUT 'RLOPT 'INTYPES
     '("List(Atom)" "LPolyQ" "List(Variable)" "Integer" "Switch")) 
(PUT 'RLOPT 'DEFAULTS
     '((UNUSED LIST) (PROCESSORS . 8) (PARALLEL . *RLPARALLEL))) 
(PUT 'RLOPT 'OUTTYPE "Pair(Any,List(List(Assignment(Any))))") 
(PUT 'RLOPT 'DESCRIPTION
     "optimize linear objective function subject to linear constraints") 
(PUT 'RLOPT 'DOCS
     '("linear constraints" "linear objective function" "do not use"
       "number of processor with experimental PVM-based parallelization"
       "experimental PVM-based parallelization")) 
(PUT 'RL_OPT 'RL_AMSERVICE 'RLOPT) 
(PUT 'RLOPT 'PSOPFN 'RL_OPT$) 
(PUT 'RL_OPT$ 'CLEANUPFN 'RL_CLEANUP) 
(PUT 'RL_OPT$ 'NUMBER-OF-ARGS 1) 
(DE RL_OPT$ (U)
    (RL_SERVICEWRAPPER 'RL_*OPT U
                       '(CONSTRAINTS OBJECTIVE UNUSED PROCESSORS PARALLEL)
                       '((LIST ATOM) LPOLYQ (LIST VARIABLE) INTEGER SWITCH)
                       '((UNUSED LIST) (PROCESSORS . 8)
                         (PARALLEL . *RLPARALLEL))
                       '(PAIR ANY (LIST (LIST (ASSIGNMENT ANY)))) 'RL_OPT*
                       'RLOPT)) 
(PUT 'RL_*OPT 'NUMBER-OF-ARGS 5) 
(DE RL_*OPT (CONSTRAINTS OBJECTIVE UNUSED PROCESSORS *RLPARALLEL)
    (APPLY 'RL_OPT (LIST CONSTRAINTS OBJECTIVE UNUSED PROCESSORS))) 
(FLUID '(RL_OPT*)) 
(SETQ RL_SERVL* (CONS 'RL_OPT* RL_SERVL*)) 
(PUT 'RL_OPT 'RL_SUPPORT 'RL_SMSERVICE) 
(SETQ RL_SERVICES* (CONS 'RL_OPT RL_SERVICES*)) 
(PUT 'RL_OPT 'NUMBER-OF-ARGS 4) 
(DE RL_OPT (CONSTRAINTS OBJECTIVE UNUSED PROCESSORS)
    (APPLY RL_OPT* (LIST CONSTRAINTS OBJECTIVE UNUSED PROCESSORS))) 
(PUT 'RLPNF 'RTYPEFN 'RTYPEPART) 
(PUT 'RLPNF 'RL_SUPPORT 'RL_AMSERVICE) 
(PUT 'RLPNF 'RL_SMSERVICE 'RL_PNF) 
(PUT 'RLPNF 'NAMES '(FORMULA)) 
(PUT 'RLPNF 'INTYPES '("Formula")) 
(PUT 'RLPNF 'DEFAULTS 'NIL) 
(PUT 'RLPNF 'OUTTYPE "Formula") 
(PUT 'RLPNF 'DESCRIPTION "prenex normal form") 
(PUT 'RLPNF 'DOCS '("first-order input formula")) 
(PUT 'RL_PNF 'RL_AMSERVICE 'RLPNF) 
(PUT 'RLPNF 'PSOPFN 'RL_PNF$) 
(PUT 'RL_PNF$ 'CLEANUPFN 'RL_CLEANUP) 
(PUT 'RL_PNF$ 'NUMBER-OF-ARGS 1) 
(DE RL_PNF$ (U)
    (RL_SERVICEWRAPPER 'RL_*PNF U '(FORMULA) '(FORMULA) 'NIL 'FORMULA 'RL_PNF*
                       'RLPNF)) 
(PUT 'RL_*PNF 'NUMBER-OF-ARGS 1) 
(DE RL_*PNF (FORMULA) (APPLY 'RL_PNF (LIST FORMULA))) 
(FLUID '(RL_PNF*)) 
(SETQ RL_SERVL* (CONS 'RL_PNF* RL_SERVL*)) 
(PUT 'RL_PNF 'RL_SUPPORT 'RL_SMSERVICE) 
(SETQ RL_SERVICES* (CONS 'RL_PNF RL_SERVICES*)) 
(PUT 'RL_PNF 'NUMBER-OF-ARGS 1) 
(DE RL_PNF (FORMULA) (APPLY RL_PNF* (LIST FORMULA))) 
(PUT 'RLPOSGQE 'RTYPEFN 'RTYPEPART) 
(PUT 'RLPOSGQE 'RL_SUPPORT 'RL_AMSERVICE) 
(PUT 'RLPOSGQE 'RL_SMSERVICE 'RL_POSGQE) 
(PUT 'RLPOSGQE 'NAMES '(FORMULA ASSUME EXCEPT)) 
(PUT 'RLPOSGQE 'INTYPES '("Formula" "List(Atom)" "List(Variable)")) 
(PUT 'RLPOSGQE 'DEFAULTS '((ASSUME LIST) (EXCEPT LIST))) 
(PUT 'RLPOSGQE 'OUTTYPE "Pair(List(Atom),Formula)") 
(PUT 'RLPOSGQE 'DESCRIPTION "positive generic quantifier elimination") 
(PUT 'RLPOSGQE 'DOCS
     '("first-order input formula" "atomic input assumptions on the parameters"
       "parameters to exclude from assumptions")) 
(PUT 'RL_POSGQE 'RL_AMSERVICE 'RLPOSGQE) 
(PUT 'RLPOSGQE 'PSOPFN 'RL_POSGQE$) 
(PUT 'RL_POSGQE$ 'CLEANUPFN 'RL_CLEANUP) 
(PUT 'RL_POSGQE$ 'NUMBER-OF-ARGS 1) 
(DE RL_POSGQE$ (U)
    (RL_SERVICEWRAPPER 'RL_*POSGQE U '(FORMULA ASSUME EXCEPT)
                       '(FORMULA (LIST ATOM) (LIST VARIABLE))
                       '((ASSUME LIST) (EXCEPT LIST))
                       '(PAIR (LIST ATOM) FORMULA) 'RL_POSGQE* 'RLPOSGQE)) 
(PUT 'RL_*POSGQE 'NUMBER-OF-ARGS 3) 
(DE RL_*POSGQE (FORMULA ASSUME EXCEPT)
    (APPLY 'RL_POSGQE (LIST FORMULA ASSUME EXCEPT))) 
(FLUID '(RL_POSGQE*)) 
(SETQ RL_SERVL* (CONS 'RL_POSGQE* RL_SERVL*)) 
(PUT 'RL_POSGQE 'RL_SUPPORT 'RL_SMSERVICE) 
(SETQ RL_SERVICES* (CONS 'RL_POSGQE RL_SERVICES*)) 
(PUT 'RL_POSGQE 'NUMBER-OF-ARGS 3) 
(DE RL_POSGQE (FORMULA ASSUME EXCEPT)
    (APPLY RL_POSGQE* (LIST FORMULA ASSUME EXCEPT))) 
(PUT 'RLPOSGQEA 'RTYPEFN 'RTYPEPART) 
(PUT 'RLPOSGQEA 'RL_SUPPORT 'RL_AMSERVICE) 
(PUT 'RLPOSGQEA 'RL_SMSERVICE 'RL_POSGQEA) 
(PUT 'RLPOSGQEA 'NAMES '(FORMULA ASSUME EXCEPT)) 
(PUT 'RLPOSGQEA 'INTYPES '("Formula" "List(Atom)" "List(Variable)")) 
(PUT 'RLPOSGQEA 'DEFAULTS '((ASSUME LIST) (EXCEPT LIST))) 
(PUT 'RLPOSGQEA 'OUTTYPE
     "Pair(List(Atom),List(Pair(Formula,List(Assignment(Any)))))") 
(PUT 'RLPOSGQEA 'DESCRIPTION "generic quantifier elimination with answer") 
(PUT 'RLPOSGQEA 'DOCS
     '("first-order input formula" "atomic input assumptions"
       "parameters to exclude from assumptions")) 
(PUT 'RL_POSGQEA 'RL_AMSERVICE 'RLPOSGQEA) 
(PUT 'RLPOSGQEA 'PSOPFN 'RL_POSGQEA$) 
(PUT 'RL_POSGQEA$ 'CLEANUPFN 'RL_CLEANUP) 
(PUT 'RL_POSGQEA$ 'NUMBER-OF-ARGS 1) 
(DE RL_POSGQEA$ (U)
    (RL_SERVICEWRAPPER 'RL_*POSGQEA U '(FORMULA ASSUME EXCEPT)
                       '(FORMULA (LIST ATOM) (LIST VARIABLE))
                       '((ASSUME LIST) (EXCEPT LIST))
                       '(PAIR (LIST ATOM)
                         (LIST (PAIR FORMULA (LIST (ASSIGNMENT ANY)))))
                       'RL_POSGQEA* 'RLPOSGQEA)) 
(PUT 'RL_*POSGQEA 'NUMBER-OF-ARGS 3) 
(DE RL_*POSGQEA (FORMULA ASSUME EXCEPT)
    (APPLY 'RL_POSGQEA (LIST FORMULA ASSUME EXCEPT))) 
(FLUID '(RL_POSGQEA*)) 
(SETQ RL_SERVL* (CONS 'RL_POSGQEA* RL_SERVL*)) 
(PUT 'RL_POSGQEA 'RL_SUPPORT 'RL_SMSERVICE) 
(SETQ RL_SERVICES* (CONS 'RL_POSGQEA RL_SERVICES*)) 
(PUT 'RL_POSGQEA 'NUMBER-OF-ARGS 3) 
(DE RL_POSGQEA (FORMULA ASSUME EXCEPT)
    (APPLY RL_POSGQEA* (LIST FORMULA ASSUME EXCEPT))) 
(PUT 'RLPOSQEA 'RTYPEFN 'RTYPEPART) 
(PUT 'RLPOSQEA 'RL_SUPPORT 'RL_AMSERVICE) 
(PUT 'RLPOSQEA 'RL_SMSERVICE 'RL_POSQEA) 
(PUT 'RLPOSQEA 'NAMES '(FORMULA ASSUME)) 
(PUT 'RLPOSQEA 'INTYPES '("Formula" "List(Atom)")) 
(PUT 'RLPOSQEA 'DEFAULTS '((ASSUME LIST))) 
(PUT 'RLPOSQEA 'OUTTYPE "List(Pair(Formula,List(Assignment(Any))))") 
(PUT 'RLPOSQEA 'DESCRIPTION "positive quantifier elimination with answer") 
(PUT 'RLPOSQEA 'DOCS '("first-order input formula" "atomic input assumptions")) 
(PUT 'RL_POSQEA 'RL_AMSERVICE 'RLPOSQEA) 
(PUT 'RLPOSQEA 'PSOPFN 'RL_POSQEA$) 
(PUT 'RL_POSQEA$ 'CLEANUPFN 'RL_CLEANUP) 
(PUT 'RL_POSQEA$ 'NUMBER-OF-ARGS 1) 
(DE RL_POSQEA$ (U)
    (RL_SERVICEWRAPPER 'RL_*POSQEA U '(FORMULA ASSUME) '(FORMULA (LIST ATOM))
                       '((ASSUME LIST))
                       '(LIST (PAIR FORMULA (LIST (ASSIGNMENT ANY))))
                       'RL_POSQEA* 'RLPOSQEA)) 
(PUT 'RL_*POSQEA 'NUMBER-OF-ARGS 2) 
(DE RL_*POSQEA (FORMULA ASSUME) (APPLY 'RL_POSQEA (LIST FORMULA ASSUME))) 
(FLUID '(RL_POSQEA*)) 
(SETQ RL_SERVL* (CONS 'RL_POSQEA* RL_SERVL*)) 
(PUT 'RL_POSQEA 'RL_SUPPORT 'RL_SMSERVICE) 
(SETQ RL_SERVICES* (CONS 'RL_POSQEA RL_SERVICES*)) 
(PUT 'RL_POSQEA 'NUMBER-OF-ARGS 2) 
(DE RL_POSQEA (FORMULA ASSUME) (APPLY RL_POSQEA* (LIST FORMULA ASSUME))) 
(PUT 'RLPQEA 'RTYPEFN 'RTYPEPART) 
(PUT 'RLPQEA 'RL_SUPPORT 'RL_AMSERVICE) 
(PUT 'RLPQEA 'RL_SMSERVICE 'RL_PQEA) 
(PUT 'RLPQEA 'NAMES '(FORMULA PROBABILITY ASSUME)) 
(PUT 'RLPQEA 'INTYPES '("Formula" "Rational" "List(Atom)")) 
(PUT 'RLPQEA 'DEFAULTS '((PROBABILITY . 1) (ASSUME LIST))) 
(PUT 'RLPQEA 'OUTTYPE "List(Pair(Formula,List(Assignment(Any))))") 
(PUT 'RLPQEA 'DESCRIPTION
     "probabilistic quantifier elimination with answer (domain Z only)") 
(PUT 'RLPQEA 'DOCS
     '("first-order input formula" "probability in [0,1]"
       "atomic input assumptions")) 
(PUT 'RL_PQEA 'RL_AMSERVICE 'RLPQEA) 
(PUT 'RLPQEA 'PSOPFN 'RL_PQEA$) 
(PUT 'RL_PQEA$ 'CLEANUPFN 'RL_CLEANUP) 
(PUT 'RL_PQEA$ 'NUMBER-OF-ARGS 1) 
(DE RL_PQEA$ (U)
    (RL_SERVICEWRAPPER 'RL_*PQEA U '(FORMULA PROBABILITY ASSUME)
                       '(FORMULA RATIONAL (LIST ATOM))
                       '((PROBABILITY . 1) (ASSUME LIST))
                       '(LIST (PAIR FORMULA (LIST (ASSIGNMENT ANY)))) 'RL_PQEA*
                       'RLPQEA)) 
(PUT 'RL_*PQEA 'NUMBER-OF-ARGS 3) 
(DE RL_*PQEA (FORMULA PROBABILITY ASSUME)
    (APPLY 'RL_PQEA (LIST FORMULA PROBABILITY ASSUME))) 
(FLUID '(RL_PQEA*)) 
(SETQ RL_SERVL* (CONS 'RL_PQEA* RL_SERVL*)) 
(PUT 'RL_PQEA 'RL_SUPPORT 'RL_SMSERVICE) 
(SETQ RL_SERVICES* (CONS 'RL_PQEA RL_SERVICES*)) 
(PUT 'RL_PQEA 'NUMBER-OF-ARGS 3) 
(DE RL_PQEA (FORMULA PROBABILITY ASSUME)
    (APPLY RL_PQEA* (LIST FORMULA PROBABILITY ASSUME))) 
(PUT 'RLPOSQE 'RTYPEFN 'RTYPEPART) 
(PUT 'RLPOSQE 'RL_SUPPORT 'RL_AMSERVICE) 
(PUT 'RLPOSQE 'RL_SMSERVICE 'RL_POSQE) 
(PUT 'RLPOSQE 'NAMES '(FORMULA ASSUME)) 
(PUT 'RLPOSQE 'INTYPES '("Formula" "List(Atom)")) 
(PUT 'RLPOSQE 'DEFAULTS '((ASSUME LIST))) 
(PUT 'RLPOSQE 'OUTTYPE "Formula") 
(PUT 'RLPOSQE 'DESCRIPTION
     "positive quantifier elimination (all variables are positive)") 
(PUT 'RLPOSQE 'DOCS '("first-order input formula" "atomic input assumptions")) 
(PUT 'RL_POSQE 'RL_AMSERVICE 'RLPOSQE) 
(PUT 'RLPOSQE 'PSOPFN 'RL_POSQE$) 
(PUT 'RL_POSQE$ 'CLEANUPFN 'RL_CLEANUP) 
(PUT 'RL_POSQE$ 'NUMBER-OF-ARGS 1) 
(DE RL_POSQE$ (U)
    (RL_SERVICEWRAPPER 'RL_*POSQE U '(FORMULA ASSUME) '(FORMULA (LIST ATOM))
                       '((ASSUME LIST)) 'FORMULA 'RL_POSQE* 'RLPOSQE)) 
(PUT 'RL_*POSQE 'NUMBER-OF-ARGS 2) 
(DE RL_*POSQE (FORMULA ASSUME) (APPLY 'RL_POSQE (LIST FORMULA ASSUME))) 
(FLUID '(RL_POSQE*)) 
(SETQ RL_SERVL* (CONS 'RL_POSQE* RL_SERVL*)) 
(PUT 'RL_POSQE 'RL_SUPPORT 'RL_SMSERVICE) 
(SETQ RL_SERVICES* (CONS 'RL_POSQE RL_SERVICES*)) 
(PUT 'RL_POSQE 'NUMBER-OF-ARGS 2) 
(DE RL_POSQE (FORMULA ASSUME) (APPLY RL_POSQE* (LIST FORMULA ASSUME))) 
(PUT 'RLPOSRESOLVE 'RTYPEFN 'RTYPEPART) 
(PUT 'RLPOSRESOLVE 'RL_SUPPORT 'RL_AMSERVICE) 
(PUT 'RLPOSRESOLVE 'RL_SMSERVICE 'RL_POSRESOLVE) 
(PUT 'RLPOSRESOLVE 'NAMES '(FORMULA)) 
(PUT 'RLPOSRESOLVE 'INTYPES '("Formula")) 
(PUT 'RLPOSRESOLVE 'DEFAULTS 'NIL) 
(PUT 'RLPOSRESOLVE 'OUTTYPE "Formula") 
(PUT 'RLPOSRESOLVE 'DESCRIPTION
     "resolve non-standard symbols (min, max, abs) in formulas assuming all variables are positive") 
(PUT 'RLPOSRESOLVE 'DOCS
     '("first-order input formula with additional functions/relations")) 
(PUT 'RL_POSRESOLVE 'RL_AMSERVICE 'RLPOSRESOLVE) 
(PUT 'RLPOSRESOLVE 'PSOPFN 'RL_POSRESOLVE$) 
(PUT 'RL_POSRESOLVE$ 'CLEANUPFN 'RL_CLEANUP) 
(PUT 'RL_POSRESOLVE$ 'NUMBER-OF-ARGS 1) 
(DE RL_POSRESOLVE$ (U)
    (RL_SERVICEWRAPPER 'RL_*POSRESOLVE U '(FORMULA) '(FORMULA) 'NIL 'FORMULA
                       'RL_POSRESOLVE* 'RLPOSRESOLVE)) 
(PUT 'RL_*POSRESOLVE 'NUMBER-OF-ARGS 1) 
(DE RL_*POSRESOLVE (FORMULA) (APPLY 'RL_POSRESOLVE (LIST FORMULA))) 
(FLUID '(RL_POSRESOLVE*)) 
(SETQ RL_SERVL* (CONS 'RL_POSRESOLVE* RL_SERVL*)) 
(PUT 'RL_POSRESOLVE 'RL_SUPPORT 'RL_SMSERVICE) 
(SETQ RL_SERVICES* (CONS 'RL_POSRESOLVE RL_SERVICES*)) 
(PUT 'RL_POSRESOLVE 'NUMBER-OF-ARGS 1) 
(DE RL_POSRESOLVE (FORMULA) (APPLY RL_POSRESOLVE* (LIST FORMULA))) 
(PUT 'RLPQE 'RTYPEFN 'RTYPEPART) 
(PUT 'RLPQE 'RL_SUPPORT 'RL_AMSERVICE) 
(PUT 'RLPQE 'RL_SMSERVICE 'RL_PQE) 
(PUT 'RLPQE 'NAMES '(FORMULA PROBABILITY ASSUME)) 
(PUT 'RLPQE 'INTYPES '("Formula" "Rational" "List(Atom)")) 
(PUT 'RLPQE 'DEFAULTS '((PROBABILITY . 1) (ASSUME LIST))) 
(PUT 'RLPQE 'OUTTYPE "Formula") 
(PUT 'RLPQE 'DESCRIPTION "probabilistic quantifier elimination (domain Z only)") 
(PUT 'RLPQE 'DOCS
     '("first-order input formula" "p in [0,1]" "atomic input assumptions")) 
(PUT 'RL_PQE 'RL_AMSERVICE 'RLPQE) 
(PUT 'RLPQE 'PSOPFN 'RL_PQE$) 
(PUT 'RL_PQE$ 'CLEANUPFN 'RL_CLEANUP) 
(PUT 'RL_PQE$ 'NUMBER-OF-ARGS 1) 
(DE RL_PQE$ (U)
    (RL_SERVICEWRAPPER 'RL_*PQE U '(FORMULA PROBABILITY ASSUME)
                       '(FORMULA RATIONAL (LIST ATOM))
                       '((PROBABILITY . 1) (ASSUME LIST)) 'FORMULA 'RL_PQE*
                       'RLPQE)) 
(PUT 'RL_*PQE 'NUMBER-OF-ARGS 3) 
(DE RL_*PQE (FORMULA PROBABILITY ASSUME)
    (APPLY 'RL_PQE (LIST FORMULA PROBABILITY ASSUME))) 
(FLUID '(RL_PQE*)) 
(SETQ RL_SERVL* (CONS 'RL_PQE* RL_SERVL*)) 
(PUT 'RL_PQE 'RL_SUPPORT 'RL_SMSERVICE) 
(SETQ RL_SERVICES* (CONS 'RL_PQE RL_SERVICES*)) 
(PUT 'RL_PQE 'NUMBER-OF-ARGS 3) 
(DE RL_PQE (FORMULA PROBABILITY ASSUME)
    (APPLY RL_PQE* (LIST FORMULA PROBABILITY ASSUME))) 
(PUT 'RLPREQE 'RTYPEFN 'RTYPEPART) 
(PUT 'RLPREQE 'RL_SUPPORT 'RL_AMSERVICE) 
(PUT 'RLPREQE 'RL_SMSERVICE 'RL_PREQE) 
(PUT 'RLPREQE 'NAMES '(FORMULA ASSUME EXACT)) 
(PUT 'RLPREQE 'INTYPES '("Formula" "List(Atom)" "Flag")) 
(PUT 'RLPREQE 'DEFAULTS '((ASSUME LIST) (EXACT . YES))) 
(PUT 'RLPREQE 'OUTTYPE "Pair(List(Atom),Formula)") 
(PUT 'RLPREQE 'DESCRIPTION "pre-quantifier elimination (domain R only)") 
(PUT 'RLPREQE 'DOCS
     '("first-order input formula" "atomic input assumptions"
       "use exact vertex cover")) 
(PUT 'RL_PREQE 'RL_AMSERVICE 'RLPREQE) 
(PUT 'RLPREQE 'PSOPFN 'RL_PREQE$) 
(PUT 'RL_PREQE$ 'CLEANUPFN 'RL_CLEANUP) 
(PUT 'RL_PREQE$ 'NUMBER-OF-ARGS 1) 
(DE RL_PREQE$ (U)
    (RL_SERVICEWRAPPER 'RL_*PREQE U '(FORMULA ASSUME EXACT)
                       '(FORMULA (LIST ATOM) FLAG)
                       '((ASSUME LIST) (EXACT . YES))
                       '(PAIR (LIST ATOM) FORMULA) 'RL_PREQE* 'RLPREQE)) 
(PUT 'RL_*PREQE 'NUMBER-OF-ARGS 3) 
(DE RL_*PREQE (FORMULA ASSUME EXACT)
    (APPLY 'RL_PREQE (LIST FORMULA ASSUME EXACT))) 
(FLUID '(RL_PREQE*)) 
(SETQ RL_SERVL* (CONS 'RL_PREQE* RL_SERVL*)) 
(PUT 'RL_PREQE 'RL_SUPPORT 'RL_SMSERVICE) 
(SETQ RL_SERVICES* (CONS 'RL_PREQE RL_SERVICES*)) 
(PUT 'RL_PREQE 'NUMBER-OF-ARGS 3) 
(DE RL_PREQE (FORMULA ASSUME EXACT)
    (APPLY RL_PREQE* (LIST FORMULA ASSUME EXACT))) 
(PUT 'RLVCREDUCE 'RTYPEFN 'RTYPEPART) 
(PUT 'RLVCREDUCE 'RL_SUPPORT 'RL_AMSERVICE) 
(PUT 'RLVCREDUCE 'RL_SMSERVICE 'RL_VCREDUCE) 
(PUT 'RLVCREDUCE 'NAMES '(FORMULA VARIABLES ASSUME NOGEN EXACT)) 
(PUT 'RLVCREDUCE 'INTYPES
     '("Formula" "List(Variable)" "List(Atom)" "Flag" "Flag")) 
(PUT 'RLVCREDUCE 'DEFAULTS '((ASSUME LIST) (NOGEN . NO) (EXACT . YES))) 
(PUT 'RLVCREDUCE 'OUTTYPE "Triplet(Formula,List(Assignment(Any)),List(Atom))") 
(PUT 'RLVCREDUCE 'DESCRIPTION
     "extended generic vertex cover reduction method (domain R only)") 
(PUT 'RLVCREDUCE 'DOCS
     '("first-order input formula" "to be eliminated"
       "atomic input assumptions" "do not generate assumptions on variables"
       "use exact vertex cover")) 
(PUT 'RL_VCREDUCE 'RL_AMSERVICE 'RLVCREDUCE) 
(PUT 'RLVCREDUCE 'PSOPFN 'RL_VCREDUCE$) 
(PUT 'RL_VCREDUCE$ 'CLEANUPFN 'RL_CLEANUP) 
(PUT 'RL_VCREDUCE$ 'NUMBER-OF-ARGS 1) 
(DE RL_VCREDUCE$ (U)
    (RL_SERVICEWRAPPER 'RL_*VCREDUCE U '(FORMULA VARIABLES ASSUME NOGEN EXACT)
                       '(FORMULA (LIST VARIABLE) (LIST ATOM) FLAG FLAG)
                       '((ASSUME LIST) (NOGEN . NO) (EXACT . YES))
                       '(TRIPLET FORMULA (LIST (ASSIGNMENT ANY)) (LIST ATOM))
                       'RL_VCREDUCE* 'RLVCREDUCE)) 
(PUT 'RL_*VCREDUCE 'NUMBER-OF-ARGS 5) 
(DE RL_*VCREDUCE (FORMULA VARIABLES ASSUME NOGEN EXACT)
    (APPLY 'RL_VCREDUCE (LIST FORMULA VARIABLES ASSUME NOGEN EXACT))) 
(FLUID '(RL_VCREDUCE*)) 
(SETQ RL_SERVL* (CONS 'RL_VCREDUCE* RL_SERVL*)) 
(PUT 'RL_VCREDUCE 'RL_SUPPORT 'RL_SMSERVICE) 
(SETQ RL_SERVICES* (CONS 'RL_VCREDUCE RL_SERVICES*)) 
(PUT 'RL_VCREDUCE 'NUMBER-OF-ARGS 5) 
(DE RL_VCREDUCE (FORMULA VARIABLES ASSUME NOGEN EXACT)
    (APPLY RL_VCREDUCE* (LIST FORMULA VARIABLES ASSUME NOGEN EXACT))) 
(PUT 'RLPSAT2POL 'RTYPEFN 'RTYPEPART) 
(PUT 'RLPSAT2POL 'RL_SUPPORT 'RL_AMSERVICE) 
(PUT 'RLPSAT2POL 'RL_SMSERVICE 'RL_PSAT2POL) 
(PUT 'RLPSAT2POL 'NAMES '(FORMULA)) 
(PUT 'RLPSAT2POL 'INTYPES '("Formula")) 
(PUT 'RLPSAT2POL 'DEFAULTS 'NIL) 
(PUT 'RLPSAT2POL 'OUTTYPE "Term") 
(PUT 'RLPSAT2POL 'DESCRIPTION
     "encode satisfiability into polynomial assuming all variables are positive") 
(PUT 'RLPSAT2POL 'DOCS '("quantifier-free input formula")) 
(PUT 'RL_PSAT2POL 'RL_AMSERVICE 'RLPSAT2POL) 
(PUT 'RLPSAT2POL 'PSOPFN 'RL_PSAT2POL$) 
(PUT 'RL_PSAT2POL$ 'CLEANUPFN 'RL_CLEANUP) 
(PUT 'RL_PSAT2POL$ 'NUMBER-OF-ARGS 1) 
(DE RL_PSAT2POL$ (U)
    (RL_SERVICEWRAPPER 'RL_*PSAT2POL U '(FORMULA) '(FORMULA) 'NIL 'TERM
                       'RL_PSAT2POL* 'RLPSAT2POL)) 
(PUT 'RL_*PSAT2POL 'NUMBER-OF-ARGS 1) 
(DE RL_*PSAT2POL (FORMULA) (APPLY 'RL_PSAT2POL (LIST FORMULA))) 
(FLUID '(RL_PSAT2POL*)) 
(SETQ RL_SERVL* (CONS 'RL_PSAT2POL* RL_SERVL*)) 
(PUT 'RL_PSAT2POL 'RL_SUPPORT 'RL_SMSERVICE) 
(SETQ RL_SERVICES* (CONS 'RL_PSAT2POL RL_SERVICES*)) 
(PUT 'RL_PSAT2POL 'NUMBER-OF-ARGS 1) 
(DE RL_PSAT2POL (FORMULA) (APPLY RL_PSAT2POL* (LIST FORMULA))) 
(PUT 'RLQE 'RTYPEFN 'RTYPEPART) 
(PUT 'RLQE 'RL_SUPPORT 'RL_AMSERVICE) 
(PUT 'RLQE 'RL_SMSERVICE 'RL_QE) 
(PUT 'RLQE 'NAMES '(FORMULA ASSUME)) 
(PUT 'RLQE 'INTYPES '("Formula" "List(Atom)")) 
(PUT 'RLQE 'DEFAULTS '((ASSUME LIST))) 
(PUT 'RLQE 'OUTTYPE "Formula") 
(PUT 'RLQE 'DESCRIPTION "quantifier elimination") 
(PUT 'RLQE 'SEEALSO
     '(RLCAD RLGCAD RLGHQE RLGQE RLGQEA RLHQE RLLQE RLPOSQE RLPOSQEA RLQEA
       RLQEIPO RLQEWS)) 
(PUT 'RLQE 'DOCS '("first-order input formula" "atomic input assumptions")) 
(PUT 'RL_QE 'RL_AMSERVICE 'RLQE) 
(PUT 'RLQE 'PSOPFN 'RL_QE$) 
(PUT 'RL_QE$ 'CLEANUPFN 'RL_CLEANUP) 
(PUT 'RL_QE$ 'NUMBER-OF-ARGS 1) 
(DE RL_QE$ (U)
    (RL_SERVICEWRAPPER 'RL_*QE U '(FORMULA ASSUME) '(FORMULA (LIST ATOM))
                       '((ASSUME LIST)) 'FORMULA 'RL_QE* 'RLQE)) 
(PUT 'RL_*QE 'NUMBER-OF-ARGS 2) 
(DE RL_*QE (FORMULA ASSUME) (APPLY 'RL_QE (LIST FORMULA ASSUME))) 
(FLUID '(RL_QE*)) 
(SETQ RL_SERVL* (CONS 'RL_QE* RL_SERVL*)) 
(PUT 'RL_QE 'RL_SUPPORT 'RL_SMSERVICE) 
(SETQ RL_SERVICES* (CONS 'RL_QE RL_SERVICES*)) 
(PUT 'RL_QE 'NUMBER-OF-ARGS 2) 
(DE RL_QE (FORMULA ASSUME) (APPLY RL_QE* (LIST FORMULA ASSUME))) 
(PUT 'RLQEA 'RTYPEFN 'RTYPEPART) 
(PUT 'RLQEA 'RL_SUPPORT 'RL_AMSERVICE) 
(PUT 'RLQEA 'RL_SMSERVICE 'RL_QEA) 
(PUT 'RLQEA 'NAMES '(FORMULA ASSUME)) 
(PUT 'RLQEA 'INTYPES '("Formula" "List(Atom)")) 
(PUT 'RLQEA 'DEFAULTS '((ASSUME LIST))) 
(PUT 'RLQEA 'OUTTYPE "List(Pair(Formula,List(Assignment(Any))))") 
(PUT 'RLQEA 'DESCRIPTION "quantifier elimination with answer") 
(PUT 'RLQEA 'DOCS '("first-order input formula" "atomic input assumptions")) 
(PUT 'RL_QEA 'RL_AMSERVICE 'RLQEA) 
(PUT 'RLQEA 'PSOPFN 'RL_QEA$) 
(PUT 'RL_QEA$ 'CLEANUPFN 'RL_CLEANUP) 
(PUT 'RL_QEA$ 'NUMBER-OF-ARGS 1) 
(DE RL_QEA$ (U)
    (RL_SERVICEWRAPPER 'RL_*QEA U '(FORMULA ASSUME) '(FORMULA (LIST ATOM))
                       '((ASSUME LIST))
                       '(LIST (PAIR FORMULA (LIST (ASSIGNMENT ANY)))) 'RL_QEA*
                       'RLQEA)) 
(PUT 'RL_*QEA 'NUMBER-OF-ARGS 2) 
(DE RL_*QEA (FORMULA ASSUME) (APPLY 'RL_QEA (LIST FORMULA ASSUME))) 
(FLUID '(RL_QEA*)) 
(SETQ RL_SERVL* (CONS 'RL_QEA* RL_SERVL*)) 
(PUT 'RL_QEA 'RL_SUPPORT 'RL_SMSERVICE) 
(SETQ RL_SERVICES* (CONS 'RL_QEA RL_SERVICES*)) 
(PUT 'RL_QEA 'NUMBER-OF-ARGS 2) 
(DE RL_QEA (FORMULA ASSUME) (APPLY RL_QEA* (LIST FORMULA ASSUME))) 
(PUT 'RLQEG 'RTYPEFN 'RTYPEPART) 
(PUT 'RLQEG 'RL_SUPPORT 'RL_AMSERVICE) 
(PUT 'RLQEG 'RL_SMSERVICE 'RL_QEG) 
(PUT 'RLQEG 'NAMES '(FORMULA)) 
(PUT 'RLQEG 'INTYPES '("Formula")) 
(PUT 'RLQEG 'DEFAULTS 'NIL) 
(PUT 'RLQEG 'OUTTYPE "Formula") 
(PUT 'RLQEG 'DESCRIPTION
     "regular quantifier elimination via multiple genric quantifier elimination") 
(PUT 'RLQEG 'DOCS '("first-order input formula")) 
(PUT 'RL_QEG 'RL_AMSERVICE 'RLQEG) 
(PUT 'RLQEG 'PSOPFN 'RL_QEG$) 
(PUT 'RL_QEG$ 'CLEANUPFN 'RL_CLEANUP) 
(PUT 'RL_QEG$ 'NUMBER-OF-ARGS 1) 
(DE RL_QEG$ (U)
    (RL_SERVICEWRAPPER 'RL_*QEG U '(FORMULA) '(FORMULA) 'NIL 'FORMULA 'RL_QEG*
                       'RLQEG)) 
(PUT 'RL_*QEG 'NUMBER-OF-ARGS 1) 
(DE RL_*QEG (FORMULA) (APPLY 'RL_QEG (LIST FORMULA))) 
(FLUID '(RL_QEG*)) 
(SETQ RL_SERVL* (CONS 'RL_QEG* RL_SERVL*)) 
(PUT 'RL_QEG 'RL_SUPPORT 'RL_SMSERVICE) 
(SETQ RL_SERVICES* (CONS 'RL_QEG RL_SERVICES*)) 
(PUT 'RL_QEG 'NUMBER-OF-ARGS 1) 
(DE RL_QEG (FORMULA) (APPLY RL_QEG* (LIST FORMULA))) 
(PUT 'RLQEIPO 'RTYPEFN 'RTYPEPART) 
(PUT 'RLQEIPO 'RL_SUPPORT 'RL_AMSERVICE) 
(PUT 'RLQEIPO 'RL_SMSERVICE 'RL_QEIPO) 
(PUT 'RLQEIPO 'NAMES '(FORMULA ASSUME)) 
(PUT 'RLQEIPO 'INTYPES '("Formula" "List(Atom)")) 
(PUT 'RLQEIPO 'DEFAULTS '((ASSUME LIST))) 
(PUT 'RLQEIPO 'OUTTYPE "Formula") 
(PUT 'RLQEIPO 'DESCRIPTION "quantifier elimination in position") 
(PUT 'RLQEIPO 'DOCS '("first-order input formula" "atomic input assumptions")) 
(PUT 'RL_QEIPO 'RL_AMSERVICE 'RLQEIPO) 
(PUT 'RLQEIPO 'PSOPFN 'RL_QEIPO$) 
(PUT 'RL_QEIPO$ 'CLEANUPFN 'RL_CLEANUP) 
(PUT 'RL_QEIPO$ 'NUMBER-OF-ARGS 1) 
(DE RL_QEIPO$ (U)
    (RL_SERVICEWRAPPER 'RL_*QEIPO U '(FORMULA ASSUME) '(FORMULA (LIST ATOM))
                       '((ASSUME LIST)) 'FORMULA 'RL_QEIPO* 'RLQEIPO)) 
(PUT 'RL_*QEIPO 'NUMBER-OF-ARGS 2) 
(DE RL_*QEIPO (FORMULA ASSUME) (APPLY 'RL_QEIPO (LIST FORMULA ASSUME))) 
(FLUID '(RL_QEIPO*)) 
(SETQ RL_SERVL* (CONS 'RL_QEIPO* RL_SERVL*)) 
(PUT 'RL_QEIPO 'RL_SUPPORT 'RL_SMSERVICE) 
(SETQ RL_SERVICES* (CONS 'RL_QEIPO RL_SERVICES*)) 
(PUT 'RL_QEIPO 'NUMBER-OF-ARGS 2) 
(DE RL_QEIPO (FORMULA ASSUME) (APPLY RL_QEIPO* (LIST FORMULA ASSUME))) 
(PUT 'RLQEPCAD 'RTYPEFN 'RTYPEPART) 
(PUT 'RLQEPCAD 'RL_SUPPORT 'RL_AMSERVICE) 
(PUT 'RLQEPCAD 'RL_SMSERVICE 'RL_QEPCAD) 
(PUT 'RLQEPCAD 'NAMES '(FORMULA N L VERBOSE)) 
(PUT 'RLQEPCAD 'INTYPES '("Formula" "Integer" "Integer" "Switch")) 
(PUT 'RLQEPCAD 'DEFAULTS '((N . 100) (L . 200) (VERBOSE . *RLVERBOSE))) 
(PUT 'RLQEPCAD 'OUTTYPE "Formula") 
(PUT 'RLQEPCAD 'DESCRIPTION "interface to external Qepcad B") 
(PUT 'RLQEPCAD 'SEEALSO '(RLCAD RLMATHEMATICA RLQE)) 
(PUT 'RLQEPCAD 'DOCS
     '("first-order input formula" "allocate N * 10^6 cells"
       "use prime list of size L * 10^3"
       "print information on progress of computation")) 
(PUT 'RL_QEPCAD 'RL_AMSERVICE 'RLQEPCAD) 
(PUT 'RLQEPCAD 'PSOPFN 'RL_QEPCAD$) 
(PUT 'RL_QEPCAD$ 'CLEANUPFN 'RL_CLEANUP) 
(PUT 'RL_QEPCAD$ 'NUMBER-OF-ARGS 1) 
(DE RL_QEPCAD$ (U)
    (RL_SERVICEWRAPPER 'RL_*QEPCAD U '(FORMULA N L VERBOSE)
                       '(FORMULA INTEGER INTEGER SWITCH)
                       '((N . 100) (L . 200) (VERBOSE . *RLVERBOSE)) 'FORMULA
                       'RL_QEPCAD* 'RLQEPCAD)) 
(PUT 'RL_*QEPCAD 'NUMBER-OF-ARGS 4) 
(DE RL_*QEPCAD (FORMULA N L *RLVERBOSE) (APPLY 'RL_QEPCAD (LIST FORMULA N L))) 
(FLUID '(RL_QEPCAD*)) 
(SETQ RL_SERVL* (CONS 'RL_QEPCAD* RL_SERVL*)) 
(PUT 'RL_QEPCAD 'RL_SUPPORT 'RL_SMSERVICE) 
(SETQ RL_SERVICES* (CONS 'RL_QEPCAD RL_SERVICES*)) 
(PUT 'RL_QEPCAD 'NUMBER-OF-ARGS 3) 
(DE RL_QEPCAD (FORMULA N L) (APPLY RL_QEPCAD* (LIST FORMULA N L))) 
(PUT 'RLQESIL 'RTYPEFN 'RTYPEPART) 
(PUT 'RLQESIL 'RL_SUPPORT 'RL_AMSERVICE) 
(PUT 'RLQESIL 'RL_SMSERVICE 'RL_QESIL) 
(PUT 'RLQESIL 'NAMES '(FORMULAS ASSUME)) 
(PUT 'RLQESIL 'INTYPES '("List(Formula)" "List(Atom)")) 
(PUT 'RLQESIL 'DEFAULTS '((ASSUME LIST))) 
(PUT 'RLQESIL 'OUTTYPE "List(Formula)") 
(PUT 'RLQESIL 'DESCRIPTION "recognized via QE and remove redundant formulas") 
(PUT 'RLQESIL 'DOCS
     '("list of first-order input formulas" "atomic input assumptions")) 
(PUT 'RL_QESIL 'RL_AMSERVICE 'RLQESIL) 
(PUT 'RLQESIL 'PSOPFN 'RL_QESIL$) 
(PUT 'RL_QESIL$ 'CLEANUPFN 'RL_CLEANUP) 
(PUT 'RL_QESIL$ 'NUMBER-OF-ARGS 1) 
(DE RL_QESIL$ (U)
    (RL_SERVICEWRAPPER 'RL_*QESIL U '(FORMULAS ASSUME)
                       '((LIST FORMULA) (LIST ATOM)) '((ASSUME LIST))
                       '(LIST FORMULA) 'RL_QESIL* 'RLQESIL)) 
(PUT 'RL_*QESIL 'NUMBER-OF-ARGS 2) 
(DE RL_*QESIL (FORMULAS ASSUME) (APPLY 'RL_QESIL (LIST FORMULAS ASSUME))) 
(FLUID '(RL_QESIL*)) 
(SETQ RL_SERVL* (CONS 'RL_QESIL* RL_SERVL*)) 
(PUT 'RL_QESIL 'RL_SUPPORT 'RL_SMSERVICE) 
(SETQ RL_SERVICES* (CONS 'RL_QESIL RL_SERVICES*)) 
(PUT 'RL_QESIL 'NUMBER-OF-ARGS 2) 
(DE RL_QESIL (FORMULAS ASSUME) (APPLY RL_QESIL* (LIST FORMULAS ASSUME))) 
(PUT 'RLQEWS 'RTYPEFN 'RTYPEPART) 
(PUT 'RLQEWS 'RL_SUPPORT 'RL_AMSERVICE) 
(PUT 'RLQEWS 'RL_SMSERVICE 'RL_QEWS) 
(PUT 'RLQEWS 'NAMES '(FORMULA ASSUME)) 
(PUT 'RLQEWS 'INTYPES '("Formula" "List(Atom)")) 
(PUT 'RLQEWS 'DEFAULTS '((ASSUME LIST))) 
(PUT 'RLQEWS 'OUTTYPE "Formula") 
(PUT 'RLQEWS 'DESCRIPTION "quantifier elimination with selection") 
(PUT 'RLQEWS 'DOCS '("first-order input formula" "atomic input assumptions")) 
(PUT 'RL_QEWS 'RL_AMSERVICE 'RLQEWS) 
(PUT 'RLQEWS 'PSOPFN 'RL_QEWS$) 
(PUT 'RL_QEWS$ 'CLEANUPFN 'RL_CLEANUP) 
(PUT 'RL_QEWS$ 'NUMBER-OF-ARGS 1) 
(DE RL_QEWS$ (U)
    (RL_SERVICEWRAPPER 'RL_*QEWS U '(FORMULA ASSUME) '(FORMULA (LIST ATOM))
                       '((ASSUME LIST)) 'FORMULA 'RL_QEWS* 'RLQEWS)) 
(PUT 'RL_*QEWS 'NUMBER-OF-ARGS 2) 
(DE RL_*QEWS (FORMULA ASSUME) (APPLY 'RL_QEWS (LIST FORMULA ASSUME))) 
(FLUID '(RL_QEWS*)) 
(SETQ RL_SERVL* (CONS 'RL_QEWS* RL_SERVL*)) 
(PUT 'RL_QEWS 'RL_SUPPORT 'RL_SMSERVICE) 
(SETQ RL_SERVICES* (CONS 'RL_QEWS RL_SERVICES*)) 
(PUT 'RL_QEWS 'NUMBER-OF-ARGS 2) 
(DE RL_QEWS (FORMULA ASSUME) (APPLY RL_QEWS* (LIST FORMULA ASSUME))) 
(PUT 'RLQNUM 'RTYPEFN 'RTYPEPART) 
(PUT 'RLQNUM 'RL_SUPPORT 'RL_AMSERVICE) 
(PUT 'RLQNUM 'RL_SMSERVICE 'RL_QNUM) 
(PUT 'RLQNUM 'NAMES '(FORMULA)) 
(PUT 'RLQNUM 'INTYPES '("Formula")) 
(PUT 'RLQNUM 'DEFAULTS 'NIL) 
(PUT 'RLQNUM 'OUTTYPE "Integer") 
(PUT 'RLQNUM 'DESCRIPTION
     "number of occurring quantifier symbols ('ex', 'all')") 
(PUT 'RLQNUM 'DOCS '("first-order input formula")) 
(PUT 'RL_QNUM 'RL_AMSERVICE 'RLQNUM) 
(PUT 'RLQNUM 'PSOPFN 'RL_QNUM$) 
(PUT 'RL_QNUM$ 'CLEANUPFN 'RL_CLEANUP) 
(PUT 'RL_QNUM$ 'NUMBER-OF-ARGS 1) 
(DE RL_QNUM$ (U)
    (RL_SERVICEWRAPPER 'RL_*QNUM U '(FORMULA) '(FORMULA) 'NIL 'INTEGER
                       'RL_QNUM* 'RLQNUM)) 
(PUT 'RL_*QNUM 'NUMBER-OF-ARGS 1) 
(DE RL_*QNUM (FORMULA) (APPLY 'RL_QNUM (LIST FORMULA))) 
(FLUID '(RL_QNUM*)) 
(SETQ RL_SERVL* (CONS 'RL_QNUM* RL_SERVL*)) 
(PUT 'RL_QNUM 'RL_SUPPORT 'RL_SMSERVICE) 
(SETQ RL_SERVICES* (CONS 'RL_QNUM RL_SERVICES*)) 
(PUT 'RL_QNUM 'NUMBER-OF-ARGS 1) 
(DE RL_QNUM (FORMULA) (APPLY RL_QNUM* (LIST FORMULA))) 
(PUT 'RLQSAT 'RTYPEFN 'RTYPEPART) 
(PUT 'RLQSAT 'RL_SUPPORT 'RL_AMSERVICE) 
(PUT 'RLQSAT 'RL_SMSERVICE 'RL_QSAT) 
(PUT 'RLQSAT 'NAMES '(FORMULA)) 
(PUT 'RLQSAT 'INTYPES '("Formula")) 
(PUT 'RLQSAT 'DEFAULTS 'NIL) 
(PUT 'RLQSAT 'OUTTYPE "Formula") 
(PUT 'RLQSAT 'DESCRIPTION "parametric quantified SAT") 
(PUT 'RLQSAT 'DOCS '("first-order input formula (QBF)")) 
(PUT 'RL_QSAT 'RL_AMSERVICE 'RLQSAT) 
(PUT 'RLQSAT 'PSOPFN 'RL_QSAT$) 
(PUT 'RL_QSAT$ 'CLEANUPFN 'RL_CLEANUP) 
(PUT 'RL_QSAT$ 'NUMBER-OF-ARGS 1) 
(DE RL_QSAT$ (U)
    (RL_SERVICEWRAPPER 'RL_*QSAT U '(FORMULA) '(FORMULA) 'NIL 'FORMULA
                       'RL_QSAT* 'RLQSAT)) 
(PUT 'RL_*QSAT 'NUMBER-OF-ARGS 1) 
(DE RL_*QSAT (FORMULA) (APPLY 'RL_QSAT (LIST FORMULA))) 
(FLUID '(RL_QSAT*)) 
(SETQ RL_SERVL* (CONS 'RL_QSAT* RL_SERVL*)) 
(PUT 'RL_QSAT 'RL_SUPPORT 'RL_SMSERVICE) 
(SETQ RL_SERVICES* (CONS 'RL_QSAT RL_SERVICES*)) 
(PUT 'RL_QSAT 'NUMBER-OF-ARGS 1) 
(DE RL_QSAT (FORMULA) (APPLY RL_QSAT* (LIST FORMULA))) 
(PUT 'RLQSATDIMACS 'RTYPEFN 'RTYPEPART) 
(PUT 'RLQSATDIMACS 'RL_SUPPORT 'RL_AMSERVICE) 
(PUT 'RLQSATDIMACS 'RL_SMSERVICE 'RL_QSATDIMACS) 
(PUT 'RLQSATDIMACS 'NAMES '(FILE)) 
(PUT 'RLQSATDIMACS 'INTYPES '("String")) 
(PUT 'RLQSATDIMACS 'DEFAULTS 'NIL) 
(PUT 'RLQSATDIMACS 'OUTTYPE "Formula") 
(PUT 'RLQSATDIMACS 'DESCRIPTION
     "apply parametric quantified SAT to DIMACS file") 
(PUT 'RLQSATDIMACS 'DOCS '("file in DIMACS format")) 
(PUT 'RL_QSATDIMACS 'RL_AMSERVICE 'RLQSATDIMACS) 
(PUT 'RLQSATDIMACS 'PSOPFN 'RL_QSATDIMACS$) 
(PUT 'RL_QSATDIMACS$ 'CLEANUPFN 'RL_CLEANUP) 
(PUT 'RL_QSATDIMACS$ 'NUMBER-OF-ARGS 1) 
(DE RL_QSATDIMACS$ (U)
    (RL_SERVICEWRAPPER 'RL_*QSATDIMACS U '(FILE) '(STRING) 'NIL 'FORMULA
                       'RL_QSATDIMACS* 'RLQSATDIMACS)) 
(PUT 'RL_*QSATDIMACS 'NUMBER-OF-ARGS 1) 
(DE RL_*QSATDIMACS (FILE) (APPLY 'RL_QSATDIMACS (LIST FILE))) 
(FLUID '(RL_QSATDIMACS*)) 
(SETQ RL_SERVL* (CONS 'RL_QSATDIMACS* RL_SERVL*)) 
(PUT 'RL_QSATDIMACS 'RL_SUPPORT 'RL_SMSERVICE) 
(SETQ RL_SERVICES* (CONS 'RL_QSATDIMACS RL_SERVICES*)) 
(PUT 'RL_QSATDIMACS 'NUMBER-OF-ARGS 1) 
(DE RL_QSATDIMACS (FILE) (APPLY RL_QSATDIMACS* (LIST FILE))) 
(PUT 'RLQSATOPTIONS 'RTYPEFN 'RTYPEPART) 
(PUT 'RLQSATOPTIONS 'RL_SUPPORT 'RL_AMSERVICE) 
(PUT 'RLQSATOPTIONS 'RL_SMSERVICE 'RL_QSATOPTIONS) 
(PUT 'RLQSATOPTIONS 'NAMES '(OPTIONS)) 
(PUT 'RLQSATOPTIONS 'INTYPES
     '("List5(Enum(zmom,activity,dlcs),Integer,Integer,Integer,Integer)")) 
(PUT 'RLQSATOPTIONS 'DEFAULTS 'NIL) 
(PUT 'RLQSATOPTIONS 'OUTTYPE
     "List5(Enum(zmom,activity,dlcs),Integer,Integer,Integer,Integer)") 
(PUT 'RLQSATOPTIONS 'DESCRIPTION "parametric quantified SAT set options") 
(PUT 'RLQSATOPTIONS 'DOCS
     '("list of options: branching heuristc, restart value, first value to be set, increase factor for restarts, bound for clause deletion")) 
(PUT 'RL_QSATOPTIONS 'RL_AMSERVICE 'RLQSATOPTIONS) 
(PUT 'RLQSATOPTIONS 'PSOPFN 'RL_QSATOPTIONS$) 
(PUT 'RL_QSATOPTIONS$ 'CLEANUPFN 'RL_CLEANUP) 
(PUT 'RL_QSATOPTIONS$ 'NUMBER-OF-ARGS 1) 
(DE RL_QSATOPTIONS$ (U)
    (RL_SERVICEWRAPPER 'RL_*QSATOPTIONS U '(OPTIONS)
                       '((LIST5 (ENUM ZMOM ACTIVITY DLCS) INTEGER INTEGER
                          INTEGER INTEGER))
                       'NIL
                       '(LIST5 (ENUM ZMOM ACTIVITY DLCS) INTEGER INTEGER
                         INTEGER INTEGER)
                       'RL_QSATOPTIONS* 'RLQSATOPTIONS)) 
(PUT 'RL_*QSATOPTIONS 'NUMBER-OF-ARGS 1) 
(DE RL_*QSATOPTIONS (OPTIONS) (APPLY 'RL_QSATOPTIONS (LIST OPTIONS))) 
(FLUID '(RL_QSATOPTIONS*)) 
(SETQ RL_SERVL* (CONS 'RL_QSATOPTIONS* RL_SERVL*)) 
(PUT 'RL_QSATOPTIONS 'RL_SUPPORT 'RL_SMSERVICE) 
(SETQ RL_SERVICES* (CONS 'RL_QSATOPTIONS RL_SERVICES*)) 
(PUT 'RL_QSATOPTIONS 'NUMBER-OF-ARGS 1) 
(DE RL_QSATOPTIONS (OPTIONS) (APPLY RL_QSATOPTIONS* (LIST OPTIONS))) 
(PUT 'RLQUINE 'RTYPEFN 'RTYPEPART) 
(PUT 'RLQUINE 'RL_SUPPORT 'RL_AMSERVICE) 
(PUT 'RLQUINE 'RL_SMSERVICE 'RL_QUINE) 
(PUT 'RLQUINE 'NAMES '(FORMULA)) 
(PUT 'RLQUINE 'INTYPES '("Formula")) 
(PUT 'RLQUINE 'DEFAULTS 'NIL) 
(PUT 'RLQUINE 'OUTTYPE "Formula") 
(PUT 'RLQUINE 'DESCRIPTION "Boolean normal form simplification following Quine") 
(PUT 'RLQUINE 'DOCS '("input formula in CNF or DNF")) 
(PUT 'RL_QUINE 'RL_AMSERVICE 'RLQUINE) 
(PUT 'RLQUINE 'PSOPFN 'RL_QUINE$) 
(PUT 'RL_QUINE$ 'CLEANUPFN 'RL_CLEANUP) 
(PUT 'RL_QUINE$ 'NUMBER-OF-ARGS 1) 
(DE RL_QUINE$ (U)
    (RL_SERVICEWRAPPER 'RL_*QUINE U '(FORMULA) '(FORMULA) 'NIL 'FORMULA
                       'RL_QUINE* 'RLQUINE)) 
(PUT 'RL_*QUINE 'NUMBER-OF-ARGS 1) 
(DE RL_*QUINE (FORMULA) (APPLY 'RL_QUINE (LIST FORMULA))) 
(FLUID '(RL_QUINE*)) 
(SETQ RL_SERVL* (CONS 'RL_QUINE* RL_SERVL*)) 
(PUT 'RL_QUINE 'RL_SUPPORT 'RL_SMSERVICE) 
(SETQ RL_SERVICES* (CONS 'RL_QUINE RL_SERVICES*)) 
(PUT 'RL_QUINE 'NUMBER-OF-ARGS 1) 
(DE RL_QUINE (FORMULA) (APPLY RL_QUINE* (LIST FORMULA))) 
(PUT 'RLQVARL 'RTYPEFN 'RTYPEPART) 
(PUT 'RLQVARL 'RL_SUPPORT 'RL_AMSERVICE) 
(PUT 'RLQVARL 'RL_SMSERVICE 'RL_QVARL) 
(PUT 'RLQVARL 'NAMES '(FORMULA)) 
(PUT 'RLQVARL 'INTYPES '("Formula")) 
(PUT 'RLQVARL 'DEFAULTS 'NIL) 
(PUT 'RLQVARL 'OUTTYPE "List(Variable)") 
(PUT 'RLQVARL 'DESCRIPTION
     "list of variables that are arguments of quantifier symbols") 
(PUT 'RLQVARL 'DOCS '("first-order input formula")) 
(PUT 'RL_QVARL 'RL_AMSERVICE 'RLQVARL) 
(PUT 'RLQVARL 'PSOPFN 'RL_QVARL$) 
(PUT 'RL_QVARL$ 'CLEANUPFN 'RL_CLEANUP) 
(PUT 'RL_QVARL$ 'NUMBER-OF-ARGS 1) 
(DE RL_QVARL$ (U)
    (RL_SERVICEWRAPPER 'RL_*QVARL U '(FORMULA) '(FORMULA) 'NIL '(LIST VARIABLE)
                       'RL_QVARL* 'RLQVARL)) 
(PUT 'RL_*QVARL 'NUMBER-OF-ARGS 1) 
(DE RL_*QVARL (FORMULA) (APPLY 'RL_QVARL (LIST FORMULA))) 
(FLUID '(RL_QVARL*)) 
(SETQ RL_SERVL* (CONS 'RL_QVARL* RL_SERVL*)) 
(PUT 'RL_QVARL 'RL_SUPPORT 'RL_SMSERVICE) 
(SETQ RL_SERVICES* (CONS 'RL_QVARL RL_SERVICES*)) 
(PUT 'RL_QVARL 'NUMBER-OF-ARGS 1) 
(DE RL_QVARL (FORMULA) (APPLY RL_QVARL* (LIST FORMULA))) 
(PUT 'RLREADDIMACS 'RTYPEFN 'RTYPEPART) 
(PUT 'RLREADDIMACS 'RL_SUPPORT 'RL_AMSERVICE) 
(PUT 'RLREADDIMACS 'RL_SMSERVICE 'RL_READDIMACS) 
(PUT 'RLREADDIMACS 'NAMES '(FILE)) 
(PUT 'RLREADDIMACS 'INTYPES '("String")) 
(PUT 'RLREADDIMACS 'DEFAULTS 'NIL) 
(PUT 'RLREADDIMACS 'OUTTYPE "Formula") 
(PUT 'RLREADDIMACS 'DESCRIPTION "read DIMACS file into a first-order formula") 
(PUT 'RLREADDIMACS 'DOCS '("file in DIMACS format")) 
(PUT 'RL_READDIMACS 'RL_AMSERVICE 'RLREADDIMACS) 
(PUT 'RLREADDIMACS 'PSOPFN 'RL_READDIMACS$) 
(PUT 'RL_READDIMACS$ 'CLEANUPFN 'RL_CLEANUP) 
(PUT 'RL_READDIMACS$ 'NUMBER-OF-ARGS 1) 
(DE RL_READDIMACS$ (U)
    (RL_SERVICEWRAPPER 'RL_*READDIMACS U '(FILE) '(STRING) 'NIL 'FORMULA
                       'RL_READDIMACS* 'RLREADDIMACS)) 
(PUT 'RL_*READDIMACS 'NUMBER-OF-ARGS 1) 
(DE RL_*READDIMACS (FILE) (APPLY 'RL_READDIMACS (LIST FILE))) 
(FLUID '(RL_READDIMACS*)) 
(SETQ RL_SERVL* (CONS 'RL_READDIMACS* RL_SERVL*)) 
(PUT 'RL_READDIMACS 'RL_SUPPORT 'RL_SMSERVICE) 
(SETQ RL_SERVICES* (CONS 'RL_READDIMACS RL_SERVICES*)) 
(PUT 'RL_READDIMACS 'NUMBER-OF-ARGS 1) 
(DE RL_READDIMACS (FILE) (APPLY RL_READDIMACS* (LIST FILE))) 
(PUT 'RLRESOLVE 'RTYPEFN 'RTYPEPART) 
(PUT 'RLRESOLVE 'RL_SUPPORT 'RL_AMSERVICE) 
(PUT 'RLRESOLVE 'RL_SMSERVICE 'RL_RESOLVE) 
(PUT 'RLRESOLVE 'NAMES '(FORMULA)) 
(PUT 'RLRESOLVE 'INTYPES '("Formula")) 
(PUT 'RLRESOLVE 'DEFAULTS 'NIL) 
(PUT 'RLRESOLVE 'OUTTYPE "Formula") 
(PUT 'RLRESOLVE 'DESCRIPTION
     "resolve non-standard symbols (min, max, abs) in formulas") 
(PUT 'RLRESOLVE 'DOCS
     '("first-order input formula with additional functions/relations")) 
(PUT 'RL_RESOLVE 'RL_AMSERVICE 'RLRESOLVE) 
(PUT 'RLRESOLVE 'PSOPFN 'RL_RESOLVE$) 
(PUT 'RL_RESOLVE$ 'CLEANUPFN 'RL_CLEANUP) 
(PUT 'RL_RESOLVE$ 'NUMBER-OF-ARGS 1) 
(DE RL_RESOLVE$ (U)
    (RL_SERVICEWRAPPER 'RL_*RESOLVE U '(FORMULA) '(FORMULA) 'NIL 'FORMULA
                       'RL_RESOLVE* 'RLRESOLVE)) 
(PUT 'RL_*RESOLVE 'NUMBER-OF-ARGS 1) 
(DE RL_*RESOLVE (FORMULA) (APPLY 'RL_RESOLVE (LIST FORMULA))) 
(FLUID '(RL_RESOLVE*)) 
(SETQ RL_SERVL* (CONS 'RL_RESOLVE* RL_SERVL*)) 
(PUT 'RL_RESOLVE 'RL_SUPPORT 'RL_SMSERVICE) 
(SETQ RL_SERVICES* (CONS 'RL_RESOLVE RL_SERVICES*)) 
(PUT 'RL_RESOLVE 'NUMBER-OF-ARGS 1) 
(DE RL_RESOLVE (FORMULA) (APPLY RL_RESOLVE* (LIST FORMULA))) 
(PUT 'RLRNF 'RTYPEFN 'RTYPEPART) 
(PUT 'RLRNF 'RL_SUPPORT 'RL_AMSERVICE) 
(PUT 'RLRNF 'RL_SMSERVICE 'RL_RNF) 
(PUT 'RLRNF 'NAMES '(FORMULA)) 
(PUT 'RLRNF 'INTYPES '("Formula")) 
(PUT 'RLRNF 'DEFAULTS 'NIL) 
(PUT 'RLRNF 'OUTTYPE "Formula") 
(PUT 'RLRNF 'DESCRIPTION "refined normal form (domain TERMS only)") 
(PUT 'RLRNF 'DOCS '("first-order input formula")) 
(PUT 'RL_RNF 'RL_AMSERVICE 'RLRNF) 
(PUT 'RLRNF 'PSOPFN 'RL_RNF$) 
(PUT 'RL_RNF$ 'CLEANUPFN 'RL_CLEANUP) 
(PUT 'RL_RNF$ 'NUMBER-OF-ARGS 1) 
(DE RL_RNF$ (U)
    (RL_SERVICEWRAPPER 'RL_*RNF U '(FORMULA) '(FORMULA) 'NIL 'FORMULA 'RL_RNF*
                       'RLRNF)) 
(PUT 'RL_*RNF 'NUMBER-OF-ARGS 1) 
(DE RL_*RNF (FORMULA) (APPLY 'RL_RNF (LIST FORMULA))) 
(FLUID '(RL_RNF*)) 
(SETQ RL_SERVL* (CONS 'RL_RNF* RL_SERVL*)) 
(PUT 'RL_RNF 'RL_SUPPORT 'RL_SMSERVICE) 
(SETQ RL_SERVICES* (CONS 'RL_RNF RL_SERVICES*)) 
(PUT 'RL_RNF 'NUMBER-OF-ARGS 1) 
(DE RL_RNF (FORMULA) (APPLY RL_RNF* (LIST FORMULA))) 
(PUT 'RLSAT2POL 'RTYPEFN 'RTYPEPART) 
(PUT 'RLSAT2POL 'RL_SUPPORT 'RL_AMSERVICE) 
(PUT 'RLSAT2POL 'RL_SMSERVICE 'RL_SAT2POL) 
(PUT 'RLSAT2POL 'NAMES '(FORMULA)) 
(PUT 'RLSAT2POL 'INTYPES '("Formula")) 
(PUT 'RLSAT2POL 'DEFAULTS 'NIL) 
(PUT 'RLSAT2POL 'OUTTYPE "Term") 
(PUT 'RLSAT2POL 'DESCRIPTION "encode satisfiability into polynomial") 
(PUT 'RLSAT2POL 'DOCS '("quantifier-free input formula")) 
(PUT 'RL_SAT2POL 'RL_AMSERVICE 'RLSAT2POL) 
(PUT 'RLSAT2POL 'PSOPFN 'RL_SAT2POL$) 
(PUT 'RL_SAT2POL$ 'CLEANUPFN 'RL_CLEANUP) 
(PUT 'RL_SAT2POL$ 'NUMBER-OF-ARGS 1) 
(DE RL_SAT2POL$ (U)
    (RL_SERVICEWRAPPER 'RL_*SAT2POL U '(FORMULA) '(FORMULA) 'NIL 'TERM
                       'RL_SAT2POL* 'RLSAT2POL)) 
(PUT 'RL_*SAT2POL 'NUMBER-OF-ARGS 1) 
(DE RL_*SAT2POL (FORMULA) (APPLY 'RL_SAT2POL (LIST FORMULA))) 
(FLUID '(RL_SAT2POL*)) 
(SETQ RL_SERVL* (CONS 'RL_SAT2POL* RL_SERVL*)) 
(PUT 'RL_SAT2POL 'RL_SUPPORT 'RL_SMSERVICE) 
(SETQ RL_SERVICES* (CONS 'RL_SAT2POL RL_SERVICES*)) 
(PUT 'RL_SAT2POL 'NUMBER-OF-ARGS 1) 
(DE RL_SAT2POL (FORMULA) (APPLY RL_SAT2POL* (LIST FORMULA))) 
(PUT 'RLSIGN 'RTYPEFN 'RTYPEPART) 
(PUT 'RLSIGN 'RL_SUPPORT 'RL_AMSERVICE) 
(PUT 'RLSIGN 'RL_SMSERVICE 'RL_SIGN) 
(PUT 'RLSIGN 'NAMES '(FORMULA)) 
(PUT 'RLSIGN 'INTYPES '("Formula")) 
(PUT 'RLSIGN 'DEFAULTS 'NIL) 
(PUT 'RLSIGN 'OUTTYPE "Formula") 
(PUT 'RLSIGN 'DESCRIPTION
     "replace all left hand sides of atoms with their sign") 
(PUT 'RLSIGN 'DOCS '("first-order input formula, typically variable-free")) 
(PUT 'RL_SIGN 'RL_AMSERVICE 'RLSIGN) 
(PUT 'RLSIGN 'PSOPFN 'RL_SIGN$) 
(PUT 'RL_SIGN$ 'CLEANUPFN 'RL_CLEANUP) 
(PUT 'RL_SIGN$ 'NUMBER-OF-ARGS 1) 
(DE RL_SIGN$ (U)
    (RL_SERVICEWRAPPER 'RL_*SIGN U '(FORMULA) '(FORMULA) 'NIL 'FORMULA
                       'RL_SIGN* 'RLSIGN)) 
(PUT 'RL_*SIGN 'NUMBER-OF-ARGS 1) 
(DE RL_*SIGN (FORMULA) (APPLY 'RL_SIGN (LIST FORMULA))) 
(FLUID '(RL_SIGN*)) 
(SETQ RL_SERVL* (CONS 'RL_SIGN* RL_SERVL*)) 
(PUT 'RL_SIGN 'RL_SUPPORT 'RL_SMSERVICE) 
(SETQ RL_SERVICES* (CONS 'RL_SIGN RL_SERVICES*)) 
(PUT 'RL_SIGN 'NUMBER-OF-ARGS 1) 
(DE RL_SIGN (FORMULA) (APPLY RL_SIGN* (LIST FORMULA))) 
(PUT 'RLSIMPL 'RTYPEFN 'RTYPEPART) 
(PUT 'RLSIMPL 'RL_SUPPORT 'RL_AMSERVICE) 
(PUT 'RLSIMPL 'RL_SMSERVICE 'RL_SIMPL) 
(PUT 'RLSIMPL 'NAMES
     '(FORMULA ASSUME DEPTH SIATADV SIEXPL SIEXPLA SIFAC SIFACO SIPD SIPO SIPW
       SITSQSPL)) 
(PUT 'RLSIMPL 'INTYPES
     '("Formula" "List(Atom)" "Integer" "Switch" "Switch" "Switch" "Switch"
       "Switch" "Switch" "Switch" "Switch" "Switch")) 
(PUT 'RLSIMPL 'DEFAULTS
     '((ASSUME LIST) (DEPTH MINUS 1) (SIATADV . *RLSIATADV)
       (SIEXPL . *RLSIEXPL) (SIEXPLA . *RLSIEXPLA) (SIFAC . *RLSIFAC)
       (SIFACO . *RLSIFACO) (SIPD . *RLSIPD) (SIPO . *RLSIPO) (SIPW . *RLSIPW)
       (SITSQSPL . *RLSITSQSPL))) 
(PUT 'RLSIMPL 'OUTTYPE "Formula") 
(PUT 'RLSIMPL 'DESCRIPTION "standard simplifier") 
(PUT 'RLSIMPL 'DOCS
     '("first-order input formula" "atomic input assumptions"
       "maximal recursion depth"
       "main switch for advanced simplifications of atomic formulas"
       "split f*g=0 and f*g<>0 within dis- and conjunctions, resp."
       "generally split f*g=0 and f*g<>0"
       "factorize left hand sides equations and inequations"
       "factorize left hand sides of inequalities"
       "degree parity decompositon of left hand sides"
       "prefer <, <=, >, >= over =, <>" "prefer <=, >= over <, >"
       "split trivial square sums into several atomic formulas")) 
(PUT 'RL_SIMPL 'RL_AMSERVICE 'RLSIMPL) 
(PUT 'RLSIMPL 'PSOPFN 'RL_SIMPL$) 
(PUT 'RL_SIMPL$ 'CLEANUPFN 'RL_CLEANUP) 
(PUT 'RL_SIMPL$ 'NUMBER-OF-ARGS 1) 
(DE RL_SIMPL$ (U)
    (RL_SERVICEWRAPPER 'RL_*SIMPL U
                       '(FORMULA ASSUME DEPTH SIATADV SIEXPL SIEXPLA SIFAC
                         SIFACO SIPD SIPO SIPW SITSQSPL)
                       '(FORMULA (LIST ATOM) INTEGER SWITCH SWITCH SWITCH
                         SWITCH SWITCH SWITCH SWITCH SWITCH SWITCH)
                       '((ASSUME LIST) (DEPTH MINUS 1) (SIATADV . *RLSIATADV)
                         (SIEXPL . *RLSIEXPL) (SIEXPLA . *RLSIEXPLA)
                         (SIFAC . *RLSIFAC) (SIFACO . *RLSIFACO)
                         (SIPD . *RLSIPD) (SIPO . *RLSIPO) (SIPW . *RLSIPW)
                         (SITSQSPL . *RLSITSQSPL))
                       'FORMULA 'RL_SIMPL* 'RLSIMPL)) 
(PUT 'RL_*SIMPL 'NUMBER-OF-ARGS 12) 
(DE RL_*SIMPL
    (FORMULA ASSUME DEPTH *RLSIATADV *RLSIEXPL *RLSIEXPLA *RLSIFAC *RLSIFACO
     *RLSIPD *RLSIPO *RLSIPW *RLSITSQSPL)
    (APPLY 'RL_SIMPL (LIST FORMULA ASSUME DEPTH))) 
(FLUID '(RL_SIMPL*)) 
(SETQ RL_SERVL* (CONS 'RL_SIMPL* RL_SERVL*)) 
(PUT 'RL_SIMPL 'RL_SUPPORT 'RL_SMSERVICE) 
(SETQ RL_SERVICES* (CONS 'RL_SIMPL RL_SERVICES*)) 
(PUT 'RL_SIMPL 'NUMBER-OF-ARGS 3) 
(DE RL_SIMPL (FORMULA ASSUME DEPTH)
    (APPLY RL_SIMPL* (LIST FORMULA ASSUME DEPTH))) 
(PUT 'RLSIMPLBASIC 'RTYPEFN 'RTYPEPART) 
(PUT 'RLSIMPLBASIC 'RL_SUPPORT 'RL_AMSERVICE) 
(PUT 'RLSIMPLBASIC 'RL_SMSERVICE 'RL_SIMPLBASIC) 
(PUT 'RLSIMPLBASIC 'NAMES '(FORMULA ASSUME DEPTH)) 
(PUT 'RLSIMPLBASIC 'INTYPES '("Formula" "List(Atom)" "Integer")) 
(PUT 'RLSIMPLBASIC 'DEFAULTS '((ASSUME LIST) (DEPTH MINUS 1))) 
(PUT 'RLSIMPLBASIC 'OUTTYPE "Formula") 
(PUT 'RLSIMPLBASIC 'DESCRIPTION
     "basic standard simplifier without smart simplification") 
(PUT 'RLSIMPLBASIC 'DOCS
     '("first-order input formula" "atomic input assumptions (ignored)"
       "maximal recursion depth")) 
(PUT 'RL_SIMPLBASIC 'RL_AMSERVICE 'RLSIMPLBASIC) 
(PUT 'RLSIMPLBASIC 'PSOPFN 'RL_SIMPLBASIC$) 
(PUT 'RL_SIMPLBASIC$ 'CLEANUPFN 'RL_CLEANUP) 
(PUT 'RL_SIMPLBASIC$ 'NUMBER-OF-ARGS 1) 
(DE RL_SIMPLBASIC$ (U)
    (RL_SERVICEWRAPPER 'RL_*SIMPLBASIC U '(FORMULA ASSUME DEPTH)
                       '(FORMULA (LIST ATOM) INTEGER)
                       '((ASSUME LIST) (DEPTH MINUS 1)) 'FORMULA
                       'RL_SIMPLBASIC* 'RLSIMPLBASIC)) 
(PUT 'RL_*SIMPLBASIC 'NUMBER-OF-ARGS 3) 
(DE RL_*SIMPLBASIC (FORMULA ASSUME DEPTH)
    (APPLY 'RL_SIMPLBASIC (LIST FORMULA ASSUME DEPTH))) 
(FLUID '(RL_SIMPLBASIC*)) 
(SETQ RL_SERVL* (CONS 'RL_SIMPLBASIC* RL_SERVL*)) 
(PUT 'RL_SIMPLBASIC 'RL_SUPPORT 'RL_SMSERVICE) 
(SETQ RL_SERVICES* (CONS 'RL_SIMPLBASIC RL_SERVICES*)) 
(PUT 'RL_SIMPLBASIC 'NUMBER-OF-ARGS 3) 
(DE RL_SIMPLBASIC (FORMULA ASSUME DEPTH)
    (APPLY RL_SIMPLBASIC* (LIST FORMULA ASSUME DEPTH))) 
(PUT 'RLSLFQ 'RTYPEFN 'RTYPEPART) 
(PUT 'RLSLFQ 'RL_SUPPORT 'RL_AMSERVICE) 
(PUT 'RLSLFQ 'RL_SMSERVICE 'RL_SLFQ) 
(PUT 'RLSLFQ 'NAMES '(FORMULA N L VERBOSE)) 
(PUT 'RLSLFQ 'INTYPES '("Formula" "Integer" "Integer" "Switch")) 
(PUT 'RLSLFQ 'DEFAULTS '((N . 100) (L . 200) (VERBOSE . *RLVERBOSE))) 
(PUT 'RLSLFQ 'OUTTYPE "Formula") 
(PUT 'RLSLFQ 'DESCRIPTION "interface to external Qepcad-based simplifier slfq") 
(PUT 'RLSLFQ 'DOCS
     '("first-order input formula" "allocate N * 10^6 cells"
       "use prime list of size L * 10^3"
       "print information on progress of computation")) 
(PUT 'RL_SLFQ 'RL_AMSERVICE 'RLSLFQ) 
(PUT 'RLSLFQ 'PSOPFN 'RL_SLFQ$) 
(PUT 'RL_SLFQ$ 'CLEANUPFN 'RL_CLEANUP) 
(PUT 'RL_SLFQ$ 'NUMBER-OF-ARGS 1) 
(DE RL_SLFQ$ (U)
    (RL_SERVICEWRAPPER 'RL_*SLFQ U '(FORMULA N L VERBOSE)
                       '(FORMULA INTEGER INTEGER SWITCH)
                       '((N . 100) (L . 200) (VERBOSE . *RLVERBOSE)) 'FORMULA
                       'RL_SLFQ* 'RLSLFQ)) 
(PUT 'RL_*SLFQ 'NUMBER-OF-ARGS 4) 
(DE RL_*SLFQ (FORMULA N L *RLVERBOSE) (APPLY 'RL_SLFQ (LIST FORMULA N L))) 
(FLUID '(RL_SLFQ*)) 
(SETQ RL_SERVL* (CONS 'RL_SLFQ* RL_SERVL*)) 
(PUT 'RL_SLFQ 'RL_SUPPORT 'RL_SMSERVICE) 
(SETQ RL_SERVICES* (CONS 'RL_SLFQ RL_SERVICES*)) 
(PUT 'RL_SLFQ 'NUMBER-OF-ARGS 3) 
(DE RL_SLFQ (FORMULA N L) (APPLY RL_SLFQ* (LIST FORMULA N L))) 
(PUT 'RLSMT2READ 'RTYPEFN 'RTYPEPART) 
(PUT 'RLSMT2READ 'RL_SUPPORT 'RL_AMSERVICE) 
(PUT 'RLSMT2READ 'RL_SMSERVICE 'RL_SMT2READ) 
(PUT 'RLSMT2READ 'NAMES '(FILE)) 
(PUT 'RLSMT2READ 'INTYPES '("String")) 
(PUT 'RLSMT2READ 'DEFAULTS 'NIL) 
(PUT 'RLSMT2READ 'OUTTYPE "Formula") 
(PUT 'RLSMT2READ 'DESCRIPTION "read SMTLIB 2 input file into formula") 
(PUT 'RLSMT2READ 'DOCS '("SMTLIB 2 input file")) 
(PUT 'RL_SMT2READ 'RL_AMSERVICE 'RLSMT2READ) 
(PUT 'RLSMT2READ 'PSOPFN 'RL_SMT2READ$) 
(PUT 'RL_SMT2READ$ 'CLEANUPFN 'RL_CLEANUP) 
(PUT 'RL_SMT2READ$ 'NUMBER-OF-ARGS 1) 
(DE RL_SMT2READ$ (U)
    (RL_SERVICEWRAPPER 'RL_*SMT2READ U '(FILE) '(STRING) 'NIL 'FORMULA
                       'RL_SMT2READ* 'RLSMT2READ)) 
(PUT 'RL_*SMT2READ 'NUMBER-OF-ARGS 1) 
(DE RL_*SMT2READ (FILE) (APPLY 'RL_SMT2READ (LIST FILE))) 
(FLUID '(RL_SMT2READ*)) 
(SETQ RL_SERVL* (CONS 'RL_SMT2READ* RL_SERVL*)) 
(PUT 'RL_SMT2READ 'RL_SUPPORT 'RL_SMSERVICE) 
(SETQ RL_SERVICES* (CONS 'RL_SMT2READ RL_SERVICES*)) 
(PUT 'RL_SMT2READ 'NUMBER-OF-ARGS 1) 
(DE RL_SMT2READ (FILE) (APPLY RL_SMT2READ* (LIST FILE))) 
(PUT 'RLSMTQE 'RTYPEFN 'RTYPEPART) 
(PUT 'RLSMTQE 'RL_SUPPORT 'RL_AMSERVICE) 
(PUT 'RLSMTQE 'RL_SMSERVICE 'RL_SMTQE) 
(PUT 'RLSMTQE 'NAMES '(ASSERTIONS)) 
(PUT 'RLSMTQE 'INTYPES '("List(Formula)")) 
(PUT 'RLSMTQE 'DEFAULTS 'NIL) 
(PUT 'RLSMTQE 'OUTTYPE "Triplet(Formula,List(Any),List(Integer))") 
(PUT 'RLSMTQE 'DESCRIPTION "quantifier elimination as SMT theory solver") 
(PUT 'RLSMTQE 'DOCS '("assertions to be satisfied simultaneously")) 
(PUT 'RL_SMTQE 'RL_AMSERVICE 'RLSMTQE) 
(PUT 'RLSMTQE 'PSOPFN 'RL_SMTQE$) 
(PUT 'RL_SMTQE$ 'CLEANUPFN 'RL_CLEANUP) 
(PUT 'RL_SMTQE$ 'NUMBER-OF-ARGS 1) 
(DE RL_SMTQE$ (U)
    (RL_SERVICEWRAPPER 'RL_*SMTQE U '(ASSERTIONS) '((LIST FORMULA)) 'NIL
                       '(TRIPLET FORMULA (LIST ANY) (LIST INTEGER)) 'RL_SMTQE*
                       'RLSMTQE)) 
(PUT 'RL_*SMTQE 'NUMBER-OF-ARGS 1) 
(DE RL_*SMTQE (ASSERTIONS) (APPLY 'RL_SMTQE (LIST ASSERTIONS))) 
(FLUID '(RL_SMTQE*)) 
(SETQ RL_SERVL* (CONS 'RL_SMTQE* RL_SERVL*)) 
(PUT 'RL_SMTQE 'RL_SUPPORT 'RL_SMSERVICE) 
(SETQ RL_SERVICES* (CONS 'RL_SMTQE RL_SERVICES*)) 
(PUT 'RL_SMTQE 'NUMBER-OF-ARGS 1) 
(DE RL_SMTQE (ASSERTIONS) (APPLY RL_SMTQE* (LIST ASSERTIONS))) 
(PUT 'RLSTEX 'RTYPEFN 'RTYPEPART) 
(PUT 'RLSTEX 'RL_SUPPORT 'RL_AMSERVICE) 
(PUT 'RLSTEX 'RL_SMSERVICE 'RL_STEX) 
(PUT 'RLSTEX 'NAMES '(FORMULA)) 
(PUT 'RLSTEX 'INTYPES '("Formula")) 
(PUT 'RLSTEX 'DEFAULTS 'NIL) 
(PUT 'RLSTEX 'OUTTYPE "Formula") 
(PUT 'RLSTEX 'DESCRIPTION "stochastic experiment (domain Z only)") 
(PUT 'RLSTEX 'DOCS '("input formula")) 
(PUT 'RL_STEX 'RL_AMSERVICE 'RLSTEX) 
(PUT 'RLSTEX 'PSOPFN 'RL_STEX$) 
(PUT 'RL_STEX$ 'CLEANUPFN 'RL_CLEANUP) 
(PUT 'RL_STEX$ 'NUMBER-OF-ARGS 1) 
(DE RL_STEX$ (U)
    (RL_SERVICEWRAPPER 'RL_*STEX U '(FORMULA) '(FORMULA) 'NIL 'FORMULA
                       'RL_STEX* 'RLSTEX)) 
(PUT 'RL_*STEX 'NUMBER-OF-ARGS 1) 
(DE RL_*STEX (FORMULA) (APPLY 'RL_STEX (LIST FORMULA))) 
(FLUID '(RL_STEX*)) 
(SETQ RL_SERVL* (CONS 'RL_STEX* RL_SERVL*)) 
(PUT 'RL_STEX 'RL_SUPPORT 'RL_SMSERVICE) 
(SETQ RL_SERVICES* (CONS 'RL_STEX RL_SERVICES*)) 
(PUT 'RL_STEX 'NUMBER-OF-ARGS 1) 
(DE RL_STEX (FORMULA) (APPLY RL_STEX* (LIST FORMULA))) 
(PUT 'RLSTRUCT 'RTYPEFN 'RTYPEPART) 
(PUT 'RLSTRUCT 'RL_SUPPORT 'RL_AMSERVICE) 
(PUT 'RLSTRUCT 'RL_SMSERVICE 'RL_STRUCT) 
(PUT 'RLSTRUCT 'NAMES '(FORMULA FAC BASENAME)) 
(PUT 'RLSTRUCT 'INTYPES '("Formula" "Flag" "Variable")) 
(PUT 'RLSTRUCT 'DEFAULTS '((FAC . YES) (BASENAME . V))) 
(PUT 'RLSTRUCT 'OUTTYPE "Pair(Formula,List(Assignment(Term)))") 
(PUT 'RLSTRUCT 'DESCRIPTION "structural formula analysis") 
(PUT 'RLSTRUCT 'DOCS
     '("input formula" "factorize terms"
       "basename of newly introduced variables ")) 
(PUT 'RL_STRUCT 'RL_AMSERVICE 'RLSTRUCT) 
(PUT 'RLSTRUCT 'PSOPFN 'RL_STRUCT$) 
(PUT 'RL_STRUCT$ 'CLEANUPFN 'RL_CLEANUP) 
(PUT 'RL_STRUCT$ 'NUMBER-OF-ARGS 1) 
(DE RL_STRUCT$ (U)
    (RL_SERVICEWRAPPER 'RL_*STRUCT U '(FORMULA FAC BASENAME)
                       '(FORMULA FLAG VARIABLE) '((FAC . YES) (BASENAME . V))
                       '(PAIR FORMULA (LIST (ASSIGNMENT TERM))) 'RL_STRUCT*
                       'RLSTRUCT)) 
(PUT 'RL_*STRUCT 'NUMBER-OF-ARGS 3) 
(DE RL_*STRUCT (FORMULA FAC BASENAME)
    (APPLY 'RL_STRUCT (LIST FORMULA FAC BASENAME))) 
(FLUID '(RL_STRUCT*)) 
(SETQ RL_SERVL* (CONS 'RL_STRUCT* RL_SERVL*)) 
(PUT 'RL_STRUCT 'RL_SUPPORT 'RL_SMSERVICE) 
(SETQ RL_SERVICES* (CONS 'RL_STRUCT RL_SERVICES*)) 
(PUT 'RL_STRUCT 'NUMBER-OF-ARGS 3) 
(DE RL_STRUCT (FORMULA FAC BASENAME)
    (APPLY RL_STRUCT* (LIST FORMULA FAC BASENAME))) 
(PUT 'RLSYMBOLIFY 'RTYPEFN 'RTYPEPART) 
(PUT 'RLSYMBOLIFY 'RL_SUPPORT 'RL_AMSERVICE) 
(PUT 'RLSYMBOLIFY 'RL_SMSERVICE 'RL_SYMBOLIFY) 
(PUT 'RLSYMBOLIFY 'NAMES '(FORMULA)) 
(PUT 'RLSYMBOLIFY 'INTYPES '("Formula")) 
(PUT 'RLSYMBOLIFY 'DEFAULTS 'NIL) 
(PUT 'RLSYMBOLIFY 'OUTTYPE "Pair(Formula,List(Assignment(Integer)))") 
(PUT 'RLSYMBOLIFY 'DESCRIPTION "replace integer factors with symbolic names") 
(PUT 'RLSYMBOLIFY 'DOCS '("input formula")) 
(PUT 'RL_SYMBOLIFY 'RL_AMSERVICE 'RLSYMBOLIFY) 
(PUT 'RLSYMBOLIFY 'PSOPFN 'RL_SYMBOLIFY$) 
(PUT 'RL_SYMBOLIFY$ 'CLEANUPFN 'RL_CLEANUP) 
(PUT 'RL_SYMBOLIFY$ 'NUMBER-OF-ARGS 1) 
(DE RL_SYMBOLIFY$ (U)
    (RL_SERVICEWRAPPER 'RL_*SYMBOLIFY U '(FORMULA) '(FORMULA) 'NIL
                       '(PAIR FORMULA (LIST (ASSIGNMENT INTEGER)))
                       'RL_SYMBOLIFY* 'RLSYMBOLIFY)) 
(PUT 'RL_*SYMBOLIFY 'NUMBER-OF-ARGS 1) 
(DE RL_*SYMBOLIFY (FORMULA) (APPLY 'RL_SYMBOLIFY (LIST FORMULA))) 
(FLUID '(RL_SYMBOLIFY*)) 
(SETQ RL_SERVL* (CONS 'RL_SYMBOLIFY* RL_SERVL*)) 
(PUT 'RL_SYMBOLIFY 'RL_SUPPORT 'RL_SMSERVICE) 
(SETQ RL_SERVICES* (CONS 'RL_SYMBOLIFY RL_SERVICES*)) 
(PUT 'RL_SYMBOLIFY 'NUMBER-OF-ARGS 1) 
(DE RL_SYMBOLIFY (FORMULA) (APPLY RL_SYMBOLIFY* (LIST FORMULA))) 
(PUT 'RLTAB 'RTYPEFN 'RTYPEPART) 
(PUT 'RLTAB 'RL_SUPPORT 'RL_AMSERVICE) 
(PUT 'RLTAB 'RL_SMSERVICE 'RL_TAB) 
(PUT 'RLTAB 'NAMES '(FORMULA CASES ITERATE ITERATEB)) 
(PUT 'RLTAB 'INTYPES '("Formula" "List(Formula)" "Flag" "Flag")) 
(PUT 'RLTAB 'DEFAULTS '((CASES LIST) (ITERATE . YES) (ITERATEB . YES))) 
(PUT 'RLTAB 'OUTTYPE "Formula") 
(PUT 'RLTAB 'DESCRIPTION "tableau simplification") 
(PUT 'RLTAB 'DOCS
     '("input formula" "a finite case distinction, typically complete"
       "iterate tableau simplification as long as result gets smaller"
       "iterate on the single branches instead of the whole formula")) 
(PUT 'RL_TAB 'RL_AMSERVICE 'RLTAB) 
(PUT 'RLTAB 'PSOPFN 'RL_TAB$) 
(PUT 'RL_TAB$ 'CLEANUPFN 'RL_CLEANUP) 
(PUT 'RL_TAB$ 'NUMBER-OF-ARGS 1) 
(DE RL_TAB$ (U)
    (RL_SERVICEWRAPPER 'RL_*TAB U '(FORMULA CASES ITERATE ITERATEB)
                       '(FORMULA (LIST FORMULA) FLAG FLAG)
                       '((CASES LIST) (ITERATE . YES) (ITERATEB . YES))
                       'FORMULA 'RL_TAB* 'RLTAB)) 
(PUT 'RL_*TAB 'NUMBER-OF-ARGS 4) 
(DE RL_*TAB (FORMULA CASES ITERATE ITERATEB)
    (APPLY 'RL_TAB (LIST FORMULA CASES ITERATE ITERATEB))) 
(FLUID '(RL_TAB*)) 
(SETQ RL_SERVL* (CONS 'RL_TAB* RL_SERVL*)) 
(PUT 'RL_TAB 'RL_SUPPORT 'RL_SMSERVICE) 
(SETQ RL_SERVICES* (CONS 'RL_TAB RL_SERVICES*)) 
(PUT 'RL_TAB 'NUMBER-OF-ARGS 4) 
(DE RL_TAB (FORMULA CASES ITERATE ITERATEB)
    (APPLY RL_TAB* (LIST FORMULA CASES ITERATE ITERATEB))) 
(PUT 'RLATAB 'NUMBER-OF-ARGS 1) 
(FLAG '(RLATAB) 'OPFN) 
(PUT 'RLATAB 'DEFINED-ON-LINE '743) 
(PUT 'RLATAB 'DEFINED-IN-FILE 'REDLOG/RL/RLSERVICES.RED) 
(PUT 'RLATAB 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE RLATAB (FORMULA)
    (PROGN
     (AEVAL
      (LPRIM
       "rlatab(formula) is depricated - use rltab(formula, iterate=no) instead."))
     (AEVAL (LIST 'RLTAB FORMULA (LIST 'EQUAL 'ITERATE 'NO))))) 
(PUT 'RLITAB 'NUMBER-OF-ARGS 1) 
(FLAG '(RLITAB) 'OPFN) 
(PUT 'RLITAB 'DEFINED-ON-LINE '749) 
(PUT 'RLITAB 'DEFINED-IN-FILE 'REDLOG/RL/RLSERVICES.RED) 
(PUT 'RLITAB 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE RLITAB (FORMULA)
    (PROGN
     (AEVAL
      (LPRIM "rlitab(formula) is depricated - use rltab(formula) instead."))
     (AEVAL (LIST 'RLTAB FORMULA)))) 
(PUT 'RLTAN2 'RTYPEFN 'RTYPEPART) 
(PUT 'RLTAN2 'RL_SUPPORT 'RL_AMSERVICE) 
(PUT 'RLTAN2 'RL_SMSERVICE 'RL_TAN2) 
(PUT 'RLTAN2 'NAMES '(FORMULA)) 
(PUT 'RLTAN2 'INTYPES '("Formula")) 
(PUT 'RLTAN2 'DEFAULTS 'NIL) 
(PUT 'RLTAN2 'OUTTYPE "Formula") 
(PUT 'RLTAN2 'DESCRIPTION "tangent of half angle substitution") 
(PUT 'RLTAN2 'DOCS '("first-order input formula")) 
(PUT 'RL_TAN2 'RL_AMSERVICE 'RLTAN2) 
(PUT 'RLTAN2 'PSOPFN 'RL_TAN2$) 
(PUT 'RL_TAN2$ 'CLEANUPFN 'RL_CLEANUP) 
(PUT 'RL_TAN2$ 'NUMBER-OF-ARGS 1) 
(DE RL_TAN2$ (U)
    (RL_SERVICEWRAPPER 'RL_*TAN2 U '(FORMULA) '(FORMULA) 'NIL 'FORMULA
                       'RL_TAN2* 'RLTAN2)) 
(PUT 'RL_*TAN2 'NUMBER-OF-ARGS 1) 
(DE RL_*TAN2 (FORMULA) (APPLY 'RL_TAN2 (LIST FORMULA))) 
(FLUID '(RL_TAN2*)) 
(SETQ RL_SERVL* (CONS 'RL_TAN2* RL_SERVL*)) 
(PUT 'RL_TAN2 'RL_SUPPORT 'RL_SMSERVICE) 
(SETQ RL_SERVICES* (CONS 'RL_TAN2 RL_SERVICES*)) 
(PUT 'RL_TAN2 'NUMBER-OF-ARGS 1) 
(DE RL_TAN2 (FORMULA) (APPLY RL_TAN2* (LIST FORMULA))) 
(PUT 'RLTERML 'RTYPEFN 'RTYPEPART) 
(PUT 'RLTERML 'RL_SUPPORT 'RL_AMSERVICE) 
(PUT 'RLTERML 'RL_SMSERVICE 'RL_TERML) 
(PUT 'RLTERML 'NAMES '(FORMULA)) 
(PUT 'RLTERML 'INTYPES '("Formula")) 
(PUT 'RLTERML 'DEFAULTS 'NIL) 
(PUT 'RLTERML 'OUTTYPE "List(Term)") 
(PUT 'RLTERML 'DESCRIPTION "set of contained terms") 
(PUT 'RLTERML 'DOCS '("first-order input formula")) 
(PUT 'RL_TERML 'RL_AMSERVICE 'RLTERML) 
(PUT 'RLTERML 'PSOPFN 'RL_TERML$) 
(PUT 'RL_TERML$ 'CLEANUPFN 'RL_CLEANUP) 
(PUT 'RL_TERML$ 'NUMBER-OF-ARGS 1) 
(DE RL_TERML$ (U)
    (RL_SERVICEWRAPPER 'RL_*TERML U '(FORMULA) '(FORMULA) 'NIL '(LIST TERM)
                       'RL_TERML* 'RLTERML)) 
(PUT 'RL_*TERML 'NUMBER-OF-ARGS 1) 
(DE RL_*TERML (FORMULA) (APPLY 'RL_TERML (LIST FORMULA))) 
(FLUID '(RL_TERML*)) 
(SETQ RL_SERVL* (CONS 'RL_TERML* RL_SERVL*)) 
(PUT 'RL_TERML 'RL_SUPPORT 'RL_SMSERVICE) 
(SETQ RL_SERVICES* (CONS 'RL_TERML RL_SERVICES*)) 
(PUT 'RL_TERML 'NUMBER-OF-ARGS 1) 
(DE RL_TERML (FORMULA) (APPLY RL_TERML* (LIST FORMULA))) 
(PUT 'RLTERMML 'RTYPEFN 'RTYPEPART) 
(PUT 'RLTERMML 'RL_SUPPORT 'RL_AMSERVICE) 
(PUT 'RLTERMML 'RL_SMSERVICE 'RL_TERMML) 
(PUT 'RLTERMML 'NAMES '(FORMULA)) 
(PUT 'RLTERMML 'INTYPES '("Formula")) 
(PUT 'RLTERMML 'DEFAULTS 'NIL) 
(PUT 'RLTERMML 'OUTTYPE "MList(Term)") 
(PUT 'RLTERMML 'DESCRIPTION
     " list of contained terms with numbers of occurrences") 
(PUT 'RLTERMML 'DOCS '("first-order input formula")) 
(PUT 'RL_TERMML 'RL_AMSERVICE 'RLTERMML) 
(PUT 'RLTERMML 'PSOPFN 'RL_TERMML$) 
(PUT 'RL_TERMML$ 'CLEANUPFN 'RL_CLEANUP) 
(PUT 'RL_TERMML$ 'NUMBER-OF-ARGS 1) 
(DE RL_TERMML$ (U)
    (RL_SERVICEWRAPPER 'RL_*TERMML U '(FORMULA) '(FORMULA) 'NIL '(MLIST TERM)
                       'RL_TERMML* 'RLTERMML)) 
(PUT 'RL_*TERMML 'NUMBER-OF-ARGS 1) 
(DE RL_*TERMML (FORMULA) (APPLY 'RL_TERMML (LIST FORMULA))) 
(FLUID '(RL_TERMML*)) 
(SETQ RL_SERVL* (CONS 'RL_TERMML* RL_SERVL*)) 
(PUT 'RL_TERMML 'RL_SUPPORT 'RL_SMSERVICE) 
(SETQ RL_SERVICES* (CONS 'RL_TERMML RL_SERVICES*)) 
(PUT 'RL_TERMML 'NUMBER-OF-ARGS 1) 
(DE RL_TERMML (FORMULA) (APPLY RL_TERMML* (LIST FORMULA))) 
(PUT 'RLTHSIMPL 'RTYPEFN 'RTYPEPART) 
(PUT 'RLTHSIMPL 'RL_SUPPORT 'RL_AMSERVICE) 
(PUT 'RLTHSIMPL 'RL_SMSERVICE 'RL_THSIMPL) 
(PUT 'RLTHSIMPL 'NAMES '(THEORY)) 
(PUT 'RLTHSIMPL 'INTYPES '("List(Atom)")) 
(PUT 'RLTHSIMPL 'DEFAULTS 'NIL) 
(PUT 'RLTHSIMPL 'OUTTYPE "List(Atom)") 
(PUT 'RLTHSIMPL 'DESCRIPTION "theory simplifer") 
(PUT 'RLTHSIMPL 'DOCS '("a list of atoms")) 
(PUT 'RL_THSIMPL 'RL_AMSERVICE 'RLTHSIMPL) 
(PUT 'RLTHSIMPL 'PSOPFN 'RL_THSIMPL$) 
(PUT 'RL_THSIMPL$ 'CLEANUPFN 'RL_CLEANUP) 
(PUT 'RL_THSIMPL$ 'NUMBER-OF-ARGS 1) 
(DE RL_THSIMPL$ (U)
    (RL_SERVICEWRAPPER 'RL_*THSIMPL U '(THEORY) '((LIST ATOM)) 'NIL
                       '(LIST ATOM) 'RL_THSIMPL* 'RLTHSIMPL)) 
(PUT 'RL_*THSIMPL 'NUMBER-OF-ARGS 1) 
(DE RL_*THSIMPL (THEORY) (APPLY 'RL_THSIMPL (LIST THEORY))) 
(FLUID '(RL_THSIMPL*)) 
(SETQ RL_SERVL* (CONS 'RL_THSIMPL* RL_SERVL*)) 
(PUT 'RL_THSIMPL 'RL_SUPPORT 'RL_SMSERVICE) 
(SETQ RL_SERVICES* (CONS 'RL_THSIMPL RL_SERVICES*)) 
(PUT 'RL_THSIMPL 'NUMBER-OF-ARGS 1) 
(DE RL_THSIMPL (THEORY) (APPLY RL_THSIMPL* (LIST THEORY))) 
(PUT 'RLTNF 'RTYPEFN 'RTYPEPART) 
(PUT 'RLTNF 'RL_SUPPORT 'RL_AMSERVICE) 
(PUT 'RLTNF 'RL_SMSERVICE 'RL_TNF) 
(PUT 'RLTNF 'NAMES '(FORMULA TERMS TNFT)) 
(PUT 'RLTNF 'INTYPES '("Formula" "List(Term)" "Switch")) 
(PUT 'RLTNF 'DEFAULTS '((TNFT . *RLTNFT))) 
(PUT 'RLTNF 'OUTTYPE "Formula") 
(PUT 'RLTNF 'DESCRIPTION "tree normal form") 
(PUT 'RLTNF 'DOCS
     '("first-order input formula" "terms for case distinction"
       "tree TNF in contrast to flat TNF")) 
(PUT 'RL_TNF 'RL_AMSERVICE 'RLTNF) 
(PUT 'RLTNF 'PSOPFN 'RL_TNF$) 
(PUT 'RL_TNF$ 'CLEANUPFN 'RL_CLEANUP) 
(PUT 'RL_TNF$ 'NUMBER-OF-ARGS 1) 
(DE RL_TNF$ (U)
    (RL_SERVICEWRAPPER 'RL_*TNF U '(FORMULA TERMS TNFT)
                       '(FORMULA (LIST TERM) SWITCH) '((TNFT . *RLTNFT))
                       'FORMULA 'RL_TNF* 'RLTNF)) 
(PUT 'RL_*TNF 'NUMBER-OF-ARGS 3) 
(DE RL_*TNF (FORMULA TERMS *RLTNFT) (APPLY 'RL_TNF (LIST FORMULA TERMS))) 
(FLUID '(RL_TNF*)) 
(SETQ RL_SERVL* (CONS 'RL_TNF* RL_SERVL*)) 
(PUT 'RL_TNF 'RL_SUPPORT 'RL_SMSERVICE) 
(SETQ RL_SERVICES* (CONS 'RL_TNF RL_SERVICES*)) 
(PUT 'RL_TNF 'NUMBER-OF-ARGS 2) 
(DE RL_TNF (FORMULA TERMS) (APPLY RL_TNF* (LIST FORMULA TERMS))) 
(PUT 'RLTROPSAT 'RTYPEFN 'RTYPEPART) 
(PUT 'RLTROPSAT 'RL_SUPPORT 'RL_AMSERVICE) 
(PUT 'RLTROPSAT 'RL_SMSERVICE 'RL_TROPSAT) 
(PUT 'RLTROPSAT 'NAMES '(FORMULA)) 
(PUT 'RLTROPSAT 'INTYPES '("Formula")) 
(PUT 'RLTROPSAT 'DEFAULTS 'NIL) 
(PUT 'RLTROPSAT 'OUTTYPE "Enum(sat,unsat,unknown)") 
(PUT 'RLTROPSAT 'DESCRIPTION "tropical satisfiability checking (experimental)") 
(PUT 'RLTROPSAT 'DOCS '("quantifier-free input formula")) 
(PUT 'RL_TROPSAT 'RL_AMSERVICE 'RLTROPSAT) 
(PUT 'RLTROPSAT 'PSOPFN 'RL_TROPSAT$) 
(PUT 'RL_TROPSAT$ 'CLEANUPFN 'RL_CLEANUP) 
(PUT 'RL_TROPSAT$ 'NUMBER-OF-ARGS 1) 
(DE RL_TROPSAT$ (U)
    (RL_SERVICEWRAPPER 'RL_*TROPSAT U '(FORMULA) '(FORMULA) 'NIL
                       '(ENUM SAT UNSAT UNKNOWN) 'RL_TROPSAT* 'RLTROPSAT)) 
(PUT 'RL_*TROPSAT 'NUMBER-OF-ARGS 1) 
(DE RL_*TROPSAT (FORMULA) (APPLY 'RL_TROPSAT (LIST FORMULA))) 
(FLUID '(RL_TROPSAT*)) 
(SETQ RL_SERVL* (CONS 'RL_TROPSAT* RL_SERVL*)) 
(PUT 'RL_TROPSAT 'RL_SUPPORT 'RL_SMSERVICE) 
(SETQ RL_SERVICES* (CONS 'RL_TROPSAT RL_SERVICES*)) 
(PUT 'RL_TROPSAT 'NUMBER-OF-ARGS 1) 
(DE RL_TROPSAT (FORMULA) (APPLY RL_TROPSAT* (LIST FORMULA))) 
(PUT 'RLPTROPSAT 'RTYPEFN 'RTYPEPART) 
(PUT 'RLPTROPSAT 'RL_SUPPORT 'RL_AMSERVICE) 
(PUT 'RLPTROPSAT 'RL_SMSERVICE 'RL_PTROPSAT) 
(PUT 'RLPTROPSAT 'NAMES '(FORMULA)) 
(PUT 'RLPTROPSAT 'INTYPES '("Formula")) 
(PUT 'RLPTROPSAT 'DEFAULTS 'NIL) 
(PUT 'RLPTROPSAT 'OUTTYPE "Enum(sat,unsat,unknown)") 
(PUT 'RLPTROPSAT 'DESCRIPTION
     "positive tropical satisfiability checking (experimental)") 
(PUT 'RLPTROPSAT 'DOCS '("quantifier-free input formula")) 
(PUT 'RL_PTROPSAT 'RL_AMSERVICE 'RLPTROPSAT) 
(PUT 'RLPTROPSAT 'PSOPFN 'RL_PTROPSAT$) 
(PUT 'RL_PTROPSAT$ 'CLEANUPFN 'RL_CLEANUP) 
(PUT 'RL_PTROPSAT$ 'NUMBER-OF-ARGS 1) 
(DE RL_PTROPSAT$ (U)
    (RL_SERVICEWRAPPER 'RL_*PTROPSAT U '(FORMULA) '(FORMULA) 'NIL
                       '(ENUM SAT UNSAT UNKNOWN) 'RL_PTROPSAT* 'RLPTROPSAT)) 
(PUT 'RL_*PTROPSAT 'NUMBER-OF-ARGS 1) 
(DE RL_*PTROPSAT (FORMULA) (APPLY 'RL_PTROPSAT (LIST FORMULA))) 
(FLUID '(RL_PTROPSAT*)) 
(SETQ RL_SERVL* (CONS 'RL_PTROPSAT* RL_SERVL*)) 
(PUT 'RL_PTROPSAT 'RL_SUPPORT 'RL_SMSERVICE) 
(SETQ RL_SERVICES* (CONS 'RL_PTROPSAT RL_SERVICES*)) 
(PUT 'RL_PTROPSAT 'NUMBER-OF-ARGS 1) 
(DE RL_PTROPSAT (FORMULA) (APPLY RL_PTROPSAT* (LIST FORMULA))) 
(PUT 'RLVARL 'RTYPEFN 'RTYPEPART) 
(PUT 'RLVARL 'RL_SUPPORT 'RL_AMSERVICE) 
(PUT 'RLVARL 'RL_SMSERVICE 'RL_VARL) 
(PUT 'RLVARL 'NAMES '(FORMULA)) 
(PUT 'RLVARL 'INTYPES '("Formula")) 
(PUT 'RLVARL 'DEFAULTS 'NIL) 
(PUT 'RLVARL 'OUTTYPE "Pair(List(Variable),List(Variable))") 
(PUT 'RLVARL 'DESCRIPTION
     "lists of variables sperarated wrt. free and bound occurrences") 
(PUT 'RLVARL 'DOCS '("first-order input formula")) 
(PUT 'RL_VARL 'RL_AMSERVICE 'RLVARL) 
(PUT 'RLVARL 'PSOPFN 'RL_VARL$) 
(PUT 'RL_VARL$ 'CLEANUPFN 'RL_CLEANUP) 
(PUT 'RL_VARL$ 'NUMBER-OF-ARGS 1) 
(DE RL_VARL$ (U)
    (RL_SERVICEWRAPPER 'RL_*VARL U '(FORMULA) '(FORMULA) 'NIL
                       '(PAIR (LIST VARIABLE) (LIST VARIABLE)) 'RL_VARL*
                       'RLVARL)) 
(PUT 'RL_*VARL 'NUMBER-OF-ARGS 1) 
(DE RL_*VARL (FORMULA) (APPLY 'RL_VARL (LIST FORMULA))) 
(FLUID '(RL_VARL*)) 
(SETQ RL_SERVL* (CONS 'RL_VARL* RL_SERVL*)) 
(PUT 'RL_VARL 'RL_SUPPORT 'RL_SMSERVICE) 
(SETQ RL_SERVICES* (CONS 'RL_VARL RL_SERVICES*)) 
(PUT 'RL_VARL 'NUMBER-OF-ARGS 1) 
(DE RL_VARL (FORMULA) (APPLY RL_VARL* (LIST FORMULA))) 
(PUT 'RLVSL 'RTYPEFN 'RTYPEPART) 
(PUT 'RLVSL 'RL_SUPPORT 'RL_AMSERVICE) 
(PUT 'RLVSL 'RL_SMSERVICE 'RL_VSL) 
(PUT 'RLVSL 'NAMES '(CONSTRAINTS)) 
(PUT 'RLVSL 'INTYPES '("List(Atom)")) 
(PUT 'RLVSL 'DEFAULTS 'NIL) 
(PUT 'RLVSL 'OUTTYPE "TruthValue") 
(PUT 'RLVSL 'DESCRIPTION "virtual substitution with learning") 
(PUT 'RLVSL 'DOCS '("a list of atomic constraints")) 
(PUT 'RL_VSL 'RL_AMSERVICE 'RLVSL) 
(PUT 'RLVSL 'PSOPFN 'RL_VSL$) 
(PUT 'RL_VSL$ 'CLEANUPFN 'RL_CLEANUP) 
(PUT 'RL_VSL$ 'NUMBER-OF-ARGS 1) 
(DE RL_VSL$ (U)
    (RL_SERVICEWRAPPER 'RL_*VSL U '(CONSTRAINTS) '((LIST ATOM)) 'NIL
                       'TRUTHVALUE 'RL_VSL* 'RLVSL)) 
(PUT 'RL_*VSL 'NUMBER-OF-ARGS 1) 
(DE RL_*VSL (CONSTRAINTS) (APPLY 'RL_VSL (LIST CONSTRAINTS))) 
(FLUID '(RL_VSL*)) 
(SETQ RL_SERVL* (CONS 'RL_VSL* RL_SERVL*)) 
(PUT 'RL_VSL 'RL_SUPPORT 'RL_SMSERVICE) 
(SETQ RL_SERVICES* (CONS 'RL_VSL RL_SERVICES*)) 
(PUT 'RL_VSL 'NUMBER-OF-ARGS 1) 
(DE RL_VSL (CONSTRAINTS) (APPLY RL_VSL* (LIST CONSTRAINTS))) 
(PUT 'RLWQE 'RTYPEFN 'RTYPEPART) 
(PUT 'RLWQE 'RL_SUPPORT 'RL_AMSERVICE) 
(PUT 'RLWQE 'RL_SMSERVICE 'RL_WQE) 
(PUT 'RLWQE 'NAMES '(FORMULA ASSUME)) 
(PUT 'RLWQE 'INTYPES '("Formula" "List(Atom)")) 
(PUT 'RLWQE 'DEFAULTS '((ASSUME LIST))) 
(PUT 'RLWQE 'OUTTYPE "Formula") 
(PUT 'RLWQE 'DESCRIPTION "weak quantifier elimination (domain Z only)") 
(PUT 'RLWQE 'DOCS '("first-order input formula" "atomic input assumptions")) 
(PUT 'RL_WQE 'RL_AMSERVICE 'RLWQE) 
(PUT 'RLWQE 'PSOPFN 'RL_WQE$) 
(PUT 'RL_WQE$ 'CLEANUPFN 'RL_CLEANUP) 
(PUT 'RL_WQE$ 'NUMBER-OF-ARGS 1) 
(DE RL_WQE$ (U)
    (RL_SERVICEWRAPPER 'RL_*WQE U '(FORMULA ASSUME) '(FORMULA (LIST ATOM))
                       '((ASSUME LIST)) 'FORMULA 'RL_WQE* 'RLWQE)) 
(PUT 'RL_*WQE 'NUMBER-OF-ARGS 2) 
(DE RL_*WQE (FORMULA ASSUME) (APPLY 'RL_WQE (LIST FORMULA ASSUME))) 
(FLUID '(RL_WQE*)) 
(SETQ RL_SERVL* (CONS 'RL_WQE* RL_SERVL*)) 
(PUT 'RL_WQE 'RL_SUPPORT 'RL_SMSERVICE) 
(SETQ RL_SERVICES* (CONS 'RL_WQE RL_SERVICES*)) 
(PUT 'RL_WQE 'NUMBER-OF-ARGS 2) 
(DE RL_WQE (FORMULA ASSUME) (APPLY RL_WQE* (LIST FORMULA ASSUME))) 
(PUT 'RLWQEA 'RTYPEFN 'RTYPEPART) 
(PUT 'RLWQEA 'RL_SUPPORT 'RL_AMSERVICE) 
(PUT 'RLWQEA 'RL_SMSERVICE 'RL_WQEA) 
(PUT 'RLWQEA 'NAMES '(FORMULA ASSUME)) 
(PUT 'RLWQEA 'INTYPES '("Formula" "List(Atom)")) 
(PUT 'RLWQEA 'DEFAULTS '((ASSUME LIST))) 
(PUT 'RLWQEA 'OUTTYPE
     "List(Triplet(Formula,List(Formula),List(Assignment(Any))))") 
(PUT 'RLWQEA 'DESCRIPTION "weak quantifier elimination with answer") 
(PUT 'RLWQEA 'DOCS '("first-order input formula" "atomic input assumptions")) 
(PUT 'RL_WQEA 'RL_AMSERVICE 'RLWQEA) 
(PUT 'RLWQEA 'PSOPFN 'RL_WQEA$) 
(PUT 'RL_WQEA$ 'CLEANUPFN 'RL_CLEANUP) 
(PUT 'RL_WQEA$ 'NUMBER-OF-ARGS 1) 
(DE RL_WQEA$ (U)
    (RL_SERVICEWRAPPER 'RL_*WQEA U '(FORMULA ASSUME) '(FORMULA (LIST ATOM))
                       '((ASSUME LIST))
                       '(LIST (TRIPLET FORMULA (LIST FORMULA))) 'RL_WQEA*
                       'RLWQEA)) 
(PUT 'RL_*WQEA 'NUMBER-OF-ARGS 2) 
(DE RL_*WQEA (FORMULA ASSUME) (APPLY 'RL_WQEA (LIST FORMULA ASSUME))) 
(FLUID '(RL_WQEA*)) 
(SETQ RL_SERVL* (CONS 'RL_WQEA* RL_SERVL*)) 
(PUT 'RL_WQEA 'RL_SUPPORT 'RL_SMSERVICE) 
(SETQ RL_SERVICES* (CONS 'RL_WQEA RL_SERVICES*)) 
(PUT 'RL_WQEA 'NUMBER-OF-ARGS 2) 
(DE RL_WQEA (FORMULA ASSUME) (APPLY RL_WQEA* (LIST FORMULA ASSUME))) 
(PUT 'RLXQE 'RTYPEFN 'RTYPEPART) 
(PUT 'RLXQE 'RL_SUPPORT 'RL_AMSERVICE) 
(PUT 'RLXQE 'RL_SMSERVICE 'RL_XQE) 
(PUT 'RLXQE 'NAMES '(FORMULA)) 
(PUT 'RLXQE 'INTYPES '("Formula")) 
(PUT 'RLXQE 'DEFAULTS 'NIL) 
(PUT 'RLXQE 'OUTTYPE "Formula") 
(PUT 'RLXQE 'DESCRIPTION "weakly parametric linear quantifier elimination") 
(PUT 'RLXQE 'DOCS '("first-order input formula")) 
(PUT 'RL_XQE 'RL_AMSERVICE 'RLXQE) 
(PUT 'RLXQE 'PSOPFN 'RL_XQE$) 
(PUT 'RL_XQE$ 'CLEANUPFN 'RL_CLEANUP) 
(PUT 'RL_XQE$ 'NUMBER-OF-ARGS 1) 
(DE RL_XQE$ (U)
    (RL_SERVICEWRAPPER 'RL_*XQE U '(FORMULA) '(FORMULA) 'NIL 'FORMULA 'RL_XQE*
                       'RLXQE)) 
(PUT 'RL_*XQE 'NUMBER-OF-ARGS 1) 
(DE RL_*XQE (FORMULA) (APPLY 'RL_XQE (LIST FORMULA))) 
(FLUID '(RL_XQE*)) 
(SETQ RL_SERVL* (CONS 'RL_XQE* RL_SERVL*)) 
(PUT 'RL_XQE 'RL_SUPPORT 'RL_SMSERVICE) 
(SETQ RL_SERVICES* (CONS 'RL_XQE RL_SERVICES*)) 
(PUT 'RL_XQE 'NUMBER-OF-ARGS 1) 
(DE RL_XQE (FORMULA) (APPLY RL_XQE* (LIST FORMULA))) 
(PUT 'RLXQEA 'RTYPEFN 'RTYPEPART) 
(PUT 'RLXQEA 'RL_SUPPORT 'RL_AMSERVICE) 
(PUT 'RLXQEA 'RL_SMSERVICE 'RL_XQEA) 
(PUT 'RLXQEA 'NAMES '(FORMULA)) 
(PUT 'RLXQEA 'INTYPES '("Formula")) 
(PUT 'RLXQEA 'DEFAULTS 'NIL) 
(PUT 'RLXQEA 'OUTTYPE "List(Pair(Formula,List(Assignment(Any))))") 
(PUT 'RLXQEA 'DESCRIPTION
     "weakly parametric linear quantifier elimination with answer") 
(PUT 'RLXQEA 'DOCS '("first-order input formula")) 
(PUT 'RL_XQEA 'RL_AMSERVICE 'RLXQEA) 
(PUT 'RLXQEA 'PSOPFN 'RL_XQEA$) 
(PUT 'RL_XQEA$ 'CLEANUPFN 'RL_CLEANUP) 
(PUT 'RL_XQEA$ 'NUMBER-OF-ARGS 1) 
(DE RL_XQEA$ (U)
    (RL_SERVICEWRAPPER 'RL_*XQEA U '(FORMULA) '(FORMULA) 'NIL
                       '(LIST (PAIR FORMULA (LIST (ASSIGNMENT ANY)))) 'RL_XQEA*
                       'RLXQEA)) 
(PUT 'RL_*XQEA 'NUMBER-OF-ARGS 1) 
(DE RL_*XQEA (FORMULA) (APPLY 'RL_XQEA (LIST FORMULA))) 
(FLUID '(RL_XQEA*)) 
(SETQ RL_SERVL* (CONS 'RL_XQEA* RL_SERVL*)) 
(PUT 'RL_XQEA 'RL_SUPPORT 'RL_SMSERVICE) 
(SETQ RL_SERVICES* (CONS 'RL_XQEA RL_SERVICES*)) 
(PUT 'RL_XQEA 'NUMBER-OF-ARGS 1) 
(DE RL_XQEA (FORMULA) (APPLY RL_XQEA* (LIST FORMULA))) 
(PUT 'RL_DFGPRINT 'DOCAL
     '((SYNOPSIS . "rl_dfgprint/2")
       (DESCRIPTION . "dump a formula as DFG input"))) 
(FLUID '(RL_DFGPRINT*)) 
(SETQ RL_SERVL* (CONS 'RL_DFGPRINT* RL_SERVL*)) 
(PUT 'RL_DFGPRINT 'RL_SUPPORT 'RL_SMSERVICE) 
(SETQ RL_SERVICES* (CONS 'RL_DFGPRINT RL_SERVICES*)) 
(PUT 'RL_DFGPRINT 'NUMBER-OF-ARGS 2) 
(DE RL_DFGPRINT (A1 A2) (APPLY RL_DFGPRINT* (LIST A1 A2))) 
(PUT 'RL_IDENTIFYONOFF 'DOCAL
     '((SYNOPSIS . "rl_identifyonoff/1")
       (DESCRIPTION . "for rlidentify - should become obsolete at some point"))) 
(FLUID '(RL_IDENTIFYONOFF*)) 
(SETQ RL_SERVL* (CONS 'RL_IDENTIFYONOFF* RL_SERVL*)) 
(PUT 'RL_IDENTIFYONOFF 'RL_SUPPORT 'RL_SMSERVICE) 
(SETQ RL_SERVICES* (CONS 'RL_IDENTIFYONOFF RL_SERVICES*)) 
(PUT 'RL_IDENTIFYONOFF 'NUMBER-OF-ARGS 1) 
(DE RL_IDENTIFYONOFF (A1) (APPLY RL_IDENTIFYONOFF* (LIST A1))) 
(PUT 'RL_LTHSIMPL 'DOCAL
     '((SYNOPSIS . "rl_lthsimpl/1")
       (DESCRIPTION . "local qe theory simplification"))) 
(FLUID '(RL_LTHSIMPL*)) 
(SETQ RL_SERVL* (CONS 'RL_LTHSIMPL* RL_SERVL*)) 
(PUT 'RL_LTHSIMPL 'RL_SUPPORT 'RL_SMSERVICE) 
(SETQ RL_SERVICES* (CONS 'RL_LTHSIMPL RL_SERVICES*)) 
(PUT 'RL_LTHSIMPL 'NUMBER-OF-ARGS 1) 
(DE RL_LTHSIMPL (A1) (APPLY RL_LTHSIMPL* (LIST A1))) 
(PUT 'RL_NNFNOT 'DOCAL
     '((SYNOPSIS . "rl_nnfnot/1")
       (DESCRIPTION . "logical negation as a positive formula"))) 
(FLUID '(RL_NNFNOT*)) 
(SETQ RL_SERVL* (CONS 'RL_NNFNOT* RL_SERVL*)) 
(PUT 'RL_NNFNOT 'RL_SUPPORT 'RL_SMSERVICE) 
(SETQ RL_SERVICES* (CONS 'RL_NNFNOT RL_SERVICES*)) 
(PUT 'RL_NNFNOT 'NUMBER-OF-ARGS 1) 
(DE RL_NNFNOT (A1) (APPLY RL_NNFNOT* (LIST A1))) 
(PUT 'RL_SIADDATL 'DOCAL
     '((SYNOPSIS . "rl_siaddatl/2")
       (DESCRIPTION . "simplifier add to list of atomic formulas"))) 
(FLUID '(RL_SIADDATL*)) 
(SETQ RL_SERVL* (CONS 'RL_SIADDATL* RL_SERVL*)) 
(PUT 'RL_SIADDATL 'RL_SUPPORT 'RL_SMSERVICE) 
(SETQ RL_SERVICES* (CONS 'RL_SIADDATL RL_SERVICES*)) 
(PUT 'RL_SIADDATL 'NUMBER-OF-ARGS 2) 
(DE RL_SIADDATL (A1 A2) (APPLY RL_SIADDATL* (LIST A1 A2))) 
(PUT 'RL_SMT2PRINT 'DOCAL
     '((SYNOPSIS . "rl_smt2print/3")
       (DESCRIPTION . "dump a formula as SMTLIB 2 input"))) 
(FLUID '(RL_SMT2PRINT*)) 
(SETQ RL_SERVL* (CONS 'RL_SMT2PRINT* RL_SERVL*)) 
(PUT 'RL_SMT2PRINT 'RL_SUPPORT 'RL_SMSERVICE) 
(SETQ RL_SERVICES* (CONS 'RL_SMT2PRINT RL_SERVICES*)) 
(PUT 'RL_SMT2PRINT 'NUMBER-OF-ARGS 3) 
(DE RL_SMT2PRINT (A1 A2 A3) (APPLY RL_SMT2PRINT* (LIST A1 A2 A3))) 
(PUT 'RL_SUBFOF 'DOCAL
     '((SYNOPSIS . "rl_subfof/2") (DESCRIPTION . "substitution"))) 
(FLUID '(RL_SUBFOF*)) 
(SETQ RL_SERVL* (CONS 'RL_SUBFOF* RL_SERVL*)) 
(PUT 'RL_SUBFOF 'RL_SUPPORT 'RL_SMSERVICE) 
(SETQ RL_SERVICES* (CONS 'RL_SUBFOF RL_SERVICES*)) 
(PUT 'RL_SUBFOF 'NUMBER-OF-ARGS 2) 
(DE RL_SUBFOF (A1 A2) (APPLY RL_SUBFOF* (LIST A1 A2))) 
(PUT 'RL_SUREP 'DOCAL
     '((SYNOPSIS . "rl_surep/2")
       (DESCRIPTION
        . "fast incomplete heuristic test for a formula to be valid"))) 
(FLUID '(RL_SUREP*)) 
(SETQ RL_SERVL* (CONS 'RL_SUREP* RL_SERVL*)) 
(PUT 'RL_SUREP 'RL_SUPPORT 'RL_SMSERVICE) 
(SETQ RL_SERVICES* (CONS 'RL_SUREP RL_SERVICES*)) 
(PUT 'RL_SUREP 'NUMBER-OF-ARGS 2) 
(DE RL_SUREP (A1 A2) (APPLY RL_SUREP* (LIST A1 A2))) 
(ENDMODULE) 