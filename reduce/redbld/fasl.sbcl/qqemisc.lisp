(cl:declaim (cl:optimize cl:debug cl:safety))
(cl:declaim (sb-ext:muffle-conditions sb-ext:compiler-note cl:style-warning))
(MODULE (LIST 'QQEMISC)) 
(REVISION 'QQEMISC "$Id: qqemisc.red 5910 2021-08-14 19:14:20Z thomas-sturm $") 
(COPYRIGHT 'QQEMISC "Copyright (c) 2005-2009 A. Dolzmann and T. Sturm") 
(PUT 'QQE_PREFIX-LENGTH 'NUMBER-OF-ARGS 1) 
(PUT 'QQE_PREFIX-LENGTH 'DEFINED-ON-LINE '33) 
(PUT 'QQE_PREFIX-LENGTH 'DEFINED-IN-FILE 'REDLOG/QQE/QQEMISC.RED) 
(PUT 'QQE_PREFIX-LENGTH 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE QQE_PREFIX-LENGTH (PREF)
    (PROG (X J)
      (SETQ J 0)
      (COND ((NULL PREF) (SETQ X NIL)) (T (PROGN (SETQ X PREF) NIL)))
      (PROG ()
       WHILELABEL
        (COND ((NOT (AND X (NOT (ATOM X)))) (RETURN NIL)))
        (PROGN
         (COND ((MEMQ (CAR X) '(RTAIL LTAIL RHEAD LHEAD)) (SETQ J (PLUS J 1))))
         (SETQ X (CADR X))
         NIL)
        (GO WHILELABEL))
      (RETURN J))) 
(PUT 'QQE_PREFIX-LEFTS 'NUMBER-OF-ARGS 1) 
(PUT 'QQE_PREFIX-LEFTS 'DEFINED-ON-LINE '55) 
(PUT 'QQE_PREFIX-LEFTS 'DEFINED-IN-FILE 'REDLOG/QQE/QQEMISC.RED) 
(PUT 'QQE_PREFIX-LEFTS 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE QQE_PREFIX-LEFTS (PREF)
    (PROG (LEFTS)
      (SETQ LEFTS 0)
      (COND ((ATOM PREF) (RETURN 0))
            ((MEMQ (CAR PREF) '(LHEAD |,| RHEAD |,| LTAIL |,| RTAIL))
             (RETURN (QQE_PREFIX-LEFTS1 PREF)))
            (T
             (PROG (X)
               (SETQ X (CDR PREF))
              LAB
               (COND ((NULL X) (RETURN NIL)))
               ((LAMBDA (X) (SETQ LEFTS (MAX LEFTS (QQE_PREFIX-LEFTS X))))
                (CAR X))
               (SETQ X (CDR X))
               (GO LAB))))
      (RETURN LEFTS))) 
(PUT 'QQE_PREFIX-LEFTS1 'NUMBER-OF-ARGS 1) 
(PUT 'QQE_PREFIX-LEFTS1 'DEFINED-ON-LINE '69) 
(PUT 'QQE_PREFIX-LEFTS1 'DEFINED-IN-FILE 'REDLOG/QQE/QQEMISC.RED) 
(PUT 'QQE_PREFIX-LEFTS1 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE QQE_PREFIX-LEFTS1 (PREF)
    (PROG (X J OP)
      (SETQ X PREF)
      (SETQ OP (CAR PREF))
      (COND ((OR (EQ OP 'LHEAD) (EQ OP 'RTAIL)) (SETQ J 1)) (T (SETQ J 0)))
      (SETQ X (CADR X))
      (PROG ()
       WHILELABEL
        (COND ((NOT (AND X (NOT (ATOM X)))) (RETURN NIL)))
        (PROGN
         (COND ((EQ (CAR X) 'RTAIL) (SETQ J (PLUS J 1))))
         (SETQ X (CADR X))
         NIL)
        (GO WHILELABEL))
      (RETURN J))) 
(PUT 'QQE_PREFIX-RIGHTS 'NUMBER-OF-ARGS 1) 
(PUT 'QQE_PREFIX-RIGHTS 'DEFINED-ON-LINE '88) 
(PUT 'QQE_PREFIX-RIGHTS 'DEFINED-IN-FILE 'REDLOG/QQE/QQEMISC.RED) 
(PUT 'QQE_PREFIX-RIGHTS 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE QQE_PREFIX-RIGHTS (PREF)
    (PROG (RIGHTS)
      (SETQ RIGHTS 0)
      (COND ((ATOM PREF) (RETURN 0))
            ((MEMQ (CAR PREF) '(LHEAD |,| RHEAD |,| LTAIL |,| RTAIL))
             (RETURN (SETQ RIGHTS (QQE_PREFIX-RIGHTS1 PREF))))
            (T
             (PROG (X)
               (SETQ X (CDR PREF))
              LAB
               (COND ((NULL X) (RETURN NIL)))
               ((LAMBDA (X) (SETQ RIGHTS (MAX RIGHTS (QQE_PREFIX-RIGHTS X))))
                (CAR X))
               (SETQ X (CDR X))
               (GO LAB))))
      (RETURN RIGHTS))) 
(PUT 'QQE_PREFIX-RIGHTS1 'NUMBER-OF-ARGS 1) 
(PUT 'QQE_PREFIX-RIGHTS1 'DEFINED-ON-LINE '102) 
(PUT 'QQE_PREFIX-RIGHTS1 'DEFINED-IN-FILE 'REDLOG/QQE/QQEMISC.RED) 
(PUT 'QQE_PREFIX-RIGHTS1 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE QQE_PREFIX-RIGHTS1 (PREF)
    (PROG (X J OP)
      (SETQ X PREF)
      (SETQ OP (CAR PREF))
      (COND ((OR (EQ OP 'RHEAD) (EQ OP 'LTAIL)) (SETQ J 1)) (T (SETQ J 0)))
      (SETQ X (CADR X))
      (PROG ()
       WHILELABEL
        (COND ((NOT (AND X (NOT (ATOM X)))) (RETURN NIL)))
        (PROGN
         (COND ((EQ (CAR X) 'LTAIL) (SETQ J (PLUS J 1))))
         (SETQ X (CADR X))
         NIL)
        (GO WHILELABEL))
      (RETURN J))) 
(PUT 'QQE_DFS 'NUMBER-OF-ARGS 2) 
(PUT 'QQE_DFS 'DEFINED-ON-LINE '120) 
(PUT 'QQE_DFS 'DEFINED-IN-FILE 'REDLOG/QQE/QQEMISC.RED) 
(PUT 'QQE_DFS 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE QQE_DFS (U X)
    (PROG (Y NOT_YET)
      (SETQ NOT_YET T)
      (COND
       ((ATOM U) (PROGN (COND ((EQ U X) (RETURN T)) (T (RETURN NIL))) NIL)))
      (SETQ Y U)
      (PROG ()
       WHILELABEL
        (COND ((NOT (AND Y NOT_YET)) (RETURN NIL)))
        (PROGN
         (COND ((EQ (CAR Y) X) (SETQ NOT_YET NIL)))
         (COND ((QQE_DFS (CAR Y) X) (SETQ NOT_YET NIL)))
         (SETQ Y (CDR Y))
         NIL)
        (GO WHILELABEL))
      (COND (NOT_YET (RETURN NIL)) (T (RETURN T))))) 
(PUT 'QQE_LCM 'NUMBER-OF-ARGS 2) 
(PUT 'QQE_LCM 'DEFINED-ON-LINE '143) 
(PUT 'QQE_LCM 'DEFINED-IN-FILE 'REDLOG/QQE/QQEMISC.RED) 
(PUT 'QQE_LCM 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE QQE_LCM (A B)
    (PROG (X Y)
      (SETQ X A)
      (SETQ Y B)
      (PROG ()
       WHILELABEL
        (COND ((NOT (NEQ X Y)) (RETURN NIL)))
        (COND ((LESSP X Y) (SETQ X (PLUS X A))) (T (SETQ Y (PLUS Y B))))
        (GO WHILELABEL))
      (RETURN X))) 
(PUT 'QQE_LCM-LIST 'NUMBER-OF-ARGS 1) 
(PUT 'QQE_LCM-LIST 'DEFINED-ON-LINE '155) 
(PUT 'QQE_LCM-LIST 'DEFINED-IN-FILE 'REDLOG/QQE/QQEMISC.RED) 
(PUT 'QQE_LCM-LIST 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE QQE_LCM-LIST (LIST)
    (PROG (X P)
      (COND ((NULL (CDR LIST)) (RETURN (CAR LIST))))
      (SETQ X (CDR LIST))
      (SETQ P (QQE_LCM (CAR X) (CAR LIST)))
      (SETQ X (CDR X))
      (PROG ()
       WHILELABEL
        (COND ((NOT X) (RETURN NIL)))
        (PROGN (SETQ P (QQE_LCM (CAR X) P)) (SETQ X (CDR X)) NIL)
        (GO WHILELABEL))
      (RETURN P))) 
(PUT 'QQE_PLCM 'NUMBER-OF-ARGS 4) 
(PUT 'QQE_PLCM 'DEFINED-ON-LINE '171) 
(PUT 'QQE_PLCM 'DEFINED-IN-FILE 'REDLOG/QQE/QQEMISC.RED) 
(PUT 'QQE_PLCM 'PROCEDURE_TYPE
     '(ARROW (TIMES GENERAL GENERAL GENERAL GENERAL) GENERAL)) 
(DE QQE_PLCM (A1 A2 B1 B2)
    (PROG ()
      (COND ((NOT (NUMBERP A1)) (TYPERR A1 "number")))
      (COND ((NOT (NUMBERP A2)) (TYPERR A1 "number")))
      (COND ((NOT (NUMBERP B1)) (TYPERR A1 "number")))
      (COND ((NOT (NUMBERP B2)) (TYPERR A1 "number")))
      (COND
       ((NOT (EQUAL (REMAINDER (ABS (DIFFERENCE A1 B1)) (|:GCD| A2 B2)) 0))
        (RETURN (MINUS 1))))
      (PROG ()
       WHILELABEL
        (COND ((NOT (NEQ A1 B1)) (RETURN NIL)))
        (PROGN
         (COND ((LESSP A1 B1) (SETQ A1 (PLUS A1 A2)))
               (T (SETQ B1 (PLUS B1 B2))))
         NIL)
        (GO WHILELABEL))
      (RETURN A1))) 
(PUT 'QQE_PLCM-LIST 'NUMBER-OF-ARGS 1) 
(PUT 'QQE_PLCM-LIST 'DEFINED-ON-LINE '194) 
(PUT 'QQE_PLCM-LIST 'DEFINED-IN-FILE 'REDLOG/QQE/QQEMISC.RED) 
(PUT 'QQE_PLCM-LIST 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE QQE_PLCM-LIST (U)
    (PROG (X TMP)
      (SETQ X (CDR U))
      (SETQ TMP (CAR U))
      (PROG ()
       WHILELABEL
        (COND ((NOT X) (RETURN NIL)))
        (PROGN
         (SETQ TMP
                 (LIST
                  (QQE_PLCM (CAR TMP) (CADR TMP) (CAR (CAR X)) (CADR (CAR X)))
                  (QQE_LCM (CADR TMP) (CADR (CAR X)))))
         (COND ((EQ (CAR TMP) (MINUS 1)) (SETQ X NIL)) (T (SETQ X (CDR X))))
         NIL)
        (GO WHILELABEL))
      (RETURN (CAR TMP)))) 
(PUT 'QQE_PLCM-2LIST 'NUMBER-OF-ARGS 2) 
(PUT 'QQE_PLCM-2LIST 'DEFINED-ON-LINE '216) 
(PUT 'QQE_PLCM-2LIST 'DEFINED-IN-FILE 'REDLOG/QQE/QQEMISC.RED) 
(PUT 'QQE_PLCM-2LIST 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE QQE_PLCM-2LIST (U V)
    (PROG (X1 X2 TMP1 TMP2)
      (SETQ X1 (CDR U))
      (SETQ X2 (CDR V))
      (SETQ TMP1 (CAR U))
      (SETQ TMP2 (CAR V))
      (PROG ()
       WHILELABEL
        (COND ((NOT (AND X1 X2)) (RETURN NIL)))
        (PROGN
         (SETQ TMP1 (QQE_PLCM TMP1 TMP2 (CAR X1) (CAR X2)))
         (SETQ TMP2 (QQE_LCM TMP2 (CAR X2)))
         NIL
         (COND ((EQ TMP1 (MINUS 1)) (SETQ X1 NIL))
               (T (PROGN (SETQ X1 (CDR X1)) (SETQ X2 (CDR X2)) NIL)))
         NIL)
        (GO WHILELABEL))
      (RETURN TMP1))) 
(PUT 'QQE_QUICKSORT 'NUMBER-OF-ARGS 1) 
(PUT 'QQE_QUICKSORT 'DEFINED-ON-LINE '243) 
(PUT 'QQE_QUICKSORT 'DEFINED-IN-FILE 'REDLOG/QQE/QQEMISC.RED) 
(PUT 'QQE_QUICKSORT 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE QQE_QUICKSORT (LIST)
    (PROG (PIVOT)
      (COND
       (LIST
        (PROGN
         (SETQ PIVOT (CAR LIST))
         (SETQ LIST (QQE_PARTITION (CDR LIST) PIVOT))
         (SETQ LIST
                 (APPEND (QQE_QUICKSORT (CAR LIST))
                         (APPEND (LIST PIVOT) (QQE_QUICKSORT (CADR LIST)))))
         NIL)))
      (RETURN LIST))) 
(PUT 'QQE_PARTITION 'NUMBER-OF-ARGS 2) 
(PUT 'QQE_PARTITION 'DEFINED-ON-LINE '257) 
(PUT 'QQE_PARTITION 'DEFINED-IN-FILE 'REDLOG/QQE/QQEMISC.RED) 
(PUT 'QQE_PARTITION 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE QQE_PARTITION (LIST PIVOT)
    (PROG (L R X)
      (PROG (X)
        (SETQ X LIST)
       LAB
        (COND ((NULL X) (RETURN NIL)))
        ((LAMBDA (X)
           (PROGN
            (COND ((GREATERP X PIVOT) (SETQ L (APPEND L (LIST X))))
                  ((LESSP X PIVOT) (PROGN (SETQ R (APPEND R (LIST X))) NIL)))
            NIL))
         (CAR X))
        (SETQ X (CDR X))
        (GO LAB))
      (RETURN (LIST L R)))) 
(PUT 'QQE_LENGTH-GRAPH-UPDATE-LENGTHS 'NUMBER-OF-ARGS 1) 
(PUT 'QQE_LENGTH-GRAPH-UPDATE-LENGTHS 'DEFINED-ON-LINE '271) 
(PUT 'QQE_LENGTH-GRAPH-UPDATE-LENGTHS 'DEFINED-IN-FILE 'REDLOG/QQE/QQEMISC.RED) 
(PUT 'QQE_LENGTH-GRAPH-UPDATE-LENGTHS 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE QQE_LENGTH-GRAPH-UPDATE-LENGTHS (NODES)
    (PROG (BAD_CIRCLES START_MIN START_MAX REST)
      (SETQ START_MIN (CAR NODES))
      (SETQ START_MAX (CADR NODES))
      (SETQ REST (CADDR NODES))
      (SETQ BAD_CIRCLES
              (QQE_LENGTH-GRAPH-DETECT-BAD-CIRCLES
               (APPEND START_MIN (APPEND START_MAX REST))))
      (QQE_LENGTH-GRAPH-MAXLENGTH-BAD-CIRCLES BAD_CIRCLES)
      (COND
       ((NULL
         (QQE_LENGTH-GRAPH-CORRECT (APPEND START_MIN (APPEND START_MAX REST))))
        (PROGN
         (QQE_LENGTH-GRAPH-DELETE (APPEND START_MIN (APPEND START_MAX REST)))
         (RETURN 'FALSE)
         NIL)))
      (QQE_LENGTH-GRAPH-UPDATE-MAXLENGTHS START_MAX)
      (COND
       ((NULL
         (QQE_LENGTH-GRAPH-CORRECT (APPEND START_MIN (APPEND START_MAX REST))))
        (PROGN
         (QQE_LENGTH-GRAPH-DELETE (APPEND START_MIN (APPEND START_MAX REST)))
         (RETURN 'FALSE)
         NIL)))
      (QQE_LENGTH-GRAPH-UPDATE-MINLENGTHS START_MIN)
      (RETURN (APPEND START_MIN (APPEND START_MAX REST))))) 
(PUT 'QQE_CLAUSE-UPDATE-LENGTHS 'NUMBER-OF-ARGS 2) 
(PUT 'QQE_CLAUSE-UPDATE-LENGTHS 'DEFINED-ON-LINE '305) 
(PUT 'QQE_CLAUSE-UPDATE-LENGTHS 'DEFINED-IN-FILE 'REDLOG/QQE/QQEMISC.RED) 
(PUT 'QQE_CLAUSE-UPDATE-LENGTHS 'PROCEDURE_TYPE
     '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE QQE_CLAUSE-UPDATE-LENGTHS (U HEADMIN)
    (QQE_LENGTH-GRAPH-UPDATE-LENGTHS (QQE_LENGTH-GRAPH-CLAUSE U HEADMIN))) 
(PUT 'QQE_LENGTH-GRAPH-CLAUSE 'NUMBER-OF-ARGS 2) 
(PUT 'QQE_LENGTH-GRAPH-CLAUSE 'DEFINED-ON-LINE '315) 
(PUT 'QQE_LENGTH-GRAPH-CLAUSE 'DEFINED-IN-FILE 'REDLOG/QQE/QQEMISC.RED) 
(PUT 'QQE_LENGTH-GRAPH-CLAUSE 'PROCEDURE_TYPE
     '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE QQE_LENGTH-GRAPH-CLAUSE (U HEADMIN)
    (PROG (START_MIN START_MAX OP VAR_LIST VAR_L VAR_R VAR_LISTTEMP)
      (COND ((NOT (EQ (CAR U) 'AND)) (SETQ U (LIST U))) (T (SETQ U (CDR U))))
      (PROG (AT)
        (SETQ AT U)
       LAB
        (COND ((NULL AT) (RETURN NIL)))
        ((LAMBDA (AT)
           (PROGN
            (COND (QQE_DEBUG* (PRIN2T (LIST "lengthgraph-clause at at=" AT))))
            (SETQ OP (CAR AT))
            (COND
             ((EQ OP 'QEQUAL)
              (PROGN
               (SETQ VAR_L (QQE_QPREFIX-VAR (CADR AT)))
               (SETQ VAR_R (QQE_QPREFIX-VAR (CADDR AT)))
               (COND
                ((AND (EQ VAR_L 'QEPSILON) (NEQ VAR_R 'QEPSILON))
                 (PROGN
                  (QQE_UPDATE-MAXLENGTH VAR_R (QQE_PREFIX-LENGTH (CADDR AT)))
                  (SETQ START_MAX (LTO_INSERTQ VAR_R START_MAX))
                  NIL))
                ((AND (EQ VAR_R 'QEPSILON) (NEQ VAR_L 'QEPSILON))
                 (PROGN
                  (QQE_UPDATE-MAXLENGTH VAR_L (QQE_PREFIX-LENGTH (CADR AT)))
                  (SETQ START_MAX (LTO_INSERTQ VAR_L START_MAX))
                  NIL))
                (T
                 (PROGN
                  (QQE_LENGTH-GRAPH-UPDATE-EDGES VAR_L VAR_R AT)
                  (SETQ VAR_LIST (LTO_INSERTQ VAR_L VAR_LIST))
                  (COND
                   ((NEQ VAR_L VAR_R)
                    (SETQ VAR_LIST (LTO_INSERTQ VAR_R VAR_LIST))))
                  (COND (QQE_DEBUG* (PRIN2T VAR_LIST)))
                  NIL)))
               NIL))
             ((EQ OP 'QNEQ)
              (PROGN
               (SETQ VAR_L (QQE_QPREFIX-VAR (CADR AT)))
               (SETQ VAR_R (QQE_QPREFIX-VAR (CADDR AT)))
               (COND
                ((AND (EQ VAR_L 'QEPSILON) (NEQ VAR_R 'QEPSILON))
                 (PROGN
                  (QQE_UPDATE-MINLENGTH VAR_R
                   (PLUS (QQE_PREFIX-LENGTH (CADDR AT)) 1))
                  (SETQ START_MIN (LTO_INSERTQ VAR_R START_MIN))
                  NIL))
                ((AND (EQ VAR_R 'QEPSILON) (NEQ VAR_L 'QEPSILON))
                 (PROGN
                  (QQE_UPDATE-MINLENGTH VAR_L
                   (PLUS (QQE_PREFIX-LENGTH (CADR AT)) 1))
                  (SETQ START_MIN (LTO_INSERTQ VAR_L START_MIN))
                  NIL)))
               NIL))
             (HEADMIN
              (SETQ VAR_LIST (QQE_UPDATE-HEADMIN (RL_PREPAT AT) VAR_LIST))))
            NIL))
         (CAR AT))
        (SETQ AT (CDR AT))
        (GO LAB))
      (COND (QQE_DEBUG* (PRIN2T (LIST "var_list before collect = " VAR_LIST))))
      (SETQ VAR_LIST
              (PROG (X)
                (SETQ X VAR_LIST)
               LAB
                (COND ((NULL X) (RETURN NIL)))
                ((LAMBDA (X)
                   (COND
                    ((AND (NOT (MEMQ X START_MIN)) (NOT (MEMQ X START_MAX)))
                     (SETQ VAR_LISTTEMP (CONS X VAR_LISTTEMP)))))
                 (CAR X))
                (SETQ X (CDR X))
                (GO LAB)))
      (COND
       (QQE_DEBUG*
        (QQE_LENGTH-GRAPH-PRINT
         (APPEND START_MIN (APPEND START_MAX VAR_LISTTEMP)))))
      (RETURN (LIST START_MIN START_MAX VAR_LISTTEMP)))) 
(PUT 'QQE_LENGTH-GRAPH-UPDATE-EDGES 'NUMBER-OF-ARGS 3) 
(PUT 'QQE_LENGTH-GRAPH-UPDATE-EDGES 'DEFINED-ON-LINE '382) 
(PUT 'QQE_LENGTH-GRAPH-UPDATE-EDGES 'DEFINED-IN-FILE 'REDLOG/QQE/QQEMISC.RED) 
(PUT 'QQE_LENGTH-GRAPH-UPDATE-EDGES 'PROCEDURE_TYPE
     '(ARROW (TIMES GENERAL GENERAL GENERAL) GENERAL)) 
(DE QQE_LENGTH-GRAPH-UPDATE-EDGES (VAR_L VAR_R AT)
    (PROG (EL ER DIFF EDGE NEIGHBOR)
      (SETQ EL (QQE_PREFIX-LENGTH (CADR AT)))
      (SETQ ER (QQE_PREFIX-LENGTH (CADDR AT)))
      (SETQ DIFF (DIFFERENCE ER EL))
      (SETQ EDGE (QQE_LENGTH-GRAPH-EDGE EL ER DIFF))
      (SETQ NEIGHBOR
              (QQE_LENGTH-GRAPH-NEIGHBOR-NOT-REDUNDANT-EDGE VAR_L VAR_R EDGE))
      (COND
       ((AND NEIGHBOR (NOT (EQ NEIGHBOR T)))
        (QQE_LENGTH-GRAPH-DELETE-NEIGHBOR VAR_L NEIGHBOR)))
      (COND
       (NEIGHBOR
        (PROGN
         (QQE_LENGTH-GRAPH-INSERT-NEIGHBOR VAR_L
          (QQE_LENGTH-GRAPH-NEIGHBOR VAR_R T EDGE))
         (COND
          ((NEQ VAR_L VAR_R)
           (QQE_LENGTH-GRAPH-INSERT-NEIGHBOR VAR_R
            (QQE_LENGTH-GRAPH-NEIGHBOR VAR_L NIL EDGE))))
         NIL))
       (QQE_DEBUG*
        (PROGN
         (PRIN2T
          (LIST "redundant edge=" EDGE "with var_1,var_2=" VAR_L VAR_R
                "in list = " (QQE_LENGTH-GRAPH-NEIGHBORS VAR_L)))
         NIL))))) 
(PUT 'QQE_LENGTH-GRAPH-NEIGHBOR-NOT-REDUNDANT-EDGE 'NUMBER-OF-ARGS 3) 
(PUT 'QQE_LENGTH-GRAPH-NEIGHBOR-NOT-REDUNDANT-EDGE 'DEFINED-ON-LINE '409) 
(PUT 'QQE_LENGTH-GRAPH-NEIGHBOR-NOT-REDUNDANT-EDGE 'DEFINED-IN-FILE
     'REDLOG/QQE/QQEMISC.RED) 
(PUT 'QQE_LENGTH-GRAPH-NEIGHBOR-NOT-REDUNDANT-EDGE 'PROCEDURE_TYPE
     '(ARROW (TIMES GENERAL GENERAL GENERAL) GENERAL)) 
(DE QQE_LENGTH-GRAPH-NEIGHBOR-NOT-REDUNDANT-EDGE (VAR_1 VAR_2 EDGE)
    (PROG (EDGE2 NEIGHBOR NEIGHBORS FLAG X)
      (SETQ FLAG T)
      (SETQ NEIGHBORS (QQE_LENGTH-GRAPH-NEIGHBORS VAR_1))
      (PROG ()
       WHILELABEL
        (COND ((NOT (AND FLAG NEIGHBORS)) (RETURN NIL)))
        (PROGN
         (SETQ X (CAR NEIGHBORS))
         (COND
          ((EQ (QQE_LENGTH-GRAPH-NEIGHBOR-NODE X) VAR_2)
           (PROGN
            (COND
             ((EQ (QQE_LENGTH-GRAPH-NEIGHBOR-DIFF X)
                  (QQE_LENGTH-GRAPH-EDGE-DIFF EDGE))
              (PROGN
               (SETQ EDGE2 (QQE_LENGTH-GRAPH-NEIGHBOR-EDGE X))
               (COND
                ((QQE_LENGTH-GRAPH-NEIGHBOR-LEFT-ON-EDGE X)
                 (PROGN
                  (COND
                   ((LESSP (QQE_LENGTH-GRAPH-EDGE-EL EDGE)
                           (QQE_LENGTH-GRAPH-EDGE-ER EDGE2))
                    (PROGN (SETQ NEIGHBOR X) (SETQ FLAG NIL) NIL))
                   (T (PROGN (SETQ FLAG NIL) (SETQ NEIGHBOR NIL) NIL)))
                  NIL))
                (T
                 (PROGN
                  (COND
                   ((LESSP (QQE_LENGTH-GRAPH-EDGE-EL EDGE)
                           (QQE_LENGTH-GRAPH-EDGE-EL EDGE2))
                    (PROGN (SETQ NEIGHBOR X) (SETQ FLAG NIL) NIL))
                   (T (PROGN (SETQ FLAG NIL) (SETQ NEIGHBOR NIL) NIL))))))
               NIL)))
            NIL)))
         (SETQ NEIGHBORS (CDR NEIGHBORS))
         NIL)
        (GO WHILELABEL))
      (COND (FLAG (RETURN T)) (T (RETURN NEIGHBOR))))) 
(PUT 'QQE_LENGTH-GRAPH-NEIGHBOR 'NUMBER-OF-ARGS 3) 
(PUT 'QQE_LENGTH-GRAPH-NEIGHBOR 'DEFINED-ON-LINE '455) 
(PUT 'QQE_LENGTH-GRAPH-NEIGHBOR 'DEFINED-IN-FILE 'REDLOG/QQE/QQEMISC.RED) 
(PUT 'QQE_LENGTH-GRAPH-NEIGHBOR 'PROCEDURE_TYPE
     '(ARROW (TIMES GENERAL GENERAL GENERAL) GENERAL)) 
(DE QQE_LENGTH-GRAPH-NEIGHBOR (VAR LEFT EDGE) (LIST VAR LEFT EDGE)) 
(PUT 'QQE_LENGTH-GRAPH-INSERT-NEIGHBOR 'NUMBER-OF-ARGS 2) 
(PUT 'QQE_LENGTH-GRAPH-INSERT-NEIGHBOR 'DEFINED-ON-LINE '460) 
(PUT 'QQE_LENGTH-GRAPH-INSERT-NEIGHBOR 'DEFINED-IN-FILE 'REDLOG/QQE/QQEMISC.RED) 
(PUT 'QQE_LENGTH-GRAPH-INSERT-NEIGHBOR 'PROCEDURE_TYPE
     '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE QQE_LENGTH-GRAPH-INSERT-NEIGHBOR (VAR NEIGHBOR)
    (PUT VAR 'NEIGHBORS (CONS NEIGHBOR (GET VAR 'NEIGHBORS)))) 
(PUT 'QQE_LENGTH-GRAPH-IS-NEIGHBOR 'NUMBER-OF-ARGS 2) 
(PUT 'QQE_LENGTH-GRAPH-IS-NEIGHBOR 'DEFINED-ON-LINE '463) 
(PUT 'QQE_LENGTH-GRAPH-IS-NEIGHBOR 'DEFINED-IN-FILE 'REDLOG/QQE/QQEMISC.RED) 
(PUT 'QQE_LENGTH-GRAPH-IS-NEIGHBOR 'PROCEDURE_TYPE
     '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE QQE_LENGTH-GRAPH-IS-NEIGHBOR (VAR_1 VAR_2)
    (PROG (FLAG NEIGHBORS NEIGHBOR)
      (SETQ FLAG NIL)
      (SETQ NEIGHBORS (QQE_LENGTH-GRAPH-NEIGHBORS VAR_1))
      (PROG ()
       WHILELABEL
        (COND ((NOT (AND (NULL FLAG) NEIGHBORS)) (RETURN NIL)))
        (PROGN
         (SETQ NEIGHBOR (CAR NEIGHBORS))
         (COND
          ((EQ (QQE_LENGTH-GRAPH-NEIGHBOR-NODE NEIGHBOR) VAR_2) (SETQ FLAG T)))
         (SETQ NEIGHBORS (CDR NEIGHBORS))
         NIL)
        (GO WHILELABEL))
      (RETURN (COND (FLAG NEIGHBOR) (T NIL))))) 
(PUT 'QQE_LENGTH-GRAPH-DELETE-NEIGHBOR 'NUMBER-OF-ARGS 2) 
(PUT 'QQE_LENGTH-GRAPH-DELETE-NEIGHBOR 'DEFINED-ON-LINE '480) 
(PUT 'QQE_LENGTH-GRAPH-DELETE-NEIGHBOR 'DEFINED-IN-FILE 'REDLOG/QQE/QQEMISC.RED) 
(PUT 'QQE_LENGTH-GRAPH-DELETE-NEIGHBOR 'PROCEDURE_TYPE
     '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE QQE_LENGTH-GRAPH-DELETE-NEIGHBOR (VAR NEIGHBOR)
    (PROG (NEIGHBORS NEIGHBORS2 FLAG)
      (SETQ NEIGHBORS (QQE_LENGTH-GRAPH-NEIGHBORS VAR))
      (PROG ()
       WHILELABEL
        (COND ((NOT (AND (NULL FLAG) NEIGHBORS)) (RETURN NIL)))
        (PROGN
         (COND
          ((EQ NEIGHBOR (CAR NEIGHBORS))
           (PROGN
            (SETQ FLAG T)
            (PUT VAR 'NEIGHBORS (APPEND NEIGHBORS2 (CDR NEIGHBORS)))
            NIL)))
         (SETQ NEIGHBORS2 (APPEND NEIGHBORS2 (LIST (CAR NEIGHBORS))))
         (SETQ NEIGHBORS (CDR NEIGHBORS))
         NIL)
        (GO WHILELABEL)))) 
(PUT 'QQE_LENGTH-GRAPH-EDGE 'NUMBER-OF-ARGS 3) 
(PUT 'QQE_LENGTH-GRAPH-EDGE 'DEFINED-ON-LINE '496) 
(PUT 'QQE_LENGTH-GRAPH-EDGE 'DEFINED-IN-FILE 'REDLOG/QQE/QQEMISC.RED) 
(PUT 'QQE_LENGTH-GRAPH-EDGE 'PROCEDURE_TYPE
     '(ARROW (TIMES GENERAL GENERAL GENERAL) GENERAL)) 
(DE QQE_LENGTH-GRAPH-EDGE (EL ER DIFF) (LIST EL ER DIFF)) 
(PUT 'QQE_LENGTH-GRAPH-NEIGHBOR-LEFT-ON-EDGE 'NUMBER-OF-ARGS 1) 
(PUT 'QQE_LENGTH-GRAPH-NEIGHBOR-LEFT-ON-EDGE 'DEFINED-ON-LINE '501) 
(PUT 'QQE_LENGTH-GRAPH-NEIGHBOR-LEFT-ON-EDGE 'DEFINED-IN-FILE
     'REDLOG/QQE/QQEMISC.RED) 
(PUT 'QQE_LENGTH-GRAPH-NEIGHBOR-LEFT-ON-EDGE 'PROCEDURE_TYPE
     '(ARROW GENERAL GENERAL)) 
(DE QQE_LENGTH-GRAPH-NEIGHBOR-LEFT-ON-EDGE (NEIGHBOR) (CADR NEIGHBOR)) 
(PUT 'QQE_LENGTH-GRAPH-NEIGHBOR-EDGE1 'NUMBER-OF-ARGS 1) 
(PUT 'QQE_LENGTH-GRAPH-NEIGHBOR-EDGE1 'DEFINED-ON-LINE '506) 
(PUT 'QQE_LENGTH-GRAPH-NEIGHBOR-EDGE1 'DEFINED-IN-FILE 'REDLOG/QQE/QQEMISC.RED) 
(PUT 'QQE_LENGTH-GRAPH-NEIGHBOR-EDGE1 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE QQE_LENGTH-GRAPH-NEIGHBOR-EDGE1 (NEIGHBOR)
    (COND
     ((QQE_LENGTH-GRAPH-NEIGHBOR-LEFT-ON-EDGE NEIGHBOR)
      (QQE_LENGTH-GRAPH-NEIGHBOR-EDGE-LEFT NEIGHBOR))
     (T (QQE_LENGTH-GRAPH-NEIGHBOR-EDGE-RIGHT NEIGHBOR)))) 
(PUT 'QQE_LENGTH-GRAPH-NEIGHBOR-EDGE2 'NUMBER-OF-ARGS 1) 
(PUT 'QQE_LENGTH-GRAPH-NEIGHBOR-EDGE2 'DEFINED-ON-LINE '514) 
(PUT 'QQE_LENGTH-GRAPH-NEIGHBOR-EDGE2 'DEFINED-IN-FILE 'REDLOG/QQE/QQEMISC.RED) 
(PUT 'QQE_LENGTH-GRAPH-NEIGHBOR-EDGE2 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE QQE_LENGTH-GRAPH-NEIGHBOR-EDGE2 (NEIGHBOR)
    (COND
     ((QQE_LENGTH-GRAPH-NEIGHBOR-LEFT-ON-EDGE NEIGHBOR)
      (QQE_LENGTH-GRAPH-NEIGHBOR-EDGE-RIGHT NEIGHBOR))
     (T (QQE_LENGTH-GRAPH-NEIGHBOR-EDGE-LEFT NEIGHBOR)))) 
(PUT 'QQE_LENGTH-GRAPH-NEIGHBOR-EDGE 'NUMBER-OF-ARGS 1) 
(PUT 'QQE_LENGTH-GRAPH-NEIGHBOR-EDGE 'DEFINED-ON-LINE '522) 
(PUT 'QQE_LENGTH-GRAPH-NEIGHBOR-EDGE 'DEFINED-IN-FILE 'REDLOG/QQE/QQEMISC.RED) 
(PUT 'QQE_LENGTH-GRAPH-NEIGHBOR-EDGE 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE QQE_LENGTH-GRAPH-NEIGHBOR-EDGE (NEIGHBOR) (CAR (CDDR NEIGHBOR))) 
(PUT 'QQE_LENGTH-GRAPH-NEIGHBOR-EDGE-LEFT 'NUMBER-OF-ARGS 1) 
(PUT 'QQE_LENGTH-GRAPH-NEIGHBOR-EDGE-LEFT 'DEFINED-ON-LINE '527) 
(PUT 'QQE_LENGTH-GRAPH-NEIGHBOR-EDGE-LEFT 'DEFINED-IN-FILE
     'REDLOG/QQE/QQEMISC.RED) 
(PUT 'QQE_LENGTH-GRAPH-NEIGHBOR-EDGE-LEFT 'PROCEDURE_TYPE
     '(ARROW GENERAL GENERAL)) 
(DE QQE_LENGTH-GRAPH-NEIGHBOR-EDGE-LEFT (NEIGHBOR)
    (QQE_LENGTH-GRAPH-EDGE-EL (QQE_LENGTH-GRAPH-NEIGHBOR-EDGE NEIGHBOR))) 
(PUT 'QQE_LENGTH-GRAPH-NEIGHBOR-EDGE-RIGHT 'NUMBER-OF-ARGS 1) 
(PUT 'QQE_LENGTH-GRAPH-NEIGHBOR-EDGE-RIGHT 'DEFINED-ON-LINE '533) 
(PUT 'QQE_LENGTH-GRAPH-NEIGHBOR-EDGE-RIGHT 'DEFINED-IN-FILE
     'REDLOG/QQE/QQEMISC.RED) 
(PUT 'QQE_LENGTH-GRAPH-NEIGHBOR-EDGE-RIGHT 'PROCEDURE_TYPE
     '(ARROW GENERAL GENERAL)) 
(DE QQE_LENGTH-GRAPH-NEIGHBOR-EDGE-RIGHT (NEIGHBOR)
    (QQE_LENGTH-GRAPH-EDGE-ER (QQE_LENGTH-GRAPH-NEIGHBOR-EDGE NEIGHBOR))) 
(PUT 'QQE_LENGTH-GRAPH-NEIGHBOR-EDGE-DIFF 'NUMBER-OF-ARGS 1) 
(PUT 'QQE_LENGTH-GRAPH-NEIGHBOR-EDGE-DIFF 'DEFINED-ON-LINE '539) 
(PUT 'QQE_LENGTH-GRAPH-NEIGHBOR-EDGE-DIFF 'DEFINED-IN-FILE
     'REDLOG/QQE/QQEMISC.RED) 
(PUT 'QQE_LENGTH-GRAPH-NEIGHBOR-EDGE-DIFF 'PROCEDURE_TYPE
     '(ARROW GENERAL GENERAL)) 
(DE QQE_LENGTH-GRAPH-NEIGHBOR-EDGE-DIFF (NEIGHBOR)
    (CADDR (QQE_LENGTH-GRAPH-NEIGHBOR-EDGE NEIGHBOR))) 
(PUT 'QQE_LENGTH-GRAPH-EDGE-MARK 'NUMBER-OF-ARGS 1) 
(PUT 'QQE_LENGTH-GRAPH-EDGE-MARK 'DEFINED-ON-LINE '544) 
(PUT 'QQE_LENGTH-GRAPH-EDGE-MARK 'DEFINED-IN-FILE 'REDLOG/QQE/QQEMISC.RED) 
(PUT 'QQE_LENGTH-GRAPH-EDGE-MARK 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE QQE_LENGTH-GRAPH-EDGE-MARK (EDGE)
    (SETCDR EDGE (APPEND (CDR EDGE) (LIST T)))) 
(PUT 'QQE_LENGTH-GRAPH-EDGE-MARKED 'NUMBER-OF-ARGS 1) 
(PUT 'QQE_LENGTH-GRAPH-EDGE-MARKED 'DEFINED-ON-LINE '549) 
(PUT 'QQE_LENGTH-GRAPH-EDGE-MARKED 'DEFINED-IN-FILE 'REDLOG/QQE/QQEMISC.RED) 
(PUT 'QQE_LENGTH-GRAPH-EDGE-MARKED 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE QQE_LENGTH-GRAPH-EDGE-MARKED (EDGE) (CDDDR EDGE)) 
(PUT 'QQE_LENGTH-GRAPH-EDGE-UNMARK 'NUMBER-OF-ARGS 1) 
(PUT 'QQE_LENGTH-GRAPH-EDGE-UNMARK 'DEFINED-ON-LINE '554) 
(PUT 'QQE_LENGTH-GRAPH-EDGE-UNMARK 'DEFINED-IN-FILE 'REDLOG/QQE/QQEMISC.RED) 
(PUT 'QQE_LENGTH-GRAPH-EDGE-UNMARK 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE QQE_LENGTH-GRAPH-EDGE-UNMARK (EDGE)
    (COND
     ((QQE_LENGTH-GRAPH-EDGE-MARKED EDGE)
      (SETCDR (CDR EDGE) (LIST (CADDR EDGE)))))) 
(PUT 'QQE_LENGTH-GRAPH-EDGE-EL 'NUMBER-OF-ARGS 1) 
(PUT 'QQE_LENGTH-GRAPH-EDGE-EL 'DEFINED-ON-LINE '560) 
(PUT 'QQE_LENGTH-GRAPH-EDGE-EL 'DEFINED-IN-FILE 'REDLOG/QQE/QQEMISC.RED) 
(PUT 'QQE_LENGTH-GRAPH-EDGE-EL 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE QQE_LENGTH-GRAPH-EDGE-EL (EDGE) (CAR EDGE)) 
(PUT 'QQE_LENGTH-GRAPH-EDGE-ER 'NUMBER-OF-ARGS 1) 
(PUT 'QQE_LENGTH-GRAPH-EDGE-ER 'DEFINED-ON-LINE '565) 
(PUT 'QQE_LENGTH-GRAPH-EDGE-ER 'DEFINED-IN-FILE 'REDLOG/QQE/QQEMISC.RED) 
(PUT 'QQE_LENGTH-GRAPH-EDGE-ER 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE QQE_LENGTH-GRAPH-EDGE-ER (EDGE) (CADR EDGE)) 
(PUT 'QQE_LENGTH-GRAPH-EDGE-DIFF 'NUMBER-OF-ARGS 1) 
(PUT 'QQE_LENGTH-GRAPH-EDGE-DIFF 'DEFINED-ON-LINE '570) 
(PUT 'QQE_LENGTH-GRAPH-EDGE-DIFF 'DEFINED-IN-FILE 'REDLOG/QQE/QQEMISC.RED) 
(PUT 'QQE_LENGTH-GRAPH-EDGE-DIFF 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE QQE_LENGTH-GRAPH-EDGE-DIFF (EDGE) (CADDR EDGE)) 
(PUT 'QQE_LENGTH-GRAPH-NEIGHBOR-DIFF 'NUMBER-OF-ARGS 1) 
(PUT 'QQE_LENGTH-GRAPH-NEIGHBOR-DIFF 'DEFINED-ON-LINE '575) 
(PUT 'QQE_LENGTH-GRAPH-NEIGHBOR-DIFF 'DEFINED-IN-FILE 'REDLOG/QQE/QQEMISC.RED) 
(PUT 'QQE_LENGTH-GRAPH-NEIGHBOR-DIFF 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE QQE_LENGTH-GRAPH-NEIGHBOR-DIFF (NEIGHBOR)
    (COND
     ((QQE_LENGTH-GRAPH-NEIGHBOR-LEFT-ON-EDGE NEIGHBOR)
      (QQE_LENGTH-GRAPH-EDGE-DIFF (QQE_LENGTH-GRAPH-NEIGHBOR-EDGE NEIGHBOR)))
     (T
      (MINUS
       (QQE_LENGTH-GRAPH-EDGE-DIFF
        (QQE_LENGTH-GRAPH-NEIGHBOR-EDGE NEIGHBOR)))))) 
(PUT 'QQE_LENGTH-GRAPH-NEIGHBOR-NODE 'NUMBER-OF-ARGS 1) 
(PUT 'QQE_LENGTH-GRAPH-NEIGHBOR-NODE 'DEFINED-ON-LINE '586) 
(PUT 'QQE_LENGTH-GRAPH-NEIGHBOR-NODE 'DEFINED-IN-FILE 'REDLOG/QQE/QQEMISC.RED) 
(PUT 'QQE_LENGTH-GRAPH-NEIGHBOR-NODE 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE QQE_LENGTH-GRAPH-NEIGHBOR-NODE (NEIGHBOR) (CAR NEIGHBOR)) 
(PUT 'QQE_LENGTH-GRAPH-NEIGHBORS 'NUMBER-OF-ARGS 1) 
(PUT 'QQE_LENGTH-GRAPH-NEIGHBORS 'DEFINED-ON-LINE '591) 
(PUT 'QQE_LENGTH-GRAPH-NEIGHBORS 'DEFINED-IN-FILE 'REDLOG/QQE/QQEMISC.RED) 
(PUT 'QQE_LENGTH-GRAPH-NEIGHBORS 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE QQE_LENGTH-GRAPH-NEIGHBORS (NODE) (GET NODE 'NEIGHBORS)) 
(PUT 'QQE_UPDATE-MINLENGTH 'NUMBER-OF-ARGS 2) 
(PUT 'QQE_UPDATE-MINLENGTH 'DEFINED-ON-LINE '596) 
(PUT 'QQE_UPDATE-MINLENGTH 'DEFINED-IN-FILE 'REDLOG/QQE/QQEMISC.RED) 
(PUT 'QQE_UPDATE-MINLENGTH 'PROCEDURE_TYPE
     '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE QQE_UPDATE-MINLENGTH (VAR LENGTH)
    ((LAMBDA (MINLENGTH)
       (PROGN
        (COND
         ((OR (NULL MINLENGTH) (LESSP MINLENGTH LENGTH))
          (PUT VAR 'MINLENGTH LENGTH)))))
     (GET VAR 'MINLENGTH))) 
(PUT 'QQE_UPDATE-MAXLENGTH 'NUMBER-OF-ARGS 2) 
(PUT 'QQE_UPDATE-MAXLENGTH 'DEFINED-ON-LINE '604) 
(PUT 'QQE_UPDATE-MAXLENGTH 'DEFINED-IN-FILE 'REDLOG/QQE/QQEMISC.RED) 
(PUT 'QQE_UPDATE-MAXLENGTH 'PROCEDURE_TYPE
     '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE QQE_UPDATE-MAXLENGTH (VAR LENGTH)
    ((LAMBDA (MAXLENGTH)
       (PROGN
        (COND
         ((OR (NULL MAXLENGTH) (GREATERP MAXLENGTH LENGTH))
          (PUT VAR 'MAXLENGTH LENGTH)))))
     (GET VAR 'MAXLENGTH))) 
(PUT 'QQE_UPDATE-HEADMIN 'NUMBER-OF-ARGS 2) 
(PUT 'QQE_UPDATE-HEADMIN 'DEFINED-ON-LINE '612) 
(PUT 'QQE_UPDATE-HEADMIN 'DEFINED-IN-FILE 'REDLOG/QQE/QQEMISC.RED) 
(PUT 'QQE_UPDATE-HEADMIN 'PROCEDURE_TYPE
     '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE QQE_UPDATE-HEADMIN (AT VAR_LIST)
    (PROG ()
      (SETQ VAR_LIST (QQE_LENGTH-GRAPH-BTERM (CADR AT) VAR_LIST))
      (SETQ VAR_LIST (QQE_LENGTH-GRAPH-BTERM (CADDR AT) VAR_LIST))
      (RETURN VAR_LIST))) 
(PUT 'QQE_LENGTH-GRAPH-DETECT-BAD-CIRCLES 'NUMBER-OF-ARGS 1) 
(PUT 'QQE_LENGTH-GRAPH-DETECT-BAD-CIRCLES 'DEFINED-ON-LINE '626) 
(PUT 'QQE_LENGTH-GRAPH-DETECT-BAD-CIRCLES 'DEFINED-IN-FILE
     'REDLOG/QQE/QQEMISC.RED) 
(PUT 'QQE_LENGTH-GRAPH-DETECT-BAD-CIRCLES 'PROCEDURE_TYPE
     '(ARROW GENERAL GENERAL)) 
(DE QQE_LENGTH-GRAPH-DETECT-BAD-CIRCLES (NODES)
    (PROG (BAD_CIRCLES NEW_NODES NEW_EDGES NEW_BAD-CIRCLES)
      (PROG (X)
        (SETQ X NODES)
       LAB
        (COND ((NULL X) (RETURN NIL)))
        ((LAMBDA (X)
           (COND
            ((NOT (QQE_LENGTH-GRAPH-MARKED X))
             (PROGN
              ((LAMBDA (Y)
                 (PROGN
                  (SETQ NEW_BAD-CIRCLES (CAR Y))
                  (SETQ NEW_NODES (APPEND NEW_NODES (CADR Y)))
                  (SETQ NEW_EDGES (APPEND NEW_EDGES (CADDR Y)))
                  (COND
                   (QQE_DEBUG*
                    (PRIN2T (LIST "bad circles component returned" Y))))
                  NIL))
               (QQE_LENGTH-GRAPH-DETECT-BAD-CIRCLES-COMPONENT X 0 NIL 0))
              (COND
               (NEW_BAD-CIRCLES
                (SETQ BAD_CIRCLES (APPEND NEW_BAD-CIRCLES BAD_CIRCLES))))
              NIL))))
         (CAR X))
        (SETQ X (CDR X))
        (GO LAB))
      (QQE_LENGTH-GRAPH-DETECT-BAD-CIRCLES-CLEAN-UP NEW_NODES NEW_EDGES)
      (RETURN BAD_CIRCLES))) 
(PUT 'QQE_LENGTH-GRAPH-DETECT-BAD-CIRCLES-CLEAN-UP 'NUMBER-OF-ARGS 2) 
(PUT 'QQE_LENGTH-GRAPH-DETECT-BAD-CIRCLES-CLEAN-UP 'DEFINED-ON-LINE '649) 
(PUT 'QQE_LENGTH-GRAPH-DETECT-BAD-CIRCLES-CLEAN-UP 'DEFINED-IN-FILE
     'REDLOG/QQE/QQEMISC.RED) 
(PUT 'QQE_LENGTH-GRAPH-DETECT-BAD-CIRCLES-CLEAN-UP 'PROCEDURE_TYPE
     '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE QQE_LENGTH-GRAPH-DETECT-BAD-CIRCLES-CLEAN-UP (NODES EDGES)
    (PROGN
     (QQE_LENGTH-GRAPH-DETECT-BAD-CIRCLES-REM-MARKS-NODES NODES)
     (QQE_LENGTH-GRAPH-DETECT-BAD-CIRCLES-REM-MARKS-EDGES EDGES)
     NIL)) 
(PUT 'QQE_LENGTH-GRAPH-REMOVE-EDGE-MARKS 'NUMBER-OF-ARGS 1) 
(PUT 'QQE_LENGTH-GRAPH-REMOVE-EDGE-MARKS 'DEFINED-ON-LINE '659) 
(PUT 'QQE_LENGTH-GRAPH-REMOVE-EDGE-MARKS 'DEFINED-IN-FILE
     'REDLOG/QQE/QQEMISC.RED) 
(PUT 'QQE_LENGTH-GRAPH-REMOVE-EDGE-MARKS 'PROCEDURE_TYPE
     '(ARROW GENERAL GENERAL)) 
(DE QQE_LENGTH-GRAPH-REMOVE-EDGE-MARKS (EDGES)
    (PROG (X)
      (SETQ X EDGES)
     LAB
      (COND ((NULL X) (RETURN NIL)))
      ((LAMBDA (X)
         (QQE_LENGTH-GRAPH-REMOVE-EDGE-MARKS-NEIGHBORS
          (QQE_LENGTH-GRAPH-NEIGHBORS X)))
       (CAR X))
      (SETQ X (CDR X))
      (GO LAB))) 
(PUT 'QQE_LENGTH-GRAPH-REMOVE-EDGE-MARKS-NEIGHBORS 'NUMBER-OF-ARGS 1) 
(PUT 'QQE_LENGTH-GRAPH-REMOVE-EDGE-MARKS-NEIGHBORS 'DEFINED-ON-LINE '666) 
(PUT 'QQE_LENGTH-GRAPH-REMOVE-EDGE-MARKS-NEIGHBORS 'DEFINED-IN-FILE
     'REDLOG/QQE/QQEMISC.RED) 
(PUT 'QQE_LENGTH-GRAPH-REMOVE-EDGE-MARKS-NEIGHBORS 'PROCEDURE_TYPE
     '(ARROW GENERAL GENERAL)) 
(DE QQE_LENGTH-GRAPH-REMOVE-EDGE-MARKS-NEIGHBORS (NEIGHBORS)
    (PROG (X)
      (SETQ X NEIGHBORS)
     LAB
      (COND ((NULL X) (RETURN NIL)))
      ((LAMBDA (X)
         (QQE_LENGTH-GRAPH-EDGE-UNMARK (QQE_LENGTH-GRAPH-NEIGHBOR-EDGE X)))
       (CAR X))
      (SETQ X (CDR X))
      (GO LAB))) 
(PUT 'QQE_GRAPH-GET-DFSNUM 'NUMBER-OF-ARGS 1) 
(PUT 'QQE_GRAPH-GET-DFSNUM 'DEFINED-ON-LINE '673) 
(PUT 'QQE_GRAPH-GET-DFSNUM 'DEFINED-IN-FILE 'REDLOG/QQE/QQEMISC.RED) 
(PUT 'QQE_GRAPH-GET-DFSNUM 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE QQE_GRAPH-GET-DFSNUM (NODE) (GET NODE 'DFSNUM)) 
(PUT 'QQE_GRAPH-PUT-DFSNUM 'NUMBER-OF-ARGS 2) 
(PUT 'QQE_GRAPH-PUT-DFSNUM 'DEFINED-ON-LINE '678) 
(PUT 'QQE_GRAPH-PUT-DFSNUM 'DEFINED-IN-FILE 'REDLOG/QQE/QQEMISC.RED) 
(PUT 'QQE_GRAPH-PUT-DFSNUM 'PROCEDURE_TYPE
     '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE QQE_GRAPH-PUT-DFSNUM (NODE NUM) (PUT NODE 'DFSNUM NUM)) 
(PUT 'QQE_GRAPH-REM-DFSNUM 'NUMBER-OF-ARGS 1) 
(PUT 'QQE_GRAPH-REM-DFSNUM 'DEFINED-ON-LINE '683) 
(PUT 'QQE_GRAPH-REM-DFSNUM 'DEFINED-IN-FILE 'REDLOG/QQE/QQEMISC.RED) 
(PUT 'QQE_GRAPH-REM-DFSNUM 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE QQE_GRAPH-REM-DFSNUM (NODE) (REMPROP NODE 'DFSNUM)) 
(PUT 'QQE_LENGTH-GRAPH-DETECT-BAD-CIRCLES-COMPONENT 'NUMBER-OF-ARGS 4) 
(PUT 'QQE_LENGTH-GRAPH-DETECT-BAD-CIRCLES-COMPONENT 'DEFINED-ON-LINE '688) 
(PUT 'QQE_LENGTH-GRAPH-DETECT-BAD-CIRCLES-COMPONENT 'DEFINED-IN-FILE
     'REDLOG/QQE/QQEMISC.RED) 
(PUT 'QQE_LENGTH-GRAPH-DETECT-BAD-CIRCLES-COMPONENT 'PROCEDURE_TYPE
     '(ARROW (TIMES GENERAL GENERAL GENERAL GENERAL) GENERAL)) 
(DE QQE_LENGTH-GRAPH-DETECT-BAD-CIRCLES-COMPONENT (NODE SIGMA PATH DFSNUM)
    (PROG (BAD_CIRCLES NODEX SIGMAX EDGEX LEFTX NEW_NODES NEW_EDGES
           BAD_CIRCLES-BRANCH)
      (COND
       (QQE_DEBUG*
        (PRIN2T
         (LIST "qqe_graph!-detect!-bad!-circles with node = " NODE "sigma = "
               SIGMA "path = " PATH))))
      (QQE_LENGTH-GRAPH-MARK NODE)
      (QQE_GRAPH-PUT-DFSNUM NODE DFSNUM)
      (SETQ NEW_NODES (LIST NODE))
      (SETQ DFSNUM (PLUS DFSNUM 1))
      (PUT NODE 'BLOCKSUM SIGMA)
      (SETQ PATH (QQE_LENGTH-GRAPH-PATH-INSERT-NODE-RIGHT PATH NODE))
      (PROG (X)
        (SETQ X (QQE_LENGTH-GRAPH-NEIGHBORS NODE))
       LAB
        (COND ((NULL X) (RETURN NIL)))
        ((LAMBDA (X)
           (PROGN
            (SETQ SIGMAX (PLUS SIGMA (QQE_LENGTH-GRAPH-NEIGHBOR-DIFF X)))
            (SETQ NODEX (QQE_LENGTH-GRAPH-NEIGHBOR-NODE X))
            (SETQ EDGEX (QQE_LENGTH-GRAPH-NEIGHBOR-EDGE X))
            (SETQ LEFTX (QQE_LENGTH-GRAPH-NEIGHBOR-LEFT-ON-EDGE X))
            (COND
             ((AND (NOT (QQE_LENGTH-GRAPH-NEIGHBOR-MARKED X))
                   (NOT (QQE_LENGTH-GRAPH-EDGE-MARKED EDGEX)))
              (PROGN
               (COND (QQE_DEBUG* (PRIN2T (LIST "no circle with " NODEX))))
               (QQE_LENGTH-GRAPH-EDGE-MARK EDGEX)
               (SETQ NEW_EDGES (CONS EDGEX NEW_EDGES))
               ((LAMBDA (X)
                  (PROGN
                   (SETQ BAD_CIRCLES-BRANCH (CAR X))
                   (SETQ NEW_NODES (APPEND NEW_NODES (CADR X)))
                   (SETQ NEW_EDGES (APPEND NEW_EDGES (CADDR X)))
                   NIL))
                (QQE_LENGTH-GRAPH-DETECT-BAD-CIRCLES-COMPONENT NODEX SIGMAX
                 (QQE_LENGTH-GRAPH-PATH-INSERT-EDGE-RIGHT PATH EDGEX LEFTX)
                 DFSNUM))
               (COND
                ((AND BAD_CIRCLES BAD_CIRCLES-BRANCH)
                 (SETQ BAD_CIRCLES (CONS BAD_CIRCLES-BRANCH BAD_CIRCLES)))
                (BAD_CIRCLES-BRANCH
                 (SETQ BAD_CIRCLES (LIST BAD_CIRCLES-BRANCH))))
               NIL))
             ((NOT (QQE_LENGTH-GRAPH-EDGE-MARKED EDGEX))
              (PROGN
               (COND
                (QQE_DEBUG*
                 (PRIN2T (LIST "circle with sum=" SIGMAX NODE NODEX))))
               (QQE_LENGTH-GRAPH-EDGE-MARK EDGEX)
               (SETQ NEW_EDGES (CONS EDGEX NEW_EDGES))
               (COND
                ((NOT (EQUAL SIGMAX (GET NODEX 'BLOCKSUM)))
                 (PROGN
                  (COND (QQE_DEBUG* (PRIN2T "detect blocks : !!! bad_cycle")))
                  (SETQ BAD_CIRCLES
                          (COND
                           (BAD_CIRCLES
                            (CONS
                             (LIST
                              (QQE_LENGTH-GRAPH-GET-CIRCLE
                               (QQE_LENGTH-GRAPH-PATH-INSERT-EDGE-RIGHT PATH
                                EDGEX LEFTX)
                               NODEX))
                             BAD_CIRCLES))
                           (T
                            (LIST
                             (LIST
                              (QQE_LENGTH-GRAPH-GET-CIRCLE
                               (QQE_LENGTH-GRAPH-PATH-INSERT-EDGE-RIGHT PATH
                                EDGEX LEFTX)
                               NODEX))))))
                  (PUT NODE 'BAD_CYCLE T)
                  NIL)))
               NIL)))
            NIL))
         (CAR X))
        (SETQ X (CDR X))
        (GO LAB))
      (COND
       (QQE_DEBUG*
        (PRIN2T
         (LIST "return from node = " NODE "with bad_circles = " BAD_CIRCLES))))
      (SETQ BAD_CIRCLES
              (QQE_LENGTH-GRAPH-SHUFFLE-CIRCLE-PSETS BAD_CIRCLES NODE))
      (RETURN (LIST BAD_CIRCLES NEW_NODES NEW_EDGES)))) 
(PUT 'QQE_LENGTH-GRAPH-DETECT-BAD-CIRCLES-REM-MARKS-NODES 'NUMBER-OF-ARGS 1) 
(PUT 'QQE_LENGTH-GRAPH-DETECT-BAD-CIRCLES-REM-MARKS-NODES 'DEFINED-ON-LINE '757) 
(PUT 'QQE_LENGTH-GRAPH-DETECT-BAD-CIRCLES-REM-MARKS-NODES 'DEFINED-IN-FILE
     'REDLOG/QQE/QQEMISC.RED) 
(PUT 'QQE_LENGTH-GRAPH-DETECT-BAD-CIRCLES-REM-MARKS-NODES 'PROCEDURE_TYPE
     '(ARROW GENERAL GENERAL)) 
(DE QQE_LENGTH-GRAPH-DETECT-BAD-CIRCLES-REM-MARKS-NODES (NODES)
    (PROG (NODE)
      (SETQ NODE NODES)
     LAB
      (COND ((NULL NODE) (RETURN NIL)))
      ((LAMBDA (NODE)
         (PROGN
          (QQE_LENGTH-GRAPH-UNMARK NODE)
          (REMPROP NODE 'BLOCKSUM)
          (QQE_GRAPH-REM-DFSNUM NODE)
          NIL))
       (CAR NODE))
      (SETQ NODE (CDR NODE))
      (GO LAB))) 
(PUT 'QQE_LENGTH-GRAPH-DETECT-BAD-CIRCLES-REM-MARKS-EDGES 'NUMBER-OF-ARGS 1) 
(PUT 'QQE_LENGTH-GRAPH-DETECT-BAD-CIRCLES-REM-MARKS-EDGES 'DEFINED-ON-LINE '766) 
(PUT 'QQE_LENGTH-GRAPH-DETECT-BAD-CIRCLES-REM-MARKS-EDGES 'DEFINED-IN-FILE
     'REDLOG/QQE/QQEMISC.RED) 
(PUT 'QQE_LENGTH-GRAPH-DETECT-BAD-CIRCLES-REM-MARKS-EDGES 'PROCEDURE_TYPE
     '(ARROW GENERAL GENERAL)) 
(DE QQE_LENGTH-GRAPH-DETECT-BAD-CIRCLES-REM-MARKS-EDGES (EDGES)
    (PROG (X)
      (SETQ X EDGES)
     LAB
      (COND ((NULL X) (RETURN NIL)))
      ((LAMBDA (X) (QQE_LENGTH-GRAPH-EDGE-UNMARK X)) (CAR X))
      (SETQ X (CDR X))
      (GO LAB))) 
(PUT 'QQE_LENGTH-GRAPH-GET-CIRCLE 'NUMBER-OF-ARGS 2) 
(PUT 'QQE_LENGTH-GRAPH-GET-CIRCLE 'DEFINED-ON-LINE '772) 
(PUT 'QQE_LENGTH-GRAPH-GET-CIRCLE 'DEFINED-IN-FILE 'REDLOG/QQE/QQEMISC.RED) 
(PUT 'QQE_LENGTH-GRAPH-GET-CIRCLE 'PROCEDURE_TYPE
     '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE QQE_LENGTH-GRAPH-GET-CIRCLE (PATH NODE)
    (PROG ()
      (PROG ()
       WHILELABEL
        (COND ((NOT (NEQ (CAR PATH) NODE)) (RETURN NIL)))
        (SETQ PATH (CDR PATH))
        (GO WHILELABEL))
      (RETURN PATH))) 
(PUT 'QQE_PRINT-PROP-PATH 'NUMBER-OF-ARGS 2) 
(PUT 'QQE_PRINT-PROP-PATH 'DEFINED-ON-LINE '781) 
(PUT 'QQE_PRINT-PROP-PATH 'DEFINED-IN-FILE 'REDLOG/QQE/QQEMISC.RED) 
(PUT 'QQE_PRINT-PROP-PATH 'PROCEDURE_TYPE
     '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE QQE_PRINT-PROP-PATH (LIST PROP)
    (PROG ()
     WHILELABEL
      (COND ((NOT LIST) (RETURN NIL)))
      (PROGN (SETQ LIST (QQE_LENGTH-GRAPH-PATH-STEP LIST)) NIL)
      (GO WHILELABEL))) 
(PUT 'QQE_LENGTH-GRAPH-MAXLENGTH-BAD-CIRCLES 'NUMBER-OF-ARGS 1) 
(PUT 'QQE_LENGTH-GRAPH-MAXLENGTH-BAD-CIRCLES 'DEFINED-ON-LINE '788) 
(PUT 'QQE_LENGTH-GRAPH-MAXLENGTH-BAD-CIRCLES 'DEFINED-IN-FILE
     'REDLOG/QQE/QQEMISC.RED) 
(PUT 'QQE_LENGTH-GRAPH-MAXLENGTH-BAD-CIRCLES 'PROCEDURE_TYPE
     '(ARROW GENERAL GENERAL)) 
(DE QQE_LENGTH-GRAPH-MAXLENGTH-BAD-CIRCLES (CIRCLES)
    (PROG (CIRCLE)
      (SETQ CIRCLE CIRCLES)
     LAB
      (COND ((NULL CIRCLE) (RETURN NIL)))
      ((LAMBDA (CIRCLE) (QQE_LENGTH-GRAPH-MAXLENGTH-BAD-CIRCLE CIRCLE))
       (CAR CIRCLE))
      (SETQ CIRCLE (CDR CIRCLE))
      (GO LAB))) 
(PUT 'QQE_LENGTH-GRAPH-MAXLENGTH-BAD-CIRCLE 'NUMBER-OF-ARGS 1) 
(PUT 'QQE_LENGTH-GRAPH-MAXLENGTH-BAD-CIRCLE 'DEFINED-ON-LINE '795) 
(PUT 'QQE_LENGTH-GRAPH-MAXLENGTH-BAD-CIRCLE 'DEFINED-IN-FILE
     'REDLOG/QQE/QQEMISC.RED) 
(PUT 'QQE_LENGTH-GRAPH-MAXLENGTH-BAD-CIRCLE 'PROCEDURE_TYPE
     '(ARROW GENERAL GENERAL)) 
(DE QQE_LENGTH-GRAPH-MAXLENGTH-BAD-CIRCLE (CIRCLE)
    (PROG (REV_CIRCLE TOP CIRCLE_EXT TOP_CIRCLE)
      (SETQ TOP_CIRCLE (CAR CIRCLE))
      (SETQ REV_CIRCLE (QQE_LENGTH-GRAPH-REVERSE-PATH CIRCLE))
      (SETQ REV_CIRCLE (APPEND REV_CIRCLE REV_CIRCLE))
      (SETQ CIRCLE_EXT (APPEND CIRCLE CIRCLE))
      (QQE_UPDATE-MAXLENGTH (CAR CIRCLE)
       (QQE_LENGTH-GRAPH-MAXLENGTH-BAD-CIRCLE1 CIRCLE_EXT))
      (SETQ CIRCLE_EXT (QQE_LENGTH-GRAPH-PATH-STEP CIRCLE_EXT))
      (SETQ TOP (CAR CIRCLE_EXT))
      (PROG ()
       WHILELABEL
        (COND ((NOT (NEQ TOP TOP_CIRCLE)) (RETURN NIL)))
        (PROGN
         (QQE_UPDATE-MAXLENGTH TOP
          (QQE_LENGTH-GRAPH-MAXLENGTH-BAD-CIRCLE1 CIRCLE_EXT))
         (SETQ CIRCLE_EXT (QQE_LENGTH-GRAPH-PATH-STEP CIRCLE_EXT))
         (SETQ TOP (CAR CIRCLE_EXT))
         NIL)
        (GO WHILELABEL))
      (QQE_UPDATE-MAXLENGTH (CAR REV_CIRCLE)
       (QQE_LENGTH-GRAPH-MAXLENGTH-BAD-CIRCLE1 REV_CIRCLE))
      (SETQ REV_CIRCLE (QQE_LENGTH-GRAPH-PATH-STEP REV_CIRCLE))
      (SETQ TOP (CAR REV_CIRCLE))
      (PROG ()
       WHILELABEL
        (COND ((NOT (NEQ TOP TOP_CIRCLE)) (RETURN NIL)))
        (PROGN
         (QQE_UPDATE-MAXLENGTH TOP
          (QQE_LENGTH-GRAPH-MAXLENGTH-BAD-CIRCLE1 REV_CIRCLE))
         (SETQ REV_CIRCLE (QQE_LENGTH-GRAPH-PATH-STEP REV_CIRCLE))
         (SETQ TOP (CAR REV_CIRCLE))
         NIL)
        (GO WHILELABEL))
      (SETQ CIRCLE_EXT CIRCLE)
      (PROG ()
       WHILELABEL
        (COND ((NOT CIRCLE_EXT) (RETURN NIL)))
        (PROGN
         (SETQ TOP (CAR CIRCLE_EXT))
         (QQE_LENGTH-GRAPH-UPDATE-MAXLENGTH-CONTEXT TOP (GET TOP 'MAXLENGTH))
         (SETQ CIRCLE_EXT (QQE_LENGTH-GRAPH-PATH-STEP CIRCLE_EXT))
         NIL)
        (GO WHILELABEL))
      (COND (QQE_DEBUG* (QQE_PRINT-PROP-PATH CIRCLE 'MAXLENGTH))))) 
(PUT 'QQE_LENGTH-GRAPH-PATH-NEXT-NODE 'NUMBER-OF-ARGS 1) 
(PUT 'QQE_LENGTH-GRAPH-PATH-NEXT-NODE 'DEFINED-ON-LINE '834) 
(PUT 'QQE_LENGTH-GRAPH-PATH-NEXT-NODE 'DEFINED-IN-FILE 'REDLOG/QQE/QQEMISC.RED) 
(PUT 'QQE_LENGTH-GRAPH-PATH-NEXT-NODE 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE QQE_LENGTH-GRAPH-PATH-NEXT-NODE (PATH)
    (COND ((CDR PATH) (COND ((CDDR PATH) (CADDR PATH)))))) 
(PUT 'QQE_LENGTH-GRAPH-PATH-STEP 'NUMBER-OF-ARGS 1) 
(PUT 'QQE_LENGTH-GRAPH-PATH-STEP 'DEFINED-ON-LINE '839) 
(PUT 'QQE_LENGTH-GRAPH-PATH-STEP 'DEFINED-IN-FILE 'REDLOG/QQE/QQEMISC.RED) 
(PUT 'QQE_LENGTH-GRAPH-PATH-STEP 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE QQE_LENGTH-GRAPH-PATH-STEP (PATH) (COND ((CDR PATH) (CDDR PATH)) (T NIL))) 
(PUT 'QQE_LENGTH-GRAPH-PATH-NEXT-EDGE 'NUMBER-OF-ARGS 1) 
(PUT 'QQE_LENGTH-GRAPH-PATH-NEXT-EDGE 'DEFINED-ON-LINE '844) 
(PUT 'QQE_LENGTH-GRAPH-PATH-NEXT-EDGE 'DEFINED-IN-FILE 'REDLOG/QQE/QQEMISC.RED) 
(PUT 'QQE_LENGTH-GRAPH-PATH-NEXT-EDGE 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE QQE_LENGTH-GRAPH-PATH-NEXT-EDGE (PATH)
    (COND ((CDR PATH) (CADR (CADR PATH))))) 
(PUT 'QQE_LENGTH-GRAPH-PATH-NEXT-EDGE-LEFT 'NUMBER-OF-ARGS 1) 
(PUT 'QQE_LENGTH-GRAPH-PATH-NEXT-EDGE-LEFT 'DEFINED-ON-LINE '849) 
(PUT 'QQE_LENGTH-GRAPH-PATH-NEXT-EDGE-LEFT 'DEFINED-IN-FILE
     'REDLOG/QQE/QQEMISC.RED) 
(PUT 'QQE_LENGTH-GRAPH-PATH-NEXT-EDGE-LEFT 'PROCEDURE_TYPE
     '(ARROW GENERAL GENERAL)) 
(DE QQE_LENGTH-GRAPH-PATH-NEXT-EDGE-LEFT (PATH)
    (COND ((CDR PATH) (CAR (CADR PATH))))) 
(PUT 'QQE_LENGTH-GRAPH-PATH-NEXT-EDGE-VALUE 'NUMBER-OF-ARGS 1) 
(PUT 'QQE_LENGTH-GRAPH-PATH-NEXT-EDGE-VALUE 'DEFINED-ON-LINE '854) 
(PUT 'QQE_LENGTH-GRAPH-PATH-NEXT-EDGE-VALUE 'DEFINED-IN-FILE
     'REDLOG/QQE/QQEMISC.RED) 
(PUT 'QQE_LENGTH-GRAPH-PATH-NEXT-EDGE-VALUE 'PROCEDURE_TYPE
     '(ARROW GENERAL GENERAL)) 
(DE QQE_LENGTH-GRAPH-PATH-NEXT-EDGE-VALUE (PATH)
    (COND
     ((QQE_LENGTH-GRAPH-PATH-NEXT-EDGE-LEFT PATH)
      (QQE_LENGTH-GRAPH-EDGE-EL (QQE_LENGTH-GRAPH-PATH-NEXT-EDGE PATH)))
     (T (QQE_LENGTH-GRAPH-EDGE-ER (QQE_LENGTH-GRAPH-PATH-NEXT-EDGE PATH))))) 
(PUT 'QQE_LENGTH-GRAPH-PATH-NEXT-EDGE-DIFF 'NUMBER-OF-ARGS 1) 
(PUT 'QQE_LENGTH-GRAPH-PATH-NEXT-EDGE-DIFF 'DEFINED-ON-LINE '864) 
(PUT 'QQE_LENGTH-GRAPH-PATH-NEXT-EDGE-DIFF 'DEFINED-IN-FILE
     'REDLOG/QQE/QQEMISC.RED) 
(PUT 'QQE_LENGTH-GRAPH-PATH-NEXT-EDGE-DIFF 'PROCEDURE_TYPE
     '(ARROW GENERAL GENERAL)) 
(DE QQE_LENGTH-GRAPH-PATH-NEXT-EDGE-DIFF (PATH)
    (COND
     ((QQE_LENGTH-GRAPH-PATH-NEXT-EDGE-LEFT PATH)
      (QQE_LENGTH-GRAPH-EDGE-DIFF (QQE_LENGTH-GRAPH-PATH-NEXT-EDGE PATH)))
     (T
      (MINUS
       (QQE_LENGTH-GRAPH-EDGE-DIFF (QQE_LENGTH-GRAPH-PATH-NEXT-EDGE PATH)))))) 
(PUT 'QQE_LENGTH-GRAPH-MAXLENGTH-BAD-CIRCLE1 'NUMBER-OF-ARGS 1) 
(PUT 'QQE_LENGTH-GRAPH-MAXLENGTH-BAD-CIRCLE1 'DEFINED-ON-LINE '873) 
(PUT 'QQE_LENGTH-GRAPH-MAXLENGTH-BAD-CIRCLE1 'DEFINED-IN-FILE
     'REDLOG/QQE/QQEMISC.RED) 
(PUT 'QQE_LENGTH-GRAPH-MAXLENGTH-BAD-CIRCLE1 'PROCEDURE_TYPE
     '(ARROW GENERAL GENERAL)) 
(DE QQE_LENGTH-GRAPH-MAXLENGTH-BAD-CIRCLE1 (CIRCLE)
    (PROG (MAXLENGTH SIGMA E NODE TOP)
      (SETQ MAXLENGTH (PLUS (QQE_LENGTH-GRAPH-PATH-NEXT-EDGE-VALUE CIRCLE) 1))
      (SETQ SIGMA
              (PLUS MAXLENGTH (QQE_LENGTH-GRAPH-PATH-NEXT-EDGE-DIFF CIRCLE)))
      (SETQ TOP (CAR CIRCLE))
      (PROG ()
       WHILELABEL
        (COND ((NOT (NEQ NODE TOP)) (RETURN NIL)))
        (PROGN
         (SETQ CIRCLE (QQE_LENGTH-GRAPH-PATH-STEP CIRCLE))
         (SETQ NODE (CAR CIRCLE))
         (SETQ E
                 (MAX 0
                      (PLUS
                       (DIFFERENCE
                        (QQE_LENGTH-GRAPH-PATH-NEXT-EDGE-VALUE CIRCLE) SIGMA)
                       1)))
         (SETQ MAXLENGTH (PLUS MAXLENGTH E))
         (SETQ SIGMA (PLUS SIGMA E))
         NIL)
        (GO WHILELABEL))
      (RETURN (DIFFERENCE MAXLENGTH 1)))) 
(PUT 'QQE_LENGTH-GRAPH-REVERSE-PATH 'NUMBER-OF-ARGS 1) 
(PUT 'QQE_LENGTH-GRAPH-REVERSE-PATH 'DEFINED-ON-LINE '891) 
(PUT 'QQE_LENGTH-GRAPH-REVERSE-PATH 'DEFINED-IN-FILE 'REDLOG/QQE/QQEMISC.RED) 
(PUT 'QQE_LENGTH-GRAPH-REVERSE-PATH 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE QQE_LENGTH-GRAPH-REVERSE-PATH (PATH)
    (PROG (FLAG REV_PATH)
      (SETQ FLAG T)
      (PROG (X)
        (SETQ X (CDR PATH))
       LAB
        (COND ((NULL X) (RETURN NIL)))
        ((LAMBDA (X)
           (PROGN
            (COND
             (FLAG
              (SETQ REV_PATH
                      (QQE_LENGTH-GRAPH-PATH-INSERT-EDGE-LEFT REV_PATH (CADR X)
                       (NOT (CAR X)))))
             (T (SETQ REV_PATH (CONS X REV_PATH))))
            (SETQ FLAG (NOT FLAG))
            NIL))
         (CAR X))
        (SETQ X (CDR X))
        (GO LAB))
      (RETURN (CONS (CAR PATH) REV_PATH)))) 
(PUT 'QQE_LENGTH-GRAPH-PATH-INSERT-EDGE-RIGHT 'NUMBER-OF-ARGS 3) 
(PUT 'QQE_LENGTH-GRAPH-PATH-INSERT-EDGE-RIGHT 'DEFINED-ON-LINE '907) 
(PUT 'QQE_LENGTH-GRAPH-PATH-INSERT-EDGE-RIGHT 'DEFINED-IN-FILE
     'REDLOG/QQE/QQEMISC.RED) 
(PUT 'QQE_LENGTH-GRAPH-PATH-INSERT-EDGE-RIGHT 'PROCEDURE_TYPE
     '(ARROW (TIMES GENERAL GENERAL GENERAL) GENERAL)) 
(DE QQE_LENGTH-GRAPH-PATH-INSERT-EDGE-RIGHT (PATH EDGE LEFT)
    (APPEND PATH (LIST (LIST LEFT EDGE)))) 
(PUT 'QQE_LENGTH-GRAPH-PATH-INSERT-EDGE-LEFT 'NUMBER-OF-ARGS 3) 
(PUT 'QQE_LENGTH-GRAPH-PATH-INSERT-EDGE-LEFT 'DEFINED-ON-LINE '912) 
(PUT 'QQE_LENGTH-GRAPH-PATH-INSERT-EDGE-LEFT 'DEFINED-IN-FILE
     'REDLOG/QQE/QQEMISC.RED) 
(PUT 'QQE_LENGTH-GRAPH-PATH-INSERT-EDGE-LEFT 'PROCEDURE_TYPE
     '(ARROW (TIMES GENERAL GENERAL GENERAL) GENERAL)) 
(DE QQE_LENGTH-GRAPH-PATH-INSERT-EDGE-LEFT (PATH EDGE LEFT)
    (CONS (LIST LEFT EDGE) PATH)) 
(PUT 'QQE_LENGTH-GRAPH-PATH-INSERT-NODE-RIGHT 'NUMBER-OF-ARGS 2) 
(PUT 'QQE_LENGTH-GRAPH-PATH-INSERT-NODE-RIGHT 'DEFINED-ON-LINE '917) 
(PUT 'QQE_LENGTH-GRAPH-PATH-INSERT-NODE-RIGHT 'DEFINED-IN-FILE
     'REDLOG/QQE/QQEMISC.RED) 
(PUT 'QQE_LENGTH-GRAPH-PATH-INSERT-NODE-RIGHT 'PROCEDURE_TYPE
     '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE QQE_LENGTH-GRAPH-PATH-INSERT-NODE-RIGHT (PATH NODE)
    (APPEND PATH (LIST NODE))) 
(PUT 'QQE_LENGTH-GRAPH-PATH-INSERT-NODE-LEFT 'NUMBER-OF-ARGS 2) 
(PUT 'QQE_LENGTH-GRAPH-PATH-INSERT-NODE-LEFT 'DEFINED-ON-LINE '923) 
(PUT 'QQE_LENGTH-GRAPH-PATH-INSERT-NODE-LEFT 'DEFINED-IN-FILE
     'REDLOG/QQE/QQEMISC.RED) 
(PUT 'QQE_LENGTH-GRAPH-PATH-INSERT-NODE-LEFT 'PROCEDURE_TYPE
     '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE QQE_LENGTH-GRAPH-PATH-INSERT-NODE-LEFT (PATH NODE) (CONS NODE PATH)) 
(PUT 'QQE_LENGTH-GRAPH-SHUFFLE-CIRCLE-PSETS 'NUMBER-OF-ARGS 2) 
(PUT 'QQE_LENGTH-GRAPH-SHUFFLE-CIRCLE-PSETS 'DEFINED-ON-LINE '929) 
(PUT 'QQE_LENGTH-GRAPH-SHUFFLE-CIRCLE-PSETS 'DEFINED-IN-FILE
     'REDLOG/QQE/QQEMISC.RED) 
(PUT 'QQE_LENGTH-GRAPH-SHUFFLE-CIRCLE-PSETS 'PROCEDURE_TYPE
     '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE QQE_LENGTH-GRAPH-SHUFFLE-CIRCLE-PSETS (CIRCLE_SETS NODE)
    (PROG (SET1 CIRCLES)
      (COND ((NULL CIRCLE_SETS) (RETURN NIL))
            ((NULL (CDR CIRCLE_SETS)) (RETURN (CAR CIRCLE_SETS))))
      (PROG (CS1)
        (SETQ CS1 CIRCLE_SETS)
       LAB
        (COND ((NULL CS1) (RETURN NIL)))
        (PROGN
         (SETQ SET1 (CAR CS1))
         (PROG (SET2)
           (SETQ SET2 (CDR CS1))
          LAB
           (COND ((NULL SET2) (RETURN NIL)))
           ((LAMBDA (SET2)
              (SETQ CIRCLES
                      (APPEND
                       (QQE_LENGTH-GRAPH-SHUFFLE-CIRCLE-SETS SET1 SET2 NODE)
                       CIRCLES)))
            (CAR SET2))
           (SETQ SET2 (CDR SET2))
           (GO LAB))
         NIL)
        (SETQ CS1 (CDR CS1))
        (GO LAB))
      (RETURN CIRCLES))) 
(PUT 'QQE_LENGTH-GRAPH-SHUFFLE-CIRCLE-SETS 'NUMBER-OF-ARGS 3) 
(PUT 'QQE_LENGTH-GRAPH-SHUFFLE-CIRCLE-SETS 'DEFINED-ON-LINE '945) 
(PUT 'QQE_LENGTH-GRAPH-SHUFFLE-CIRCLE-SETS 'DEFINED-IN-FILE
     'REDLOG/QQE/QQEMISC.RED) 
(PUT 'QQE_LENGTH-GRAPH-SHUFFLE-CIRCLE-SETS 'PROCEDURE_TYPE
     '(ARROW (TIMES GENERAL GENERAL GENERAL) GENERAL)) 
(DE QQE_LENGTH-GRAPH-SHUFFLE-CIRCLE-SETS (SET1 SET2 NODE)
    (PROG (CIRCLES)
      (PROG (CIRCLE1)
        (SETQ CIRCLE1 SET1)
       LAB
        (COND ((NULL CIRCLE1) (RETURN NIL)))
        ((LAMBDA (CIRCLE1)
           (PROG (CIRCLE2)
             (SETQ CIRCLE2 SET2)
            LAB
             (COND ((NULL CIRCLE2) (RETURN NIL)))
             ((LAMBDA (CIRCLE2)
                (COND
                 ((QQE_LENGTH-GRAPH-SHUFFLABLE CIRCLE1 CIRCLE2 NODE)
                  (SETQ CIRCLES
                          (CONS
                           (QQE_LENGTH-GRAPH-SHUFFLE-CIRCLES CIRCLE1 CIRCLE2
                            NODE)
                           CIRCLES)))))
              (CAR CIRCLE2))
             (SETQ CIRCLE2 (CDR CIRCLE2))
             (GO LAB)))
         (CAR CIRCLE1))
        (SETQ CIRCLE1 (CDR CIRCLE1))
        (GO LAB))
      (RETURN (APPEND CIRCLES (APPEND SET1 SET2))))) 
(PUT 'QQE_LENGTH-GRAPH-SHUFFLABLE 'NUMBER-OF-ARGS 3) 
(PUT 'QQE_LENGTH-GRAPH-SHUFFLABLE 'DEFINED-ON-LINE '958) 
(PUT 'QQE_LENGTH-GRAPH-SHUFFLABLE 'DEFINED-IN-FILE 'REDLOG/QQE/QQEMISC.RED) 
(PUT 'QQE_LENGTH-GRAPH-SHUFFLABLE 'PROCEDURE_TYPE
     '(ARROW (TIMES GENERAL GENERAL GENERAL) GENERAL)) 
(DE QQE_LENGTH-GRAPH-SHUFFLABLE (CIRCLE1 CIRCLE2 NODE)
    ((LAMBDA (CIRCLE1_TOPDFS CIRCLE2_TOPDFS NODEDFS)
       (PROGN
        (COND
         ((AND CIRCLE1_TOPDFS CIRCLE2_TOPDFS (GEQ CIRCLE1_TOPDFS NODEDFS)
               (GEQ CIRCLE2_TOPDFS NODEDFS)
               (NOT (EQUAL CIRCLE1_TOPDFS CIRCLE2_TOPDFS)))
          T)
         (T NIL))))
     (QQE_GRAPH-GET-DFSNUM (CAR CIRCLE1)) (QQE_GRAPH-GET-DFSNUM (CAR CIRCLE2))
     (QQE_GRAPH-GET-DFSNUM NODE))) 
(PUT 'QQE_LENGTH-GRAPH-SHUFFLE-CIRCLES 'NUMBER-OF-ARGS 3) 
(PUT 'QQE_LENGTH-GRAPH-SHUFFLE-CIRCLES 'DEFINED-ON-LINE '971) 
(PUT 'QQE_LENGTH-GRAPH-SHUFFLE-CIRCLES 'DEFINED-IN-FILE 'REDLOG/QQE/QQEMISC.RED) 
(PUT 'QQE_LENGTH-GRAPH-SHUFFLE-CIRCLES 'PROCEDURE_TYPE
     '(ARROW (TIMES GENERAL GENERAL GENERAL) GENERAL)) 
(DE QQE_LENGTH-GRAPH-SHUFFLE-CIRCLES (C1 C2 NODE)
    (PROG (FIRSTC SECONDC SHUFFLEC TEMP)
      (COND
       ((QQE_LENGTH-GRAPH-SHUFFLE-CIRCLES-ORDER C1 C2 NODE)
        (PROGN (SETQ FIRSTC C1) (SETQ SECONDC C2) NIL))
       (T (PROGN (SETQ FIRSTC C2) (SETQ SECONDC C1) NIL)))
      (SETQ TEMP (CAR FIRSTC))
      (PROG ()
       WHILELABEL
        (COND ((NOT (NEQ TEMP (CAR SECONDC))) (RETURN NIL)))
        (PROGN
         (SETQ SHUFFLEC (APPEND SHUFFLEC (LIST TEMP)))
         (SETQ FIRSTC (CDR FIRSTC))
         (SETQ TEMP (CAR FIRSTC))
         NIL)
        (GO WHILELABEL))
      (SETQ SHUFFLEC (APPEND SHUFFLEC (LIST TEMP)))
      (SETQ SECONDC (REVERSE SECONDC))
      (SETQ TEMP (CAR SECONDC))
      (PROG ()
       WHILELABEL
        (COND ((NOT (NEQ TEMP NODE)) (RETURN NIL)))
        (PROGN
         (SETQ SHUFFLEC (APPEND SHUFFLEC (LIST TEMP)))
         (SETQ SECONDC (CDR SECONDC))
         (SETQ TEMP (CAR SECONDC))
         NIL)
        (GO WHILELABEL))
      (PROG ()
       WHILELABEL
        (COND ((NOT (NEQ (CAR FIRSTC) NODE)) (RETURN NIL)))
        (SETQ FIRSTC (CDR FIRSTC))
        (GO WHILELABEL))
      (SETQ SHUFFLEC (APPEND SHUFFLEC FIRSTC))
      (RETURN SHUFFLEC))) 
(PUT 'QQE_LENGTH-GRAPH-SHUFFLE-CIRCLES-ORDER 'NUMBER-OF-ARGS 3) 
(PUT 'QQE_LENGTH-GRAPH-SHUFFLE-CIRCLES-ORDER 'DEFINED-ON-LINE '1006) 
(PUT 'QQE_LENGTH-GRAPH-SHUFFLE-CIRCLES-ORDER 'DEFINED-IN-FILE
     'REDLOG/QQE/QQEMISC.RED) 
(PUT 'QQE_LENGTH-GRAPH-SHUFFLE-CIRCLES-ORDER 'PROCEDURE_TYPE
     '(ARROW (TIMES GENERAL GENERAL GENERAL) GENERAL)) 
(DE QQE_LENGTH-GRAPH-SHUFFLE-CIRCLES-ORDER (C1 C2 NODE)
    (PROG (TOP1 TOP2 TOP1_TEMP TOP2_TEMP)
      (SETQ TOP1_TEMP (CAR C1))
      (SETQ TOP2_TEMP (CAR C2))
      (SETQ TOP1 TOP1_TEMP)
      (SETQ TOP2 TOP2_TEMP)
      (PROG ()
       WHILELABEL
        (COND
         ((NOT
           (AND (NEQ TOP1_TEMP TOP2) (NEQ TOP2_TEMP TOP1) (NEQ TOP1_TEMP NODE)
                (NEQ TOP2_TEMP NODE)))
          (RETURN NIL)))
        (PROGN
         (SETQ C1 (CDR C1))
         (SETQ C2 (CDR C2))
         (SETQ TOP1_TEMP (CAR C1))
         (SETQ TOP2_TEMP (CAR C2))
         NIL)
        (GO WHILELABEL))
      (COND ((OR (EQ TOP2_TEMP TOP1) (EQ TOP1_TEMP NODE)) (RETURN NIL))
            (T (RETURN T))))) 
(PUT 'QQE_LENGTH-GRAPH-NEIGHBOR-MARK 'NUMBER-OF-ARGS 1) 
(PUT 'QQE_LENGTH-GRAPH-NEIGHBOR-MARK 'DEFINED-ON-LINE '1029) 
(PUT 'QQE_LENGTH-GRAPH-NEIGHBOR-MARK 'DEFINED-IN-FILE 'REDLOG/QQE/QQEMISC.RED) 
(PUT 'QQE_LENGTH-GRAPH-NEIGHBOR-MARK 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE QQE_LENGTH-GRAPH-NEIGHBOR-MARK (NEIGHBOR)
    (QQE_LENGTH-GRAPH-MARK (QQE_LENGTH-GRAPH-NEIGHBOR-NODE NEIGHBOR))) 
(PUT 'QQE_LENGTH-GRAPH-NEIGHBOR-MARKED 'NUMBER-OF-ARGS 1) 
(PUT 'QQE_LENGTH-GRAPH-NEIGHBOR-MARKED 'DEFINED-ON-LINE '1034) 
(PUT 'QQE_LENGTH-GRAPH-NEIGHBOR-MARKED 'DEFINED-IN-FILE 'REDLOG/QQE/QQEMISC.RED) 
(PUT 'QQE_LENGTH-GRAPH-NEIGHBOR-MARKED 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE QQE_LENGTH-GRAPH-NEIGHBOR-MARKED (NEIGHBOR)
    (QQE_LENGTH-GRAPH-MARKED (QQE_LENGTH-GRAPH-NEIGHBOR-NODE NEIGHBOR))) 
(PUT 'QQE_LENGTH-GRAPH-UPDATE-MAXLENGTH 'NUMBER-OF-ARGS 2) 
(PUT 'QQE_LENGTH-GRAPH-UPDATE-MAXLENGTH 'DEFINED-ON-LINE '1040) 
(PUT 'QQE_LENGTH-GRAPH-UPDATE-MAXLENGTH 'DEFINED-IN-FILE
     'REDLOG/QQE/QQEMISC.RED) 
(PUT 'QQE_LENGTH-GRAPH-UPDATE-MAXLENGTH 'PROCEDURE_TYPE
     '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE QQE_LENGTH-GRAPH-UPDATE-MAXLENGTH (NODE LENGTH)
    (COND
     ((QQE_UPDATE-MAXLENGTH NODE LENGTH)
      (PROG (X)
        (SETQ X (QQE_LENGTH-GRAPH-NEIGHBORS NODE))
       LAB
        (COND ((NULL X) (RETURN NIL)))
        ((LAMBDA (X)
           (QQE_LENGTH-GRAPH-UPDATE-MAXLENGTH
            (QQE_LENGTH-GRAPH-NEIGHBOR-NODE X)
            (COND
             ((GEQ (QQE_LENGTH-GRAPH-NEIGHBOR-EDGE1 X) LENGTH)
              (QQE_LENGTH-GRAPH-NEIGHBOR-EDGE2 X))
             (T (PLUS LENGTH (QQE_LENGTH-GRAPH-NEIGHBOR-DIFF X))))))
         (CAR X))
        (SETQ X (CDR X))
        (GO LAB))))) 
(PUT 'QQE_LENGTH-GRAPH-UPDATE-MAXLENGTH-CONTEXT 'NUMBER-OF-ARGS 2) 
(PUT 'QQE_LENGTH-GRAPH-UPDATE-MAXLENGTH-CONTEXT 'DEFINED-ON-LINE '1053) 
(PUT 'QQE_LENGTH-GRAPH-UPDATE-MAXLENGTH-CONTEXT 'DEFINED-IN-FILE
     'REDLOG/QQE/QQEMISC.RED) 
(PUT 'QQE_LENGTH-GRAPH-UPDATE-MAXLENGTH-CONTEXT 'PROCEDURE_TYPE
     '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE QQE_LENGTH-GRAPH-UPDATE-MAXLENGTH-CONTEXT (NODE LENGTH)
    (PROG (X)
      (SETQ X (QQE_LENGTH-GRAPH-NEIGHBORS NODE))
     LAB
      (COND ((NULL X) (RETURN NIL)))
      ((LAMBDA (X)
         (PROGN
          (QQE_LENGTH-GRAPH-UPDATE-MAXLENGTH (QQE_LENGTH-GRAPH-NEIGHBOR-NODE X)
           (COND
            ((GEQ (QQE_LENGTH-GRAPH-NEIGHBOR-EDGE1 X) LENGTH)
             (QQE_LENGTH-GRAPH-NEIGHBOR-EDGE2 X))
            (T (PLUS LENGTH (QQE_LENGTH-GRAPH-NEIGHBOR-DIFF X)))))
          NIL))
       (CAR X))
      (SETQ X (CDR X))
      (GO LAB))) 
(PUT 'QQE_LENGTH-GRAPH-UPDATE-MAXLENGTHS 'NUMBER-OF-ARGS 1) 
(PUT 'QQE_LENGTH-GRAPH-UPDATE-MAXLENGTHS 'DEFINED-ON-LINE '1067) 
(PUT 'QQE_LENGTH-GRAPH-UPDATE-MAXLENGTHS 'DEFINED-IN-FILE
     'REDLOG/QQE/QQEMISC.RED) 
(PUT 'QQE_LENGTH-GRAPH-UPDATE-MAXLENGTHS 'PROCEDURE_TYPE
     '(ARROW GENERAL GENERAL)) 
(DE QQE_LENGTH-GRAPH-UPDATE-MAXLENGTHS (NODES)
    (PROG (X)
      (SETQ X NODES)
     LAB
      (COND ((NULL X) (RETURN NIL)))
      ((LAMBDA (X)
         (QQE_LENGTH-GRAPH-UPDATE-MAXLENGTH-CONTEXT X (GET X 'MAXLENGTH)))
       (CAR X))
      (SETQ X (CDR X))
      (GO LAB))) 
(PUT 'QQE_LENGTH-GRAPH-UPDATE-MINLENGTHS 'NUMBER-OF-ARGS 1) 
(PUT 'QQE_LENGTH-GRAPH-UPDATE-MINLENGTHS 'DEFINED-ON-LINE '1074) 
(PUT 'QQE_LENGTH-GRAPH-UPDATE-MINLENGTHS 'DEFINED-IN-FILE
     'REDLOG/QQE/QQEMISC.RED) 
(PUT 'QQE_LENGTH-GRAPH-UPDATE-MINLENGTHS 'PROCEDURE_TYPE
     '(ARROW GENERAL GENERAL)) 
(DE QQE_LENGTH-GRAPH-UPDATE-MINLENGTHS (NODES)
    (PROG (X)
      (SETQ X NODES)
     LAB
      (COND ((NULL X) (RETURN NIL)))
      ((LAMBDA (X)
         (QQE_LENGTH-GRAPH-UPDATE-MINLENGTH-CONTEXT X (GET X 'MINLENGTH)))
       (CAR X))
      (SETQ X (CDR X))
      (GO LAB))) 
(PUT 'QQE_LENGTH-GRAPH-UPDATE-MINLENGTH-CONTEXT 'NUMBER-OF-ARGS 2) 
(PUT 'QQE_LENGTH-GRAPH-UPDATE-MINLENGTH-CONTEXT 'DEFINED-ON-LINE '1081) 
(PUT 'QQE_LENGTH-GRAPH-UPDATE-MINLENGTH-CONTEXT 'DEFINED-IN-FILE
     'REDLOG/QQE/QQEMISC.RED) 
(PUT 'QQE_LENGTH-GRAPH-UPDATE-MINLENGTH-CONTEXT 'PROCEDURE_TYPE
     '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE QQE_LENGTH-GRAPH-UPDATE-MINLENGTH-CONTEXT (NODE LENGTH)
    (PROG (X)
      (SETQ X (QQE_LENGTH-GRAPH-NEIGHBORS NODE))
     LAB
      (COND ((NULL X) (RETURN NIL)))
      ((LAMBDA (X)
         (COND
          ((LESSP (QQE_LENGTH-GRAPH-NEIGHBOR-EDGE1 X) LENGTH)
           (QQE_LENGTH-GRAPH-UPDATE-MINLENGTH
            (QQE_LENGTH-GRAPH-NEIGHBOR-NODE X)
            (PLUS LENGTH (QQE_LENGTH-GRAPH-NEIGHBOR-DIFF X))))))
       (CAR X))
      (SETQ X (CDR X))
      (GO LAB))) 
(PUT 'QQE_LENGTH-GRAPH-UPDATE-MINLENGTH 'NUMBER-OF-ARGS 2) 
(PUT 'QQE_LENGTH-GRAPH-UPDATE-MINLENGTH 'DEFINED-ON-LINE '1092) 
(PUT 'QQE_LENGTH-GRAPH-UPDATE-MINLENGTH 'DEFINED-IN-FILE
     'REDLOG/QQE/QQEMISC.RED) 
(PUT 'QQE_LENGTH-GRAPH-UPDATE-MINLENGTH 'PROCEDURE_TYPE
     '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE QQE_LENGTH-GRAPH-UPDATE-MINLENGTH (NODE LENGTH)
    (COND
     ((QQE_UPDATE-MINLENGTH NODE LENGTH)
      (PROG (X)
        (SETQ X (QQE_LENGTH-GRAPH-NEIGHBORS NODE))
       LAB
        (COND ((NULL X) (RETURN NIL)))
        ((LAMBDA (X)
           (COND
            ((LESSP (QQE_LENGTH-GRAPH-NEIGHBOR-EDGE1 X) LENGTH)
             (QQE_LENGTH-GRAPH-UPDATE-MINLENGTH
              (QQE_LENGTH-GRAPH-NEIGHBOR-NODE X)
              (PLUS LENGTH (QQE_LENGTH-GRAPH-NEIGHBOR-DIFF X))))))
         (CAR X))
        (SETQ X (CDR X))
        (GO LAB))))) 
(PUT 'QQE_LENGTH-GRAPH-MARKED 'NUMBER-OF-ARGS 1) 
(PUT 'QQE_LENGTH-GRAPH-MARKED 'DEFINED-ON-LINE '1104) 
(PUT 'QQE_LENGTH-GRAPH-MARKED 'DEFINED-IN-FILE 'REDLOG/QQE/QQEMISC.RED) 
(PUT 'QQE_LENGTH-GRAPH-MARKED 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE QQE_LENGTH-GRAPH-MARKED (VAR) (GET VAR 'BLOCKMARK)) 
(PUT 'QQE_LENGTH-GRAPH-MARK 'NUMBER-OF-ARGS 1) 
(PUT 'QQE_LENGTH-GRAPH-MARK 'DEFINED-ON-LINE '1109) 
(PUT 'QQE_LENGTH-GRAPH-MARK 'DEFINED-IN-FILE 'REDLOG/QQE/QQEMISC.RED) 
(PUT 'QQE_LENGTH-GRAPH-MARK 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE QQE_LENGTH-GRAPH-MARK (VAR) (PUT VAR 'BLOCKMARK T)) 
(PUT 'QQE_LENGTH-GRAPH-UNMARK 'NUMBER-OF-ARGS 1) 
(PUT 'QQE_LENGTH-GRAPH-UNMARK 'DEFINED-ON-LINE '1113) 
(PUT 'QQE_LENGTH-GRAPH-UNMARK 'DEFINED-IN-FILE 'REDLOG/QQE/QQEMISC.RED) 
(PUT 'QQE_LENGTH-GRAPH-UNMARK 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE QQE_LENGTH-GRAPH-UNMARK (VAR) (REMPROP VAR 'BLOCKMARK)) 
(PUT 'QQE_LENGTH-GRAPH-BTERM 'NUMBER-OF-ARGS 2) 
(PUT 'QQE_LENGTH-GRAPH-BTERM 'DEFINED-ON-LINE '1117) 
(PUT 'QQE_LENGTH-GRAPH-BTERM 'DEFINED-IN-FILE 'REDLOG/QQE/QQEMISC.RED) 
(PUT 'QQE_LENGTH-GRAPH-BTERM 'PROCEDURE_TYPE
     '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE QQE_LENGTH-GRAPH-BTERM (TERM VAR_LIST)
    (PROG ()
      (COND ((OR (NULL TERM) (ATOM TERM)) (RETURN VAR_LIST)))
      (COND
       ((MEMQ (CAR TERM) '(LHEAD RHEAD))
        (SETQ VAR_LIST (QQE_LENGTH-GRAPH-BTERM-UPDATE-HEADMIN TERM VAR_LIST)))
       (T
        (PROG (X)
          (SETQ X (CDR TERM))
         LAB
          (COND ((NULL X) (RETURN NIL)))
          ((LAMBDA (X) (SETQ VAR_LIST (QQE_LENGTH-GRAPH-BTERM X VAR_LIST)))
           (CAR X))
          (SETQ X (CDR X))
          (GO LAB))))
      (RETURN VAR_LIST))) 
(PUT 'QQE_LENGTH-GRAPH-BTERM-UPDATE-HEADMIN 'NUMBER-OF-ARGS 2) 
(PUT 'QQE_LENGTH-GRAPH-BTERM-UPDATE-HEADMIN 'DEFINED-ON-LINE '1132) 
(PUT 'QQE_LENGTH-GRAPH-BTERM-UPDATE-HEADMIN 'DEFINED-IN-FILE
     'REDLOG/QQE/QQEMISC.RED) 
(PUT 'QQE_LENGTH-GRAPH-BTERM-UPDATE-HEADMIN 'PROCEDURE_TYPE
     '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE QQE_LENGTH-GRAPH-BTERM-UPDATE-HEADMIN (TERM VAR_LIST)
    (PROG (VAR PREFIX_LENGTH HEADMIN)
      (SETQ VAR (QQE_QPREFIX-VAR TERM))
      (COND ((EQ VAR 'QEPSILON) (RETURN NIL)))
      (SETQ PREFIX_LENGTH (QQE_PREFIX-LENGTH TERM))
      (SETQ HEADMIN (GET VAR 'HEADMIN))
      (COND
       ((NULL HEADMIN)
        (PROGN
         (PUT VAR 'HEADMIN PREFIX_LENGTH)
         (SETQ VAR_LIST (LTO_INSERTQ VAR VAR_LIST))
         NIL))
       ((GREATERP PREFIX_LENGTH HEADMIN) (PUT VAR 'HEADMIN PREFIX_LENGTH)))
      (RETURN VAR_LIST))) 
(PUT 'QQE_LENGTH-GRAPH-AT-NOTQ 'NUMBER-OF-ARGS 2) 
(PUT 'QQE_LENGTH-GRAPH-AT-NOTQ 'DEFINED-ON-LINE '1152) 
(PUT 'QQE_LENGTH-GRAPH-AT-NOTQ 'DEFINED-IN-FILE 'REDLOG/QQE/QQEMISC.RED) 
(PUT 'QQE_LENGTH-GRAPH-AT-NOTQ 'PROCEDURE_TYPE
     '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE QQE_LENGTH-GRAPH-AT-NOTQ (AT VAR_LIST)
    (PROG ()
      (SETQ VAR_LIST (QQE_LENGTH-GRAPH-TERM-NOTQ (CADR AT) VAR_LIST))
      (SETQ VAR_LIST (QQE_LENGTH-GRAPH-TERM-NOTQ (CADDR AT) VAR_LIST))
      (RETURN VAR_LIST))) 
(PUT 'QQE_LENGTH-GRAPH-TERM-NOTQ 'NUMBER-OF-ARGS 2) 
(PUT 'QQE_LENGTH-GRAPH-TERM-NOTQ 'DEFINED-ON-LINE '1162) 
(PUT 'QQE_LENGTH-GRAPH-TERM-NOTQ 'DEFINED-IN-FILE 'REDLOG/QQE/QQEMISC.RED) 
(PUT 'QQE_LENGTH-GRAPH-TERM-NOTQ 'PROCEDURE_TYPE
     '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE QQE_LENGTH-GRAPH-TERM-NOTQ (TERM VAR_LIST)
    (PROG (VAR)
      (COND ((ATOM TERM) (RETURN VAR_LIST))
            ((MEMQ (CAR TERM) '(LHEAD RHEAD))
             (PROGN
              (SETQ VAR (QQE_QPREFIX-VAR TERM))
              (QQE_UPDATE-MINLENGTH VAR (QQE_PREFIX-LENGTH TERM))
              (RETURN (LTO_INSERTQ VAR VAR_LIST))
              NIL))
            (T
             (PROGN
              (PROG (X)
                (SETQ X (CDR TERM))
               LAB
                (COND ((NULL X) (RETURN NIL)))
                ((LAMBDA (X)
                   (SETQ VAR_LIST (QQE_LENGTH-GRAPH-TERM-NOTQ X VAR_LIST)))
                 (CAR X))
                (SETQ X (CDR X))
                (GO LAB))
              (RETURN VAR_LIST)
              NIL))))) 
(PUT 'QQE_LENGTH-GRAPH-AT-QNEQ 'NUMBER-OF-ARGS 2) 
(PUT 'QQE_LENGTH-GRAPH-AT-QNEQ 'DEFINED-ON-LINE '1178) 
(PUT 'QQE_LENGTH-GRAPH-AT-QNEQ 'DEFINED-IN-FILE 'REDLOG/QQE/QQEMISC.RED) 
(PUT 'QQE_LENGTH-GRAPH-AT-QNEQ 'PROCEDURE_TYPE
     '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE QQE_LENGTH-GRAPH-AT-QNEQ (LHS VAR_LIST)
    (PROG (VAR_LHS)
      (SETQ VAR_LHS (QQE_QPREFIX-VAR LHS))
      (QQE_UPDATE-MINLENGTH VAR_LHS (PLUS (QQE_PREFIX-LENGTH LHS) 1))
      (RETURN (LTO_INSERTQ VAR_LHS VAR_LIST)))) 
(PUT 'QQE_LENGTH-GRAPH-AT-QEQUAL 'NUMBER-OF-ARGS 2) 
(PUT 'QQE_LENGTH-GRAPH-AT-QEQUAL 'DEFINED-ON-LINE '1190) 
(PUT 'QQE_LENGTH-GRAPH-AT-QEQUAL 'DEFINED-IN-FILE 'REDLOG/QQE/QQEMISC.RED) 
(PUT 'QQE_LENGTH-GRAPH-AT-QEQUAL 'PROCEDURE_TYPE
     '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE QQE_LENGTH-GRAPH-AT-QEQUAL (AT VAR_LIST)
    (PROG (VARLHS VARRHS LHS RHS)
      (SETQ LHS (CADR AT))
      (SETQ RHS (CADDR AT))
      (SETQ VARLHS (QQE_QPREFIX-VAR LHS))
      (SETQ VARRHS (QQE_QPREFIX-VAR RHS))
      (COND
       ((EQ VARRHS 'QEPSILON)
        (PROGN
         (QQE_UPDATE-MAXLENGTH VARLHS (QQE_PREFIX-LENGTH LHS))
         (SETQ VAR_LIST (LTO_INSERTQ VARLHS VAR_LIST))
         NIL))
       ((EQ VARLHS 'QEPSILON)
        (PROGN
         (QQE_UPDATE-MAXLENGTH VARRHS (QQE_PREFIX-LENGTH RHS))
         (SETQ VAR_LIST (LTO_INSERTQ VARRHS VAR_LIST))
         NIL))
       (T
        (PROGN
         (QQE_UPDATE-GRAPH-ADLIST VARLHS VARRHS (QQE_PREFIX-LENGTH LHS)
          (QQE_PREFIX-LENGTH RHS))
         (SETQ VAR_LIST (LTO_INSERTQ VARLHS VAR_LIST))
         (SETQ VAR_LIST (LTO_INSERTQ VARRHS VAR_LIST))
         NIL)))
      (RETURN VAR_LIST))) 
(PUT 'QQE_LENGTH-GRAPH-CORRECT 'NUMBER-OF-ARGS 1) 
(PUT 'QQE_LENGTH-GRAPH-CORRECT 'DEFINED-ON-LINE '1220) 
(PUT 'QQE_LENGTH-GRAPH-CORRECT 'DEFINED-IN-FILE 'REDLOG/QQE/QQEMISC.RED) 
(PUT 'QQE_LENGTH-GRAPH-CORRECT 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE QQE_LENGTH-GRAPH-CORRECT (VAR_LIST)
    (PROG (MINLENGTH MAXLENGTH LIST V CORRECT)
      (SETQ LIST VAR_LIST)
      (COND ((NULL VAR_LIST) (RETURN T)))
      (SETQ CORRECT T)
      (PROG ()
       WHILELABEL
        (COND ((NOT (AND LIST CORRECT)) (RETURN NIL)))
        (PROGN
         (SETQ V (CAR LIST))
         (SETQ MINLENGTH (GET V 'MINLENGTH))
         (SETQ MAXLENGTH (GET V 'MAXLENGTH))
         (COND
          ((AND MINLENGTH MAXLENGTH (LESSP MAXLENGTH MINLENGTH))
           (SETQ CORRECT NIL)))
         (COND
          ((AND CORRECT MINLENGTH)
           (SETQ CORRECT (QQE_LENGTH-GRAPH-CORRECT-ADLIST V MINLENGTH))))
         (SETQ LIST (CDR LIST))
         NIL)
        (GO WHILELABEL))
      (RETURN (COND ((NULL CORRECT) CORRECT) (T VAR_LIST))))) 
(PUT 'QQE_LENGTH-GRAPH-CORRECT-ADLIST 'NUMBER-OF-ARGS 2) 
(PUT 'QQE_LENGTH-GRAPH-CORRECT-ADLIST 'DEFINED-ON-LINE '1246) 
(PUT 'QQE_LENGTH-GRAPH-CORRECT-ADLIST 'DEFINED-IN-FILE 'REDLOG/QQE/QQEMISC.RED) 
(PUT 'QQE_LENGTH-GRAPH-CORRECT-ADLIST 'PROCEDURE_TYPE
     '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE QQE_LENGTH-GRAPH-CORRECT-ADLIST (V MINLENGTH)
    (PROG (CORRECT TEMP EL X LIST MAXLENGTH VAR)
      (SETQ CORRECT T)
      (SETQ LIST (GET V 'ADLIST))
      (PROG ()
       WHILELABEL
        (COND ((NOT (AND LIST CORRECT)) (RETURN NIL)))
        (PROGN
         (SETQ VAR (CAR (CAR LIST)))
         (SETQ MAXLENGTH (GET VAR 'MAXLENGTH))
         (SETQ EL (CDR (CAR LIST)))
         (PROG ()
          WHILELABEL
           (COND ((NOT (AND CORRECT EL)) (RETURN NIL)))
           (PROGN
            (SETQ X (CAR EL))
            (COND
             ((GREATERP MINLENGTH (CAR (CADR X)))
              (PROGN
               (COND
                ((AND MAXLENGTH (LESSP MAXLENGTH (CADR (CADR X))))
                 (SETQ CORRECT NIL)))
               (COND ((NULL TEMP) (SETQ TEMP (CAR X)))
                     ((NEQ (CAR X) TEMP) (SETQ CORRECT NIL)))
               NIL)))
            (SETQ EL (CDR EL))
            NIL)
           (GO WHILELABEL))
         (SETQ TEMP NIL)
         (SETQ LIST (CDR LIST))
         NIL)
        (GO WHILELABEL))
      (RETURN CORRECT))) 
(PUT 'QQE_LENGTH-GRAPH-REMOVE-MARK 'NUMBER-OF-ARGS 2) 
(PUT 'QQE_LENGTH-GRAPH-REMOVE-MARK 'DEFINED-ON-LINE '1278) 
(PUT 'QQE_LENGTH-GRAPH-REMOVE-MARK 'DEFINED-IN-FILE 'REDLOG/QQE/QQEMISC.RED) 
(PUT 'QQE_LENGTH-GRAPH-REMOVE-MARK 'PROCEDURE_TYPE
     '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE QQE_LENGTH-GRAPH-REMOVE-MARK (VAR_LIST MARK)
    (PROG (V)
      (SETQ V VAR_LIST)
     LAB
      (COND ((NULL V) (RETURN NIL)))
      ((LAMBDA (V) (PROGN (REMPROP V MARK) NIL)) (CAR V))
      (SETQ V (CDR V))
      (GO LAB))) 
(PUT 'QQE_LENGTH-GRAPH-DELETE 'NUMBER-OF-ARGS 1) 
(PUT 'QQE_LENGTH-GRAPH-DELETE 'DEFINED-ON-LINE '1288) 
(PUT 'QQE_LENGTH-GRAPH-DELETE 'DEFINED-IN-FILE 'REDLOG/QQE/QQEMISC.RED) 
(PUT 'QQE_LENGTH-GRAPH-DELETE 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE QQE_LENGTH-GRAPH-DELETE (LIST)
    (PROG ()
      (COND ((NULL LIST) (RETURN NIL)))
      (QQE_LENGTH-GRAPH-REMOVE-MARK LIST 'MAXLENGTH)
      (QQE_LENGTH-GRAPH-REMOVE-MARK LIST 'MINLENGTH)
      (QQE_LENGTH-GRAPH-REMOVE-MARK LIST 'ADLIST)
      (QQE_LENGTH-GRAPH-REMOVE-MARK LIST 'HEADMIN)
      (QQE_LENGTH-GRAPH-REMOVE-MARK LIST 'NEIGHBORS))) 
(PUT 'QQE_LENGTH-GRAPH-PRINT 'NUMBER-OF-ARGS 1) 
(PUT 'QQE_LENGTH-GRAPH-PRINT 'DEFINED-ON-LINE '1302) 
(PUT 'QQE_LENGTH-GRAPH-PRINT 'DEFINED-IN-FILE 'REDLOG/QQE/QQEMISC.RED) 
(PUT 'QQE_LENGTH-GRAPH-PRINT 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE QQE_LENGTH-GRAPH-PRINT (LIST)
    (PROG (X)
      (SETQ X LIST)
     LAB
      (COND ((NULL X) (RETURN NIL)))
      ((LAMBDA (X)
         (PROGN
          (PRIN2T
           (LIST "var=" X "with minlength=" (GET X 'MINLENGTH)
                 " and maxlength=" (GET X 'MAXLENGTH) " and headmin="
                 (GET X 'HEADMIN) " with adlist" (GET X 'NEIGHBORS)))
          NIL))
       (CAR X))
      (SETQ X (CDR X))
      (GO LAB))) 
(PUT 'QQE_PRINT-PROP-LIST 'NUMBER-OF-ARGS 2) 
(PUT 'QQE_PRINT-PROP-LIST 'DEFINED-ON-LINE '1312) 
(PUT 'QQE_PRINT-PROP-LIST 'DEFINED-IN-FILE 'REDLOG/QQE/QQEMISC.RED) 
(PUT 'QQE_PRINT-PROP-LIST 'PROCEDURE_TYPE
     '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE QQE_PRINT-PROP-LIST (LIST PROP)
    (PROG (X)
      (SETQ X LIST)
     LAB
      (COND ((NULL X) (RETURN NIL)))
      ((LAMBDA (X) (PRIN2T (LIST X (GET X PROP)))) (CAR X))
      (SETQ X (CDR X))
      (GO LAB))) 
(PUT 'QQE_MINLENGTH-VAR 'NUMBER-OF-ARGS 1) 
(PUT 'QQE_MINLENGTH-VAR 'DEFINED-ON-LINE '1316) 
(PUT 'QQE_MINLENGTH-VAR 'DEFINED-IN-FILE 'REDLOG/QQE/QQEMISC.RED) 
(PUT 'QQE_MINLENGTH-VAR 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE QQE_MINLENGTH-VAR (VAR)
    ((LAMBDA (MINLENGTH) (PROGN (COND (MINLENGTH MINLENGTH) (T 0))))
     (GET VAR 'MINLENGTH))) 
(PUT 'QQE_MAXLENGTH-VAR 'NUMBER-OF-ARGS 1) 
(PUT 'QQE_MAXLENGTH-VAR 'DEFINED-ON-LINE '1323) 
(PUT 'QQE_MAXLENGTH-VAR 'DEFINED-IN-FILE 'REDLOG/QQE/QQEMISC.RED) 
(PUT 'QQE_MAXLENGTH-VAR 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE QQE_MAXLENGTH-VAR (VAR)
    ((LAMBDA (MAXLENGTH) (PROGN (COND (MAXLENGTH MAXLENGTH) (T 'INFTY))))
     (GET VAR 'MAXLENGTH))) 
(PUT 'QQE_LESS-LENGTH 'NUMBER-OF-ARGS 2) 
(PUT 'QQE_LESS-LENGTH 'DEFINED-ON-LINE '1330) 
(PUT 'QQE_LESS-LENGTH 'DEFINED-IN-FILE 'REDLOG/QQE/QQEMISC.RED) 
(PUT 'QQE_LESS-LENGTH 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE QQE_LESS-LENGTH (L1 L2)
    (COND ((EQ L1 L2) NIL) ((EQ L1 'INFTY) NIL) ((EQ L2 'INFTY) T)
          ((LESSP L1 L2) T) (T NIL))) 
(PUT 'QQE_LESSEQ-LENGTH 'NUMBER-OF-ARGS 2) 
(PUT 'QQE_LESSEQ-LENGTH 'DEFINED-ON-LINE '1339) 
(PUT 'QQE_LESSEQ-LENGTH 'DEFINED-IN-FILE 'REDLOG/QQE/QQEMISC.RED) 
(PUT 'QQE_LESSEQ-LENGTH 'PROCEDURE_TYPE
     '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE QQE_LESSEQ-LENGTH (L1 L2)
    (COND ((EQ L1 L2) T) ((EQ L1 'INFTY) NIL) ((EQ L2 'INFTY) T)
          ((LESSP L1 L2) T) (T NIL))) 
(PUT 'QQE_GREATEREQ-LENGTH 'NUMBER-OF-ARGS 2) 
(PUT 'QQE_GREATEREQ-LENGTH 'DEFINED-ON-LINE '1346) 
(PUT 'QQE_GREATEREQ-LENGTH 'DEFINED-IN-FILE 'REDLOG/QQE/QQEMISC.RED) 
(PUT 'QQE_GREATEREQ-LENGTH 'PROCEDURE_TYPE
     '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE QQE_GREATEREQ-LENGTH (L1 L2) (NOT (QQE_LESS-LENGTH L1 L2))) 
(PUT 'QQE_MIN-LENGTH 'NUMBER-OF-ARGS 2) 
(PUT 'QQE_MIN-LENGTH 'DEFINED-ON-LINE '1351) 
(PUT 'QQE_MIN-LENGTH 'DEFINED-IN-FILE 'REDLOG/QQE/QQEMISC.RED) 
(PUT 'QQE_MIN-LENGTH 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE QQE_MIN-LENGTH (L1 L2)
    (COND ((EQ L1 L2) L1) ((EQ L1 'INFTY) L2) ((EQ L2 'INFTY) L1)
          ((LESSP L1 L2) L1) (T L2))) 
(PUT 'QQE_MAX-LENGTH 'NUMBER-OF-ARGS 2) 
(PUT 'QQE_MAX-LENGTH 'DEFINED-ON-LINE '1360) 
(PUT 'QQE_MAX-LENGTH 'DEFINED-IN-FILE 'REDLOG/QQE/QQEMISC.RED) 
(PUT 'QQE_MAX-LENGTH 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE QQE_MAX-LENGTH (L1 L2)
    (COND ((EQ L1 L2) L1) ((EQ L1 'INFTY) L1) ((EQ L2 'INFTY) L2)
          ((LESSP L1 L2) L2) (T L1))) 
(PUT 'QQE_QPREFIX-VAR 'NUMBER-OF-ARGS 1) 
(PUT 'QQE_QPREFIX-VAR 'DEFINED-ON-LINE '1369) 
(PUT 'QQE_QPREFIX-VAR 'DEFINED-IN-FILE 'REDLOG/QQE/QQEMISC.RED) 
(PUT 'QQE_QPREFIX-VAR 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE QQE_QPREFIX-VAR (U)
    (PROG ()
      (PROG ()
       WHILELABEL
        (COND ((NOT (AND U (NOT (ATOM U)))) (RETURN NIL)))
        (PROGN
         (COND ((MEMQ (CAR U) '(LTAIL RTAIL LHEAD RHEAD)) (SETQ U (CADR U)))
               (T (SETQ U (CADDR U))))
         NIL)
        (GO WHILELABEL))
      (RETURN U))) 
(PUT 'QQE_HARMLESS-FORMULA-TEST 'NUMBER-OF-ARGS 1) 
(PUT 'QQE_HARMLESS-FORMULA-TEST 'DEFINED-ON-LINE '1387) 
(PUT 'QQE_HARMLESS-FORMULA-TEST 'DEFINED-IN-FILE 'REDLOG/QQE/QQEMISC.RED) 
(PUT 'QQE_HARMLESS-FORMULA-TEST 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE QQE_HARMLESS-FORMULA-TEST (F)
    (PROG (DNF FLAG)
      (COND ((ATOM F) (RETURN T)))
      (SETQ DNF (RL_DNF F))
      (SETQ FLAG T)
      (COND ((EQ (CAR DNF) 'AND) (SETQ DNF (LIST DNF)))
            (T (SETQ DNF (CDR DNF))))
      (PROG ()
       WHILELABEL
        (COND ((NOT (AND FLAG DNF)) (RETURN NIL)))
        (PROGN
         (SETQ FLAG (QQE_HARMLESS-FORMULA-TEST-CLAUSE (CAR DNF)))
         (SETQ DNF (CDR DNF))
         NIL)
        (GO WHILELABEL))
      (RETURN FLAG))) 
(PUT 'QQE_HARMLESS-FORMULA-TEST-CLAUSE 'NUMBER-OF-ARGS 1) 
(PUT 'QQE_HARMLESS-FORMULA-TEST-CLAUSE 'DEFINED-ON-LINE '1403) 
(PUT 'QQE_HARMLESS-FORMULA-TEST-CLAUSE 'DEFINED-IN-FILE 'REDLOG/QQE/QQEMISC.RED) 
(PUT 'QQE_HARMLESS-FORMULA-TEST-CLAUSE 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE QQE_HARMLESS-FORMULA-TEST-CLAUSE (CLAUSE)
    (PROG (VAR_LIST FLAG FLAG2)
      (SETQ VAR_LIST (QQE_LENGTH-GRAPH-CLAUSE CLAUSE NIL))
      (SETQ FLAG (QQE_HARMLESS-FORMULA-TEST-CLAUSE1 CLAUSE VAR_LIST))
      (SETQ FLAG2 (QQE_HARMLESS-FORMULA-TEST-CLAUSE2 VAR_LIST))
      (COND ((NEQ FLAG FLAG2) (REDERR "harmless-test failure")))
      (QQE_LENGTH-GRAPH-DELETE VAR_LIST)
      (RETURN FLAG))) 
(PUT 'QQE_HARMLESS-FORMULA-TEST-CLAUSE2 'NUMBER-OF-ARGS 1) 
(PUT 'QQE_HARMLESS-FORMULA-TEST-CLAUSE2 'DEFINED-ON-LINE '1416) 
(PUT 'QQE_HARMLESS-FORMULA-TEST-CLAUSE2 'DEFINED-IN-FILE
     'REDLOG/QQE/QQEMISC.RED) 
(PUT 'QQE_HARMLESS-FORMULA-TEST-CLAUSE2 'PROCEDURE_TYPE
     '(ARROW GENERAL GENERAL)) 
(DE QQE_HARMLESS-FORMULA-TEST-CLAUSE2 (VAR_LIST)
    (PROG (HARMLESS MINLENGTH HEADMIN V)
      (SETQ HARMLESS T)
      (PROG ()
       WHILELABEL
        (COND ((NOT (AND VAR_LIST HARMLESS)) (RETURN NIL)))
        (PROGN
         (SETQ V (CAR VAR_LIST))
         (SETQ MINLENGTH (GET V 'MINLENGTH))
         (SETQ HEADMIN (GET V 'HEADMIN))
         (COND
          ((AND HEADMIN (OR (NULL MINLENGTH) (GREATERP HEADMIN MINLENGTH)))
           (SETQ HARMLESS NIL)))
         (SETQ VAR_LIST (CDR VAR_LIST))
         NIL)
        (GO WHILELABEL))
      (RETURN HARMLESS))) 
(PUT 'QQE_HARMLESS-FORMULA-TEST-CLAUSE1 'NUMBER-OF-ARGS 2) 
(PUT 'QQE_HARMLESS-FORMULA-TEST-CLAUSE1 'DEFINED-ON-LINE '1439) 
(PUT 'QQE_HARMLESS-FORMULA-TEST-CLAUSE1 'DEFINED-IN-FILE
     'REDLOG/QQE/QQEMISC.RED) 
(PUT 'QQE_HARMLESS-FORMULA-TEST-CLAUSE1 'PROCEDURE_TYPE
     '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE QQE_HARMLESS-FORMULA-TEST-CLAUSE1 (CLAUSE VAR_LIST)
    (PROG (FLAG AT)
      (SETQ FLAG T)
      (COND ((ATOM CLAUSE) (RETURN T)))
      (COND ((NULL VAR_LIST) (RETURN T)))
      (COND ((NEQ (CAR CLAUSE) 'AND) (SETQ CLAUSE (LIST CLAUSE)))
            (T (SETQ CLAUSE (CDR CLAUSE))))
      (PROG ()
       WHILELABEL
        (COND ((NOT (AND FLAG CLAUSE)) (RETURN NIL)))
        (PROGN
         (SETQ AT (CAR CLAUSE))
         (COND
          ((AND (PAIRP AT) (NOT (MEMQ (CAR AT) '(QEQUAL QNEQ))))
           (SETQ FLAG (QQE_HARMLESS-FORMULA-TEST-AT (RL_PREPAT AT)))))
         (SETQ CLAUSE (CDR CLAUSE))
         NIL)
        (GO WHILELABEL))
      (RETURN FLAG))) 
(PUT 'QQE_HARMLESS-FORMULA-TEST-AT 'NUMBER-OF-ARGS 1) 
(PUT 'QQE_HARMLESS-FORMULA-TEST-AT 'DEFINED-ON-LINE '1460) 
(PUT 'QQE_HARMLESS-FORMULA-TEST-AT 'DEFINED-IN-FILE 'REDLOG/QQE/QQEMISC.RED) 
(PUT 'QQE_HARMLESS-FORMULA-TEST-AT 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE QQE_HARMLESS-FORMULA-TEST-AT (AT)
    (PROG (FLAG)
      (SETQ FLAG (QQE_HARMLESS-FORMULA-TEST-TERM (CADR AT)))
      (COND (FLAG (SETQ FLAG (QQE_HARMLESS-FORMULA-TEST-TERM (CADDR AT)))))
      (RETURN FLAG))) 
(PUT 'QQE_HARMLESS-FORMULA-TEST-TERM 'NUMBER-OF-ARGS 1) 
(PUT 'QQE_HARMLESS-FORMULA-TEST-TERM 'DEFINED-ON-LINE '1471) 
(PUT 'QQE_HARMLESS-FORMULA-TEST-TERM 'DEFINED-IN-FILE 'REDLOG/QQE/QQEMISC.RED) 
(PUT 'QQE_HARMLESS-FORMULA-TEST-TERM 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE QQE_HARMLESS-FORMULA-TEST-TERM (TERM)
    (PROG (FLAG)
      (COND ((ATOM TERM) (RETURN T)))
      (SETQ FLAG T)
      (COND
       ((MEMQ (CAR TERM) '(LHEAD RHEAD))
        (RETURN (QQE_HARMLESS-FORMULA-TEST-QTERM TERM))))
      (SETQ TERM (CDR TERM))
      (PROG ()
       WHILELABEL
        (COND ((NOT (AND TERM FLAG)) (RETURN NIL)))
        (PROGN
         (SETQ FLAG (QQE_HARMLESS-FORMULA-TEST-TERM (CAR TERM)))
         (SETQ TERM (CDR TERM))
         NIL)
        (GO WHILELABEL))
      (RETURN FLAG))) 
(PUT 'QQE_HARMLESS-FORMULA-TEST-QTERM 'NUMBER-OF-ARGS 1) 
(PUT 'QQE_HARMLESS-FORMULA-TEST-QTERM 'DEFINED-ON-LINE '1488) 
(PUT 'QQE_HARMLESS-FORMULA-TEST-QTERM 'DEFINED-IN-FILE 'REDLOG/QQE/QQEMISC.RED) 
(PUT 'QQE_HARMLESS-FORMULA-TEST-QTERM 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE QQE_HARMLESS-FORMULA-TEST-QTERM (TERM)
    (PROG (VAR MINLENGTH)
      (SETQ VAR (QQE_QPREFIX-VAR TERM))
      (COND ((EQ VAR 'QEPSILON) (RETURN T)))
      (SETQ MINLENGTH (GET VAR 'MINLENGTH))
      (COND ((NULL MINLENGTH) (RETURN NIL)))
      (COND ((LESSP MINLENGTH (QQE_PREFIX-LENGTH TERM)) (RETURN NIL))
            (T (RETURN T))))) 
(PUT 'QQE_MAKE-HARMLESS 'NUMBER-OF-ARGS 1) 
(PUT 'QQE_MAKE-HARMLESS 'DEFINED-ON-LINE '1501) 
(PUT 'QQE_MAKE-HARMLESS 'DEFINED-IN-FILE 'REDLOG/QQE/QQEMISC.RED) 
(PUT 'QQE_MAKE-HARMLESS 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE QQE_MAKE-HARMLESS (F)
    (PROG (F2)
      (COND ((ATOM F) (RETURN F))
            ((EQ (CAR F) 'OR)
             (PROGN
              (PROG (X)
                (SETQ X (CDR F))
               LAB
                (COND ((NULL X) (RETURN NIL)))
                ((LAMBDA (X)
                   (SETQ F2 (APPEND F2 (LIST (QQE_MAKE-HARMLESS-CLAUSE X)))))
                 (CAR X))
                (SETQ X (CDR X))
                (GO LAB))
              (RETURN (APPEND (LIST 'OR) F2))
              NIL))
            (T (RETURN (QQE_MAKE-HARMLESS-CLAUSE F)))))) 
(PUT 'QQE_MAKE-HARMLESS-CLAUSE 'NUMBER-OF-ARGS 1) 
(PUT 'QQE_MAKE-HARMLESS-CLAUSE 'DEFINED-ON-LINE '1515) 
(PUT 'QQE_MAKE-HARMLESS-CLAUSE 'DEFINED-IN-FILE 'REDLOG/QQE/QQEMISC.RED) 
(PUT 'QQE_MAKE-HARMLESS-CLAUSE 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE QQE_MAKE-HARMLESS-CLAUSE (F)
    (PROG (ADD_ON)
      (COND
       ((NOT
         (OR (OR (EQ (CAR F) 'TRUE) (EQ (CAR F) 'FALSE))
             (OR (OR (OR (EQ (CAR F) 'OR) (EQ (CAR F) 'AND)) (EQ (CAR F) 'NOT))
                 (OR (EQ (CAR F) 'IMPL) (EQ (CAR F) 'REPL)
                     (EQ (CAR F) 'EQUIV)))
             (OR (EQ (CAR F) 'EX) (EQ (CAR F) 'ALL))
             (OR (EQ (CAR F) 'BEX) (EQ (CAR F) 'BALL))))
        (PROGN
         (SETQ ADD_ON (QQE_MAKE-HARMLESS-AT (RL_PREPAT F)))
         (RETURN
          (COND (ADD_ON (APPEND (APPEND (LIST 'AND) (LIST F)) ADD_ON)) (T F)))
         NIL))
       (T
        (PROG (X)
          (SETQ X (CDR F))
         LAB
          (COND ((NULL X) (RETURN NIL)))
          ((LAMBDA (X)
             (SETQ ADD_ON
                     (APPEND ADD_ON (QQE_MAKE-HARMLESS-AT (RL_PREPAT X)))))
           (CAR X))
          (SETQ X (CDR X))
          (GO LAB))))
      (RETURN
       (COND (ADD_ON (APPEND (APPEND (LIST 'AND) (CDR F)) ADD_ON)) (T F))))) 
(PUT 'QQE_MAKE-HARMLESS-AT 'NUMBER-OF-ARGS 1) 
(PUT 'QQE_MAKE-HARMLESS-AT 'DEFINED-ON-LINE '1531) 
(PUT 'QQE_MAKE-HARMLESS-AT 'DEFINED-IN-FILE 'REDLOG/QQE/QQEMISC.RED) 
(PUT 'QQE_MAKE-HARMLESS-AT 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE QQE_MAKE-HARMLESS-AT (F)
    (PROG (ADD_ON)
      (SETQ ADD_ON NIL)
      (COND ((OR (ATOM F) (MEMQ (CAR F) '(QNEQ QEQUAL))) (RETURN NIL)))
      (PROG (X)
        (SETQ X (CDR F))
       LAB
        (COND ((NULL X) (RETURN NIL)))
        ((LAMBDA (X)
           (PROGN
            (COND
             ((AND (NOT (ATOM X)) (MEMQ (CAR X) '(LHEAD RHEAD)))
              (SETQ ADD_ON
                      (APPEND ADD_ON (LIST (LIST 'QNEQ (CADR X) 'QEPSILON)))))
             (T (SETQ ADD_ON (APPEND ADD_ON (QQE_MAKE-HARMLESS-AT X)))))
            NIL))
         (CAR X))
        (SETQ X (CDR X))
        (GO LAB))
      (RETURN ADD_ON))) 
(PUT 'QQE_QUICKSORT-DBL-CRIT 'NUMBER-OF-ARGS 1) 
(PUT 'QQE_QUICKSORT-DBL-CRIT 'DEFINED-ON-LINE '1552) 
(PUT 'QQE_QUICKSORT-DBL-CRIT 'DEFINED-IN-FILE 'REDLOG/QQE/QQEMISC.RED) 
(PUT 'QQE_QUICKSORT-DBL-CRIT 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE QQE_QUICKSORT-DBL-CRIT (LIST)
    (PROG (PIVOT)
      (COND
       (LIST
        (PROGN
         (SETQ PIVOT (CAR LIST))
         (SETQ LIST (QQE_PARTITION-DBL-CRIT (CDR LIST) PIVOT))
         (SETQ LIST
                 (APPEND (QQE_QUICKSORT-DBL-CRIT (CAR LIST))
                         (APPEND (LIST PIVOT)
                                 (QQE_QUICKSORT-DBL-CRIT (CADR LIST)))))
         NIL)))
      (RETURN LIST))) 
(PUT 'QQE_PARTITION-DBL-CRIT 'NUMBER-OF-ARGS 2) 
(PUT 'QQE_PARTITION-DBL-CRIT 'DEFINED-ON-LINE '1566) 
(PUT 'QQE_PARTITION-DBL-CRIT 'DEFINED-IN-FILE 'REDLOG/QQE/QQEMISC.RED) 
(PUT 'QQE_PARTITION-DBL-CRIT 'PROCEDURE_TYPE
     '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE QQE_PARTITION-DBL-CRIT (LIST PIVOT)
    (PROG (L R X LP)
      (PROG (X)
        (SETQ X LIST)
       LAB
        (COND ((NULL X) (RETURN NIL)))
        ((LAMBDA (X)
           (PROGN
            (SETQ LP (QQE_LESSP-DBL-CRIT X PIVOT))
            (COND ((NULL LP) (SETQ R (APPEND R (LIST X))))
                  ((EQ LP T) (SETQ L (APPEND L (LIST X)))))
            NIL))
         (CAR X))
        (SETQ X (CDR X))
        (GO LAB))
      (RETURN (LIST L R)))) 
(PUT 'QQE_LESSP-DBL-CRIT 'NUMBER-OF-ARGS 2) 
(PUT 'QQE_LESSP-DBL-CRIT 'DEFINED-ON-LINE '1579) 
(PUT 'QQE_LESSP-DBL-CRIT 'DEFINED-IN-FILE 'REDLOG/QQE/QQEMISC.RED) 
(PUT 'QQE_LESSP-DBL-CRIT 'PROCEDURE_TYPE
     '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE QQE_LESSP-DBL-CRIT (X1 X2)
    (PROG (MINLENGTH1 MINLENGTH2 MAXLENGTH1 MAXLENGTH2)
      (SETQ MINLENGTH1 (GET X1 'MINLENGTH))
      (SETQ MINLENGTH2 (GET X2 'MINLENGTH))
      (SETQ MAXLENGTH1 (GET X1 'MAXLENGTH))
      (SETQ MAXLENGTH2 (GET X2 'MAXLENGTH))
      (COND
       ((AND (NULL MINLENGTH1) (NULL MINLENGTH2))
        (PROGN
         (COND ((AND (NULL MAXLENGTH1) (NULL MAXLENGTH2)) (RETURN 'EQ))
               ((NULL MAXLENGTH2) (RETURN NIL)) ((NULL MAXLENGTH1) (RETURN T))
               ((LESSP MAXLENGTH1 MAXLENGTH2) (RETURN NIL))
               ((EQUAL MAXLENGTH1 MAXLENGTH2) (RETURN 'EQ)) (T (RETURN T)))
         NIL))
       ((NULL MINLENGTH1) (RETURN T)) ((NULL MINLENGTH2) (RETURN NIL))
       ((LESSP MINLENGTH1 MINLENGTH2) (RETURN T))
       ((EQUAL MINLENGTH1 MINLENGTH2)
        (PROGN
         (COND ((AND (NULL MAXLENGTH1) MAXLENGTH2) (RETURN NIL))
               ((EQ MAXLENGTH1 MAXLENGTH2) (RETURN 'EQ)) (T (RETURN T)))
         NIL))
       (T (RETURN NIL))))) 
(ENDMODULE) 