(cl:declaim (cl:optimize cl:debug cl:safety))
(cl:declaim (sb-ext:muffle-conditions sb-ext:compiler-note cl:style-warning))
(MODULE (LIST 'RAIV)) 
(PUT 'RIV_MK 'NUMBER-OF-ARGS 2) 
(DE RIV_MK (L U) (LIST 'IV L U)) 
(PUT 'RIV_L 'NUMBER-OF-ARGS 1) 
(DE RIV_L (I) (CADR I)) 
(PUT 'RIV_U 'NUMBER-OF-ARGS 1) 
(DE RIV_U (I) (CADDR I)) 
(PUT 'RIV_PLUS 'NUMBER-OF-ARGS 2) 
(DE RIV_PLUS (I1 I2)
    (RIV_MK (ADDSQ (RIV_L I1) (RIV_L I2)) (ADDSQ (RIV_U I1) (RIV_U I2)))) 
(PUT 'RIV_MINUS 'NUMBER-OF-ARGS 1) 
(DE RIV_MINUS (I) (RIV_MK (NEGSQ (RIV_U I)) (NEGSQ (RIV_L I)))) 
(PUT 'RIV_CONTAINS 'NUMBER-OF-ARGS 2) 
(DE RIV_CONTAINS (I Q) (AND (SFTO_LESSQ (RIV_L I) Q) (SFTO_LESSQ Q (RIV_U I)))) 
(PUT 'IV 'PRIFN 'RIV_PRINT) 
(PUT 'RIV_PRINT0 'NUMBER-OF-ARGS 1) 
(DE RIV_PRINT0 (I)
    (PROG (W1 W2)
      (PRIN2* "]")
      (COND
       (*RARAT
        (PROGN
         (MAPRIN (PREPSQ (RIV_L I)))
         (PRIN2* ", ")
         (MAPRIN (PREPSQ (RIV_U I)))))
       (T
        (PROGN
         (SETQ W1 (SFTO_TRUNCQ (RIV_L I) (PRECISION 0)))
         (SETQ W2 (SFTO_TRUNCQ (RIV_U I) (PRECISION 0)))
         (ON1 'ROUNDED)
         (MAPRIN (REVAL1 (PREPSQ W1) T))
         (PRIN2* ", ")
         (MAPRIN (REVAL1 (PREPSQ W2) T))
         (OFF1 'ROUNDED))))
      (PRIN2* "["))) 
(DE RIV_PRINT (A1) (RA_WRAPPER 'RIV_PRINT0 (LIST A1))) 
(PUT 'RIV_PRINT 'NUMBER-OF-ARGS 1) 
(PUT 'RIV_RAT2FLOAT 'NUMBER-OF-ARGS 2) 
(DE RIV_RAT2FLOAT (Q PREC)
    (PROG (W SH)
      (SETQ SH (EXPT 10 PREC))
      (SETQ W (QUOTIENT (FLOAT (OR (CAR Q) 0)) (FLOAT (CDR Q))))
      (RETURN (QUOTIENT (FLOAT (FIX (TIMES W SH))) SH)))) 
(ENDMODULE) 