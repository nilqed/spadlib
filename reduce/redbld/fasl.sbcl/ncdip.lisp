(cl:declaim (cl:optimize cl:debug cl:safety))
(cl:declaim (sb-ext:muffle-conditions sb-ext:compiler-note cl:style-warning))
(MODULE (LIST 'NCDIP)) 
(PUT 'NCDSETUP* 'NUMBER-OF-ARGS 1) 
(PUT 'NCDSETUP* 'DEFINED-ON-LINE '30) 
(PUT 'NCDSETUP* 'DEFINED-IN-FILE 'NCPOLY/NCDIP.RED) 
(PUT 'NCDSETUP* 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE NCDSETUP* (U)
    (PROG (X Y W VARS LH Z LV R Q)
      (SETQ VARS
              (PROG (X FORALL-RESULT FORALL-ENDPTR)
                (SETQ X (CDR (LISTEVAL (CAR U) NIL)))
                (COND ((NULL X) (RETURN NIL)))
                (SETQ FORALL-RESULT
                        (SETQ FORALL-ENDPTR
                                (CONS ((LAMBDA (X) (REVAL1 X T)) (CAR X))
                                      NIL)))
               LOOPLABEL
                (SETQ X (CDR X))
                (COND ((NULL X) (RETURN FORALL-RESULT)))
                (RPLACD FORALL-ENDPTR
                        (CONS ((LAMBDA (X) (REVAL1 X T)) (CAR X)) NIL))
                (SETQ FORALL-ENDPTR (CDR FORALL-ENDPTR))
                (GO LOOPLABEL)))
      (SETQ NCDIPCIRCULAR* NIL)
      (COND ((NULL VDPSORTMODE*) (SETQ VDPSORTMODE* 'LEX)))
      (VDPINIT2 (SETQ NCDIPVARS* VARS))
      (SETQ LV (LENGTH VARS))
      (SETQ NCDIPBASE* (MKVECT LV))
      (SETQ NCDIPTABLE* (MKVECT LV))
      (PROG (I)
        (SETQ I 1)
       LAB
        (COND ((MINUSP (DIFFERENCE LV I)) (RETURN NIL)))
        (PUTV NCDIPTABLE* I (MKVECT LV))
        (SETQ I (PLUS2 I 1))
        (GO LAB))
      (SETQ Q (CDR (LISTEVAL (CADR U) NIL)))
      (PROG ()
       WHILELABEL
        (COND ((NOT Q) (RETURN NIL)))
        (PROGN
         (SETQ R (CAR Q))
         (SETQ Q (CDR Q))
         (COND
          ((AND (OR (EQCAR R 'EQUAL) (EQCAR R 'REPLACEBY))
                (EQCAR (SETQ LH (CADR R)) 'TIMES) (NULL (CDDDR R))
                (SETQ W (MEMBER (SETQ Y (CADDR LH)) VARS))
                (MEMBER (SETQ X (CADR LH)) W))
           (PROGN
            (COND ((OR (SMEMBER X Q) (SMEMBER Y Q)) (SETQ NCDIPCIRCULAR* T)))
            (PROG (V)
              (SETQ V VARS)
             LAB
              (COND ((NULL V) (RETURN NIL)))
              ((LAMBDA (V)
                 (COND
                  ((AND (NEQ V X) (NEQ V Y) (SMEMBER V (CADDR R)))
                   (SETQ NCDIPCIRCULAR* T))))
               (CAR V))
              (SETQ V (CDR V))
              (GO LAB))
            (SETQ W (CONS (NCDIPNDX X VARS 1) (NCDIPNDX Y VARS 1)))
            (SETQ R (A2DIP (SETQ Z (REVAL1 (CADDR R) T))))
            (COND
             ((LESSP (EVCOMP (CAR R) (CAR (A2DIP (LIST 'TIMES X Y)))) 0)
              (TYPERR (LIST 'EQUAL (LIST 'TIMES X Y) Z)
                      "commutator under current term order")))
            (PUTV NCDIPBASE* (CAR W)
                  (SORT (CONS (CDR W) (GETV NCDIPBASE* (CAR W))) 'LESSP))
            (PUTV (GETV NCDIPTABLE* (CAR W)) (CDR W)
                  (LIST (CONS '(1 . 1) R)))))
          (T (TYPERR R "commutator "))))
        (GO WHILELABEL)))) 
(PUT 'NCDIPNDX 'NUMBER-OF-ARGS 3) 
(PUT 'NCDIPNDX 'DEFINED-ON-LINE '71) 
(PUT 'NCDIPNDX 'DEFINED-IN-FILE 'NCPOLY/NCDIP.RED) 
(PUT 'NCDIPNDX 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL GENERAL) GENERAL)) 
(DE NCDIPNDX (X VARS N)
    (COND ((NULL VARS) 0) ((EQUAL X (CAR VARS)) N)
          (T (NCDIPNDX X (CDR VARS) (IPLUS2 N 1))))) 
(PUT 'VDP-NC-M*P 'NUMBER-OF-ARGS 3) 
(PUT 'VDP-NC-M*P 'DEFINED-ON-LINE '76) 
(PUT 'VDP-NC-M*P 'DEFINED-IN-FILE 'NCPOLY/NCDIP.RED) 
(PUT 'VDP-NC-M*P 'PROCEDURE_TYPE
     '(ARROW (TIMES GENERAL GENERAL GENERAL) GENERAL)) 
(DE VDP-NC-M*P (BC EV P)
    (PROG (R S)
      (SETQ R (DIP2VDP (DIP-NC-M*P BC EV (CADR (CDDR P)))))
      (COND
       (*GSUGAR
        (PROGN
         (SETQ S (GSUGAR P))
         (PROG (E)
           (SETQ E EV)
          LAB
           (COND ((NULL E) (RETURN NIL)))
           ((LAMBDA (E) (SETQ S (PLUS S E))) (CAR E))
           (SETQ E (CDR E))
           (GO LAB))
         (SETQ R (GSETSUGAR R S)))))
      (RETURN R))) 
(PUT 'VDP-NC-PROD 'NUMBER-OF-ARGS 2) 
(PUT 'VDP-NC-PROD 'DEFINED-ON-LINE '84) 
(PUT 'VDP-NC-PROD 'DEFINED-IN-FILE 'NCPOLY/NCDIP.RED) 
(PUT 'VDP-NC-PROD 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE VDP-NC-PROD (U V)
    (PROG (R)
      (SETQ R (DIP2VDP (DIP-NC-PROD (CADR (CDDR U)) (CADR (CDDR V)))))
      (COND (*GSUGAR (SETQ R (GSETSUGAR R (PLUS (GSUGAR U) (GSUGAR V))))))
      (RETURN R))) 
(PUT 'DIP-NC-PROD 'NUMBER-OF-ARGS 2) 
(PUT 'DIP-NC-PROD 'DEFINED-ON-LINE '91) 
(PUT 'DIP-NC-PROD 'DEFINED-IN-FILE 'NCPOLY/NCDIP.RED) 
(PUT 'DIP-NC-PROD 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE DIP-NC-PROD (U V)
    (COND ((LESSP (LENGTH U) (LENGTH V)) (DIP-NC-PROD-DISTLEFT U V))
          (T (DIP-NC-PROD-DISTRIGHT U V)))) 
(PUT 'DIP-NC-PROD-DISTLEFT 'NUMBER-OF-ARGS 2) 
(PUT 'DIP-NC-PROD-DISTLEFT 'DEFINED-ON-LINE '96) 
(PUT 'DIP-NC-PROD-DISTLEFT 'DEFINED-IN-FILE 'NCPOLY/NCDIP.RED) 
(PUT 'DIP-NC-PROD-DISTLEFT 'PROCEDURE_TYPE
     '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE DIP-NC-PROD-DISTLEFT (U V)
    (COND ((NULL U) U)
          (T
           (DIPSUM (DIP-NC-M*P-DISTLEFT (CADR U) (CAR U) V)
                   (DIP-NC-PROD-DISTLEFT (CDDR U) V))))) 
(PUT 'DIP-NC-M*P-DISTLEFT 'NUMBER-OF-ARGS 3) 
(PUT 'DIP-NC-M*P-DISTLEFT 'DEFINED-ON-LINE '101) 
(PUT 'DIP-NC-M*P-DISTLEFT 'DEFINED-IN-FILE 'NCPOLY/NCDIP.RED) 
(PUT 'DIP-NC-M*P-DISTLEFT 'PROCEDURE_TYPE
     '(ARROW (TIMES GENERAL GENERAL GENERAL) GENERAL)) 
(DE DIP-NC-M*P-DISTLEFT (BC EV P)
    (COND ((NULL P) NIL)
          (T
           (PROG (LEV LBC Q)
             (SETQ LEV (CAR P))
             (SETQ LBC (CADR P))
             (SETQ P (DIP-NC-M*P-DISTLEFT BC EV (CDDR P)))
             (SETQ Q (DIP-NC-EV-PROD BC EV LBC LEV))
             (RETURN (DIPSUM P Q)))))) 
(PUT 'DIP-NC-PROD-DISTRIGHT 'NUMBER-OF-ARGS 2) 
(PUT 'DIP-NC-PROD-DISTRIGHT 'DEFINED-ON-LINE '109) 
(PUT 'DIP-NC-PROD-DISTRIGHT 'DEFINED-IN-FILE 'NCPOLY/NCDIP.RED) 
(PUT 'DIP-NC-PROD-DISTRIGHT 'PROCEDURE_TYPE
     '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE DIP-NC-PROD-DISTRIGHT (U V)
    (COND ((NULL V) V)
          (T
           (DIPSUM (DIP-NC-M*P-DISTRIGHT U (CADR V) (CAR V))
                   (DIP-NC-PROD-DISTRIGHT U (CDDR V)))))) 
(PUT 'DIP-NC-M*P-DISTRIGHT 'NUMBER-OF-ARGS 3) 
(PUT 'DIP-NC-M*P-DISTRIGHT 'DEFINED-ON-LINE '114) 
(PUT 'DIP-NC-M*P-DISTRIGHT 'DEFINED-IN-FILE 'NCPOLY/NCDIP.RED) 
(PUT 'DIP-NC-M*P-DISTRIGHT 'PROCEDURE_TYPE
     '(ARROW (TIMES GENERAL GENERAL GENERAL) GENERAL)) 
(DE DIP-NC-M*P-DISTRIGHT (P BC EV)
    (COND ((NULL P) NIL)
          (T
           (PROG (LEV LBC Q)
             (SETQ LEV (CAR P))
             (SETQ LBC (CADR P))
             (SETQ P (DIP-NC-M*P-DISTRIGHT (CDDR P) BC EV))
             (SETQ Q (DIP-NC-EV-PROD LBC LEV BC EV))
             (RETURN (DIPSUM P Q)))))) 
(PUT 'DIP-NC-EV-PROD 'NUMBER-OF-ARGS 4) 
(PUT 'DIP-NC-EV-PROD 'DEFINED-ON-LINE '122) 
(PUT 'DIP-NC-EV-PROD 'DEFINED-IN-FILE 'NCPOLY/NCDIP.RED) 
(PUT 'DIP-NC-EV-PROD 'PROCEDURE_TYPE
     '(ARROW (TIMES GENERAL GENERAL GENERAL GENERAL) GENERAL)) 
(DE DIP-NC-EV-PROD (BC1 EV1 BC2 EV2)
    (DIP-NC-EV-PROD1 EV1 1 (CONS EV2 (CONS (BCPROD BC1 BC2) NIL)))) 
(PUT 'DIP-NC-EV-PROD1 'NUMBER-OF-ARGS 3) 
(PUT 'DIP-NC-EV-PROD1 'DEFINED-ON-LINE '126) 
(PUT 'DIP-NC-EV-PROD1 'DEFINED-IN-FILE 'NCPOLY/NCDIP.RED) 
(PUT 'DIP-NC-EV-PROD1 'PROCEDURE_TYPE
     '(ARROW (TIMES GENERAL GENERAL GENERAL) GENERAL)) 
(DE DIP-NC-EV-PROD1 (EV N R)
    (COND ((NULL EV) R)
          (T
           (DIP-NC-EV-PROD2 (CAR EV) N
            (DIP-NC-EV-PROD1 (CDR EV) (IPLUS2 N 1) R))))) 
(PUT 'DIP-NC-EV-PROD2 'NUMBER-OF-ARGS 3) 
(PUT 'DIP-NC-EV-PROD2 'DEFINED-ON-LINE '132) 
(PUT 'DIP-NC-EV-PROD2 'DEFINED-IN-FILE 'NCPOLY/NCDIP.RED) 
(PUT 'DIP-NC-EV-PROD2 'PROCEDURE_TYPE
     '(ARROW (TIMES GENERAL GENERAL GENERAL) GENERAL)) 
(DE DIP-NC-EV-PROD2 (J N R)
    (COND ((OR (EQUAL J 0) (NULL R)) R)
          (T
           (PROG (EV BC R0 W S EVL EVR I)
             (SETQ I 0)
             (SETQ EV (CAR R))
             (SETQ BC (CADR R))
             (SETQ R (DIP-NC-EV-PROD2 J N (CDDR R)))
             (SETQ W (GETV NCDIPBASE* N))
             (PROG ()
              WHILELABEL
               (COND ((NOT (AND W (EQUAL (NTH EV (CAR W)) 0))) (RETURN NIL)))
               (SETQ W (CDR W))
               (GO WHILELABEL))
             (COND
              ((NULL W)
               (PROGN
                (SETQ R0 (CONS (DIPEVADD1VAR J N EV) (CONS BC NIL)))
                (RETURN (DIPSUM R0 R)))))
             (SETQ W (CAR W))
             (SETQ S (NTH EV W))
             (SETQ I 0)
             (PROG (E)
               (SETQ E EV)
              LAB
               (COND ((NULL E) (RETURN NIL)))
               ((LAMBDA (E)
                  (PROGN
                   (SETQ I (IPLUS2 I 1))
                   (COND
                    ((LESSP I W)
                     (PROGN (SETQ EVL (CONS E EVL)) (SETQ EVR (CONS 0 EVR))))
                    ((EQUAL I W)
                     (PROGN (SETQ EVL (CONS 0 EVL)) (SETQ EVR (CONS 0 EVR))))
                    (T
                     (PROGN
                      (SETQ EVL (CONS 0 EVL))
                      (SETQ EVR (CONS E EVR)))))))
                (CAR E))
               (SETQ E (CDR E))
               (GO LAB))
             (SETQ EVL (REVERSIP EVL))
             (SETQ EVR (REVERSIP EVR))
             (SETQ R0 (DIP-NC-GET-COMMUTATOR N J W S))
             (SETQ R0
                     (COND
                      (NCDIPCIRCULAR*
                       (PROGN
                        (SETQ R0
                                (DIP-NC-PROD (CONS EVL (CONS (A2BC 1) NIL))
                                 R0))
                        (SETQ R0 (DIP-NC-PROD R0 (CONS EVR (CONS BC NIL))))))
                      (T
                       (PROGN
                        (SETQ R0 (DIPPROD (CONS EVL (CONS (A2BC 1) NIL)) R0))
                        (SETQ R0 (DIPPROD R0 (CONS EVR (CONS BC NIL))))))))
            DONE
             (RETURN (DIPSUM R0 R)))))) 
(PUT 'DIP-NC-GET-COMMUTATOR 'NUMBER-OF-ARGS 4) 
(PUT 'DIP-NC-GET-COMMUTATOR 'DEFINED-ON-LINE '163) 
(PUT 'DIP-NC-GET-COMMUTATOR 'DEFINED-IN-FILE 'NCPOLY/NCDIP.RED) 
(PUT 'DIP-NC-GET-COMMUTATOR 'PROCEDURE_TYPE
     '(ARROW (TIMES GENERAL GENERAL GENERAL GENERAL) GENERAL)) 
(DE DIP-NC-GET-COMMUTATOR (N1 E1 N2 E2)
    (PROG (W R P)
      (SETQ W (GETV (GETV NCDIPTABLE* N1) N2))
      (SETQ P (CONS E1 E2))
      (COND ((SETQ R (ASSOC P W)) (RETURN (CDR R))))
      (SETQ R
              (COND
               ((GREATERP E1 1)
                (DIP-NC-EV-PROD2 1 N1
                 (DIP-NC-GET-COMMUTATOR N1 (IDIFFERENCE E1 1) N2 E2)))
               (T
                (DIP-NC-PROD (DIP-NC-GET-COMMUTATOR N1 1 N2 (IDIFFERENCE E2 1))
                 (DIPFVARINDEX N2)))))
      (NCONC W (LIST (CONS P R)))
      (RETURN R))) 
(PUT 'DIPFVARINDEX 'NUMBER-OF-ARGS 1) 
(PUT 'DIPFVARINDEX 'DEFINED-ON-LINE '185) 
(PUT 'DIPFVARINDEX 'DEFINED-IN-FILE 'NCPOLY/NCDIP.RED) 
(PUT 'DIPFVARINDEX 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE DIPFVARINDEX (N) (A2DIP (NTH DIPVARS* N))) 
(PUT 'DIPEVADD1VAR 'NUMBER-OF-ARGS 3) 
(PUT 'DIPEVADD1VAR 'DEFINED-ON-LINE '190) 
(PUT 'DIPEVADD1VAR 'DEFINED-IN-FILE 'NCPOLY/NCDIP.RED) 
(PUT 'DIPEVADD1VAR 'PROCEDURE_TYPE
     '(ARROW (TIMES GENERAL GENERAL GENERAL) GENERAL)) 
(DE DIPEVADD1VAR (E N EV)
    (COND ((OR (NULL EV) (LESSP N 1)) EV)
          ((EQUAL N 1) (CONS (IPLUS2 (CAR EV) E) (CDR EV)))
          (T (CONS (CAR EV) (DIPEVADD1VAR E (IDIFFERENCE N 1) (CDR EV)))))) 
(PUT 'A2NCDIP 'NUMBER-OF-ARGS 1) 
(PUT 'A2NCDIP 'DEFINED-ON-LINE '197) 
(PUT 'A2NCDIP 'DEFINED-IN-FILE 'NCPOLY/NCDIP.RED) 
(PUT 'A2NCDIP 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE A2NCDIP (A)
    (COND ((ATOM A) (A2DIP A))
          ((EQUAL (CAR A) 'DIFFERENCE)
           (A2NCDIP (LIST 'PLUS (CADR A) (LIST 'TIMES (MINUS 1) (CADDR A)))))
          ((EQUAL (CAR A) 'MINUS) (A2NCDIP (LIST 'TIMES (MINUS 1) (CADR A))))
          ((AND (EQUAL (CAR A) 'EXPT) (FIXP (CADDR A)))
           (A2NCDIP
            (CONS 'TIMES
                  (PROG (I FORALL-RESULT FORALL-ENDPTR)
                    (SETQ I 1)
                    (COND ((MINUSP (DIFFERENCE (CADDR A) I)) (RETURN NIL)))
                    (SETQ FORALL-RESULT
                            (SETQ FORALL-ENDPTR (CONS (CADR A) NIL)))
                   LOOPLABEL
                    (SETQ I (PLUS2 I 1))
                    (COND
                     ((MINUSP (DIFFERENCE (CADDR A) I))
                      (RETURN FORALL-RESULT)))
                    (RPLACD FORALL-ENDPTR (CONS (CADR A) NIL))
                    (SETQ FORALL-ENDPTR (CDR FORALL-ENDPTR))
                    (GO LOOPLABEL)))))
          ((EQUAL (CAR A) 'PLUS)
           (PROG (R)
             (SETQ R (A2NCDIP (CADR A)))
             (PROG (W)
               (SETQ W (CDDR A))
              LAB
               (COND ((NULL W) (RETURN NIL)))
               ((LAMBDA (W) (SETQ R (DIPSUM R (A2NCDIP W)))) (CAR W))
               (SETQ W (CDR W))
               (GO LAB))
             (RETURN R)))
          ((EQUAL (CAR A) 'TIMES)
           (PROG (R)
             (SETQ R (A2NCDIP (CADR A)))
             (PROG (W)
               (SETQ W (CDDR A))
              LAB
               (COND ((NULL W) (RETURN NIL)))
               ((LAMBDA (W) (SETQ R (DIP-NC-PROD R (A2NCDIP W)))) (CAR W))
               (SETQ W (CDR W))
               (GO LAB))
             (RETURN R)))
          ((EQUAL (CAR A) '*SQ) (A2NCDIP (PREPSQ (CADR A)))) (T (A2DIP A)))) 
(PUT 'A2NCVDP 'NUMBER-OF-ARGS 1) 
(PUT 'A2NCVDP 'DEFINED-ON-LINE '217) 
(PUT 'A2NCVDP 'DEFINED-IN-FILE 'NCPOLY/NCDIP.RED) 
(PUT 'A2NCVDP 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE A2NCVDP (A) (DIP2VDP (A2NCDIP A))) 
(ENDMODULE) 