(cl:declaim (cl:optimize cl:debug cl:safety))
(cl:declaim (sb-ext:muffle-conditions sb-ext:compiler-note cl:style-warning))
(MODULE (LIST 'DCFSFSISM)) 
(REVISION 'DCFSFSISM
          "$Id: dcfsfsism.red 5986 2021-08-28 13:35:27Z thomas-sturm $") 
(COPYRIGHT 'DCFSFSISM "(c) 2010-2017 T. Sturm") 
(PUT 'DCFSF_SMRMKNOWL 'NUMBER-OF-ARGS 2) 
(PUT 'DCFSF_SMRMKNOWL 'DEFINED-ON-LINE '40) 
(PUT 'DCFSF_SMRMKNOWL 'DEFINED-IN-FILE 'REDLOG/DCFSF/DCFSFSISM.RED) 
(PUT 'DCFSF_SMRMKNOWL 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE DCFSF_SMRMKNOWL (KNOWL V)
    (COND ((NULL KNOWL) NIL)
          ((MEMBER V (KERNELS (CAAR KNOWL))) (DCFSF_SMRMKNOWL (CDR KNOWL) V))
          (T (PROGN (SETCDR KNOWL (DCFSF_SMRMKNOWL (CDR KNOWL) V)) KNOWL)))) 
(PUT 'DCFSF_SMCPKNOWL 'NUMBER-OF-ARGS 1) 
(PUT 'DCFSF_SMCPKNOWL 'DEFINED-ON-LINE '53) 
(PUT 'DCFSF_SMCPKNOWL 'DEFINED-IN-FILE 'REDLOG/DCFSF/DCFSFSISM.RED) 
(PUT 'DCFSF_SMCPKNOWL 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE DCFSF_SMCPKNOWL (KNOWL)
    (PROG (IR FORALL-RESULT FORALL-ENDPTR)
      (SETQ IR KNOWL)
      (COND ((NULL IR) (RETURN NIL)))
      (SETQ FORALL-RESULT
              (SETQ FORALL-ENDPTR
                      (CONS
                       ((LAMBDA (IR) (CONS (CAR IR) (APPEND (CDR IR) NIL)))
                        (CAR IR))
                       NIL)))
     LOOPLABEL
      (SETQ IR (CDR IR))
      (COND ((NULL IR) (RETURN FORALL-RESULT)))
      (RPLACD FORALL-ENDPTR
              (CONS
               ((LAMBDA (IR) (CONS (CAR IR) (APPEND (CDR IR) NIL))) (CAR IR))
               NIL))
      (SETQ FORALL-ENDPTR (CDR FORALL-ENDPTR))
      (GO LOOPLABEL))) 
(PUT 'DCFSF_SMUPDKNOWL 'NUMBER-OF-ARGS 4) 
(PUT 'DCFSF_SMUPDKNOWL 'DEFINED-ON-LINE '60) 
(PUT 'DCFSF_SMUPDKNOWL 'DEFINED-IN-FILE 'REDLOG/DCFSF/DCFSFSISM.RED) 
(PUT 'DCFSF_SMUPDKNOWL 'PROCEDURE_TYPE
     '(ARROW (TIMES GENERAL GENERAL GENERAL GENERAL) GENERAL)) 
(DE DCFSF_SMUPDKNOWL (OP ATL KNOWL N)
    (PROG (W IR A H)
      (COND
       ((EQ OP 'OR)
        (SETQ ATL
                (PROG (AT FORALL-RESULT FORALL-ENDPTR)
                  (SETQ AT ATL)
                  (COND ((NULL AT) (RETURN NIL)))
                  (SETQ FORALL-RESULT
                          (SETQ FORALL-ENDPTR
                                  (CONS
                                   ((LAMBDA (AT) (DCFSF_NEGATEAT AT)) (CAR AT))
                                   NIL)))
                 LOOPLABEL
                  (SETQ AT (CDR AT))
                  (COND ((NULL AT) (RETURN FORALL-RESULT)))
                  (RPLACD FORALL-ENDPTR
                          (CONS ((LAMBDA (AT) (DCFSF_NEGATEAT AT)) (CAR AT))
                                NIL))
                  (SETQ FORALL-ENDPTR (CDR FORALL-ENDPTR))
                  (GO LOOPLABEL)))))
      (COND (*RLSIPLUGTHEO (SETQ ATL (DCFSF_PLUGTHEO ATL KNOWL))))
      (COND ((EQ ATL 'FALSE) (RETURN 'FALSE)))
      (PROG ()
       WHILELABEL
        (COND ((NOT ATL) (RETURN NIL)))
        (PROGN
         (SETQ A (PROG1 (CAR ATL) (SETQ ATL (CDR ATL))))
         (SETQ IR (DCFSF_AT2IR A N))
         (COND
          ((SETQ W (ASSOC (CAR IR) KNOWL))
           (PROGN
            (SETCDR W (DCFSF_SMINSERT (CADR IR) (CDR W)))
            (COND
             ((EQ (CDR W) 'FALSE)
              (PROGN (SETQ ATL NIL) (SETQ KNOWL 'FALSE))))))
          ((AND *RLSID (SETQ W (DCFSF_DASSOC IR KNOWL)))
           (PROGN
            (SETQ H (DCFSF_SMINSERTD IR W))
            (COND ((EQ H 'FALSE) (PROGN (SETQ ATL NIL) (SETQ KNOWL 'FALSE)))
                  ((AND (NEQ H 'TRUE) (NEQ KNOWL 'FALSE))
                   (PROGN
                    (SETQ KNOWL (CONS IR KNOWL))
                    (PROG (IR)
                      (SETQ IR H)
                     LAB
                      (COND ((NULL IR) (RETURN NIL)))
                      ((LAMBDA (IR) (SETQ KNOWL (LTO_DELQIP IR KNOWL)))
                       (CAR IR))
                      (SETQ IR (CDR IR))
                      (GO LAB)))))))
          (T (SETQ KNOWL (CONS IR KNOWL)))))
        (GO WHILELABEL))
      (RETURN KNOWL))) 
(PUT 'DCFSF_PLUGTHEO 'NUMBER-OF-ARGS 2) 
(PUT 'DCFSF_PLUGTHEO 'DEFINED-ON-LINE '102) 
(PUT 'DCFSF_PLUGTHEO 'DEFINED-IN-FILE 'REDLOG/DCFSF/DCFSFSISM.RED) 
(PUT 'DCFSF_PLUGTHEO 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE DCFSF_PLUGTHEO (ATL KNOWL)
    (PROG (*RLSIEXPLA SUBINFO ENTRY A NATL W)
      (SETQ SUBINFO
              (PROG (IR FORALL-RESULT FORALL-ENDPTR)
                (SETQ IR KNOWL)
               STARTOVER
                (COND ((NULL IR) (RETURN NIL)))
                (SETQ FORALL-RESULT
                        ((LAMBDA (IR)
                           (PROGN
                            (SETQ W (DCFSF_SDERLEV (CAR IR)))
                            (COND
                             (W
                              (PROGN
                               (SETQ ENTRY (CDADR IR))
                               (COND
                                ((EQ (CAR ENTRY) 'EQUAL)
                                 (LIST
                                  (CONS (CAR W)
                                        (CONS (CDR W) (CDR ENTRY)))))))))))
                         (CAR IR)))
                (SETQ FORALL-ENDPTR (LASTPAIR FORALL-RESULT))
                (SETQ IR (CDR IR))
                (COND ((ATOM FORALL-ENDPTR) (GO STARTOVER)))
               LOOPLABEL
                (COND ((NULL IR) (RETURN FORALL-RESULT)))
                (RPLACD FORALL-ENDPTR
                        ((LAMBDA (IR)
                           (PROGN
                            (SETQ W (DCFSF_SDERLEV (CAR IR)))
                            (COND
                             (W
                              (PROGN
                               (SETQ ENTRY (CDADR IR))
                               (COND
                                ((EQ (CAR ENTRY) 'EQUAL)
                                 (LIST
                                  (CONS (CAR W)
                                        (CONS (CDR W) (CDR ENTRY)))))))))))
                         (CAR IR)))
                (SETQ FORALL-ENDPTR (LASTPAIR FORALL-ENDPTR))
                (SETQ IR (CDR IR))
                (GO LOOPLABEL)))
      (PROG ()
       WHILELABEL
        (COND ((NOT ATL) (RETURN NIL)))
        (PROGN
         (SETQ A (PROG1 (CAR ATL) (SETQ ATL (CDR ATL))))
         (SETQ A (DCFSF_PLUGTHEO1 A SUBINFO))
         (SETQ A (RL_SIMPLAT1 A 'AND))
         (COND ((EQ A 'FALSE) (PROGN (SETQ NATL 'FALSE) (SETQ ATL NIL)))
               ((NEQ A 'TRUE)
                (COND
                 ((EQ (COND ((ATOM A) A) (T (CAR A))) 'AND)
                  (SETQ NATL (NCONC (REVERSE (CDR A)) NATL)))
                 (T (SETQ NATL (CONS A NATL)))))))
        (GO WHILELABEL))
      (COND ((EQ NATL 'FALSE) (RETURN NATL)))
      (RETURN (REVERSIP NATL)))) 
(PUT 'DCFSF_PLUGTHEO1 'NUMBER-OF-ARGS 2) 
(PUT 'DCFSF_PLUGTHEO1 'DEFINED-ON-LINE '130) 
(PUT 'DCFSF_PLUGTHEO1 'DEFINED-IN-FILE 'REDLOG/DCFSF/DCFSFSISM.RED) 
(PUT 'DCFSF_PLUGTHEO1 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE DCFSF_PLUGTHEO1 (AT SUBINFO)
    (PROG (LHS)
      (SETQ LHS (CAR (DCFSF_PLUGTHEOF (DCFSF_ARG2L AT) SUBINFO)))
      (RETURN (DCFSF_0MK2 (DCFSF_OP AT) LHS)))) 
(PUT 'DCFSF_PLUGTHEOF 'NUMBER-OF-ARGS 2) 
(PUT 'DCFSF_PLUGTHEOF 'DEFINED-ON-LINE '136) 
(PUT 'DCFSF_PLUGTHEOF 'DEFINED-IN-FILE 'REDLOG/DCFSF/DCFSFSISM.RED) 
(PUT 'DCFSF_PLUGTHEOF 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE DCFSF_PLUGTHEOF (LHS SUBINFO)
    (PROG (C KQ L R)
      (COND ((OR (ATOM LHS) (ATOM (CAR LHS))) (RETURN (CONS LHS 1))))
      (SETQ C (DCFSF_PLUGTHEOF (CDAR LHS) SUBINFO))
      (SETQ KQ (DCFSF_PLUGTHEOK (CAAAR LHS) SUBINFO))
      (SETQ L (CDAAR LHS))
      (SETQ R (DCFSF_PLUGTHEOF (CDR LHS) SUBINFO))
      (RETURN (ADDSQ (MULTSQ C (EXPTSQ KQ L)) R)))) 
(PUT 'DCFSF_PLUGTHEOK 'NUMBER-OF-ARGS 2) 
(PUT 'DCFSF_PLUGTHEOK 'DEFINED-ON-LINE '147) 
(PUT 'DCFSF_PLUGTHEOK 'DEFINED-IN-FILE 'REDLOG/DCFSF/DCFSFSISM.RED) 
(PUT 'DCFSF_PLUGTHEOK 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE DCFSF_PLUGTHEOK (K SUBINFO)
    (PROG (V DERLEV W)
      (COND ((IDP K) (PROGN (SETQ V K) (SETQ DERLEV 0)))
            ((EQCAR K 'D) (PROGN (SETQ V (CADR K)) (SETQ DERLEV (CADDR K))))
            (T (REDERR (LIST "dcfsf_plugtheok: bad kernel" K))))
      (SETQ W (ATSOC V SUBINFO))
      (COND ((NOT W) (RETURN (CONS (LIST (CONS (CONS K 1) 1)) 1))))
      (SETQ W (CDR W))
      (COND ((EQUAL (CAR W) DERLEV) (RETURN (CDR W))))
      (COND ((LESSP (CAR W) DERLEV) (RETURN (CONS NIL 1))))
      (RETURN (CONS (LIST (CONS (CONS K 1) 1)) 1)))) 
(PUT 'DCFSF_DASSOC 'NUMBER-OF-ARGS 2) 
(PUT 'DCFSF_DASSOC 'DEFINED-ON-LINE '168) 
(PUT 'DCFSF_DASSOC 'DEFINED-IN-FILE 'REDLOG/DCFSF/DCFSFSISM.RED) 
(PUT 'DCFSF_DASSOC 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE DCFSF_DASSOC (IR KNOWL)
    (PROG (V W)
      (COND ((NOT (SETQ W (DCFSF_SDERIVP IR))) (RETURN NIL)))
      (SETQ V (CAAR W))
      (RETURN
       (PROG (KIR FORALL-RESULT FORALL-ENDPTR)
         (SETQ KIR KNOWL)
        STARTOVER
         (COND ((NULL KIR) (RETURN NIL)))
         (SETQ FORALL-RESULT
                 ((LAMBDA (KIR)
                    (COND
                     ((AND (SETQ W (DCFSF_SDERIVP KIR)) (EQ (CAAR W) V))
                      (LIST KIR))))
                  (CAR KIR)))
         (SETQ FORALL-ENDPTR (LASTPAIR FORALL-RESULT))
         (SETQ KIR (CDR KIR))
         (COND ((ATOM FORALL-ENDPTR) (GO STARTOVER)))
        LOOPLABEL
         (COND ((NULL KIR) (RETURN FORALL-RESULT)))
         (RPLACD FORALL-ENDPTR
                 ((LAMBDA (KIR)
                    (COND
                     ((AND (SETQ W (DCFSF_SDERIVP KIR)) (EQ (CAAR W) V))
                      (LIST KIR))))
                  (CAR KIR)))
         (SETQ FORALL-ENDPTR (LASTPAIR FORALL-ENDPTR))
         (SETQ KIR (CDR KIR))
         (GO LOOPLABEL))))) 
(PUT 'DCFSF_SDERIVP 'NUMBER-OF-ARGS 1) 
(PUT 'DCFSF_SDERIVP 'DEFINED-ON-LINE '180) 
(PUT 'DCFSF_SDERIVP 'DEFINED-IN-FILE 'REDLOG/DCFSF/DCFSFSISM.RED) 
(PUT 'DCFSF_SDERIVP 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE DCFSF_SDERIVP (IR)
    ((LAMBDA (W WW) (COND ((AND W WW) (CONS W WW)))) (DCFSF_SDERLEV (CAR IR))
     (DCFSF_SDERINFO (CDR IR)))) 
(PUT 'DCFSF_SDERLEV 'NUMBER-OF-ARGS 1) 
(PUT 'DCFSF_SDERLEV 'DEFINED-ON-LINE '187) 
(PUT 'DCFSF_SDERLEV 'DEFINED-IN-FILE 'REDLOG/DCFSF/DCFSFSISM.RED) 
(PUT 'DCFSF_SDERLEV 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE DCFSF_SDERLEV (F)
    (COND
     ((AND (NOT (OR (ATOM F) (ATOM (CAR F)))) (NOT (CDR F)) (EQUAL (CDAR F) 1))
      (COND ((IDP (CAAAR F)) (CONS (CAAAR F) 0))
            ((EQCAR (CAAAR F) 'D) (CONS (CADR (CAAAR F)) (CADDR (CAAAR F)))))))) 
(PUT 'DCFSF_SDERINFO 'NUMBER-OF-ARGS 1) 
(PUT 'DCFSF_SDERINFO 'DEFINED-ON-LINE '194) 
(PUT 'DCFSF_SDERINFO 'DEFINED-IN-FILE 'REDLOG/DCFSF/DCFSFSISM.RED) 
(PUT 'DCFSF_SDERINFO 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE DCFSF_SDERINFO (DB)
    (PROG (C LE ENTRY)
      (SETQ C T)
      (PROG ()
       WHILELABEL
        (COND ((NOT (AND C DB)) (RETURN NIL)))
        (PROGN
         (SETQ LE (CAR DB))
         (SETQ ENTRY (CDR LE))
         (COND
          ((OR (EQ (CAR ENTRY) 'EQUAL) (NULL (CAR (CDR ENTRY)))) (SETQ C NIL))
          (T (SETQ DB (CDR DB)))))
        (GO WHILELABEL))
      (RETURN DB))) 
(PUT 'DCFSF_SMMKATL 'NUMBER-OF-ARGS 4) 
(PUT 'DCFSF_SMMKATL 'DEFINED-ON-LINE '207) 
(PUT 'DCFSF_SMMKATL 'DEFINED-IN-FILE 'REDLOG/DCFSF/DCFSFSISM.RED) 
(PUT 'DCFSF_SMMKATL 'PROCEDURE_TYPE
     '(ARROW (TIMES GENERAL GENERAL GENERAL GENERAL) GENERAL)) 
(DE DCFSF_SMMKATL (OP OLDKNOWL NEWKNOWL N) (DCFSF_IRL2ATL OP NEWKNOWL N)) 
(PUT 'DCFSF_SMDBGETREL 'NUMBER-OF-ARGS 2) 
(PUT 'DCFSF_SMDBGETREL 'DEFINED-ON-LINE '214) 
(PUT 'DCFSF_SMDBGETREL 'DEFINED-IN-FILE 'REDLOG/DCFSF/DCFSFSISM.RED) 
(PUT 'DCFSF_SMDBGETREL 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE DCFSF_SMDBGETREL (ABSSQ DB)
    (COND ((EQUAL ABSSQ (CDDAR DB)) (CADAR DB))
          ((CDR DB) (DCFSF_SMDBGETREL ABSSQ (CDR DB))))) 
(PUT 'DCFSF_AT2IR 'NUMBER-OF-ARGS 2) 
(PUT 'DCFSF_AT2IR 'DEFINED-ON-LINE '220) 
(PUT 'DCFSF_AT2IR 'DEFINED-IN-FILE 'REDLOG/DCFSF/DCFSFSISM.RED) 
(PUT 'DCFSF_AT2IR 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE DCFSF_AT2IR (ATF N)
    (PROG (OP PAR ABS C)
      (SETQ OP (DCFSF_OP ATF))
      (SETQ ABS (SETQ PAR (DCFSF_ARG2L ATF)))
      (PROG ()
       WHILELABEL
        (COND ((NOT (NOT (OR (ATOM ABS) (ATOM (CAR ABS))))) (RETURN NIL)))
        (SETQ ABS (CDR ABS))
        (GO WHILELABEL))
      (SETQ PAR (ADDF PAR (NEGF ABS)))
      (SETQ C (SFTO_DCONTENTF PAR))
      (SETQ PAR ((LAMBDA (*EXP) (QUOTF1 PAR C)) T))
      (SETQ ABS (MULTSQ (CONS ABS 1) (INVSQ (CONS C 1))))
      (RETURN (CONS PAR (LIST (CONS N (CONS OP ABS))))))) 
(PUT 'DCFSF_IRL2ATL 'NUMBER-OF-ARGS 3) 
(PUT 'DCFSF_IRL2ATL 'DEFINED-ON-LINE '235) 
(PUT 'DCFSF_IRL2ATL 'DEFINED-IN-FILE 'REDLOG/DCFSF/DCFSFSISM.RED) 
(PUT 'DCFSF_IRL2ATL 'PROCEDURE_TYPE
     '(ARROW (TIMES GENERAL GENERAL GENERAL) GENERAL)) 
(DE DCFSF_IRL2ATL (OP IRL N)
    (PROG (IR FORALL-RESULT FORALL-ENDPTR)
      (SETQ IR IRL)
     STARTOVER
      (COND ((NULL IR) (RETURN NIL)))
      (SETQ FORALL-RESULT ((LAMBDA (IR) (DCFSF_IR2ATL OP IR N)) (CAR IR)))
      (SETQ FORALL-ENDPTR (LASTPAIR FORALL-RESULT))
      (SETQ IR (CDR IR))
      (COND ((ATOM FORALL-ENDPTR) (GO STARTOVER)))
     LOOPLABEL
      (COND ((NULL IR) (RETURN FORALL-RESULT)))
      (RPLACD FORALL-ENDPTR ((LAMBDA (IR) (DCFSF_IR2ATL OP IR N)) (CAR IR)))
      (SETQ FORALL-ENDPTR (LASTPAIR FORALL-ENDPTR))
      (SETQ IR (CDR IR))
      (GO LOOPLABEL))) 
(PUT 'DCFSF_IR2ATL 'NUMBER-OF-ARGS 3) 
(PUT 'DCFSF_IR2ATL 'DEFINED-ON-LINE '241) 
(PUT 'DCFSF_IR2ATL 'DEFINED-IN-FILE 'REDLOG/DCFSF/DCFSFSISM.RED) 
(PUT 'DCFSF_IR2ATL 'PROCEDURE_TYPE
     '(ARROW (TIMES GENERAL GENERAL GENERAL) GENERAL)) 
(DE DCFSF_IR2ATL (OP IR N)
    ((LAMBDA (A)
       (PROG (LE FORALL-RESULT FORALL-ENDPTR)
         (SETQ LE (CDR IR))
        STARTOVER
         (COND ((NULL LE) (RETURN NIL)))
         (SETQ FORALL-RESULT
                 ((LAMBDA (LE)
                    (COND
                     ((EQUAL (CAR LE) N)
                      (LIST (DCFSF_ENTRY2AT OP (CDR LE) A)))))
                  (CAR LE)))
         (SETQ FORALL-ENDPTR (LASTPAIR FORALL-RESULT))
         (SETQ LE (CDR LE))
         (COND ((ATOM FORALL-ENDPTR) (GO STARTOVER)))
        LOOPLABEL
         (COND ((NULL LE) (RETURN FORALL-RESULT)))
         (RPLACD FORALL-ENDPTR
                 ((LAMBDA (LE)
                    (COND
                     ((EQUAL (CAR LE) N)
                      (LIST (DCFSF_ENTRY2AT OP (CDR LE) A)))))
                  (CAR LE)))
         (SETQ FORALL-ENDPTR (LASTPAIR FORALL-ENDPTR))
         (SETQ LE (CDR LE))
         (GO LOOPLABEL)))
     (CONS (CAR IR) 1))) 
(PUT 'DCFSF_ENTRY2AT 'NUMBER-OF-ARGS 3) 
(PUT 'DCFSF_ENTRY2AT 'DEFINED-ON-LINE '245) 
(PUT 'DCFSF_ENTRY2AT 'DEFINED-IN-FILE 'REDLOG/DCFSF/DCFSFSISM.RED) 
(PUT 'DCFSF_ENTRY2AT 'PROCEDURE_TYPE
     '(ARROW (TIMES GENERAL GENERAL GENERAL) GENERAL)) 
(DE DCFSF_ENTRY2AT (OP ENTRY PARASQ)
    (COND (*RLIDENTIFY (CL_IDENTIFYAT (DCFSF_ENTRY2AT1 OP ENTRY PARASQ)))
          (T (DCFSF_ENTRY2AT1 OP ENTRY PARASQ)))) 
(PUT 'DCFSF_ENTRY2AT1 'NUMBER-OF-ARGS 3) 
(PUT 'DCFSF_ENTRY2AT1 'DEFINED-ON-LINE '251) 
(PUT 'DCFSF_ENTRY2AT1 'DEFINED-IN-FILE 'REDLOG/DCFSF/DCFSFSISM.RED) 
(PUT 'DCFSF_ENTRY2AT1 'PROCEDURE_TYPE
     '(ARROW (TIMES GENERAL GENERAL GENERAL) GENERAL)) 
(DE DCFSF_ENTRY2AT1 (OP ENTRY PARASQ)
    (DCFSF_0MK2 (DCFSF_CLNEGREL (CAR ENTRY) (EQ OP 'AND))
                (CAR (ADDSQ PARASQ (CDR ENTRY))))) 
(PUT 'DCFSF_SMINSERT 'NUMBER-OF-ARGS 2) 
(PUT 'DCFSF_SMINSERT 'DEFINED-ON-LINE '255) 
(PUT 'DCFSF_SMINSERT 'DEFINED-IN-FILE 'REDLOG/DCFSF/DCFSFSISM.RED) 
(PUT 'DCFSF_SMINSERT 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE DCFSF_SMINSERT (LE DB)
    (PROG (A W SCDB OSCDB)
      (PROG ()
       REPEATLABEL
        (PROGN
         (SETQ W
                 (DCFSF_SMINSERT1 (CADR (CAR DB)) (CDDR (CAR DB)) (CADR LE)
                  (CDDR LE) (CAR LE)))
         (COND ((AND W (NOT (IDP W))) (PROGN (SETQ DB (CDR DB)) (SETQ LE W)))))
        (COND ((NOT (OR (NULL W) (IDP W) (NULL DB))) (GO REPEATLABEL))))
      (COND ((EQ W 'FALSE) (RETURN 'FALSE)))
      (COND ((EQ W 'TRUE) (RETURN DB)))
      (COND ((NULL DB) (RETURN (LIST LE))))
      (SETQ OSCDB DB)
      (SETQ SCDB (CDR DB))
      (PROG ()
       WHILELABEL
        (COND ((NOT SCDB) (RETURN NIL)))
        (PROGN
         (SETQ A (CAR SCDB))
         (SETQ SCDB (CDR SCDB))
         (SETQ W
                 (DCFSF_SMINSERT1 (CADR A) (CDDR A) (CADR LE) (CDDR LE)
                  (CAR LE)))
         (COND ((EQ W 'TRUE) (PROGN (SETQ SCDB NIL) (SETQ A 'TRUE)))
               ((EQ W 'FALSE) (PROGN (SETQ SCDB NIL) (SETQ A 'FALSE)))
               (W (PROGN (SETCDR OSCDB SCDB) (SETQ LE W)))
               (T (SETQ OSCDB (CDR OSCDB)))))
        (GO WHILELABEL))
      (COND ((EQ A 'FALSE) (RETURN 'FALSE)))
      (COND ((EQ A 'TRUE) (RETURN DB)))
      (RETURN (CONS LE DB)))) 
(PUT 'DCFSF_SMINSERT1 'NUMBER-OF-ARGS 5) 
(PUT 'DCFSF_SMINSERT1 'DEFINED-ON-LINE '293) 
(PUT 'DCFSF_SMINSERT1 'DEFINED-IN-FILE 'REDLOG/DCFSF/DCFSFSISM.RED) 
(PUT 'DCFSF_SMINSERT1 'PROCEDURE_TYPE
     '(ARROW (TIMES GENERAL GENERAL GENERAL GENERAL GENERAL) GENERAL)) 
(DE DCFSF_SMINSERT1 (R1 A R2 B N)
    (PROG (W DIFF)
      (SETQ DIFF (CAR (ADDSQ A (NEGSQ B))))
      (COND
       ((NULL DIFF)
        (PROGN
         (SETQ W (DCFSF_SMEQTABLE R1 R2))
         (COND ((EQ W 'FALSE) (RETURN 'FALSE)))
         (RETURN 'TRUE))))
      (COND
       ((MINUSF DIFF)
        (PROGN
         (SETQ W (DCFSF_SMORDTABLE R1 R2))
         (COND ((ATOM W) (RETURN W)))
         (COND ((AND (EQCAR W R1) (CDR W)) (RETURN 'TRUE)))
         (RETURN (CONS N (CONS (CAR W) (COND ((CDR W) A) (T B))))))))
      (SETQ W (DCFSF_SMORDTABLE R2 R1))
      (COND ((ATOM W) (RETURN W)))
      (COND ((AND (EQCAR W R1) (NULL (CDR W))) (RETURN 'TRUE)))
      (RETURN (CONS N (CONS (CAR W) (COND ((CDR W) B) (T A))))))) 
(PUT 'DCFSF_SMINSERTD 'NUMBER-OF-ARGS 2) 
(PUT 'DCFSF_SMINSERTD 'DEFINED-ON-LINE '323) 
(PUT 'DCFSF_SMINSERTD 'DEFINED-IN-FILE 'REDLOG/DCFSF/DCFSFSISM.RED) 
(PUT 'DCFSF_SMINSERTD 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE DCFSF_SMINSERTD (NEWIR OLDIRL)
    (PROG (DB ENTRY DERLEV)
      (SETQ DERLEV 0)
      (SETQ DERLEV (CDR (DCFSF_SDERLEV (CAR NEWIR))))
      (SETQ DB (CDR NEWIR))
      (COND
       ((CDR DB)
        (REDERR
         (LIST "dcfsf_sminsertd: new IR with multiple DB entries " NEWIR))))
      (SETQ ENTRY (CDAR DB))
      (COND
       ((EQCAR ENTRY 'EQUAL)
        (RETURN (DCFSF_SMINSERTD-EQUAL DERLEV OLDIRL (CAR (CDR ENTRY))))))
      (RETURN (DCFSF_SMINSERTD-NEQ DERLEV OLDIRL)))) 
(PUT 'DCFSF_SMINSERTD-EQUAL 'NUMBER-OF-ARGS 3) 
(PUT 'DCFSF_SMINSERTD-EQUAL 'DEFINED-ON-LINE '339) 
(PUT 'DCFSF_SMINSERTD-EQUAL 'DEFINED-IN-FILE 'REDLOG/DCFSF/DCFSFSISM.RED) 
(PUT 'DCFSF_SMINSERTD-EQUAL 'PROCEDURE_TYPE
     '(ARROW (TIMES GENERAL GENERAL GENERAL) GENERAL)) 
(DE DCFSF_SMINSERTD-EQUAL (DERLEV OLDIRL STRONGP)
    (PROG (C OLDIR RES DB FIRSTENTRY OSTRONGP ODERLEV)
      (SETQ ODERLEV 0)
      (COND (STRONGP (SETQ DERLEV (PLUS DERLEV 1))))
      (SETQ C T)
      (PROG ()
       WHILELABEL
        (COND ((NOT (AND (NOT RES) OLDIRL)) (RETURN NIL)))
        (PROGN
         (SETQ OLDIR (PROG1 (CAR OLDIRL) (SETQ OLDIRL (CDR OLDIRL))))
         (SETQ ODERLEV (CDR (DCFSF_SDERLEV (CAR OLDIR))))
         (SETQ DB (CDR OLDIR))
         (SETQ FIRSTENTRY (CDR (CAR DB)))
         (SETQ OSTRONGP NIL)
         (COND
          ((EQCAR FIRSTENTRY 'EQUAL)
           (PROGN
            (COND
             ((CAR (CDR FIRSTENTRY))
              (PROGN (SETQ OSTRONGP T) (SETQ ODERLEV (PLUS ODERLEV 1)))))
            (COND
             ((OR (AND OSTRONGP (GREATERP ODERLEV DERLEV))
                  (AND STRONGP (GREATERP DERLEV ODERLEV)))
              (PROGN (SETQ RES 'FALSE) (SETQ C NIL)))
             ((OR (AND STRONGP (EQUAL DERLEV ODERLEV)) (LESSP DERLEV ODERLEV))
              (SETQ RES (CONS OLDIR RES)))
             ((GEQ DERLEV ODERLEV) (PROGN (SETQ RES 'TRUE) (SETQ C NIL))))))
          (T
           (PROGN
            (COND
             ((GEQ ODERLEV DERLEV) (PROGN (SETQ RES 'FALSE) (SETQ C NIL))))))))
        (GO WHILELABEL))
      (RETURN RES))) 
(PUT 'DCFSF_SMINSERTD-NEQ 'NUMBER-OF-ARGS 2) 
(PUT 'DCFSF_SMINSERTD-NEQ 'DEFINED-ON-LINE '381) 
(PUT 'DCFSF_SMINSERTD-NEQ 'DEFINED-IN-FILE 'REDLOG/DCFSF/DCFSFSISM.RED) 
(PUT 'DCFSF_SMINSERTD-NEQ 'PROCEDURE_TYPE
     '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE DCFSF_SMINSERTD-NEQ (DERLEV OLDIRL)
    (PROG (C OLDIR RES DB FIRSTENTRY ODERLEV)
      (SETQ ODERLEV 0)
      (SETQ C T)
      (PROG ()
       WHILELABEL
        (COND ((NOT (AND (NOT RES) OLDIRL)) (RETURN NIL)))
        (PROGN
         (SETQ OLDIR (PROG1 (CAR OLDIRL) (SETQ OLDIRL (CDR OLDIRL))))
         (SETQ ODERLEV (CDR (DCFSF_SDERLEV (CAR OLDIR))))
         (SETQ DB (CDR OLDIR))
         (SETQ FIRSTENTRY (CDR (CAR DB)))
         (COND
          ((EQCAR FIRSTENTRY 'EQUAL)
           (PROGN
            (COND ((CAR (CDR FIRSTENTRY)) (SETQ ODERLEV (PLUS ODERLEV 1))))
            (COND
             ((GEQ DERLEV ODERLEV) (PROGN (SETQ RES 'FALSE) (SETQ C NIL))))))
          (T
           (PROGN
            (COND
             ((EQUAL DERLEV ODERLEV)
              (PROGN (SETQ RES 'TRUE) (SETQ C NIL))))))))
        (GO WHILELABEL))
      (RETURN RES))) 
(PUT 'DCFSF_SMEQTABLE 'NUMBER-OF-ARGS 2) 
(PUT 'DCFSF_SMEQTABLE 'DEFINED-ON-LINE '407) 
(PUT 'DCFSF_SMEQTABLE 'DEFINED-IN-FILE 'REDLOG/DCFSF/DCFSFSISM.RED) 
(PUT 'DCFSF_SMEQTABLE 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE DCFSF_SMEQTABLE (R1 R2) (COND ((EQ R1 R2) R1) (T 'FALSE))) 
(PUT 'DCFSF_SMORDTABLE 'NUMBER-OF-ARGS 2) 
(PUT 'DCFSF_SMORDTABLE 'DEFINED-ON-LINE '414) 
(PUT 'DCFSF_SMORDTABLE 'DEFINED-IN-FILE 'REDLOG/DCFSF/DCFSFSISM.RED) 
(PUT 'DCFSF_SMORDTABLE 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE DCFSF_SMORDTABLE (R1 R2)
    (COND ((AND (EQ R1 'EQUAL) (EQ R2 'EQUAL)) 'FALSE)
          ((NEQ R1 R2) (CONS 'EQUAL (EQ R1 'EQUAL))))) 
(ENDMODULE) 