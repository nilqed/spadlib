(cl:declaim (cl:optimize cl:debug cl:safety))
(cl:declaim (sb-ext:muffle-conditions sb-ext:compiler-note cl:style-warning))
(FLUID '(DP_RCSID* DP_COPYRIGHT*)) 
(SETQ DP_RCSID* "$Id: dp.red 6570 2023-08-02 09:19:02Z thomas-sturm $") 
(SETQ DP_COPYRIGHT* "Copyright (c) 1999-2009 A. Dolzmann and T. Sturm") 
(MODULE (LIST 'DP)) 
(FLUID '(KORD*)) 
(FLUID
 '(DIP_EVLIST* DIP_VARS* DIP_SORTMODE* DIP_SORTEVCOMP* DIP_SORTEXTENSION*
   VDPSORTMODE* VDPSORTEXTENSION* GLOBAL-DIPVARS*)) 
(FLUID '(TD_VARS* TD_SORTMODE* TD_SORTEXTENSION* *TDUSETORDER)) 
(SETQ TD_VARS* '(LIST)) 
(SETQ TD_SORTMODE* 'REVGRADLEX) 
(PUT 'TD 'PSOPFN 'TD_TORDER) 
(FLAG '(XREVGRADLEX REVGRADLEX LEX) 'DIPSORTMODE) 
(PUT 'REVGRADLEX 'EV_COMP 'EV_REVGRADLEXCOMP) 
(PUT 'LEX 'EV_COMP 'EV_LEXCOMP) 
(PUT 'XREVGRADLEX 'EV_COMP 'EV_XREVGRADLEXCOMP) 
(SWITCH (LIST 'TDUSETORDER)) 
(ON1 'TDUSETORDER) 
(ENDMODULE) 
(MODULE (LIST 'BCSQ)) 
(DE BC_ZERO NIL (CONS NIL 1)) 
(PUT 'BC_ZERO 'NUMBER-OF-ARGS 0) 
(PUT 'BC_ZERO 'DEFINED-ON-LINE '64) 
(PUT 'BC_ZERO 'DEFINED-IN-FILE 'CGB/DP.RED) 
(PUT 'BC_ZERO 'PROCEDURE_TYPE '(ARROW UNIT GENERAL)) 
(PUTC 'BC_ZERO 'INLINE '(LAMBDA () (CONS NIL 1))) 
(DE BC_ZERO? (U) (NULL (CAR U))) 
(PUT 'BC_ZERO? 'NUMBER-OF-ARGS 1) 
(PUT 'BC_ZERO? 'DEFINED-ON-LINE '67) 
(PUT 'BC_ZERO? 'DEFINED-IN-FILE 'CGB/DP.RED) 
(PUT 'BC_ZERO? 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(PUTC 'BC_ZERO? 'INLINE '(LAMBDA (U) (NULL (CAR U)))) 
(DE BC_ABS (U) (CONS (ABSF (CAR U)) (CDR U))) 
(PUT 'BC_ABS 'NUMBER-OF-ARGS 1) 
(PUT 'BC_ABS 'DEFINED-ON-LINE '70) 
(PUT 'BC_ABS 'DEFINED-IN-FILE 'CGB/DP.RED) 
(PUT 'BC_ABS 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(PUTC 'BC_ABS 'INLINE '(LAMBDA (U) (CONS (ABSF (CAR U)) (CDR U)))) 
(DE BC_ONE? (U) (AND (EQUAL (CAR U) 1) (EQUAL (CDR U) 1))) 
(PUT 'BC_ONE? 'NUMBER-OF-ARGS 1) 
(PUT 'BC_ONE? 'DEFINED-ON-LINE '73) 
(PUT 'BC_ONE? 'DEFINED-IN-FILE 'CGB/DP.RED) 
(PUT 'BC_ONE? 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(PUTC 'BC_ONE? 'INLINE '(LAMBDA (U) (AND (EQUAL (CAR U) 1) (EQUAL (CDR U) 1)))) 
(DE BC_2SQ (U) U) 
(PUT 'BC_2SQ 'NUMBER-OF-ARGS 1) 
(PUT 'BC_2SQ 'DEFINED-ON-LINE '76) 
(PUT 'BC_2SQ 'DEFINED-IN-FILE 'CGB/DP.RED) 
(PUT 'BC_2SQ 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(PUTC 'BC_2SQ 'INLINE '(LAMBDA (U) U)) 
(DE BC_A2BC (U) (SIMP* U)) 
(PUT 'BC_A2BC 'NUMBER-OF-ARGS 1) 
(PUT 'BC_A2BC 'DEFINED-ON-LINE '79) 
(PUT 'BC_A2BC 'DEFINED-IN-FILE 'CGB/DP.RED) 
(PUT 'BC_A2BC 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(PUTC 'BC_A2BC 'INLINE '(LAMBDA (U) (SIMP* U))) 
(DE BC_FD (A) (CONS A 1)) 
(PUT 'BC_FD 'NUMBER-OF-ARGS 1) 
(PUT 'BC_FD 'DEFINED-ON-LINE '83) 
(PUT 'BC_FD 'DEFINED-IN-FILE 'CGB/DP.RED) 
(PUT 'BC_FD 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(PUTC 'BC_FD 'INLINE '(LAMBDA (A) (CONS A 1))) 
(DE BC_NEG (U) (NEGSQ U)) 
(PUT 'BC_NEG 'NUMBER-OF-ARGS 1) 
(PUT 'BC_NEG 'DEFINED-ON-LINE '87) 
(PUT 'BC_NEG 'DEFINED-IN-FILE 'CGB/DP.RED) 
(PUT 'BC_NEG 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(PUTC 'BC_NEG 'INLINE '(LAMBDA (U) (NEGSQ U))) 
(PUT 'BC_PROD 'NUMBER-OF-ARGS 2) 
(PUT 'BC_PROD 'DEFINED-ON-LINE '93) 
(PUT 'BC_PROD 'DEFINED-IN-FILE 'CGB/DP.RED) 
(PUT 'BC_PROD 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE BC_PROD (A B)
    (COND
     ((AND (EQUAL (CDR A) 1) (NUMBERP (CAR A)) (EQUAL (CDR B) 1)
           (NUMBERP (CAR B)))
      (COND ((EQUAL (CAR A) 1) B) ((EQUAL (CAR B) 1) A)
            ((EQUAL (SETQ A (TIMES2 (CAR A) (CAR B))) 0) (CONS NIL 1))
            (T (CONS A 1))))
     (T (MULTSQ A B)))) 
(DE BC_QUOT (A B) (MULTSQ A (INVSQ B))) 
(PUT 'BC_QUOT 'NUMBER-OF-ARGS 2) 
(PUT 'BC_QUOT 'DEFINED-ON-LINE '117) 
(PUT 'BC_QUOT 'DEFINED-IN-FILE 'CGB/DP.RED) 
(PUT 'BC_QUOT 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(PUTC 'BC_QUOT 'INLINE '(LAMBDA (A B) (MULTSQ A (INVSQ B)))) 
(PUT 'BC_SUM 'NUMBER-OF-ARGS 2) 
(PUT 'BC_SUM 'DEFINED-ON-LINE '120) 
(PUT 'BC_SUM 'DEFINED-IN-FILE 'CGB/DP.RED) 
(PUT 'BC_SUM 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE BC_SUM (A B)
    (COND
     ((AND (EQUAL (CDR A) 1) (NUMBERP (CAR A)) (EQUAL (CDR B) 1)
           (NUMBERP (CAR B)))
      (COND ((EQUAL (SETQ A (PLUS2 (CAR A) (CAR B))) 0) (CONS NIL 1))
            (T (CONS A 1))))
     (T (ADDSQ A B)))) 
(PUT 'BC_PMON 'NUMBER-OF-ARGS 2) 
(PUT 'BC_PMON 'DEFINED-ON-LINE '131) 
(PUT 'BC_PMON 'DEFINED-IN-FILE 'CGB/DP.RED) 
(PUT 'BC_PMON 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE BC_PMON (VAR DG) (CONS (CONS (CONS (CONS VAR DG) 1) NIL) 1)) 
(PUT 'BC_MINUS? 'NUMBER-OF-ARGS 1) 
(PUT 'BC_MINUS? 'DEFINED-ON-LINE '136) 
(PUT 'BC_MINUS? 'DEFINED-IN-FILE 'CGB/DP.RED) 
(PUT 'BC_MINUS? 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE BC_MINUS? (U)
    (COND ((FIXP (CAR U)) (LESSP (CAR U) 0)) (T (MINUSF (CAR U))))) 
(DE BC_2A (U) (PREPSQ U)) 
(PUT 'BC_2A 'NUMBER-OF-ARGS 1) 
(PUT 'BC_2A 'DEFINED-ON-LINE '143) 
(PUT 'BC_2A 'DEFINED-IN-FILE 'CGB/DP.RED) 
(PUT 'BC_2A 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(PUTC 'BC_2A 'INLINE '(LAMBDA (U) (PREPSQ U))) 
(PUT 'BC_GCD 'NUMBER-OF-ARGS 2) 
(PUT 'BC_GCD 'DEFINED-ON-LINE '147) 
(PUT 'BC_GCD 'DEFINED-IN-FILE 'CGB/DP.RED) 
(PUT 'BC_GCD 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE BC_GCD (U V)
    (COND
     ((AND (EQUAL (CDR U) 1) (EQUAL (CDR V) 1))
      (COND
       ((AND (FIXP (CAR U)) (FIXP (CAR V))) (CONS (GCDN (CAR U) (CAR V)) 1))
       (T (CONS (GCDF* (CAR U) (CAR V)) 1))))
     (T (CONS 1 1)))) 
(DE BC_MKAT (OP BC) (LIST OP (CAR BC) NIL)) 
(PUT 'BC_MKAT 'NUMBER-OF-ARGS 2) 
(PUT 'BC_MKAT 'DEFINED-ON-LINE '156) 
(PUT 'BC_MKAT 'DEFINED-IN-FILE 'CGB/DP.RED) 
(PUT 'BC_MKAT 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(PUTC 'BC_MKAT 'INLINE '(LAMBDA (OP BC) (LIST OP (CAR BC) NIL))) 
(DE BC_DCONT (BC) (SFTO_DCONTENTF (CAR BC))) 
(PUT 'BC_DCONT 'NUMBER-OF-ARGS 1) 
(PUT 'BC_DCONT 'DEFINED-ON-LINE '159) 
(PUT 'BC_DCONT 'DEFINED-IN-FILE 'CGB/DP.RED) 
(PUT 'BC_DCONT 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(PUTC 'BC_DCONT 'INLINE '(LAMBDA (BC) (SFTO_DCONTENTF (CAR BC)))) 
(DE BC_2D (BC) (OR (CAR BC) 0)) 
(PUT 'BC_2D 'NUMBER-OF-ARGS 1) 
(PUT 'BC_2D 'DEFINED-ON-LINE '162) 
(PUT 'BC_2D 'DEFINED-IN-FILE 'CGB/DP.RED) 
(PUT 'BC_2D 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(PUTC 'BC_2D 'INLINE '(LAMBDA (BC) (OR (CAR BC) 0))) 
(PUT 'BC_VARS 'NUMBER-OF-ARGS 1) 
(PUT 'BC_VARS 'DEFINED-ON-LINE '165) 
(PUT 'BC_VARS 'DEFINED-IN-FILE 'CGB/DP.RED) 
(PUT 'BC_VARS 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE BC_VARS (BC) (UNION (KERNELS (CAR BC)) (KERNELS (CDR BC)))) 
(ENDMODULE) 
(MODULE (LIST 'EV)) 
(DE |EV_MAX#| (A B) (COND ((IGREATERP A B) A) (T B))) 
(PUT '|EV_MAX#| 'NUMBER-OF-ARGS 2) 
(PUT '|EV_MAX#| 'DEFINED-ON-LINE '172) 
(PUT '|EV_MAX#| 'DEFINED-IN-FILE 'CGB/DP.RED) 
(PUT '|EV_MAX#| 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(PUTC '|EV_MAX#| 'INLINE '(LAMBDA (A B) (COND ((IGREATERP A B) A) (T B)))) 
(DE EV_INIT NIL NIL) 
(PUT 'EV_INIT 'NUMBER-OF-ARGS 0) 
(PUT 'EV_INIT 'DEFINED-ON-LINE '175) 
(PUT 'EV_INIT 'DEFINED-IN-FILE 'CGB/DP.RED) 
(PUT 'EV_INIT 'PROCEDURE_TYPE '(ARROW UNIT GENERAL)) 
(PUTC 'EV_INIT 'INLINE '(LAMBDA () NIL)) 
(DE EV_MEMBER (EV EVL) (MEMBER EV EVL)) 
(PUT 'EV_MEMBER 'NUMBER-OF-ARGS 2) 
(PUT 'EV_MEMBER 'DEFINED-ON-LINE '178) 
(PUT 'EV_MEMBER 'DEFINED-IN-FILE 'CGB/DP.RED) 
(PUT 'EV_MEMBER 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(PUTC 'EV_MEMBER 'INLINE '(LAMBDA (EV EVL) (MEMBER EV EVL))) 
(DE EV_DIVIDES? (EV1 EV2) (EV_MTEST? EV2 EV1)) 
(PUT 'EV_DIVIDES? 'NUMBER-OF-ARGS 2) 
(PUT 'EV_DIVIDES? 'DEFINED-ON-LINE '181) 
(PUT 'EV_DIVIDES? 'DEFINED-IN-FILE 'CGB/DP.RED) 
(PUT 'EV_DIVIDES? 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(PUTC 'EV_DIVIDES? 'INLINE '(LAMBDA (EV1 EV2) (EV_MTEST? EV2 EV1))) 
(DE EV_SDIVP (EV1 EV2) (AND (NEQ EV1 EV2) (EV_MTEST? EV2 EV1))) 
(PUT 'EV_SDIVP 'NUMBER-OF-ARGS 2) 
(PUT 'EV_SDIVP 'DEFINED-ON-LINE '184) 
(PUT 'EV_SDIVP 'DEFINED-IN-FILE 'CGB/DP.RED) 
(PUT 'EV_SDIVP 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(PUTC 'EV_SDIVP 'INLINE
      '(LAMBDA (EV1 EV2) (AND (NEQ EV1 EV2) (EV_MTEST? EV2 EV1)))) 
(PUT 'EV_XREVGRADLEXCOMP 'NUMBER-OF-ARGS 2) 
(PUT 'EV_XREVGRADLEXCOMP 'DEFINED-ON-LINE '187) 
(PUT 'EV_XREVGRADLEXCOMP 'DEFINED-IN-FILE 'CGB/DP.RED) 
(PUT 'EV_XREVGRADLEXCOMP 'PROCEDURE_TYPE
     '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE EV_XREVGRADLEXCOMP (E1 E2)
    (PROG (TE1 TE2)
      (COND ((NULL E1) (RETURN 0)))
      (COND
       ((IEQUAL (CAR E1) (CAR E2))
        (RETURN (EV_XREVGRADLEXCOMP (CDR E1) (CDR E2)))))
      (SETQ TE1 (EV_TDEG E1))
      (SETQ TE2 (EV_TDEG E2))
      (COND
       ((IEQUAL TE1 TE2)
        (RETURN (COND ((ILESSP (CAR E1) (CAR E2)) 1) (T (MINUS 1))))))
      (RETURN (COND ((IGREATERP TE1 TE2) 1) (T (MINUS 1)))))) 
(PUT 'EV_LEXCOMP 'NUMBER-OF-ARGS 2) 
(PUT 'EV_LEXCOMP 'DEFINED-ON-LINE '205) 
(PUT 'EV_LEXCOMP 'DEFINED-IN-FILE 'CGB/DP.RED) 
(PUT 'EV_LEXCOMP 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE EV_LEXCOMP (E1 E2)
    (COND ((NULL E1) 0)
          ((IEQUAL (CAR E1) (CAR E2)) (EV_LEXCOMP (CDR E1) (CDR E2)))
          ((IGREATERP (CAR E1) (CAR E2)) 1) (T (MINUS 1)))) 
(PUT 'EV_REVGRADLEXCOMP 'NUMBER-OF-ARGS 2) 
(PUT 'EV_REVGRADLEXCOMP 'DEFINED-ON-LINE '219) 
(PUT 'EV_REVGRADLEXCOMP 'DEFINED-IN-FILE 'CGB/DP.RED) 
(PUT 'EV_REVGRADLEXCOMP 'PROCEDURE_TYPE
     '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE EV_REVGRADLEXCOMP (E1 E2)
    (PROG (TE1 TE2)
      (COND ((NULL E1) (RETURN 0)))
      (COND
       ((IEQUAL (CAR E1) (CAR E2))
        (RETURN (EV_REVGRADLEXCOMP (CDR E1) (CDR E2)))))
      (SETQ TE1 (EV_TDEG E1))
      (SETQ TE2 (EV_TDEG E2))
      (COND ((IEQUAL TE1 TE2) (RETURN (EV_INVLEXCOMP E1 E2))))
      (COND ((IGREATERP TE1 TE2) (RETURN 1)))
      (RETURN (MINUS 1)))) 
(PUT 'EV_INVLEXCOMP 'NUMBER-OF-ARGS 2) 
(PUT 'EV_INVLEXCOMP 'DEFINED-ON-LINE '239) 
(PUT 'EV_INVLEXCOMP 'DEFINED-IN-FILE 'CGB/DP.RED) 
(PUT 'EV_INVLEXCOMP 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE EV_INVLEXCOMP (E1 E2)
    (PROG (N)
      (COND ((NULL E1) (RETURN 0)))
      (COND
       ((IEQUAL (CAR E1) (CAR E2)) (RETURN (EV_INVLEXCOMP (CDR E1) (CDR E2)))))
      (SETQ N (EV_INVLEXCOMP (CDR E1) (CDR E2)))
      (COND ((NOT (IEQUAL N 0)) (RETURN N)))
      (COND ((IEQUAL (CAR E2) (CAR E1)) (RETURN 0)))
      (COND ((IGREATERP (CAR E2) (CAR E1)) (RETURN 1)))
      (RETURN (MINUS 1)))) 
(PUT 'EV_MTEST? 'NUMBER-OF-ARGS 2) 
(PUT 'EV_MTEST? 'DEFINED-ON-LINE '256) 
(PUT 'EV_MTEST? 'DEFINED-IN-FILE 'CGB/DP.RED) 
(PUT 'EV_MTEST? 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE EV_MTEST? (E1 E2)
    (PROG (R)
      (SETQ R T)
      (PROG ()
       WHILELABEL
        (COND ((NOT (AND E1 R)) (RETURN NIL)))
        (PROGN
         (COND ((ILESSP (CAR E1) (CAR E2)) (SETQ E1 (SETQ R NIL)))
               (T (PROGN (SETQ E1 (CDR E1)) (SETQ E2 (CDR E2))))))
        (GO WHILELABEL))
      (RETURN R))) 
(DE EV_2A (E) (EV_2A1 E DIP_VARS*)) 
(PUT 'EV_2A 'NUMBER-OF-ARGS 1) 
(PUT 'EV_2A 'DEFINED-ON-LINE '274) 
(PUT 'EV_2A 'DEFINED-IN-FILE 'CGB/DP.RED) 
(PUT 'EV_2A 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(PUTC 'EV_2A 'INLINE '(LAMBDA (E) (EV_2A1 E DIP_VARS*))) 
(PUT 'EV_2A1 'NUMBER-OF-ARGS 2) 
(PUT 'EV_2A1 'DEFINED-ON-LINE '278) 
(PUT 'EV_2A1 'DEFINED-IN-FILE 'CGB/DP.RED) 
(PUT 'EV_2A1 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE EV_2A1 (U V)
    (COND ((NULL U) NIL) ((IEQUAL (CAR U) 0) (EV_2A1 (CDR U) (CDR V)))
          ((IEQUAL (CAR U) 1) (CONS (CAR V) (EV_2A1 (CDR U) (CDR V))))
          (T (CONS (LIST 'EXPT (CAR V) (CAR U)) (EV_2A1 (CDR U) (CDR V)))))) 
(PUT 'EV_2F 'NUMBER-OF-ARGS 2) 
(PUT 'EV_2F 'DEFINED-ON-LINE '288) 
(PUT 'EV_2F 'DEFINED-IN-FILE 'CGB/DP.RED) 
(PUT 'EV_2F 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE EV_2F (EV VARS)
    (COND ((NULL EV) 1) ((IEQUAL (CAR EV) 0) (EV_2F (CDR EV) (CDR VARS)))
          (T
           ((LAMBDA (G145 G146)
              (COND (*PHYSOP-LOADED (PHYSOP-MULTF G145 G146))
                    (T (POLY-MULTF G145 G146))))
            (CONS (CONS (CONS (CAR VARS) (CAR EV)) 1) NIL)
            (EV_2F (CDR EV) (CDR VARS)))))) 
(PUT 'EV_LCM 'NUMBER-OF-ARGS 2) 
(PUT 'EV_LCM 'DEFINED-ON-LINE '296) 
(PUT 'EV_LCM 'DEFINED-IN-FILE 'CGB/DP.RED) 
(PUT 'EV_LCM 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE EV_LCM (E1 E2)
    (PROG (X)
      (PROG ()
       WHILELABEL
        (COND ((NOT E1) (RETURN NIL)))
        (PROGN
         (SETQ X
                 (CONS
                  (COND ((IGREATERP (CAR E1) (CAR E2)) (CAR E1)) (T (CAR E2)))
                  X))
         (SETQ E1 (CDR E1))
         (SETQ E2 (CDR E2)))
        (GO WHILELABEL))
      (RETURN (REVERSIP X)))) 
(PUT 'EV_ZERO 'NUMBER-OF-ARGS 0) 
(PUT 'EV_ZERO 'DEFINED-ON-LINE '309) 
(PUT 'EV_ZERO 'DEFINED-IN-FILE 'CGB/DP.RED) 
(PUT 'EV_ZERO 'PROCEDURE_TYPE '(ARROW UNIT GENERAL)) 
(DE EV_ZERO NIL
    (PROG (X FORALL-RESULT FORALL-ENDPTR)
      (SETQ X DIP_VARS*)
      (COND ((NULL X) (RETURN NIL)))
      (SETQ FORALL-RESULT
              (SETQ FORALL-ENDPTR (CONS ((LAMBDA (X) 0) (CAR X)) NIL)))
     LOOPLABEL
      (SETQ X (CDR X))
      (COND ((NULL X) (RETURN FORALL-RESULT)))
      (RPLACD FORALL-ENDPTR (CONS ((LAMBDA (X) 0) (CAR X)) NIL))
      (SETQ FORALL-ENDPTR (CDR FORALL-ENDPTR))
      (GO LOOPLABEL))) 
(PUT 'EV_ZERO? 'NUMBER-OF-ARGS 1) 
(PUT 'EV_ZERO? 'DEFINED-ON-LINE '312) 
(PUT 'EV_ZERO? 'DEFINED-IN-FILE 'CGB/DP.RED) 
(PUT 'EV_ZERO? 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE EV_ZERO? (EV) (OR (NULL EV) (AND (EQUAL (CAR EV) 0) (EV_ZERO? (CDR EV))))) 
(DE EV_COMPLESS? (E1 E2) (IEQUAL (EV_COMP E2 E1) 1)) 
(PUT 'EV_COMPLESS? 'NUMBER-OF-ARGS 2) 
(PUT 'EV_COMPLESS? 'DEFINED-ON-LINE '315) 
(PUT 'EV_COMPLESS? 'DEFINED-IN-FILE 'CGB/DP.RED) 
(PUT 'EV_COMPLESS? 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(PUTC 'EV_COMPLESS? 'INLINE '(LAMBDA (E1 E2) (IEQUAL (EV_COMP E2 E1) 1))) 
(PUT 'EV_COMP 'NUMBER-OF-ARGS 2) 
(PUT 'EV_COMP 'DEFINED-ON-LINE '318) 
(PUT 'EV_COMP 'DEFINED-IN-FILE 'CGB/DP.RED) 
(PUT 'EV_COMP 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE EV_COMP (E1 E2) (APPLY DIP_SORTEVCOMP* (LIST E1 E2))) 
(PUT 'EV_INSERT 'NUMBER-OF-ARGS 4) 
(PUT 'EV_INSERT 'DEFINED-ON-LINE '327) 
(PUT 'EV_INSERT 'DEFINED-IN-FILE 'CGB/DP.RED) 
(PUT 'EV_INSERT 'PROCEDURE_TYPE
     '(ARROW (TIMES GENERAL GENERAL GENERAL GENERAL) GENERAL)) 
(DE EV_INSERT (EV V DG VARS)
    (COND ((OR (NULL EV) (NULL VARS)) NIL)
          ((EQ (CAR VARS) V) (CONS DG (CDR EV)))
          (T (CONS (CAR EV) (EV_INSERT (CDR EV) V DG (CDR VARS)))))) 
(PUT 'EV_TDEG 'NUMBER-OF-ARGS 1) 
(PUT 'EV_TDEG 'DEFINED-ON-LINE '337) 
(PUT 'EV_TDEG 'DEFINED-IN-FILE 'CGB/DP.RED) 
(PUT 'EV_TDEG 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE EV_TDEG (U)
    (PROG (X)
      (SETQ X 0)
      (PROG ()
       WHILELABEL
        (COND ((NOT U) (RETURN NIL)))
        (PROGN (SETQ X (IPLUS2 (CAR U) X)) (SETQ U (CDR U)))
        (GO WHILELABEL))
      (RETURN X))) 
(PUT 'EV_DIF 'NUMBER-OF-ARGS 2) 
(PUT 'EV_DIF 'DEFINED-ON-LINE '347) 
(PUT 'EV_DIF 'DEFINED-IN-FILE 'CGB/DP.RED) 
(PUT 'EV_DIF 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE EV_DIF (E1 E2)
    (PROG (S)
      (PROG ()
       WHILELABEL
        (COND ((NOT E1) (RETURN NIL)))
        (PROGN
         (SETQ S (CONS (IDIFFERENCE (CAR E1) (CAR E2)) S))
         (SETQ E1 (CDR E1))
         (SETQ E2 (CDR E2)))
        (GO WHILELABEL))
      (RETURN (REVERSIP S)))) 
(PUT 'EV_SUM 'NUMBER-OF-ARGS 2) 
(PUT 'EV_SUM 'DEFINED-ON-LINE '357) 
(PUT 'EV_SUM 'DEFINED-IN-FILE 'CGB/DP.RED) 
(PUT 'EV_SUM 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE EV_SUM (E1 E2)
    (PROG (S)
      (PROG ()
       WHILELABEL
        (COND ((NOT E1) (RETURN NIL)))
        (PROGN
         (SETQ S (CONS (IPLUS2 (CAR E1) (CAR E2)) S))
         (SETQ E1 (CDR E1))
         (SETQ E2 (CDR E2)))
        (GO WHILELABEL))
      (RETURN (REVERSIP S)))) 
(PUT 'EV_DISJOINTP 'NUMBER-OF-ARGS 2) 
(PUT 'EV_DISJOINTP 'DEFINED-ON-LINE '367) 
(PUT 'EV_DISJOINTP 'DEFINED-IN-FILE 'CGB/DP.RED) 
(PUT 'EV_DISJOINTP 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE EV_DISJOINTP (E1 E2)
    (COND ((NULL E1) T) ((AND (NEQ (CAR E1) 0) (NEQ (CAR E2) 0)) NIL)
          (T (EV_DISJOINTP (CDR E1) (CDR E2))))) 
(PUT 'EV_IDENTIFY 'NUMBER-OF-ARGS 2) 
(PUT 'EV_IDENTIFY 'DEFINED-ON-LINE '377) 
(PUT 'EV_IDENTIFY 'DEFINED-IN-FILE 'CGB/DP.RED) 
(PUT 'EV_IDENTIFY 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE EV_IDENTIFY (OEV NEV) NEV) 
(ENDMODULE) 
(MODULE (LIST 'DIP)) 
(DE DIP_FMON (A E) (CONS E (CONS A NIL))) 
(PUT 'DIP_FMON 'NUMBER-OF-ARGS 2) 
(PUT 'DIP_FMON 'DEFINED-ON-LINE '384) 
(PUT 'DIP_FMON 'DEFINED-IN-FILE 'CGB/DP.RED) 
(PUT 'DIP_FMON 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(PUTC 'DIP_FMON 'INLINE '(LAMBDA (A E) (CONS E (CONS A NIL)))) 
(DE DIP_MONCOMP (A E P) (CONS E (CONS A P))) 
(PUT 'DIP_MONCOMP 'NUMBER-OF-ARGS 3) 
(PUT 'DIP_MONCOMP 'DEFINED-ON-LINE '390) 
(PUT 'DIP_MONCOMP 'DEFINED-IN-FILE 'CGB/DP.RED) 
(PUT 'DIP_MONCOMP 'PROCEDURE_TYPE
     '(ARROW (TIMES GENERAL GENERAL GENERAL) GENERAL)) 
(PUTC 'DIP_MONCOMP 'INLINE '(LAMBDA (A E P) (CONS E (CONS A P)))) 
(DE DIP_MRED (P) (CDDR P)) 
(PUT 'DIP_MRED 'NUMBER-OF-ARGS 1) 
(PUT 'DIP_MRED 'DEFINED-ON-LINE '398) 
(PUT 'DIP_MRED 'DEFINED-IN-FILE 'CGB/DP.RED) 
(PUT 'DIP_MRED 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(PUTC 'DIP_MRED 'INLINE '(LAMBDA (P) (CDDR P))) 
(DE DIP_LBC (P) (CADR P)) 
(PUT 'DIP_LBC 'NUMBER-OF-ARGS 1) 
(PUT 'DIP_LBC 'DEFINED-ON-LINE '404) 
(PUT 'DIP_LBC 'DEFINED-IN-FILE 'CGB/DP.RED) 
(PUT 'DIP_LBC 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(PUTC 'DIP_LBC 'INLINE '(LAMBDA (P) (CADR P))) 
(DE DIP_EVLMON (P) (CAR P)) 
(PUT 'DIP_EVLMON 'NUMBER-OF-ARGS 1) 
(PUT 'DIP_EVLMON 'DEFINED-ON-LINE '410) 
(PUT 'DIP_EVLMON 'DEFINED-IN-FILE 'CGB/DP.RED) 
(PUT 'DIP_EVLMON 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(PUTC 'DIP_EVLMON 'INLINE '(LAMBDA (P) (CAR P))) 
(PUT 'DIP_INIT 'NUMBER-OF-ARGS 3) 
(PUT 'DIP_INIT 'DEFINED-ON-LINE '416) 
(PUT 'DIP_INIT 'DEFINED-IN-FILE 'CGB/DP.RED) 
(PUT 'DIP_INIT 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL GENERAL) GENERAL)) 
(DE DIP_INIT (NEWVARS NEWSORTMODE NEWSORTEXTENSION)
    (PROG (VARS SORTMODE SORTEXTENSION SORTEVCOMP EVLIST NEWSORTEVCOMP Z)
      (COND
       ((OR (NOT (IDP NEWSORTMODE)) (NOT (FLAGP NEWSORTMODE 'DIPSORTMODE)))
        (RETURN (TYPERR NEWSORTMODE "term ordering mode"))))
      (SETQ NEWSORTEVCOMP (GET NEWSORTMODE 'EV_COMP))
      (COND
       ((NOT (GETD NEWSORTEVCOMP))
        (REDERR "dip_init: no comparison routine found")))
      (COND ((SETQ Z (GET NEWSORTMODE 'EVCOMPINIT)) (APPLY Z NIL)))
      (COND
       ((AND (SETQ Z (GET NEWSORTMODE 'EVLENGTH)) (NEQ Z (LENGTH NEWVARS)))
        (REDERR
         "dip_init: wrong variable number for fixed length term order")))
      (SETQ VARS DIP_VARS*)
      (SETQ SORTMODE DIP_SORTMODE*)
      (SETQ SORTEXTENSION DIP_SORTEXTENSION*)
      (SETQ SORTEVCOMP DIP_SORTEVCOMP*)
      (SETQ EVLIST DIP_EVLIST*)
      (SETQ DIP_VARS* NEWVARS)
      (SETQ DIP_SORTMODE* NEWSORTMODE)
      (SETQ DIP_SORTEXTENSION* NEWSORTEXTENSION)
      (SETQ DIP_SORTEVCOMP* NEWSORTEVCOMP)
      (SETQ DIP_EVLIST* (LIST NIL))
     NIL
      (RETURN (LIST VARS SORTMODE SORTEXTENSION SORTEVCOMP EVLIST)))) 
(PUT 'DIP_CLEANUP 'NUMBER-OF-ARGS 1) 
(PUT 'DIP_CLEANUP 'DEFINED-ON-LINE '450) 
(PUT 'DIP_CLEANUP 'DEFINED-IN-FILE 'CGB/DP.RED) 
(PUT 'DIP_CLEANUP 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE DIP_CLEANUP (L)
    (PROGN
     (SETQ DIP_VARS* (CAR L))
     (SETQ L (CDR L))
     (SETQ DIP_SORTMODE* (CAR L))
     (SETQ L (CDR L))
     (SETQ DIP_SORTEXTENSION* (CAR L))
     (SETQ L (CDR L))
     (SETQ DIP_SORTEVCOMP* (CAR L))
     (SETQ L (CDR L))
     (SETQ DIP_EVLIST* (CAR L)))) 
(DE DIP_MONP (U) (AND U (NOT (CDDR U)))) 
(PUT 'DIP_MONP 'NUMBER-OF-ARGS 1) 
(PUT 'DIP_MONP 'DEFINED-ON-LINE '470) 
(PUT 'DIP_MONP 'DEFINED-IN-FILE 'CGB/DP.RED) 
(PUT 'DIP_MONP 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(PUTC 'DIP_MONP 'INLINE '(LAMBDA (U) (AND U (NOT (CDDR U))))) 
(DE DIP_2F (U) (CAR (DIP_2SQ U))) 
(PUT 'DIP_2F 'NUMBER-OF-ARGS 1) 
(PUT 'DIP_2F 'DEFINED-ON-LINE '473) 
(PUT 'DIP_2F 'DEFINED-IN-FILE 'CGB/DP.RED) 
(PUT 'DIP_2F 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(PUTC 'DIP_2F 'INLINE '(LAMBDA (U) (CAR (DIP_2SQ U)))) 
(PUT 'DIP_2SQ 'NUMBER-OF-ARGS 1) 
(PUT 'DIP_2SQ 'DEFINED-ON-LINE '476) 
(PUT 'DIP_2SQ 'DEFINED-IN-FILE 'CGB/DP.RED) 
(PUT 'DIP_2SQ 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE DIP_2SQ (U)
    (COND ((NULL U) (CONS NIL 1))
          (T (ADDSQ (DIP_LMON2SQ (CADR U) (CAR U)) (DIP_2SQ (CDDR U)))))) 
(PUT 'DIP_LMON2SQ 'NUMBER-OF-ARGS 2) 
(PUT 'DIP_LMON2SQ 'DEFINED-ON-LINE '483) 
(PUT 'DIP_LMON2SQ 'DEFINED-IN-FILE 'CGB/DP.RED) 
(PUT 'DIP_LMON2SQ 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE DIP_LMON2SQ (BC EV) (MULTSQ BC (CONS (EV_2F EV DIP_VARS*) 1))) 
(DE DIP_F2DIP (U) (DIP_F2DIP1 U (EV_ZERO) (CONS 1 1))) 
(PUT 'DIP_F2DIP 'NUMBER-OF-ARGS 1) 
(PUT 'DIP_F2DIP 'DEFINED-ON-LINE '487) 
(PUT 'DIP_F2DIP 'DEFINED-IN-FILE 'CGB/DP.RED) 
(PUT 'DIP_F2DIP 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(PUTC 'DIP_F2DIP 'INLINE '(LAMBDA (U) (DIP_F2DIP1 U (EV_ZERO) (CONS 1 1)))) 
(PUT 'DIP_F2DIP1 'NUMBER-OF-ARGS 3) 
(PUT 'DIP_F2DIP1 'DEFINED-ON-LINE '490) 
(PUT 'DIP_F2DIP1 'DEFINED-IN-FILE 'CGB/DP.RED) 
(PUT 'DIP_F2DIP1 'PROCEDURE_TYPE
     '(ARROW (TIMES GENERAL GENERAL GENERAL) GENERAL)) 
(DE DIP_F2DIP1 (U EV BC)
    (COND ((NULL U) NIL)
          ((OR (ATOM U) (ATOM (CAR U)))
           (CONS EV (CONS (BC_PROD BC (CONS U 1)) NIL)))
          (T
           (DIP_SUM (DIP_F2DIP2 (CAAAR U) (CDAAR U) (CDAR U) EV BC)
            (DIP_F2DIP1 (CDR U) EV BC))))) 
(PUT 'DIP_F2DIP2 'NUMBER-OF-ARGS 5) 
(PUT 'DIP_F2DIP2 'DEFINED-ON-LINE '500) 
(PUT 'DIP_F2DIP2 'DEFINED-IN-FILE 'CGB/DP.RED) 
(PUT 'DIP_F2DIP2 'PROCEDURE_TYPE
     '(ARROW (TIMES GENERAL GENERAL GENERAL GENERAL GENERAL) GENERAL)) 
(DE DIP_F2DIP2 (VAR DG C EV BC)
    (COND
     ((MEMQ VAR DIP_VARS*) (DIP_F2DIP1 C (EV_INSERT EV VAR DG DIP_VARS*) BC))
     (T (DIP_F2DIP1 C EV (BC_PROD BC (BC_PMON VAR DG)))))) 
(PUT 'DIP_PROD 'NUMBER-OF-ARGS 2) 
(PUT 'DIP_PROD 'DEFINED-ON-LINE '508) 
(PUT 'DIP_PROD 'DEFINED-IN-FILE 'CGB/DP.RED) 
(PUT 'DIP_PROD 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE DIP_PROD (P1 P2)
    (COND ((LEQ (DIP_LENGTH P1) (DIP_LENGTH P2)) (DIP_PRODIN P1 P2))
          (T (DIP_PRODIN P2 P1)))) 
(PUT 'DIP_PRODIN 'NUMBER-OF-ARGS 2) 
(PUT 'DIP_PRODIN 'DEFINED-ON-LINE '517) 
(PUT 'DIP_PRODIN 'DEFINED-IN-FILE 'CGB/DP.RED) 
(PUT 'DIP_PRODIN 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE DIP_PRODIN (P1 P2)
    (PROG (BP1 EP1)
      (COND ((OR (NULL P1) (NULL P2)) (RETURN NIL)))
      (SETQ BP1 (CADR P1))
      (SETQ EP1 (CAR P1))
      (RETURN
       (CONS (EV_SUM EP1 (CAR P2))
             (CONS (BC_PROD BP1 (CADR P2))
                   (DIP_SUM (DIP_PRODIN (CONS EP1 (CONS BP1 NIL)) (CDDR P2))
                    (DIP_PRODIN (CDDR P1) P2))))))) 
(PUT 'DIP_SUM 'NUMBER-OF-ARGS 2) 
(PUT 'DIP_SUM 'DEFINED-ON-LINE '531) 
(PUT 'DIP_SUM 'DEFINED-IN-FILE 'CGB/DP.RED) 
(PUT 'DIP_SUM 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE DIP_SUM (P1 P2)
    (PROG (W RW SL EP1 EP2 NT AL DONE)
      (PROG ()
       WHILELABEL
        (COND ((NOT (NOT DONE)) (RETURN NIL)))
        (PROGN
         (COND ((NULL P1) (PROGN (SETQ NT P2) (SETQ DONE T)))
               ((NULL P2) (PROGN (SETQ NT P1) (SETQ DONE T)))
               (T
                (PROGN
                 (SETQ EP1 (CAR P1))
                 (SETQ EP2 (CAR P2))
                 (SETQ SL (EV_COMP EP1 EP2))
                 (COND
                  ((IEQUAL SL 1)
                   (PROGN
                    (SETQ NT (CONS EP1 (CONS (CADR P1) NIL)))
                    (SETQ P1 (CDDR P1))))
                  ((IEQUAL SL (MINUS 1))
                   (PROGN
                    (SETQ NT (CONS EP2 (CONS (CADR P2) NIL)))
                    (SETQ P2 (CDDR P2))))
                  (T
                   (PROGN
                    (SETQ AL (BC_SUM (CADR P1) (CADR P2)))
                    (SETQ NT (COND ((NOT (NULL AL)) (CONS EP1 (CONS AL NIL)))))
                    (SETQ P1 (CDDR P1))
                    (SETQ P2 (CDDR P2))))))))
         (COND
          (NT
           (COND ((NULL W) (SETQ W (SETQ RW NT)))
                 (T (PROGN (SETCDR (CDR RW) NT) (SETQ RW NT)))))))
        (GO WHILELABEL))
      (RETURN W))) 
(DE DIP_2A (U) (COND ((NULL U) 0) (T (DIP_REPLUS (DIP_2A1 U))))) 
(PUT 'DIP_2A 'NUMBER-OF-ARGS 1) 
(PUT 'DIP_2A 'DEFINED-ON-LINE '576) 
(PUT 'DIP_2A 'DEFINED-IN-FILE 'CGB/DP.RED) 
(PUT 'DIP_2A 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(PUTC 'DIP_2A 'INLINE
      '(LAMBDA (U) (COND ((NULL U) 0) (T (DIP_REPLUS (DIP_2A1 U)))))) 
(PUT 'DIP_2A1 'NUMBER-OF-ARGS 1) 
(PUT 'DIP_2A1 'DEFINED-ON-LINE '580) 
(PUT 'DIP_2A1 'DEFINED-IN-FILE 'CGB/DP.RED) 
(PUT 'DIP_2A1 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE DIP_2A1 (U)
    (PROG (X Y)
      (COND ((NULL U) (RETURN NIL)))
      (SETQ X (CADR U))
      (SETQ Y (EV_2A1 (CAR U) DIP_VARS*))
      (COND
       ((BC_MINUS? X)
        (RETURN
         (CONS (LIST 'MINUS (DIP_RETIMES (CONS (PREPSQ (NEGSQ X)) Y)))
               (DIP_2A1 (CDDR U))))))
      (RETURN (CONS (DIP_RETIMES (CONS (PREPSQ X) Y)) (DIP_2A1 (CDDR U)))))) 
(PUT 'DIP_REPLUS 'NUMBER-OF-ARGS 1) 
(PUT 'DIP_REPLUS 'DEFINED-ON-LINE '591) 
(PUT 'DIP_REPLUS 'DEFINED-IN-FILE 'CGB/DP.RED) 
(PUT 'DIP_REPLUS 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE DIP_REPLUS (U)
    (COND ((ATOM U) U) ((NULL (CDR U)) (CAR U)) (T (CONS 'PLUS U)))) 
(PUT 'DIP_RETIMES 'NUMBER-OF-ARGS 1) 
(PUT 'DIP_RETIMES 'DEFINED-ON-LINE '594) 
(PUT 'DIP_RETIMES 'DEFINED-IN-FILE 'CGB/DP.RED) 
(PUT 'DIP_RETIMES 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE DIP_RETIMES (U)
    (COND ((EQUAL (CAR U) 1) (COND ((CDR U) (DIP_RETIMES (CDR U))) (T 1)))
          ((NULL (CDR U)) (CAR U)) (T (CONS 'TIMES U)))) 
(PUT 'DIP_SIMPCONT 'NUMBER-OF-ARGS 1) 
(PUT 'DIP_SIMPCONT 'DEFINED-ON-LINE '604) 
(PUT 'DIP_SIMPCONT 'DEFINED-IN-FILE 'CGB/DP.RED) 
(PUT 'DIP_SIMPCONT 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE DIP_SIMPCONT (P)
    (PROG (C)
      (SETQ C (DIP_CONTENTI P))
      (COND ((BC_MINUS? (CADR P)) (SETQ C (NEGSQ C))))
      (COND ((AND (EQUAL (CAR C) 1) (EQUAL (CDR C) 1)) (RETURN P)))
      (RETURN (DIP_REDUCECONTI P C)))) 
(DE DIP_CONTENTI (P) (DIP_CONTENTI1 P (CONS NIL 1))) 
(PUT 'DIP_CONTENTI 'NUMBER-OF-ARGS 1) 
(PUT 'DIP_CONTENTI 'DEFINED-ON-LINE '615) 
(PUT 'DIP_CONTENTI 'DEFINED-IN-FILE 'CGB/DP.RED) 
(PUT 'DIP_CONTENTI 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(PUTC 'DIP_CONTENTI 'INLINE '(LAMBDA (P) (DIP_CONTENTI1 P (CONS NIL 1)))) 
(PUT 'DIP_CONTENTI1 'NUMBER-OF-ARGS 2) 
(PUT 'DIP_CONTENTI1 'DEFINED-ON-LINE '618) 
(PUT 'DIP_CONTENTI1 'DEFINED-IN-FILE 'CGB/DP.RED) 
(PUT 'DIP_CONTENTI1 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE DIP_CONTENTI1 (P C)
    (PROGN
     (PROG ()
      WHILELABEL
       (COND ((NOT P) (RETURN NIL)))
       (PROGN (SETQ C (BC_GCD (CADR P) C)) (SETQ P (CDDR P)))
       (GO WHILELABEL))
     (CONS (ABSF (CAR C)) (CDR C)))) 
(PUT 'DIP_REDUCECONTI 'NUMBER-OF-ARGS 2) 
(PUT 'DIP_REDUCECONTI 'DEFINED-ON-LINE '627) 
(PUT 'DIP_REDUCECONTI 'DEFINED-IN-FILE 'CGB/DP.RED) 
(PUT 'DIP_REDUCECONTI 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE DIP_REDUCECONTI (P C)
    (COND
     (P
      (CONS (CAR P)
            (CONS (MULTSQ (CADR P) (INVSQ C)) (DIP_REDUCECONTI (CDDR P) C)))))) 
(DE DIP_CONDENSE (F) F) 
(PUT 'DIP_CONDENSE 'NUMBER-OF-ARGS 1) 
(PUT 'DIP_CONDENSE 'DEFINED-ON-LINE '648) 
(PUT 'DIP_CONDENSE 'DEFINED-IN-FILE 'CGB/DP.RED) 
(PUT 'DIP_CONDENSE 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(PUTC 'DIP_CONDENSE 'INLINE '(LAMBDA (F) F)) 
(PUT 'DIP_EVLCOMP 'NUMBER-OF-ARGS 2) 
(PUT 'DIP_EVLCOMP 'DEFINED-ON-LINE '651) 
(PUT 'DIP_EVLCOMP 'DEFINED-IN-FILE 'CGB/DP.RED) 
(PUT 'DIP_EVLCOMP 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE DIP_EVLCOMP (P1 P2) (NOT (IEQUAL (EV_COMP (CAR P2) (CAR P1)) 1))) 
(PUT 'DIP_LENGTH 'NUMBER-OF-ARGS 1) 
(PUT 'DIP_LENGTH 'DEFINED-ON-LINE '658) 
(PUT 'DIP_LENGTH 'DEFINED-IN-FILE 'CGB/DP.RED) 
(PUT 'DIP_LENGTH 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE DIP_LENGTH (P) (COND ((NULL P) 0) (T (PLUS 1 (DIP_LENGTH (CDDR P)))))) 
(PUT 'DIP_CANCELMEV 'NUMBER-OF-ARGS 2) 
(PUT 'DIP_CANCELMEV 'DEFINED-ON-LINE '664) 
(PUT 'DIP_CANCELMEV 'DEFINED-IN-FILE 'CGB/DP.RED) 
(PUT 'DIP_CANCELMEV 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE DIP_CANCELMEV (F EV)
    (COND ((NULL F) NIL) ((EV_MTEST? (CAR F) EV) (DIP_CANCELMEV (CDDR F) EV))
          (T (CONS (CAR F) (CONS (CADR F) (DIP_CANCELMEV (CDDR F) EV)))))) 
(PUT 'DIP_BCQUOT 'NUMBER-OF-ARGS 2) 
(PUT 'DIP_BCQUOT 'DEFINED-ON-LINE '673) 
(PUT 'DIP_BCQUOT 'DEFINED-IN-FILE 'CGB/DP.RED) 
(PUT 'DIP_BCQUOT 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE DIP_BCQUOT (P C)
    (COND ((AND (EQUAL (CAR C) 1) (EQUAL (CDR C) 1)) P) (T (DIP_BCQUOT1 P C)))) 
(PUT 'DIP_BCQUOT1 'NUMBER-OF-ARGS 2) 
(PUT 'DIP_BCQUOT1 'DEFINED-ON-LINE '679) 
(PUT 'DIP_BCQUOT1 'DEFINED-IN-FILE 'CGB/DP.RED) 
(PUT 'DIP_BCQUOT1 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE DIP_BCQUOT1 (P C)
    (COND ((NULL P) NIL)
          (T
           (CONS (CAR P)
                 (CONS (MULTSQ (CADR P) (INVSQ C)) (DIP_BCQUOT1 (CDDR P) C)))))) 
(PUT 'DIP_APPENDMON 'NUMBER-OF-ARGS 3) 
(PUT 'DIP_APPENDMON 'DEFINED-ON-LINE '685) 
(PUT 'DIP_APPENDMON 'DEFINED-IN-FILE 'CGB/DP.RED) 
(PUT 'DIP_APPENDMON 'PROCEDURE_TYPE
     '(ARROW (TIMES GENERAL GENERAL GENERAL) GENERAL)) 
(DE DIP_APPENDMON (DIP BC EV) (APPEND DIP (CONS EV (CONS BC NIL)))) 
(PUT 'DIP_NCONCMON 'NUMBER-OF-ARGS 3) 
(PUT 'DIP_NCONCMON 'DEFINED-ON-LINE '688) 
(PUT 'DIP_NCONCMON 'DEFINED-IN-FILE 'CGB/DP.RED) 
(PUT 'DIP_NCONCMON 'PROCEDURE_TYPE
     '(ARROW (TIMES GENERAL GENERAL GENERAL) GENERAL)) 
(DE DIP_NCONCMON (DIP BC EV) (NCONC DIP (CONS EV (CONS BC NIL)))) 
(PUT 'DIP_BCPROD 'NUMBER-OF-ARGS 2) 
(PUT 'DIP_BCPROD 'DEFINED-ON-LINE '691) 
(PUT 'DIP_BCPROD 'DEFINED-IN-FILE 'CGB/DP.RED) 
(PUT 'DIP_BCPROD 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE DIP_BCPROD (P C)
    (COND ((NULL (CAR C)) NIL) ((AND (EQUAL (CAR C) 1) (EQUAL (CDR C) 1)) P)
          (T (DIP_BCPROD1 P C)))) 
(PUT 'DIP_BCPROD1 'NUMBER-OF-ARGS 2) 
(PUT 'DIP_BCPROD1 'DEFINED-ON-LINE '699) 
(PUT 'DIP_BCPROD1 'DEFINED-IN-FILE 'CGB/DP.RED) 
(PUT 'DIP_BCPROD1 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE DIP_BCPROD1 (P C)
    (COND ((NULL P) NIL)
          (T
           (CONS (CAR P)
                 (CONS (BC_PROD (CADR P) C) (DIP_BCPROD1 (CDDR P) C)))))) 
(PUT 'DIP_TDEG 'NUMBER-OF-ARGS 1) 
(PUT 'DIP_TDEG 'DEFINED-ON-LINE '705) 
(PUT 'DIP_TDEG 'DEFINED-IN-FILE 'CGB/DP.RED) 
(PUT 'DIP_TDEG 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE DIP_TDEG (P)
    (COND ((NULL P) 0) (T (MAX (EV_TDEG (CAR P)) (DIP_TDEG (CDDR P)))))) 
(DE DIP_APPEND (P1 P2) (APPEND P1 P2)) 
(PUT 'DIP_APPEND 'NUMBER-OF-ARGS 2) 
(PUT 'DIP_APPEND 'DEFINED-ON-LINE '711) 
(PUT 'DIP_APPEND 'DEFINED-IN-FILE 'CGB/DP.RED) 
(PUT 'DIP_APPEND 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(PUTC 'DIP_APPEND 'INLINE '(LAMBDA (P1 P2) (APPEND P1 P2))) 
(PUT 'DIP_CP 'NUMBER-OF-ARGS 1) 
(PUT 'DIP_CP 'DEFINED-ON-LINE '714) 
(PUT 'DIP_CP 'DEFINED-IN-FILE 'CGB/DP.RED) 
(PUT 'DIP_CP 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE DIP_CP (P)
    (PROG (X FORALL-RESULT FORALL-ENDPTR)
      (SETQ X P)
      (COND ((NULL X) (RETURN NIL)))
      (SETQ FORALL-RESULT
              (SETQ FORALL-ENDPTR (CONS ((LAMBDA (X) X) (CAR X)) NIL)))
     LOOPLABEL
      (SETQ X (CDR X))
      (COND ((NULL X) (RETURN FORALL-RESULT)))
      (RPLACD FORALL-ENDPTR (CONS ((LAMBDA (X) X) (CAR X)) NIL))
      (SETQ FORALL-ENDPTR (CDR FORALL-ENDPTR))
      (GO LOOPLABEL))) 
(PUT 'DIP_DCONT 'NUMBER-OF-ARGS 1) 
(PUT 'DIP_DCONT 'DEFINED-ON-LINE '717) 
(PUT 'DIP_DCONT 'DEFINED-IN-FILE 'CGB/DP.RED) 
(PUT 'DIP_DCONT 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE DIP_DCONT (DP) (DIP_DCONT1 DP (CONS NIL 1))) 
(PUT 'DIP_DCONT1 'NUMBER-OF-ARGS 2) 
(PUT 'DIP_DCONT1 'DEFINED-ON-LINE '720) 
(PUT 'DIP_DCONT1 'DEFINED-IN-FILE 'CGB/DP.RED) 
(PUT 'DIP_DCONT1 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE DIP_DCONT1 (DP C)
    (PROGN
     (SETQ C (OR (CAR C) 0))
     (PROG ()
      WHILELABEL
       (COND ((NOT DP) (RETURN NIL)))
       (PROGN
        (SETQ C (GCDN C (SFTO_DCONTENTF (CAR (CADR DP)))))
        (SETQ DP (CDDR DP)))
       (GO WHILELABEL))
     (CONS C 1))) 
(PUT 'DIP_ILCOMB 'NUMBER-OF-ARGS 6) 
(PUT 'DIP_ILCOMB 'DEFINED-ON-LINE '730) 
(PUT 'DIP_ILCOMB 'DEFINED-IN-FILE 'CGB/DP.RED) 
(PUT 'DIP_ILCOMB 'PROCEDURE_TYPE
     '(ARROW (TIMES GENERAL GENERAL GENERAL GENERAL GENERAL GENERAL) GENERAL)) 
(DE DIP_ILCOMB (P1 C1 T1 P2 C2 T2)
    (COND ((NULL P1) (DIP_PROD P2 (CONS T2 (CONS C2 NIL))))
          ((NULL P2) (DIP_PROD P1 (CONS T1 (CONS C1 NIL))))
          (T (DIP_ILCOMB1 P1 C1 T1 P2 C2 T2)))) 
(PUT 'DIP_ILCOMBR 'NUMBER-OF-ARGS 5) 
(PUT 'DIP_ILCOMBR 'DEFINED-ON-LINE '738) 
(PUT 'DIP_ILCOMBR 'DEFINED-IN-FILE 'CGB/DP.RED) 
(PUT 'DIP_ILCOMBR 'PROCEDURE_TYPE
     '(ARROW (TIMES GENERAL GENERAL GENERAL GENERAL GENERAL) GENERAL)) 
(DE DIP_ILCOMBR (P1 C1 P2 C2 T2)
    (COND ((NULL P1) (DIP_PROD P2 (CONS T2 (CONS C2 NIL))))
          ((NULL P2) (DIP_BCPROD P1 C1)) (T (DIP_ILCOMB1R P1 C1 P2 C2 T2)))) 
(PUT 'DIP_ILCOMB1 'NUMBER-OF-ARGS 6) 
(PUT 'DIP_ILCOMB1 'DEFINED-ON-LINE '746) 
(PUT 'DIP_ILCOMB1 'DEFINED-IN-FILE 'CGB/DP.RED) 
(PUT 'DIP_ILCOMB1 'PROCEDURE_TYPE
     '(ARROW (TIMES GENERAL GENERAL GENERAL GENERAL GENERAL GENERAL) GENERAL)) 
(DE DIP_ILCOMB1 (P1 C1 T1 P2 C2 T2)
    (PROG (HC1 HT1 HC2 HT2 CMP RESL W)
      (SETQ HT1 (EV_SUM (CAR P1) T1))
      (SETQ P1 (CDR P1))
      (SETQ HC1 (BC_PROD (CAR P1) C1))
      (SETQ P1 (CDR P1))
      (SETQ HT2 (EV_SUM (CAR P2) T2))
      (SETQ P2 (CDR P2))
      (SETQ HC2 (BC_PROD (CAR P2) C2))
      (SETQ P2 (CDR P2))
      (PROG ()
       WHILELABEL
        (COND ((NOT (AND P1 P2)) (RETURN NIL)))
        (PROGN
         (SETQ CMP (EV_COMP HT1 HT2))
         (COND
          ((IEQUAL CMP 1)
           (PROGN
            (SETQ RESL (CONS HC1 (CONS HT1 RESL)))
            (SETQ HT1 (EV_SUM (CAR P1) T1))
            (SETQ P1 (CDR P1))
            (SETQ HC1 (BC_PROD (CAR P1) C1))
            (SETQ P1 (CDR P1))))
          ((IEQUAL CMP (MINUS 1))
           (PROGN
            (SETQ RESL (CONS HC2 (CONS HT2 RESL)))
            (SETQ HT2 (EV_SUM (CAR P2) T2))
            (SETQ P2 (CDR P2))
            (SETQ HC2 (BC_PROD (CAR P2) C2))
            (SETQ P2 (CDR P2))))
          (T
           (PROGN
            (SETQ W (BC_SUM HC1 HC2))
            (COND ((NOT (NULL (CAR W))) (SETQ RESL (CONS W (CONS HT1 RESL)))))
            (SETQ HT1 (EV_SUM (CAR P1) T1))
            (SETQ P1 (CDR P1))
            (SETQ HC1 (BC_PROD (CAR P1) C1))
            (SETQ P1 (CDR P1))
            (SETQ HT2 (EV_SUM (CAR P2) T2))
            (SETQ P2 (CDR P2))
            (SETQ HC2 (BC_PROD (CAR P2) C2))
            (SETQ P2 (CDR P2))))))
        (GO WHILELABEL))
      (RETURN
       (COND (P1 (DIP_ILCOMB2 RESL HC2 HT2 HC1 HT1 P1 C1 T1))
             (T (DIP_ILCOMB2 RESL HC1 HT1 HC2 HT2 P2 C2 T2)))))) 
(PUT 'DIP_ILCOMB2 'NUMBER-OF-ARGS 8) 
(PUT 'DIP_ILCOMB2 'DEFINED-ON-LINE '791) 
(PUT 'DIP_ILCOMB2 'DEFINED-IN-FILE 'CGB/DP.RED) 
(PUT 'DIP_ILCOMB2 'PROCEDURE_TYPE
     '(ARROW
       (TIMES GENERAL GENERAL GENERAL GENERAL GENERAL GENERAL GENERAL GENERAL)
       GENERAL)) 
(DE DIP_ILCOMB2 (RESL HC1 HT1 HC2 HT2 P2 C2 T2)
    (PROG (CMP W)
      (PROG ()
       WHILELABEL
        (COND
         ((NOT (AND P2 (IEQUAL (SETQ CMP (EV_COMP HT1 HT2)) (MINUS 1))))
          (RETURN NIL)))
        (PROGN
         (SETQ RESL (CONS HC2 (CONS HT2 RESL)))
         (SETQ HT2 (EV_SUM (CAR P2) T2))
         (SETQ P2 (CDR P2))
         (SETQ HC2 (BC_PROD (CAR P2) C2))
         (SETQ P2 (CDR P2)))
        (GO WHILELABEL))
      (COND
       (P2
        (PROGN
         (COND
          ((IEQUAL CMP 1)
           (SETQ RESL (CONS HC2 (CONS HT2 (CONS HC1 (CONS HT1 RESL))))))
          (T
           (PROGN
            (SETQ W (BC_SUM HC1 HC2))
            (COND
             ((NOT (NULL (CAR W))) (SETQ RESL (CONS W (CONS HT1 RESL))))))))
         (PROG ()
          WHILELABEL
           (COND ((NOT P2) (RETURN NIL)))
           (PROGN
            (SETQ RESL (CONS (EV_SUM (CAR P2) T2) RESL))
            (SETQ P2 (CDR P2))
            (SETQ RESL (CONS (BC_PROD (CAR P2) C2) RESL))
            (SETQ P2 (CDR P2)))
           (GO WHILELABEL))
         (RETURN (REVERSIP RESL)))))
      (SETQ CMP (EV_COMP HT1 HT2))
      (COND
       ((IEQUAL CMP (MINUS 1))
        (SETQ RESL (CONS HC1 (CONS HT1 (CONS HC2 (CONS HT2 RESL))))))
       ((IEQUAL CMP 1)
        (SETQ RESL (CONS HC2 (CONS HT2 (CONS HC1 (CONS HT1 RESL))))))
       (T
        (PROGN
         (SETQ W (BC_SUM HC1 HC2))
         (COND ((NOT (NULL (CAR W))) (SETQ RESL (CONS W (CONS HT1 RESL))))))))
      (RETURN (REVERSIP RESL)))) 
(PUT 'DIP_ILCOMB1R 'NUMBER-OF-ARGS 5) 
(PUT 'DIP_ILCOMB1R 'DEFINED-ON-LINE '829) 
(PUT 'DIP_ILCOMB1R 'DEFINED-IN-FILE 'CGB/DP.RED) 
(PUT 'DIP_ILCOMB1R 'PROCEDURE_TYPE
     '(ARROW (TIMES GENERAL GENERAL GENERAL GENERAL GENERAL) GENERAL)) 
(DE DIP_ILCOMB1R (P1 C1 P2 C2 T2)
    (PROG (HC1 HT1 HC2 HT2 CMP RESL W)
      (SETQ HT1 (CAR P1))
      (SETQ P1 (CDR P1))
      (SETQ HC1 (BC_PROD (CAR P1) C1))
      (SETQ P1 (CDR P1))
      (SETQ HT2 (EV_SUM (CAR P2) T2))
      (SETQ P2 (CDR P2))
      (SETQ HC2 (BC_PROD (CAR P2) C2))
      (SETQ P2 (CDR P2))
      (PROG ()
       WHILELABEL
        (COND ((NOT (AND P1 P2)) (RETURN NIL)))
        (PROGN
         (SETQ CMP (EV_COMP HT1 HT2))
         (COND
          ((IEQUAL CMP 1)
           (PROGN
            (SETQ RESL (CONS HC1 (CONS HT1 RESL)))
            (SETQ HT1 (CAR P1))
            (SETQ P1 (CDR P1))
            (SETQ HC1 (BC_PROD (CAR P1) C1))
            (SETQ P1 (CDR P1))))
          ((IEQUAL CMP (MINUS 1))
           (PROGN
            (SETQ RESL (CONS HC2 (CONS HT2 RESL)))
            (SETQ HT2 (EV_SUM (CAR P2) T2))
            (SETQ P2 (CDR P2))
            (SETQ HC2 (BC_PROD (CAR P2) C2))
            (SETQ P2 (CDR P2))))
          (T
           (PROGN
            (SETQ W (BC_SUM HC1 HC2))
            (COND ((NOT (NULL (CAR W))) (SETQ RESL (CONS W (CONS HT1 RESL)))))
            (SETQ HT1 (CAR P1))
            (SETQ P1 (CDR P1))
            (SETQ HC1 (BC_PROD (CAR P1) C1))
            (SETQ P1 (CDR P1))
            (SETQ HT2 (EV_SUM (CAR P2) T2))
            (SETQ P2 (CDR P2))
            (SETQ HC2 (BC_PROD (CAR P2) C2))
            (SETQ P2 (CDR P2))))))
        (GO WHILELABEL))
      (RETURN
       (COND (P1 (DIP_ILCOMB2R RESL HC2 HT2 HC1 HT1 P1 C1))
             (T (DIP_ILCOMB2 RESL HC1 HT1 HC2 HT2 P2 C2 T2)))))) 
(PUT 'DIP_ILCOMB2R 'NUMBER-OF-ARGS 7) 
(PUT 'DIP_ILCOMB2R 'DEFINED-ON-LINE '875) 
(PUT 'DIP_ILCOMB2R 'DEFINED-IN-FILE 'CGB/DP.RED) 
(PUT 'DIP_ILCOMB2R 'PROCEDURE_TYPE
     '(ARROW (TIMES GENERAL GENERAL GENERAL GENERAL GENERAL GENERAL GENERAL)
       GENERAL)) 
(DE DIP_ILCOMB2R (RESL HC1 HT1 HC2 HT2 P2 C2)
    (PROG (CMP W)
      (PROG ()
       WHILELABEL
        (COND
         ((NOT (AND P2 (IEQUAL (SETQ CMP (EV_COMP HT1 HT2)) (MINUS 1))))
          (RETURN NIL)))
        (PROGN
         (SETQ RESL (CONS HC2 (CONS HT2 RESL)))
         (SETQ HT2 (CAR P2))
         (SETQ P2 (CDR P2))
         (SETQ HC2 (BC_PROD (CAR P2) C2))
         (SETQ P2 (CDR P2)))
        (GO WHILELABEL))
      (COND
       (P2
        (PROGN
         (COND
          ((IEQUAL CMP 1)
           (SETQ RESL (CONS HC2 (CONS HT2 (CONS HC1 (CONS HT1 RESL))))))
          (T
           (PROGN
            (SETQ W (BC_SUM HC1 HC2))
            (COND
             ((NOT (NULL (CAR W))) (SETQ RESL (CONS W (CONS HT1 RESL))))))))
         (PROG ()
          WHILELABEL
           (COND ((NOT P2) (RETURN NIL)))
           (PROGN
            (SETQ RESL (CONS (CAR P2) RESL))
            (SETQ P2 (CDR P2))
            (SETQ RESL (CONS (BC_PROD (CAR P2) C2) RESL))
            (SETQ P2 (CDR P2)))
           (GO WHILELABEL))
         (RETURN (REVERSIP RESL)))))
      (SETQ CMP (EV_COMP HT1 HT2))
      (COND
       ((IEQUAL CMP (MINUS 1))
        (SETQ RESL (CONS HC1 (CONS HT1 (CONS HC2 (CONS HT2 RESL))))))
       ((IEQUAL CMP 1)
        (SETQ RESL (CONS HC2 (CONS HT2 (CONS HC1 (CONS HT1 RESL))))))
       (T
        (PROGN
         (SETQ W (BC_SUM HC1 HC2))
         (COND ((NOT (NULL (CAR W))) (SETQ RESL (CONS W (CONS HT1 RESL))))))))
      (RETURN (REVERSIP RESL)))) 
(PUT 'DIP_COMP 'NUMBER-OF-ARGS 2) 
(PUT 'DIP_COMP 'DEFINED-ON-LINE '913) 
(PUT 'DIP_COMP 'DEFINED-IN-FILE 'CGB/DP.RED) 
(PUT 'DIP_COMP 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE DIP_COMP (P1 P2)
    (PROG (W)
      (COND ((NULL P1) (RETURN NIL)))
      (COND ((NULL P2) (RETURN T)))
      (SETQ W (DIP_COMP1 P1 P2))
      (COND ((IEQUAL W (MINUS 1)) (RETURN NIL)))
      (COND ((IEQUAL W 1) (RETURN T)))
      (RETURN (DIP_COMP (CDDR P1) (CDDR P2))))) 
(DE DIP_COMP1 (P1 P2) (EV_COMP (CAR P1) (CAR P2))) 
(PUT 'DIP_COMP1 'NUMBER-OF-ARGS 2) 
(PUT 'DIP_COMP1 'DEFINED-ON-LINE '930) 
(PUT 'DIP_COMP1 'DEFINED-IN-FILE 'CGB/DP.RED) 
(PUT 'DIP_COMP1 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(PUTC 'DIP_COMP1 'INLINE '(LAMBDA (P1 P2) (EV_COMP (CAR P1) (CAR P2)))) 
(DE DIP_ONE NIL (CONS (EV_ZERO) (CONS (SIMP* 1) NIL))) 
(PUT 'DIP_ONE 'NUMBER-OF-ARGS 0) 
(PUT 'DIP_ONE 'DEFINED-ON-LINE '933) 
(PUT 'DIP_ONE 'DEFINED-IN-FILE 'CGB/DP.RED) 
(PUT 'DIP_ONE 'PROCEDURE_TYPE '(ARROW UNIT GENERAL)) 
(PUTC 'DIP_ONE 'INLINE '(LAMBDA () (CONS (EV_ZERO) (CONS (SIMP* 1) NIL)))) 
(ENDMODULE) 
(MODULE (LIST 'TD)) 
(PUT 'TD_VARS 'NUMBER-OF-ARGS 0) 
(PUT 'TD_VARS 'DEFINED-ON-LINE '942) 
(PUT 'TD_VARS 'DEFINED-IN-FILE 'CGB/DP.RED) 
(PUT 'TD_VARS 'PROCEDURE_TYPE '(ARROW UNIT GENERAL)) 
(DE TD_VARS NIL (COND (*TDUSETORDER (CDR GLOBAL-DIPVARS*)) (T (CDR TD_VARS*)))) 
(PUT 'TD_SORTMODE 'NUMBER-OF-ARGS 0) 
(PUT 'TD_SORTMODE 'DEFINED-ON-LINE '948) 
(PUT 'TD_SORTMODE 'DEFINED-IN-FILE 'CGB/DP.RED) 
(PUT 'TD_SORTMODE 'PROCEDURE_TYPE '(ARROW UNIT GENERAL)) 
(DE TD_SORTMODE NIL (COND (*TDUSETORDER VDPSORTMODE*) (T TD_SORTMODE*))) 
(PUT 'TD_SORTEXTENSION 'NUMBER-OF-ARGS 0) 
(PUT 'TD_SORTEXTENSION 'DEFINED-ON-LINE '954) 
(PUT 'TD_SORTEXTENSION 'DEFINED-IN-FILE 'CGB/DP.RED) 
(PUT 'TD_SORTEXTENSION 'PROCEDURE_TYPE '(ARROW UNIT GENERAL)) 
(DE TD_SORTEXTENSION NIL
    (COND (*TDUSETORDER VDPSORTEXTENSION*) (T TD_SORTEXTENSION*))) 
(PUT 'TD_TORDER 'NUMBER-OF-ARGS 1) 
(PUT 'TD_TORDER 'DEFINED-ON-LINE '960) 
(PUT 'TD_TORDER 'DEFINED-IN-FILE 'CGB/DP.RED) 
(PUT 'TD_TORDER 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE TD_TORDER (U)
    (PROG (OLDMODE OLDEX OLDVARS W)
      (SETQ OLDMODE TD_SORTMODE*)
      (SETQ OLDEX TD_SORTEXTENSION*)
      (SETQ OLDVARS TD_VARS*)
      (SETQ TD_VARS* '(LIST))
      (SETQ W (REVAL1 (CAR U) T))
      (COND ((AND (NULL (CDR U)) (EQCAR W 'LIST)) (SETQ U (CDR W)))
            (T
             (SETQ U
                     (CONS W
                           (PROG (A FORALL-RESULT FORALL-ENDPTR)
                             (SETQ A (CDR U))
                             (COND ((NULL A) (RETURN NIL)))
                             (SETQ FORALL-RESULT
                                     (SETQ FORALL-ENDPTR
                                             (CONS
                                              ((LAMBDA (A) (REVAL1 A T))
                                               (CAR A))
                                              NIL)))
                            LOOPLABEL
                             (SETQ A (CDR A))
                             (COND ((NULL A) (RETURN FORALL-RESULT)))
                             (RPLACD FORALL-ENDPTR
                                     (CONS ((LAMBDA (A) (REVAL1 A T)) (CAR A))
                                           NIL))
                             (SETQ FORALL-ENDPTR (CDR FORALL-ENDPTR))
                             (GO LOOPLABEL))))))
      (SETQ W (CAR U))
      (SETQ U (CDR U))
      (COND
       ((EQCAR W 'LIST)
        (PROGN (SETQ TD_VARS* W) (SETQ W (CAR U)) (SETQ U (CDR U)))))
      (SETQ TD_SORTMODE* W)
      (SETQ TD_SORTEXTENSION*
              (PROG (X FORALL-RESULT FORALL-ENDPTR)
                (SETQ X U)
               STARTOVER
                (COND ((NULL X) (RETURN NIL)))
                (SETQ FORALL-RESULT
                        ((LAMBDA (X)
                           (COND ((EQCAR X 'LIST) (CDR X)) (T (LIST X))))
                         (CAR X)))
                (SETQ FORALL-ENDPTR (LASTPAIR FORALL-RESULT))
                (SETQ X (CDR X))
                (COND ((ATOM FORALL-ENDPTR) (GO STARTOVER)))
               LOOPLABEL
                (COND ((NULL X) (RETURN FORALL-RESULT)))
                (RPLACD FORALL-ENDPTR
                        ((LAMBDA (X)
                           (COND ((EQCAR X 'LIST) (CDR X)) (T (LIST X))))
                         (CAR X)))
                (SETQ FORALL-ENDPTR (LASTPAIR FORALL-ENDPTR))
                (SETQ X (CDR X))
                (GO LOOPLABEL)))
      (COND
       ((AND (FLAGP TD_SORTMODE* 'DIPSORTEXTENSION) (NULL TD_SORTEXTENSION*))
        (REDERR "td_torder: term order needs additional parameter(s)")))
      (RETURN (CONS 'LIST (CONS OLDVARS (CONS OLDMODE OLDEX)))))) 
(ENDMODULE) 