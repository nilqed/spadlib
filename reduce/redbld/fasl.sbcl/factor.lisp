(cl:declaim (cl:optimize cl:debug cl:safety))
(cl:declaim (sb-ext:muffle-conditions sb-ext:compiler-note cl:style-warning))
(MODULE (LIST 'FACTOR)) 
(CREATE-PACKAGE
 '(FACTOR BIGMODP DEGSETS FACPRIM FACMOD FACUNI IMAGESET PFACTOR VECPOLY
          PFACMULT)
 NIL) 
(LOAD-PACKAGE 'EZGCD) 
(PROG (J)
  (SETQ J (GET 'FACTOR 'PACKAGE))
 LAB
  (COND ((NULL J) (RETURN NIL)))
  ((LAMBDA (J) (PUT J 'COMPILETIME '(SETQ *FASTFOR T))) (CAR J))
  (SETQ J (CDR J))
  (GO LAB)) 
(FLUID
 '(*IFACTOR *OVERVIEW *TRALLFAC *TRFAC FACTOR-LEVEL FACTOR-TRACE-LIST POSN*)) 
(GLOBAL '(SPARE*)) 
(SWITCH (LIST 'IFACTOR 'OVERVIEW 'TRALLFAC 'TRFAC)) 
(DEFLIST '((MINUS-ONE -1)) 'NEWNAM) 
(DE GET-F-NUMVEC (S) (CADR (CDDR (CDDDR S)))) 
(PUT 'GET-F-NUMVEC 'NUMBER-OF-ARGS 1) 
(PUT 'GET-F-NUMVEC 'DEFINED-ON-LINE '61) 
(PUT 'GET-F-NUMVEC 'DEFINED-IN-FILE 'FACTOR/FACTOR.RED) 
(PUT 'GET-F-NUMVEC 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(PUTC 'GET-F-NUMVEC 'INLINE '(LAMBDA (S) (CADR (CDDR (CDDDR S))))) 
(PUT 'TTAB* 'NUMBER-OF-ARGS 1) 
(PUT 'TTAB* 'DEFINED-ON-LINE '63) 
(PUT 'TTAB* 'DEFINED-IN-FILE 'FACTOR/FACTOR.RED) 
(PUT 'TTAB* 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE TTAB* (N)
    (PROGN
     (COND ((GREATERP N (DIFFERENCE (LINELENGTH NIL) SPARE*)) (SETQ N 0)))
     (COND ((GREATERP POSN* N) (TERPRI* NIL)))
     (PROG ()
      WHILELABEL
       (COND ((NOT (NOT (EQUAL POSN* N))) (RETURN NIL)))
       (PRIN2* BLANK)
       (GO WHILELABEL)))) 
(PUT 'NEW-LEVEL 'NUMBER-OF-ARGS 2) 
(PUT 'NEW-LEVEL 'DEFINED-ON-LINE '70) 
(PUT 'NEW-LEVEL 'DEFINED-IN-FILE 'FACTOR/FACTOR.RED) 
(PUT 'NEW-LEVEL 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(PUTC 'NEW-LEVEL 'SMACRO '(LAMBDA (N C) ((LAMBDA (FACTOR-LEVEL) C) N))) 
(PUT 'SET-TRACE-FACTOR 'NUMBER-OF-ARGS 2) 
(PUT 'SET-TRACE-FACTOR 'DEFINED-ON-LINE '72) 
(PUT 'SET-TRACE-FACTOR 'DEFINED-IN-FILE 'FACTOR/FACTOR.RED) 
(PUT 'SET-TRACE-FACTOR 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE SET-TRACE-FACTOR (N FILE)
    (SETQ FACTOR-TRACE-LIST
            (CONS
             (CONS N
                   (COND ((EQUAL FILE NIL) NIL)
                         (T (OPEN (MKFIL FILE) 'OUTPUT))))
             FACTOR-TRACE-LIST))) 
(PUT 'CLEAR-TRACE-FACTOR 'NUMBER-OF-ARGS 1) 
(PUT 'CLEAR-TRACE-FACTOR 'DEFINED-ON-LINE '77) 
(PUT 'CLEAR-TRACE-FACTOR 'DEFINED-IN-FILE 'FACTOR/FACTOR.RED) 
(PUT 'CLEAR-TRACE-FACTOR 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE CLEAR-TRACE-FACTOR (N)
    (PROG (W)
      (SETQ W (ASSOC N FACTOR-TRACE-LIST))
      (COND
       (W
        (PROGN
         (COND ((CDR W) (CLOSE (CDR W))))
         (SETQ FACTOR-TRACE-LIST (DELASC N FACTOR-TRACE-LIST)))))
      (RETURN NIL))) 
(PUT 'CLOSE-TRACE-FILES 'NUMBER-OF-ARGS 0) 
(PUT 'CLOSE-TRACE-FILES 'DEFINED-ON-LINE '87) 
(PUT 'CLOSE-TRACE-FILES 'DEFINED-IN-FILE 'FACTOR/FACTOR.RED) 
(PUT 'CLOSE-TRACE-FILES 'PROCEDURE_TYPE '(ARROW UNIT GENERAL)) 
(DE CLOSE-TRACE-FILES NIL
    (PROGN
     (PROG ()
      WHILELABEL
       (COND ((NOT FACTOR-TRACE-LIST) (RETURN NIL)))
       (CLEAR-TRACE-FACTOR (CAAR FACTOR-TRACE-LIST))
       (GO WHILELABEL))
     NIL)) 
(ENDMODULE) 