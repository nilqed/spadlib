(cl:declaim (cl:optimize cl:debug cl:safety))
(cl:declaim (sb-ext:muffle-conditions sb-ext:compiler-note cl:style-warning))
(MODULE (LIST 'FORSTAT)) 
(FLUID '(*BLOCKP *FASTFOR *MODULAR)) 
(GLOBAL '(CURSYM* FORACTIONS*)) 
(SETQ FORACTIONS* '(DO COLLECT CONC PRODUCT SUM)) 
(REMFLAG FORACTIONS* 'DELIM) 
(DEFLIST '((PRODUCT TIMES) (SUM PLUS)) 'BIN) 
(DEFLIST '((PRODUCT 1) (SUM 0)) 'INITVAL) 
(PUT 'FORSTAT 'NUMBER-OF-ARGS 0) 
(PUT 'FORSTAT 'DEFINED-ON-LINE '76) 
(PUT 'FORSTAT 'DEFINED-IN-FILE 'RLISP/FORSTAT.RED) 
(PUT 'FORSTAT 'PROCEDURE_TYPE '(ARROW UNIT GENERAL)) 
(DE FORSTAT NIL
    (PROG (*BLOCKP)
      (RETURN
       (COND ((EQUAL (SCAN) 'ALL) (FORALLSTAT))
             ((EQUAL CURSYM* 'EACH) (FOREACHSTAT)) (T (FORLOOP)))))) 
(PUT 'FOR 'STAT 'FORSTAT) 
(PUT 'FORLOOP 'NUMBER-OF-ARGS 0) 
(PUT 'FORLOOP 'DEFINED-ON-LINE '85) 
(PUT 'FORLOOP 'DEFINED-IN-FILE 'RLISP/FORSTAT.RED) 
(PUT 'FORLOOP 'PROCEDURE_TYPE '(ARROW UNIT GENERAL)) 
(DE FORLOOP NIL
    (PROG (ACTION BOOL INCR VAR X)
      (COND ((FLAGP 'STEP 'DELIM) (SETQ BOOL T)) (T (FLAG '(STEP) 'DELIM)))
      (SETQ X (ERRORSET* '(XREAD1 'FOR) T))
      (COND ((NULL BOOL) (REMFLAG '(STEP) 'DELIM)) (T (SETQ BOOL NIL)))
      (COND ((ERRORP X) (ERROR1)) (T (SETQ X (CAR X))))
      (COND
       ((OR (NOT (EQCAR X 'SETQ)) (NOT (IDP (SETQ VAR (CADR X)))))
        (SYMERR 'FOR T)))
      (SETQ X (CADDR X))
      (COND
       ((EQUAL CURSYM* 'STEP)
        (PROGN
         (COND ((FLAGP 'UNTIL 'DELIM) (SETQ BOOL T))
               (T (FLAG '(UNTIL) 'DELIM)))
         (SETQ INCR (XREAD T))
         (COND ((NULL BOOL) (REMFLAG '(UNTIL) 'DELIM)) (T (SETQ BOOL NIL)))
         (COND ((NOT (EQUAL CURSYM* 'UNTIL)) (SYMERR 'FOR T)))))
       ((EQUAL CURSYM* '*COLON*) (SETQ INCR 1)) (T (SYMERR 'FOR T)))
      (COND ((FLAGP (CAR FORACTIONS*) 'DELIM) (SETQ BOOL T))
            (T (FLAG FORACTIONS* 'DELIM)))
      (SETQ INCR (LIST X INCR (XREAD T)))
      (COND ((NULL BOOL) (REMFLAG FORACTIONS* 'DELIM)))
      (COND ((NOT (MEMQ (SETQ ACTION CURSYM*) FORACTIONS*)) (SYMERR 'FOR T)))
      (RETURN (LIST 'FOR VAR INCR ACTION (XREAD T))))) 
(PUT 'FORMFOR 'NUMBER-OF-ARGS 3) 
(PUT 'FORMFOR 'DEFINED-ON-LINE '112) 
(PUT 'FORMFOR 'DEFINED-IN-FILE 'RLISP/FORSTAT.RED) 
(PUT 'FORMFOR 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL GENERAL) GENERAL)) 
(DE FORMFOR (U VARS MODE)
    (PROG (ACTION ALGP BODY ENDVAL INCR INITVAL VAR X **A2SFN)
      (SETQ **A2SFN 'AEVAL*)
      (SETQ VAR (CADR U))
      (SETQ INCR (CADDR U))
      (SETQ INCR
              (LIST (FORMC (CAR INCR) VARS MODE) (FORMC (CADR INCR) VARS MODE)
                    (FORMC (CADDR INCR) VARS MODE)))
      (COND
       ((NOT (ATSOC VAR VARS))
        (COND
         ((AND (INTEXPRNP (CAR INCR) VARS) (INTEXPRNP (CADR INCR) VARS))
          (SETQ VARS (CONS (CONS VAR 'INTEGER) VARS)))
         (T (SETQ VARS (CONS (CONS VAR MODE) VARS))))))
      (SETQ ACTION (CADDDR U))
      (SETQ BODY (FORMC (CAR (CDDDDR U)) VARS MODE))
      (SETQ INITVAL (CAR INCR))
      (SETQ ENDVAL (CADDR INCR))
      (SETQ INCR (CADR INCR))
      (SETQ ALGP (OR (ALGMODEP INITVAL) (ALGMODEP INCR) (ALGMODEP ENDVAL)))
      (COND
       (ALGP
        (PROGN (SETQ ENDVAL (UNREVAL ENDVAL)) (SETQ INCR (UNREVAL INCR)))))
      (SETQ X
              (COND (ALGP (LIST 'LIST ''DIFFERENCE ENDVAL VAR))
                    (T
                     (LIST (COND (*FASTFOR 'IDIFFERENCE) (T 'DIFFERENCE))
                           ENDVAL VAR))))
      (COND
       ((NEQ INCR 1)
        (SETQ X
                (COND (ALGP (LIST 'LIST ''TIMES INCR X))
                      (T (LIST 'TIMES INCR X))))))
      (SETQ X
              (COND (ALGP (LIST '|AMINUSP:| X))
                    (T (LIST (COND (*FASTFOR 'IMINUSP) (T 'MINUSP)) X))))
      (RETURN
       (FORFORMAT ACTION BODY INITVAL X
                  (COND (ALGP (LIST 'AEVAL* (LIST 'LIST ''PLUS INCR)))
                        (T (LIST (COND (*FASTFOR 'IPLUS2) (T 'PLUS2)) INCR)))
                  VAR VARS MODE)))) 
(PUT 'FOR 'FORMFN 'FORMFOR) 
(PUT 'ALGMODEP 'NUMBER-OF-ARGS 1) 
(PUT 'ALGMODEP 'DEFINED-ON-LINE '153) 
(PUT 'ALGMODEP 'DEFINED-IN-FILE 'RLISP/FORSTAT.RED) 
(PUT 'ALGMODEP 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE ALGMODEP (U) (AND (NOT (ATOM U)) (MEMQ (CAR U) '(AEVAL AEVAL*)))) 
(PUT '|AMINUSP:| 'NUMBER-OF-ARGS 1) 
(PUT '|AMINUSP:| 'DEFINED-ON-LINE '156) 
(PUT '|AMINUSP:| 'DEFINED-IN-FILE 'RLISP/FORSTAT.RED) 
(PUT '|AMINUSP:| 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE |AMINUSP:| (U)
    (PROG (OLDMODE V)
      (COND (*MODULAR (SETQ OLDMODE (SETDMODE 'MODULAR NIL))))
      (SETQ V (ERRORSET2 (LIST '|AMINUSP:1| (MKQUOTE U))))
      (COND (OLDMODE (SETDMODE 'MODULAR T)))
      (COND ((ERRORP V) (TYPERR U "arithmetic expression"))
            (T (RETURN (CAR V)))))) 
(PUT '|AMINUSP:1| 'NUMBER-OF-ARGS 1) 
(PUT '|AMINUSP:1| 'DEFINED-ON-LINE '167) 
(PUT '|AMINUSP:1| 'DEFINED-IN-FILE 'RLISP/FORSTAT.RED) 
(PUT '|AMINUSP:1| 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE |AMINUSP:1| (U)
    (PROG (X)
      (SETQ U (AEVAL* U))
      (SETQ X U)
      (COND ((FIXP X) (RETURN (MINUSP X)))
            ((NOT (EQCAR X '*SQ))
             (MSGPRI NIL (REVAL1 U T) "invalid in FOR statement" NIL T)))
      (SETQ X (CADR X))
      (COND ((AND (FIXP (CAR X)) (FIXP (CDR X))) (RETURN (MINUSP (CAR X))))
            ((OR (NOT (EQUAL (CDR X) 1))
                 (NOT (OR (ATOM (SETQ X (CAR X))) (ATOM (CAR X)))))
             (MSGPRI NIL (REVAL1 U T) "invalid in FOR statement" NIL T))
            (T (RETURN (APPLY1 '|:MINUSP| X)))))) 
(PUT 'FOREACHSTAT 'NUMBER-OF-ARGS 0) 
(PUT 'FOREACHSTAT 'DEFINED-ON-LINE '183) 
(PUT 'FOREACHSTAT 'DEFINED-IN-FILE 'RLISP/FORSTAT.RED) 
(PUT 'FOREACHSTAT 'PROCEDURE_TYPE '(ARROW UNIT GENERAL)) 
(DE FOREACHSTAT NIL
    (PROG (W X Y Z)
      (COND
       ((OR (NOT (IDP (SETQ X (SCAN)))) (NOT (MEMQ (SETQ Y (SCAN)) '(IN ON))))
        (SYMERR "FOR EACH" T))
       ((FLAGP (CAR FORACTIONS*) 'DELIM) (SETQ W T))
       (T (FLAG FORACTIONS* 'DELIM)))
      (SETQ Z (XREAD T))
      (COND ((NULL W) (REMFLAG FORACTIONS* 'DELIM)))
      (SETQ W CURSYM*)
      (COND ((NOT (MEMQ W FORACTIONS*)) (SYMERR "FOR EACH" T)))
      (RETURN (LIST 'FOREACH X Y Z W (XREAD T))))) 
(PUT 'FOREACH 'STAT 'FOREACHSTAT) 
(PUT 'FORMFOREACH 'NUMBER-OF-ARGS 3) 
(PUT 'FORMFOREACH 'DEFINED-ON-LINE '198) 
(PUT 'FORMFOREACH 'DEFINED-IN-FILE 'RLISP/FORSTAT.RED) 
(PUT 'FORMFOREACH 'PROCEDURE_TYPE
     '(ARROW (TIMES GENERAL GENERAL GENERAL) GENERAL)) 
(DE FORMFOREACH (U VARS MODE)
    (PROG (ACTION BODY LST MOD1 VAR)
      (SETQ VAR (CADR U))
      (SETQ U (CDDR U))
      (SETQ MOD1 (CAR U))
      (SETQ U (CDR U))
      (SETQ LST (FORMC (CAR U) VARS MODE))
      (SETQ U (CDR U))
      (COND ((NOT (EQUAL MODE 'SYMBOLIC)) (SETQ LST (LIST 'GETRLIST LST))))
      (SETQ ACTION (CAR U))
      (SETQ U (CDR U))
      (SETQ BODY (FORMC (CAR U) (CONS (CONS VAR MODE) VARS) MODE))
      (COND
       ((EQUAL MOD1 'IN)
        (SETQ BODY (LIST (LIST 'LAMBDA (LIST VAR) BODY) (LIST 'CAR VAR))))
       ((NOT (EQUAL MODE 'SYMBOLIC)) (TYPERR MOD1 'ACTION)))
      (RETURN
       (FORFORMAT ACTION BODY LST (LIST 'NULL VAR) (LIST 'CDR) VAR VARS MODE)))) 
(PUT 'FOREACH 'FORMFN 'FORMFOREACH) 
(PUT 'FORFORMAT 'NUMBER-OF-ARGS 8) 
(PUT 'FORFORMAT 'DEFINED-ON-LINE '215) 
(PUT 'FORFORMAT 'DEFINED-IN-FILE 'RLISP/FORSTAT.RED) 
(PUT 'FORFORMAT 'PROCEDURE_TYPE
     '(ARROW
       (TIMES GENERAL GENERAL GENERAL GENERAL GENERAL GENERAL GENERAL GENERAL)
       GENERAL)) 
(DE FORFORMAT (ACTION BODY INITVAL TESTEXP UPDFORM VAR VARS MODE)
    (PROG (RESULT)
      (COND
       ((AND (ALGMODEP UPDFORM) (GREATERP (LENGTH (CADR UPDFORM)) 2))
        (PROGN
         (SETQ RESULT 'FORALL-RESULT)
         (SETQ UPDFORM
                 (LIST
                  (LIST 'LAMBDA (LIST RESULT)
                        (LIST 'AEVAL*
                              (CONS (CAADR UPDFORM)
                                    (CONS (CADADR UPDFORM)
                                          (CONS RESULT
                                                (CDDADR UPDFORM)))))))))))
      (SETQ RESULT 'FORALL-RESULT)
      (RETURN
       (SUBLIS
        (LIST
         (CONS 'BODY2
               (COND
                ((OR (EQUAL MODE 'SYMBOLIC) (INTEXPRNP BODY VARS))
                 (LIST (GET ACTION 'BIN) BODY RESULT))
                (T
                 (LIST 'AEVAL*
                       (LIST 'LIST (MKQUOTE (GET ACTION 'BIN)) (UNREVAL BODY)
                             RESULT)))))
         (CONS 'BODY3
               (COND ((EQUAL MODE 'SYMBOLIC) BODY) (T (LIST 'GETRLIST BODY))))
         (CONS 'BODY BODY) (CONS 'INITVAL INITVAL)
         (CONS 'NILLIST
               (COND ((EQUAL MODE 'SYMBOLIC) NIL) (T '(MAKELIST NIL))))
         (CONS 'RESULT RESULT) (CONS 'INITRESULT (GET ACTION 'INITVAL))
         (CONS 'RESULTLIST
               (COND ((EQUAL MODE 'SYMBOLIC) RESULT)
                     (T (LIST 'CONS ''LIST RESULT))))
         (CONS 'TESTEXP TESTEXP) (CONS 'UPDFN (CAR UPDFORM))
         (CONS 'UPDVAL (CDR UPDFORM)) (CONS 'VAR VAR))
        (COND
         ((EQUAL ACTION 'DO)
          '(PROG (VAR)
             (SETQ VAR INITVAL)
            LAB
             (COND (TESTEXP (RETURN NIL)))
            BODY
             (SETQ VAR (UPDFN VAR . UPDVAL))
             (GO LAB)))
         ((EQUAL ACTION 'COLLECT)
          '(PROG (VAR RESULT FORALL-ENDPTR)
             (SETQ VAR INITVAL)
             (COND (TESTEXP (RETURN NILLIST)))
             (SETQ RESULT (SETQ FORALL-ENDPTR (CONS BODY NIL)))
            LOOPLABEL
             (SETQ VAR (UPDFN VAR . UPDVAL))
             (COND (TESTEXP (RETURN RESULTLIST)))
             (RPLACD FORALL-ENDPTR (CONS BODY NIL))
             (SETQ FORALL-ENDPTR (CDR FORALL-ENDPTR))
             (GO LOOPLABEL)))
         ((EQUAL ACTION 'CONC)
          '(PROG (VAR RESULT FORALL-ENDPTR)
             (SETQ VAR INITVAL)
            STARTOVER
             (COND (TESTEXP (RETURN NILLIST)))
             (SETQ RESULT BODY)
             (SETQ FORALL-ENDPTR (LASTPAIR RESULTLIST))
             (SETQ VAR (UPDFN VAR . UPDVAL))
             (COND ((ATOM FORALL-ENDPTR) (GO STARTOVER)))
            LOOPLABEL
             (COND (TESTEXP (RETURN RESULT)))
             (RPLACD FORALL-ENDPTR BODY3)
             (SETQ FORALL-ENDPTR (LASTPAIR FORALL-ENDPTR))
             (SETQ VAR (UPDFN VAR . UPDVAL))
             (GO LOOPLABEL)))
         (T
          '(PROG (VAR RESULT)
             (SETQ VAR INITVAL)
             (SETQ RESULT INITRESULT)
            LAB1
             (COND (TESTEXP (RETURN RESULT)))
             (SETQ RESULT BODY2)
             (SETQ VAR (UPDFN VAR . UPDVAL))
             (GO LAB1)))))))) 
(PUT 'UNREVAL 'NUMBER-OF-ARGS 1) 
(PUT 'UNREVAL 'DEFINED-ON-LINE '305) 
(PUT 'UNREVAL 'DEFINED-IN-FILE 'RLISP/FORSTAT.RED) 
(PUT 'UNREVAL 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE UNREVAL (U)
    (COND ((OR (ATOM U) (NULL (MEMQ (CAR U) '(AEVAL REVAL)))) U) (T (CADR U)))) 
(REMPROP 'CONC 'NEWNAM) 
(PUT 'JOIN 'NEWNAM 'CONC) 
(ENDMODULE) 