(cl:declaim (cl:optimize cl:debug cl:safety))
(cl:declaim (sb-ext:muffle-conditions sb-ext:compiler-note cl:style-warning))
(MODULE (LIST 'SUBSTNS)) 
(EXPORTS
 (LIST 'XSUBSTITUTEP 'XSUBSTITUTESQ 'SUBSTITUTEVEC 'SUBSTITUTESQ 'SUBZERO
       'SUBZERO2 'PVARSUB)) 
(PUT 'XSUBSTITUTEP 'NUMBER-OF-ARGS 2) 
(PUT 'XSUBSTITUTEP 'DEFINED-ON-LINE '34) 
(PUT 'XSUBSTITUTEP 'DEFINED-IN-FILE 'ALGINT/SUBSTNS.RED) 
(PUT 'XSUBSTITUTEP 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE XSUBSTITUTEP (PF SLIST) (SIMP (XSUBSTITUTEP2 PF SLIST))) 
(PUT 'XSUBSTITUTEP2 'NUMBER-OF-ARGS 2) 
(PUT 'XSUBSTITUTEP2 'DEFINED-ON-LINE '38) 
(PUT 'XSUBSTITUTEP2 'DEFINED-IN-FILE 'ALGINT/SUBSTNS.RED) 
(PUT 'XSUBSTITUTEP2 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE XSUBSTITUTEP2 (PF SLIST)
    (COND ((NULL SLIST) PF)
          (T (XSUBSTITUTEP2 (SUBST (CDAR SLIST) (CAAR SLIST) PF) (CDR SLIST))))) 
(PUT 'XSUBSTITUTESQ 'NUMBER-OF-ARGS 2) 
(PUT 'XSUBSTITUTESQ 'DEFINED-ON-LINE '47) 
(PUT 'XSUBSTITUTESQ 'DEFINED-IN-FILE 'ALGINT/SUBSTNS.RED) 
(PUT 'XSUBSTITUTESQ 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE XSUBSTITUTESQ (SQ SLIST)
    (SUBSTITUTESQ (SUBSTITUTESQ SQ (BASICPLACE SLIST)) (EXTENPLACE SLIST))) 
(PUT 'SUBSTITUTEVEC 'NUMBER-OF-ARGS 2) 
(PUT 'SUBSTITUTEVEC 'DEFINED-ON-LINE '51) 
(PUT 'SUBSTITUTEVEC 'DEFINED-IN-FILE 'ALGINT/SUBSTNS.RED) 
(PUT 'SUBSTITUTEVEC 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE SUBSTITUTEVEC (V SLIST)
    (PROG (I)
      (SETQ I 0)
     LAB
      (COND ((MINUSP (DIFFERENCE (UPBV V) I)) (RETURN NIL)))
      (PUTV V I (SUBSTITUTESQ (GETV V I) SLIST))
      (SETQ I (PLUS2 I 1))
      (GO LAB))) 
(PUT 'SUBSTITUTESQ 'NUMBER-OF-ARGS 2) 
(PUT 'SUBSTITUTESQ 'DEFINED-ON-LINE '56) 
(PUT 'SUBSTITUTESQ 'DEFINED-IN-FILE 'ALGINT/SUBSTNS.RED) 
(PUT 'SUBSTITUTESQ 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE SUBSTITUTESQ (SQ SLIST)
    (PROG (LIST2 NM)
      (SETQ LIST2 NIL)
      (PROG ()
       WHILELABEL
        (COND ((NOT SLIST) (RETURN NIL)))
        (PROGN
         (COND
          ((IEQUAL (CDAR SLIST) 0)
           (PROGN
            (COND (LIST2 (SETQ SQ (SUBSTITUTESQ SQ (REVERSIP LIST2)))))
            (SETQ LIST2 NIL)
            (SETQ SQ (SUBZERO SQ (CAAR SLIST)))))
          ((NOT (EQUAL (CAAR SLIST) (CDAR SLIST)))
           (COND
            ((ASSOC (CAAR SLIST) LIST2)
             (SETQ LIST2
                     (PROG (U FORALL-RESULT FORALL-ENDPTR)
                       (SETQ U LIST2)
                       (COND ((NULL U) (RETURN NIL)))
                       (SETQ FORALL-RESULT
                               (SETQ FORALL-ENDPTR
                                       (CONS
                                        ((LAMBDA (U)
                                           (CONS (CAR U)
                                                 (SUBST (CDAR SLIST)
                                                        (CAAR SLIST) (CDR U))))
                                         (CAR U))
                                        NIL)))
                      LOOPLABEL
                       (SETQ U (CDR U))
                       (COND ((NULL U) (RETURN FORALL-RESULT)))
                       (RPLACD FORALL-ENDPTR
                               (CONS
                                ((LAMBDA (U)
                                   (CONS (CAR U)
                                         (SUBST (CDAR SLIST) (CAAR SLIST)
                                                (CDR U))))
                                 (CAR U))
                                NIL))
                       (SETQ FORALL-ENDPTR (CDR FORALL-ENDPTR))
                       (GO LOOPLABEL))))
            (T (SETQ LIST2 (CONS (CAR SLIST) LIST2))))))
         (SETQ SLIST (CDR SLIST)))
        (GO WHILELABEL))
      (SETQ LIST2 (REVERSIP LIST2))
      (COND ((NULL LIST2) (RETURN SQ)))
      (SETQ NM (ALGINT-SUBF (CAR SQ) LIST2))
      (COND
       ((CAR NM) (SETQ NM (*MULTSQ NM (INVSQ (ALGINT-SUBF (CDR SQ) LIST2))))))
      (RETURN NM))) 
(PUT 'SUBZERO 'NUMBER-OF-ARGS 2) 
(PUT 'SUBZERO 'DEFINED-ON-LINE '84) 
(PUT 'SUBZERO 'DEFINED-IN-FILE 'ALGINT/SUBSTNS.RED) 
(PUT 'SUBZERO 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE SUBZERO (EXPRN VAR)
    (PROG (TOP)
      (SETQ TOP (SUBZERO2 (CAR EXPRN) VAR))
      (COND ((NULL (CAR TOP)) (RETURN (CONS NIL 1))))
      (RETURN (*MULTSQ TOP (*INVSQ (SUBZERO2 (CDR EXPRN) VAR)))))) 
(PUT 'SUBZERO2 'NUMBER-OF-ARGS 2) 
(PUT 'SUBZERO2 'DEFINED-ON-LINE '94) 
(PUT 'SUBZERO2 'DEFINED-IN-FILE 'ALGINT/SUBSTNS.RED) 
(PUT 'SUBZERO2 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE SUBZERO2 (SF VAR)
    (COND ((NOT (INVOLVESF SF VAR)) (CONS SF 1))
          ((EQ VAR (CAAAR SF)) (SUBZERO2 (CDR SF) VAR))
          ((ORDOP VAR (CAAAR SF)) (CONS SF 1))
          (T
           (PROG (U V)
             (COND
              ((DEPENDSP (CAAAR SF) VAR)
               (PROGN
                (SETQ U (SIMP (SUBST 0 VAR (CAAAR SF))))
                (COND ((CAR U) (SETQ U (*EXPTSQ U (CDAAR SF)))))))
              (T (SETQ U (CONS (CONS (CONS (CAAR SF) 1) NIL) 1))))
             (COND ((NULL (CAR U)) (RETURN (SUBZERO2 (CDR SF) VAR))))
             (SETQ V (SUBZERO2 (CDAR SF) VAR))
             (COND ((NULL (CAR V)) (RETURN (SUBZERO2 (CDR SF) VAR))))
             (RETURN (*ADDSQ (SUBZERO2 (CDR SF) VAR) (*MULTSQ U V))))))) 
(PUT 'PVARSUB 'NUMBER-OF-ARGS 3) 
(PUT 'PVARSUB 'DEFINED-ON-LINE '120) 
(PUT 'PVARSUB 'DEFINED-IN-FILE 'ALGINT/SUBSTNS.RED) 
(PUT 'PVARSUB 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL GENERAL) GENERAL)) 
(DE PVARSUB (F U V)
    (COND ((ATOM F) F)
          ((EQUAL (CAAAR F) U)
           (ADDF
            ((LAMBDA (G576)
               (COND (*PHYSOP-LOADED (PHYSOP-MULTF (CDAR F) G576))
                     (T (POLY-MULTF (CDAR F) G576))))
             (LIST (CONS (GETPOWER (FKERN V) (CDAAR F)) 1)))
            (PVARSUB (CDR F) U V)))
          ((ORDOP U (CAAAR F)) F)
          (T
           (ADDF
            ((LAMBDA (G577 G578)
               (COND (*PHYSOP-LOADED (PHYSOP-MULTF G577 G578))
                     (T (POLY-MULTF G577 G578))))
             (PVARSUB (CDAR F) U V) (LIST (CONS (CAAR F) 1)))
            (PVARSUB (CDR F) U V))))) 
(ENDMODULE) 