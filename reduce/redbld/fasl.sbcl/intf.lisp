(cl:declaim (cl:optimize cl:debug cl:safety))
(cl:declaim (sb-ext:muffle-conditions sb-ext:compiler-note cl:style-warning))
(MODULE (LIST 'INTF)) 
(FLUID '(INTF=PROPERTIES)) 
(SETQ INTF=PROPERTIES
        '(BASIS RING GBASIS SYZYGIES RESOLUTION HS INDEPENDENTSETS)) 
(PUT 'INTF=CLEAN 'NUMBER-OF-ARGS 1) 
(PUT 'INTF=CLEAN 'DEFINED-ON-LINE '65) 
(PUT 'INTF=CLEAN 'DEFINED-IN-FILE 'CALI/INTF.RED) 
(PUT 'INTF=CLEAN 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE INTF=CLEAN (U)
    (PROG (X)
      (SETQ X INTF=PROPERTIES)
     LAB
      (COND ((NULL X) (RETURN NIL)))
      ((LAMBDA (X) (REMPROP U X)) (CAR X))
      (SETQ X (CDR X))
      (GO LAB))) 
(PUT 'INTF_TEST 'NUMBER-OF-ARGS 1) 
(PUT 'INTF_TEST 'DEFINED-ON-LINE '69) 
(PUT 'INTF_TEST 'DEFINED-IN-FILE 'CALI/INTF.RED) 
(PUT 'INTF_TEST 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE INTF_TEST (M)
    (COND
     ((OR (NEQ (LENGTH M) 1) (NOT (IDP (CAR M)))) (TYPERR M "identifier")))) 
(PUT 'INTF_GET 'NUMBER-OF-ARGS 1) 
(PUT 'INTF_GET 'DEFINED-ON-LINE '72) 
(PUT 'INTF_GET 'DEFINED-IN-FILE 'CALI/INTF.RED) 
(PUT 'INTF_GET 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE INTF_GET (M)
    (PROG (C)
      (COND ((NOT (SETQ C (GET M 'BASIS))) (TYPERR M "dpmat variable")))
      (COND
       ((NOT (EQUAL (GET M 'RING) CALI=BASERING))
        (REDERR "invalid base ring")))
      (SETQ CALI=DEGREES (DPMAT_COLDEGS C))
      (RETURN C))) 
(PUT 'INTF=SET 'NUMBER-OF-ARGS 2) 
(PUT 'INTF=SET 'DEFINED-ON-LINE '82) 
(PUT 'INTF=SET 'DEFINED-IN-FILE 'CALI/INTF.RED) 
(PUT 'INTF=SET 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE INTF=SET (M V)
    (PROGN
     (PUT M 'RING CALI=BASERING)
     (PUT M 'BASIS V)
     (COND
      ((EQUAL (DPMAT_COLS V) 0)
       (PROGN
        (PUT M 'RTYPE 'LIST)
        (PUT M 'AVALUE (CONS 'LIST (LIST (DPMAT_2A V))))))
      (T
       (PROGN
        (PUT M 'RTYPE 'MATRIX)
        (PUT M 'AVALUE (CONS 'MATRIX (LIST (DPMAT_2A V)))))))
     NIL)) 
(PUT 'SETIDEAL 'PSOPFN 'INTF=SETIDEAL) 
(PUT 'INTF=SETIDEAL 'NUMBER-OF-ARGS 1) 
(PUT 'INTF=SETIDEAL 'DEFINED-ON-LINE '95) 
(PUT 'INTF=SETIDEAL 'DEFINED-IN-FILE 'CALI/INTF.RED) 
(PUT 'INTF=SETIDEAL 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE INTF=SETIDEAL (U)
    (PROG (L)
      (COND
       ((NEQ (LENGTH U) 2) (REDERR "Syntax : setideal(identifier,ideal)")))
      (COND ((NOT (IDP (CAR U))) (TYPERR (CAR U) "ideal name")))
      (SETQ L (REVAL1 (CADR U) T))
      (COND ((NOT (EQCAR L 'LIST)) (TYPERR L "ideal basis")))
      (INTF=CLEAN (CAR U))
      (PUT (CAR U) 'RING CALI=BASERING)
      (PUT (CAR U) 'BASIS (SETQ L (DPMAT_FROM_A L)))
      (PUT (CAR U) 'AVALUE (CONS 'LIST (LIST (SETQ L (DPMAT_2A L)))))
      (PUT (CAR U) 'RTYPE 'LIST)
      (RETURN L))) 
(PUT 'SETMODULE 'PSOPFN 'INTF=SETMODULE) 
(PUT 'INTF=SETMODULE 'NUMBER-OF-ARGS 1) 
(PUT 'INTF=SETMODULE 'DEFINED-ON-LINE '113) 
(PUT 'INTF=SETMODULE 'DEFINED-IN-FILE 'CALI/INTF.RED) 
(PUT 'INTF=SETMODULE 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE INTF=SETMODULE (U)
    (PROG (L)
      (COND
       ((NEQ (LENGTH U) 2)
        (REDERR "Syntax : setmodule(identifier,module basis)")))
      (COND ((NOT (IDP (CAR U))) (TYPERR (CAR U) "module name")))
      (SETQ L (REVAL1 (CADR U) T))
      (COND ((NOT (EQCAR L 'MAT)) (TYPERR L "module basis")))
      (INTF=CLEAN (CAR U))
      (PUT (CAR U) 'RING CALI=BASERING)
      (PUT (CAR U) 'BASIS (DPMAT_FROM_A L))
      (PUT (CAR U) 'AVALUE (CONS 'MATRIX (LIST L)))
      (PUT (CAR U) 'RTYPE 'MATRIX)
      (RETURN L))) 
(PUT 'SETRING 'PSOPFN 'INTF=SETRING) 
(PUT 'INTF=SETRING 'NUMBER-OF-ARGS 1) 
(PUT 'INTF=SETRING 'DEFINED-ON-LINE '139) 
(PUT 'INTF=SETRING 'DEFINED-IN-FILE 'CALI/INTF.RED) 
(PUT 'INTF=SETRING 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE INTF=SETRING (U)
    (PROG ()
      (COND ((EQUAL (LENGTH U) 1) (SETQ U (CDR (REVAL1 (CAR U) T)))))
      (COND
       ((NOT (MEMBER (LENGTH U) '(3 4)))
        (REDERR "Syntax : setring(vars,term order,tag[,ecart])")))
      (SETRING* (RING_FROM_A (CONS 'LIST U)))
      (RETURN (RING_2A CALI=BASERING)))) 
(PUT 'GETRING 'PSOPFN 'INTF=GETRING) 
(PUT 'INTF=GETRING 'NUMBER-OF-ARGS 1) 
(PUT 'INTF=GETRING 'DEFINED-ON-LINE '154) 
(PUT 'INTF=GETRING 'DEFINED-IN-FILE 'CALI/INTF.RED) 
(PUT 'INTF=GETRING 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE INTF=GETRING (U)
    (COND ((NULL U) (RING_2A CALI=BASERING))
          (T
           (PROG (C)
             (SETQ C (GET (CAR U) 'RING))
             (COND ((NULL C) (TYPERR (CAR U) "dpmat variable")))
             (RETURN (RING_2A C)))))) 
(FLAG '(IDEAL2MAT) 'OPFN) 
(PUT 'IDEAL2MAT 'NUMBER-OF-ARGS 1) 
(PUT 'IDEAL2MAT 'DEFINED-ON-LINE '165) 
(PUT 'IDEAL2MAT 'DEFINED-IN-FILE 'CALI/INTF.RED) 
(PUT 'IDEAL2MAT 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE IDEAL2MAT (M)
    (COND ((EQUAL *MODE 'SYMBOLIC) (REDERR "only for algebraic mode"))
          ((NOT (EQCAR M 'LIST)) (TYPERR M 'LIST))
          (T
           (CONS 'MAT
                 (PROG (X FORALL-RESULT FORALL-ENDPTR)
                   (SETQ X (CDR M))
                   (COND ((NULL X) (RETURN NIL)))
                   (SETQ FORALL-RESULT
                           (SETQ FORALL-ENDPTR
                                   (CONS ((LAMBDA (X) (LIST X)) (CAR X)) NIL)))
                  LOOPLABEL
                   (SETQ X (CDR X))
                   (COND ((NULL X) (RETURN FORALL-RESULT)))
                   (RPLACD FORALL-ENDPTR
                           (CONS ((LAMBDA (X) (LIST X)) (CAR X)) NIL))
                   (SETQ FORALL-ENDPTR (CDR FORALL-ENDPTR))
                   (GO LOOPLABEL)))))) 
(FLAG '(MAT2LIST) 'OPFN) 
(PUT 'MAT2LIST 'NUMBER-OF-ARGS 1) 
(PUT 'MAT2LIST 'DEFINED-ON-LINE '172) 
(PUT 'MAT2LIST 'DEFINED-IN-FILE 'CALI/INTF.RED) 
(PUT 'MAT2LIST 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE MAT2LIST (M)
    (COND ((EQUAL *MODE 'SYMBOLIC) (REDERR "only for algebraic mode"))
          ((NOT (EQCAR M 'MAT)) (TYPERR M 'MATRIX))
          (T
           (CONS 'LIST
                 (PROG (X FORALL-RESULT FORALL-ENDPTR)
                   (SETQ X (CDR M))
                  STARTOVER
                   (COND ((NULL X) (RETURN NIL)))
                   (SETQ FORALL-RESULT
                           ((LAMBDA (X)
                              (PROG (Y FORALL-RESULT FORALL-ENDPTR)
                                (SETQ Y X)
                                (COND ((NULL Y) (RETURN NIL)))
                                (SETQ FORALL-RESULT
                                        (SETQ FORALL-ENDPTR
                                                (CONS ((LAMBDA (Y) Y) (CAR Y))
                                                      NIL)))
                               LOOPLABEL
                                (SETQ Y (CDR Y))
                                (COND ((NULL Y) (RETURN FORALL-RESULT)))
                                (RPLACD FORALL-ENDPTR
                                        (CONS ((LAMBDA (Y) Y) (CAR Y)) NIL))
                                (SETQ FORALL-ENDPTR (CDR FORALL-ENDPTR))
                                (GO LOOPLABEL)))
                            (CAR X)))
                   (SETQ FORALL-ENDPTR (LASTPAIR FORALL-RESULT))
                   (SETQ X (CDR X))
                   (COND ((ATOM FORALL-ENDPTR) (GO STARTOVER)))
                  LOOPLABEL
                   (COND ((NULL X) (RETURN FORALL-RESULT)))
                   (RPLACD FORALL-ENDPTR
                           ((LAMBDA (X)
                              (PROG (Y FORALL-RESULT FORALL-ENDPTR)
                                (SETQ Y X)
                                (COND ((NULL Y) (RETURN NIL)))
                                (SETQ FORALL-RESULT
                                        (SETQ FORALL-ENDPTR
                                                (CONS ((LAMBDA (Y) Y) (CAR Y))
                                                      NIL)))
                               LOOPLABEL
                                (SETQ Y (CDR Y))
                                (COND ((NULL Y) (RETURN FORALL-RESULT)))
                                (RPLACD FORALL-ENDPTR
                                        (CONS ((LAMBDA (Y) Y) (CAR Y)) NIL))
                                (SETQ FORALL-ENDPTR (CDR FORALL-ENDPTR))
                                (GO LOOPLABEL)))
                            (CAR X)))
                   (SETQ FORALL-ENDPTR (LASTPAIR FORALL-ENDPTR))
                   (SETQ X (CDR X))
                   (GO LOOPLABEL)))))) 
(PUT 'SETGBASIS 'PSOPFN 'INTF=SETGBASIS) 
(PUT 'INTF=SETGBASIS 'NUMBER-OF-ARGS 1) 
(PUT 'INTF=SETGBASIS 'DEFINED-ON-LINE '179) 
(PUT 'INTF=SETGBASIS 'DEFINED-IN-FILE 'CALI/INTF.RED) 
(PUT 'INTF=SETGBASIS 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE INTF=SETGBASIS (M)
    (PROG (C)
      (INTF_TEST M)
      (SETQ M (CAR M))
      (SETQ C (INTF_GET M))
      (PUT M 'GBASIS C)
      (RETURN (REVAL1 M T)))) 
(FLAG '(SETDEGREES) 'OPFN) 
(PUT 'SETDEGREES 'NUMBER-OF-ARGS 1) 
(PUT 'SETDEGREES 'DEFINED-ON-LINE '188) 
(PUT 'SETDEGREES 'DEFINED-IN-FILE 'CALI/INTF.RED) 
(PUT 'SETDEGREES 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE SETDEGREES (M)
    (COND ((EQUAL *MODE 'SYMBOLIC) (REDERR "only for algebraic mode"))
          (T
           (PROG (I B)
             (SETQ B (MOID_FROM_A (REVAL1 M T)))
             (SETQ I 0)
             (SETQ CALI=DEGREES
                     (PROG (X FORALL-RESULT FORALL-ENDPTR)
                       (SETQ X B)
                       (COND ((NULL X) (RETURN NIL)))
                       (SETQ FORALL-RESULT
                               (SETQ FORALL-ENDPTR
                                       (CONS
                                        ((LAMBDA (X)
                                           (PROGN
                                            (SETQ I (PLUS I 1))
                                            (CONS I X)))
                                         (CAR X))
                                        NIL)))
                      LOOPLABEL
                       (SETQ X (CDR X))
                       (COND ((NULL X) (RETURN FORALL-RESULT)))
                       (RPLACD FORALL-ENDPTR
                               (CONS
                                ((LAMBDA (X)
                                   (PROGN (SETQ I (PLUS I 1)) (CONS I X)))
                                 (CAR X))
                                NIL))
                       (SETQ FORALL-ENDPTR (CDR FORALL-ENDPTR))
                       (GO LOOPLABEL)))
             (RETURN
              (MOID_2A
               (PROG (X FORALL-RESULT FORALL-ENDPTR)
                 (SETQ X CALI=DEGREES)
                 (COND ((NULL X) (RETURN NIL)))
                 (SETQ FORALL-RESULT
                         (SETQ FORALL-ENDPTR
                                 (CONS ((LAMBDA (X) (CDR X)) (CAR X)) NIL)))
                LOOPLABEL
                 (SETQ X (CDR X))
                 (COND ((NULL X) (RETURN FORALL-RESULT)))
                 (RPLACD FORALL-ENDPTR
                         (CONS ((LAMBDA (X) (CDR X)) (CAR X)) NIL))
                 (SETQ FORALL-ENDPTR (CDR FORALL-ENDPTR))
                 (GO LOOPLABEL)))))))) 
(PUT 'GETDEGREES 'PSOPFN 'INTF=GETDEGREES) 
(PUT 'INTF=GETDEGREES 'NUMBER-OF-ARGS 1) 
(PUT 'INTF=GETDEGREES 'DEFINED-ON-LINE '199) 
(PUT 'INTF=GETDEGREES 'DEFINED-IN-FILE 'CALI/INTF.RED) 
(PUT 'INTF=GETDEGREES 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE INTF=GETDEGREES (M)
    (PROG ()
      (COND (M (PROGN (INTF_TEST M) (INTF_GET (CAR M)))))
      (RETURN
       (MOID_2A
        (PROG (X FORALL-RESULT FORALL-ENDPTR)
          (SETQ X CALI=DEGREES)
          (COND ((NULL X) (RETURN NIL)))
          (SETQ FORALL-RESULT
                  (SETQ FORALL-ENDPTR
                          (CONS ((LAMBDA (X) (CDR X)) (CAR X)) NIL)))
         LOOPLABEL
          (SETQ X (CDR X))
          (COND ((NULL X) (RETURN FORALL-RESULT)))
          (RPLACD FORALL-ENDPTR (CONS ((LAMBDA (X) (CDR X)) (CAR X)) NIL))
          (SETQ FORALL-ENDPTR (CDR FORALL-ENDPTR))
          (GO LOOPLABEL)))))) 
(FLAG '(GETECART) 'OPFN) 
(PUT 'GETECART 'NUMBER-OF-ARGS 0) 
(PUT 'GETECART 'DEFINED-ON-LINE '206) 
(PUT 'GETECART 'DEFINED-IN-FILE 'CALI/INTF.RED) 
(PUT 'GETECART 'PROCEDURE_TYPE '(ARROW UNIT GENERAL)) 
(DE GETECART NIL
    (COND ((EQUAL *MODE 'ALGEBRAIC) (CONS 'LIST (RING_ECART CALI=BASERING)))
          (T (RING_ECART CALI=BASERING)))) 
(PUT 'GBASIS 'PSOPFN 'INTF=GBASIS) 
(PUT 'INTF=GBASIS 'NUMBER-OF-ARGS 1) 
(PUT 'INTF=GBASIS 'DEFINED-ON-LINE '211) 
(PUT 'INTF=GBASIS 'DEFINED-IN-FILE 'CALI/INTF.RED) 
(PUT 'INTF=GBASIS 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE INTF=GBASIS (M)
    (PROG (C C1)
      (INTF_TEST M)
      (SETQ M (CAR M))
      (SETQ C1 (INTF_GET M))
      (COND ((SETQ C (GET M 'GBASIS)) (RETURN (DPMAT_2A C))))
      (SETQ C (GBASIS* C1))
      (PUT M 'GBASIS C)
      (RETURN (DPMAT_2A C)))) 
(FLAG '(SETMONSET) 'OPFN) 
(PUT 'SETMONSET 'NUMBER-OF-ARGS 1) 
(PUT 'SETMONSET 'DEFINED-ON-LINE '221) 
(PUT 'SETMONSET 'DEFINED-IN-FILE 'CALI/INTF.RED) 
(PUT 'SETMONSET 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE SETMONSET (M)
    (COND
     ((EQUAL *MODE 'ALGEBRAIC) (CONS 'LIST (SETMONSET* (CDR (REVAL1 M T)))))
     (T (SETMONSET* M)))) 
(PUT 'SETMONSET* 'NUMBER-OF-ARGS 1) 
(PUT 'SETMONSET* 'DEFINED-ON-LINE '225) 
(PUT 'SETMONSET* 'DEFINED-IN-FILE 'CALI/INTF.RED) 
(PUT 'SETMONSET* 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE SETMONSET* (M)
    (COND ((SUBSETP M (RING_NAMES CALI=BASERING)) (SETQ CALI=MONSET M))
          (T (TYPERR M "monset list")))) 
(FLAG '(GETMONSET) 'OPFN) 
(PUT 'GETMONSET 'NUMBER-OF-ARGS 0) 
(PUT 'GETMONSET 'DEFINED-ON-LINE '230) 
(PUT 'GETMONSET 'DEFINED-IN-FILE 'CALI/INTF.RED) 
(PUT 'GETMONSET 'PROCEDURE_TYPE '(ARROW UNIT GENERAL)) 
(DE GETMONSET NIL (CONS 'LIST CALI=MONSET)) 
(PUT 'RESOLVE 'PSOPFN 'INTF=RESOLVE) 
(PUT 'INTF=RESOLVE 'NUMBER-OF-ARGS 1) 
(PUT 'INTF=RESOLVE 'DEFINED-ON-LINE '233) 
(PUT 'INTF=RESOLVE 'DEFINED-IN-FILE 'CALI/INTF.RED) 
(PUT 'INTF=RESOLVE 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE INTF=RESOLVE (M)
    (PROG (C C1 D)
      (INTF_TEST M)
      (COND ((EQUAL (LENGTH M) 2) (SETQ D (REVAL1 (CADR M) T)))
            (T (SETQ D 10)))
      (SETQ M (CAR M))
      (SETQ C1 (INTF_GET M))
      (COND
       ((AND (SETQ C (GET M 'RESOLUTION)) (GEQ (CAR C) D))
        (RETURN
         (CONS 'LIST
               (PROG (X FORALL-RESULT FORALL-ENDPTR)
                 (SETQ X (CDR C))
                 (COND ((NULL X) (RETURN NIL)))
                 (SETQ FORALL-RESULT
                         (SETQ FORALL-ENDPTR
                                 (CONS ((LAMBDA (X) (DPMAT_2A X)) (CAR X))
                                       NIL)))
                LOOPLABEL
                 (SETQ X (CDR X))
                 (COND ((NULL X) (RETURN FORALL-RESULT)))
                 (RPLACD FORALL-ENDPTR
                         (CONS ((LAMBDA (X) (DPMAT_2A X)) (CAR X)) NIL))
                 (SETQ FORALL-ENDPTR (CDR FORALL-ENDPTR))
                 (GO LOOPLABEL))))))
      (SETQ C (RESOLVE* C1 D))
      (PUT M 'RESOLUTION (CONS D C))
      (COND ((NOT (GET M 'SYZYGIES)) (PUT M 'SYZYGIES (CADR C))))
      (RETURN
       (CONS 'LIST
             (PROG (X FORALL-RESULT FORALL-ENDPTR)
               (SETQ X C)
               (COND ((NULL X) (RETURN NIL)))
               (SETQ FORALL-RESULT
                       (SETQ FORALL-ENDPTR
                               (CONS ((LAMBDA (X) (DPMAT_2A X)) (CAR X)) NIL)))
              LOOPLABEL
               (SETQ X (CDR X))
               (COND ((NULL X) (RETURN FORALL-RESULT)))
               (RPLACD FORALL-ENDPTR
                       (CONS ((LAMBDA (X) (DPMAT_2A X)) (CAR X)) NIL))
               (SETQ FORALL-ENDPTR (CDR FORALL-ENDPTR))
               (GO LOOPLABEL)))))) 
(PUT 'SYZYGIES 'PSOPFN 'INTF=SYZYGIES) 
(PUT 'INTF=SYZYGIES 'NUMBER-OF-ARGS 1) 
(PUT 'INTF=SYZYGIES 'DEFINED-ON-LINE '246) 
(PUT 'INTF=SYZYGIES 'DEFINED-IN-FILE 'CALI/INTF.RED) 
(PUT 'INTF=SYZYGIES 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE INTF=SYZYGIES (M)
    (PROG (C C1)
      (INTF_TEST M)
      (SETQ M (CAR M))
      (SETQ C1 (INTF_GET M))
      (COND ((SETQ C (GET M 'SYZYGIES)) (RETURN (DPMAT_2A C))))
      (SETQ C (SYZYGIES* C1))
      (PUT M 'SYZYGIES C)
      (RETURN (DPMAT_2A C)))) 
(PUT 'INDEPVARSETS 'PSOPFN 'INTF=INDEPVARSETS) 
(PUT 'INTF=INDEPVARSETS 'NUMBER-OF-ARGS 1) 
(PUT 'INTF=INDEPVARSETS 'DEFINED-ON-LINE '256) 
(PUT 'INTF=INDEPVARSETS 'DEFINED-IN-FILE 'CALI/INTF.RED) 
(PUT 'INTF=INDEPVARSETS 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE INTF=INDEPVARSETS (M)
    (PROG (C)
      (INTF_TEST M)
      (SETQ M (CAR M))
      (INTF_GET M)
      (COND
       ((SETQ C (GET M 'INDEPENDENTSETS))
        (RETURN
         (CONS 'LIST
               (PROG (X FORALL-RESULT FORALL-ENDPTR)
                 (SETQ X C)
                 (COND ((NULL X) (RETURN NIL)))
                 (SETQ FORALL-RESULT
                         (SETQ FORALL-ENDPTR
                                 (CONS ((LAMBDA (X) (CONS 'LIST X)) (CAR X))
                                       NIL)))
                LOOPLABEL
                 (SETQ X (CDR X))
                 (COND ((NULL X) (RETURN FORALL-RESULT)))
                 (RPLACD FORALL-ENDPTR
                         (CONS ((LAMBDA (X) (CONS 'LIST X)) (CAR X)) NIL))
                 (SETQ FORALL-ENDPTR (CDR FORALL-ENDPTR))
                 (GO LOOPLABEL))))))
      (COND
       ((NOT (SETQ C (GET M 'GBASIS)))
        (PUT M 'GBASIS (SETQ C (GBASIS* (GET M 'BASIS))))))
      (SETQ C (INDEPVARSETS* C))
      (PUT M 'INDEPENDENTSETS C)
      (RETURN
       (CONS 'LIST
             (PROG (X FORALL-RESULT FORALL-ENDPTR)
               (SETQ X C)
               (COND ((NULL X) (RETURN NIL)))
               (SETQ FORALL-RESULT
                       (SETQ FORALL-ENDPTR
                               (CONS ((LAMBDA (X) (CONS 'LIST X)) (CAR X))
                                     NIL)))
              LOOPLABEL
               (SETQ X (CDR X))
               (COND ((NULL X) (RETURN FORALL-RESULT)))
               (RPLACD FORALL-ENDPTR
                       (CONS ((LAMBDA (X) (CONS 'LIST X)) (CAR X)) NIL))
               (SETQ FORALL-ENDPTR (CDR FORALL-ENDPTR))
               (GO LOOPLABEL)))))) 
(PUT 'GETLEADTERMS 'PSOPFN 'INTF_GETLEADTERMS) 
(PUT 'INTF_GETLEADTERMS 'NUMBER-OF-ARGS 1) 
(PUT 'INTF_GETLEADTERMS 'DEFINED-ON-LINE '269) 
(PUT 'INTF_GETLEADTERMS 'DEFINED-IN-FILE 'CALI/INTF.RED) 
(PUT 'INTF_GETLEADTERMS 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE INTF_GETLEADTERMS (M)
    (PROG (C)
      (INTF_TEST M)
      (SETQ M (CAR M))
      (INTF_GET M)
      (COND
       ((NOT (SETQ C (GET M 'GBASIS)))
        (PUT M 'GBASIS (SETQ C (GBASIS* (GET M 'BASIS))))))
      (SETQ C (GETLEADTERMS* C))
      (RETURN (DPMAT_2A C)))) 
(PUT 'HILBERTSERIES 'PSOPFN 'INTF=HILBERTSERIES) 
(PUT 'INTF=HILBERTSERIES 'NUMBER-OF-ARGS 1) 
(PUT 'INTF=HILBERTSERIES 'DEFINED-ON-LINE '279) 
(PUT 'INTF=HILBERTSERIES 'DEFINED-IN-FILE 'CALI/INTF.RED) 
(PUT 'INTF=HILBERTSERIES 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE INTF=HILBERTSERIES (M)
    (PROG (C)
      (INTF_TEST M)
      (SETQ M (CAR M))
      (INTF_GET M)
      (COND ((SETQ C (GET M 'HS)) (RETURN (MK*SQ C))))
      (COND
       ((NOT (SETQ C (GET M 'GBASIS)))
        (PUT M 'GBASIS (SETQ C (GBASIS* (GET M 'BASIS))))))
      (PUT M 'HS (SETQ C (HILBERTSERIES* C)))
      (RETURN (MK*SQ C)))) 
(PUT 'DEGREE 'PSOPFN 'INTF_GETMULT) 
(PUT 'INTF_GETMULT 'NUMBER-OF-ARGS 1) 
(PUT 'INTF_GETMULT 'DEFINED-ON-LINE '291) 
(PUT 'INTF_GETMULT 'DEFINED-IN-FILE 'CALI/INTF.RED) 
(PUT 'INTF_GETMULT 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE INTF_GETMULT (M)
    (PROG (C)
      (INTF_TEST M)
      (SETQ M (CAR M))
      (INTF_GET M)
      (COND ((SETQ C (GET M 'HS)) (RETURN (HF_MULT C))))
      (COND
       ((NOT (SETQ C (GET M 'GBASIS)))
        (PUT M 'GBASIS (SETQ C (GBASIS* (GET M 'BASIS))))))
      (PUT M 'HS (SETQ C (HILBERTSERIES* C)))
      (RETURN (HF_MULT C)))) 
(PUT 'DIM 'PSOPFN 'INTF=DIM) 
(PUT 'CODIM 'PSOPFN 'INTF=CODIM) 
(PUT 'INTF=DIM 'NUMBER-OF-ARGS 1) 
(PUT 'INTF=DIM 'DEFINED-ON-LINE '304) 
(PUT 'INTF=DIM 'DEFINED-IN-FILE 'CALI/INTF.RED) 
(PUT 'INTF=DIM 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE INTF=DIM (M)
    (PROG (C)
      (INTF_TEST M)
      (SETQ M (CAR M))
      (INTF_GET M)
      (COND ((SETQ C (GET M 'HS)) (RETURN (HF_DIM C))))
      (COND ((SETQ C (GET M 'INDEPENDENTSETS)) (RETURN (LENGTH (MOID_MAX C)))))
      (COND
       ((NOT (SETQ C (GET M 'GBASIS)))
        (PUT M 'GBASIS (SETQ C (GBASIS* (GET M 'BASIS))))))
      (SETQ C (INDEPVARSETS* C))
      (PUT M 'INDEPENDENTSETS C)
      (RETURN (LENGTH (MOID_MAX C))))) 
(PUT 'INTF=CODIM 'NUMBER-OF-ARGS 1) 
(PUT 'INTF=CODIM 'DEFINED-ON-LINE '316) 
(PUT 'INTF=CODIM 'DEFINED-IN-FILE 'CALI/INTF.RED) 
(PUT 'INTF=CODIM 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE INTF=CODIM (M)
    (DIFFERENCE (LENGTH (RING_NAMES CALI=BASERING)) (INTF=DIM M))) 
(PUT 'BETTINUMBERS 'PSOPFN 'INTF=BETTINUMBERS) 
(PUT 'INTF=BETTINUMBERS 'NUMBER-OF-ARGS 1) 
(PUT 'INTF=BETTINUMBERS 'DEFINED-ON-LINE '321) 
(PUT 'INTF=BETTINUMBERS 'DEFINED-IN-FILE 'CALI/INTF.RED) 
(PUT 'INTF=BETTINUMBERS 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE INTF=BETTINUMBERS (M)
    (PROG (C)
      (INTF_TEST M)
      (SETQ M (CAR M))
      (INTF_GET M)
      (COND
       ((SETQ C (GET M 'RESOLUTION))
        (RETURN (CONS 'LIST (BETTINUMBERS* (CDR C)))))
       (T (REDERR "Compute a resolution first"))))) 
(PUT 'GRADEDBETTINUMBERS 'PSOPFN 'INTF=GRADEDBETTINUMBERS) 
(PUT 'INTF=GRADEDBETTINUMBERS 'NUMBER-OF-ARGS 1) 
(PUT 'INTF=GRADEDBETTINUMBERS 'DEFINED-ON-LINE '329) 
(PUT 'INTF=GRADEDBETTINUMBERS 'DEFINED-IN-FILE 'CALI/INTF.RED) 
(PUT 'INTF=GRADEDBETTINUMBERS 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE INTF=GRADEDBETTINUMBERS (M)
    (PROG (C)
      (INTF_TEST M)
      (SETQ M (CAR M))
      (INTF_GET M)
      (COND
       ((SETQ C (GET M 'RESOLUTION))
        (RETURN
         (CONS 'LIST
               (PROG (X FORALL-RESULT FORALL-ENDPTR)
                 (SETQ X (GRADEDBETTINUMBERS* (CDR C)))
                 (COND ((NULL X) (RETURN NIL)))
                 (SETQ FORALL-RESULT
                         (SETQ FORALL-ENDPTR
                                 (CONS ((LAMBDA (X) (CONS 'LIST X)) (CAR X))
                                       NIL)))
                LOOPLABEL
                 (SETQ X (CDR X))
                 (COND ((NULL X) (RETURN FORALL-RESULT)))
                 (RPLACD FORALL-ENDPTR
                         (CONS ((LAMBDA (X) (CONS 'LIST X)) (CAR X)) NIL))
                 (SETQ FORALL-ENDPTR (CDR FORALL-ENDPTR))
                 (GO LOOPLABEL)))))
       (T (REDERR "Compute a resolution first"))))) 
(PUT 'DEGSFROMRESOLUTION 'PSOPFN 'INTF=DEGSFROMRESOLUTION) 
(PUT 'INTF=DEGSFROMRESOLUTION 'NUMBER-OF-ARGS 1) 
(PUT 'INTF=DEGSFROMRESOLUTION 'DEFINED-ON-LINE '338) 
(PUT 'INTF=DEGSFROMRESOLUTION 'DEFINED-IN-FILE 'CALI/INTF.RED) 
(PUT 'INTF=DEGSFROMRESOLUTION 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE INTF=DEGSFROMRESOLUTION (M)
    (PROG (C)
      (INTF_TEST M)
      (SETQ M (CAR M))
      (COND
       ((NOT (EQUAL (GET M 'RING) CALI=BASERING))
        (REDERR "invalid base ring")))
      (COND
       ((NOT (SETQ C (GET M 'RESOLUTION)))
        (REDERR "compute a resolution first")))
      (RETURN
       (CONS 'LIST
             (PROG (X FORALL-RESULT FORALL-ENDPTR)
               (SETQ X (CDR C))
               (COND ((NULL X) (RETURN NIL)))
               (SETQ FORALL-RESULT
                       (SETQ FORALL-ENDPTR
                               (CONS
                                ((LAMBDA (X)
                                   (MOID_2A
                                    (PROG (Y FORALL-RESULT FORALL-ENDPTR)
                                      (SETQ Y (DPMAT_COLDEGS X))
                                      (COND ((NULL Y) (RETURN NIL)))
                                      (SETQ FORALL-RESULT
                                              (SETQ FORALL-ENDPTR
                                                      (CONS
                                                       ((LAMBDA (Y) (CDR Y))
                                                        (CAR Y))
                                                       NIL)))
                                     LOOPLABEL
                                      (SETQ Y (CDR Y))
                                      (COND ((NULL Y) (RETURN FORALL-RESULT)))
                                      (RPLACD FORALL-ENDPTR
                                              (CONS
                                               ((LAMBDA (Y) (CDR Y)) (CAR Y))
                                               NIL))
                                      (SETQ FORALL-ENDPTR (CDR FORALL-ENDPTR))
                                      (GO LOOPLABEL))))
                                 (CAR X))
                                NIL)))
              LOOPLABEL
               (SETQ X (CDR X))
               (COND ((NULL X) (RETURN FORALL-RESULT)))
               (RPLACD FORALL-ENDPTR
                       (CONS
                        ((LAMBDA (X)
                           (MOID_2A
                            (PROG (Y FORALL-RESULT FORALL-ENDPTR)
                              (SETQ Y (DPMAT_COLDEGS X))
                              (COND ((NULL Y) (RETURN NIL)))
                              (SETQ FORALL-RESULT
                                      (SETQ FORALL-ENDPTR
                                              (CONS
                                               ((LAMBDA (Y) (CDR Y)) (CAR Y))
                                               NIL)))
                             LOOPLABEL
                              (SETQ Y (CDR Y))
                              (COND ((NULL Y) (RETURN FORALL-RESULT)))
                              (RPLACD FORALL-ENDPTR
                                      (CONS ((LAMBDA (Y) (CDR Y)) (CAR Y))
                                            NIL))
                              (SETQ FORALL-ENDPTR (CDR FORALL-ENDPTR))
                              (GO LOOPLABEL))))
                         (CAR X))
                        NIL))
               (SETQ FORALL-ENDPTR (CDR FORALL-ENDPTR))
               (GO LOOPLABEL)))))) 
(FLAG '(SIEVE) 'OPFN) 
(PUT 'SIEVE 'NUMBER-OF-ARGS 2) 
(PUT 'SIEVE 'DEFINED-ON-LINE '350) 
(PUT 'SIEVE 'DEFINED-IN-FILE 'CALI/INTF.RED) 
(PUT 'SIEVE 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE SIEVE (M VARS)
    (COND
     ((EQUAL *MODE 'ALGEBRAIC)
      (DPMAT_2A (DPMAT_SIEVE (DPMAT_FROM_A (REVAL1 M T)) (CDR VARS) NIL)))
     (T (DPMAT_SIEVE M VARS NIL)))) 
(ENDMODULE) 