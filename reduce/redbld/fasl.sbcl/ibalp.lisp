(cl:declaim (cl:optimize cl:debug cl:safety))
(cl:declaim (sb-ext:muffle-conditions sb-ext:compiler-note cl:style-warning))
(MODULE (LIST 'IBALP)) 
(REVISION 'IBALP "$Id: ibalp.red 6030 2021-09-16 14:01:45Z thomas-sturm $") 
(COPYRIGHT 'IBALP
           "(c) 2003-2009 A. Dolzmann, A. Seidl, T. Sturm, 2011-2017 T.Sturm") 
(CREATE-PACKAGE '(IBALP IBALPKAPUR IBALPQSAT) NIL) 
(LOAD-PACKAGE 'REDLOG) 
(LOADTIME (LOAD-PACKAGE 'CL)) 
(FLUID '(RL_CID* *RLVERBOSE *RLBNFSAC *RLPCPRINT *RLSISO *MSG)) 
(FLAG '(IBALP) 'RL_PACKAGE) 
(SWITCH (LIST 'RLPCPRINT)) 
(SWITCH (LIST 'RLPCPRINTALL)) 
(ON1 'RLPCPRINTALL) 
(PUT 'IBALP 'RL_PARAMS
     '((RL_TORDP* . IBALP_ORDP) (RL_A2CDL* . IBALP_A2CDL)
       (RL_SUBSUMPTION* . IBALP_SUBSUMPTION) (RL_BNFSIMPL* . CL_BNFSIMPL)
       (RL_SACATLP* . CL_SACATLP) (RL_SACAT* . IBALP_SACAT)
       (RL_SUBAT* . IBALP_SUBAT) (RL_SUBALCHK* . IBALP_SUBALCHK)
       (RL_EQNRHSKERNELS* . IBALP_EQNRHSKERNELS)
       (RL_SMUPDKNOWL* . CL_SMUPDKNOWL) (RL_SMRMKNOWL* . CL_SMRMKNOWL)
       (RL_SMCPKNOWL* . CL_SMCPKNOWL) (RL_SMMKATL* . CL_SMMKATL)
       (RL_ELIMSET* . IBALP_ELIMSET) (RL_TRANSLAT* . IBALP_TRANSLAT)
       (RL_VARSEL* . IBALP_VARSEL) (RL_BETTERP* . CL_BETTERP)
       (RL_TRANSFORM* . IBALP_TRANSFORM) (RL_TRYGAUSS* . IBALP_TRYGAUSS)
       (RL_SPECELIM* . IBALP_SPECELIM) (RL_SIMPLAT1* . IBALP_SIMPLAT1)
       (RL_ORDATP* . IBALP_ORDATP) (RL_TERMMLAT* . IBALP_TERMMLAT)
       (RL_OP* . IBALP_OP) (RL_VARSUBSTAT* . IBALP_SUBSTAT)
       (RL_NEGATEAT* . IBALP_NEGATEAT) (RL_QEMKANS* . IBALP_QEMKANS)
       (RL_VARLAT* . IBALP_VARLAT) (RL_QSTRYCONS* . CL_QSTRYCONS)
       (RL_QSCSAAT* . IBALP_QSCSAAT) (RL_QSSUBAT* . IBALP_QSSUBAT)
       (RL_QSCONSENS* . CL_QS1CONSENS) (RL_QSIMPLTESTCCL* . CL_QSIMPLTESTCCL)
       (RL_QSSUBSUMEP* . CL_QSSUSUBYMEM) (RL_QSTAUTP* . CL_QSTAUTP)
       (RL_QSSIMPL* . CL_QSSIBYSIMPL))) 
(PUT 'IBALP 'RL_SERVICES
     '((RL_TAB* . CL_TAB) (RL_ATAB* . IBALP_ATAB) (RL_ITAB* . IBALP_ITAB)
       (RL_CNF* . IBALP_CNF) (RL_DNF* . IBALP_DNF) (RL_SUBFOF* . CL_SUBFOF)
       (RL_IDENTIFYONOFF* . CL_IDENTIFYONOFF) (RL_EX* . CL_EX)
       (RL_ALL* . CL_ALL) (RL_SIMPL* . CL_SIMPL)
       (RL_SIMPLBASIC* . CL_SIMPLBASIC) (RL_ATNUM* . CL_ATNUM)
       (RL_QNUM* . CL_QNUM) (RL_MATRIX* . CL_MATRIX) (RL_ATL* . CL_ATL)
       (RL_ATML* . CL_ATML) (RL_PNF* . CL_PNF) (RL_NNF* . CL_NNF)
       (RL_NNFNOT* . CL_NNFNOT) (RL_TERMML* . CL_TERMML) (RL_TERML* . CL_TERML)
       (RL_VARL* . CL_VARL) (RL_FVARL* . CL_FVARL) (RL_BVARL* . CL_BVARL)
       (RL_QUINE* . CL_QUINE) (RL_QE* . CL_QE) (RL_QEA* . CL_QEA)
       (RL_QSAT* . IBALP_QSAT) (RL_QSATOPTIONS* . IBALP_QSAT-SETOPTIONL)
       (RL_QSATDIMACS* . IBALP_QSAT-DIMACS)
       (RL_READDIMACS* . IBALP_QSAT-READDIMACS) (RL_KAPUR* . IBALP_KAPUR))) 
(PUT 'IBALP 'RL_CSWITCHES '((LOWER) (RAISE))) 
(PUT 'IBALP 'SIMPFNNAME 'IBALP_SIMPFN) 
(PUT 'IBALP 'SIMPDEFAULT 'IBALP_SIMPREL) 
(PUT 'IBALP 'RL_PREPAT 'IBALP_PREPAT) 
(PUT 'IBALP 'RL_RESIMPAT 'IBALP_RESIMPAT) 
(PUT 'IBALP 'RL_LENGTHAT 'IBALP_LENGTHAT) 
(PUT 'IBALP 'RL_PREPTERM 'IBALP_PREPTERM) 
(PUT 'IBALP 'RL_SIMPTERM 'IBALP_SIMPTERM) 
(MKOP 'EQUAL) 
(INFIX (LIST 'EQUAL)) 
(PUT 'EQUAL 'PRIFN 'IBALP_PRIEQUAL) 
(PUT 'EQUAL 'FANCY-PRIFN 'IBALP_FANCY-PRIEQUAL) 
(PUT 'EQUAL 'IBALP_SIMPFN 'IBALP_SIMPAT) 
(PUT 'EQUAL 'FANCY-PRIFN 'IBALP_FANCY-PRIEQUAL) 
(PUT 'EQUAL 'NUMBER-OF-ARGS 2) 
(PUT 'IBALP_PRIEQUAL 'NUMBER-OF-ARGS 1) 
(PUT 'IBALP_PRIEQUAL 'DEFINED-ON-LINE '146) 
(PUT 'IBALP_PRIEQUAL 'DEFINED-IN-FILE 'REDLOG/IBALP/IBALP.RED) 
(PUT 'IBALP_PRIEQUAL 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE IBALP_PRIEQUAL (F)
    (PROG (W RHS)
      (COND
       ((OR (NOT (EQCAR RL_CID* 'IBALP)) (NOT *NAT) (NOT *RLPCPRINT))
        (RETURN 'FAILED)))
      (SETQ F (REVAL1 F T))
      (SETQ RHS (CADDR F))
      (COND ((AND (NOT (EQN RHS 1)) (NOT (EQN RHS 0))) (RETURN 'FAILED)))
      (SETQ W (CADR F))
      (COND ((NOT (IDP W)) (RETURN 'FAILED)))
      (SETQ W (IBALP_UPCASE W))
      (COND
       ((AND (NOT (IBALP_PCVARP W)) (NOT *RLPCPRINTALL)) (RETURN 'FAILED)))
      (COND
       ((EQN RHS 0)
        (COND (*UTF8 (PROGN (MAPRIN 'NOT) (MAPRIN W)))
              (T (MAPRIN (LIST 'NOT W)))))
       (T (MAPRIN W))))) 
(PUT 'IBALP_FANCY-PRIEQUAL 'NUMBER-OF-ARGS 1) 
(PUT 'IBALP_FANCY-PRIEQUAL 'DEFINED-ON-LINE '175) 
(PUT 'IBALP_FANCY-PRIEQUAL 'DEFINED-IN-FILE 'REDLOG/IBALP/IBALP.RED) 
(PUT 'IBALP_FANCY-PRIEQUAL 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE IBALP_FANCY-PRIEQUAL (C)
    (PROG (W)
      (COND ((NOT *NAT) (RETURN 'FAILED)))
      (SETQ W (IBALP_FANCY-PRIEQUAL-PC C))
      (COND
       ((EQ W 'FAILED)
        (PROGN (MAPRIN (CADR C)) (FANCY-PRIN2 "=") (MAPRIN (CADDR C))))))) 
(PUT 'IBALP_FANCY-PRIEQUAL-PC 'NUMBER-OF-ARGS 1) 
(PUT 'IBALP_FANCY-PRIEQUAL-PC 'DEFINED-ON-LINE '187) 
(PUT 'IBALP_FANCY-PRIEQUAL-PC 'DEFINED-IN-FILE 'REDLOG/IBALP/IBALP.RED) 
(PUT 'IBALP_FANCY-PRIEQUAL-PC 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE IBALP_FANCY-PRIEQUAL-PC (C)
    (PROG (W RHS)
      (COND ((NOT *RLPCPRINT) (RETURN 'FAILED)))
      (COND ((NOT (MEMBER (CADDR C) '(0 1))) (RETURN 'FAILED)))
      (SETQ W (CADR C))
      (COND ((NOT (IDP W)) (RETURN 'FAILED)))
      (SETQ W (IBALP_UPCASE W))
      (COND ((NOT (IBALP_PCVARP W)) (RETURN 'FAILED)))
      (COND
       ((RL_TEXMACSP)
        (PROGN
         (COND ((EQ (CADDR C) 0) (FANCY-PRIN2 "\\overline{")))
         (FANCY-PRIN2 W)
         (COND ((EQ (CADDR C) 0) (FANCY-PRIN2 "}")))))
       (T
        (PROGN
         (COND ((EQ (CADDR C) 0) (FANCY-SPECIAL-SYMBOL 96 1)))
         (FANCY-PRIN2 W)))))) 
(MKOP 'NEQ) 
(INFIX (LIST 'NEQ)) 
(PUT 'NEQ 'IBALP_SIMPFN 'IBALP_SIMPAT) 
(PUT 'NEQ 'NUMBER-OF-ARGS 2) 
(PUT 'NEQ 'RTYPEFN 'QUOTELOG) 
((LAMBDA (*MSG) (NEWTOK '((< >) NEQ))) NIL) 
(AEVAL (OPERATOR (LIST 'BNOT))) 
(PUT 'BNOT 'NUMBER-OF-ARGS 1) 
(PUT 'BNOT 'PRIFN 'IBALP_PRIBNOT) 
(PUT 'BNOT 'FANCY-PRIFN 'IBALP_FANCY-PRIBNOT) 
((LAMBDA (*MSG) (NEWTOK '((~) BNOT))) NIL) 
(PUT 'IBALP_PRIBNOT 'NUMBER-OF-ARGS 1) 
(PUT 'IBALP_PRIBNOT 'DEFINED-ON-LINE '221) 
(PUT 'IBALP_PRIBNOT 'DEFINED-IN-FILE 'REDLOG/IBALP/IBALP.RED) 
(PUT 'IBALP_PRIBNOT 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE IBALP_PRIBNOT (U)
    (PROGN
     (PRIN2* " ")
     (PRIN2* (GET (CAR U) 'PRTCH))
     (PRIN2* " ")
     (COND
      ((AND (PAIRP (CADR U)) (GET (CAADR U) 'INFIX))
       (PROGN (PRIN2* "(") (MAPRIN (CADR U)) (PRIN2* ")")))
      (T (MAPRIN (CADR U)))))) 
(PUT 'IBALP_FANCY-PRIBNOT 'NUMBER-OF-ARGS 1) 
(PUT 'IBALP_FANCY-PRIBNOT 'DEFINED-ON-LINE '234) 
(PUT 'IBALP_FANCY-PRIBNOT 'DEFINED-IN-FILE 'REDLOG/IBALP/IBALP.RED) 
(PUT 'IBALP_FANCY-PRIBNOT 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE IBALP_FANCY-PRIBNOT (U)
    (COND ((RL_TEXMACSP) (IBALP_FANCY-PRIBNOT-TM U))
          (T (IBALP_FANCY-PRIBNOT-FM U)))) 
(PUT 'IBALP_FANCY-PRIBNOT-TM 'NUMBER-OF-ARGS 1) 
(PUT 'IBALP_FANCY-PRIBNOT-TM 'DEFINED-ON-LINE '240) 
(PUT 'IBALP_FANCY-PRIBNOT-TM 'DEFINED-IN-FILE 'REDLOG/IBALP/IBALP.RED) 
(PUT 'IBALP_FANCY-PRIBNOT-TM 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE IBALP_FANCY-PRIBNOT-TM (U)
    (PROGN
     (FANCY-PRIN2 "(")
     (FANCY-PRIN2 "\\~{}")
     (MAPRIN (CADR U))
     (FANCY-PRIN2 ")")
     NIL)) 
(PUT 'IBALP_FANCY-PRIBNOT-FM 'NUMBER-OF-ARGS 1) 
(PUT 'IBALP_FANCY-PRIBNOT-FM 'DEFINED-ON-LINE '248) 
(PUT 'IBALP_FANCY-PRIBNOT-FM 'DEFINED-IN-FILE 'REDLOG/IBALP/IBALP.RED) 
(PUT 'IBALP_FANCY-PRIBNOT-FM 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE IBALP_FANCY-PRIBNOT-FM (U)
    (PROGN
     (FANCY-PRIN2 "~")
     (COND
      ((AND (PAIRP (CADR U)) (GET (CAADR U) 'INFIX))
       (PROGN (FANCY-PRIN2 "(") (MAPRIN (CADR U)) (FANCY-PRIN2 ")")))
      (T (MAPRIN (CADR U)))))) 
(MKOP 'BEQUIV) 
(INFIX (LIST 'BEQUIV)) 
(PUT 'BEQUIV 'NUMBER-OF-ARGS 2) 
(PUT 'BEQUIV 'FANCY-PRIFN 'IBALP_FANCY-PRIBEQUIV) 
((LAMBDA (*MSG) (NEWTOK '((< - >) BEQUIV))) NIL) 
(PUT 'BEQUIV 'FANCY-INFIX-SYMBOL "\\leftrightarrow ") 
(PRECEDENCE (LIST 'BEQUIV 'NEQ)) 
(PUT 'IBALP_FANCY-PRIBEQUIV 'NUMBER-OF-ARGS 1) 
(PUT 'IBALP_FANCY-PRIBEQUIV 'DEFINED-ON-LINE '266) 
(PUT 'IBALP_FANCY-PRIBEQUIV 'DEFINED-IN-FILE 'REDLOG/IBALP/IBALP.RED) 
(PUT 'IBALP_FANCY-PRIBEQUIV 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE IBALP_FANCY-PRIBEQUIV (U)
    (PROGN
     (FANCY-PRIN2 "(")
     (MAPRIN (CADR U))
     (FANCY-PRIN2 "\\leftrightarrow{}")
     (MAPRIN (CADDR U))
     (FANCY-PRIN2 ")")
     NIL)) 
(MKOP 'BIMPL) 
(INFIX (LIST 'BIMPL)) 
(PUT 'BIMPL 'NUMBER-OF-ARGS 2) 
(PUT 'BIMPL 'FANCY-PRIFN 'IBALP_FANCY-PRIBIMPL) 
((LAMBDA (*MSG) (NEWTOK '((- >) BIMPL))) NIL) 
(PUT 'BIMPL 'FANCY-INFIX-SYMBOL "\\rightarrow ") 
(PRECEDENCE (LIST 'BIMPL 'BEQUIV)) 
(PUT 'IBALP_FANCY-PRIBIMPL 'NUMBER-OF-ARGS 1) 
(PUT 'IBALP_FANCY-PRIBIMPL 'DEFINED-ON-LINE '282) 
(PUT 'IBALP_FANCY-PRIBIMPL 'DEFINED-IN-FILE 'REDLOG/IBALP/IBALP.RED) 
(PUT 'IBALP_FANCY-PRIBIMPL 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE IBALP_FANCY-PRIBIMPL (U)
    (PROGN
     (FANCY-PRIN2 "(")
     (MAPRIN (CADR U))
     (FANCY-PRIN2 "\\rightarrow{}")
     (MAPRIN (CADDR U))
     (FANCY-PRIN2 ")")
     NIL)) 
(MKOP 'BREPL) 
(INFIX (LIST 'BREPL)) 
(PUT 'BREPL 'NUMBER-OF-ARGS 2) 
(PUT 'BREPL 'FANCY-PRIFN 'IBALP_FANCY-PRIBREPL) 
((LAMBDA (*MSG) (NEWTOK '((< -) BREPL))) NIL) 
(PUT 'BREPL 'FANCY-INFIX-SYMBOL "\\leftarrow") 
(PRECEDENCE (LIST 'BREPL 'BIMPL)) 
(PUT 'IBALP_FANCY-PRIBREPL 'NUMBER-OF-ARGS 1) 
(PUT 'IBALP_FANCY-PRIBREPL 'DEFINED-ON-LINE '298) 
(PUT 'IBALP_FANCY-PRIBREPL 'DEFINED-IN-FILE 'REDLOG/IBALP/IBALP.RED) 
(PUT 'IBALP_FANCY-PRIBREPL 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE IBALP_FANCY-PRIBREPL (U)
    (PROGN
     (FANCY-PRIN2 "(")
     (MAPRIN (CADR U))
     (FANCY-PRIN2 "\\leftarrow{}")
     (MAPRIN (CADDR U))
     (FANCY-PRIN2 ")")
     NIL)) 
(MKOP 'BOR) 
(INFIX (LIST 'BOR)) 
(FLAG '(BOR) 'NARY) 
(PUT 'BOR 'FANCY-PRIFN 'IBALP_FANCY-PRIBOR) 
((LAMBDA (*MSG) (NEWTOK '((|\||) BOR))) NIL) 
(PUT 'BOR 'FANCY-INFIX-SYMBOL "\\|") 
(PRECEDENCE (LIST 'BOR 'BIMPL)) 
(PUT 'IBALP_FANCY-PRIBOR 'NUMBER-OF-ARGS 1) 
(PUT 'IBALP_FANCY-PRIBOR 'DEFINED-ON-LINE '314) 
(PUT 'IBALP_FANCY-PRIBOR 'DEFINED-IN-FILE 'REDLOG/IBALP/IBALP.RED) 
(PUT 'IBALP_FANCY-PRIBOR 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE IBALP_FANCY-PRIBOR (U)
    (PROG (W)
      (FANCY-PRIN2 "(")
      (SETQ W (CDR U))
      (MAPRIN (CAR W))
      (SETQ W (CDR W))
      (PROG ()
       WHILELABEL
        (COND ((NOT W) (RETURN NIL)))
        (PROGN (FANCY-PRIN2 "|") (MAPRIN (CAR W)) (SETQ W (CDR W)) NIL)
        (GO WHILELABEL))
      (FANCY-PRIN2 ")"))) 
(MKOP 'BAND) 
(INFIX (LIST 'BAND)) 
(FLAG '(BAND) 'NARY) 
((LAMBDA (*MSG) (NEWTOK '((&) BAND))) NIL) 
(COND ((RL_TEXMACSP) (PUT 'BAND 'FANCY-INFIX-SYMBOL "\\&"))
      (T (PUT 'BAND 'FANCY-INFIX-SYMBOL 38))) 
(PRECEDENCE (LIST 'BAND 'BOR)) 
(FLAG '(BAND BOR BIMPL BREPL BEQUIV EQUAL NEQ) 'SPACED) 
(FLAG '(IBALP_SIMPAT) 'FULL) 
(FLAG '(IBALP_PCSTAT) 'ENDSTATFN) 
(PUT 'IBALP_PCSTAT 'NUMBER-OF-ARGS 0) 
(PUT 'IBALP_PCSTAT 'DEFINED-ON-LINE '343) 
(PUT 'IBALP_PCSTAT 'DEFINED-IN-FILE 'REDLOG/IBALP/IBALP.RED) 
(PUT 'IBALP_PCSTAT 'PROCEDURE_TYPE '(ARROW UNIT GENERAL)) 
(DE IBALP_PCSTAT NIL (PROG (X) (SETQ X CURSYM*) (SCAN) (RETURN (LIST X)))) 
(PUT 'IBALP_PCFORM 'NUMBER-OF-ARGS 3) 
(PUT 'IBALP_PCFORM 'DEFINED-ON-LINE '350) 
(PUT 'IBALP_PCFORM 'DEFINED-IN-FILE 'REDLOG/IBALP/IBALP.RED) 
(PUT 'IBALP_PCFORM 'PROCEDURE_TYPE
     '(ARROW (TIMES GENERAL GENERAL GENERAL) GENERAL)) 
(DE IBALP_PCFORM (FORM AN-EMPTY-AL MODE)
    (COND ((EQ MODE 'SYMBOLIC) (MKQUOTE (INTERN (CAR FORM))))
          (T (MKQUOTE (LIST 'EQUAL (IBALP_DOWNCASE (CAR FORM)) 1))))) 
(PUT 'RLPCVAR 'STAT 'RLIS) 
(PUT 'RLPCVAR 'FORMFN 'IBALP_PCVARFORM) 
(PUT 'IBALP_PCVARFORM 'NUMBER-OF-ARGS 3) 
(PUT 'IBALP_PCVARFORM 'DEFINED-ON-LINE '359) 
(PUT 'IBALP_PCVARFORM 'DEFINED-IN-FILE 'REDLOG/IBALP/IBALP.RED) 
(PUT 'IBALP_PCVARFORM 'PROCEDURE_TYPE
     '(ARROW (TIMES GENERAL GENERAL GENERAL) GENERAL)) 
(DE IBALP_PCVARFORM (VL AN-EMPTY-AL MODE)
    (PROGN
     (IBALP_PCVAR
      (PROG (V FORALL-RESULT FORALL-ENDPTR)
        (SETQ V (CDR VL))
       STARTOVER
        (COND ((NULL V) (RETURN NIL)))
        (SETQ FORALL-RESULT
                ((LAMBDA (V)
                   (PROGN
                    (COND
                     ((AND (PAIRP V) (IBALP_PCVARP (CAR V)))
                      (PROGN
                       (LPRIM
                        (LIST "ignoring" (CAR V) "- already declared pcvar"))
                       NIL))
                     ((NOT (IBALP_UPPERCASEP V))
                      (PROGN
                       (LPRIM
                        (LIST "ignoring" V "- not an uppercase identifier"))
                       NIL))
                     (T (LIST V)))))
                 (CAR V)))
        (SETQ FORALL-ENDPTR (LASTPAIR FORALL-RESULT))
        (SETQ V (CDR V))
        (COND ((ATOM FORALL-ENDPTR) (GO STARTOVER)))
       LOOPLABEL
        (COND ((NULL V) (RETURN FORALL-RESULT)))
        (RPLACD FORALL-ENDPTR
                ((LAMBDA (V)
                   (PROGN
                    (COND
                     ((AND (PAIRP V) (IBALP_PCVARP (CAR V)))
                      (PROGN
                       (LPRIM
                        (LIST "ignoring" (CAR V) "- already declared pcvar"))
                       NIL))
                     ((NOT (IBALP_UPPERCASEP V))
                      (PROGN
                       (LPRIM
                        (LIST "ignoring" V "- not an uppercase identifier"))
                       NIL))
                     (T (LIST V)))))
                 (CAR V)))
        (SETQ FORALL-ENDPTR (LASTPAIR FORALL-ENDPTR))
        (SETQ V (CDR V))
        (GO LOOPLABEL)))
     (MKQUOTE NIL))) 
(PUT 'IBALP_PCVAR 'NUMBER-OF-ARGS 1) 
(PUT 'IBALP_PCVAR 'DEFINED-ON-LINE '374) 
(PUT 'IBALP_PCVAR 'DEFINED-IN-FILE 'REDLOG/IBALP/IBALP.RED) 
(PUT 'IBALP_PCVAR 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE IBALP_PCVAR (VL)
    (PROG (V)
      (SETQ V VL)
     LAB
      (COND ((NULL V) (RETURN NIL)))
      ((LAMBDA (V)
         (PROGN (PUT V 'STAT 'IBALP_PCSTAT) (PUT V 'FORMFN 'IBALP_PCFORM)))
       (CAR V))
      (SETQ V (CDR V))
      (GO LAB))) 
(PUT 'IBALP_UPPERCASEP 'NUMBER-OF-ARGS 1) 
(PUT 'IBALP_UPPERCASEP 'DEFINED-ON-LINE '380) 
(PUT 'IBALP_UPPERCASEP 'DEFINED-IN-FILE 'REDLOG/IBALP/IBALP.RED) 
(PUT 'IBALP_UPPERCASEP 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE IBALP_UPPERCASEP (ID) (EQUAL ID (IBALP_UPCASE ID))) 
(PUT 'IBALP_PCVARP 'NUMBER-OF-ARGS 1) 
(PUT 'IBALP_PCVARP 'DEFINED-ON-LINE '383) 
(PUT 'IBALP_PCVARP 'DEFINED-IN-FILE 'REDLOG/IBALP/IBALP.RED) 
(PUT 'IBALP_PCVARP 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE IBALP_PCVARP (ID) (EQ (GET ID 'STAT) 'IBALP_PCSTAT)) 
(PUT 'IBALP_UPCASE 'NUMBER-OF-ARGS 1) 
(PUT 'IBALP_UPCASE 'DEFINED-ON-LINE '386) 
(PUT 'IBALP_UPCASE 'DEFINED-IN-FILE 'REDLOG/IBALP/IBALP.RED) 
(PUT 'IBALP_UPCASE 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE IBALP_UPCASE (ID)
    (INTERN
     (COMPRESS
      (PROG (C FORALL-RESULT FORALL-ENDPTR)
        (SETQ C (EXPLODE ID))
        (COND ((NULL C) (RETURN NIL)))
        (SETQ FORALL-RESULT
                (SETQ FORALL-ENDPTR
                        (CONS ((LAMBDA (C) (RED-CHAR-UPCASE C)) (CAR C)) NIL)))
       LOOPLABEL
        (SETQ C (CDR C))
        (COND ((NULL C) (RETURN FORALL-RESULT)))
        (RPLACD FORALL-ENDPTR
                (CONS ((LAMBDA (C) (RED-CHAR-UPCASE C)) (CAR C)) NIL))
        (SETQ FORALL-ENDPTR (CDR FORALL-ENDPTR))
        (GO LOOPLABEL))))) 
(PUT 'IBALP_DOWNCASE 'NUMBER-OF-ARGS 1) 
(PUT 'IBALP_DOWNCASE 'DEFINED-ON-LINE '389) 
(PUT 'IBALP_DOWNCASE 'DEFINED-IN-FILE 'REDLOG/IBALP/IBALP.RED) 
(PUT 'IBALP_DOWNCASE 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE IBALP_DOWNCASE (ID)
    (INTERN
     (COMPRESS
      (PROG (C FORALL-RESULT FORALL-ENDPTR)
        (SETQ C (EXPLODE ID))
        (COND ((NULL C) (RETURN NIL)))
        (SETQ FORALL-RESULT
                (SETQ FORALL-ENDPTR
                        (CONS ((LAMBDA (C) (RED-CHAR-DOWNCASE C)) (CAR C))
                              NIL)))
       LOOPLABEL
        (SETQ C (CDR C))
        (COND ((NULL C) (RETURN FORALL-RESULT)))
        (RPLACD FORALL-ENDPTR
                (CONS ((LAMBDA (C) (RED-CHAR-DOWNCASE C)) (CAR C)) NIL))
        (SETQ FORALL-ENDPTR (CDR FORALL-ENDPTR))
        (GO LOOPLABEL))))) 
(IBALP_PCVAR
 '(|a| |b| |c| |d| |e| |f| |g| |h| |i| |j| |k| |l| |m| |n| |o| |p| |q| |r| |s|
   |t| |u| |v| |w| |x| |y| |z|)) 
(PUT 'IBALP_SUBAT 'NUMBER-OF-ARGS 2) 
(PUT 'IBALP_SUBAT 'DEFINED-ON-LINE '395) 
(PUT 'IBALP_SUBAT 'DEFINED-IN-FILE 'REDLOG/IBALP/IBALP.RED) 
(PUT 'IBALP_SUBAT 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE IBALP_SUBAT (AL AT)
    (IBALP_MK2 (IBALP_OP AT) (IBALP_SUBT AL (IBALP_ARG2L AT))
     (IBALP_SUBT AL (IBALP_ARG2R AT)))) 
(PUT 'IBALP_SUBT 'NUMBER-OF-ARGS 2) 
(PUT 'IBALP_SUBT 'DEFINED-ON-LINE '399) 
(PUT 'IBALP_SUBT 'DEFINED-IN-FILE 'REDLOG/IBALP/IBALP.RED) 
(PUT 'IBALP_SUBT 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE IBALP_SUBT (AL U)
    (PROG (W)
      (COND ((AND (IDP U) (SETQ W (ATSOC U AL))) (RETURN (CDR W))))
      (COND ((ATOM U) (RETURN U)))
      (RETURN
       (CONS (CAR U)
             (PROG (ARG FORALL-RESULT FORALL-ENDPTR)
               (SETQ ARG (CDR U))
               (COND ((NULL ARG) (RETURN NIL)))
               (SETQ FORALL-RESULT
                       (SETQ FORALL-ENDPTR
                               (CONS
                                ((LAMBDA (ARG) (IBALP_SUBT AL ARG)) (CAR ARG))
                                NIL)))
              LOOPLABEL
               (SETQ ARG (CDR ARG))
               (COND ((NULL ARG) (RETURN FORALL-RESULT)))
               (RPLACD FORALL-ENDPTR
                       (CONS ((LAMBDA (ARG) (IBALP_SUBT AL ARG)) (CAR ARG))
                             NIL))
               (SETQ FORALL-ENDPTR (CDR FORALL-ENDPTR))
               (GO LOOPLABEL)))))) 
(DE IBALP_SUBALCHK (AL) NIL) 
(PUT 'IBALP_SUBALCHK 'NUMBER-OF-ARGS 1) 
(PUT 'IBALP_SUBALCHK 'DEFINED-ON-LINE '408) 
(PUT 'IBALP_SUBALCHK 'DEFINED-IN-FILE 'REDLOG/IBALP/IBALP.RED) 
(PUT 'IBALP_SUBALCHK 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(PUTC 'IBALP_SUBALCHK 'INLINE '(LAMBDA (AL) NIL)) 
(DE IBALP_EQNRHSKERNELS (X) (IBALP_VARLT (CDR X))) 
(PUT 'IBALP_EQNRHSKERNELS 'NUMBER-OF-ARGS 1) 
(PUT 'IBALP_EQNRHSKERNELS 'DEFINED-ON-LINE '411) 
(PUT 'IBALP_EQNRHSKERNELS 'DEFINED-IN-FILE 'REDLOG/IBALP/IBALP.RED) 
(PUT 'IBALP_EQNRHSKERNELS 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(PUTC 'IBALP_EQNRHSKERNELS 'INLINE '(LAMBDA (X) (IBALP_VARLT (CDR X)))) 
(PUT 'IBALP_SIMPTERM 'NUMBER-OF-ARGS 1) 
(PUT 'IBALP_SIMPTERM 'DEFINED-ON-LINE '414) 
(PUT 'IBALP_SIMPTERM 'DEFINED-IN-FILE 'REDLOG/IBALP/IBALP.RED) 
(PUT 'IBALP_SIMPTERM 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE IBALP_SIMPTERM (U)
    (PROG (OP)
      (COND ((ATOM U) (RETURN (IBALP_SIMPATOM U))))
      (SETQ OP (CAR U))
      (COND
       ((IBALP_BOOLFP OP)
        (RETURN
         (CONS OP
               (PROG (ARG FORALL-RESULT FORALL-ENDPTR)
                 (SETQ ARG (CDR U))
                 (COND ((NULL ARG) (RETURN NIL)))
                 (SETQ FORALL-RESULT
                         (SETQ FORALL-ENDPTR
                                 (CONS
                                  ((LAMBDA (ARG) (IBALP_SIMPTERM ARG))
                                   (CAR ARG))
                                  NIL)))
                LOOPLABEL
                 (SETQ ARG (CDR ARG))
                 (COND ((NULL ARG) (RETURN FORALL-RESULT)))
                 (RPLACD FORALL-ENDPTR
                         (CONS ((LAMBDA (ARG) (IBALP_SIMPTERM ARG)) (CAR ARG))
                               NIL))
                 (SETQ FORALL-ENDPTR (CDR FORALL-ENDPTR))
                 (GO LOOPLABEL))))))
      (SETQ U (REVAL1 U T))
      (COND ((EQCAR U OP) (TYPERR OP "Boolean function")))
      (RETURN (IBALP_SIMPTERM U)))) 
(PUT 'IBALP_SIMPATOM 'NUMBER-OF-ARGS 1) 
(PUT 'IBALP_SIMPATOM 'DEFINED-ON-LINE '429) 
(PUT 'IBALP_SIMPATOM 'DEFINED-IN-FILE 'REDLOG/IBALP/IBALP.RED) 
(PUT 'IBALP_SIMPATOM 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE IBALP_SIMPATOM (U)
    (PROG (W)
      (COND ((OR (EQUAL U 0) (EQUAL U 1)) (RETURN U)))
      (COND
       ((IDP U)
        (PROGN
         (COND
          ((SETQ W (RL_GETTYPE U)) (RETURN (IBALP_SIMPTERM (REVAL1 U T)))))
         (FLAG (LIST U) 'USED*)
         (RETURN U))))
      (COND ((NULL U) (TYPERR "nil" "Boolean term")))
      (COND ((NUMBERP U) (TYPERR (LIST "number" U) "Boolean term")))
      (COND ((STRINGP U) (TYPERR (LIST "string" U) "Boolean term"))))) 
(DE IBALP_PREPTERM (U) U) 
(PUT 'IBALP_PREPTERM 'NUMBER-OF-ARGS 1) 
(PUT 'IBALP_PREPTERM 'DEFINED-ON-LINE '447) 
(PUT 'IBALP_PREPTERM 'DEFINED-IN-FILE 'REDLOG/IBALP/IBALP.RED) 
(PUT 'IBALP_PREPTERM 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(PUTC 'IBALP_PREPTERM 'INLINE '(LAMBDA (U) U)) 
(DE IBALP_BOOLFP (OP) (MEMQ OP '(BNOT BAND BOR BIMPL BREPL BEQUIV))) 
(PUT 'IBALP_BOOLFP 'NUMBER-OF-ARGS 1) 
(PUT 'IBALP_BOOLFP 'DEFINED-ON-LINE '450) 
(PUT 'IBALP_BOOLFP 'DEFINED-IN-FILE 'REDLOG/IBALP/IBALP.RED) 
(PUT 'IBALP_BOOLFP 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(PUTC 'IBALP_BOOLFP 'INLINE
      '(LAMBDA (OP) (MEMQ OP '(BNOT BAND BOR BIMPL BREPL BEQUIV)))) 
(DE IBALP_RESIMPTERM (U) (IBALP_SIMPTERM U)) 
(PUT 'IBALP_RESIMPTERM 'NUMBER-OF-ARGS 1) 
(PUT 'IBALP_RESIMPTERM 'DEFINED-ON-LINE '453) 
(PUT 'IBALP_RESIMPTERM 'DEFINED-IN-FILE 'REDLOG/IBALP/IBALP.RED) 
(PUT 'IBALP_RESIMPTERM 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(PUTC 'IBALP_RESIMPTERM 'INLINE '(LAMBDA (U) (IBALP_SIMPTERM U))) 
(DE IBALP_PREPAT (F) F) 
(PUT 'IBALP_PREPAT 'NUMBER-OF-ARGS 1) 
(PUT 'IBALP_PREPAT 'DEFINED-ON-LINE '456) 
(PUT 'IBALP_PREPAT 'DEFINED-IN-FILE 'REDLOG/IBALP/IBALP.RED) 
(PUT 'IBALP_PREPAT 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(PUTC 'IBALP_PREPAT 'INLINE '(LAMBDA (F) F)) 
(PUT 'IBALP_RESIMPAT 'NUMBER-OF-ARGS 1) 
(PUT 'IBALP_RESIMPAT 'DEFINED-ON-LINE '461) 
(PUT 'IBALP_RESIMPAT 'DEFINED-IN-FILE 'REDLOG/IBALP/IBALP.RED) 
(PUT 'IBALP_RESIMPAT 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE IBALP_RESIMPAT (F)
    (IBALP_MK2 (IBALP_OP F) (IBALP_SIMPTERM (IBALP_ARG2L F))
     (IBALP_SIMPTERM (IBALP_ARG2R F)))) 
(PUT 'IBALP_LENGTHAT 'NUMBER-OF-ARGS 1) 
(PUT 'IBALP_LENGTHAT 'DEFINED-ON-LINE '467) 
(PUT 'IBALP_LENGTHAT 'DEFINED-IN-FILE 'REDLOG/IBALP/IBALP.RED) 
(PUT 'IBALP_LENGTHAT 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE IBALP_LENGTHAT (F) (LENGTH (IBALP_ARGN F))) 
(PUT 'IBALP_SIMPAT 'NUMBER-OF-ARGS 1) 
(PUT 'IBALP_SIMPAT 'DEFINED-ON-LINE '472) 
(PUT 'IBALP_SIMPAT 'DEFINED-IN-FILE 'REDLOG/IBALP/IBALP.RED) 
(PUT 'IBALP_SIMPAT 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE IBALP_SIMPAT (U)
    (IBALP_MK2 (CAR U) (IBALP_SIMPTERM (CADR U)) (IBALP_SIMPTERM (CADDR U)))) 
(DE IBALP_OP (ATF) (CAR ATF)) 
(PUT 'IBALP_OP 'NUMBER-OF-ARGS 1) 
(PUT 'IBALP_OP 'DEFINED-ON-LINE '477) 
(PUT 'IBALP_OP 'DEFINED-IN-FILE 'REDLOG/IBALP/IBALP.RED) 
(PUT 'IBALP_OP 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(PUTC 'IBALP_OP 'INLINE '(LAMBDA (ATF) (CAR ATF))) 
(DE IBALP_ATFP (F) (MEMQ (CAR F) '(EQUAL NEQ))) 
(PUT 'IBALP_ATFP 'NUMBER-OF-ARGS 1) 
(PUT 'IBALP_ATFP 'DEFINED-ON-LINE '482) 
(PUT 'IBALP_ATFP 'DEFINED-IN-FILE 'REDLOG/IBALP/IBALP.RED) 
(PUT 'IBALP_ATFP 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(PUTC 'IBALP_ATFP 'INLINE '(LAMBDA (F) (MEMQ (CAR F) '(EQUAL NEQ)))) 
(DE IBALP_ARG1 (ATF) (CADR ATF)) 
(PUT 'IBALP_ARG1 'NUMBER-OF-ARGS 1) 
(PUT 'IBALP_ARG1 'DEFINED-ON-LINE '487) 
(PUT 'IBALP_ARG1 'DEFINED-IN-FILE 'REDLOG/IBALP/IBALP.RED) 
(PUT 'IBALP_ARG1 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(PUTC 'IBALP_ARG1 'INLINE '(LAMBDA (ATF) (CADR ATF))) 
(DE IBALP_ARG2L (ATF) (CADR ATF)) 
(PUT 'IBALP_ARG2L 'NUMBER-OF-ARGS 1) 
(PUT 'IBALP_ARG2L 'DEFINED-ON-LINE '492) 
(PUT 'IBALP_ARG2L 'DEFINED-IN-FILE 'REDLOG/IBALP/IBALP.RED) 
(PUT 'IBALP_ARG2L 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(PUTC 'IBALP_ARG2L 'INLINE '(LAMBDA (ATF) (CADR ATF))) 
(DE IBALP_ARG2R (ATF) (CADDR ATF)) 
(PUT 'IBALP_ARG2R 'NUMBER-OF-ARGS 1) 
(PUT 'IBALP_ARG2R 'DEFINED-ON-LINE '497) 
(PUT 'IBALP_ARG2R 'DEFINED-IN-FILE 'REDLOG/IBALP/IBALP.RED) 
(PUT 'IBALP_ARG2R 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(PUTC 'IBALP_ARG2R 'INLINE '(LAMBDA (ATF) (CADDR ATF))) 
(DE IBALP_ARGN (ATF) (CDR ATF)) 
(PUT 'IBALP_ARGN 'NUMBER-OF-ARGS 1) 
(PUT 'IBALP_ARGN 'DEFINED-ON-LINE '502) 
(PUT 'IBALP_ARGN 'DEFINED-IN-FILE 'REDLOG/IBALP/IBALP.RED) 
(PUT 'IBALP_ARGN 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(PUTC 'IBALP_ARGN 'INLINE '(LAMBDA (ATF) (CDR ATF))) 
(DE IBALP_MK2 (OP LHS RHS) (LIST OP LHS RHS)) 
(PUT 'IBALP_MK2 'NUMBER-OF-ARGS 3) 
(PUT 'IBALP_MK2 'DEFINED-ON-LINE '507) 
(PUT 'IBALP_MK2 'DEFINED-IN-FILE 'REDLOG/IBALP/IBALP.RED) 
(PUT 'IBALP_MK2 'PROCEDURE_TYPE
     '(ARROW (TIMES GENERAL GENERAL GENERAL) GENERAL)) 
(PUTC 'IBALP_MK2 'INLINE '(LAMBDA (OP LHS RHS) (LIST OP LHS RHS))) 
(DE IBALP_1MK2 (OP LHS) (LIST OP LHS 1)) 
(PUT 'IBALP_1MK2 'NUMBER-OF-ARGS 2) 
(PUT 'IBALP_1MK2 'DEFINED-ON-LINE '513) 
(PUT 'IBALP_1MK2 'DEFINED-IN-FILE 'REDLOG/IBALP/IBALP.RED) 
(PUT 'IBALP_1MK2 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(PUTC 'IBALP_1MK2 'INLINE '(LAMBDA (OP LHS) (LIST OP LHS 1))) 
(DE IBALP_MKN (OP ARGL) (CONS OP ARGL)) 
(PUT 'IBALP_MKN 'NUMBER-OF-ARGS 2) 
(PUT 'IBALP_MKN 'DEFINED-ON-LINE '518) 
(PUT 'IBALP_MKN 'DEFINED-IN-FILE 'REDLOG/IBALP/IBALP.RED) 
(PUT 'IBALP_MKN 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(PUTC 'IBALP_MKN 'INLINE '(LAMBDA (OP ARGL) (CONS OP ARGL))) 
(PUT 'IBALP_DNF 'NUMBER-OF-ARGS 1) 
(PUT 'IBALP_DNF 'DEFINED-ON-LINE '526) 
(PUT 'IBALP_DNF 'DEFINED-IN-FILE 'REDLOG/IBALP/IBALP.RED) 
(PUT 'IBALP_DNF 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE IBALP_DNF (F)
    (COND (*RLBNFSAC ((LAMBDA (*RLSISO) (CL_DNF F)) T)) (T (CL_DNF F)))) 
(PUT 'IBALP_CNF 'NUMBER-OF-ARGS 1) 
(PUT 'IBALP_CNF 'DEFINED-ON-LINE '533) 
(PUT 'IBALP_CNF 'DEFINED-IN-FILE 'REDLOG/IBALP/IBALP.RED) 
(PUT 'IBALP_CNF 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE IBALP_CNF (F)
    (COND (*RLBNFSAC ((LAMBDA (*RLSISO) (CL_CNF F)) T)) (T (CL_CNF F)))) 
(PUT 'IBALP_SUBSUMPTION 'NUMBER-OF-ARGS 3) 
(PUT 'IBALP_SUBSUMPTION 'DEFINED-ON-LINE '541) 
(PUT 'IBALP_SUBSUMPTION 'DEFINED-IN-FILE 'REDLOG/IBALP/IBALP.RED) 
(PUT 'IBALP_SUBSUMPTION 'PROCEDURE_TYPE
     '(ARROW (TIMES GENERAL GENERAL GENERAL) GENERAL)) 
(DE IBALP_SUBSUMPTION (L1 L2 GOR)
    (COND
     ((EQ GOR 'OR)
      (COND ((IBALP_SUBSUMEP-AND L1 L2) 'KEEP2)
            ((IBALP_SUBSUMEP-AND L2 L1) 'KEEP1)))
     ((IBALP_SUBSUMEP-OR L1 L2) 'KEEP1) ((IBALP_SUBSUMEP-OR L2 L1) 'KEEP2)
     (T NIL))) 
(PUT 'IBALP_SUBSUMEP-AND 'NUMBER-OF-ARGS 2) 
(PUT 'IBALP_SUBSUMEP-AND 'DEFINED-ON-LINE '557) 
(PUT 'IBALP_SUBSUMEP-AND 'DEFINED-IN-FILE 'REDLOG/IBALP/IBALP.RED) 
(PUT 'IBALP_SUBSUMEP-AND 'PROCEDURE_TYPE
     '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE IBALP_SUBSUMEP-AND (L1 L2)
    (PROG (A)
      (PROG ()
       WHILELABEL
        (COND ((NOT L2) (RETURN NIL)))
        (PROGN
         (SETQ A (CAR L2))
         (SETQ L2 (CDR L2))
         (COND ((NEQ (CL_SIMPL A L1 (MINUS 1)) 'TRUE) (SETQ A (SETQ L2 NIL)))))
        (GO WHILELABEL))
      (RETURN A))) 
(PUT 'IBALP_SUBSUMEP-OR 'NUMBER-OF-ARGS 2) 
(PUT 'IBALP_SUBSUMEP-OR 'DEFINED-ON-LINE '568) 
(PUT 'IBALP_SUBSUMEP-OR 'DEFINED-IN-FILE 'REDLOG/IBALP/IBALP.RED) 
(PUT 'IBALP_SUBSUMEP-OR 'PROCEDURE_TYPE
     '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE IBALP_SUBSUMEP-OR (L1 L2)
    (PROG (A)
      (PROG ()
       WHILELABEL
        (COND ((NOT L1) (RETURN NIL)))
        (PROGN
         (SETQ A (CAR L1))
         (SETQ L1 (CDR L1))
         (COND
          ((NEQ
            (CL_SIMPL
             (COND ((AND L2 (CDR L2)) (CONS 'OR L2))
                   ((NULL L2) (COND ((EQ 'OR 'AND) 'TRUE) (T 'FALSE)))
                   (T (CAR L2)))
             (LIST A) (MINUS 1))
            'TRUE)
           (SETQ A (SETQ L1 NIL)))))
        (GO WHILELABEL))
      (RETURN A))) 
(PUT 'IBALP_SACAT 'NUMBER-OF-ARGS 3) 
(PUT 'IBALP_SACAT 'DEFINED-ON-LINE '579) 
(PUT 'IBALP_SACAT 'DEFINED-IN-FILE 'REDLOG/IBALP/IBALP.RED) 
(PUT 'IBALP_SACAT 'PROCEDURE_TYPE
     '(ARROW (TIMES GENERAL GENERAL GENERAL) GENERAL)) 
(DE IBALP_SACAT (A1 A2 GOR)
    (PROG (RHS1 RHS2)
      (COND ((NEQ (CADR A1) (CADR A2)) (RETURN NIL)))
      (SETQ RHS1 (CADDR A1))
      (SETQ RHS2 (CADDR A2))
      (COND ((EQUAL RHS1 RHS2) (RETURN 'KEEP)))
      (COND
       ((OR (AND (EQUAL RHS1 0) (EQUAL RHS2 1))
            (AND (EQUAL RHS1 1) (EQUAL RHS2 0)))
        (RETURN 'DROP)))
      (RETURN NIL))) 
(DE IBALP_ATAB (F) (CL_ATAB (CL_SIMPL F NIL (MINUS 1)))) 
(PUT 'IBALP_ATAB 'NUMBER-OF-ARGS 1) 
(PUT 'IBALP_ATAB 'DEFINED-ON-LINE '604) 
(PUT 'IBALP_ATAB 'DEFINED-IN-FILE 'REDLOG/IBALP/IBALP.RED) 
(PUT 'IBALP_ATAB 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(PUTC 'IBALP_ATAB 'INLINE '(LAMBDA (F) (CL_ATAB (CL_SIMPL F NIL (MINUS 1))))) 
(DE IBALP_ITAB (F) (CL_ITAB (CL_SIMPL F NIL (MINUS 1)))) 
(PUT 'IBALP_ITAB 'NUMBER-OF-ARGS 1) 
(PUT 'IBALP_ITAB 'DEFINED-ON-LINE '607) 
(PUT 'IBALP_ITAB 'DEFINED-IN-FILE 'REDLOG/IBALP/IBALP.RED) 
(PUT 'IBALP_ITAB 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(PUTC 'IBALP_ITAB 'INLINE '(LAMBDA (F) (CL_ITAB (CL_SIMPL F NIL (MINUS 1))))) 
(PUT 'IBALP_A2CDL 'NUMBER-OF-ARGS 1) 
(PUT 'IBALP_A2CDL 'DEFINED-ON-LINE '610) 
(PUT 'IBALP_A2CDL 'DEFINED-IN-FILE 'REDLOG/IBALP/IBALP.RED) 
(PUT 'IBALP_A2CDL 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE IBALP_A2CDL (ATML)
    (PROG (PR FORALL-RESULT FORALL-ENDPTR)
      (SETQ PR ATML)
      (COND ((NULL PR) (RETURN NIL)))
      (SETQ FORALL-RESULT
              (SETQ FORALL-ENDPTR
                      (CONS
                       ((LAMBDA (PR)
                          ((LAMBDA (W)
                             (LIST (LIST 'EQUAL W 0) (LIST 'EQUAL W 1)))
                           (CADR (CAR PR))))
                        (CAR PR))
                       NIL)))
     LOOPLABEL
      (SETQ PR (CDR PR))
      (COND ((NULL PR) (RETURN FORALL-RESULT)))
      (RPLACD FORALL-ENDPTR
              (CONS
               ((LAMBDA (PR)
                  ((LAMBDA (W) (LIST (LIST 'EQUAL W 0) (LIST 'EQUAL W 1)))
                   (CADR (CAR PR))))
                (CAR PR))
               NIL))
      (SETQ FORALL-ENDPTR (CDR FORALL-ENDPTR))
      (GO LOOPLABEL))) 
(PUT 'IBALP_SUBSTAT 'NUMBER-OF-ARGS 3) 
(PUT 'IBALP_SUBSTAT 'DEFINED-ON-LINE '619) 
(PUT 'IBALP_SUBSTAT 'DEFINED-IN-FILE 'REDLOG/IBALP/IBALP.RED) 
(PUT 'IBALP_SUBSTAT 'PROCEDURE_TYPE
     '(ARROW (TIMES GENERAL GENERAL GENERAL) GENERAL)) 
(DE IBALP_SUBSTAT (ATF NEW OLD)
    (LIST (CAR ATF) (IBALP_QESUBT (CADR ATF) OLD NEW)
          (IBALP_QESUBT (CADDR ATF) OLD NEW))) 
(PUT 'IBALP_ORDATP 'NUMBER-OF-ARGS 2) 
(PUT 'IBALP_ORDATP 'DEFINED-ON-LINE '625) 
(PUT 'IBALP_ORDATP 'DEFINED-IN-FILE 'REDLOG/IBALP/IBALP.RED) 
(PUT 'IBALP_ORDATP 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE IBALP_ORDATP (A1 A2)
    (PROG (U1 U2)
      (SETQ U1 (CADR A1))
      (SETQ U2 (CADR A2))
      (COND ((NEQ U1 U2) (RETURN (IBALP_ORDP U1 U2))))
      (SETQ U1 (CADDR A1))
      (SETQ U2 (CADDR A2))
      (COND ((NEQ U1 U2) (RETURN (IBALP_ORDP U1 U2))))
      (RETURN (IBALP_ORDRELP (CAR A1) (CAR A2))))) 
(DE IBALP_ORDP (U1 U2)
    (ORDP (LIST (CONS (CONS U1 1) 1)) (LIST (CONS (CONS U2 1) 1)))) 
(PUT 'IBALP_ORDP 'NUMBER-OF-ARGS 2) 
(PUT 'IBALP_ORDP 'DEFINED-ON-LINE '638) 
(PUT 'IBALP_ORDP 'DEFINED-IN-FILE 'REDLOG/IBALP/IBALP.RED) 
(PUT 'IBALP_ORDP 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(PUTC 'IBALP_ORDP 'INLINE
      '(LAMBDA (U1 U2)
         (ORDP (LIST (CONS (CONS U1 1) 1)) (LIST (CONS (CONS U2 1) 1))))) 
(DE IBALP_ORDRELP (R1 R2) (NOT (NOT (MEMQ R2 (MEMQ R1 '(EQUAL NEQ)))))) 
(PUT 'IBALP_ORDRELP 'NUMBER-OF-ARGS 2) 
(PUT 'IBALP_ORDRELP 'DEFINED-ON-LINE '641) 
(PUT 'IBALP_ORDRELP 'DEFINED-IN-FILE 'REDLOG/IBALP/IBALP.RED) 
(PUT 'IBALP_ORDRELP 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(PUTC 'IBALP_ORDRELP 'INLINE
      '(LAMBDA (R1 R2) (NOT (NOT (MEMQ R2 (MEMQ R1 '(EQUAL NEQ))))))) 
(PUT 'IBALP_NEGATEAT 'NUMBER-OF-ARGS 1) 
(PUT 'IBALP_NEGATEAT 'DEFINED-ON-LINE '644) 
(PUT 'IBALP_NEGATEAT 'DEFINED-IN-FILE 'REDLOG/IBALP/IBALP.RED) 
(PUT 'IBALP_NEGATEAT 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE IBALP_NEGATEAT (ATF)
    (LIST (CAR ATF) (CADR ATF) (IBALP_NEGATET (CADDR ATF)))) 
(DE IBALP_NEGATET (U) (COND ((EQUAL U 0) 1) ((EQUAL U 1) 0) (T (LIST 'BNOT U)))) 
(PUT 'IBALP_NEGATET 'NUMBER-OF-ARGS 1) 
(PUT 'IBALP_NEGATET 'DEFINED-ON-LINE '649) 
(PUT 'IBALP_NEGATET 'DEFINED-IN-FILE 'REDLOG/IBALP/IBALP.RED) 
(PUT 'IBALP_NEGATET 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(PUTC 'IBALP_NEGATET 'INLINE
      '(LAMBDA (U) (COND ((EQUAL U 0) 1) ((EQUAL U 1) 0) (T (LIST 'BNOT U))))) 
(PUT 'SEIDL_NEGATEAT 'NUMBER-OF-ARGS 1) 
(PUT 'SEIDL_NEGATEAT 'DEFINED-ON-LINE '652) 
(PUT 'SEIDL_NEGATEAT 'DEFINED-IN-FILE 'REDLOG/IBALP/IBALP.RED) 
(PUT 'SEIDL_NEGATEAT 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE SEIDL_NEGATEAT (ATF)
    (PROG (LHS RHS REL OP)
      (SETQ RHS (CADDR ATF))
      (SETQ LHS (CADR ATF))
      (SETQ REL (CAR ATF))
      (COND
       ((MEMBER RHS (LIST 0 1)) (RETURN (LIST REL LHS (IBALP_FLIP01 RHS)))))
      (COND
       ((MEMBER LHS (LIST 0 1)) (RETURN (LIST REL (IBALP_FLIP01 LHS) RHS))))
      (SETQ OP (CAR RHS))
      (COND ((EQUAL OP 'BNOT) (RETURN (LIST REL LHS (CADR RHS)))))
      (SETQ OP (CAR LHS))
      (COND ((EQUAL OP 'BNOT) (RETURN (LIST REL (CADR LHS) RHS))))
      (RETURN (LIST REL (IBALP_MK1 'BNOT RHS) RHS)))) 
(PUT 'IBALP_FLIP01 'NUMBER-OF-ARGS 1) 
(PUT 'IBALP_FLIP01 'DEFINED-ON-LINE '676) 
(PUT 'IBALP_FLIP01 'DEFINED-IN-FILE 'REDLOG/IBALP/IBALP.RED) 
(PUT 'IBALP_FLIP01 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE IBALP_FLIP01 (N)
    (COND ((EQUAL N 1) 0) ((EQUAL N 0) 1)
          (T (REDERR (LIST "ibalb_flip01: cannot flip" N))))) 
(PUT 'IBALP_CVEQ 'NUMBER-OF-ARGS 1) 
(PUT 'IBALP_CVEQ 'DEFINED-ON-LINE '680) 
(PUT 'IBALP_CVEQ 'DEFINED-IN-FILE 'REDLOG/IBALP/IBALP.RED) 
(PUT 'IBALP_CVEQ 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE IBALP_CVEQ (A)
    (COND ((EQ (CAR A) 'EQUAL) A)
          (T
           ((LAMBDA (W) (LIST 'EQUAL (CADR W) (CADDR W))) (IBALP_NEGATEAT A))))) 
(PUT 'IBALP_TERMMLAT 'NUMBER-OF-ARGS 1) 
(PUT 'IBALP_TERMMLAT 'DEFINED-ON-LINE '688) 
(PUT 'IBALP_TERMMLAT 'DEFINED-IN-FILE 'REDLOG/IBALP/IBALP.RED) 
(PUT 'IBALP_TERMMLAT 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE IBALP_TERMMLAT (AT)
    (PROG (LHS RHS)
      (SETQ LHS (CADR AT))
      (SETQ RHS (CADDR AT))
      (COND ((AND (EQUAL LHS 0) (EQUAL RHS 0)) (RETURN NIL)))
      (COND ((EQUAL LHS 0) (RETURN (LIST (CONS RHS 1)))))
      (COND ((EQUAL RHS 0) (RETURN (LIST (CONS LHS 1)))))
      (COND ((EQUAL LHS RHS) (RETURN (LIST (CONS LHS 2)))))
      (RETURN (LIST (CONS LHS 1) (CONS RHS 1))))) 
(PUT 'IBALP_SIMPLAT1 'NUMBER-OF-ARGS 2) 
(PUT 'IBALP_SIMPLAT1 'DEFINED-ON-LINE '706) 
(PUT 'IBALP_SIMPLAT1 'DEFINED-IN-FILE 'REDLOG/IBALP/IBALP.RED) 
(PUT 'IBALP_SIMPLAT1 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE IBALP_SIMPLAT1 (F SOP)
    (PROG (LHS RHS)
      (COND ((NOT (MEMQ (CAR F) '(EQUAL NEQ))) (RETURN NIL)))
      (SETQ LHS (CADR F))
      (SETQ RHS (CADDR F))
      (COND ((NUMBERP LHS) (SETQ F (LIST (CAR F) RHS LHS))))
      (SETQ F (IBALP_CVEQ F))
      (SETQ LHS (CADR F))
      (SETQ RHS (CADDR F))
      (COND
       ((AND (NUMBERP LHS) (NUMBERP RHS))
        (RETURN (COND ((EQ LHS RHS) 'TRUE) (T 'FALSE)))))
      (COND ((AND (IDP LHS) (NUMBERP RHS)) (RETURN F)))
      (SETQ LHS (IBALP_TERM2FO LHS))
      (SETQ RHS (IBALP_TERM2FO RHS))
      (RETURN (CL_SIMPL (CL_NNF (LIST 'EQUIV LHS RHS)) NIL (MINUS 1))))) 
(PUT 'IBALP_TERM2FO 'NUMBER-OF-ARGS 1) 
(PUT 'IBALP_TERM2FO 'DEFINED-ON-LINE '734) 
(PUT 'IBALP_TERM2FO 'DEFINED-IN-FILE 'REDLOG/IBALP/IBALP.RED) 
(PUT 'IBALP_TERM2FO 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE IBALP_TERM2FO (TERM)
    (PROG (REL)
      (COND ((NUMBERP TERM) (RETURN (COND ((EQUAL TERM 0) 'FALSE) (T 'TRUE)))))
      (COND ((IDP TERM) (RETURN (LIST 'EQUAL TERM 1))))
      (SETQ REL (CAR TERM))
      (COND ((EQ REL 'BNOT) (RETURN (LIST 'NOT (IBALP_TERM2FO (CADR TERM))))))
      (COND
       ((EQ REL 'BAND)
        (RETURN
         (CONS 'AND
               (PROG (A FORALL-RESULT FORALL-ENDPTR)
                 (SETQ A (CDR TERM))
                 (COND ((NULL A) (RETURN NIL)))
                 (SETQ FORALL-RESULT
                         (SETQ FORALL-ENDPTR
                                 (CONS ((LAMBDA (A) (IBALP_TERM2FO A)) (CAR A))
                                       NIL)))
                LOOPLABEL
                 (SETQ A (CDR A))
                 (COND ((NULL A) (RETURN FORALL-RESULT)))
                 (RPLACD FORALL-ENDPTR
                         (CONS ((LAMBDA (A) (IBALP_TERM2FO A)) (CAR A)) NIL))
                 (SETQ FORALL-ENDPTR (CDR FORALL-ENDPTR))
                 (GO LOOPLABEL))))))
      (COND
       ((EQ REL 'BOR)
        (RETURN
         (CONS 'OR
               (PROG (A FORALL-RESULT FORALL-ENDPTR)
                 (SETQ A (CDR TERM))
                 (COND ((NULL A) (RETURN NIL)))
                 (SETQ FORALL-RESULT
                         (SETQ FORALL-ENDPTR
                                 (CONS ((LAMBDA (A) (IBALP_TERM2FO A)) (CAR A))
                                       NIL)))
                LOOPLABEL
                 (SETQ A (CDR A))
                 (COND ((NULL A) (RETURN FORALL-RESULT)))
                 (RPLACD FORALL-ENDPTR
                         (CONS ((LAMBDA (A) (IBALP_TERM2FO A)) (CAR A)) NIL))
                 (SETQ FORALL-ENDPTR (CDR FORALL-ENDPTR))
                 (GO LOOPLABEL))))))
      (COND
       ((EQ REL 'BIMPL)
        (RETURN
         (LIST 'IMPL (IBALP_TERM2FO (CADR TERM))
               (IBALP_TERM2FO (CADDR TERM))))))
      (COND
       ((EQ REL 'BREPL)
        (RETURN
         (LIST 'REPL (IBALP_TERM2FO (CADR TERM))
               (IBALP_TERM2FO (CADDR TERM))))))
      (COND
       ((EQ REL 'BEQUIV)
        (RETURN
         (LIST 'EQUIV (IBALP_TERM2FO (CADR TERM))
               (IBALP_TERM2FO (CADDR TERM))))))
      (REDERR (LIST "ibalp_term2fo: unknown symbol:" REL)))) 
(PUT 'IBALP_VARLAT 'NUMBER-OF-ARGS 1) 
(PUT 'IBALP_VARLAT 'DEFINED-ON-LINE '758) 
(PUT 'IBALP_VARLAT 'DEFINED-IN-FILE 'REDLOG/IBALP/IBALP.RED) 
(PUT 'IBALP_VARLAT 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE IBALP_VARLAT (A) (UNION (IBALP_VARLT (CADR A)) (IBALP_VARLT (CADDR A)))) 
(PUT 'IBALP_VARLT 'NUMBER-OF-ARGS 1) 
(PUT 'IBALP_VARLT 'DEFINED-ON-LINE '763) 
(PUT 'IBALP_VARLT 'DEFINED-IN-FILE 'REDLOG/IBALP/IBALP.RED) 
(PUT 'IBALP_VARLT 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE IBALP_VARLT (U) (IBALP_VARLT1 U NIL)) 
(PUT 'IBALP_VARLT1 'NUMBER-OF-ARGS 2) 
(PUT 'IBALP_VARLT1 'DEFINED-ON-LINE '768) 
(PUT 'IBALP_VARLT1 'DEFINED-IN-FILE 'REDLOG/IBALP/IBALP.RED) 
(PUT 'IBALP_VARLT1 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE IBALP_VARLT1 (U VL)
    (PROG ()
      (COND ((OR (EQUAL U 0) (EQUAL U 1)) (RETURN NIL)))
      (COND ((IDP U) (RETURN (LTO_INSERTQ U VL))))
      (PROG (ARG)
        (SETQ ARG (CDR U))
       LAB
        (COND ((NULL ARG) (RETURN NIL)))
        ((LAMBDA (ARG) (SETQ VL (IBALP_VARLT1 ARG VL))) (CAR ARG))
        (SETQ ARG (CDR ARG))
        (GO LAB))
      (RETURN VL))) 
(DE IBALP_TRANSFORM (V F VL AN THEO ANS BVL) NIL) 
(PUT 'IBALP_TRANSFORM 'NUMBER-OF-ARGS 7) 
(PUT 'IBALP_TRANSFORM 'DEFINED-ON-LINE '782) 
(PUT 'IBALP_TRANSFORM 'DEFINED-IN-FILE 'REDLOG/IBALP/IBALP.RED) 
(PUT 'IBALP_TRANSFORM 'PROCEDURE_TYPE
     '(ARROW (TIMES GENERAL GENERAL GENERAL GENERAL GENERAL GENERAL GENERAL)
       GENERAL)) 
(PUTC 'IBALP_TRANSFORM 'INLINE '(LAMBDA (V F VL AN THEO ANS BVL) NIL)) 
(DE IBALP_TRYGAUSS (F V THEO ANS BVL) 'FAILED) 
(PUT 'IBALP_TRYGAUSS 'NUMBER-OF-ARGS 5) 
(PUT 'IBALP_TRYGAUSS 'DEFINED-ON-LINE '788) 
(PUT 'IBALP_TRYGAUSS 'DEFINED-IN-FILE 'REDLOG/IBALP/IBALP.RED) 
(PUT 'IBALP_TRYGAUSS 'PROCEDURE_TYPE
     '(ARROW (TIMES GENERAL GENERAL GENERAL GENERAL GENERAL) GENERAL)) 
(PUTC 'IBALP_TRYGAUSS 'INLINE '(LAMBDA (F V THEO ANS BVL) 'FAILED)) 
(DE IBALP_SPECELIM (F VL THEO ANS BVL) 'FAILED) 
(PUT 'IBALP_SPECELIM 'NUMBER-OF-ARGS 5) 
(PUT 'IBALP_SPECELIM 'DEFINED-ON-LINE '794) 
(PUT 'IBALP_SPECELIM 'DEFINED-IN-FILE 'REDLOG/IBALP/IBALP.RED) 
(PUT 'IBALP_SPECELIM 'PROCEDURE_TYPE
     '(ARROW (TIMES GENERAL GENERAL GENERAL GENERAL GENERAL) GENERAL)) 
(PUTC 'IBALP_SPECELIM 'INLINE '(LAMBDA (F VL THEO ANS BVL) 'FAILED)) 
(SWITCH (LIST 'IBALPBADVARSEL)) 
(PUT 'IBALP_VARSEL 'NUMBER-OF-ARGS 3) 
(PUT 'IBALP_VARSEL 'DEFINED-ON-LINE '803) 
(PUT 'IBALP_VARSEL 'DEFINED-IN-FILE 'REDLOG/IBALP/IBALP.RED) 
(PUT 'IBALP_VARSEL 'PROCEDURE_TYPE
     '(ARROW (TIMES GENERAL GENERAL GENERAL) GENERAL)) 
(DE IBALP_VARSEL (F VL THEO)
    (PROG (V N)
      (SETQ N 0)
      (COND (*IBALPBADVARSEL (RETURN (IBALP_BADVARSEL F VL))))
      (PROG (PR)
        (SETQ PR (CL_TERMML F))
       LAB
        (COND ((NULL PR) (RETURN NIL)))
        ((LAMBDA (PR)
           (COND
            ((AND (MEMQ (CAR PR) VL) (GREATERP (CDR PR) N))
             (PROGN (SETQ V (CAR PR)) (SETQ N (CDR PR))))))
         (CAR PR))
        (SETQ PR (CDR PR))
        (GO LAB))
      (RETURN (COND (V (LIST V)) (T (LIST (CAR (SORT VL 'IBALP_ORDP)))))))) 
(PUT 'IBALP_BADVARSEL 'NUMBER-OF-ARGS 2) 
(PUT 'IBALP_BADVARSEL 'DEFINED-ON-LINE '818) 
(PUT 'IBALP_BADVARSEL 'DEFINED-IN-FILE 'REDLOG/IBALP/IBALP.RED) 
(PUT 'IBALP_BADVARSEL 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE IBALP_BADVARSEL (F VL)
    (PROG (V N)
      (SETQ N 0)
      (PROG (PR)
        (SETQ PR (CL_TERMML F))
       LAB
        (COND ((NULL PR) (RETURN NIL)))
        ((LAMBDA (PR)
           (COND
            ((AND (MEMQ (CAR PR) VL) (LESSP (CDR PR) N))
             (PROGN (SETQ V (CAR PR)) (SETQ N (CDR PR))))))
         (CAR PR))
        (SETQ PR (CDR PR))
        (GO LAB))
      (RETURN (COND (V (LIST V)) (T (LIST (CAR (SORT VL 'IBALP_ORDP)))))))) 
(PUT 'IBALP_TRANSLAT 'NUMBER-OF-ARGS 5) 
(PUT 'IBALP_TRANSLAT 'DEFINED-ON-LINE '863) 
(PUT 'IBALP_TRANSLAT 'DEFINED-IN-FILE 'REDLOG/IBALP/IBALP.RED) 
(PUT 'IBALP_TRANSLAT 'PROCEDURE_TYPE
     '(ARROW (TIMES GENERAL GENERAL GENERAL GENERAL GENERAL) GENERAL)) 
(DE IBALP_TRANSLAT (ATF V THEO POS ANS)
    (COND ((NEQ (CADR ATF) V) (CONS NIL NIL))
          (POS (IBALP_MKALP 'EQUAL (LIST (CADDR ATF))))
          ((EQUAL (CADDR ATF) 1) (IBALP_MKALP 'EQUAL (LIST 0)))
          (T (IBALP_MKALP 'EQUAL (LIST 1))))) 
(DE IBALP_MKALP (TAG L) (CONS (LIST (CONS TAG L)) (LIST (CONS TAG 1)))) 
(PUT 'IBALP_MKALP 'NUMBER-OF-ARGS 2) 
(PUT 'IBALP_MKALP 'DEFINED-ON-LINE '876) 
(PUT 'IBALP_MKALP 'DEFINED-IN-FILE 'REDLOG/IBALP/IBALP.RED) 
(PUT 'IBALP_MKALP 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(PUTC 'IBALP_MKALP 'INLINE
      '(LAMBDA (TAG L) (CONS (LIST (CONS TAG L)) (LIST (CONS TAG 1))))) 
(PUT 'IBALP_ELIMSET 'NUMBER-OF-ARGS 2) 
(PUT 'IBALP_ELIMSET 'DEFINED-ON-LINE '887) 
(PUT 'IBALP_ELIMSET 'DEFINED-IN-FILE 'REDLOG/IBALP/IBALP.RED) 
(PUT 'IBALP_ELIMSET 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE IBALP_ELIMSET (V ALP)
    (PROGN
     (COND ((AND *RLVERBOSE (NOT (CDR (CDAAR ALP)))) (IOTO_PRIN2 "S")))
     (LIST
      (CONS 'IBALP_QESUB
            (PROG (BCONST FORALL-RESULT FORALL-ENDPTR)
              (SETQ BCONST (CDAAR ALP))
              (COND ((NULL BCONST) (RETURN NIL)))
              (SETQ FORALL-RESULT
                      (SETQ FORALL-ENDPTR
                              (CONS
                               ((LAMBDA (BCONST) (LIST BCONST)) (CAR BCONST))
                               NIL)))
             LOOPLABEL
              (SETQ BCONST (CDR BCONST))
              (COND ((NULL BCONST) (RETURN FORALL-RESULT)))
              (RPLACD FORALL-ENDPTR
                      (CONS ((LAMBDA (BCONST) (LIST BCONST)) (CAR BCONST))
                            NIL))
              (SETQ FORALL-ENDPTR (CDR FORALL-ENDPTR))
              (GO LOOPLABEL)))))) 
(PUT 'IBALP_QESUB 'NUMBER-OF-ARGS 5) 
(PUT 'IBALP_QESUB 'DEFINED-ON-LINE '896) 
(PUT 'IBALP_QESUB 'DEFINED-IN-FILE 'REDLOG/IBALP/IBALP.RED) 
(PUT 'IBALP_QESUB 'PROCEDURE_TYPE
     '(ARROW (TIMES GENERAL GENERAL GENERAL GENERAL GENERAL) GENERAL)) 
(DE IBALP_QESUB (BVL THEO F V BCONST)
    (CONS THEO (CL_APPLY2ATS1 F 'IBALP_QESUBAT (LIST V BCONST)))) 
(PUT 'IBALP_QESUBAT 'NUMBER-OF-ARGS 3) 
(PUT 'IBALP_QESUBAT 'DEFINED-ON-LINE '899) 
(PUT 'IBALP_QESUBAT 'DEFINED-IN-FILE 'REDLOG/IBALP/IBALP.RED) 
(PUT 'IBALP_QESUBAT 'PROCEDURE_TYPE
     '(ARROW (TIMES GENERAL GENERAL GENERAL) GENERAL)) 
(DE IBALP_QESUBAT (ATF V BCONST)
    (LIST (CAR ATF) (IBALP_QESUBT (CADR ATF) V BCONST) (CADDR ATF))) 
(PUT 'IBALP_QESUBT 'NUMBER-OF-ARGS 3) 
(PUT 'IBALP_QESUBT 'DEFINED-ON-LINE '903) 
(PUT 'IBALP_QESUBT 'DEFINED-IN-FILE 'REDLOG/IBALP/IBALP.RED) 
(PUT 'IBALP_QESUBT 'PROCEDURE_TYPE
     '(ARROW (TIMES GENERAL GENERAL GENERAL) GENERAL)) 
(DE IBALP_QESUBT (U V BCONST)
    (COND ((EQ U V) BCONST) ((ATOM U) U)
          (T
           (CONS (CAR U)
                 (PROG (ARG FORALL-RESULT FORALL-ENDPTR)
                   (SETQ ARG (CDR U))
                   (COND ((NULL ARG) (RETURN NIL)))
                   (SETQ FORALL-RESULT
                           (SETQ FORALL-ENDPTR
                                   (CONS
                                    ((LAMBDA (ARG) (IBALP_QESUBT ARG V BCONST))
                                     (CAR ARG))
                                    NIL)))
                  LOOPLABEL
                   (SETQ ARG (CDR ARG))
                   (COND ((NULL ARG) (RETURN FORALL-RESULT)))
                   (RPLACD FORALL-ENDPTR
                           (CONS
                            ((LAMBDA (ARG) (IBALP_QESUBT ARG V BCONST))
                             (CAR ARG))
                            NIL))
                   (SETQ FORALL-ENDPTR (CDR FORALL-ENDPTR))
                   (GO LOOPLABEL)))))) 
(PUT 'IBALP_QEMKANS 'NUMBER-OF-ARGS 1) 
(PUT 'IBALP_QEMKANS 'DEFINED-ON-LINE '911) 
(PUT 'IBALP_QEMKANS 'DEFINED-IN-FILE 'REDLOG/IBALP/IBALP.RED) 
(PUT 'IBALP_QEMKANS 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE IBALP_QEMKANS (AN)
    (SORT
     (PROG (X FORALL-RESULT FORALL-ENDPTR)
       (SETQ X AN)
       (COND ((NULL X) (RETURN NIL)))
       (SETQ FORALL-RESULT
               (SETQ FORALL-ENDPTR
                       (CONS
                        ((LAMBDA (X) (LIST 'EQUAL (CAR X) (CAR (CADDR X))))
                         (CAR X))
                        NIL)))
      LOOPLABEL
       (SETQ X (CDR X))
       (COND ((NULL X) (RETURN FORALL-RESULT)))
       (RPLACD FORALL-ENDPTR
               (CONS
                ((LAMBDA (X) (LIST 'EQUAL (CAR X) (CAR (CADDR X)))) (CAR X))
                NIL))
       (SETQ FORALL-ENDPTR (CDR FORALL-ENDPTR))
       (GO LOOPLABEL))
     (FUNCTION
      (LAMBDA (X Y)
        (ORDP (LIST (CONS (CONS (CADR X) 1) 1))
              (LIST (CONS (CONS (CADR Y) 1) 1))))))) 
(PUT 'IBALP_QSCSAAT 'NUMBER-OF-ARGS 1) 
(PUT 'IBALP_QSCSAAT 'DEFINED-ON-LINE '915) 
(PUT 'IBALP_QSCSAAT 'DEFINED-IN-FILE 'REDLOG/IBALP/IBALP.RED) 
(PUT 'IBALP_QSCSAAT 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE IBALP_QSCSAAT (AT)
    (COND
     ((NOT (AND (IDP (CADR AT)) (MEMQ (CADDR AT) '(1 0))))
      (REDERR (LIST "ibalp_qscsaat: cannot process" AT)))
     (T (CONS (CADR AT) (CADDR AT))))) 
(PUT 'IBALP_QSSUBAT 'NUMBER-OF-ARGS 2) 
(PUT 'IBALP_QSSUBAT 'DEFINED-ON-LINE '921) 
(PUT 'IBALP_QSSUBAT 'DEFINED-IN-FILE 'REDLOG/IBALP/IBALP.RED) 
(PUT 'IBALP_QSSUBAT 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE IBALP_QSSUBAT (PL AT)
    (PROG (W)
      (COND
       ((NOT (AND (IDP (CADR AT)) (MEMQ (CADDR AT) '(1 0))))
        (REDERR (LIST "ibalp_qssubat: cannot process" AT))))
      (SETQ W (ASSOC (CADR AT) PL))
      (COND (W (RETURN (LIST (CAR AT) (CDR W) (CADDR AT)))))
      (RETURN AT))) 
(ENDMODULE) 