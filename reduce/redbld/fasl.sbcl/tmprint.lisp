(cl:declaim (cl:optimize cl:debug cl:safety))
(cl:declaim (sb-ext:muffle-conditions sb-ext:compiler-note cl:style-warning))
(MODULE (LIST 'TMPRINT)) 
(CREATE-PACKAGE '(TMPRINT) NIL) 
(FLUID
 '(*LIST *NAT *NOSPLIT *RATPRI *REVPRI CURLINE* OVERFLOWED* P** TESTING-WIDTH*
   TABLEVEL* SUMLEVEL* OUTPUTHANDLER* OUTPUTHANDLER-STACK* POSN* LONG* OBRKP*)) 
(GLOBAL '(*ERAISE CHARASSOC* INITL* NAT** SPARE* OFL*)) 
(SWITCH
 (LIST (LIST 'EQUAL 'LIST 'OFF) (LIST 'EQUAL 'RATPRI 'ON)
       (LIST 'EQUAL 'REVPRI 'OFF) (LIST 'EQUAL 'NOSPLIT 'ON))) 
(SWITCH (LIST 'ACN)) 
(FLUID
 '(FANCY-SWITCH-ON* FANCY-SWITCH-OFF* *FANCY-MODE FANCY-POS* FANCY-LINE*
   FANCY-PAGE* FANCY-BSTACK* *FANCY_TEX *FANCY-LOWER *MULTILINES)) 
(FLUID '(FANCY-TEXWIDTH FANCY-TEXPOS TEX-POINTSIZE)) 
(SWITCH (LIST 'FANCY_TEX)) 
(SETQ FANCY-SWITCH-ON* (INT2ID 16)) 
(SETQ FANCY-SWITCH-OFF* (INT2ID 17)) 
(SETQ *FANCY-LOWER NIL) 
(GLOBAL '(FANCY_LOWER_DIGITS FANCY_PRINT_DF)) 
(SHARE (LIST 'FANCY_LOWER_DIGITS)) 
(COND
 ((NULL FANCY_LOWER_DIGITS)
  (SETQ FANCY_LOWER_DIGITS (PROGN (SETQ ALGLIST* (CONS NIL NIL)) T)))) 
(SHARE (LIST 'FANCY_PRINT_DF)) 
(COND
 ((NULL FANCY_PRINT_DF)
  (SETQ FANCY_PRINT_DF (PROGN (SETQ ALGLIST* (CONS NIL NIL)) 'PARTIAL)))) 
(SWITCH (LIST 'FANCY)) 
(PUT 'FANCY 'SIMPFG '((T (FMP-SWITCH T)) (NIL (FMP-SWITCH NIL)))) 
(PUT 'FMP-SWITCH 'NUMBER-OF-ARGS 1) 
(PUT 'FMP-SWITCH 'DEFINED-ON-LINE '276) 
(PUT 'FMP-SWITCH 'DEFINED-IN-FILE 'TMPRINT/TMPRINT.RED) 
(PUT 'FMP-SWITCH 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE FMP-SWITCH (MODE)
    (COND
     (MODE
      (PROGN
       (COND
        ((NEQ OUTPUTHANDLER* 'FANCY-OUTPUT)
         (PROGN
          (SETQ OUTPUTHANDLER-STACK*
                  (CONS OUTPUTHANDLER* OUTPUTHANDLER-STACK*))
          (SETQ OUTPUTHANDLER* 'FANCY-OUTPUT)
          NIL)))
       (SETQ *FANCY T)))
     (T
      (PROGN
       (COND
        ((EQUAL OUTPUTHANDLER* 'FANCY-OUTPUT)
         (PROGN
          (SETQ OUTPUTHANDLER* (CAR OUTPUTHANDLER-STACK*))
          (SETQ OUTPUTHANDLER-STACK* (CDR OUTPUTHANDLER-STACK*))
          (SETQ *FANCY NIL)))
        (T (SETQ *FANCY NIL))))))) 
(FLUID '(LISPSYSTEM*)) 
(PUT 'TEXMACSP 'NUMBER-OF-ARGS 0) 
(PUT 'TEXMACSP 'DEFINED-ON-LINE '296) 
(PUT 'TEXMACSP 'DEFINED-IN-FILE 'TMPRINT/TMPRINT.RED) 
(PUT 'TEXMACSP 'PROCEDURE_TYPE '(ARROW UNIT GENERAL)) 
(DE TEXMACSP NIL
    (COND ((OR (MEMQ 'TEXMACS LISPSYSTEM*) (GETENV "TEXMACS_REDUCE_PATH")) T))) 
(COND ((NOT (GETD 'LINELENGTH-ORIG)) (COPYD 'LINELENGTH-ORIG 'LINELENGTH))) 
(REMD 'LINELENGTH) 
(PUT 'LINELENGTH 'NUMBER-OF-ARGS 1) 
(PUT 'LINELENGTH 'DEFINED-ON-LINE '308) 
(PUT 'LINELENGTH 'DEFINED-IN-FILE 'TMPRINT/TMPRINT.RED) 
(PUT 'LINELENGTH 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE LINELENGTH (A)
    (COND ((TEXMACSP) (LINELENGTH-ORIG 30000)) (T (LINELENGTH-ORIG A)))) 
(DE STRING-TO-LIST (A) (STRING2LIST A)) 
(PUT 'STRING-TO-LIST 'NUMBER-OF-ARGS 1) 
(PUT 'STRING-TO-LIST 'DEFINED-ON-LINE '354) 
(PUT 'STRING-TO-LIST 'DEFINED-IN-FILE 'TMPRINT/TMPRINT.RED) 
(PUT 'STRING-TO-LIST 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(PUTC 'STRING-TO-LIST 'INLINE '(LAMBDA (A) (STRING2LIST A))) 
(PUT 'RAW-PRINT-STRING 'NUMBER-OF-ARGS 1) 
(PUT 'RAW-PRINT-STRING 'DEFINED-ON-LINE '357) 
(PUT 'RAW-PRINT-STRING 'DEFINED-IN-FILE 'TMPRINT/TMPRINT.RED) 
(PUT 'RAW-PRINT-STRING 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE RAW-PRINT-STRING (S) (PRIN2 S)) 
(PUT 'FANCY-TEX 'NUMBER-OF-ARGS 1) 
(PUT 'FANCY-TEX 'DEFINED-ON-LINE '366) 
(PUT 'FANCY-TEX 'DEFINED-IN-FILE 'TMPRINT/TMPRINT.RED) 
(PUT 'FANCY-TEX 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE FANCY-TEX (S)
    (PROGN
     (PRIN2 FANCY-SWITCH-ON*)
     (RAW-PRINT-STRING S)
     (PRIN2T FANCY-SWITCH-OFF*)
     NIL)) 
(PUT 'FANCY-OUT-ITEM 'NUMBER-OF-ARGS 1) 
(PUT 'FANCY-OUT-ITEM 'DEFINED-ON-LINE '373) 
(PUT 'FANCY-OUT-ITEM 'DEFINED-IN-FILE 'TMPRINT/TMPRINT.RED) 
(PUT 'FANCY-OUT-ITEM 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE FANCY-OUT-ITEM (IT)
    (COND ((ATOM IT) (PRIN2 IT)) ((EQCAR IT 'ASCII) (WRITECHAR (CADR IT)))
          ((EQCAR IT 'TAB)
           (PROG (I)
             (SETQ I 1)
            LAB
             (COND ((MINUSP (DIFFERENCE (CDR IT) I)) (RETURN NIL)))
             (PRIN2 " ")
             (SETQ I (PLUS2 I 1))
             (GO LAB)))
          ((EQCAR IT 'BKT)
           (PROG (M B L N)
             (SETQ M (CADR IT))
             (SETQ B (CADDR IT))
             (SETQ N (CADDDR IT))
             (SETQ L (OR (EQUAL B '|(|) (EQUAL B '{)))
             (COND
              ((AND (NEQ B '|\\LEFT.|) (NEQ B '|\\RIGHT.|))
               (PROGN (COND (L (PRIN2 "\\left")) (T (PRIN2 "\\right"))))))
             (COND ((MEMBER B '({ })) (PRIN2 "\\")))
             (PRIN2 B)))
          (T (REDERR "unknown print item")))) 
(PUT 'SET-FANCYMODE 'NUMBER-OF-ARGS 1) 
(PUT 'SET-FANCYMODE 'DEFINED-ON-LINE '394) 
(PUT 'SET-FANCYMODE 'DEFINED-IN-FILE 'TMPRINT/TMPRINT.RED) 
(PUT 'SET-FANCYMODE 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE SET-FANCYMODE (BOOL)
    (COND
     ((NEQ BOOL *FANCY-MODE)
      (PROGN
       (SETQ *FANCY-MODE BOOL)
       (SETQ FANCY-POS* 0)
       (SETQ FANCY-TEXPOS 0)
       (SETQ FANCY-PAGE* NIL)
       (SETQ FANCY-LINE* NIL)
       (SETQ OVERFLOWED* NIL)
       (SETQ FANCY-LINE* '((TAB . 1)))
       (SETQ FANCY-POS* 10)
       (SETQ SUMLEVEL* (SETQ TABLEVEL* 1))
       NIL)))) 
(FLUID '(MOST_RECENT_FANCY *DISPLAY-FOR-COPY)) 
(SETQ *DISPLAY-FOR-COPY NIL) 
(PUT 'FANCY-OUTPUT 'NUMBER-OF-ARGS 2) 
(PUT 'FANCY-OUTPUT 'DEFINED-ON-LINE '416) 
(PUT 'FANCY-OUTPUT 'DEFINED-IN-FILE 'TMPRINT/TMPRINT.RED) 
(PUT 'FANCY-OUTPUT 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE FANCY-OUTPUT (MODE L)
    (COND
     ((OR OFL* (AND (EQUAL MODE 'MAPRIN) (GREATERP POSN* 2)) (NOT *NAT))
      ((LAMBDA (OUTPUTHANDLER*)
         (PROGN
          (COND ((EQUAL MODE 'MAPRIN) (MAPRIN L))
                ((EQUAL MODE 'ASSGNPRI) (ASSGNPRI (CAR L) (CADR L) (CADDR L)))
                ((EQUAL MODE 'PRIN2*) (PRIN2* L)) (T (TERPRI* L)))))
       NIL))
     (T
      (PROGN
       (SET-FANCYMODE T)
       (COND
        ((OR (EQUAL MODE 'MAPRIN) (EQUAL MODE 'PRIN2*))
         (PROGN (FANCY-MAPRIN0 L)))
        ((EQUAL MODE 'ASSGNPRI) (PROGN (FANCY-ASSGNPRI L) (FANCY-FLUSH)))
        (T (PROGN (FANCY-FLUSH)))))))) 
(PUT 'FANCY-ASSGNPRI 'NUMBER-OF-ARGS 1) 
(PUT 'FANCY-ASSGNPRI 'DEFINED-ON-LINE '510) 
(PUT 'FANCY-ASSGNPRI 'DEFINED-IN-FILE 'TMPRINT/TMPRINT.RED) 
(PUT 'FANCY-ASSGNPRI 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE FANCY-ASSGNPRI (U)
    (PROG (X Y)
      (SETQ X (GETRTYPE (CAR U)))
      (SETQ Y (GET (GET X 'TAG) 'FANCY-ASSGNPRI))
      (RETURN (COND (Y (APPLY1 Y U)) (T (FANCY-MAPRIN0 (CAR U))))))) 
(PUT 'FANCY-OUT-HEADER 'NUMBER-OF-ARGS 0) 
(PUT 'FANCY-OUT-HEADER 'DEFINED-ON-LINE '518) 
(PUT 'FANCY-OUT-HEADER 'DEFINED-IN-FILE 'TMPRINT/TMPRINT.RED) 
(PUT 'FANCY-OUT-HEADER 'PROCEDURE_TYPE '(ARROW UNIT GENERAL)) 
(DE FANCY-OUT-HEADER NIL
    (PROGN
     (COND ((GREATERP (POSN) 0) (TERPRI)))
     (PRIN2 (INT2ID 2))
     (PRIN2 "latex:\\black$\\displaystyle "))) 
(PUT 'FANCY-OUT-TRAILER 'NUMBER-OF-ARGS 0) 
(PUT 'FANCY-OUT-TRAILER 'DEFINED-ON-LINE '526) 
(PUT 'FANCY-OUT-TRAILER 'DEFINED-IN-FILE 'TMPRINT/TMPRINT.RED) 
(PUT 'FANCY-OUT-TRAILER 'PROCEDURE_TYPE '(ARROW UNIT GENERAL)) 
(DE FANCY-OUT-TRAILER NIL (PROGN (PRIN2 "$") (PRIN2 (INT2ID 5)))) 
(PUT 'TEX_STRING 'NUMBER-OF-ARGS 1) 
(PUT 'TEX_STRING 'DEFINED-ON-LINE '537) 
(PUT 'TEX_STRING 'DEFINED-IN-FILE 'TMPRINT/TMPRINT.RED) 
(PUT 'TEX_STRING 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE TEX_STRING (S) (PROGN (FANCY-OUT-HEADER) (PRIN2 S) (FANCY-OUT-TRAILER) NIL)) 
(FLAG '(TEX_STRING) 'OPFN) 
(PUT 'BALANCE-PARENS 'NUMBER-OF-ARGS 1) 
(PUT 'BALANCE-PARENS 'DEFINED-ON-LINE '545) 
(PUT 'BALANCE-PARENS 'DEFINED-IN-FILE 'TMPRINT/TMPRINT.RED) 
(PUT 'BALANCE-PARENS 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE BALANCE-PARENS (LINE)
    (PROG (R DEPTH B)
      (SETQ DEPTH 0)
      (PROG (S)
        (SETQ S LINE)
       LAB
        (COND ((NULL S) (RETURN NIL)))
        ((LAMBDA (S)
           (COND
            ((EQCAR S 'BKT)
             (PROGN
              (SETQ B (CADDR S))
              (COND
               ((OR (EQUAL B '|(|) (EQUAL B '{)) (SETQ DEPTH (PLUS DEPTH 1)))
               (T (SETQ DEPTH (DIFFERENCE DEPTH 1))))))))
         (CAR S))
        (SETQ S (CDR S))
        (GO LAB))
      (PROG ()
       WHILELABEL
        (COND ((NOT (GREATERP DEPTH 0)) (RETURN NIL)))
        (PROGN
         (SETQ R (CONS '(BKT NIL |\\RIGHT.| 1) R))
         (SETQ DEPTH (DIFFERENCE DEPTH 1)))
        (GO WHILELABEL))
      (PROG ()
       WHILELABEL
        (COND ((NOT LINE) (RETURN NIL)))
        (PROGN (SETQ R (CONS (CAR LINE) R)) (SETQ LINE (CDR LINE)))
        (GO WHILELABEL))
      (PROG ()
       WHILELABEL
        (COND ((NOT (LESSP DEPTH 0)) (RETURN NIL)))
        (PROGN
         (SETQ R (CONS '(BKT NIL |\\LEFT.| 1) R))
         (SETQ DEPTH (PLUS DEPTH 1)))
        (GO WHILELABEL))
      (RETURN R))) 
(PUT 'FANCY-FLUSH_ 'NUMBER-OF-ARGS 0) 
(PUT 'FANCY-FLUSH_ 'DEFINED-ON-LINE '628) 
(PUT 'FANCY-FLUSH_ 'DEFINED-IN-FILE 'TMPRINT/TMPRINT.RED) 
(PUT 'FANCY-FLUSH_ 'PROCEDURE_TYPE '(ARROW UNIT GENERAL)) 
(DE FANCY-FLUSH_ NIL
    ((LAMBDA (*LOWER)
       (PROGN
        (FANCY-TERPRI* T)
        (PROG (LINE)
          (SETQ LINE (REVERSE FANCY-PAGE*))
         LAB
          (COND ((NULL LINE) (RETURN NIL)))
          ((LAMBDA (LINE)
             (COND
              ((AND LINE (NOT (EQCAR (CAR LINE) 'TAB)))
               (PROGN
                (FANCY-OUT-HEADER)
                (PROG (IT)
                  (SETQ IT (BALANCE-PARENS LINE))
                 LAB
                  (COND ((NULL IT) (RETURN NIL)))
                  ((LAMBDA (IT) (FANCY-OUT-ITEM IT)) (CAR IT))
                  (SETQ IT (CDR IT))
                  (GO LAB))
                (FANCY-OUT-TRAILER)
                NIL))))
           (CAR LINE))
          (SETQ LINE (CDR LINE))
          (GO LAB))
        (SET-FANCYMODE NIL)
        NIL))
     NIL)) 
(PUT 'FANCY-FLUSH 'NUMBER-OF-ARGS 0) 
(PUT 'FANCY-FLUSH 'DEFINED-ON-LINE '639) 
(PUT 'FANCY-FLUSH 'DEFINED-IN-FILE 'TMPRINT/TMPRINT.RED) 
(PUT 'FANCY-FLUSH 'PROCEDURE_TYPE '(ARROW UNIT GENERAL)) 
(DE FANCY-FLUSH NIL
    (PROG (*LOWER DONE)
      (FANCY-TERPRI* T)
      (PROG (LINES)
        (SETQ LINES (REVERSE FANCY-PAGE*))
       LAB
        (COND ((NULL LINES) (RETURN NIL)))
        (COND
         ((AND (CAR LINES) (NOT (EQCAR (CAAR LINES) 'TAB)))
          (PROGN
           (COND ((NULL *MULTILINES) (FANCY-OUT-HEADER))
                 ((NULL DONE) (PROGN (SETQ DONE T) (FANCY-OUT-HEADER))))
           (PROG (IT)
             (SETQ IT (BALANCE-PARENS (CAR LINES)))
            LAB
             (COND ((NULL IT) (RETURN NIL)))
             ((LAMBDA (IT) (FANCY-OUT-ITEM IT)) (CAR IT))
             (SETQ IT (CDR IT))
             (GO LAB))
           (COND ((AND (CDR LINES) *MULTILINES) (PRIN2 " \\\\ "))
                 (T (FANCY-OUT-TRAILER)))
           NIL)))
        (SETQ LINES (CDR LINES))
        (GO LAB))
      (SET-FANCYMODE NIL))) 
(PUT 'FANCY-SPECIAL-SYMBOL 'NUMBER-OF-ARGS 2) 
(PUT 'FANCY-SPECIAL-SYMBOL 'DEFINED-ON-LINE '659) 
(PUT 'FANCY-SPECIAL-SYMBOL 'DEFINED-IN-FILE 'TMPRINT/TMPRINT.RED) 
(PUT 'FANCY-SPECIAL-SYMBOL 'PROCEDURE_TYPE
     '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE FANCY-SPECIAL-SYMBOL (U N)
    (COND
     ((NUMBERP U)
      (PROGN
       (FANCY-PRIN2* "\\symb{" N)
       (FANCY-PRIN2* U 0)
       (FANCY-PRIN2* "}" 0)
       NIL))
     (T (FANCY-PRIN2* U N)))) 
(PUT 'FANCY-PRIN2 'NUMBER-OF-ARGS 1) 
(PUT 'FANCY-PRIN2 'DEFINED-ON-LINE '667) 
(PUT 'FANCY-PRIN2 'DEFINED-IN-FILE 'TMPRINT/TMPRINT.RED) 
(PUT 'FANCY-PRIN2 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE FANCY-PRIN2 (U) (FANCY-PRIN2* U NIL)) 
(SETQ FANCY-TEXWIDTH 500) 
(PUT 'TEXWIDTH 'NUMBER-OF-ARGS 1) 
(PUT 'TEXWIDTH 'DEFINED-ON-LINE '727) 
(PUT 'TEXWIDTH 'DEFINED-IN-FILE 'TMPRINT/TMPRINT.RED) 
(PUT 'TEXWIDTH 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE TEXWIDTH (N)
    (PROG (OLD)
      (SETQ OLD FANCY-TEXWIDTH)
      (COND ((AND (FIXP N) (GEQ N 100)) (SETQ FANCY-TEXWIDTH N)))
      (RETURN OLD))) 
(FLAG '(TEXWIDTH) 'OPFN) 
(SETQ TEX-POINTSIZE 10) 
(PUT 'TEXPOINTSIZE 'NUMBER-OF-ARGS 1) 
(PUT 'TEXPOINTSIZE 'DEFINED-ON-LINE '745) 
(PUT 'TEXPOINTSIZE 'DEFINED-IN-FILE 'TMPRINT/TMPRINT.RED) 
(PUT 'TEXPOINTSIZE 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE TEXPOINTSIZE (N)
    (PROG (OLD)
      (SETQ OLD TEX-POINTSIZE)
      (COND ((OR (EQUAL N 10) (EQUAL N 12)) (SETQ TEX-POINTSIZE N)))
      (RETURN OLD))) 
(FLAG '(TEXPOINTSIZE) 'OPFN) 
(FLUID '(CM-WIDTHS*)) 
(SETQ CM-WIDTHS*
        (LIST
         (LIST "cmex10" (MINUS 89033454) 10000
               (LIST-TO-VECTOR
                '(4583 4583 4166 4166 4722 4722 4722 4722 5833 5833 4722 4722
                  3333 5555 5777 5777 5972 5972 7361 7361 5277 5277 5833 5833
                  5833 5833 7500 7500 7500 7500 10444 10444 7916 7916 5833 5833
                  6388 6388 6388 6388 8055 8055 8055 8055 12777 12777 8111 8111
                  8750 8750 6666 6666 6666 6666 6666 6666 8888 8888 8888 8888
                  8888 8888 8888 6666 8750 8750 8750 8750 6111 6111 8333 11111
                  4722 5555 11111 15111 11111 15111 11111 15111 10555 9444 4722
                  8333 8333 8333 8333 8333 14444 12777 5555 11111 11111 11111
                  11111 11111 9444 12777 5555 10000 14444 5555 10000 14444 4722
                  4722 5277 5277 5277 5277 6666 6666 10000 10000 10000 10000
                  10555 10555 10555 7777 6666 6666 4500 4500 4500 4500 7777
                  7777)))
         (LIST "cmmi10" (MINUS 1725937524) 10000
               (LIST-TO-VECTOR
                '(6152 8333 7627 6944 7423 8312 7798 5833 6666 6122 7723 6397
                  5656 5177 4444 4059 4375 4965 4694 3539 5761 5833 6025 4939
                  4375 5700 5170 5714 4371 5402 5958 6256 6513 6224 4663 5914
                  8281 5170 3628 6541 10000 10000 10000 10000 2777 2777 5000
                  5000 5000 5000 5000 5000 5000 5000 5000 5000 5000 5000 2777
                  2777 7777 5000 7777 5000 5309 7500 7585 7147 8279 7381 6430
                  7862 8312 4395 5545 8493 6805 9701 8034 7627 6420 7905 7592
                  6131 5843 6827 5833 9444 8284 5805 6826 3888 3888 3888 10000
                  10000 4166 5285 4291 4327 5204 4656 4895 4769 5761 3445 4118
                  5206 2983 8780 6002 4847 5031 4464 4511 4687 3611 5724 4847
                  7159 5715 4902 4650 3224 3840 6364 5000 2777)))
         (LIST "cmr10" 1274110073 10000
               (LIST-TO-VECTOR
                '(6250 8333 7777 6944 6666 7500 7222 7777 7222 7777 7222 5833
                  5555 5555 8333 8333 2777 3055 5000 5000 5000 5000 5000 7500
                  4444 5000 7222 7777 5000 9027 10138 7777 2777 2777 5000 8333
                  5000 8333 7777 2777 3888 3888 5000 7777 2777 3333 2777 5000
                  5000 5000 5000 5000 5000 5000 5000 5000 5000 5000 2777 2777
                  2777 7777 4722 4722 7777 7500 7083 7222 7638 6805 6527 7847
                  7500 3611 5138 7777 6250 9166 7500 7777 6805 7777 7361 5555
                  7222 7500 7500 10277 7500 7500 6111 2777 5000 2777 5000 2777
                  2777 5000 5555 4444 5555 4444 3055 5000 5555 2777 3055 5277
                  2777 8333 5555 5000 5555 5277 3916 3944 3888 5555 5277 7222
                  5277 5277 4444 5000 10000 5000 5000 5000)))
         (LIST "cmsy10" 555887770 10000
               (LIST-TO-VECTOR
                '(7777 2777 7777 5000 7777 5000 7777 7777 7777 7777 7777 7777
                  7777 10000 5000 5000 7777 7777 7777 7777 7777 7777 7777 7777
                  7777 7777 7777 7777 10000 10000 7777 7777 10000 10000 5000
                  5000 10000 10000 10000 7777 10000 10000 6111 6111 10000 10000
                  10000 7777 2749 10000 6666 6666 8888 8888 0 0 5555 5555 6666
                  5000 7222 7222 7777 7777 6111 7984 6568 5265 7713 5277 7187
                  5948 8445 5445 6777 7619 6897 12009 8204 7961 6955 8166 8475
                  6055 5446 6258 6127 9877 7132 6683 7247 6666 6666 6666 6666
                  6666 6111 6111 4444 4444 4444 4444 5000 5000 3888 3888 2777
                  5000 5000 6111 5000 2777 8333 7500 8333 4166 6666 6666 7777
                  7777 4444 4444 4444 6111 7777 7777 7777 7777))))) 
(PROG (X)
  (SETQ X
          '(|\\SQRT| |\\EQUIV| |\\ALPHA| |\\BETA| |\\GAMMA| |\\DELTA|
            |\\VAREPSILON| |\\ZETA| |\\ETA| |\\THETA| |\\IOTA| |\\VARKAPPA|
            |\\LAMBDA| |\\MU| |\\NU| |\\XI| |\\PI| |\\RHO| |\\SIGMA| |\\TAU|
            |\\UPSILON| |\\PHI| |\\CHI| |\\PSI| |\\OMEGA| |\\MATHIT{A}|
            |\\MATHIT{B}| |\\CHI | |\\DELTA | |\\MATHIT{E}| |\\PHI | |\\GAMMA |
            |\\MATHIT{H}| |\\MATHIT{I}| |\\VARTHETA| |\\KAPPA | |\\LAMBDA |
            |\\MATHIT{M}| |\\MATHIT{N}| |\\MATHIT{O}| |\\PI | |\\THETA |
            |\\MATHIT{R}| |\\SIGMA | |\\TAU | |\\UPSILON | |\\OMEGA | |\\XI |
            |\\PSI | |\\MATHIT{Z}| |\\VARPHI | |\\POUND| |\\|))
 LAB
  (COND ((NULL X) (RETURN NIL)))
  ((LAMBDA (X) (PUT X 'TEXCHARWIDTH 1)) (CAR X))
  (SETQ X (CDR X))
  (GO LAB)) 
(PUT '|\\NOT| 'TEXCHARWIDTH 0) 
(PUT '|\\BAR| 'TEXCHARWIDTH 0) 
(PUT '|\\OVERLINE| 'TEXCHARWIDTH 0) 
(PUT '|\\UNDERLINE| 'TEXCHARWIDTH 0) 
(PROG (X)
  (SETQ X
          '(|\\SIN| |\\COS| |\\TAN| |\\COT| |\\SEC| |\\CSC| |\\ARCSIN|
            |\\ARCCOS| |\\ARCTAN| |\\ARCCOT| |\\ARCSEC| |\\ARCCSC| |\\SINH|
            |\\COSH| |\\TANH| |\\COTH| |\\SECH| |\\CSCH| |\\ARCSINH|
            |\\ARCCOSH| |\\ARCTANH| |\\ARCCOTH| |\\ARCSECH| |\\ARCCSCH| |\\EXP|
            |\\LOG| |\\LN| |\\MAX| |\\MIN|))
 LAB
  (COND ((NULL X) (RETURN NIL)))
  ((LAMBDA (X) (PUT X 'TEXCHARWIDTH (SUB1 (LENGTH (EXPLODE2 X))))) (CAR X))
  (SETQ X (CDR X))
  (GO LAB)) 
(PUT 'FANCY-PRIN2* 'NUMBER-OF-ARGS 2) 
(PUT 'FANCY-PRIN2* 'DEFINED-ON-LINE '886) 
(PUT 'FANCY-PRIN2* 'DEFINED-IN-FILE 'TMPRINT/TMPRINT.RED) 
(PUT 'FANCY-PRIN2* 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE FANCY-PRIN2* (U N)
    (COND
     ((AND (ATOM U) (EQCAR (EXPLODE2 U) '|\\|))
      (PROGN
       (SETQ N
               (OR (AND (IDP U) (GET U 'TEXCHARWIDTH))
                   (AND (STRINGP U) (GET (INTERN U) 'TEXCHARWIDTH))))
       (COND (N (SETQ FANCY-POS* (PLUS FANCY-POS* N))))
       (COND
        ((GREATERP FANCY-POS* (TIMES 2 (PLUS (LINELENGTH NIL) 1)))
         (SETQ OVERFLOWED* T)))
       (SETQ FANCY-LINE* (CONS U FANCY-LINE*))))
     ((AND (NUMBERP U) (NOT TESTING-WIDTH*)) (FANCY-PRIN2NUMBER U))
     (T
      ((LAMBDA (*LOWER)
         (PROG (STR ID L)
           (SETQ L 0)
           (SETQ STR (STRINGP U))
           (SETQ ID (AND (IDP U) (NOT (DIGIT U))))
           (SETQ LONG* NIL)
           (SETQ U
                   (COND
                    ((ATOM U)
                     (PROGN
                      (COND (*FANCY-LOWER (EXPLODE2LC U)) (T (EXPLODE2 U)))))
                    (T (LIST U))))
           (COND ((CDR U) (SETQ LONG* T)))
           (COND ((EQUAL (CAR U) '|\\|) (SETQ LONG* NIL)))
           (SETQ L (COND ((NUMBERP N) N) (T (TIMES 2 (LENGTH U)))))
           (COND
            ((AND ID (NOT (NUMBERP N)))
             (SETQ U (FANCY-LOWER-DIGITS (FANCY-ESC U)))))
           (COND (LONG* (SETQ FANCY-LINE* (CONS '|\\MATHRM{| FANCY-LINE*))))
           (PROG (X)
             (SETQ X U)
            LAB
             (COND ((NULL X) (RETURN NIL)))
             ((LAMBDA (X)
                (PROGN
                 (COND
                  ((AND STR (OR (EQUAL X BLANK) (EQUAL X '_)))
                   (SETQ FANCY-LINE* (CONS '|\\| FANCY-LINE*))))
                 (SETQ FANCY-LINE*
                         (CONS
                          (COND ((AND ID *FANCY-LOWER) (RED-CHAR-DOWNCASE X))
                                (T X))
                          FANCY-LINE*))
                 NIL))
              (CAR X))
             (SETQ X (CDR X))
             (GO LAB))
           (COND (LONG* (SETQ FANCY-LINE* (CONS '} FANCY-LINE*))))
           (SETQ FANCY-POS* (PLUS FANCY-POS* L))
           (COND
            ((GREATERP FANCY-POS* (TIMES 2 (PLUS (LINELENGTH NIL) 1)))
             (SETQ OVERFLOWED* T)))))
       *LOWER)))) 
(PUT 'FANCY-LAST-SYMBOL 'NUMBER-OF-ARGS 0) 
(PUT 'FANCY-LAST-SYMBOL 'DEFINED-ON-LINE '921) 
(PUT 'FANCY-LAST-SYMBOL 'DEFINED-IN-FILE 'TMPRINT/TMPRINT.RED) 
(PUT 'FANCY-LAST-SYMBOL 'PROCEDURE_TYPE '(ARROW UNIT GENERAL)) 
(DE FANCY-LAST-SYMBOL NIL (COND (FANCY-LINE* (CAR FANCY-LINE*)))) 
(SETQ CHARASSOC*
        '((|a| . A) (|b| . B) (|c| . C) (|d| . D) (|e| . E) (|f| . F) (|g| . G)
          (|h| . H) (|i| . I) (|j| . J) (|k| . K) (|l| . L) (|m| . M) (|n| . N)
          (|o| . O) (|p| . P) (|q| . Q) (|r| . R) (|s| . S) (|t| . T) (|u| . U)
          (|v| . V) (|w| . W) (|x| . X) (|y| . Y) (|z| . Z))) 
(PUT 'FANCY-PRIN2NUMBER 'NUMBER-OF-ARGS 1) 
(PUT 'FANCY-PRIN2NUMBER 'DEFINED-ON-LINE '934) 
(PUT 'FANCY-PRIN2NUMBER 'DEFINED-IN-FILE 'TMPRINT/TMPRINT.RED) 
(PUT 'FANCY-PRIN2NUMBER 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE FANCY-PRIN2NUMBER (U)
    (COND (TESTING-WIDTH* (FANCY-PRIN2* U T))
          (T (FANCY-PRIN2NUMBER1 (COND ((ATOM U) (EXPLODE2 U)) (T U)))))) 
(PUT 'FANCY-PRIN2NUMBER1 'NUMBER-OF-ARGS 1) 
(PUT 'FANCY-PRIN2NUMBER1 'DEFINED-ON-LINE '940) 
(PUT 'FANCY-PRIN2NUMBER1 'DEFINED-IN-FILE 'TMPRINT/TMPRINT.RED) 
(PUT 'FANCY-PRIN2NUMBER1 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE FANCY-PRIN2NUMBER1 (U)
    (PROG (C LL)
      (SETQ C 0)
      (SETQ LL 0)
      (SETQ LL (TIMES 2 (PLUS (LINELENGTH NIL) 1)))
      (PROG ()
       WHILELABEL
        (COND ((NOT U) (RETURN NIL)))
        (PROGN
         (SETQ C (PLUS C 1))
         (COND
          ((AND (GREATERP C 10) (GREATERP FANCY-POS* LL)) (FANCY-TERPRI* T)))
         (FANCY-PRIN2* (CAR U) 2)
         (SETQ U (CDR U))
         NIL)
        (GO WHILELABEL)))) 
(PUT 'FANCY-ESC 'NUMBER-OF-ARGS 1) 
(PUT 'FANCY-ESC 'DEFINED-ON-LINE '950) 
(PUT 'FANCY-ESC 'DEFINED-IN-FILE 'TMPRINT/TMPRINT.RED) 
(PUT 'FANCY-ESC 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE FANCY-ESC (U)
    (COND ((NOT (MEMQ '_ U)) U)
          (T
           ((LAMBDA (W) (COND ((EQ (CAR U) '_) (CONS '|\\| W)) (T W)))
            (CONS (CAR U) (FANCY-ESC (CDR U))))))) 
(PUT 'FANCY-LOWER-DIGITS 'NUMBER-OF-ARGS 1) 
(PUT 'FANCY-LOWER-DIGITS 'DEFINED-ON-LINE '955) 
(PUT 'FANCY-LOWER-DIGITS 'DEFINED-IN-FILE 'TMPRINT/TMPRINT.RED) 
(PUT 'FANCY-LOWER-DIGITS 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE FANCY-LOWER-DIGITS (U)
    ((LAMBDA (M)
       (COND ((NULL M) U)
             ((OR (EQUAL M 'ALL) (FANCY-LOWER-DIGITSTRAIL U NIL))
              (FANCY-LOWER-DIGITS1 U NIL))
             (T U)))
     (FANCY-MODE 'FANCY_LOWER_DIGITS))) 
(PUT 'FANCY-LOWER-DIGITS1 'NUMBER-OF-ARGS 2) 
(PUT 'FANCY-LOWER-DIGITS1 'DEFINED-ON-LINE '962) 
(PUT 'FANCY-LOWER-DIGITS1 'DEFINED-IN-FILE 'TMPRINT/TMPRINT.RED) 
(PUT 'FANCY-LOWER-DIGITS1 'PROCEDURE_TYPE
     '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE FANCY-LOWER-DIGITS1 (U S)
    (PROG (C Q R W X)
     LOOP
      (COND (U (PROGN (SETQ C (CAR U)) (SETQ U (CDR U)))) (T (SETQ C NIL)))
      (COND
       ((NULL S)
        (COND ((AND (NOT (DIGIT C)) C) (SETQ W (CONS C W)))
              (T
               (PROGN
                (SETQ W (REVERSIP W))
                (SETQ Q (INTERN (COMPRESS W)))
                (COND
                 ((AND (EQUAL (EXPLODE Q) W)
                       (STRINGP (SETQ X (GET Q 'FANCY-SPECIAL-SYMBOL))))
                  (SETQ W (EXPLODE2 X))))
                (COND
                 ((CDR W)
                  (COND ((EQUAL (CAR W) '|\\|) (SETQ LONG* NIL))
                        (T (SETQ LONG* T))))
                 (T (SETQ LONG* NIL)))
                (SETQ R (NCONC R W))
                (COND ((DIGIT C) (PROGN (SETQ S T) (SETQ W (LIST C))))
                      (T (SETQ W NIL)))
                NIL))))
       ((DIGIT C) (SETQ W (CONS C W)))
       (T
        (PROGN
         (SETQ W (CONS '_ (CONS '{ (REVERSIP (CONS '} W)))))
         (SETQ R (NCONC R W))
         (COND (C (PROGN (SETQ S NIL) (SETQ W (LIST C)))) (T (SETQ W NIL)))
         NIL)))
      (COND (W (GO LOOP)))
      (RETURN R))) 
(PUT 'FANCY-LOWER-DIGITSTRAIL 'NUMBER-OF-ARGS 2) 
(PUT 'FANCY-LOWER-DIGITSTRAIL 'DEFINED-ON-LINE '997) 
(PUT 'FANCY-LOWER-DIGITSTRAIL 'DEFINED-IN-FILE 'TMPRINT/TMPRINT.RED) 
(PUT 'FANCY-LOWER-DIGITSTRAIL 'PROCEDURE_TYPE
     '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE FANCY-LOWER-DIGITSTRAIL (U S)
    (COND ((NULL U) S)
          ((AND (NOT S) (DIGIT (CAR U))) (FANCY-LOWER-DIGITSTRAIL (CDR U) T))
          ((AND S (NOT (DIGIT (CAR U)))) NIL)
          (T (FANCY-LOWER-DIGITSTRAIL (CDR U) S)))) 
(PUT 'FANCY-TERPRI* 'NUMBER-OF-ARGS 1) 
(PUT 'FANCY-TERPRI* 'DEFINED-ON-LINE '1004) 
(PUT 'FANCY-TERPRI* 'DEFINED-IN-FILE 'TMPRINT/TMPRINT.RED) 
(PUT 'FANCY-TERPRI* 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE FANCY-TERPRI* (U)
    (PROGN
     (COND (FANCY-LINE* (SETQ FANCY-PAGE* (CONS FANCY-LINE* FANCY-PAGE*))))
     (SETQ FANCY-POS* (TIMES TABLEVEL* 10))
     (SETQ FANCY-TEXPOS (TIMES TABLEVEL* 30000))
     (SETQ FANCY-LINE* (LIST (CONS 'TAB TABLEVEL*)))
     (SETQ OVERFLOWED* NIL))) 
(PUT 'FANCY-BEGIN 'NUMBER-OF-ARGS 0) 
(PUT 'FANCY-BEGIN 'DEFINED-ON-LINE '1031) 
(PUT 'FANCY-BEGIN 'DEFINED-IN-FILE 'TMPRINT/TMPRINT.RED) 
(PUT 'FANCY-BEGIN 'PROCEDURE_TYPE '(ARROW UNIT GENERAL)) 
(DE FANCY-BEGIN NIL (LIST FANCY-POS* FANCY-LINE* FANCY-TEXPOS)) 
(PUT 'FANCY-END 'NUMBER-OF-ARGS 2) 
(PUT 'FANCY-END 'DEFINED-ON-LINE '1036) 
(PUT 'FANCY-END 'DEFINED-IN-FILE 'TMPRINT/TMPRINT.RED) 
(PUT 'FANCY-END 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE FANCY-END (R S)
    (PROGN
     (COND
      ((EQUAL R 'FAILED)
       (PROGN
        (SETQ FANCY-LINE* (CAR S))
        (SETQ FANCY-POS* (CADR S))
        (SETQ FANCY-TEXPOS (CADDR S)))))
     R)) 
(PUT 'FANCY-MODE 'NUMBER-OF-ARGS 1) 
(PUT 'FANCY-MODE 'DEFINED-ON-LINE '1044) 
(PUT 'FANCY-MODE 'DEFINED-IN-FILE 'TMPRINT/TMPRINT.RED) 
(PUT 'FANCY-MODE 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE FANCY-MODE (U)
    (PROG (M)
      (SETQ M (LISPEVAL U))
      (COND ((EQCAR M '*SQ) (SETQ M (REVAL1 M T))))
      (RETURN M))) 
(PUT 'FANCY-MAPRIN0 'NUMBER-OF-ARGS 1) 
(PUT 'FANCY-MAPRIN0 'DEFINED-ON-LINE '1055) 
(PUT 'FANCY-MAPRIN0 'DEFINED-IN-FILE 'TMPRINT/TMPRINT.RED) 
(PUT 'FANCY-MAPRIN0 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE FANCY-MAPRIN0 (U) ((LAMBDA (*LOWER) (FANCY-MAPRINT U 0)) NIL)) 
(PUT 'FANCY-MAPRINT 'NUMBER-OF-ARGS 2) 
(PUT 'FANCY-MAPRINT 'DEFINED-ON-LINE '1059) 
(PUT 'FANCY-MAPRINT 'DEFINED-IN-FILE 'TMPRINT/TMPRINT.RED) 
(PUT 'FANCY-MAPRINT 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE FANCY-MAPRINT (L P**)
    ((LAMBDA (OBRKP*)
       (PROG (P X W POS TPOS FL)
         (SETQ P P**)
         (COND ((NULL L) (RETURN NIL)))
         (COND ((ATOM L) (RETURN (FANCY-MAPRINT-ATOM L P))))
         (SETQ POS FANCY-POS*)
         (SETQ TPOS FANCY-TEXPOS)
         (SETQ FL FANCY-LINE*)
         (COND ((NOT (ATOM (CAR L))) (RETURN (FANCY-MAPRINT (CAR L) P))))
         (SETQ L (FANCY-CONVERT L NIL))
         (COND
          ((SETQ X (GET (CAR L) 'FANCY-REFORM))
           (RETURN (FANCY-MAPRINT (APPLY1 X L) P))))
         (COND
          ((OR
            (AND (SETQ X (GET (CAR L) 'FANCY-PPRIFN))
                 (NOT (EQ (APPLY2 X L P) 'FAILED)))
            (AND (SETQ X (GET (CAR L) 'FANCY-PRIFN))
                 (NOT (EQ (APPLY1 X L) 'FAILED)))
            (AND (GET (CAR L) 'PRINT-FORMAT)
                 (NEQ (FANCY-PRINT-FORMAT L P) 'FAILED)))
           (RETURN NIL)))
         (COND
          ((OR (AND TESTING-WIDTH* OVERFLOWED*) (EQUAL W 'FAILED))
           (RETURN (FANCY-FAIL POS TPOS FL))))
         (SETQ L (FANCY-CONVERT L 'INFIX))
         (COND
          ((FLAGP (CAR L) 'PRINT-INDEXED)
           (PROGN
            (FANCY-PREFIX-OPERATOR (CAR L))
            (SETQ W (FANCY-PRINT-INDEXLIST (CDR L)))))
          ((SETQ X (GET (CAR L) 'INFIX))
           (PROGN
            (SETQ P (NOT (GREATERP X P)))
            (SETQ W
                    (COND
                     (P
                      (FANCY-IN-BRACKETS
                       (LIST 'FANCY-INPRINT (MKQUOTE (CAR L)) X
                             (MKQUOTE (CDR L)))
                       '|(| '|)|))
                     (T (FANCY-INPRINT (CAR L) X (CDR L)))))
            NIL))
          ((SETQ X (GET (CAR L) 'FANCY-FLATPRIFN)) (SETQ W (APPLY X (LIST L))))
          (T
           (PROGN
            (SETQ W (FANCY-PREFIX-OPERATOR (CAR L)))
            (SETQ OBRKP* NIL)
            (COND
             ((NEQ W 'FAILED)
              (SETQ W (FANCY-PRINT-FUNCTION-ARGUMENTS (CDR L)))))
            NIL)))
         (RETURN
          (COND
           ((OR (AND TESTING-WIDTH* OVERFLOWED*) (EQUAL W 'FAILED))
            (FANCY-FAIL POS TPOS FL))
           (T NIL)))))
     OBRKP*)) 
(PUT 'FANCY-CONVERT 'NUMBER-OF-ARGS 2) 
(PUT 'FANCY-CONVERT 'DEFINED-ON-LINE '1120) 
(PUT 'FANCY-CONVERT 'DEFINED-IN-FILE 'TMPRINT/TMPRINT.RED) 
(PUT 'FANCY-CONVERT 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE FANCY-CONVERT (L M)
    (COND
     ((AND (EQCAR L 'EXPT) (EQUAL (CADR L) 'E)
           (OR (EQUAL M 'INFIX) (ZEROP (TREESIZEP1 L 20))))
      (LIST 'EXP (CADDR L)))
     (T L))) 
(PUT 'FANCY-PRINT-FUNCTION-ARGUMENTS 'NUMBER-OF-ARGS 1) 
(PUT 'FANCY-PRINT-FUNCTION-ARGUMENTS 'DEFINED-ON-LINE '1127) 
(PUT 'FANCY-PRINT-FUNCTION-ARGUMENTS 'DEFINED-IN-FILE 'TMPRINT/TMPRINT.RED) 
(PUT 'FANCY-PRINT-FUNCTION-ARGUMENTS 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE FANCY-PRINT-FUNCTION-ARGUMENTS (U)
    (FANCY-IN-BRACKETS
     (AND U (LIST 'FANCY-INPRINT (MKQUOTE '*COMMA*) 0 (MKQUOTE U))) '|(| '|)|)) 
(PUT 'FANCY-MAPRINT-ATOM 'NUMBER-OF-ARGS 2) 
(PUT 'FANCY-MAPRINT-ATOM 'DEFINED-ON-LINE '1133) 
(PUT 'FANCY-MAPRINT-ATOM 'DEFINED-IN-FILE 'TMPRINT/TMPRINT.RED) 
(PUT 'FANCY-MAPRINT-ATOM 'PROCEDURE_TYPE
     '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE FANCY-MAPRINT-ATOM (L P)
    (PROG (POS TPOS FL W)
      (SETQ POS FANCY-POS*)
      (SETQ TPOS FANCY-TEXPOS)
      (SETQ FL FANCY-LINE*)
      (SETQ W
              (PROG (X)
                (COND
                 ((SETQ X (GET L 'FANCY-SPECIAL-SYMBOL))
                  (FANCY-SPECIAL-SYMBOL X
                   (OR (GET L 'FANCY-SPECIAL-SYMBOL-SIZE) 2)))
                 ((VECTORP L)
                  (PROGN
                   (FANCY-PRIN2* "[" 0)
                   (SETQ L
                           (PROG (I FORALL-RESULT FORALL-ENDPTR)
                             (SETQ I 0)
                             (COND
                              ((MINUSP (DIFFERENCE (UPBV L) I)) (RETURN NIL)))
                             (SETQ FORALL-RESULT
                                     (SETQ FORALL-ENDPTR
                                             (CONS (GETV L I) NIL)))
                            LOOPLABEL
                             (SETQ I (PLUS2 I 1))
                             (COND
                              ((MINUSP (DIFFERENCE (UPBV L) I))
                               (RETURN FORALL-RESULT)))
                             (RPLACD FORALL-ENDPTR (CONS (GETV L I) NIL))
                             (SETQ FORALL-ENDPTR (CDR FORALL-ENDPTR))
                             (GO LOOPLABEL)))
                   (SETQ X (FANCY-INPRINT "," 0 L))
                   (FANCY-PRIN2* "]" 0)
                   (RETURN X)))
                 ((OR (STRINGP L) (AND (IDP L) (CONTAINS-TEX-SPECIAL L)))
                  (PROGN
                   (SETQ FANCY-LINE* (CONS '|\\MATHRM{| FANCY-LINE*))
                   (PROG (C)
                     (SETQ C (EXPLODE2 L))
                    LAB
                     (COND ((NULL C) (RETURN NIL)))
                     ((LAMBDA (C) (FANCY-TEX-CHARACTER C)) (CAR C))
                     (SETQ C (CDR C))
                     (GO LAB))
                   (SETQ FANCY-LINE* (CONS '} FANCY-LINE*))))
                 ((OR (NOT (NUMBERP L)) (NOT (LESSP L 0))
                      (LEQ P (GET 'MINUS 'INFIX)))
                  (FANCY-PRIN2* L 'INDEX))
                 (T
                  (FANCY-IN-BRACKETS (LIST 'FANCY-PRIN2* (MKQUOTE L) T) '|(|
                   '|)|)))
                (RETURN
                 (COND ((AND TESTING-WIDTH* OVERFLOWED*) 'FAILED) (T NIL)))))
      (COND
       ((EQ W 'FAILED) (SETQ FANCY-LINE* FL) (SETQ FANCY-TEXPOS TPOS)
        (SETQ FANCY-POS* POS)))
      (RETURN W))) 
(FLUID '(POUND1* POUND2* BAD_CHARS*)) 
(SETQ POUND1* (INT2ID 156)) 
(SETQ POUND2* (INT2ID 163)) 
(SETQ BAD_CHARS*
        (CONS BLANK
              (CONS TAB
                    (CONS $EOL$
                          (CONS POUND1*
                                (CONS POUND2* '(|#| $ % & { } ~ ^ |\\|))))))) 
(PUT 'CONTAINS-TEX-SPECIAL 'NUMBER-OF-ARGS 1) 
(PUT 'CONTAINS-TEX-SPECIAL 'DEFINED-ON-LINE '1227) 
(PUT 'CONTAINS-TEX-SPECIAL 'DEFINED-IN-FILE 'TMPRINT/TMPRINT.RED) 
(PUT 'CONTAINS-TEX-SPECIAL 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE CONTAINS-TEX-SPECIAL (X)
    (PROG (U)
      (SETQ U (COND (*FANCY-LOWER (EXPLODE2LC X)) (T (EXPLODE2 X))))
     TOP
      (COND ((NULL U) (RETURN NIL)) ((MEMQ (CAR U) BAD_CHARS*) (RETURN T)))
      (SETQ U (CDR U))
      (GO TOP))) 
(PUT 'FANCY-TEX-CHARACTER 'NUMBER-OF-ARGS 1) 
(PUT 'FANCY-TEX-CHARACTER 'DEFINED-ON-LINE '1242) 
(PUT 'FANCY-TEX-CHARACTER 'DEFINED-IN-FILE 'TMPRINT/TMPRINT.RED) 
(PUT 'FANCY-TEX-CHARACTER 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE FANCY-TEX-CHARACTER (C)
    (COND
     ((OR (EQUAL C '|#|) (EQUAL C '$) (EQUAL C '%) (EQUAL C '&) (EQUAL C '_)
          (EQUAL C '{) (EQUAL C '}))
      (SETQ FANCY-LINE* (CONS C (CONS '|\\| FANCY-LINE*))))
     ((EQUAL C '~) (SETQ FANCY-LINE* (CONS '|{\\TEXTASCIITILDE}| FANCY-LINE*)))
     ((EQUAL C '^)
      (SETQ FANCY-LINE* (CONS '|{\\TEXTASCIICIRCUM}| FANCY-LINE*)))
     ((EQUAL C '|\\|)
      (SETQ FANCY-LINE* (CONS '|{\\TEXTBACKSLASH}| FANCY-LINE*)))
     ((EQUAL C BLANK) (SETQ FANCY-LINE* (CONS '~ FANCY-LINE*)))
     ((EQUAL C TAB) (SETQ FANCY-LINE* (CONS '~ (CONS '~ FANCY-LINE*))))
     ((EQUAL C $EOL$) (SETQ FANCY-LINE* (CONS '|\\$EOL\\$| FANCY-LINE*)))
     ((OR (EQUAL C POUND1*) (EQUAL C POUND2*))
      (SETQ FANCY-LINE* (CONS '|{\\POUND}| FANCY-LINE*)))
     (T (SETQ FANCY-LINE* (CONS C FANCY-LINE*))))) 
(PUT 'FANCY-PRINT-INDEXLIST 'NUMBER-OF-ARGS 1) 
(PUT 'FANCY-PRINT-INDEXLIST 'DEFINED-ON-LINE '1264) 
(PUT 'FANCY-PRINT-INDEXLIST 'DEFINED-IN-FILE 'TMPRINT/TMPRINT.RED) 
(PUT 'FANCY-PRINT-INDEXLIST 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE FANCY-PRINT-INDEXLIST (L) (FANCY-PRINT-INDEXLIST1 L '_ '|,|)) 
(PUT 'FANCY-PRINT-INDEXLIST1 'NUMBER-OF-ARGS 3) 
(PUT 'FANCY-PRINT-INDEXLIST1 'DEFINED-ON-LINE '1267) 
(PUT 'FANCY-PRINT-INDEXLIST1 'DEFINED-IN-FILE 'TMPRINT/TMPRINT.RED) 
(PUT 'FANCY-PRINT-INDEXLIST1 'PROCEDURE_TYPE
     '(ARROW (TIMES GENERAL GENERAL GENERAL) GENERAL)) 
(DE FANCY-PRINT-INDEXLIST1 (L OP SEP)
    (PROG (POS TPOS FL W)
      (SETQ POS FANCY-POS*)
      (SETQ TPOS FANCY-TEXPOS)
      (SETQ FL FANCY-LINE*)
      (SETQ W
              (PROG (W TESTING-WIDTH* OBRKP*)
                (SETQ TESTING-WIDTH* T)
                (FANCY-PRIN2* OP 0)
                (FANCY-PRIN2* '{ 0)
                (COND ((NULL L) (SETQ W NIL))
                      (T (SETQ W (FANCY-INPRINT (OR SEP 'TIMES) 0 L))))
                (FANCY-PRIN2* "}" 0)
                (RETURN W)))
      (COND
       ((EQ W 'FAILED) (SETQ FANCY-LINE* FL) (SETQ FANCY-TEXPOS TPOS)
        (SETQ FANCY-POS* POS)))
      (RETURN W))) 
(PUT 'FANCY-PRINT-ONE-INDEX 'NUMBER-OF-ARGS 1) 
(PUT 'FANCY-PRINT-ONE-INDEX 'DEFINED-ON-LINE '1280) 
(PUT 'FANCY-PRINT-ONE-INDEX 'DEFINED-IN-FILE 'TMPRINT/TMPRINT.RED) 
(PUT 'FANCY-PRINT-ONE-INDEX 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE FANCY-PRINT-ONE-INDEX (I)
    (PROG (POS TPOS FL W)
      (SETQ POS FANCY-POS*)
      (SETQ TPOS FANCY-TEXPOS)
      (SETQ FL FANCY-LINE*)
      (SETQ W
              (PROG (W TESTING-WIDTH* OBRKP*)
                (SETQ TESTING-WIDTH* T)
                (FANCY-PRIN2* '_ 0)
                (FANCY-PRIN2* '{ 0)
                (SETQ W (FANCY-INPRINT 'TIMES 0 (LIST I)))
                (FANCY-PRIN2* "}" 0)
                (RETURN W)))
      (COND
       ((EQ W 'FAILED) (SETQ FANCY-LINE* FL) (SETQ FANCY-TEXPOS TPOS)
        (SETQ FANCY-POS* POS)))
      (RETURN W))) 
(PUT 'FANCY-IN-BRACKETS 'NUMBER-OF-ARGS 3) 
(PUT 'FANCY-IN-BRACKETS 'DEFINED-ON-LINE '1291) 
(PUT 'FANCY-IN-BRACKETS 'DEFINED-IN-FILE 'TMPRINT/TMPRINT.RED) 
(PUT 'FANCY-IN-BRACKETS 'PROCEDURE_TYPE
     '(ARROW (TIMES GENERAL GENERAL GENERAL) GENERAL)) 
(DE FANCY-IN-BRACKETS (U L R)
    ((LAMBDA (FANCY-BSTACK*)
       (PROG (POS TPOS FL W)
         (SETQ POS FANCY-POS*)
         (SETQ TPOS FANCY-TEXPOS)
         (SETQ FL FANCY-LINE*)
         (SETQ W
                 (PROG (FP W R1 R2 REC)
                   (SETQ REC (LIST 0))
                   (SETQ FANCY-BSTACK* (CONS REC FANCY-BSTACK*))
                   (FANCY-ADJUST-BKT-LEVELS FANCY-BSTACK*)
                   (SETQ FP (LENGTH FANCY-PAGE*))
                   (FANCY-PRIN2* (SETQ R1 (CONS 'BKT (CONS NIL (CONS L REC))))
                    2)
                   (SETQ W (EVAL U))
                   (FANCY-PRIN2* (SETQ R2 (CONS 'BKT (CONS NIL (CONS R REC))))
                    2)
                   (COND
                    ((EQUAL FP (LENGTH FANCY-PAGE*))
                     (PROGN (SETCAR (CDR R1) T) (SETCAR (CDR R2) T))))
                   (RETURN W)))
         (COND
          ((EQ W 'FAILED) (SETQ FANCY-LINE* FL) (SETQ FANCY-TEXPOS TPOS)
           (SETQ FANCY-POS* POS)))
         (RETURN W)))
     FANCY-BSTACK*)) 
(PUT 'FANCY-ADJUST-BKT-LEVELS 'NUMBER-OF-ARGS 1) 
(PUT 'FANCY-ADJUST-BKT-LEVELS 'DEFINED-ON-LINE '1312) 
(PUT 'FANCY-ADJUST-BKT-LEVELS 'DEFINED-IN-FILE 'TMPRINT/TMPRINT.RED) 
(PUT 'FANCY-ADJUST-BKT-LEVELS 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE FANCY-ADJUST-BKT-LEVELS (U)
    (COND ((OR (NULL U) (NULL (CDR U))) NIL)
          ((GEQ (CAAR U) (CAADR U))
           (PROGN
            (SETCAR (CADR U) (PLUS (CAR (CADR U)) 1))
            (FANCY-ADJUST-BKT-LEVELS (CDR U))
            NIL)))) 
(PUT 'FANCY-EXPTPRI 'NUMBER-OF-ARGS 2) 
(PUT 'FANCY-EXPTPRI 'DEFINED-ON-LINE '1318) 
(PUT 'FANCY-EXPTPRI 'DEFINED-IN-FILE 'TMPRINT/TMPRINT.RED) 
(PUT 'FANCY-EXPTPRI 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE FANCY-EXPTPRI (L P)
    ((LAMBDA (*RATPRI TESTING-WIDTH*)
       (PROG (*LIST PP W W1 W2 POS TPOS FL)
         (SETQ POS FANCY-POS*)
         (SETQ TPOS FANCY-TEXPOS)
         (SETQ FL FANCY-LINE*)
         (SETQ W1 (CADR L))
         (SETQ W2 (CADDR L))
         (SETQ PP
                 (OR (EQCAR W1 'QUOTIENT) (EQCAR W1 'EXPT)
                     (AND (EQCAR W1 '*HOLD) (NOT (ATOM (CADR W1))))))
         (SETQ TESTING-WIDTH* T)
         (COND
          ((AND (EQCAR W2 'QUOTIENT) (EQUAL (CADR W2) 1)
                (OR (FIXP (CADDR W2)) (LITER (CADDR W2))))
           (RETURN (FANCY-SQRTPRI* W1 (CADDR W2)))))
         (COND
          ((AND (EQCAR W2 'QUOTIENT) (EQCAR (CADR W2) 'MINUS))
           (SETQ W2 (LIST 'MINUS (LIST (CAR W2) (CADADR W2) (CADDR W2)))))
          (T (SETQ W2 (NEGNUMBERCHK W2))))
         (COND
          (PP
           (PROGN
            (COND
             ((EQUAL
               (FANCY-IN-BRACKETS
                (LIST 'FANCY-MAPRINT (MKQUOTE W1) (GET 'EXPT 'INFIX)) '|(|
                '|)|)
               'FAILED)
              (RETURN (FANCY-FAIL POS TPOS FL))))))
          ((EQUAL (FANCY-MAPRINT W1 (GET 'EXPT 'INFIX)) 'FAILED)
           (RETURN (FANCY-FAIL POS TPOS FL))))
         (FANCY-PRIN2* "^" 0)
         (COND
          ((AND (EQCAR W2 'QUOTIENT) (FIXP (CADR W2)) (FIXP (CADDR W2)))
           (PROGN
            (FANCY-PRIN2* "{" 0)
            (SETQ W (FANCY-INPRINT '/ 0 (CDR W2)))
            (FANCY-PRIN2* "}" 0)))
          (T (SETQ W (FANCY-MAPRINT-TEX-BKT W2 0 NIL))))
         (COND ((EQUAL W 'FAILED) (RETURN (FANCY-FAIL POS TPOS FL))))))
     *RATPRI TESTING-WIDTH*)) 
(PUT 'EXPT 'FANCY-PPRIFN 'FANCY-EXPTPRI) 
(PUT 'FANCY-INPRINT 'NUMBER-OF-ARGS 3) 
(PUT 'FANCY-INPRINT 'DEFINED-ON-LINE '1352) 
(PUT 'FANCY-INPRINT 'DEFINED-IN-FILE 'TMPRINT/TMPRINT.RED) 
(PUT 'FANCY-INPRINT 'PROCEDURE_TYPE
     '(ARROW (TIMES GENERAL GENERAL GENERAL) GENERAL)) 
(DE FANCY-INPRINT (OP P L)
    ((LAMBDA (TABLEVEL* SUMLEVEL*)
       (PROG (X Y W POS TPOS FL)
         (SETQ POS FANCY-POS*)
         (SETQ TPOS FANCY-TEXPOS)
         (SETQ FL FANCY-LINE*)
         (COND
          ((AND (EQUAL OP 'TIMES) (EQCAR (CAR L) 'QUOTIENT) (CDR L)
                (EQCAR (CADR L) 'QUOTIENT))
           (SETQ OP '*)))
         (COND ((AND (EQ OP 'PLUS) *REVPRI) (SETQ L (REVERSE L))))
         (COND
          ((NOT (GET OP 'ALT))
           (PROGN
            (COND
             ((EQ OP 'NOT)
              (PROGN
               (FANCY-OPRIN OP)
               (RETURN (FANCY-MAPRINT (CAR L) (GET 'NOT 'INFIX)))
               NIL)))
            (COND
             ((AND (EQ OP 'SETQ) (NOT (ATOM (SETQ X (CAR (REVERSE L)))))
                   (IDP (CAR X)) (SETQ Y (GETRTYPE X))
                   (SETQ Y (GET (GET Y 'TAG) 'FANCY-SETPRIFN)))
              (RETURN (APPLY2 Y (CAR L) X))))
            (COND
             ((AND (NOT (ATOM (CAR L))) (IDP (CAAR L))
                   (OR (SETQ X (GET (CAAR L) 'FANCY-PRIFN))
                       (SETQ X (GET (CAAR L) 'FANCY-PPRIFN)))
                   (EQ (GET X OP) 'INBRACKETS))
              (PROGN
               (FANCY-IN-BRACKETS (LIST 'FANCY-MAPRINT (MKQUOTE (CAR L)) P)
                '|(| '|)|)
               NIL))
             ((AND *NOSPLIT (NOT TESTING-WIDTH*))
              (FANCY-PRINFIT (CAR L) P NIL))
             (T (SETQ W (FANCY-MAPRINT (CAR L) P))))
            (SETQ L (CDR L)))))
         (COND
          ((AND TESTING-WIDTH* (OR OVERFLOWED* (EQUAL W 'FAILED)))
           (RETURN (FANCY-FAIL POS TPOS FL))))
         (COND
          ((AND *LIST OBRKP* (MEMQ OP '(PLUS MINUS)))
           (PROGN
            (SETQ SUMLEVEL* (PLUS SUMLEVEL* 1))
            (SETQ TABLEVEL* (PLUS TABLEVEL* 1)))))
         (COND ((AND *NOSPLIT (NOT TESTING-WIDTH*)) (FANCY-INPRINT1 OP P L))
               (T (SETQ W (FANCY-INPRINT2 OP P L))))
         (COND
          ((AND TESTING-WIDTH* (EQUAL W 'FAILED))
           (RETURN (FANCY-FAIL POS TPOS FL))))))
     TABLEVEL* SUMLEVEL*)) 
(PUT 'FANCY-INPRINT1 'NUMBER-OF-ARGS 3) 
(PUT 'FANCY-INPRINT1 'DEFINED-ON-LINE '1401) 
(PUT 'FANCY-INPRINT1 'DEFINED-IN-FILE 'TMPRINT/TMPRINT.RED) 
(PUT 'FANCY-INPRINT1 'PROCEDURE_TYPE
     '(ARROW (TIMES GENERAL GENERAL GENERAL) GENERAL)) 
(DE FANCY-INPRINT1 (OP P L)
    (PROG (LOP)
      (PROG (V)
        (SETQ V L)
       LAB
        (COND ((NULL V) (RETURN NIL)))
        ((LAMBDA (V)
           (PROGN
            (SETQ LOP OP)
            (COND
             ((AND (EQUAL OP 'PLUS) (EQCAR V 'MINUS))
              (PROGN
               (SETQ LOP 'MINUS)
               (SETQ V (CADR V))
               (SETQ P (GET 'MINUS 'INFIX)))))
            (COND
             ((EQUAL 'FAILED (FANCY-OPRIN LOP))
              (PROGN (FANCY-TERPRI* NIL) (FANCY-OPRIN LOP))))
            (FANCY-PRINFIT (NEGNUMBERCHK V) P NIL)))
         (CAR V))
        (SETQ V (CDR V))
        (GO LAB)))) 
(PUT 'FANCY-INPRINT2 'NUMBER-OF-ARGS 3) 
(PUT 'FANCY-INPRINT2 'DEFINED-ON-LINE '1414) 
(PUT 'FANCY-INPRINT2 'DEFINED-IN-FILE 'TMPRINT/TMPRINT.RED) 
(PUT 'FANCY-INPRINT2 'PROCEDURE_TYPE
     '(ARROW (TIMES GENERAL GENERAL GENERAL) GENERAL)) 
(DE FANCY-INPRINT2 (OP P L)
    (PROG (LOP W)
      (PROG (V)
        (SETQ V L)
       LAB
        (COND ((NULL V) (RETURN NIL)))
        ((LAMBDA (V)
           (COND
            ((OR (NOT TESTING-WIDTH*) (NEQ W 'FAILED))
             (PROGN
              (SETQ LOP OP)
              (COND
               ((AND (EQUAL OP 'PLUS) (EQCAR V 'MINUS))
                (PROGN
                 (SETQ LOP 'MINUS)
                 (SETQ V (CADR V))
                 (SETQ P (GET 'MINUS 'INFIX)))))
              (FANCY-OPRIN LOP)
              (COND
               ((NEQ W 'FAILED)
                (SETQ W (FANCY-MAPRINT (NEGNUMBERCHK V) P))))))))
         (CAR V))
        (SETQ V (CDR V))
        (GO LAB))
      (RETURN W))) 
(PUT 'FANCY-INPRINTLIST 'NUMBER-OF-ARGS 3) 
(PUT 'FANCY-INPRINTLIST 'DEFINED-ON-LINE '1428) 
(PUT 'FANCY-INPRINTLIST 'DEFINED-IN-FILE 'TMPRINT/TMPRINT.RED) 
(PUT 'FANCY-INPRINTLIST 'PROCEDURE_TYPE
     '(ARROW (TIMES GENERAL GENERAL GENERAL) GENERAL)) 
(DE FANCY-INPRINTLIST (OP P L)
    (PROG (POS TPOS FL W)
      (SETQ POS FANCY-POS*)
      (SETQ TPOS FANCY-TEXPOS)
      (SETQ FL FANCY-LINE*)
      (SETQ W
              (PROG (FST W V)
               LOOP
                (COND ((NULL L) (RETURN W)))
                (SETQ V (CAR L))
                (SETQ L (CDR L))
                (COND
                 (FST
                  (PROGN
                   (FANCY-PRIN2* "\\," 1)
                   (SETQ W (FANCY-OPRIN OP))
                   (FANCY-PRIN2* "\\," 1)
                   NIL)))
                (COND ((AND (EQ W 'FAILED) TESTING-WIDTH*) (RETURN W)))
                (SETQ W
                        (COND ((EQ W 'FAILED) (FANCY-PRINFIT V 0 OP))
                              (T (FANCY-PRINFIT V 0 NIL))))
                (COND ((AND (EQ W 'FAILED) TESTING-WIDTH*) (RETURN W)))
                (SETQ FST T)
                (GO LOOP)))
      (COND
       ((EQ W 'FAILED) (SETQ FANCY-LINE* FL) (SETQ FANCY-TEXPOS TPOS)
        (SETQ FANCY-POS* POS)))
      (RETURN W))) 
(PUT 'TIMES 'FANCY-PRTCH "\\*") 
(PUT 'FANCY-OPRIN 'NUMBER-OF-ARGS 1) 
(PUT 'FANCY-OPRIN 'DEFINED-ON-LINE '1450) 
(PUT 'FANCY-OPRIN 'DEFINED-IN-FILE 'TMPRINT/TMPRINT.RED) 
(PUT 'FANCY-OPRIN 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE FANCY-OPRIN (OP)
    (PROG (POS TPOS FL W)
      (SETQ POS FANCY-POS*)
      (SETQ TPOS FANCY-TEXPOS)
      (SETQ FL FANCY-LINE*)
      (SETQ W
              (PROG (X)
                (COND ((SETQ X (GET OP 'FANCY-PRTCH)) (FANCY-PRIN2* X 1))
                      ((SETQ X (GET OP 'FANCY-INFIX-SYMBOL))
                       (FANCY-SPECIAL-SYMBOL X
                        (OR (GET OP 'FANCY-SYMBOL-LENGTH) 4)))
                      ((NULL (SETQ X (GET OP 'PRTCH))) (FANCY-PRIN2* OP T))
                      (T
                       (PROGN
                        (COND
                         ((AND *LIST OBRKP* (MEMQ OP '(PLUS MINUS))
                               (EQUAL SUMLEVEL* 2))
                          (COND
                           ((AND TESTING-WIDTH* (NOT (AND *ACN *LIST)))
                            (RETURN 'FAILED))
                           (T (FANCY-TERPRI* T)))))
                        (FANCY-PRIN2* X T)
                        NIL)))
                (COND (OVERFLOWED* (RETURN 'FAILED)))))
      (COND
       ((EQ W 'FAILED) (SETQ FANCY-LINE* FL) (SETQ FANCY-TEXPOS TPOS)
        (SETQ FANCY-POS* POS)))
      (RETURN W))) 
(PROG (X)
  (SETQ X
          '(("alpha" "\\alpha") ("aLPHA" "\\alpha") (Α "\\alpha")
            ("beta" "\\beta") ("bETA" "\\beta") (Β "\\beta")
            ("gamma" "\\gamma") ("gAMMA" "\\gamma") (Γ "\\gamma")
            ("delta" "\\delta") ("dELTA" "\\delta") (Δ "\\delta")
            ("epsilon" "\\varepsilon") ("ePSILON" "\\varepsilon")
            (Ε "\\varepsilon") ("zeta" "\\zeta") ("zETA" "\\zeta") (Ζ "\\zeta")
            ("eta" "\\eta") ("eTA" "\\eta") (Η "\\eta") ("theta" "\\theta")
            ("tHETA" "\\theta") (Θ "\\theta") ("iota" "\\iota")
            ("iOTA" "\\iota") (Ι "\\iota") ("kappa" "\\varkappa")
            ("kAPPA" "\\varkappa") (Κ "\\varkappa") ("lambda" "\\lambda")
            ("lAMBDA" "\\lambda") (Λ "\\lambda") ("mu" "\\mu") ("mU" "\\mu")
            (Μ "\\mu") ("nu" "\\nu") ("nU" "\\nu") (Ν "\\nu") ("xi" "\\xi")
            ("xI" "\\xi") (Ξ "\\xi") ("omicron" 'O) ("oMICRON" 'O) (Ο 'O)
            ("pi" "\\pi") ("pI" "\\pi") (Π "\\pi") ("rho" "\\rho")
            ("rHO" "\\rho") (Ρ "\\rho") ("sigma" "\\sigma") ("sIGMA" "\\sigma")
            (Σ "\\sigma") ("tau" "\\tau") ("tAU" "\\tau") (Τ "\\tau")
            ("upsilon" "\\upsilon") ("uPSILON" "\\upsilon") (Υ "\\upsilon")
            ("phi" "\\phi") ("pHI" "\\phi") (Φ "\\phi") ("chi" "\\chi")
            ("cHI" "\\chi") (Χ "\\chi") ("psi" "\\psi") ("pSI" "\\psi")
            (Ψ "\\psi") ("omega" "\\omega") ("oMEGA" "\\omega") (Ω "\\omega")
            ("Alpha" "\\mathit{A}") ("ALPHA" "\\mathit{A}") (|α| "\\mathit{A}")
            ("Beta" "\\mathit{B}") ("BETA" "\\mathit{B}") (|β| "\\mathit{B}")
            ("Gamma" "\\Gamma") ("GAMMA" "\\Gamma") (|γ| "\\Gamma")
            ("Delta" "\\Delta") ("DELTA" "\\Delta") (|δ| "\\Delta")
            ("Epsilon" "\\epsilon") ("EPSILON" "\\epsilon") (|ε| "\\epsilon")
            ("Zeta" "\\mathit{Z}") ("ZETA" "\\mathit{Z}") (|ζ| "\\mathit{Z}")
            ("Eta" "\\mathit{H}") ("ETA" "\\mathit{H}") (|η| "\\mathit{H}")
            ("Theta" "\\Theta") ("THETA" "\\Theta") (|θ| "\\Theta")
            ("Iota" "\\mathit{I}") ("IOTA" "\\mathit{I}") (|ι| "\\mathit{I}")
            ("Kappa" "\\Kappa") ("KAPPA" "\\Kappa") (|κ| "\\Kappa")
            ("Lambda" "\\Lambda") ("LAMBDA" "\\Lambda") (|λ| "\\Lambda")
            ("Mu" "\\mathit{M}") ("MU" "\\mathit{M}") (|μ| "\\mathit{M}")
            ("Nu" "\\mathit{N}") ("NU" "\\mathit{N}") (|ν| "\\mathit{N}")
            ("Xi" "\\Xi") ("XI" "\\Xi") (|ξ| "\\Xi") ("Omicron" "\\mathit{O}")
            ("OMICRON" "\\mathit{O}") (|ο| "\\mathit{O}") ("Pi" "\\Pi")
            ("PI" "\\Pi") (|π| "\\Pi") ("Rho" "\\mathit{R}")
            ("RHO" "\\mathit{R}") (|ρ| "\\mathit{R}") ("Sigma" "\\Sigma")
            ("SIGMA" "\\Sigma") (|σ| "\\Sigma") ("Tau" "\\Tau") ("TAU" "\\Tau")
            (|τ| "\\Tau") ("Upsilon" "\\Upsilon") ("UPSILON" "\\Upsilon")
            (|υ| "\\Upsilon") ("Phi" "\\Phi") ("PHI" "\\Phi") (|φ| "\\Phi")
            ("Chi" "\\Chi") ("CHI" "\\Chi") (|χ| "\\Chi") ("Psi" "\\Psi")
            ("PSI" "\\Psi") (|ψ| "\\Psi") ("Omega" "\\Omega")
            ("OMEGA" "\\Omega") (|ω| "\\Omega")))
 LAB
  (COND ((NULL X) (RETURN NIL)))
  ((LAMBDA (X) (PUT (INTERN (CAR X)) 'FANCY-SPECIAL-SYMBOL (CADR X))) (CAR X))
  (SETQ X (CDR X))
  (GO LAB)) 
(PUT 'INFINITY 'FANCY-SPECIAL-SYMBOL "\\infty ") 
(PUT 'PARTIAL-DF 'FANCY-SPECIAL-SYMBOL "\\partial ") 
(PUT 'EMPTY-SET 'FANCY-SPECIAL-SYMBOL "\\emptyset ") 
(PUT 'NOT 'FANCY-SPECIAL-SYMBOL "\\neg ") 
(PUT 'NOT 'FANCY-INFIX-SYMBOL "\\neg ") 
(PUT 'LEQ 'FANCY-INFIX-SYMBOL "\\leq ") 
(PUT 'GEQ 'FANCY-INFIX-SYMBOL "\\geq ") 
(PUT 'NEQ 'FANCY-INFIX-SYMBOL "\\neq ") 
(PUT 'INTERSECTION 'FANCY-INFIX-SYMBOL "\\cap ") 
(PUT 'UNION 'FANCY-INFIX-SYMBOL "\\cup ") 
(PUT 'MEMBER 'FANCY-INFIX-SYMBOL "\\in ") 
(PUT 'AND 'FANCY-INFIX-SYMBOL "\\wedge ") 
(PUT 'OR 'FANCY-INFIX-SYMBOL "\\vee ") 
(PUT 'WHEN 'FANCY-INFIX-SYMBOL "|") 
(PUT '*WCOMMA* 'FANCY-INFIX-SYMBOL ",\\,") 
(PUT 'REPLACEBY 'FANCY-INFIX-SYMBOL "\\Rightarrow ") 
(PUT '~ 'FANCY-FUNCTIONSYMBOL "\\forall ") 
(PUT 'FANCY-CONDPRI0 'NUMBER-OF-ARGS 1) 
(PUT 'FANCY-CONDPRI0 'DEFINED-ON-LINE '1581) 
(PUT 'FANCY-CONDPRI0 'DEFINED-IN-FILE 'TMPRINT/TMPRINT.RED) 
(PUT 'FANCY-CONDPRI0 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE FANCY-CONDPRI0 (U) (FANCY-CONDPRI U 0)) 
(PUT 'FANCY-CONDPRI 'NUMBER-OF-ARGS 2) 
(PUT 'FANCY-CONDPRI 'DEFINED-ON-LINE '1584) 
(PUT 'FANCY-CONDPRI 'DEFINED-IN-FILE 'TMPRINT/TMPRINT.RED) 
(PUT 'FANCY-CONDPRI 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE FANCY-CONDPRI (U P)
    (PROG (POS TPOS FL W)
      (SETQ POS FANCY-POS*)
      (SETQ TPOS FANCY-TEXPOS)
      (SETQ FL FANCY-LINE*)
      (SETQ W
              (PROG (W)
                (COND ((GREATERP P 0) (FANCY-PRIN2 "\\left(")))
                (PROG ()
                 WHILELABEL
                  (COND
                   ((NOT (AND (SETQ U (CDR U)) (NEQ W 'FAILED))) (RETURN NIL)))
                  (PROGN
                   (COND
                    ((NOT (EQ (CAAR U) 'T))
                     (PROGN
                      (FANCY-PRIN2 'IF)
                      (FANCY-PRIN2 " ")
                      (SETQ W (FANCY-MAPRIN0 (CAAR U)))
                      (FANCY-PRIN2 "\\,")
                      (FANCY-PRIN2 'THEN)
                      (FANCY-PRIN2 "\\,"))))
                   (COND ((NEQ W 'FAILED) (SETQ W (FANCY-MAPRIN0 (CADAR U)))))
                   (COND
                    ((CDR U)
                     (PROGN
                      (FANCY-PRIN2 "\\,")
                      (FANCY-PRIN2 'ELSE)
                      (FANCY-PRIN2 "\\,")))))
                  (GO WHILELABEL))
                (COND ((GREATERP P 0) (FANCY-PRIN2 "\\right)")))
                (COND ((OR OVERFLOWED* (EQUAL W 'FAILED)) (RETURN 'FAILED)))))
      (COND
       ((EQ W 'FAILED) (SETQ FANCY-LINE* FL) (SETQ FANCY-TEXPOS TPOS)
        (SETQ FANCY-POS* POS)))
      (RETURN W))) 
(PUT 'COND 'FANCY-PPRIFN 'FANCY-CONDPRI) 
(PUT 'COND 'FANCY-FLATPRIFN 'FANCY-CONDPRI0) 
(PUT 'FANCY-REVALPRI 'NUMBER-OF-ARGS 1) 
(PUT 'FANCY-REVALPRI 'DEFINED-ON-LINE '1604) 
(PUT 'FANCY-REVALPRI 'DEFINED-IN-FILE 'TMPRINT/TMPRINT.RED) 
(PUT 'FANCY-REVALPRI 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE FANCY-REVALPRI (U) (FANCY-MAPRIN0 (FANCY-UNQUOTE (CADR U)))) 
(PUT 'FANCY-UNQUOTE 'NUMBER-OF-ARGS 1) 
(PUT 'FANCY-UNQUOTE 'DEFINED-ON-LINE '1607) 
(PUT 'FANCY-UNQUOTE 'DEFINED-IN-FILE 'TMPRINT/TMPRINT.RED) 
(PUT 'FANCY-UNQUOTE 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE FANCY-UNQUOTE (U)
    (COND
     ((EQCAR U 'LIST)
      (PROG (X FORALL-RESULT FORALL-ENDPTR)
        (SETQ X (CDR U))
        (COND ((NULL X) (RETURN NIL)))
        (SETQ FORALL-RESULT
                (SETQ FORALL-ENDPTR
                        (CONS ((LAMBDA (X) (FANCY-UNQUOTE X)) (CAR X)) NIL)))
       LOOPLABEL
        (SETQ X (CDR X))
        (COND ((NULL X) (RETURN FORALL-RESULT)))
        (RPLACD FORALL-ENDPTR
                (CONS ((LAMBDA (X) (FANCY-UNQUOTE X)) (CAR X)) NIL))
        (SETQ FORALL-ENDPTR (CDR FORALL-ENDPTR))
        (GO LOOPLABEL)))
     ((EQCAR U 'QUOTE) (CADR U)) (T U))) 
(PUT 'AEVAL 'FANCY-PRIFN 'FANCY-REVALPRI) 
(PUT 'AEVAL* 'FANCY-PRIFN 'FANCY-REVALPRI) 
(PUT 'REVAL 'FANCY-PRIFN 'FANCY-REVALPRI) 
(PUT 'REVAL* 'FANCY-PRIFN 'FANCY-REVALPRI) 
(PUT '|AMINUSP:| 'FANCY-PRIFN 'FANCY-PATPRI) 
(PUT '|AMINUSP:| 'FANCY-PAT '(LESSP &1 0)) 
(PUT 'FANCY-HOLDPRI 'NUMBER-OF-ARGS 1) 
(PUT 'FANCY-HOLDPRI 'DEFINED-ON-LINE '1620) 
(PUT 'FANCY-HOLDPRI 'DEFINED-IN-FILE 'TMPRINT/TMPRINT.RED) 
(PUT 'FANCY-HOLDPRI 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE FANCY-HOLDPRI (U)
    (COND ((ATOM (CADR U)) (FANCY-MAPRIN0 (CADR U)))
          (T
           (FANCY-IN-BRACKETS (LIST 'FANCY-MAPRIN0 (MKQUOTE (CADR U))) '|(|
            '|)|)))) 
(PUT '*HOLD 'FANCY-PRIFN 'FANCY-HOLDPRI) 
(PUT 'FANCY-PATPRI 'NUMBER-OF-ARGS 1) 
(PUT 'FANCY-PATPRI 'DEFINED-ON-LINE '1626) 
(PUT 'FANCY-PATPRI 'DEFINED-IN-FILE 'TMPRINT/TMPRINT.RED) 
(PUT 'FANCY-PATPRI 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE FANCY-PATPRI (U)
    (PROG (P)
      (SETQ P (SUBST (FANCY-UNQUOTE (CADR U)) '&1 (GET (CAR U) 'FANCY-PAT)))
      (RETURN (FANCY-MAPRIN0 P)))) 
(PUT 'FANCY-BOOLVALPRI 'NUMBER-OF-ARGS 1) 
(PUT 'FANCY-BOOLVALPRI 'DEFINED-ON-LINE '1633) 
(PUT 'FANCY-BOOLVALPRI 'DEFINED-IN-FILE 'TMPRINT/TMPRINT.RED) 
(PUT 'FANCY-BOOLVALPRI 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE FANCY-BOOLVALPRI (U) (FANCY-MAPRIN0 (CADR U))) 
(PUT 'BOOLVALUE* 'FANCY-PRIFN 'FANCY-BOOLVALPRI) 
(PUT 'FANCY-QUOTPRI 'NUMBER-OF-ARGS 1) 
(PUT 'FANCY-QUOTPRI 'DEFINED-ON-LINE '1638) 
(PUT 'FANCY-QUOTPRI 'DEFINED-IN-FILE 'TMPRINT/TMPRINT.RED) 
(PUT 'FANCY-QUOTPRI 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE FANCY-QUOTPRI (U)
    (PROG (N1 N2 N1T N2T FL W POS TPOS TESTING-WIDTH* *LIST)
      (COND ((OR OVERFLOWED* (AND *ACN *LIST)) (RETURN 'FAILED)))
      (SETQ TESTING-WIDTH* T)
      (SETQ POS FANCY-POS*)
      (SETQ TPOS FANCY-TEXPOS)
      (SETQ FL FANCY-LINE*)
      (FANCY-PRIN2* "\\frac" 0)
      (SETQ W (FANCY-MAPRINT-TEX-BKT (CADR U) 0 T))
      (SETQ N1 FANCY-POS*)
      (SETQ N1T FANCY-TEXPOS)
      (COND ((EQUAL W 'FAILED) (RETURN (FANCY-FAIL POS TPOS FL))))
      (SETQ FANCY-POS* POS)
      (SETQ FANCY-TEXPOS TPOS)
      (SETQ W (FANCY-MAPRINT-TEX-BKT (CADDR U) 0 T))
      (SETQ N2 FANCY-POS*)
      (SETQ N2T FANCY-TEXPOS)
      (COND ((EQUAL W 'FAILED) (RETURN (FANCY-FAIL POS TPOS FL))))
      (SETQ FANCY-POS* (MAX N1 N2))
      (SETQ FANCY-TEXPOS (MAX N1T N2T))
      (RETURN T))) 
(PUT 'FANCY-MAPRINT-TEX-BKT 'NUMBER-OF-ARGS 3) 
(PUT 'FANCY-MAPRINT-TEX-BKT 'DEFINED-ON-LINE '1663) 
(PUT 'FANCY-MAPRINT-TEX-BKT 'DEFINED-IN-FILE 'TMPRINT/TMPRINT.RED) 
(PUT 'FANCY-MAPRINT-TEX-BKT 'PROCEDURE_TYPE
     '(ARROW (TIMES GENERAL GENERAL GENERAL) GENERAL)) 
(DE FANCY-MAPRINT-TEX-BKT (U P M)
    (PROG (W POS TPOS FL TESTING-WIDTH*)
      (SETQ TESTING-WIDTH* T)
      (SETQ POS FANCY-POS*)
      (SETQ TPOS FANCY-TEXPOS)
      (SETQ FL FANCY-LINE*)
      (COND
       ((AND (NOT M) (OR (AND (NUMBERP U) (LEQ 0 U) (LEQ U 9)) (LITER U)))
        (PROGN
         (FANCY-PRIN2* U T)
         (RETURN (COND (OVERFLOWED* (FANCY-FAIL POS TPOS FL))))
         NIL)))
      (FANCY-PRIN2* "{" 0)
      (SETQ W (FANCY-MAPRINT U P))
      (FANCY-PRIN2* "}" 0)
      (COND ((EQUAL W 'FAILED) (RETURN (FANCY-FAIL POS TPOS FL)))))) 
(PUT 'FANCY-FAIL 'NUMBER-OF-ARGS 3) 
(PUT 'FANCY-FAIL 'DEFINED-ON-LINE '1682) 
(PUT 'FANCY-FAIL 'DEFINED-IN-FILE 'TMPRINT/TMPRINT.RED) 
(PUT 'FANCY-FAIL 'PROCEDURE_TYPE
     '(ARROW (TIMES GENERAL GENERAL GENERAL) GENERAL)) 
(DE FANCY-FAIL (POS TPOS FL)
    (PROGN
     (SETQ OVERFLOWED* NIL)
     (SETQ FANCY-POS* POS)
     (SETQ FANCY-TEXPOS TPOS)
     (SETQ FANCY-LINE* FL)
     'FAILED)) 
(PUT 'QUOTIENT 'FANCY-PRIFN 'FANCY-QUOTPRI) 
(PUT 'FANCY-PRINFIT 'NUMBER-OF-ARGS 3) 
(PUT 'FANCY-PRINFIT 'DEFINED-ON-LINE '1693) 
(PUT 'FANCY-PRINFIT 'DEFINED-IN-FILE 'TMPRINT/TMPRINT.RED) 
(PUT 'FANCY-PRINFIT 'PROCEDURE_TYPE
     '(ARROW (TIMES GENERAL GENERAL GENERAL) GENERAL)) 
(DE FANCY-PRINFIT (U P OP)
    (PROG (POS TPOS FL W LL F)
      (COND
       ((AND (PAIRP U) (SETQ F (GET (CAR U) 'FANCY-PRINFIT)))
        (RETURN (APPLY F (LIST U P OP)))))
      (SETQ POS FANCY-POS*)
      (SETQ TPOS FANCY-TEXPOS)
      (SETQ FL FANCY-LINE*)
      (PROG (TESTING-WIDTH*)
        (SETQ TESTING-WIDTH* T)
        (COND (OP (SETQ W (FANCY-OPRIN OP))))
        (COND ((NEQ W 'FAILED) (SETQ W (FANCY-MAPRINT U P)))))
      (COND ((NEQ W 'FAILED) (RETURN T)))
      (SETQ FANCY-LINE* FL)
      (SETQ FANCY-POS* POS)
      (SETQ FANCY-TEXPOS TPOS)
      (COND ((AND TESTING-WIDTH* (EQ W 'FAILED)) (RETURN W)))
      (COND
       ((AND (EQUAL OP 'PLUS) (EQCAR U 'MINUS))
        (PROGN (SETQ OP 'MINUS) (SETQ U (CADR U)))))
      (SETQ W (COND (OP (FANCY-OPRIN OP))))
      (COND
       ((EQ W 'FAILED)
        (PROGN
         (FANCY-TERPRI* NIL)
         (COND (OP (FANCY-OPRIN OP)))
         (RETURN (FANCY-MAPRINT U P))
         NIL)))
      (COND
       ((LESSP FANCY-POS* (SETQ LL (LINELENGTH NIL)))
        (COND ((NUMBERP U) (RETURN (FANCY-PRIN2NUMBER U)))
              ((EQCAR U '|:RD:|) (RETURN (FANCY-RDPRIN U))))))
      (COND
       ((OR (GREATERP FANCY-POS* (QUOTIENT (LINELENGTH NIL) 2))
            (NOT (EQCAR (FANCY-LAST-SYMBOL) 'BKT)))
        (FANCY-TERPRI* NIL)))
      (RETURN (FANCY-MAPRINT U P)))) 
(PUT 'PRINT_FORMAT 'NUMBER-OF-ARGS 2) 
(PUT 'PRINT_FORMAT 'DEFINED-ON-LINE '1738) 
(PUT 'PRINT_FORMAT 'DEFINED-IN-FILE 'TMPRINT/TMPRINT.RED) 
(PUT 'PRINT_FORMAT 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE PRINT_FORMAT (F PAT)
    (PUT (CAR F) 'PRINT-FORMAT
         (CONS (CONS (CDR F) PAT) (GET (CAR F) 'PRINT-FORMAT)))) 
(FLAG '(PRINT_FORMAT) 'OPFN) 
(PUT 'FANCY-PRINT-FORMAT 'NUMBER-OF-ARGS 2) 
(PUT 'FANCY-PRINT-FORMAT 'DEFINED-ON-LINE '1744) 
(PUT 'FANCY-PRINT-FORMAT 'DEFINED-IN-FILE 'TMPRINT/TMPRINT.RED) 
(PUT 'FANCY-PRINT-FORMAT 'PROCEDURE_TYPE
     '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE FANCY-PRINT-FORMAT (U P)
    (PROG (POS TPOS FL W)
      (SETQ POS FANCY-POS*)
      (SETQ TPOS FANCY-TEXPOS)
      (SETQ FL FANCY-LINE*)
      (SETQ W
              (PROG (FMT FMTL A)
                (SETQ FMTL (GET (CAR U) 'PRINT-FORMAT))
               L
                (COND ((NULL FMTL) (RETURN 'FAILED)))
                (SETQ FMT (CAR FMTL))
                (SETQ FMTL (CDR FMTL))
                (COND ((NEQ (LENGTH (CAR FMT)) (LENGTH (CDR U))) (GO L)))
                (SETQ A (PAIR (CAR FMT) (CDR U)))
                (RETURN (FANCY-PRINT-FORMAT1 (CDR FMT) P A))))
      (COND
       ((EQ W 'FAILED) (SETQ FANCY-LINE* FL) (SETQ FANCY-TEXPOS TPOS)
        (SETQ FANCY-POS* POS)))
      (RETURN W))) 
(PUT 'FANCY-PRINT-FORMAT1 'NUMBER-OF-ARGS 3) 
(PUT 'FANCY-PRINT-FORMAT1 'DEFINED-ON-LINE '1756) 
(PUT 'FANCY-PRINT-FORMAT1 'DEFINED-IN-FILE 'TMPRINT/TMPRINT.RED) 
(PUT 'FANCY-PRINT-FORMAT1 'PROCEDURE_TYPE
     '(ARROW (TIMES GENERAL GENERAL GENERAL) GENERAL)) 
(DE FANCY-PRINT-FORMAT1 (U P A)
    (PROG (W X PL BKT OBKT Q)
      (COND ((EQCAR U 'LIST) (SETQ U (CDR U))))
      (PROG ()
       WHILELABEL
        (COND ((NOT (AND U (NEQ W 'FAILED))) (RETURN NIL)))
        (PROGN
         (SETQ X (CAR U))
         (SETQ U (CDR U))
         (COND ((EQCAR X 'LIST) (SETQ X (CDR X))))
         (SETQ OBKT BKT)
         (SETQ BKT NIL)
         (COND (OBKT (FANCY-PRIN2* '{ 0)))
         (SETQ W
                 (COND ((PAIRP X) (FANCY-PRINT-FORMAT1 X P A))
                       ((MEMQ X '(|(| |)| |,| |.| |\||))
                        (PROGN
                         (COND
                          ((EQ X '|(|)
                           (PROGN (SETQ PL (CONS P PL)) (SETQ P 0)))
                          ((EQ X '|)|)
                           (PROGN (SETQ P (CAR PL)) (SETQ PL (CDR PL)))))
                         (FANCY-PRIN2* X 1)))
                       ((OR (EQ X '_) (EQ X '^))
                        (PROGN (SETQ BKT T) (FANCY-PRIN2* X 0)))
                       ((SETQ Q (ASSOC X A)) (FANCY-MAPRINT (CDR Q) P))
                       (T (FANCY-MAPRINT X P))))
         (COND (OBKT (FANCY-PRIN2* '} 0)))
         NIL)
        (GO WHILELABEL))
      (RETURN W))) 
(PUT 'FANCY-PREFIX-OPERATOR 'NUMBER-OF-ARGS 1) 
(PUT 'FANCY-PREFIX-OPERATOR 'DEFINED-ON-LINE '1784) 
(PUT 'FANCY-PREFIX-OPERATOR 'DEFINED-IN-FILE 'TMPRINT/TMPRINT.RED) 
(PUT 'FANCY-PREFIX-OPERATOR 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE FANCY-PREFIX-OPERATOR (U)
    (PROG (SY)
      (SETQ SY
              (OR (GET U 'FANCY-FUNCTIONSYMBOL) (GET U 'FANCY-SPECIAL-SYMBOL)))
      (COND (SY (FANCY-SPECIAL-SYMBOL SY (OR (GET U 'FANCY-SYMBOL-LENGTH) 2)))
            (T (FANCY-PRIN2* U T))))) 
(PUT 'SQRT 'FANCY-PRIFN 'FANCY-SQRTPRI) 
(PUT 'FANCY-SQRTPRI 'NUMBER-OF-ARGS 1) 
(PUT 'FANCY-SQRTPRI 'DEFINED-ON-LINE '1796) 
(PUT 'FANCY-SQRTPRI 'DEFINED-IN-FILE 'TMPRINT/TMPRINT.RED) 
(PUT 'FANCY-SQRTPRI 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE FANCY-SQRTPRI (U) (FANCY-SQRTPRI* (CADR U) 2)) 
(PUT 'FANCY-SQRTPRI* 'NUMBER-OF-ARGS 2) 
(PUT 'FANCY-SQRTPRI* 'DEFINED-ON-LINE '1799) 
(PUT 'FANCY-SQRTPRI* 'DEFINED-IN-FILE 'TMPRINT/TMPRINT.RED) 
(PUT 'FANCY-SQRTPRI* 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE FANCY-SQRTPRI* (U N)
    (PROG (POS TPOS FL W)
      (SETQ POS FANCY-POS*)
      (SETQ TPOS FANCY-TEXPOS)
      (SETQ FL FANCY-LINE*)
      (SETQ W
              (PROG ()
                (COND
                 ((AND (NOT (NUMBERP N)) (NOT (LITER N))) (RETURN 'FAILED)))
                (FANCY-PRIN2* "\\sqrt" 0)
                (COND
                 ((NEQ N 2)
                  (PROGN
                   (FANCY-PRIN2* "[" 0)
                   (FANCY-PRIN2* "\\," 1)
                   (FANCY-PRIN2* N T)
                   (FANCY-PRIN2* "]" 0)
                   NIL)))
                (RETURN (FANCY-MAPRINT-TEX-BKT U 0 T))))
      (COND
       ((EQ W 'FAILED) (SETQ FANCY-LINE* FL) (SETQ FANCY-TEXPOS TPOS)
        (SETQ FANCY-POS* POS)))
      (RETURN W))) 
(PUT 'FANCY-SUB 'NUMBER-OF-ARGS 2) 
(PUT 'FANCY-SUB 'DEFINED-ON-LINE '1814) 
(PUT 'FANCY-SUB 'DEFINED-IN-FILE 'TMPRINT/TMPRINT.RED) 
(PUT 'FANCY-SUB 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE FANCY-SUB (L P)
    (COND
     ((LEQ (GET 'EXPT 'INFIX) P)
      (FANCY-IN-BRACKETS (LIST 'FANCY-SUB (MKQUOTE L) 0) '|(| '|)|))
     (T
      (PROG (POS TPOS FL W)
        (SETQ POS FANCY-POS*)
        (SETQ TPOS FANCY-TEXPOS)
        (SETQ FL FANCY-LINE*)
        (SETQ W
                (PROG (EQS W)
                  (SETQ L (CDR L))
                  (PROG ()
                   WHILELABEL
                    (COND ((NOT (CDR L)) (RETURN NIL)))
                    (PROGN
                     (SETQ EQS (APPEND EQS (LIST (CAR L))))
                     (SETQ L (CDR L)))
                    (GO WHILELABEL))
                  (SETQ L (CAR L))
                  (SETQ TESTING-WIDTH* T)
                  (SETQ W (FANCY-MAPRINT L (GET 'EXPT 'INFIX)))
                  (COND ((EQUAL W 'FAILED) (RETURN W)))
                  (FANCY-PRIN2* "|" 1)
                  (FANCY-PRIN2* '_ 0)
                  (FANCY-PRIN2* "{" 0)
                  (SETQ W (FANCY-INPRINT '*COMMA* 0 EQS))
                  (FANCY-PRIN2* "}" 0)
                  (RETURN W)))
        (COND
         ((EQ W 'FAILED) (SETQ FANCY-LINE* FL) (SETQ FANCY-TEXPOS TPOS)
          (SETQ FANCY-POS* POS)))
        (RETURN W))))) 
(PUT 'SUB 'FANCY-PPRIFN 'FANCY-SUB) 
(PUT 'FACTORIAL 'FANCY-PPRIFN 'FANCY-FACTORIAL) 
(PUT 'FANCY-FACTORIAL 'NUMBER-OF-ARGS 2) 
(PUT 'FANCY-FACTORIAL 'DEFINED-ON-LINE '1841) 
(PUT 'FANCY-FACTORIAL 'DEFINED-IN-FILE 'TMPRINT/TMPRINT.RED) 
(PUT 'FANCY-FACTORIAL 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE FANCY-FACTORIAL (U N)
    (PROG (POS TPOS FL W)
      (SETQ POS FANCY-POS*)
      (SETQ TPOS FANCY-TEXPOS)
      (SETQ FL FANCY-LINE*)
      (SETQ W
              (PROG (W)
                (SETQ W
                        (COND ((ATOM (CADR U)) (FANCY-MAPRINT (CADR U) 9999))
                              (T
                               (FANCY-IN-BRACKETS
                                (LIST 'FANCY-MAPRINT (MKQUOTE (CADR U)) 0) '|(|
                                '|)|))))
                (FANCY-PRIN2* "!" 2)
                (RETURN W)))
      (COND
       ((EQ W 'FAILED) (SETQ FANCY-LINE* FL) (SETQ FANCY-TEXPOS TPOS)
        (SETQ FANCY-POS* POS)))
      (RETURN W))) 
(PUT 'BINOMIAL 'FANCY-PRIFN 'FANCY-BINOMIAL) 
(PUT 'FANCY-BINOMIAL 'NUMBER-OF-ARGS 1) 
(PUT 'FANCY-BINOMIAL 'DEFINED-ON-LINE '1855) 
(PUT 'FANCY-BINOMIAL 'DEFINED-IN-FILE 'TMPRINT/TMPRINT.RED) 
(PUT 'FANCY-BINOMIAL 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE FANCY-BINOMIAL (U)
    (PROG (POS TPOS FL W)
      (SETQ POS FANCY-POS*)
      (SETQ TPOS FANCY-TEXPOS)
      (SETQ FL FANCY-LINE*)
      (SETQ W
              (PROG (W1 W2 *LIST)
                (FANCY-PRIN2* "\\left(\\begin{matrix}" 2)
                (SETQ W1 (FANCY-MAPRINT (CADR U) 0))
                (FANCY-PRIN2* "\\\\" 0)
                (SETQ W2 (FANCY-MAPRINT (CADDR U) 0))
                (FANCY-PRIN2* "\\end{matrix}\\right)" 2)
                (COND
                 ((OR (EQUAL W1 'FAILED) (EQUAL W2 'FAILED))
                  (RETURN 'FAILED)))))
      (COND
       ((EQ W 'FAILED) (SETQ FANCY-LINE* FL) (SETQ FANCY-TEXPOS TPOS)
        (SETQ FANCY-POS* POS)))
      (RETURN W))) 
(PUT 'FANCY-INTPRI 'NUMBER-OF-ARGS 2) 
(PUT 'FANCY-INTPRI 'DEFINED-ON-LINE '1866) 
(PUT 'FANCY-INTPRI 'DEFINED-IN-FILE 'TMPRINT/TMPRINT.RED) 
(PUT 'FANCY-INTPRI 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE FANCY-INTPRI (U P)
    (COND
     ((GREATERP P (GET 'TIMES 'INFIX))
      (FANCY-IN-BRACKETS (LIST 'FANCY-INTPRI (MKQUOTE U) 0) '|(| '|)|))
     (T
      (PROG (POS TPOS FL W)
        (SETQ POS FANCY-POS*)
        (SETQ TPOS FANCY-TEXPOS)
        (SETQ FL FANCY-LINE*)
        (SETQ W
                (PROG (W0 W1 W2 HI LO)
                  (COND ((CDDDR U) (SETQ LO (CADDDR U))))
                  (COND ((AND LO (CDDDDR U)) (SETQ HI (CAR (CDDDDR U)))))
                  (COND
                   ((GREATERP (FANCY-HEIGHT (CADR U) 1.0) 3)
                    (FANCY-PRIN2* "\\int " 0))
                   (T (FANCY-PRIN2* "\\int " 0)))
                  (COND
                   (LO
                    (PROGN
                     (FANCY-PRIN2* '_ 0)
                     (FANCY-PRIN2* '{ 0)
                     ((LAMBDA (*LIST) (SETQ W0 (FANCY-MAPRINT LO 0))) NIL)
                     (FANCY-PRIN2* '} 0)
                     NIL)))
                  (COND
                   (HI
                    (PROGN
                     (FANCY-PRIN2* '^ 0)
                     ((LAMBDA (*LIST) (FANCY-MAPRINT-TEX-BKT HI 0 T)) NIL)
                     NIL)))
                  (SETQ W1 (FANCY-MAPRINT (CADR U) 0))
                  (FANCY-PRIN2* "\\,d\\," 2)
                  (SETQ W2 (FANCY-MAPRINT (CADDR U) 0))
                  (COND
                   ((OR (EQUAL W1 'FAILED) (EQUAL W2 'FAILED)
                        (EQUAL W0 'FAILED))
                    (RETURN 'FAILED)))))
        (COND
         ((EQ W 'FAILED) (SETQ FANCY-LINE* FL) (SETQ FANCY-TEXPOS TPOS)
          (SETQ FANCY-POS* POS)))
        (RETURN W))))) 
(PUT 'FANCY-HEIGHT 'NUMBER-OF-ARGS 2) 
(PUT 'FANCY-HEIGHT 'DEFINED-ON-LINE '1895) 
(PUT 'FANCY-HEIGHT 'DEFINED-IN-FILE 'TMPRINT/TMPRINT.RED) 
(PUT 'FANCY-HEIGHT 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE FANCY-HEIGHT (U H)
    (COND ((ATOM U) H) ((EQUAL (CAR U) 'MINUS) (FANCY-HEIGHT (CADR U) H))
          ((OR (EQUAL (CAR U) 'PLUS) (EQUAL (CAR U) 'TIMES))
           (EVAL
            (CONS 'MAX
                  (PROG (W FORALL-RESULT FORALL-ENDPTR)
                    (SETQ W (CDR U))
                    (COND ((NULL W) (RETURN NIL)))
                    (SETQ FORALL-RESULT
                            (SETQ FORALL-ENDPTR
                                    (CONS
                                     ((LAMBDA (W) (FANCY-HEIGHT W H)) (CAR W))
                                     NIL)))
                   LOOPLABEL
                    (SETQ W (CDR W))
                    (COND ((NULL W) (RETURN FORALL-RESULT)))
                    (RPLACD FORALL-ENDPTR
                            (CONS ((LAMBDA (W) (FANCY-HEIGHT W H)) (CAR W))
                                  NIL))
                    (SETQ FORALL-ENDPTR (CDR FORALL-ENDPTR))
                    (GO LOOPLABEL)))))
          ((EQUAL (CAR U) 'EXPT)
           (PLUS (FANCY-HEIGHT (CADR U) H)
                 (FANCY-HEIGHT (CADDR U) (TIMES H 0.8))))
          ((EQUAL (CAR U) 'QUOTIENT)
           (PLUS (FANCY-HEIGHT (CADR U) H) (FANCY-HEIGHT (CADDR U) H)))
          ((GET (CAR U) 'SIMPFN) (FANCY-HEIGHT (CADR U) H)) (T H))) 
(PUT 'INT 'FANCY-PPRIFN 'FANCY-INTPRI) 
(PUT 'FANCY-SUMPRI* 'NUMBER-OF-ARGS 3) 
(PUT 'FANCY-SUMPRI* 'DEFINED-ON-LINE '1911) 
(PUT 'FANCY-SUMPRI* 'DEFINED-IN-FILE 'TMPRINT/TMPRINT.RED) 
(PUT 'FANCY-SUMPRI* 'PROCEDURE_TYPE
     '(ARROW (TIMES GENERAL GENERAL GENERAL) GENERAL)) 
(DE FANCY-SUMPRI* (U P MODE)
    (COND
     ((GREATERP P (GET 'MINUS 'INFIX))
      (FANCY-IN-BRACKETS (LIST 'FANCY-SUMPRI* (MKQUOTE U) 0 (MKQUOTE MODE))
       '|(| '|)|))
     (T
      (PROG (POS TPOS FL W)
        (SETQ POS FANCY-POS*)
        (SETQ TPOS FANCY-TEXPOS)
        (SETQ FL FANCY-LINE*)
        (SETQ W
                (PROG (W W0 W1 LO HI VAR)
                  (SETQ VAR (CADDR U))
                  (COND ((CDDDR U) (SETQ LO (CADDDR U))))
                  (COND ((AND LO (CDDDDR U)) (SETQ HI (CAR (CDDDDR U)))))
                  (SETQ W (COND (LO (LIST 'EQUAL VAR LO)) (T VAR)))
                  (COND ((EQUAL MODE 'SUM) (FANCY-PRIN2* "\\sum" 0))
                        ((EQUAL MODE 'PROD) (FANCY-PRIN2* "\\prod" 0)))
                  (FANCY-PRIN2* '_ 0)
                  (FANCY-PRIN2* '{ 0)
                  (COND
                   (W ((LAMBDA (*LIST) (SETQ W0 (FANCY-MAPRINT W 0))) NIL)))
                  (FANCY-PRIN2* '} 0)
                  (COND
                   (HI
                    (PROGN
                     (FANCY-PRIN2* '^ 0)
                     ((LAMBDA (*LIST) (FANCY-MAPRINT-TEX-BKT HI 0 NIL)) NIL)
                     NIL)))
                  (FANCY-PRIN2* '|\\,| 1)
                  (SETQ W1 (FANCY-MAPRINT (CADR U) 0))
                  (COND
                   ((OR (EQUAL W0 'FAILED) (EQUAL W1 'FAILED))
                    (RETURN 'FAILED)))))
        (COND
         ((EQ W 'FAILED) (SETQ FANCY-LINE* FL) (SETQ FANCY-TEXPOS TPOS)
          (SETQ FANCY-POS* POS)))
        (RETURN W))))) 
(PUT 'FANCY-SUMPRI 'NUMBER-OF-ARGS 2) 
(PUT 'FANCY-SUMPRI 'DEFINED-ON-LINE '1938) 
(PUT 'FANCY-SUMPRI 'DEFINED-IN-FILE 'TMPRINT/TMPRINT.RED) 
(PUT 'FANCY-SUMPRI 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE FANCY-SUMPRI (U P) (FANCY-SUMPRI* U P 'SUM)) 
(PUT 'SUM 'FANCY-PPRIFN 'FANCY-SUMPRI) 
(PUT 'INFSUM 'FANCY-PPRIFN 'FANCY-SUMPRI) 
(PUT 'FANCY-PRODPRI 'NUMBER-OF-ARGS 2) 
(PUT 'FANCY-PRODPRI 'DEFINED-ON-LINE '1943) 
(PUT 'FANCY-PRODPRI 'DEFINED-IN-FILE 'TMPRINT/TMPRINT.RED) 
(PUT 'FANCY-PRODPRI 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE FANCY-PRODPRI (U P) (FANCY-SUMPRI* U P 'PROD)) 
(PUT 'PROD 'FANCY-PPRIFN 'FANCY-PRODPRI) 
(PUT 'FANCY-LIMPRI 'NUMBER-OF-ARGS 2) 
(PUT 'FANCY-LIMPRI 'DEFINED-ON-LINE '1947) 
(PUT 'FANCY-LIMPRI 'DEFINED-IN-FILE 'TMPRINT/TMPRINT.RED) 
(PUT 'FANCY-LIMPRI 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE FANCY-LIMPRI (U P)
    (COND
     ((GREATERP P (GET 'MINUS 'INFIX))
      (FANCY-IN-BRACKETS (LIST 'FANCY-SUMPRI (MKQUOTE U) 0) '|(| '|)|))
     (T
      (PROG (POS TPOS FL W)
        (SETQ POS FANCY-POS*)
        (SETQ TPOS FANCY-TEXPOS)
        (SETQ FL FANCY-LINE*)
        (SETQ W
                (PROG (W LO VAR)
                  (SETQ VAR (CADDR U))
                  (COND ((CDDDR U) (SETQ LO (CADDDR U))))
                  (FANCY-PRIN2* "\\lim" 6)
                  (FANCY-PRIN2* '_ 0)
                  (FANCY-PRIN2* '{ 0)
                  (FANCY-MAPRINT VAR 0)
                  (FANCY-PRIN2* "\\rightarrow" 0)
                  (FANCY-PRIN2* BLANK 0)
                  ((LAMBDA (*LIST) (FANCY-MAPRINT LO 0)) NIL)
                  (FANCY-PRIN2* '} 0)
                  (SETQ W (FANCY-MAPRINT (CADR U) 0))
                  (RETURN W)))
        (COND
         ((EQ W 'FAILED) (SETQ FANCY-LINE* FL) (SETQ FANCY-TEXPOS TPOS)
          (SETQ FANCY-POS* POS)))
        (RETURN W))))) 
(PUT 'LIMIT 'FANCY-PPRIFN 'FANCY-LIMPRI) 
(PUT 'FANCY-LISTPRI 'NUMBER-OF-ARGS 1) 
(PUT 'FANCY-LISTPRI 'DEFINED-ON-LINE '1969) 
(PUT 'FANCY-LISTPRI 'DEFINED-IN-FILE 'TMPRINT/TMPRINT.RED) 
(PUT 'FANCY-LISTPRI 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE FANCY-LISTPRI (U)
    (PROG (POS TPOS FL W)
      (SETQ POS FANCY-POS*)
      (SETQ TPOS FANCY-TEXPOS)
      (SETQ FL FANCY-LINE*)
      (SETQ W
              (COND ((NULL (CDR U)) (FANCY-MAPRINT 'EMPTY-SET 0))
                    (T
                     (FANCY-IN-BRACKETS
                      (LIST 'FANCY-INPRINTLIST (MKQUOTE '*WCOMMA*) 0
                            (MKQUOTE (CDR U)))
                      '{ '}))))
      (COND
       ((EQ W 'FAILED) (SETQ FANCY-LINE* FL) (SETQ FANCY-TEXPOS TPOS)
        (SETQ FANCY-POS* POS)))
      (RETURN W))) 
(PUT 'LIST 'FANCY-PRIFN 'FANCY-LISTPRI) 
(PUT 'LIST 'FANCY-FLATPRIFN 'FANCY-LISTPRI) 
(PUT '*SQ 'FANCY-REFORM 'FANCY-SQREFORM) 
(PUT 'FANCY-SQREFORM 'NUMBER-OF-ARGS 1) 
(PUT 'FANCY-SQREFORM 'DEFINED-ON-LINE '1983) 
(PUT 'FANCY-SQREFORM 'DEFINED-IN-FILE 'TMPRINT/TMPRINT.RED) 
(PUT 'FANCY-SQREFORM 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE FANCY-SQREFORM (U)
    (PROGN
     (SETQ U (CADR U))
     (COND ((OR *PRI WTL*) (PREPREFORM (PREPSQ* (SQHORNER* U))))
           ((EQUAL (CDR U) 1) (FANCY-SFREFORM (CAR U)))
           (T
            (LIST 'QUOTIENT (FANCY-SFREFORM (CAR U))
                  (FANCY-SFREFORM (CDR U))))))) 
(PUT 'FANCY-SFREFORM 'NUMBER-OF-ARGS 1) 
(PUT 'FANCY-SFREFORM 'DEFINED-ON-LINE '1989) 
(PUT 'FANCY-SFREFORM 'DEFINED-IN-FILE 'TMPRINT/TMPRINT.RED) 
(PUT 'FANCY-SFREFORM 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE FANCY-SFREFORM (U)
    (PROG (Z)
      (PROG ()
       WHILELABEL
        (COND ((NOT (NOT (OR (ATOM U) (ATOM (CAR U))))) (RETURN NIL)))
        (PROGN (SETQ Z (CONS (FANCY-TERMREFORM (CAR U)) Z)) (SETQ U (CDR U)))
        (GO WHILELABEL))
      (COND ((NOT (NULL U)) (SETQ Z (CONS (PREPD U) Z))))
      (RETURN (REPLUS (REVERSIP Z))))) 
(PUT 'FANCY-TERMREFORM 'NUMBER-OF-ARGS 1) 
(PUT 'FANCY-TERMREFORM 'DEFINED-ON-LINE '1997) 
(PUT 'FANCY-TERMREFORM 'DEFINED-IN-FILE 'TMPRINT/TMPRINT.RED) 
(PUT 'FANCY-TERMREFORM 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE FANCY-TERMREFORM (U)
    (PROG (V W Z SGN)
      (SETQ V (CDR U))
      (SETQ U (CAR U))
      (COND
       ((AND (SETQ W (KERNLP V)) (NOT (|:ONEP| W)))
        (PROGN
         (SETQ V ((LAMBDA (*EXP) (QUOTF1 V W)) T))
         (COND ((MINUSF W) (PROGN (SETQ SGN T) (SETQ W (|:MINUS| W))))))))
      (COND
       ((AND W (NOT (|:ONEP| W)))
        (SETQ Z
                (CONS (COND ((OR (ATOM W) (ATOM (CAR W))) (PREPD W)) (T W))
                      Z))))
      (SETQ Z (CONS (FANCY-POWERREFORM U) Z))
      (COND
       ((NOT (AND (OR (ATOM V) (ATOM (CAR V))) (|:ONEP| V)))
        (SETQ Z (CONS (FANCY-SFREFORM V) Z))))
      (SETQ Z (RETIMES (REVERSIP Z)))
      (COND (SGN (SETQ Z (LIST 'MINUS Z))))
      (RETURN Z))) 
(PUT 'FANCY-POWERREFORM 'NUMBER-OF-ARGS 1) 
(PUT 'FANCY-POWERREFORM 'DEFINED-ON-LINE '2013) 
(PUT 'FANCY-POWERREFORM 'DEFINED-IN-FILE 'TMPRINT/TMPRINT.RED) 
(PUT 'FANCY-POWERREFORM 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE FANCY-POWERREFORM (U)
    (PROG (B)
      (COND ((ATOM (CAR U)) (SETQ B (CAR U)))
            ((NOT (ATOM (CAAR U))) (SETQ B (FANCY-SFREFORM (CAR U))))
            ((EQ (CAAR U) '*SQ) (SETQ B (FANCY-SQREFORM (CADAR U))))
            (T (SETQ B (CAR U))))
      (COND ((EQUAL (SETQ U (CDR U)) 1) (RETURN B))
            (T (RETURN (LIST 'EXPT B U)))))) 
(PUT 'DF 'FANCY-PPRIFN 'FANCY-DFPRI) 
(GLOBAL '(*DFPRINT)) 
(PUT 'FANCY-DFPRI 'NUMBER-OF-ARGS 2) 
(PUT 'FANCY-DFPRI 'DEFINED-ON-LINE '2029) 
(PUT 'FANCY-DFPRI 'DEFINED-IN-FILE 'TMPRINT/TMPRINT.RED) 
(PUT 'FANCY-DFPRI 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE FANCY-DFPRI (U L)
    (COND
     (*DFPRINT
      (FANCY-DFPRIINDEXED
       (COND ((ATOM (CADR U)) U) (T (CONS (CAR U) (CONS (CAADR U) (CDDR U)))))
       L))
     (T
      ((LAMBDA (M)
         (COND
          ((OR (FLAGP (CADR U) 'PRINT-INDEXED)
               (AND (PAIRP (CADR U)) (FLAGP (CAADR U) 'PRINT-INDEXED)))
           (FANCY-DFPRIINDEXED U L))
          ((EQUAL M 'PARTIAL) (FANCY-DFPRI0 U L 'PARTIAL-DF))
          ((EQUAL M 'TOTAL) (FANCY-DFPRI0 U L 'D))
          ((EQUAL M 'INDEXED) (FANCY-DFPRIINDEXED U L))
          (T (REDERR "unknown print mode for DF"))))
       (FANCY-MODE 'FANCY_PRINT_DF))))) 
(PUT 'FANCY-PARTIALDFPRI 'NUMBER-OF-ARGS 2) 
(PUT 'FANCY-PARTIALDFPRI 'DEFINED-ON-LINE '2044) 
(PUT 'FANCY-PARTIALDFPRI 'DEFINED-IN-FILE 'TMPRINT/TMPRINT.RED) 
(PUT 'FANCY-PARTIALDFPRI 'PROCEDURE_TYPE
     '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE FANCY-PARTIALDFPRI (U L) (FANCY-DFPRI0 U L 'PARTIAL-DF)) 
(PUT 'FANCY-DFPRI0 'NUMBER-OF-ARGS 3) 
(PUT 'FANCY-DFPRI0 'DEFINED-ON-LINE '2047) 
(PUT 'FANCY-DFPRI0 'DEFINED-IN-FILE 'TMPRINT/TMPRINT.RED) 
(PUT 'FANCY-DFPRI0 'PROCEDURE_TYPE
     '(ARROW (TIMES GENERAL GENERAL GENERAL) GENERAL)) 
(DE FANCY-DFPRI0 (U L SYMB)
    (COND ((NULL (CDDR U)) (FANCY-MAPRIN0 (LIST 'TIMES SYMB (CADR U))))
          ((GEQ L (GET 'EXPT 'INFIX))
           (FANCY-IN-BRACKETS (LIST 'FANCY-DFPRI0 (MKQUOTE U) 0 (MKQUOTE SYMB))
            '|(| '|)|))
          (T
           (PROG (POS TPOS FL W)
             (SETQ POS FANCY-POS*)
             (SETQ TPOS FANCY-TEXPOS)
             (SETQ FL FANCY-LINE*)
             (SETQ W
                     (PROG (X D Q N M)
                       (SETQ N 0)
                       (SETQ M 0)
                       (SETQ U (CDR U))
                       (SETQ Q (CAR U))
                       (SETQ U (CDR U))
                       (PROG ()
                        WHILELABEL
                         (COND ((NOT U) (RETURN NIL)))
                         (PROGN
                          (SETQ X (CAR U))
                          (SETQ U (CDR U))
                          (COND
                           ((AND U (NUMBERP (CAR U)))
                            (PROGN (SETQ M (CAR U)) (SETQ U (CDR U))))
                           (T (SETQ M 1)))
                          (SETQ N (PLUS N M))
                          (SETQ D
                                  (APPEND D
                                          (LIST SYMB
                                                (COND ((EQUAL M 1) X)
                                                      (T (LIST 'EXPT X M))))))
                          NIL)
                         (GO WHILELABEL))
                       (RETURN
                        (FANCY-MAPRIN0
                         (LIST 'QUOTIENT
                               (LIST 'TIMES
                                     (COND ((EQUAL N 1) SYMB)
                                           (T (LIST 'EXPT SYMB N)))
                                     Q)
                               (CONS 'TIMES D))))))
             (COND
              ((EQ W 'FAILED) (SETQ FANCY-LINE* FL) (SETQ FANCY-TEXPOS TPOS)
               (SETQ FANCY-POS* POS)))
             (RETURN W))))) 
(PUT 'FANCY-DFPRIINDEXED 'NUMBER-OF-ARGS 2) 
(PUT 'FANCY-DFPRIINDEXED 'DEFINED-ON-LINE '2071) 
(PUT 'FANCY-DFPRIINDEXED 'DEFINED-IN-FILE 'TMPRINT/TMPRINT.RED) 
(PUT 'FANCY-DFPRIINDEXED 'PROCEDURE_TYPE
     '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE FANCY-DFPRIINDEXED (U L)
    (COND ((NULL (CDDR U)) (FANCY-MAPRIN0 (LIST 'TIMES 'PARTIAL-DF (CADR U))))
          (T
           (PROG (W)
             (SETQ W (FANCY-MAPRIN0 (CADR U)))
             (COND ((AND TESTING-WIDTH* (EQUAL W 'FAILED)) (RETURN W)))
             (SETQ W
                     (FANCY-PRINT-INDEXLIST
                      (FANCY-DFPRIINDEXEDX (CDDR U) NIL)))
             (RETURN W))))) 
(PUT 'FANCY-DFPRIINDEXEDX 'NUMBER-OF-ARGS 2) 
(PUT 'FANCY-DFPRIINDEXEDX 'DEFINED-ON-LINE '2080) 
(PUT 'FANCY-DFPRIINDEXEDX 'DEFINED-IN-FILE 'TMPRINT/TMPRINT.RED) 
(PUT 'FANCY-DFPRIINDEXEDX 'PROCEDURE_TYPE
     '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE FANCY-DFPRIINDEXEDX (U P)
    (COND ((NULL U) NIL)
          ((NUMBERP (CAR U))
           (APPEND
            (PROG (I FORALL-RESULT FORALL-ENDPTR)
              (SETQ I 2)
              (COND ((MINUSP (DIFFERENCE (CAR U) I)) (RETURN NIL)))
              (SETQ FORALL-RESULT (SETQ FORALL-ENDPTR (CONS P NIL)))
             LOOPLABEL
              (SETQ I (PLUS2 I 1))
              (COND ((MINUSP (DIFFERENCE (CAR U) I)) (RETURN FORALL-RESULT)))
              (RPLACD FORALL-ENDPTR (CONS P NIL))
              (SETQ FORALL-ENDPTR (CDR FORALL-ENDPTR))
              (GO LOOPLABEL))
            (FANCY-DFPRIINDEXEDX (CDR U) P)))
          (T (CONS (CAR U) (FANCY-DFPRIINDEXEDX (CDR U) (CAR U)))))) 
(PUT '|:RD:| 'FANCY-PRIFN 'FANCY-RDPRIN) 
(PUT '|:RD:| 'FANCY-FLATPRIFN 'FANCY-RDPRIN) 
(PUT 'FANCY-RDPRIN 'NUMBER-OF-ARGS 1) 
(PUT 'FANCY-RDPRIN 'DEFINED-ON-LINE '2090) 
(PUT 'FANCY-RDPRIN 'DEFINED-IN-FILE 'TMPRINT/TMPRINT.RED) 
(PUT 'FANCY-RDPRIN 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE FANCY-RDPRIN (U)
    (PROG (POS TPOS FL W)
      (SETQ POS FANCY-POS*)
      (SETQ TPOS FANCY-TEXPOS)
      (SETQ FL FANCY-LINE*)
      (SETQ W
              (PROG (DIGITS DOTPOS XP)
                (SETQ DOTPOS 0)
                (SETQ XP 0)
                (SETQ U (|RD:EXPLODE| U))
                (SETQ DIGITS (CAR U))
                (SETQ XP (CADR U))
                (SETQ DOTPOS (CADDR U))
                (RETURN (FANCY-RDPRIN1 DIGITS XP DOTPOS))))
      (COND
       ((EQ W 'FAILED) (SETQ FANCY-LINE* FL) (SETQ FANCY-TEXPOS TPOS)
        (SETQ FANCY-POS* POS)))
      (RETURN W))) 
(PUT 'FANCY-RDPRIN1 'NUMBER-OF-ARGS 3) 
(PUT 'FANCY-RDPRIN1 'DEFINED-ON-LINE '2098) 
(PUT 'FANCY-RDPRIN1 'DEFINED-IN-FILE 'TMPRINT/TMPRINT.RED) 
(PUT 'FANCY-RDPRIN1 'PROCEDURE_TYPE
     '(ARROW (TIMES GENERAL GENERAL GENERAL) GENERAL)) 
(DE FANCY-RDPRIN1 (DIGITS XP DOTPOS)
    (PROG (STR)
      (COND
       ((AND (GREATERP XP 0)
             (LESSP (PLUS DOTPOS XP) (DIFFERENCE (LENGTH DIGITS) 1)))
        (PROGN (SETQ DOTPOS (PLUS DOTPOS XP)) (SETQ XP 0))))
      (PROG (I)
        (SETQ I 1)
       LAB
        (COND ((MINUSP (DIFFERENCE DOTPOS I)) (RETURN NIL)))
        (PROGN
         (SETQ STR (CONS (CAR DIGITS) STR))
         (SETQ DIGITS (CDR DIGITS))
         (COND ((NULL DIGITS) (SETQ DIGITS '(|0|))))
         NIL)
        (SETQ I (PLUS2 I 1))
        (GO LAB))
      (SETQ STR (CONS '|.| STR))
      (PROG (C)
        (SETQ C DIGITS)
       LAB
        (COND ((NULL C) (RETURN NIL)))
        ((LAMBDA (C) (SETQ STR (CONS C STR))) (CAR C))
        (SETQ C (CDR C))
        (GO LAB))
      (COND
       ((NOT (EQUAL XP 0))
        (PROGN
         (SETQ STR (CONS 'E STR))
         (PROG (C)
           (SETQ C (EXPLODE2 XP))
          LAB
           (COND ((NULL C) (RETURN NIL)))
           ((LAMBDA (C) (SETQ STR (CONS C STR))) (CAR C))
           (SETQ C (CDR C))
           (GO LAB)))))
      (COND
       ((AND TESTING-WIDTH*
             (GREATERP (PLUS FANCY-POS* (TIMES 2 (LENGTH STR)))
                       (TIMES 2 (LINELENGTH NIL))))
        (RETURN 'FAILED)))
      (FANCY-PRIN2NUMBER1 (REVERSIP STR)))) 
(PUT '|:CR:| 'FANCY-PPRIFN 'FANCY-CMPXPRIN) 
(PUT '|:CR:| 'FANCY-PPRIFN 'FANCY-CMPXPRIN) 
(PUT 'FANCY-CMPXPRIN 'NUMBER-OF-ARGS 2) 
(PUT 'FANCY-CMPXPRIN 'DEFINED-ON-LINE '2121) 
(PUT 'FANCY-CMPXPRIN 'DEFINED-IN-FILE 'TMPRINT/TMPRINT.RED) 
(PUT 'FANCY-CMPXPRIN 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE FANCY-CMPXPRIN (U L)
    (PROG (RP IP)
      (SETQ RP (REVAL1 (LIST 'REPART U) T))
      (SETQ IP (REVAL1 (LIST 'IMPART U) T))
      (RETURN
       (FANCY-MAPRINT
        (COND ((EQUAL IP 0) RP) ((EQUAL RP 0) (LIST 'TIMES IP 'I))
              (T (LIST 'PLUS RP (LIST 'TIMES IP 'I))))
        L)))) 
(PUT '|FANCY-DN:PRIN| 'NUMBER-OF-ARGS 1) 
(PUT '|FANCY-DN:PRIN| 'DEFINED-ON-LINE '2130) 
(PUT '|FANCY-DN:PRIN| 'DEFINED-IN-FILE 'TMPRINT/TMPRINT.RED) 
(PUT '|FANCY-DN:PRIN| 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE |FANCY-DN:PRIN| (U)
    (PROG (LST DOTPOS EX)
      (SETQ DOTPOS 0)
      (SETQ EX 0)
      (SETQ LST (BFEXPLODE0X (CADR U) (CDDR U)))
      (SETQ EX (CADR LST))
      (SETQ DOTPOS (CADDR LST))
      (SETQ LST (CAR LST))
      (RETURN (FANCY-RDPRIN1 LST EX DOTPOS)))) 
(PUT '|:DN:| 'FANCY-PRIFN '|FANCY-DN:PRIN|) 
(FMP-SWITCH T) 
(ENDMODULE) 
(MODULE (LIST 'F)) 
(FLUID '(*NAT)) 
(FLUID '(OBRKP*)) 
(PUT 'FANCY-SETMATPRI 'NUMBER-OF-ARGS 2) 
(PUT 'FANCY-SETMATPRI 'DEFINED-ON-LINE '2155) 
(PUT 'FANCY-SETMATPRI 'DEFINED-IN-FILE 'TMPRINT/TMPRINT.RED) 
(PUT 'FANCY-SETMATPRI 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE FANCY-SETMATPRI (U V) (FANCY-MATPRI1 (CDR V) U)) 
(PUT 'MAT 'FANCY-SETPRIFN 'FANCY-SETMATPRI) 
(PUT 'FANCY-MATPRI 'NUMBER-OF-ARGS 1) 
(PUT 'FANCY-MATPRI 'DEFINED-ON-LINE '2160) 
(PUT 'FANCY-MATPRI 'DEFINED-IN-FILE 'TMPRINT/TMPRINT.RED) 
(PUT 'FANCY-MATPRI 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE FANCY-MATPRI (U) (FANCY-MATPRI1 (CDR U) NIL)) 
(PUT 'MAT 'FANCY-PRIFN 'FANCY-MATPRI) 
(PUT 'FANCY-MATPRI1 'NUMBER-OF-ARGS 2) 
(PUT 'FANCY-MATPRI1 'DEFINED-ON-LINE '2166) 
(PUT 'FANCY-MATPRI1 'DEFINED-IN-FILE 'TMPRINT/TMPRINT.RED) 
(PUT 'FANCY-MATPRI1 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE FANCY-MATPRI1 (U X)
    (PROG (W)
      (SETQ W (FANCY-MATPRI2 U X NIL))
      (COND ((OR (NEQ W 'FAILED) TESTING-WIDTH*) (RETURN W)))
      (FANCY-MATPRI3 U X))) 
(PUT 'FANCY-MATPRI2 'NUMBER-OF-ARGS 3) 
(PUT 'FANCY-MATPRI2 'DEFINED-ON-LINE '2175) 
(PUT 'FANCY-MATPRI2 'DEFINED-IN-FILE 'TMPRINT/TMPRINT.RED) 
(PUT 'FANCY-MATPRI2 'PROCEDURE_TYPE
     '(ARROW (TIMES GENERAL GENERAL GENERAL) GENERAL)) 
(DE FANCY-MATPRI2 (U X BKT)
    (PROG (POS TPOS FL W)
      (SETQ POS FANCY-POS*)
      (SETQ TPOS FANCY-TEXPOS)
      (SETQ FL FANCY-LINE*)
      (SETQ W
              (PROG (W TESTING-WIDTH* FL FP FMAT ROW ELT FAIL COLS ROWS RW
                     MAXPOS)
                (SETQ COLS 0)
                (SETQ ROWS 0)
                (SETQ RW 0)
                (SETQ MAXPOS 0)
                (SETQ TESTING-WIDTH* T)
                (SETQ ROWS (LENGTH U))
                (SETQ COLS (LENGTH (CAR U)))
                (COND ((GREATERP (TIMES COLS ROWS) 400) (RETURN 'FAILED)))
                (COND (X (PROGN (FANCY-MAPRINT X 0) (FANCY-PRIN2* ":=" 4))))
                (SETQ FL FANCY-LINE*)
                (SETQ FP FANCY-POS*)
                (SETQ RW
                        (DIFFERENCE (DIFFERENCE (LINELENGTH NIL) 2)
                                    (PLUS FANCY-POS* 2)))
                (SETQ RW (QUOTIENT RW COLS))
                (SETQ FMAT
                        (PROG (ROW FORALL-RESULT FORALL-ENDPTR)
                          (SETQ ROW U)
                          (COND ((NULL ROW) (RETURN NIL)))
                          (SETQ FORALL-RESULT
                                  (SETQ FORALL-ENDPTR
                                          (CONS
                                           ((LAMBDA (ROW)
                                              (PROG (ELT FORALL-RESULT
                                                     FORALL-ENDPTR)
                                                (SETQ ELT ROW)
                                                (COND
                                                 ((NULL ELT) (RETURN NIL)))
                                                (SETQ FORALL-RESULT
                                                        (SETQ FORALL-ENDPTR
                                                                (CONS
                                                                 ((LAMBDA (ELT)
                                                                    (COND
                                                                     ((NOT
                                                                       FAIL)
                                                                      (PROGN
                                                                       (SETQ FANCY-LINE*
                                                                               NIL)
                                                                       (SETQ FANCY-POS*
                                                                               0)
                                                                       (SETQ W
                                                                               (FANCY-MAPRINT
                                                                                ELT
                                                                                0))
                                                                       (COND
                                                                        ((GREATERP
                                                                          FANCY-POS*
                                                                          MAXPOS)
                                                                         (SETQ MAXPOS
                                                                                 FANCY-POS*)))
                                                                       (COND
                                                                        ((OR
                                                                          (EQUAL
                                                                           W
                                                                           'FAILED)
                                                                          (GREATERP
                                                                           FANCY-POS*
                                                                           RW))
                                                                         (SETQ FAIL
                                                                                 T))
                                                                        (T
                                                                         (CONS
                                                                          FANCY-LINE*
                                                                          FANCY-POS*)))))))
                                                                  (CAR ELT))
                                                                 NIL)))
                                               LOOPLABEL
                                                (SETQ ELT (CDR ELT))
                                                (COND
                                                 ((NULL ELT)
                                                  (RETURN FORALL-RESULT)))
                                                (RPLACD FORALL-ENDPTR
                                                        (CONS
                                                         ((LAMBDA (ELT)
                                                            (COND
                                                             ((NOT FAIL)
                                                              (PROGN
                                                               (SETQ FANCY-LINE*
                                                                       NIL)
                                                               (SETQ FANCY-POS*
                                                                       0)
                                                               (SETQ W
                                                                       (FANCY-MAPRINT
                                                                        ELT 0))
                                                               (COND
                                                                ((GREATERP
                                                                  FANCY-POS*
                                                                  MAXPOS)
                                                                 (SETQ MAXPOS
                                                                         FANCY-POS*)))
                                                               (COND
                                                                ((OR
                                                                  (EQUAL W
                                                                         'FAILED)
                                                                  (GREATERP
                                                                   FANCY-POS*
                                                                   RW))
                                                                 (SETQ FAIL T))
                                                                (T
                                                                 (CONS
                                                                  FANCY-LINE*
                                                                  FANCY-POS*)))))))
                                                          (CAR ELT))
                                                         NIL))
                                                (SETQ FORALL-ENDPTR
                                                        (CDR FORALL-ENDPTR))
                                                (GO LOOPLABEL)))
                                            (CAR ROW))
                                           NIL)))
                         LOOPLABEL
                          (SETQ ROW (CDR ROW))
                          (COND ((NULL ROW) (RETURN FORALL-RESULT)))
                          (RPLACD FORALL-ENDPTR
                                  (CONS
                                   ((LAMBDA (ROW)
                                      (PROG (ELT FORALL-RESULT FORALL-ENDPTR)
                                        (SETQ ELT ROW)
                                        (COND ((NULL ELT) (RETURN NIL)))
                                        (SETQ FORALL-RESULT
                                                (SETQ FORALL-ENDPTR
                                                        (CONS
                                                         ((LAMBDA (ELT)
                                                            (COND
                                                             ((NOT FAIL)
                                                              (PROGN
                                                               (SETQ FANCY-LINE*
                                                                       NIL)
                                                               (SETQ FANCY-POS*
                                                                       0)
                                                               (SETQ W
                                                                       (FANCY-MAPRINT
                                                                        ELT 0))
                                                               (COND
                                                                ((GREATERP
                                                                  FANCY-POS*
                                                                  MAXPOS)
                                                                 (SETQ MAXPOS
                                                                         FANCY-POS*)))
                                                               (COND
                                                                ((OR
                                                                  (EQUAL W
                                                                         'FAILED)
                                                                  (GREATERP
                                                                   FANCY-POS*
                                                                   RW))
                                                                 (SETQ FAIL T))
                                                                (T
                                                                 (CONS
                                                                  FANCY-LINE*
                                                                  FANCY-POS*)))))))
                                                          (CAR ELT))
                                                         NIL)))
                                       LOOPLABEL
                                        (SETQ ELT (CDR ELT))
                                        (COND
                                         ((NULL ELT) (RETURN FORALL-RESULT)))
                                        (RPLACD FORALL-ENDPTR
                                                (CONS
                                                 ((LAMBDA (ELT)
                                                    (COND
                                                     ((NOT FAIL)
                                                      (PROGN
                                                       (SETQ FANCY-LINE* NIL)
                                                       (SETQ FANCY-POS* 0)
                                                       (SETQ W
                                                               (FANCY-MAPRINT
                                                                ELT 0))
                                                       (COND
                                                        ((GREATERP FANCY-POS*
                                                                   MAXPOS)
                                                         (SETQ MAXPOS
                                                                 FANCY-POS*)))
                                                       (COND
                                                        ((OR (EQUAL W 'FAILED)
                                                             (GREATERP
                                                              FANCY-POS* RW))
                                                         (SETQ FAIL T))
                                                        (T
                                                         (CONS FANCY-LINE*
                                                               FANCY-POS*)))))))
                                                  (CAR ELT))
                                                 NIL))
                                        (SETQ FORALL-ENDPTR
                                                (CDR FORALL-ENDPTR))
                                        (GO LOOPLABEL)))
                                    (CAR ROW))
                                   NIL))
                          (SETQ FORALL-ENDPTR (CDR FORALL-ENDPTR))
                          (GO LOOPLABEL)))
                (COND (FAIL (RETURN 'FAILED)))
                (SETQ TESTING-WIDTH* NIL)
                (SETQ FANCY-POS* FP)
                (SETQ FANCY-LINE* FL)
                (FANCY-PRIN2*
                 (BLDMSG_INTERNAL "\\left%w\\begin{matrix}"
                                  (LIST (COND (BKT (CAR BKT)) (T "("))))
                 0)
                (PROG ()
                 WHILELABEL
                  (COND ((NOT FMAT) (RETURN NIL)))
                  (PROGN
                   (SETQ ROW (CAR FMAT))
                   (SETQ FMAT (CDR FMAT))
                   (PROG ()
                    WHILELABEL
                     (COND ((NOT ROW) (RETURN NIL)))
                     (PROGN
                      (SETQ ELT (CAR ROW))
                      (SETQ ROW (CDR ROW))
                      (SETQ FANCY-LINE* (APPEND (CAR ELT) FANCY-LINE*))
                      (COND (ROW (SETQ FANCY-LINE* (CONS '& FANCY-LINE*)))
                            (FMAT
                             (SETQ FANCY-LINE* (CONS "\\\\" FANCY-LINE*))))
                      NIL)
                     (GO WHILELABEL))
                   NIL)
                  (GO WHILELABEL))
                (FANCY-PRIN2*
                 (BLDMSG_INTERNAL "\\end{matrix}\\right%w"
                                  (LIST (COND (BKT (CDR BKT)) (T ")"))))
                 0)
                (SETQ FANCY-POS* (PLUS FP (TIMES MAXPOS (PLUS COLS 1))))
                (RETURN T)))
      (COND
       ((EQ W 'FAILED) (SETQ FANCY-LINE* FL) (SETQ FANCY-TEXPOS TPOS)
        (SETQ FANCY-POS* POS)))
      (RETURN W))) 
(PUT 'FANCY-MATPRI3 'NUMBER-OF-ARGS 2) 
(PUT 'FANCY-MATPRI3 'DEFINED-ON-LINE '2227) 
(PUT 'FANCY-MATPRI3 'DEFINED-IN-FILE 'TMPRINT/TMPRINT.RED) 
(PUT 'FANCY-MATPRI3 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE FANCY-MATPRI3 (U X)
    (COND ((NULL X) (FANCY-MATPRIFLAT (CONS 'MAT U)))
          (T
           (PROG (OBRKP* *LIST R C)
             (SETQ R 0)
             (SETQ C 0)
             (SETQ OBRKP* NIL)
             (COND ((NULL X) (SETQ X 'MAT)))
            FANCY-TERPRI*
             (PROG (ROW)
               (SETQ ROW U)
              LAB
               (COND ((NULL ROW) (RETURN NIL)))
               ((LAMBDA (ROW)
                  (PROGN
                   (SETQ R (PLUS R 1))
                   (SETQ C 0)
                   (PROG (ELT)
                     (SETQ ELT ROW)
                    LAB
                     (COND ((NULL ELT) (RETURN NIL)))
                     ((LAMBDA (ELT)
                        (PROGN
                         (SETQ C (PLUS C 1))
                         (COND
                          ((NOT *NERO)
                           (PROGN
                            (FANCY-PRIN2* X T)
                            (FANCY-PRINT-INDEXLIST (LIST R C))
                            (FANCY-PRIN2* ":=" T)
                            (FANCY-MAPRINT ELT 0)
                            (FANCY-TERPRI* T)
                            NIL)))
                         NIL))
                      (CAR ELT))
                     (SETQ ELT (CDR ELT))
                     (GO LAB))
                   NIL))
                (CAR ROW))
               (SETQ ROW (CDR ROW))
               (GO LAB)))))) 
(PUT 'FANCY-MATPRIFLAT 'NUMBER-OF-ARGS 1) 
(PUT 'FANCY-MATPRIFLAT 'DEFINED-ON-LINE '2249) 
(PUT 'FANCY-MATPRIFLAT 'DEFINED-IN-FILE 'TMPRINT/TMPRINT.RED) 
(PUT 'FANCY-MATPRIFLAT 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE FANCY-MATPRIFLAT (U)
    (PROG ()
      (FANCY-OPRIN 'MAT)
      (FANCY-IN-BRACKETS
       (LIST 'FANCY-MATPRIFLAT1 (MKQUOTE '*WCOMMA*) 0 (MKQUOTE (CDR U))) '|(|
       '|)|))) 
(PUT 'FANCY-MATPRIFLAT1 'NUMBER-OF-ARGS 3) 
(PUT 'FANCY-MATPRIFLAT1 'DEFINED-ON-LINE '2257) 
(PUT 'FANCY-MATPRIFLAT1 'DEFINED-IN-FILE 'TMPRINT/TMPRINT.RED) 
(PUT 'FANCY-MATPRIFLAT1 'PROCEDURE_TYPE
     '(ARROW (TIMES GENERAL GENERAL GENERAL) GENERAL)) 
(DE FANCY-MATPRIFLAT1 (OP P L)
    (PROG (FST W)
      (PROG (V)
        (SETQ V L)
       LAB
        (COND ((NULL V) (RETURN NIL)))
        ((LAMBDA (V)
           (PROGN
            (COND
             (FST
              (PROGN
               (FANCY-PRIN2* "\\," 1)
               (FANCY-OPRIN OP)
               (FANCY-PRIN2* "\\," 1)
               NIL)))
            (COND
             (FST
              ((LAMBDA (TESTING-WIDTH*)
                 (SETQ W
                         (PROG (POS TPOS FL W)
                           (SETQ POS FANCY-POS*)
                           (SETQ TPOS FANCY-TEXPOS)
                           (SETQ FL FANCY-LINE*)
                           (SETQ W
                                   (FANCY-IN-BRACKETS
                                    (LIST 'FANCY-INPRINTLIST
                                          (MKQUOTE '*WCOMMA*) 0 (MKQUOTE V))
                                    '|(| '|)|))
                           (COND
                            ((EQ W 'FAILED) (SETQ FANCY-LINE* FL)
                             (SETQ FANCY-TEXPOS TPOS) (SETQ FANCY-POS* POS)))
                           (RETURN W))))
               T)))
            (COND ((EQ W 'FAILED) (FANCY-TERPRI* T)))
            (COND
             ((OR (NOT FST) (EQ W 'FAILED))
              (FANCY-IN-BRACKETS
               (LIST 'FANCY-INPRINTLIST (MKQUOTE '*WCOMMA*) 0 (MKQUOTE V)) '|(|
               '|)|)))
            (SETQ FST T)
            NIL))
         (CAR V))
        (SETQ V (CDR V))
        (GO LAB)))) 
(PUT 'MAT 'FANCY-FLATPRIFN 'FANCY-MATPRIFLAT) 
(PUT 'FANCY-MATFIT 'NUMBER-OF-ARGS 3) 
(PUT 'FANCY-MATFIT 'DEFINED-ON-LINE '2284) 
(PUT 'FANCY-MATFIT 'DEFINED-IN-FILE 'TMPRINT/TMPRINT.RED) 
(PUT 'FANCY-MATFIT 'PROCEDURE_TYPE
     '(ARROW (TIMES GENERAL GENERAL GENERAL) GENERAL)) 
(DE FANCY-MATFIT (U P OP)
    (PROG (POS TPOS FL W)
      (SETQ POS FANCY-POS*)
      (SETQ TPOS FANCY-TEXPOS)
      (SETQ FL FANCY-LINE*)
      (SETQ W
              (PROG (POS TPOS FL FP W LL)
                (SETQ POS FANCY-POS*)
                (SETQ TPOS FANCY-TEXPOS)
                (SETQ FL FANCY-LINE*)
                (PROG (TESTING-WIDTH*)
                  (SETQ TESTING-WIDTH* T)
                  (COND (OP (SETQ W (FANCY-OPRIN OP))))
                  (COND ((NEQ W 'FAILED) (SETQ W (FANCY-MATPRI U)))))
                (COND
                 ((OR (NEQ W 'FAILED) (AND (EQ W 'FAILED) TESTING-WIDTH*))
                  (RETURN W)))
                (SETQ FANCY-LINE* FL)
                (SETQ FANCY-POS* POS)
                (SETQ FANCY-TEXPOS TPOS)
                (SETQ W NIL)
                (SETQ FP FANCY-PAGE*)
                (PROG (TESTING-WIDTH*)
                  (SETQ TESTING-WIDTH* T)
                  (COND (OP (SETQ W (FANCY-OPRIN OP))))
                  (FANCY-TERPRI* NIL)
                  (COND ((NEQ W 'FAILED) (SETQ W (FANCY-MATPRI U)))))
                (COND ((NEQ W 'FAILED) (RETURN T)))
                (SETQ FANCY-LINE* FL)
                (SETQ FANCY-POS* POS)
                (SETQ FANCY-TEXPOS TPOS)
                (SETQ FANCY-PAGE* FP)
                (SETQ LL (LINELENGTH NIL))
                (COND (OP (FANCY-OPRIN OP)))
                (COND
                 ((OR (ATOM U) (GREATERP FANCY-POS* (QUOTIENT LL 2)))
                  (FANCY-TERPRI* NIL)))
                (RETURN (FANCY-MATPRIFLAT U))))
      (COND
       ((EQ W 'FAILED) (SETQ FANCY-LINE* FL) (SETQ FANCY-TEXPOS TPOS)
        (SETQ FANCY-POS* POS)))
      (RETURN W))) 
(PUT 'MAT 'FANCY-PRINFIT 'FANCY-MATFIT) 
(PUT 'TAYLOR* 'FANCY-REFORM 'TAYLOR*PRINT1) 
(ENDMODULE) 
(MODULE (LIST 'FANCY_SPECFN)) 
(PUT 'SIN 'FANCY-FUNCTIONSYMBOL "\\sin") 
(PUT 'COS 'FANCY-FUNCTIONSYMBOL "\\cos") 
(PUT 'TAN 'FANCY-FUNCTIONSYMBOL "\\tan") 
(PUT 'COT 'FANCY-FUNCTIONSYMBOL "\\cot") 
(PUT 'SEC 'FANCY-FUNCTIONSYMBOL "\\sec") 
(PUT 'CSC 'FANCY-FUNCTIONSYMBOL "\\csc") 
(PUT 'SINH 'FANCY-FUNCTIONSYMBOL "\\sinh") 
(PUT 'COSH 'FANCY-FUNCTIONSYMBOL "\\cosh") 
(PUT 'TANH 'FANCY-FUNCTIONSYMBOL "\\tanh") 
(PUT 'COTH 'FANCY-FUNCTIONSYMBOL "\\coth") 
(PUT 'SECH 'FANCY-FUNCTIONSYMBOL "\\mathrm{sech}") 
(PUT 'CSCH 'FANCY-FUNCTIONSYMBOL "\\mathrm{csch}") 
(PUT 'ASIN 'FANCY-FUNCTIONSYMBOL "\\arcsin") 
(PUT 'ACOS 'FANCY-FUNCTIONSYMBOL "\\arccos") 
(PUT 'ATAN 'FANCY-FUNCTIONSYMBOL "\\arctan") 
(PUT 'ACOT 'FANCY-FUNCTIONSYMBOL "\\mathrm{arccot}") 
(PUT 'ASEC 'FANCY-FUNCTIONSYMBOL "\\mathrm{arcsec}") 
(PUT 'ACSC 'FANCY-FUNCTIONSYMBOL "\\mathrm{arccsc}") 
(PUT 'ASINH 'FANCY-FUNCTIONSYMBOL "\\mathrm{arcsinh}") 
(PUT 'ACOSH 'FANCY-FUNCTIONSYMBOL "\\mathrm{arccosh}") 
(PUT 'ATANH 'FANCY-FUNCTIONSYMBOL "\\mathrm{arctanh}") 
(PUT 'ACOTH 'FANCY-FUNCTIONSYMBOL "\\mathrm{arccoth}") 
(PUT 'ASECH 'FANCY-FUNCTIONSYMBOL "\\mathrm{arcsech}") 
(PUT 'ACSCH 'FANCY-FUNCTIONSYMBOL "\\mathrm{arccsch}") 
(PUT 'EXP 'FANCY-FUNCTIONSYMBOL "\\exp") 
(PUT 'LOG 'FANCY-FUNCTIONSYMBOL "\\log") 
(PUT 'LOGB 'FANCY-PRIFN 'FANCY-LOGB) 
(PUT 'LOG10 'FANCY-PRIFN 'FANCY-LOG10) 
(DE FANCY-LOGB (U) (FANCY-INDEXED-FN (LIST "\\log" (CADDR U) (CADR U)))) 
(PUT 'FANCY-LOGB 'NUMBER-OF-ARGS 1) 
(PUT 'FANCY-LOGB 'DEFINED-ON-LINE '2366) 
(PUT 'FANCY-LOGB 'DEFINED-IN-FILE 'TMPRINT/TMPRINT.RED) 
(PUT 'FANCY-LOGB 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(PUTC 'FANCY-LOGB 'INLINE
      '(LAMBDA (U) (FANCY-INDEXED-FN (LIST "\\log" (CADDR U) (CADR U))))) 
(DE FANCY-LOG10 (U) (FANCY-INDEXED-FN (LIST "\\log" 10 (CADR U)))) 
(PUT 'FANCY-LOG10 'NUMBER-OF-ARGS 1) 
(PUT 'FANCY-LOG10 'DEFINED-ON-LINE '2370) 
(PUT 'FANCY-LOG10 'DEFINED-IN-FILE 'TMPRINT/TMPRINT.RED) 
(PUT 'FANCY-LOG10 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(PUTC 'FANCY-LOG10 'INLINE
      '(LAMBDA (U) (FANCY-INDEXED-FN (LIST "\\log" 10 (CADR U))))) 
(PUT 'ATAN2 'FANCY-SPECIAL-SYMBOL "\\mathrm{arctan}_2") 
(PUT 'FANCY-INDEXED-FN 'NUMBER-OF-ARGS 1) 
(PUT 'FANCY-INDEXED-FN 'DEFINED-ON-LINE '2376) 
(PUT 'FANCY-INDEXED-FN 'DEFINED-IN-FILE 'TMPRINT/TMPRINT.RED) 
(PUT 'FANCY-INDEXED-FN 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE FANCY-INDEXED-FN (U)
    (PROG (POS TPOS FL W)
      (SETQ POS FANCY-POS*)
      (SETQ TPOS FANCY-TEXPOS)
      (SETQ FL FANCY-LINE*)
      (SETQ W
              (PROG (W)
                (FANCY-PREFIX-OPERATOR (CAR U))
                (SETQ W (FANCY-PRINT-ONE-INDEX (CADR U)))
                (COND ((AND TESTING-WIDTH* (EQ W 'FAILED)) (RETURN W)))
                (RETURN (FANCY-PRINT-FUNCTION-ARGUMENTS (CDDR U)))))
      (COND
       ((EQ W 'FAILED) (SETQ FANCY-LINE* FL) (SETQ FANCY-TEXPOS TPOS)
        (SETQ FANCY-POS* POS)))
      (RETURN W))) 
(PUT 'LN 'FANCY-SPECIAL-SYMBOL "\\ln") 
(PUT 'MAX 'FANCY-SPECIAL-SYMBOL "\\max") 
(PUT 'MIN 'FANCY-SPECIAL-SYMBOL "\\min") 
(PUT 'ABS 'FANCY-PRIFN 'FANCY-ABS) 
(PUT 'FANCY-ABS 'NUMBER-OF-ARGS 1) 
(PUT 'FANCY-ABS 'DEFINED-ON-LINE '2393) 
(PUT 'FANCY-ABS 'DEFINED-IN-FILE 'TMPRINT/TMPRINT.RED) 
(PUT 'FANCY-ABS 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE FANCY-ABS (U)
    (PROG (POS TPOS FL W)
      (SETQ POS FANCY-POS*)
      (SETQ TPOS FANCY-TEXPOS)
      (SETQ FL FANCY-LINE*)
      (SETQ W
              (PROG (W)
                (FANCY-PRIN2* "\\left|" 1)
                (SETQ W (FANCY-MAPRIN0 (CADR U)))
                (FANCY-PRIN2* "\\right|" 1)
                (RETURN W)))
      (COND
       ((EQ W 'FAILED) (SETQ FANCY-LINE* FL) (SETQ FANCY-TEXPOS TPOS)
        (SETQ FANCY-POS* POS)))
      (RETURN W))) 
(PUT 'EULER_GAMMA 'FANCY-SPECIAL-SYMBOL "\\gamma ") 
(PUT 'GAMMA 'FANCY-FUNCTIONSYMBOL "\\Gamma ") 
(PUT 'POLYGAMMA 'FANCY-PRIFN 'FANCY-POLYGAMMA) 
(PUT 'FANCY-POLYGAMMA 'NUMBER-OF-ARGS 1) 
(PUT 'FANCY-POLYGAMMA 'DEFINED-ON-LINE '2408) 
(PUT 'FANCY-POLYGAMMA 'DEFINED-IN-FILE 'TMPRINT/TMPRINT.RED) 
(PUT 'FANCY-POLYGAMMA 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE FANCY-POLYGAMMA (U)
    (PROG (POS TPOS FL W)
      (SETQ POS FANCY-POS*)
      (SETQ TPOS FANCY-TEXPOS)
      (SETQ FL FANCY-LINE*)
      (SETQ W
              (PROG (W)
                (FANCY-PREFIX-OPERATOR "\\psi")
                (FANCY-PRIN2* '^ 0)
                (FANCY-PRIN2* '{ 0)
                (SETQ W
                        (FANCY-IN-BRACKETS
                         (LIST 'FANCY-MAPRIN0 (MKQUOTE (CADR U))) '|(| '|)|))
                (COND ((AND TESTING-WIDTH* (EQ W 'FAILED)) (RETURN W)))
                (FANCY-PRIN2* '} 0)
                (RETURN
                 (FANCY-IN-BRACKETS (LIST 'FANCY-MAPRIN0 (MKQUOTE (CADDR U)))
                  '|(| '|)|))))
      (COND
       ((EQ W 'FAILED) (SETQ FANCY-LINE* FL) (SETQ FANCY-TEXPOS TPOS)
        (SETQ FANCY-POS* POS)))
      (RETURN W))) 
(PUT 'IGAMMA 'FANCY-FUNCTIONSYMBOL '|p|) 
(PUT 'M_GAMMA 'FANCY-FUNCTIONSYMBOL "\\gamma") 
(PUT 'IBETA 'FANCY-PRIFN 'FANCY-IBETA) 
(PUT 'IBETA 'FANCY-FUNCTIONSYMBOL '|i|) 
(PUT 'FANCY-IBETA 'NUMBER-OF-ARGS 1) 
(PUT 'FANCY-IBETA 'DEFINED-ON-LINE '2426) 
(PUT 'FANCY-IBETA 'DEFINED-IN-FILE 'TMPRINT/TMPRINT.RED) 
(PUT 'FANCY-IBETA 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE FANCY-IBETA (U)
    (FANCY-INDEXED-FN (LIST (CAR U) (CADDDR U) (CADR U) (CADDR U)))) 
(PUT 'DILOG 'FANCY-FUNCTIONSYMBOL "\\mathrm{Li}_2") 
(PUT 'POCHHAMMER 'FANCY-PRIFN 'FANCY-POCHHAMMER) 
(PUT 'FANCY-POCHHAMMER 'NUMBER-OF-ARGS 1) 
(PUT 'FANCY-POCHHAMMER 'DEFINED-ON-LINE '2434) 
(PUT 'FANCY-POCHHAMMER 'DEFINED-IN-FILE 'TMPRINT/TMPRINT.RED) 
(PUT 'FANCY-POCHHAMMER 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE FANCY-POCHHAMMER (U)
    (PROG (POS TPOS FL W)
      (SETQ POS FANCY-POS*)
      (SETQ TPOS FANCY-TEXPOS)
      (SETQ FL FANCY-LINE*)
      (SETQ W
              (PROG (W)
                (SETQ W
                        (FANCY-IN-BRACKETS
                         (LIST 'FANCY-MAPRIN0 (MKQUOTE (CADR U))) '|(| '|)|))
                (COND ((AND TESTING-WIDTH* (EQ W 'FAILED)) (RETURN W)))
                (FANCY-PRIN2* '_ 0)
                (FANCY-PRIN2* '{ 0)
                (FANCY-MAPRIN0 (CADDR U))
                (FANCY-PRIN2* '} 0)))
      (COND
       ((EQ W 'FAILED) (SETQ FANCY-LINE* FL) (SETQ FANCY-TEXPOS TPOS)
        (SETQ FANCY-POS* POS)))
      (RETURN W))) 
(PUT 'EI 'FANCY-FUNCTIONSYMBOL "\\mathrm{Ei}") 
(PUT 'SI 'FANCY-FUNCTIONSYMBOL "\\mathrm{Si}") 
(PUT 'CI 'FANCY-FUNCTIONSYMBOL "\\mathrm{Ci}") 
(PUT 'SHI 'FANCY-FUNCTIONSYMBOL "\\mathrm{Shi}") 
(PUT 'CHI 'FANCY-FUNCTIONSYMBOL "\\mathrm{Chi}") 
(PUT 'ERF 'FANCY-FUNCTIONSYMBOL "\\mathrm{erf}") 
(PUT 'FRESNEL_S 'FANCY-FUNCTIONSYMBOL "\\mathrm{S}") 
(PUT 'FRESNEL_C 'FANCY-FUNCTIONSYMBOL "\\mathrm{C}") 
(PUT 'AIRY_AI 'FANCY-FUNCTIONSYMBOL "\\mathrm{Ai}") 
(PUT 'AIRY_BI 'FANCY-FUNCTIONSYMBOL "\\mathrm{Bi}") 
(PUT 'AIRY_AIPRIME 'FANCY-FUNCTIONSYMBOL "\\mathrm{Ai}^\\prime") 
(PUT 'AIRY_BIPRIME 'FANCY-FUNCTIONSYMBOL "\\mathrm{Bi}^\\prime") 
(PUT 'BESSELI 'FANCY-PRIFN 'FANCY-INDEXED-FN) 
(PUT 'BESSELJ 'FANCY-PRIFN 'FANCY-INDEXED-FN) 
(PUT 'BESSELY 'FANCY-PRIFN 'FANCY-INDEXED-FN) 
(PUT 'BESSELK 'FANCY-PRIFN 'FANCY-INDEXED-FN) 
(PUT 'BESSELI 'FANCY-FUNCTIONSYMBOL '(ASCII 73)) 
(PUT 'BESSELJ 'FANCY-FUNCTIONSYMBOL '(ASCII 74)) 
(PUT 'BESSELY 'FANCY-FUNCTIONSYMBOL '(ASCII 89)) 
(PUT 'BESSELK 'FANCY-FUNCTIONSYMBOL '(ASCII 75)) 
(PUT 'HANKEL1 'FANCY-PRIFN 'FANCY-HANKEL) 
(PUT 'HANKEL2 'FANCY-PRIFN 'FANCY-HANKEL) 
(PUT 'FANCY-HANKEL 'NUMBER-OF-ARGS 1) 
(PUT 'FANCY-HANKEL 'DEFINED-ON-LINE '2479) 
(PUT 'FANCY-HANKEL 'DEFINED-IN-FILE 'TMPRINT/TMPRINT.RED) 
(PUT 'FANCY-HANKEL 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE FANCY-HANKEL (U)
    (PROG (POS TPOS FL W)
      (SETQ POS FANCY-POS*)
      (SETQ TPOS FANCY-TEXPOS)
      (SETQ FL FANCY-LINE*)
      (SETQ W
              (PROG (W)
                (FANCY-PREFIX-OPERATOR '|h|)
                (SETQ W (FANCY-PRINT-ONE-INDEX (CADR U)))
                (COND ((AND TESTING-WIDTH* (EQ W 'FAILED)) (RETURN W)))
                (FANCY-PRIN2* '^ 0)
                (FANCY-PRIN2* '{ 0)
                (FANCY-PRIN2* '|(| 0)
                (FANCY-PRIN2* (COND ((EQ (CAR U) 'HANKEL1) 1) (T 2)) 0)
                (FANCY-PRIN2* '|)| 0)
                (FANCY-PRIN2* '} 0)
                (RETURN (FANCY-PRINT-FUNCTION-ARGUMENTS (CDDR U)))))
      (COND
       ((EQ W 'FAILED) (SETQ FANCY-LINE* FL) (SETQ FANCY-TEXPOS TPOS)
        (SETQ FANCY-POS* POS)))
      (RETURN W))) 
(PUT 'STRUVEH 'FANCY-PRIFN 'FANCY-INDEXED-FN) 
(PUT 'STRUVEH 'FANCY-FUNCTIONSYMBOL "\\mathrm{H}") 
(PUT 'STRUVEL 'FANCY-PRIFN 'FANCY-INDEXED-FN) 
(PUT 'STRUVEL 'FANCY-FUNCTIONSYMBOL "\\mathrm{L}") 
(PUT 'LOMMEL1 'FANCY-PRIFN 'FANCY-LOMMEL) 
(PUT 'LOMMEL2 'FANCY-PRIFN 'FANCY-LOMMEL) 
(PUT 'FANCY-LOMMEL 'NUMBER-OF-ARGS 1) 
(PUT 'FANCY-LOMMEL 'DEFINED-ON-LINE '2503) 
(PUT 'FANCY-LOMMEL 'DEFINED-IN-FILE 'TMPRINT/TMPRINT.RED) 
(PUT 'FANCY-LOMMEL 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE FANCY-LOMMEL (U)
    (PROG (POS TPOS FL W)
      (SETQ POS FANCY-POS*)
      (SETQ TPOS FANCY-TEXPOS)
      (SETQ FL FANCY-LINE*)
      (SETQ W
              (PROG (W)
                (FANCY-PREFIX-OPERATOR
                 (COND ((EQ (CAR U) 'LOMMEL1) 'S) (T '|s|)))
                (SETQ W
                        (FANCY-PRINT-INDEXLIST1 (LIST (CADR U) (CADDR U)) '_
                         '*COMMA*))
                (COND ((AND TESTING-WIDTH* (EQ W 'FAILED)) (RETURN W)))
                (RETURN (FANCY-PRINT-FUNCTION-ARGUMENTS (CDDDR U)))))
      (COND
       ((EQ W 'FAILED) (SETQ FANCY-LINE* FL) (SETQ FANCY-TEXPOS TPOS)
        (SETQ FANCY-POS* POS)))
      (RETURN W))) 
(PUT 'KUMMERM 'FANCY-FUNCTIONSYMBOL '|m|) 
(PUT 'KUMMERU 'FANCY-FUNCTIONSYMBOL '|u|) 
(PUT 'LAMBERT_W 'FANCY-FUNCTIONSYMBOL "\\omega") 
(PUT 'JACOBIP 'FANCY-PRIFN 'FANCY-JACOBIP) 
(PUT 'FANCY-JACOBIP 'NUMBER-OF-ARGS 1) 
(PUT 'FANCY-JACOBIP 'DEFINED-ON-LINE '2524) 
(PUT 'FANCY-JACOBIP 'DEFINED-IN-FILE 'TMPRINT/TMPRINT.RED) 
(PUT 'FANCY-JACOBIP 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE FANCY-JACOBIP (U)
    (PROG (POS TPOS FL W)
      (SETQ POS FANCY-POS*)
      (SETQ TPOS FANCY-TEXPOS)
      (SETQ FL FANCY-LINE*)
      (SETQ W
              (PROG (W)
                (FANCY-PREFIX-OPERATOR '|p|)
                (SETQ W (FANCY-PRINT-ONE-INDEX (CADR U)))
                (COND ((AND TESTING-WIDTH* (EQ W 'FAILED)) (RETURN W)))
                (FANCY-PRIN2* '^ 0)
                (FANCY-PRIN2* '{ 0)
                (SETQ W
                        (FANCY-PRINT-FUNCTION-ARGUMENTS
                         (LIST (CADDR U) (CADDDR U))))
                (COND ((AND TESTING-WIDTH* (EQ W 'FAILED)) (RETURN W)))
                (FANCY-PRIN2* '} 0)
                (RETURN (FANCY-PRINT-FUNCTION-ARGUMENTS (CDDDDR U)))))
      (COND
       ((EQ W 'FAILED) (SETQ FANCY-LINE* FL) (SETQ FANCY-TEXPOS TPOS)
        (SETQ FANCY-POS* POS)))
      (RETURN W))) 
(PUT 'GEGENBAUERP 'FANCY-PRIFN 'FANCY-GEGENBAUER-STYLE) 
(PUT 'GEGENBAUERP 'FANCY-FUNCTIONSYMBOL '|c|) 
(PUT 'FANCY-GEGENBAUER-STYLE 'NUMBER-OF-ARGS 1) 
(PUT 'FANCY-GEGENBAUER-STYLE 'DEFINED-ON-LINE '2542) 
(PUT 'FANCY-GEGENBAUER-STYLE 'DEFINED-IN-FILE 'TMPRINT/TMPRINT.RED) 
(PUT 'FANCY-GEGENBAUER-STYLE 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE FANCY-GEGENBAUER-STYLE (U)
    (PROG (POS TPOS FL W)
      (SETQ POS FANCY-POS*)
      (SETQ TPOS FANCY-TEXPOS)
      (SETQ FL FANCY-LINE*)
      (SETQ W
              (PROG (W)
                (FANCY-PREFIX-OPERATOR (CAR U))
                (SETQ W (FANCY-PRINT-ONE-INDEX (CADR U)))
                (COND ((AND TESTING-WIDTH* (EQ W 'FAILED)) (RETURN W)))
                (FANCY-PRIN2* '^ 0)
                (FANCY-PRIN2* '{ 0)
                (FANCY-PRIN2* '|(| 0)
                (FANCY-MAPRINT (CADDR U) 0)
                (FANCY-PRIN2* '|)| 0)
                (FANCY-PRIN2* '} 0)
                (RETURN (FANCY-PRINT-FUNCTION-ARGUMENTS (CDDDR U)))))
      (COND
       ((EQ W 'FAILED) (SETQ FANCY-LINE* FL) (SETQ FANCY-TEXPOS TPOS)
        (SETQ FANCY-POS* POS)))
      (RETURN W))) 
(PUT 'CHEBYSHEVT 'FANCY-PRIFN 'FANCY-INDEXED-FN) 
(PUT 'CHEBYSHEVT 'FANCY-FUNCTIONSYMBOL '(ASCII 84)) 
(PUT 'CHEBYSHEVU 'FANCY-PRIFN 'FANCY-INDEXED-FN) 
(PUT 'CHEBYSHEVU 'FANCY-FUNCTIONSYMBOL '(ASCII 85)) 
(PUT 'LEGENDREP 'FANCY-PRIFN 'FANCY-LEGENDRE-STYLE) 
(PUT 'LEGENDREP 'FANCY-FUNCTIONSYMBOL '|p|) 
(PUT 'FANCY-LEGENDRE-STYLE 'NUMBER-OF-ARGS 1) 
(PUT 'FANCY-LEGENDRE-STYLE 'DEFINED-ON-LINE '2564) 
(PUT 'FANCY-LEGENDRE-STYLE 'DEFINED-IN-FILE 'TMPRINT/TMPRINT.RED) 
(PUT 'FANCY-LEGENDRE-STYLE 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE FANCY-LEGENDRE-STYLE (U)
    (COND ((EQUAL (LENGTH U) 3) (FANCY-INDEXED-FN U))
          (T (FANCY-GEGENBAUER-STYLE U)))) 
(PUT 'LAGUERREP 'FANCY-PRIFN 'FANCY-LEGENDRE-STYLE) 
(PUT 'LAGUERREP 'FANCY-FUNCTIONSYMBOL '|l|) 
(PUT 'HERMITEP 'FANCY-PRIFN 'FANCY-INDEXED-FN) 
(PUT 'HERMITEP 'FANCY-FUNCTIONSYMBOL '|h|) 
(PUT 'BERNOULLIP 'FANCY-PRIFN 'FANCY-INDEXED-FN) 
(PUT 'BERNOULLIP 'FANCY-FUNCTIONSYMBOL '|b|) 
(PUT 'EULERP 'FANCY-PRIFN 'FANCY-INDEXED-FN) 
(PUT 'EULERP 'FANCY-FUNCTIONSYMBOL '|e|) 
(PUT 'FIBONACCIP 'FANCY-PRIFN 'FANCY-INDEXED-FN) 
(PUT 'FIBONACCIP 'FANCY-FUNCTIONSYMBOL '|f|) 
(PUT 'BERNOULLI 'FANCY-PRIFN 'FANCY-INDEXED-SYMBOL) 
(PUT 'BERNOULLI 'FANCY-SPECIAL-SYMBOL '|b|) 
(PUT 'EULER 'FANCY-PRIFN 'FANCY-INDEXED-SYMBOL) 
(PUT 'EULER 'FANCY-SPECIAL-SYMBOL '|e|) 
(PUT 'FIBONACCI 'FANCY-PRIFN 'FANCY-INDEXED-SYMBOL) 
(PUT 'FIBONACCI 'FANCY-SPECIAL-SYMBOL '|f|) 
(PUT 'MOTZKIN 'FANCY-PRIFN 'FANCY-INDEXED-SYMBOL) 
(PUT 'MOTZKIN 'FANCY-SPECIAL-SYMBOL '|m|) 
(PUT 'FANCY-INDEXED-SYMBOL 'NUMBER-OF-ARGS 1) 
(PUT 'FANCY-INDEXED-SYMBOL 'DEFINED-ON-LINE '2593) 
(PUT 'FANCY-INDEXED-SYMBOL 'DEFINED-IN-FILE 'TMPRINT/TMPRINT.RED) 
(PUT 'FANCY-INDEXED-SYMBOL 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE FANCY-INDEXED-SYMBOL (U)
    (PROG (POS TPOS FL W)
      (SETQ POS FANCY-POS*)
      (SETQ TPOS FANCY-TEXPOS)
      (SETQ FL FANCY-LINE*)
      (SETQ W
              (PROGN
               (FANCY-PREFIX-OPERATOR (CAR U))
               (FANCY-PRINT-ONE-INDEX (CADR U))))
      (COND
       ((EQ W 'FAILED) (SETQ FANCY-LINE* FL) (SETQ FANCY-TEXPOS TPOS)
        (SETQ FANCY-POS* POS)))
      (RETURN W))) 
(PUT 'STIRLING1 'FANCY-PRIFN 'FANCY-STIRLING) 
(PUT 'STIRLING2 'FANCY-PRIFN 'FANCY-STIRLING) 
(PUT 'FANCY-STIRLING 'NUMBER-OF-ARGS 1) 
(PUT 'FANCY-STIRLING 'DEFINED-ON-LINE '2604) 
(PUT 'FANCY-STIRLING 'DEFINED-IN-FILE 'TMPRINT/TMPRINT.RED) 
(PUT 'FANCY-STIRLING 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE FANCY-STIRLING (U)
    (PROG (POS TPOS FL W)
      (SETQ POS FANCY-POS*)
      (SETQ TPOS FANCY-TEXPOS)
      (SETQ FL FANCY-LINE*)
      (SETQ W
              (PROG (W)
                (FANCY-PREFIX-OPERATOR
                 (COND ((EQ (CAR U) 'STIRLING1) "\\mathrm{s}")
                       (T "\\mathrm{S}")))
                (SETQ W (FANCY-PRINT-INDEXLIST1 (LIST (CADR U)) '_ '*COMMA*))
                (COND ((AND TESTING-WIDTH* (EQ W 'FAILED)) (RETURN W)))
                (SETQ W (FANCY-PRINT-INDEXLIST1 (LIST (CADDR U)) '^ '*COMMA*))
                (RETURN W)))
      (COND
       ((EQ W 'FAILED) (SETQ FANCY-LINE* FL) (SETQ FANCY-TEXPOS TPOS)
        (SETQ FANCY-POS* POS)))
      (RETURN W))) 
(PUT 'POLYLOG 'FANCY-PRIFN 'FANCY-INDEXED-FN) 
(PUT 'POLYLOG 'FANCY-FUNCTIONSYMBOL '|lI|) 
(PUT 'HYPERGEOMETRIC 'FANCY-PRIFN 'FANCY-HYPERGEOMETRIC) 
(PUT 'FANCY-HYPERGEOMETRIC 'NUMBER-OF-ARGS 1) 
(PUT 'FANCY-HYPERGEOMETRIC 'DEFINED-ON-LINE '2625) 
(PUT 'FANCY-HYPERGEOMETRIC 'DEFINED-IN-FILE 'TMPRINT/TMPRINT.RED) 
(PUT 'FANCY-HYPERGEOMETRIC 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE FANCY-HYPERGEOMETRIC (U)
    (PROG (POS TPOS FL W)
      (SETQ POS FANCY-POS*)
      (SETQ TPOS FANCY-TEXPOS)
      (SETQ FL FANCY-LINE*)
      (SETQ W
              (PROG (W A1 A2 A3)
                (SETQ A1 (CDR (CADR U)))
                (SETQ A2 (CDR (CADDR U)))
                (SETQ A3 (CADDDR U))
                (FANCY-PRIN2* "{}" 0)
                (SETQ W (FANCY-PRINT-ONE-INDEX (LENGTH A1)))
                (COND ((AND TESTING-WIDTH* (EQ W 'FAILED)) (RETURN W)))
                (FANCY-PRIN2* "F" NIL)
                (SETQ W (FANCY-PRINT-ONE-INDEX (LENGTH A2)))
                (COND ((AND TESTING-WIDTH* (EQ W 'FAILED)) (RETURN W)))
                (FANCY-PRIN2* "\\left(\\left." NIL)
                (FANCY-PRIN2* "{}" 0)
                (COND ((NULL A1) (SETQ A1 (LIST '-))))
                (COND ((NULL A2) (SETQ A2 (LIST '-))))
                (SETQ W
                        (OR (EQ W 'FAILED)
                            (FANCY-PRINT-INDEXLIST1 A1 '^ '*COMMA*)))
                (SETQ W
                        (OR (EQ W 'FAILED)
                            (FANCY-PRINT-INDEXLIST1 A2 '_ '*COMMA*)))
                (FANCY-PRIN2* "\\," 1)
                (FANCY-PRIN2* "\\right|\\," 1)
                (SETQ W (OR (EQ W 'FAILED) (FANCY-PRINFIT A3 0 NIL)))
                (FANCY-PRIN2* "\\right)" NIL)
                (RETURN W)))
      (COND
       ((EQ W 'FAILED) (SETQ FANCY-LINE* FL) (SETQ FANCY-TEXPOS TPOS)
        (SETQ FANCY-POS* POS)))
      (RETURN W))) 
(PUT 'MEIJERG 'FANCY-PRIFN 'FANCY-MEIJERG) 
(PUT 'FANCY-MEIJERG 'NUMBER-OF-ARGS 1) 
(PUT 'FANCY-MEIJERG 'DEFINED-ON-LINE '2655) 
(PUT 'FANCY-MEIJERG 'DEFINED-IN-FILE 'TMPRINT/TMPRINT.RED) 
(PUT 'FANCY-MEIJERG 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE FANCY-MEIJERG (U)
    (PROG (POS TPOS FL W)
      (SETQ POS FANCY-POS*)
      (SETQ TPOS FANCY-TEXPOS)
      (SETQ FL FANCY-LINE*)
      (SETQ W
              (PROG (W A1 A2 A3 N M P Q)
                (SETQ N 0)
                (SETQ M 0)
                (SETQ P 0)
                (SETQ Q 0)
                (SETQ A1 (CDR (CADR U)))
                (SETQ A2 (CDR (CADDR U)))
                (SETQ A3 (CADDDR U))
                (SETQ M (LENGTH (CDAR A2)))
                (SETQ N (LENGTH (CDAR A1)))
                (SETQ A1 (APPEND (CDAR A1) (CDR A1)))
                (SETQ A2 (APPEND (CDAR A2) (CDR A2)))
                (SETQ P (LENGTH A1))
                (SETQ Q (LENGTH A2))
                (FANCY-PRIN2* "G" NIL)
                (SETQ W
                        (OR (EQ W 'FAILED)
                            (FANCY-PRINT-INDEXLIST1 (LIST M N) '^ NIL)))
                (SETQ W
                        (OR (EQ W 'FAILED)
                            (FANCY-PRINT-INDEXLIST1 (LIST P Q) '_ NIL)))
                (FANCY-PRIN2* "\\left(" NIL)
                (SETQ W (OR (EQ W 'FAILED) (FANCY-PRINFIT A3 0 NIL)))
                (FANCY-PRIN2* "\\," 1)
                (FANCY-PRIN2* "\\left|\\,{}" 1)
                (COND ((NULL A1) (SETQ A1 (LIST '-))))
                (COND ((NULL A2) (SETQ A2 (LIST '-))))
                (SETQ W
                        (OR (EQ W 'FAILED)
                            (FANCY-PRINT-INDEXLIST1 A1 '^ '*COMMA*)))
                (SETQ W
                        (OR (EQ W 'FAILED)
                            (FANCY-PRINT-INDEXLIST1 A2 '_ '*COMMA*)))
                (FANCY-PRIN2* "\\right.\\right)" NIL)
                (RETURN W)))
      (COND
       ((EQ W 'FAILED) (SETQ FANCY-LINE* FL) (SETQ FANCY-TEXPOS TPOS)
        (SETQ FANCY-POS* POS)))
      (RETURN W))) 
(COND
 ((NOT (GET 'TEXSYM 'SIMPFN))
  (AEVAL (OPERATOR (LIST 'TEXSYM 'TEXBOX 'TEXFBOX 'TEXSTRING))))) 
(PUT 'TEXSYM 'FANCY-PRIFN 'FANCY-TEXSYM) 
(PUT 'FANCY-TEXSYM 'NUMBER-OF-ARGS 1) 
(PUT 'FANCY-TEXSYM 'DEFINED-ON-LINE '2703) 
(PUT 'FANCY-TEXSYM 'DEFINED-IN-FILE 'TMPRINT/TMPRINT.RED) 
(PUT 'FANCY-TEXSYM 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE FANCY-TEXSYM (U)
    (PROG (POS TPOS FL W)
      (SETQ POS FANCY-POS*)
      (SETQ TPOS FANCY-TEXPOS)
      (SETQ FL FANCY-LINE*)
      (SETQ W
              (PROG ()
                (COND ((NULL U) (RETURN NIL)))
                (FANCY-PRIN2 (LIST2STRING (CONS '|\\| (EXPLODE2 (CADR U)))))
                (SETQ U (CDDR U))
                (PROG ()
                 WHILELABEL
                  (COND ((NOT U) (RETURN NIL)))
                  (PROGN
                   (SETQ FANCY-LINE* (CONS "{" FANCY-LINE*))
                   (FANCY-MAPRINT (CAR U) 0)
                   (SETQ FANCY-LINE* (CONS "}" FANCY-LINE*))
                   (SETQ U (CDR U)))
                  (GO WHILELABEL))))
      (COND
       ((EQ W 'FAILED) (SETQ FANCY-LINE* FL) (SETQ FANCY-TEXPOS TPOS)
        (SETQ FANCY-POS* POS)))
      (RETURN W))) 
(PUT 'TEXSTRING 'FANCY-PRIFN 'FANCY-TEXSTRING) 
(PUT 'FANCY-TEXSTRING 'NUMBER-OF-ARGS 1) 
(PUT 'FANCY-TEXSTRING 'DEFINED-ON-LINE '2722) 
(PUT 'FANCY-TEXSTRING 'DEFINED-IN-FILE 'TMPRINT/TMPRINT.RED) 
(PUT 'FANCY-TEXSTRING 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE FANCY-TEXSTRING (U)
    (PROG (POS TPOS FL W)
      (SETQ POS FANCY-POS*)
      (SETQ TPOS FANCY-TEXPOS)
      (SETQ FL FANCY-LINE*)
      (SETQ W
              (PROG (S)
                (SETQ S (CDR U))
               LAB
                (COND ((NULL S) (RETURN NIL)))
                ((LAMBDA (S)
                   (PROGN
                    (COND ((NOT (ATOM S)) (FANCY-MAPRINT S 0))
                          (T
                           (PROGN
                            (COND
                             ((NOT (STRINGP S))
                              (SETQ S (LIST2STRING (EXPLODE2 S)))))
                            (SETQ FANCY-LINE* (CONS S FANCY-LINE*)))))))
                 (CAR S))
                (SETQ S (CDR S))
                (GO LAB)))
      (COND
       ((EQ W 'FAILED) (SETQ FANCY-LINE* FL) (SETQ FANCY-TEXPOS TPOS)
        (SETQ FANCY-POS* POS)))
      (RETURN W))) 
(PUT 'TEXBOX 'FANCY-PRIFN 'FANCY-TEXBOX) 
(PUT 'FANCY-TEXBOX 'NUMBER-OF-ARGS 1) 
(PUT 'FANCY-TEXBOX 'DEFINED-ON-LINE '2752) 
(PUT 'FANCY-TEXBOX 'DEFINED-IN-FILE 'TMPRINT/TMPRINT.RED) 
(PUT 'FANCY-TEXBOX 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE FANCY-TEXBOX (U)
    (PROG (POS TPOS FL W)
      (SETQ POS FANCY-POS*)
      (SETQ TPOS FANCY-TEXPOS)
      (SETQ FL FANCY-LINE*)
      (SETQ W
              (PROG (HEIGHT DEPTH CONTENTS)
                (SETQ CONTENTS NIL)
                (SETQ U (CDR U))
                (SETQ HEIGHT (CAR U))
                (SETQ U (CDR U))
                (COND
                 (U
                  (PROGN
                   (SETQ DEPTH (CAR U))
                   (SETQ U (CDR U))
                   (COND (U (SETQ CONTENTS (CAR U)))))))
                (COND ((NOT (NUMBERP HEIGHT)) (SETQ HEIGHT 0)))
                (COND ((NOT (NUMBERP DEPTH)) (SETQ DEPTH 0)))
                (COND
                 ((AND (EQUAL HEIGHT 0) (EQUAL DEPTH 0) (NULL CONTENTS))
                  (SETQ HEIGHT 10)))
                (FANCY-PRIN2 "\\fbox{")
                (COND
                 ((OR (NEQ HEIGHT 0) (NEQ DEPTH 0))
                  (PROGN
                   (SETQ FANCY-LINE* (CONS "\\rule" FANCY-LINE*))
                   (COND
                    ((NEQ DEPTH 0)
                     (PROGN
                      (SETQ FANCY-LINE* (CONS "[-" FANCY-LINE*))
                      (SETQ FANCY-LINE* (CONS DEPTH FANCY-LINE*))
                      (SETQ FANCY-LINE* (CONS "pt]" FANCY-LINE*)))))
                   (SETQ FANCY-LINE* (CONS "{0pt}{" FANCY-LINE*))
                   (SETQ FANCY-LINE* (CONS (PLUS HEIGHT DEPTH) FANCY-LINE*))
                   (SETQ FANCY-LINE* (CONS "pt}" FANCY-LINE*)))))
                (COND (CONTENTS (SETQ CONTENTS (FANCY-MAPRINT CONTENTS 0)))
                      (T
                       (SETQ FANCY-LINE*
                               (CONS "\\rule{10pt}{0pt}" FANCY-LINE*))))
                (FANCY-PRIN2 "}")
                (RETURN CONTENTS)))
      (COND
       ((EQ W 'FAILED) (SETQ FANCY-LINE* FL) (SETQ FANCY-TEXPOS TPOS)
        (SETQ FANCY-POS* POS)))
      (RETURN W))) 
(PUT 'TEXFBOX 'FANCY-PRIFN 'FANCY-TEXFBOX) 
(PUT 'FANCY-TEXFBOX 'NUMBER-OF-ARGS 1) 
(PUT 'FANCY-TEXFBOX 'DEFINED-ON-LINE '2788) 
(PUT 'FANCY-TEXFBOX 'DEFINED-IN-FILE 'TMPRINT/TMPRINT.RED) 
(PUT 'FANCY-TEXFBOX 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE FANCY-TEXFBOX (U)
    (PROG (POS TPOS FL W)
      (SETQ POS FANCY-POS*)
      (SETQ TPOS FANCY-TEXPOS)
      (SETQ FL FANCY-LINE*)
      (SETQ W
              (PROG ()
                (FANCY-PRIN2 "\\fbox{")
                (SETQ U (FANCY-MAPRINT (CADR U) 0))
                (FANCY-PRIN2 "}")
                (RETURN U)))
      (COND
       ((EQ W 'FAILED) (SETQ FANCY-LINE* FL) (SETQ FANCY-TEXPOS TPOS)
        (SETQ FANCY-POS* POS)))
      (RETURN W))) 
(ENDMODULE) 
(MODULE (LIST 'PROMPTCOLOR)) 
(FLUID '(LISPSYSTEM*)) 
(FLUID '(PROMPTSTRING* TM_SWITCHES* TM_SWITCHES-THIS-SL* LESSSPACE*)) 
(FLUID '(*PROMPTNUMBERS)) 
(SWITCH (LIST (LIST 'EQUAL 'PROMPTNUMBERS 'ON))) 
(SETQ TM_SWITCHES* (LIST *MSG *OUTPUT)) 
(OFF1 'MSG) 
(OFF1 'OUTPUT) 
(PUT 'TM_BPROMPT 'NUMBER-OF-ARGS 0) 
(PUT 'TM_BPROMPT 'DEFINED-ON-LINE '2821) 
(PUT 'TM_BPROMPT 'DEFINED-IN-FILE 'TMPRINT/TMPRINT.RED) 
(PUT 'TM_BPROMPT 'PROCEDURE_TYPE '(ARROW UNIT GENERAL)) 
(DE TM_BPROMPT NIL
    (LIST (INT2ID 2) 'C 'H 'A 'N 'N 'E 'L '|:| 'P 'R 'O 'M 'P 'T (INT2ID 5)
          (INT2ID 2) 'L 'A 'T 'E 'X '|:| '|r| '|e| '|d| '|u| '|c| '|e|)) 
(PUT 'TM_EPROMPT 'NUMBER-OF-ARGS 0) 
(PUT 'TM_EPROMPT 'DEFINED-ON-LINE '2826) 
(PUT 'TM_EPROMPT 'DEFINED-IN-FILE 'TMPRINT/TMPRINT.RED) 
(PUT 'TM_EPROMPT 'PROCEDURE_TYPE '(ARROW UNIT GENERAL)) 
(DE TM_EPROMPT NIL (LIST '] '|\\| BLANK (INT2ID 5))) 
(PUT 'TM_COLOREDP 'NUMBER-OF-ARGS 1) 
(PUT 'TM_COLOREDP 'DEFINED-ON-LINE '2831) 
(PUT 'TM_COLOREDP 'DEFINED-IN-FILE 'TMPRINT/TMPRINT.RED) 
(PUT 'TM_COLOREDP 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE TM_COLOREDP (EC) (EQCAR EC (CAR (TM_BPROMPT)))) 
(PUT 'TM_NCONCN 'NUMBER-OF-ARGS 1) 
(PUT 'TM_NCONCN 'DEFINED-ON-LINE '2834) 
(PUT 'TM_NCONCN 'DEFINED-IN-FILE 'TMPRINT/TMPRINT.RED) 
(PUT 'TM_NCONCN 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE TM_NCONCN (L)
    (COND ((CDR L) (NCONC (CAR L) (TM_NCONCN (CDR L)))) (T (CAR L)))) 
(PUT 'TM_PRUNELHEAD 'NUMBER-OF-ARGS 2) 
(PUT 'TM_PRUNELHEAD 'DEFINED-ON-LINE '2838) 
(PUT 'TM_PRUNELHEAD 'DEFINED-IN-FILE 'TMPRINT/TMPRINT.RED) 
(PUT 'TM_PRUNELHEAD 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE TM_PRUNELHEAD (L L1)
    (COND ((OR (NULL L) (NULL L1)) L) (T (TM_PRUNELHEAD (CDR L) (CDR L1))))) 
(PUT 'TM_PRUNELTAIL 'NUMBER-OF-ARGS 2) 
(PUT 'TM_PRUNELTAIL 'DEFINED-ON-LINE '2841) 
(PUT 'TM_PRUNELTAIL 'DEFINED-IN-FILE 'TMPRINT/TMPRINT.RED) 
(PUT 'TM_PRUNELTAIL 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE TM_PRUNELTAIL (L L1) (REVERSIP (TM_PRUNELHEAD (REVERSIP L) L1))) 
(PUT 'TM_PSLP 'NUMBER-OF-ARGS 0) 
(PUT 'TM_PSLP 'DEFINED-ON-LINE '2844) 
(PUT 'TM_PSLP 'DEFINED-IN-FILE 'TMPRINT/TMPRINT.RED) 
(PUT 'TM_PSLP 'PROCEDURE_TYPE '(ARROW UNIT GENERAL)) 
(DE TM_PSLP NIL (MEMQ 'PSL LISPSYSTEM*)) 
(COND
 ((TM_PSLP)
  (PROGN (SETQ TM_SWITCHES-THIS-SL* (LIST *USERMODE)) (OFF1 'USERMODE)))) 
(PUT 'TM_COLOR 'NUMBER-OF-ARGS 1) 
(PUT 'TM_COLOR 'DEFINED-ON-LINE '2852) 
(PUT 'TM_COLOR 'DEFINED-IN-FILE 'TMPRINT/TMPRINT.RED) 
(PUT 'TM_COLOR 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE TM_COLOR (C)
    (PROG (EC SF)
      (COND ((STRINGP C) (PROGN (SETQ EC (STRING2LIST C)) (SETQ SF T)))
            (T (SETQ EC (EXPLODE2 C))))
      (SETQ EC (CONS BLANK EC))
      (COND
       ((NOT *PROMPTNUMBERS)
        (PROGN
         (PROG ()
          WHILELABEL
           (COND
            ((NOT
              (AND EC
                   (MEMQ (CAR EC)
                         '(| | |0| |1| |2| |3| |4| |5| |6| |7| |8| |9|))))
             (RETURN NIL)))
           (SETQ EC (CDR EC))
           (GO WHILELABEL))
         (SETQ EC (COND ((AND EC (EQCAR EC '*)) (LIST '*))))
         NIL)))
      (SETQ EC (APPEND (TM_BPROMPT) (APPEND EC (TM_EPROMPT))))
      (SETQ EC (LIST2STRING EC))
      (COND (SF (RETURN EC)) (T (RETURN (INTERN EC)))))) 
(PUT 'TM_UNCOLOR 'NUMBER-OF-ARGS 1) 
(PUT 'TM_UNCOLOR 'DEFINED-ON-LINE '2873) 
(PUT 'TM_UNCOLOR 'DEFINED-IN-FILE 'TMPRINT/TMPRINT.RED) 
(PUT 'TM_UNCOLOR 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE TM_UNCOLOR (C)
    (PROG (EC SF)
      (COND ((STRINGP C) (PROGN (SETQ EC (STRING2LIST C)) (SETQ SF T)))
            (T (SETQ EC (EXPLODE2 C))))
      (COND ((NOT (TM_COLOREDP EC)) (RETURN C)))
      (SETQ EC (TM_PRUNELHEAD EC (TM_BPROMPT)))
      (COND ((EQ (CAR EC) BLANK) (SETQ EC (CDR EC))))
      (SETQ EC (TM_PRUNELTAIL EC (TM_EPROMPT)))
      (SETQ EC (LIST2STRING EC))
      (COND (SF (RETURN EC)) (T (RETURN (INTERN EC)))))) 
(PUT 'TM_SETPCHAR-PSL 'NUMBER-OF-ARGS 1) 
(PUT 'TM_SETPCHAR-PSL 'DEFINED-ON-LINE '2889) 
(PUT 'TM_SETPCHAR-PSL 'DEFINED-IN-FILE 'TMPRINT/TMPRINT.RED) 
(PUT 'TM_SETPCHAR-PSL 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE TM_SETPCHAR-PSL (C)
    (PROG (W)
      (SETQ W (TM_SETPCHAR-ORIG C))
      (SETQ PROMPTSTRING* (TM_COLOR PROMPTSTRING*))
      (RETURN (TM_UNCOLOR W)))) 
(COND ((NOT (GETD 'TM_SETPCHAR-ORIG)) (COPYD 'TM_SETPCHAR-ORIG 'SETPCHAR))) 
(COND ((TM_PSLP) (COPYD 'SETPCHAR 'TM_SETPCHAR-PSL))
      (T (COPYD 'SETPCHAR 'TM_SETPCHAR-CSL))) 
(PUT 'TM_YESP-PSL 'NUMBER-OF-ARGS 1) 
(PUT 'TM_YESP-PSL 'DEFINED-ON-LINE '2927) 
(PUT 'TM_YESP-PSL 'DEFINED-IN-FILE 'TMPRINT/TMPRINT.RED) 
(PUT 'TM_YESP-PSL 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE TM_YESP-PSL (U)
    (PROG (IFL OFL X Y)
      (COND
       (IFL*
        (PROGN
         (SETQ IFL (SETQ IFL* (LIST (CAR IFL*) (CADR IFL*) CURLINE*)))
         (RDS NIL))))
      (COND (OFL* (PROGN (SETQ OFL OFL*) (WRS NIL))))
      (COND ((NULL *LESSSPACE) (TERPRI)))
      (COND ((ATOM U) (PRIN2 U)) (T (LPRI U)))
      (COND ((NULL *LESSSPACE) (TERPRI)))
      (SETQ Y (SETPCHAR "?"))
      (SETQ X (YESP1))
      (SETPCHAR Y)
      (COND (OFL (WRS (CDR OFL))))
      (COND (IFL (RDS (CADR IFL))))
      (SETQ CURSYM* '*SEMICOL*)
      (RETURN X))) 
(COND
 ((TM_PSLP)
  (PROGN
   (REMFLAG '(YESP) 'LOSE)
   (COPYD 'TM_YESP-ORIG 'YESP)
   (COPYD 'YESP 'TM_YESP-PSL)
   (FLAG '(YESP) 'LOSE)))) 
(PUT 'TM_COMPUTE-PROMPT-STRING 'NUMBER-OF-ARGS 2) 
(PUT 'TM_COMPUTE-PROMPT-STRING 'DEFINED-ON-LINE '2963) 
(PUT 'TM_COMPUTE-PROMPT-STRING 'DEFINED-IN-FILE 'TMPRINT/TMPRINT.RED) 
(PUT 'TM_COMPUTE-PROMPT-STRING 'PROCEDURE_TYPE
     '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE TM_COMPUTE-PROMPT-STRING (COUNT LEVEL)
    (TM_COLOR (TM_COMPUTE-PROMPT-STRING-ORIG COUNT LEVEL))) 
(COND
 ((TM_PSLP)
  (PROGN
   (COPYD 'TM_COMPUTE-PROMPT-STRING-ORIG 'COMPUTE-PROMPT-STRING)
   (COPYD 'COMPUTE-PROMPT-STRING 'TM_COMPUTE-PROMPT-STRING)))) 
(FLUID '(BREAKLEVEL*)) 
(PUT 'TM_BREAK_PROMPT 'NUMBER-OF-ARGS 0) 
(PUT 'TM_BREAK_PROMPT 'DEFINED-ON-LINE '2973) 
(PUT 'TM_BREAK_PROMPT 'DEFINED-IN-FILE 'TMPRINT/TMPRINT.RED) 
(PUT 'TM_BREAK_PROMPT 'PROCEDURE_TYPE '(ARROW UNIT GENERAL)) 
(DE TM_BREAK_PROMPT NIL
    (PROGN
     (PRIN2 "break[")
     (PRIN2 BREAKLEVEL*)
     (PRIN2 "]")
     (SETQ PROMPTSTRING* (TM_COLOR PROMPTSTRING*)))) 
(COND
 ((TM_PSLP)
  (PROGN
   (REMFLAG '(BREAK_PROMPT) 'LOSE)
   (COPYD 'BREAK_PROMPT 'TM_BREAK_PROMPT)
   (FLAG '(BREAK_PROMPT) 'LOSE)
   NIL))) 
(COND ((TM_PSLP) (ONOFF 'USERMODE (CAR TM_SWITCHES-THIS-SL*)))) 
(ONOFF 'MSG (CAR TM_SWITCHES*)) 
(ONOFF 'OUTPUT (CADR TM_SWITCHES*)) 
(SETQ CRBUF* NIL) 
(SETQ INPUTBUFLIS* NIL) 
(SETQ LESSSPACE* T) 
(SETQ STATCOUNTER 0) 
(ENDMODULE) 