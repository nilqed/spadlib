(cl:declaim (cl:optimize cl:debug cl:safety))
(cl:declaim (sb-ext:muffle-conditions sb-ext:compiler-note cl:style-warning))
(MODULE (LIST 'PARTDF)) 
(FLUID '(ALGLIST* DEPL* FRLIS* POSN* SUBFG* WTL* FANCY-POS* FANCY-LINE*)) 
(GLOBAL '(NATURALVECTOR2FRAMEVECTOR KEEPL* *PRODUCT-RULE)) 
(NEWTOK '((@) PARTDF)) 
(PUT 'SIMPPARTDF0 'NUMBER-OF-ARGS 1) 
(PUT 'SIMPPARTDF0 'DEFINED-ON-LINE '38) 
(PUT 'SIMPPARTDF0 'DEFINED-IN-FILE 'EXCALC/PARTDF.RED) 
(PUT 'SIMPPARTDF0 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE SIMPPARTDF0 (U)
    (PROG (V)
      (COND
       ((NULL (CDR U))
        (COND
         ((AND (COORDP (SETQ U (REVAL1 (CAR U) T)))
               (SETQ V (ATSOC U NATURALVECTOR2FRAMEVECTOR)))
          (RETURN (*PF2SQ (*PFSQ2PF (CDR V)))))
         (T (RETURN (MKSQ (LIST 'PARTDF U) 1))))))
      (COND
       ((OR (NULL SUBFG*) (FREEINDP (CAR U)) (FREEINDP (CADR U))
            (AND (CDDR U) (FREEINDP (CADDR U))))
        (RETURN (MKSQ (CONS 'PARTDF (REVLIS U)) 1))))
      (SETQ V (CDR U))
      (SETQ U (SIMP* (CAR U)))
      (PROG (J)
        (SETQ J V)
       LAB
        (COND ((NULL J) (RETURN NIL)))
        ((LAMBDA (J) (SETQ U (PARTDFSQ U (*A2K J)))) (CAR J))
        (SETQ J (CDR J))
        (GO LAB))
      (RETURN U))) 
(PUT 'PARTDF 'SIMPFN 'SIMPPARTDF) 
(PUT 'PARTDF 'RTYPEFN 'GETRTYPEOR) 
(PUT 'PARTDF 'PARTITFN 'PARTITPARTDF) 
(PUT 'PARTITPARTDF 'NUMBER-OF-ARGS 1) 
(PUT 'PARTITPARTDF 'DEFINED-ON-LINE '61) 
(PUT 'PARTITPARTDF 'DEFINED-IN-FILE 'EXCALC/PARTDF.RED) 
(PUT 'PARTITPARTDF 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE PARTITPARTDF (U)
    (COND ((NULL (CDR U)) (MKNATVEC (*A2K (CAR U))))
          (T (CONS (CONS 1 (SIMPPARTDF0 U)) NIL)))) 
(PUT 'SIMPPARTDF 'NUMBER-OF-ARGS 1) 
(PUT 'SIMPPARTDF 'DEFINED-ON-LINE '65) 
(PUT 'SIMPPARTDF 'DEFINED-IN-FILE 'EXCALC/PARTDF.RED) 
(PUT 'SIMPPARTDF 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE SIMPPARTDF (U) (*PF2SQ (PARTITPARTDF U))) 
(PUT 'MKNATVEC 'NUMBER-OF-ARGS 1) 
(PUT 'MKNATVEC 'DEFINED-ON-LINE '68) 
(PUT 'MKNATVEC 'DEFINED-IN-FILE 'EXCALC/PARTDF.RED) 
(PUT 'MKNATVEC 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE MKNATVEC (U)
    (PROG (X Y)
      (RETURN
       (COND ((SETQ X (ATSOC U NATURALVECTOR2FRAMEVECTOR)) (*PFSQ2PF (CDR X)))
             ((SETQ X (OPMTCH (SETQ Y (LIST 'PARTDF U)))) (PARTITOP X))
             (T (MKUPF Y)))))) 
(PUT 'PARTDFSQ 'NUMBER-OF-ARGS 2) 
(PUT 'PARTDFSQ 'DEFINED-ON-LINE '77) 
(PUT 'PARTDFSQ 'DEFINED-IN-FILE 'EXCALC/PARTDF.RED) 
(PUT 'PARTDFSQ 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE PARTDFSQ (U V)
    (MULTSQ (ADDSQ (PARTDFF (CAR U) V) (MULTSQ U (PARTDFF (NEGF (CDR U)) V)))
            (CONS 1 (CDR U)))) 
(PUT 'PARTDFF 'NUMBER-OF-ARGS 2) 
(PUT 'PARTDFF 'DEFINED-ON-LINE '82) 
(PUT 'PARTDFF 'DEFINED-IN-FILE 'EXCALC/PARTDF.RED) 
(PUT 'PARTDFF 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE PARTDFF (U V)
    (COND ((OR (ATOM U) (ATOM (CAR U))) (CONS NIL 1))
          (T
           (ADDSQ
            (COND ((NULL *PRODUCT-RULE) (PARTDFT (CAR U) V))
                  (T
                   (ADDSQ
                    (MULTSQ (CONS (LIST (CONS (CAAR U) 1)) 1)
                            (PARTDFF (CDAR U) V))
                    (MULTSQ (PARTDFPOW (CAAR U) V) (CONS (CDAR U) 1)))))
            (PARTDFF (CDR U) V))))) 
(PUT 'PARTDFT 'NUMBER-OF-ARGS 2) 
(PUT 'PARTDFT 'DEFINED-ON-LINE '89) 
(PUT 'PARTDFT 'DEFINED-IN-FILE 'EXCALC/PARTDF.RED) 
(PUT 'PARTDFT 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE PARTDFT (U V)
    (PROG (X Y)
      (SETQ X (PARTDFT1 (CONS (LIST U) 1) V))
      (SETQ Y (CONS NIL 1))
      (PROG (J)
        (SETQ J X)
       LAB
        (COND ((NULL J) (RETURN NIL)))
        (COND
         ((NULL (OR (ATOM (CAAR J)) (ATOM (CAR (CAAR J)))))
          (SETQ Y
                  (ADDSQ
                   (MULTSQ
                    (COND
                     (((LAMBDA (U) (OR (ATOM U) (ATOM (CAR U))))
                       (CDAR (CAAR J)))
                      (MULTSQ (PARTDFPOW (CAAR (CAAR J)) V)
                              (CONS (CDAR (CAAR J)) 1)))
                     (T (MKSQ (LIST 'PARTDF (PREPF (CAAR J)) V) 1)))
                    (CDAR J))
                   Y))))
        (SETQ J (CDR J))
        (GO LAB))
      (RETURN Y))) 
(PUT 'PARTDFT1 'NUMBER-OF-ARGS 2) 
(PUT 'PARTDFT1 'DEFINED-ON-LINE '103) 
(PUT 'PARTDFT1 'DEFINED-IN-FILE 'EXCALC/PARTDF.RED) 
(PUT 'PARTDFT1 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE PARTDFT1 (U V)
    ((LAMBDA (X Y)
       (COND ((NULL X) NIL)
             ((OR (ATOM X) (ATOM (CAR X))) (CONS (CONS 1 U) NIL))
             (T
              (ADDPSF
               (COND
                ((AND (SFP (CAAAR X)) (CAR (PARTDFPOW (CAAR (CAAAR X)) V)))
                 (MULTPSF (EXPTPSF (PARTDFT1 (CONS (CAAAR U) 1) V) (CDAAR X))
                  (PARTDFT1 (CANCEL (CONS (CDAR X) Y)) V)))
                ((AND (NULL (SFP (CAAAR X))) (CAR (PARTDFPOW (CAAR X) V)))
                 (MULTPSF (CONS (CONS (LIST (CONS (CAAR X) 1)) (CONS 1 1)) NIL)
                  (PARTDFT1 (CANCEL (CONS (CDAR X) Y)) V)))
                (T
                 (MULTSQPSF (CONS (LIST (CONS (CAAR X) 1)) 1)
                  (PARTDFT1 (CANCEL (CONS (CDAR X) Y)) V))))
               (PARTDFT1 (CANCEL (CONS (CDR X) Y)) V)))))
     (CAR U) (CDR U))) 
(PUT 'PARTDFPOW 'NUMBER-OF-ARGS 2) 
(PUT 'PARTDFPOW 'DEFINED-ON-LINE '118) 
(PUT 'PARTDFPOW 'DEFINED-IN-FILE 'EXCALC/PARTDF.RED) 
(PUT 'PARTDFPOW 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE PARTDFPOW (U V)
    (PROG (X Z N)
      (SETQ N 0)
      (SETQ N (CDR U))
      (SETQ U (CAR U))
      (SETQ Z (CONS NIL 1))
      (COND ((EQ U V) (SETQ Z (CONS 1 1)))
            ((ATOMF U)
             (COND
              ((SETQ X (ASSOC U KEEPL*))
               (PROG (ALGLIST*)
                 (SETQ ALGLIST* (CONS NIL NIL))
                 (SETQ Z (PARTDFSQ (SIMP0 (CDR X)) V))))
              ((NDEPENDS
                (COND ((SETQ X (GET (LID U) 'VARLIST)) (CONS (LID U) (CDR X)))
                      (T (LID U)))
                V)
               (SETQ Z (MKSQ (LIST 'PARTDF U V) 1)))
              (T (RETURN (CONS NIL 1)))))
            ((SFP U) (SETQ Z (PARTDFF U V)))
            ((EQ (CAR U) '*SQ) (SETQ Z (PARTDFSQ (CADR U) V)))
            ((SETQ X (GET (CAR U) (DFN_PROP U)))
             (PROG (J)
               (SETQ J
                       (PROG (K FORALL-RESULT FORALL-ENDPTR)
                         (SETQ K (CDR U))
                         (COND ((NULL K) (RETURN NIL)))
                         (SETQ FORALL-RESULT
                                 (SETQ FORALL-ENDPTR
                                         (CONS
                                          ((LAMBDA (K) (PARTDFSQ (SIMP K) V))
                                           (CAR K))
                                          NIL)))
                        LOOPLABEL
                         (SETQ K (CDR K))
                         (COND ((NULL K) (RETURN FORALL-RESULT)))
                         (RPLACD FORALL-ENDPTR
                                 (CONS
                                  ((LAMBDA (K) (PARTDFSQ (SIMP K) V)) (CAR K))
                                  NIL))
                         (SETQ FORALL-ENDPTR (CDR FORALL-ENDPTR))
                         (GO LOOPLABEL)))
              LAB
               (COND ((NULL J) (RETURN NIL)))
               ((LAMBDA (J)
                  (PROGN
                   (COND
                    ((CAR J)
                     (SETQ Z
                             (ADDSQ
                              (MULTSQ J
                                      (SIMP
                                       (SUBLA (PAIR (CAAR X) (CDR U))
                                              (CDAR X))))
                              Z))))
                   (SETQ X (CDR X))))
                (CAR J))
               (SETQ J (CDR J))
               (GO LAB)))
            ((EQ (CAR U) 'PARTDF)
             (COND
              ((NDEPENDS (LID (CADR U)) V)
               (COND
                ((SETQ X (PARTDFSPLIT U V (GET 'PARTDF 'KVALUE)))
                 (PROGN
                  (SETQ Z (MKSQ (CAR X) 1))
                  (PROG (J)
                    (SETQ J (CDR X))
                   LAB
                    (COND ((NULL J) (RETURN NIL)))
                    ((LAMBDA (J) (SETQ Z (PARTDFSQ Z J))) (CAR J))
                    (SETQ J (CDR J))
                    (GO LAB))))
                (T
                 (PROGN
                  (SETQ Z
                          (CONS 'PARTDF
                                (CONS (CADR U) (ORDN (CONS V (CDDR U))))))
                  (SETQ Z
                          (COND ((SETQ X (OPMTCH Z)) (SIMP X))
                                (T (MKSQ Z 1))))))))
              (T (RETURN (CONS NIL 1))))))
      (COND
       ((SETQ X (ATSOC U WTL*))
        (SETQ Z
                (MULTSQ (CONS (LIST (CONS (CONS 'K* (MINUS (CDR X))) 1)) 1)
                        Z))))
      (RETURN
       (COND ((EQUAL N 1) Z)
             (T
              (MULTSQ (CONS (LIST (CONS (CONS U (DIFFERENCE N 1)) N)) 1) Z)))))) 
(PUT 'PARTDFSPLIT 'NUMBER-OF-ARGS 3) 
(PUT 'PARTDFSPLIT 'DEFINED-ON-LINE '166) 
(PUT 'PARTDFSPLIT 'DEFINED-IN-FILE 'EXCALC/PARTDF.RED) 
(PUT 'PARTDFSPLIT 'PROCEDURE_TYPE
     '(ARROW (TIMES GENERAL GENERAL GENERAL) GENERAL)) 
(DE PARTDFSPLIT (U V K)
    (COND ((NULL K) NIL)
          ((AND (EQ (CADR (CAAR K)) (CADR U)) (MEMQ V (CDDR (CAAR K)))
                (SUBLISTP (DELETE V (CDDR (CAAR K))) (CDDR U)))
           (CONS (CAAR K) (LISTDIFF (CDDR U) (DELETE V (CDDR (CAAR K))))))
          (T (PARTDFSPLIT U V (CDR K))))) 
(PUT 'SUBLISTP 'NUMBER-OF-ARGS 2) 
(PUT 'SUBLISTP 'DEFINED-ON-LINE '180) 
(PUT 'SUBLISTP 'DEFINED-IN-FILE 'EXCALC/PARTDF.RED) 
(PUT 'SUBLISTP 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE SUBLISTP (X Y)
    (OR (NULL X)
        (AND (MEMBER (CAR X) Y) (SUBLISTP (CDR X) (DELETE (CAR X) Y))))) 
(PUT 'LISTDIFF 'NUMBER-OF-ARGS 2) 
(PUT 'LISTDIFF 'DEFINED-ON-LINE '184) 
(PUT 'LISTDIFF 'DEFINED-IN-FILE 'EXCALC/PARTDF.RED) 
(PUT 'LISTDIFF 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE LISTDIFF (X Y)
    (COND ((NULL Y) X) ((NULL X) NIL)
          (T (LISTDIFF (DELETE (CAR Y) X) (CDR Y))))) 
(PUT 'NDEPENDS 'NUMBER-OF-ARGS 2) 
(PUT 'NDEPENDS 'DEFINED-ON-LINE '190) 
(PUT 'NDEPENDS 'DEFINED-IN-FILE 'EXCALC/PARTDF.RED) 
(PUT 'NDEPENDS 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE NDEPENDS (U V)
    (COND ((OR (NULL U) (NUMBERP U) (NUMBERP V)) NIL) ((EQUAL U V) U)
          ((AND (ATOM U) (MEMQ U FRLIS*)) T)
          (((LAMBDA (X) (AND X (LNDEPENDS (CDR X) V))) (ASSOC U DEPL*)) T)
          ((AND (NOT (ATOM U)) (IDP (CAR U)) (GET (CAR U) 'DNAME)) NIL)
          ((AND (NOT (ATOMF U))
                (OR (LNDEPENDS (CDR U) V) (NDEPENDS (CAR U) V)))
           T)
          ((OR (ATOMF V) (AND (IDP (CAR V)) (GET (CAR V) 'DNAME))) NIL)
          (T (NDEPENDSL U (CDR V))))) 
(PUT 'LNDEPENDS 'NUMBER-OF-ARGS 2) 
(PUT 'LNDEPENDS 'DEFINED-ON-LINE '202) 
(PUT 'LNDEPENDS 'DEFINED-IN-FILE 'EXCALC/PARTDF.RED) 
(PUT 'LNDEPENDS 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE LNDEPENDS (U V) (AND U (OR (NDEPENDS (CAR U) V) (LNDEPENDS (CDR U) V)))) 
(PUT 'NDEPENDSL 'NUMBER-OF-ARGS 2) 
(PUT 'NDEPENDSL 'DEFINED-ON-LINE '205) 
(PUT 'NDEPENDSL 'DEFINED-IN-FILE 'EXCALC/PARTDF.RED) 
(PUT 'NDEPENDSL 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE NDEPENDSL (U V) (AND U (OR (NDEPENDS U (CAR V)) (NDEPENDSL U (CDR V))))) 
(PUT 'PARTDFPRN 'NUMBER-OF-ARGS 1) 
(PUT 'PARTDFPRN 'DEFINED-ON-LINE '208) 
(PUT 'PARTDFPRN 'DEFINED-IN-FILE 'EXCALC/PARTDF.RED) 
(PUT 'PARTDFPRN 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE PARTDFPRN (U)
    (COND
     ((NULL *NAT)
      (PROGN
       (PRIN2* '@)
       (PRIN2* "(")
       (COND ((CDDR U) (INPRINT '*COMMA* 0 (CDR U))) (T (MAPRIN (CADR U))))
       (PRIN2* ")")))
     (T
      (PROG (Y L)
        (SETQ L 0)
        (SETQ L (PLUS (FLATSIZEC (FLATINDXL (CDR U))) 1))
        (COND
         ((GREATERP L (DIFFERENCE (DIFFERENCE (LINELENGTH NIL) SPARE*) POSN*))
          (TERPRI* T)))
        (SETQ Y YCOORD*)
        (PRIN2* '@)
        (SETQ YCOORD*
                (DIFFERENCE Y
                            (COND
                             ((OR (AND (NULL (CDDR U)) (INDEXVP (CADR U)))
                                  (AND (CDDR U) (INDEXVP (CADDR U))))
                              2)
                             (T 1))))
        (COND ((LESSP YCOORD* YMIN*) (SETQ YMIN* YCOORD*)))
        (COND ((NULL (CDDR U)) (PROGN (MAPRIN (CADR U)) (SETQ YCOORD* Y)))
              (T
               (PROGN
                (PROG (J)
                  (SETQ J (CDDR U))
                 LAB
                  (COND ((NULL J) (RETURN NIL)))
                  (PROGN (MAPRIN (CAR J)) (COND ((CDR J) (PRIN2* " "))))
                  (SETQ J (CDR J))
                  (GO LAB))
                (SETQ YCOORD* Y)
                (COND ((ATOM (CADR U)) (PRIN2* (CADR U)))
                      (T
                       (PROGN
                        (PRIN2* "(")
                        (MAPRIN (CADR U))
                        (PRIN2* ")"))))))))))) 
(PUT 'PARTDF 'PRIFN 'PARTDFPRN) 
(PUT 'INDEXVP 'NUMBER-OF-ARGS 1) 
(PUT 'INDEXVP 'DEFINED-ON-LINE '238) 
(PUT 'INDEXVP 'DEFINED-IN-FILE 'EXCALC/PARTDF.RED) 
(PUT 'INDEXVP 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE INDEXVP (U) (AND (NULL (ATOM U)) (FLAGP (CAR U) 'INDEXVAR))) 
(PUT 'XPARTDFPRN 'NUMBER-OF-ARGS 2) 
(PUT 'XPARTDFPRN 'DEFINED-ON-LINE '241) 
(PUT 'XPARTDFPRN 'DEFINED-IN-FILE 'EXCALC/PARTDF.RED) 
(PUT 'XPARTDFPRN 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE XPARTDFPRN (U L)
    (PROG (POS TPOS FL W)
      (SETQ POS FANCY-POS*)
      (SETQ TPOS FANCY-TEXPOS)
      (SETQ FL FANCY-LINE*)
      (SETQ W
              (COND
               ((NULL (CDDR U))
                (PROG (W)
                  (SETQ W (FANCY-PREFIX-OPERATOR 'PARTIAL-DF))
                  (COND ((EQ W 'FAILED) (RETURN 'FAILED)))
                  (RETURN (FANCY-PRINT-INDEXLIST1 (CDR U) '_ NIL))))
               (T
                (FANCY-DFPRI0
                 (CONS (CAR U) (CONS (CADR U) (DERADPDF (CDDR U)))) L
                 'PARTIAL-DF))))
      (COND
       ((EQ W 'FAILED) (SETQ FANCY-LINE* FL) (SETQ FANCY-TEXPOS TPOS)
        (SETQ FANCY-POS* POS)))
      (RETURN W))) 
(PUT 'DERADPDF 'NUMBER-OF-ARGS 1) 
(PUT 'DERADPDF 'DEFINED-ON-LINE '251) 
(PUT 'DERADPDF 'DEFINED-IN-FILE 'EXCALC/PARTDF.RED) 
(PUT 'DERADPDF 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE DERADPDF (U)
    (COND ((NULL (CDR U)) U)
          (T
           (PROG (X)
             (SETQ X (DERAD (CAR U) (LIST (CADR U))))
             (PROG (J)
               (SETQ J (CDDR U))
              LAB
               (COND ((NULL J) (RETURN NIL)))
               ((LAMBDA (J) (SETQ X (DERAD J X))) (CAR J))
               (SETQ J (CDR J))
               (GO LAB))
             (RETURN X))))) 
(PUT 'PARTDF 'FANCY-PPRIFN 'XPARTDFPRN) 
(ENDMODULE) 