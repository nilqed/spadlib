(cl:declaim (cl:optimize cl:debug cl:safety))
(cl:declaim (sb-ext:muffle-conditions sb-ext:compiler-note cl:style-warning))
(MODULE (LIST 'BAS)) 
(PUT 'BAS_DPOLY 'NUMBER-OF-ARGS 1) 
(PUT 'BAS_DPOLY 'DEFINED-ON-LINE '52) 
(PUT 'BAS_DPOLY 'DEFINED-IN-FILE 'CALI/BAS.RED) 
(PUT 'BAS_DPOLY 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE BAS_DPOLY (B) (CADR B)) 
(PUT 'BAS_DPLEN 'NUMBER-OF-ARGS 1) 
(PUT 'BAS_DPLEN 'DEFINED-ON-LINE '53) 
(PUT 'BAS_DPLEN 'DEFINED-IN-FILE 'CALI/BAS.RED) 
(PUT 'BAS_DPLEN 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE BAS_DPLEN (B) (CADDR B)) 
(PUT 'BAS_NR 'NUMBER-OF-ARGS 1) 
(PUT 'BAS_NR 'DEFINED-ON-LINE '54) 
(PUT 'BAS_NR 'DEFINED-IN-FILE 'CALI/BAS.RED) 
(PUT 'BAS_NR 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE BAS_NR (B) (CAR B)) 
(PUT 'BAS_DPECART 'NUMBER-OF-ARGS 1) 
(PUT 'BAS_DPECART 'DEFINED-ON-LINE '55) 
(PUT 'BAS_DPECART 'DEFINED-IN-FILE 'CALI/BAS.RED) 
(PUT 'BAS_DPECART 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE BAS_DPECART (B) (CADDDR B)) 
(PUT 'BAS_REP 'NUMBER-OF-ARGS 1) 
(PUT 'BAS_REP 'DEFINED-ON-LINE '56) 
(PUT 'BAS_REP 'DEFINED-IN-FILE 'CALI/BAS.RED) 
(PUT 'BAS_REP 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE BAS_REP (B) (NTH B 5)) 
(PUT 'BAS_NEWNUMBER 'NUMBER-OF-ARGS 2) 
(PUT 'BAS_NEWNUMBER 'DEFINED-ON-LINE '60) 
(PUT 'BAS_NEWNUMBER 'DEFINED-IN-FILE 'CALI/BAS.RED) 
(PUT 'BAS_NEWNUMBER 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE BAS_NEWNUMBER (NR BE) (CONS NR (CDR BE))) 
(PUT 'BAS_MAKE 'NUMBER-OF-ARGS 2) 
(PUT 'BAS_MAKE 'DEFINED-ON-LINE '64) 
(PUT 'BAS_MAKE 'DEFINED-IN-FILE 'CALI/BAS.RED) 
(PUT 'BAS_MAKE 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE BAS_MAKE (NR POL) (LIST NR POL (LENGTH POL) (DP_ECART POL) NIL)) 
(PUT 'BAS_MAKE1 'NUMBER-OF-ARGS 3) 
(PUT 'BAS_MAKE1 'DEFINED-ON-LINE '68) 
(PUT 'BAS_MAKE1 'DEFINED-IN-FILE 'CALI/BAS.RED) 
(PUT 'BAS_MAKE1 'PROCEDURE_TYPE
     '(ARROW (TIMES GENERAL GENERAL GENERAL) GENERAL)) 
(DE BAS_MAKE1 (NR POL REP) (LIST NR POL (LENGTH POL) (DP_ECART POL) REP)) 
(PUT 'BAS_GETELEMENT 'NUMBER-OF-ARGS 2) 
(PUT 'BAS_GETELEMENT 'DEFINED-ON-LINE '72) 
(PUT 'BAS_GETELEMENT 'DEFINED-IN-FILE 'CALI/BAS.RED) 
(PUT 'BAS_GETELEMENT 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE BAS_GETELEMENT (I BAS)
    (COND ((NULL BAS) (LIST I NIL 0 0 NIL))
          ((EQN I (BAS_NR (CAR BAS))) (CAR BAS))
          (T (BAS_GETELEMENT I (CDR BAS))))) 
(PUT 'BAS_SORT 'NUMBER-OF-ARGS 1) 
(PUT 'BAS_SORT 'DEFINED-ON-LINE '80) 
(PUT 'BAS_SORT 'DEFINED-IN-FILE 'CALI/BAS.RED) 
(PUT 'BAS_SORT 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE BAS_SORT (B) (SORT B (FUNCTION RED_BETTER))) 
(PUT 'BAS_PRINT 'NUMBER-OF-ARGS 1) 
(PUT 'BAS_PRINT 'DEFINED-ON-LINE '84) 
(PUT 'BAS_PRINT 'DEFINED-IN-FILE 'CALI/BAS.RED) 
(PUT 'BAS_PRINT 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE BAS_PRINT (U)
    (PROG ()
      (TERPRI)
      (COND ((NULL U) (PRINT 'EMPTY))
            (T
             (PROG (V)
               (SETQ V U)
              LAB
               (COND ((NULL V) (RETURN NIL)))
               ((LAMBDA (V)
                  (PROGN
                   (PROGN (PRIN2 (BAS_NR V)) (PRIN2 " -->  ") NIL)
                   (DP_PRINT2 (BAS_DPOLY V))))
                (CAR V))
               (SETQ V (CDR V))
               (GO LAB)))))) 
(PUT 'BAS_RENUMBER 'NUMBER-OF-ARGS 1) 
(PUT 'BAS_RENUMBER 'DEFINED-ON-LINE '92) 
(PUT 'BAS_RENUMBER 'DEFINED-IN-FILE 'CALI/BAS.RED) 
(PUT 'BAS_RENUMBER 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE BAS_RENUMBER (U)
    (COND ((NULL U) NIL)
          (T
           (PROG (I)
             (SETQ I 0)
             (RETURN
              (PROG (X FORALL-RESULT FORALL-ENDPTR)
                (SETQ X U)
                (COND ((NULL X) (RETURN NIL)))
                (SETQ FORALL-RESULT
                        (SETQ FORALL-ENDPTR
                                (CONS
                                 ((LAMBDA (X)
                                    (PROGN
                                     (SETQ I (PLUS I 1))
                                     (BAS_NEWNUMBER I X)))
                                  (CAR X))
                                 NIL)))
               LOOPLABEL
                (SETQ X (CDR X))
                (COND ((NULL X) (RETURN FORALL-RESULT)))
                (RPLACD FORALL-ENDPTR
                        (CONS
                         ((LAMBDA (X)
                            (PROGN (SETQ I (PLUS I 1)) (BAS_NEWNUMBER I X)))
                          (CAR X))
                         NIL))
                (SETQ FORALL-ENDPTR (CDR FORALL-ENDPTR))
                (GO LOOPLABEL))))))) 
(PUT 'BAS_SETRELATIONS 'NUMBER-OF-ARGS 1) 
(PUT 'BAS_SETRELATIONS 'DEFINED-ON-LINE '99) 
(PUT 'BAS_SETRELATIONS 'DEFINED-IN-FILE 'CALI/BAS.RED) 
(PUT 'BAS_SETRELATIONS 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE BAS_SETRELATIONS (U)
    (PROG (X)
      (SETQ X U)
     LAB
      (COND ((NULL X) (RETURN NIL)))
      ((LAMBDA (X)
         (COND
          ((GREATERP (BAS_NR X) 0)
           (RPLACA (CDDDDR X) (DP_FROM_EI (BAS_NR X))))))
       (CAR X))
      (SETQ X (CDR X))
      (GO LAB))) 
(PUT 'BAS_REMOVERELATIONS 'NUMBER-OF-ARGS 1) 
(PUT 'BAS_REMOVERELATIONS 'DEFINED-ON-LINE '105) 
(PUT 'BAS_REMOVERELATIONS 'DEFINED-IN-FILE 'CALI/BAS.RED) 
(PUT 'BAS_REMOVERELATIONS 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE BAS_REMOVERELATIONS (U)
    (PROG (X)
      (SETQ X U)
     LAB
      (COND ((NULL X) (RETURN NIL)))
      ((LAMBDA (X) (RPLACA (CDDDDR X) NIL)) (CAR X))
      (SETQ X (CDR X))
      (GO LAB))) 
(PUT 'BAS_GETRELATIONS 'NUMBER-OF-ARGS 1) 
(PUT 'BAS_GETRELATIONS 'DEFINED-ON-LINE '109) 
(PUT 'BAS_GETRELATIONS 'DEFINED-IN-FILE 'CALI/BAS.RED) 
(PUT 'BAS_GETRELATIONS 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE BAS_GETRELATIONS (U)
    (PROG (W)
      (PROG (X)
        (SETQ X U)
       LAB
        (COND ((NULL X) (RETURN NIL)))
        ((LAMBDA (X) (SETQ W (CONS (BAS_MAKE (BAS_NR X) (BAS_REP X)) W)))
         (CAR X))
        (SETQ X (CDR X))
        (GO LAB))
      (RETURN (REVERSIP W)))) 
(PUT 'BAS_FROM_A 'NUMBER-OF-ARGS 1) 
(PUT 'BAS_FROM_A 'DEFINED-ON-LINE '116) 
(PUT 'BAS_FROM_A 'DEFINED-IN-FILE 'CALI/BAS.RED) 
(PUT 'BAS_FROM_A 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE BAS_FROM_A (U)
    (BAS_RENUMBER
     (PROG (V FORALL-RESULT FORALL-ENDPTR)
       (SETQ V (CDR U))
       (COND ((NULL V) (RETURN NIL)))
       (SETQ FORALL-RESULT
               (SETQ FORALL-ENDPTR
                       (CONS
                        ((LAMBDA (V)
                           (BAS_MAKE 0 (DP_FROM_A (PREPF (CAR (SIMP V))))))
                         (CAR V))
                        NIL)))
      LOOPLABEL
       (SETQ V (CDR V))
       (COND ((NULL V) (RETURN FORALL-RESULT)))
       (RPLACD FORALL-ENDPTR
               (CONS
                ((LAMBDA (V) (BAS_MAKE 0 (DP_FROM_A (PREPF (CAR (SIMP V))))))
                 (CAR V))
                NIL))
       (SETQ FORALL-ENDPTR (CDR FORALL-ENDPTR))
       (GO LOOPLABEL)))) 
(PUT 'BAS_2A 'NUMBER-OF-ARGS 1) 
(PUT 'BAS_2A 'DEFINED-ON-LINE '122) 
(PUT 'BAS_2A 'DEFINED-IN-FILE 'CALI/BAS.RED) 
(PUT 'BAS_2A 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE BAS_2A (U)
    (APPEND '(LIST)
            (PROG (X FORALL-RESULT FORALL-ENDPTR)
              (SETQ X U)
              (COND ((NULL X) (RETURN NIL)))
              (SETQ FORALL-RESULT
                      (SETQ FORALL-ENDPTR
                              (CONS
                               ((LAMBDA (X) (DP_2A (BAS_DPOLY X))) (CAR X))
                               NIL)))
             LOOPLABEL
              (SETQ X (CDR X))
              (COND ((NULL X) (RETURN FORALL-RESULT)))
              (RPLACD FORALL-ENDPTR
                      (CONS ((LAMBDA (X) (DP_2A (BAS_DPOLY X))) (CAR X)) NIL))
              (SETQ FORALL-ENDPTR (CDR FORALL-ENDPTR))
              (GO LOOPLABEL)))) 
(PUT 'BAS_NEWORDER 'NUMBER-OF-ARGS 1) 
(PUT 'BAS_NEWORDER 'DEFINED-ON-LINE '126) 
(PUT 'BAS_NEWORDER 'DEFINED-IN-FILE 'CALI/BAS.RED) 
(PUT 'BAS_NEWORDER 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE BAS_NEWORDER (U)
    (PROG (X FORALL-RESULT FORALL-ENDPTR)
      (SETQ X U)
      (COND ((NULL X) (RETURN NIL)))
      (SETQ FORALL-RESULT
              (SETQ FORALL-ENDPTR
                      (CONS
                       ((LAMBDA (X)
                          (BAS_MAKE1 (BAS_NR X) (DP_NEWORDER (BAS_DPOLY X))
                           (DP_NEWORDER (BAS_REP X))))
                        (CAR X))
                       NIL)))
     LOOPLABEL
      (SETQ X (CDR X))
      (COND ((NULL X) (RETURN FORALL-RESULT)))
      (RPLACD FORALL-ENDPTR
              (CONS
               ((LAMBDA (X)
                  (BAS_MAKE1 (BAS_NR X) (DP_NEWORDER (BAS_DPOLY X))
                   (DP_NEWORDER (BAS_REP X))))
                (CAR X))
               NIL))
      (SETQ FORALL-ENDPTR (CDR FORALL-ENDPTR))
      (GO LOOPLABEL))) 
(PUT 'BAS_ZERODELETE 'NUMBER-OF-ARGS 1) 
(PUT 'BAS_ZERODELETE 'DEFINED-ON-LINE '132) 
(PUT 'BAS_ZERODELETE 'DEFINED-IN-FILE 'CALI/BAS.RED) 
(PUT 'BAS_ZERODELETE 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE BAS_ZERODELETE (U)
    (COND ((NULL U) NIL) ((NULL (BAS_DPOLY (CAR U))) (BAS_ZERODELETE (CDR U)))
          (T (CONS (CAR U) (BAS_ZERODELETE (CDR U)))))) 
(PUT 'BAS_SIMPELEMENT 'NUMBER-OF-ARGS 1) 
(PUT 'BAS_SIMPELEMENT 'DEFINED-ON-LINE '138) 
(PUT 'BAS_SIMPELEMENT 'DEFINED-IN-FILE 'CALI/BAS.RED) 
(PUT 'BAS_SIMPELEMENT 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE BAS_SIMPELEMENT (B)
    (COND ((NULL (BAS_DPOLY B)) (CONS B (CALI_BC_FI 1)))
          (T
           (PROG (Z Z1 POL REP)
             (COND
              ((SETQ Z (CALI_BC_INV (SETQ Z1 (DP_LC (BAS_DPOLY B)))))
               (RETURN
                (CONS
                 (BAS_MAKE1 (BAS_NR B) (DP_TIMES_BC Z (BAS_DPOLY B))
                  (DP_TIMES_BC Z (BAS_REP B)))
                 Z1))))
             (SETQ Z
                     (CALI_BC_GCD (DP_CONTENT (BAS_DPOLY B))
                      (DP_CONTENT (BAS_REP B))))
             (COND ((CALI_BC_MINUS? Z1) (SETQ Z (CALI_BC_NEG Z))))
             (SETQ POL
                     (PROG (X FORALL-RESULT FORALL-ENDPTR)
                       (SETQ X (BAS_DPOLY B))
                       (COND ((NULL X) (RETURN NIL)))
                       (SETQ FORALL-RESULT
                               (SETQ FORALL-ENDPTR
                                       (CONS
                                        ((LAMBDA (X)
                                           (CONS (CAR X)
                                                 (CAR
                                                  (CALI_BC_DIVMOD (CDR X) Z))))
                                         (CAR X))
                                        NIL)))
                      LOOPLABEL
                       (SETQ X (CDR X))
                       (COND ((NULL X) (RETURN FORALL-RESULT)))
                       (RPLACD FORALL-ENDPTR
                               (CONS
                                ((LAMBDA (X)
                                   (CONS (CAR X)
                                         (CAR (CALI_BC_DIVMOD (CDR X) Z))))
                                 (CAR X))
                                NIL))
                       (SETQ FORALL-ENDPTR (CDR FORALL-ENDPTR))
                       (GO LOOPLABEL)))
             (SETQ REP
                     (PROG (X FORALL-RESULT FORALL-ENDPTR)
                       (SETQ X (BAS_REP B))
                       (COND ((NULL X) (RETURN NIL)))
                       (SETQ FORALL-RESULT
                               (SETQ FORALL-ENDPTR
                                       (CONS
                                        ((LAMBDA (X)
                                           (CONS (CAR X)
                                                 (CAR
                                                  (CALI_BC_DIVMOD (CDR X) Z))))
                                         (CAR X))
                                        NIL)))
                      LOOPLABEL
                       (SETQ X (CDR X))
                       (COND ((NULL X) (RETURN FORALL-RESULT)))
                       (RPLACD FORALL-ENDPTR
                               (CONS
                                ((LAMBDA (X)
                                   (CONS (CAR X)
                                         (CAR (CALI_BC_DIVMOD (CDR X) Z))))
                                 (CAR X))
                                NIL))
                       (SETQ FORALL-ENDPTR (CDR FORALL-ENDPTR))
                       (GO LOOPLABEL)))
             (RETURN (CONS (BAS_MAKE1 (BAS_NR B) POL REP) Z)))))) 
(PUT 'BAS_SIMP 'NUMBER-OF-ARGS 1) 
(PUT 'BAS_SIMP 'DEFINED-ON-LINE '163) 
(PUT 'BAS_SIMP 'DEFINED-IN-FILE 'CALI/BAS.RED) 
(PUT 'BAS_SIMP 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE BAS_SIMP (U)
    (PROG (X FORALL-RESULT FORALL-ENDPTR)
      (SETQ X U)
      (COND ((NULL X) (RETURN NIL)))
      (SETQ FORALL-RESULT
              (SETQ FORALL-ENDPTR
                      (CONS ((LAMBDA (X) (CAR (BAS_SIMPELEMENT X))) (CAR X))
                            NIL)))
     LOOPLABEL
      (SETQ X (CDR X))
      (COND ((NULL X) (RETURN FORALL-RESULT)))
      (RPLACD FORALL-ENDPTR
              (CONS ((LAMBDA (X) (CAR (BAS_SIMPELEMENT X))) (CAR X)) NIL))
      (SETQ FORALL-ENDPTR (CDR FORALL-ENDPTR))
      (GO LOOPLABEL))) 
(PUT 'BAS_ZERO? 'NUMBER-OF-ARGS 1) 
(PUT 'BAS_ZERO? 'DEFINED-ON-LINE '167) 
(PUT 'BAS_ZERO? 'DEFINED-IN-FILE 'CALI/BAS.RED) 
(PUT 'BAS_ZERO? 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE BAS_ZERO? (B)
    (OR (NULL B) (AND (NULL (BAS_DPOLY (CAR B))) (BAS_ZERO? (CDR B))))) 
(PUT 'BAS_SIEVE 'NUMBER-OF-ARGS 2) 
(PUT 'BAS_SIEVE 'DEFINED-ON-LINE '171) 
(PUT 'BAS_SIEVE 'DEFINED-IN-FILE 'CALI/BAS.RED) 
(PUT 'BAS_SIEVE 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE BAS_SIEVE (BAS VARS)
    (PROG (M)
      (SETQ M (CONS NIL (MO=DEGLIST NIL)))
      (PROG (X)
        (SETQ X VARS)
       LAB
        (COND ((NULL X) (RETURN NIL)))
        ((LAMBDA (X)
           (COND
            ((MEMBER X (RING_NAMES CALI=BASERING))
             (SETQ M (MO_SUM M (MO_FROM_A X))))
            (T (TYPERR X "variable name"))))
         (CAR X))
        (SETQ X (CDR X))
        (GO LAB))
      (RETURN
       (BAS_RENUMBER
        (PROG (X FORALL-RESULT FORALL-ENDPTR)
          (SETQ X (BAS_ZERODELETE BAS))
         STARTOVER
          (COND ((NULL X) (RETURN NIL)))
          (SETQ FORALL-RESULT
                  ((LAMBDA (X)
                     (COND
                      ((MO=ZERO (CAR (MO_GCD M (DP_LMON (BAS_DPOLY X)))))
                       (LIST X))))
                   (CAR X)))
          (SETQ FORALL-ENDPTR (LASTPAIR FORALL-RESULT))
          (SETQ X (CDR X))
          (COND ((ATOM FORALL-ENDPTR) (GO STARTOVER)))
         LOOPLABEL
          (COND ((NULL X) (RETURN FORALL-RESULT)))
          (RPLACD FORALL-ENDPTR
                  ((LAMBDA (X)
                     (COND
                      ((MO=ZERO (CAR (MO_GCD M (DP_LMON (BAS_DPOLY X)))))
                       (LIST X))))
                   (CAR X)))
          (SETQ FORALL-ENDPTR (LASTPAIR FORALL-ENDPTR))
          (SETQ X (CDR X))
          (GO LOOPLABEL)))))) 
(PUT 'BAS_HOMOGENIZE 'NUMBER-OF-ARGS 2) 
(PUT 'BAS_HOMOGENIZE 'DEFINED-ON-LINE '184) 
(PUT 'BAS_HOMOGENIZE 'DEFINED-IN-FILE 'CALI/BAS.RED) 
(PUT 'BAS_HOMOGENIZE 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE BAS_HOMOGENIZE (B VAR)
    (PROG (X FORALL-RESULT FORALL-ENDPTR)
      (SETQ X B)
      (COND ((NULL X) (RETURN NIL)))
      (SETQ FORALL-RESULT
              (SETQ FORALL-ENDPTR
                      (CONS
                       ((LAMBDA (X)
                          (BAS_MAKE1 (BAS_NR X)
                           (DP_HOMOGENIZE (BAS_DPOLY X) VAR)
                           (DP_HOMOGENIZE (BAS_REP X) VAR)))
                        (CAR X))
                       NIL)))
     LOOPLABEL
      (SETQ X (CDR X))
      (COND ((NULL X) (RETURN FORALL-RESULT)))
      (RPLACD FORALL-ENDPTR
              (CONS
               ((LAMBDA (X)
                  (BAS_MAKE1 (BAS_NR X) (DP_HOMOGENIZE (BAS_DPOLY X) VAR)
                   (DP_HOMOGENIZE (BAS_REP X) VAR)))
                (CAR X))
               NIL))
      (SETQ FORALL-ENDPTR (CDR FORALL-ENDPTR))
      (GO LOOPLABEL))) 
(PUT 'BAS_DEHOMOGENIZE 'NUMBER-OF-ARGS 2) 
(PUT 'BAS_DEHOMOGENIZE 'DEFINED-ON-LINE '191) 
(PUT 'BAS_DEHOMOGENIZE 'DEFINED-IN-FILE 'CALI/BAS.RED) 
(PUT 'BAS_DEHOMOGENIZE 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE BAS_DEHOMOGENIZE (B VAR)
    (PROG (U V)
      (COND
       ((NOT (MEMBER VAR (SETQ V (RING_ALL_NAMES CALI=BASERING))))
        (TYPERR VAR "dpoly variable")))
      (SETQ U (SETDIFF V (LIST VAR)))
      (RETURN
       (PROG (X FORALL-RESULT FORALL-ENDPTR)
         (SETQ X B)
         (COND ((NULL X) (RETURN NIL)))
         (SETQ FORALL-RESULT
                 (SETQ FORALL-ENDPTR
                         (CONS
                          ((LAMBDA (X)
                             (BAS_MAKE1 (BAS_NR X) (DP_SEED (BAS_DPOLY X) U)
                              (DP_SEED (BAS_REP X) U)))
                           (CAR X))
                          NIL)))
        LOOPLABEL
         (SETQ X (CDR X))
         (COND ((NULL X) (RETURN FORALL-RESULT)))
         (RPLACD FORALL-ENDPTR
                 (CONS
                  ((LAMBDA (X)
                     (BAS_MAKE1 (BAS_NR X) (DP_SEED (BAS_DPOLY X) U)
                      (DP_SEED (BAS_REP X) U)))
                   (CAR X))
                  NIL))
         (SETQ FORALL-ENDPTR (CDR FORALL-ENDPTR))
         (GO LOOPLABEL))))) 
(PUT 'BAS=FACTORUNITS 'NUMBER-OF-ARGS 1) 
(PUT 'BAS=FACTORUNITS 'DEFINED-ON-LINE '204) 
(PUT 'BAS=FACTORUNITS 'DEFINED-IN-FILE 'CALI/BAS.RED) 
(PUT 'BAS=FACTORUNITS 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE BAS=FACTORUNITS (P)
    (COND ((NULL P) NIL)
          (T
           (BAS=DELPROD
            (PROG (Y FORALL-RESULT FORALL-ENDPTR)
              (SETQ Y
                      (CDR
                       ((LAMBDA (*FACTOR) (FCTRF (CAR (SIMP (DP_2A P))))) T)))
              (COND ((NULL Y) (RETURN NIL)))
              (SETQ FORALL-RESULT
                      (SETQ FORALL-ENDPTR
                              (CONS
                               ((LAMBDA (Y)
                                  (CONS (DP_FROM_A (PREPF (CAR Y))) (CDR Y)))
                                (CAR Y))
                               NIL)))
             LOOPLABEL
              (SETQ Y (CDR Y))
              (COND ((NULL Y) (RETURN FORALL-RESULT)))
              (RPLACD FORALL-ENDPTR
                      (CONS
                       ((LAMBDA (Y) (CONS (DP_FROM_A (PREPF (CAR Y))) (CDR Y)))
                        (CAR Y))
                       NIL))
              (SETQ FORALL-ENDPTR (CDR FORALL-ENDPTR))
              (GO LOOPLABEL)))))) 
(PUT 'BAS=DELPROD 'NUMBER-OF-ARGS 1) 
(PUT 'BAS=DELPROD 'DEFINED-ON-LINE '210) 
(PUT 'BAS=DELPROD 'DEFINED-IN-FILE 'CALI/BAS.RED) 
(PUT 'BAS=DELPROD 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE BAS=DELPROD (U)
    (PROG (P)
      (SETQ P (DP_FI 1))
      (PROG (X)
        (SETQ X U)
       LAB
        (COND ((NULL X) (RETURN NIL)))
        ((LAMBDA (X)
           (COND
            ((NOT (DP_UNIT? (CAR X)))
             (SETQ P (DP_PROD P (DP_POWER (CAR X) (CDR X)))))))
         (CAR X))
        (SETQ X (CDR X))
        (GO LAB))
      (RETURN P))) 
(PUT 'BAS=DETECTUNITS 'NUMBER-OF-ARGS 1) 
(PUT 'BAS=DETECTUNITS 'DEFINED-ON-LINE '217) 
(PUT 'BAS=DETECTUNITS 'DEFINED-IN-FILE 'CALI/BAS.RED) 
(PUT 'BAS=DETECTUNITS 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE BAS=DETECTUNITS (P)
    (COND ((NULL P) NIL)
          ((LISTTEST (CDR P) (DP_LMON P)
                     (FUNCTION (LAMBDA (X Y) (NOT (MO_VDIVIDES? Y (CAR X))))))
           P)
          (T (LIST (DP_TERM (CALI_BC_FI 1) (DP_LMON P)))))) 
(PUT 'BAS_FACTORUNITS 'NUMBER-OF-ARGS 1) 
(PUT 'BAS_FACTORUNITS 'DEFINED-ON-LINE '223) 
(PUT 'BAS_FACTORUNITS 'DEFINED-IN-FILE 'CALI/BAS.RED) 
(PUT 'BAS_FACTORUNITS 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE BAS_FACTORUNITS (B) (BAS_MAKE (BAS_NR B) (BAS=FACTORUNITS (BAS_DPOLY B)))) 
(PUT 'BAS_DETECTUNITS 'NUMBER-OF-ARGS 1) 
(PUT 'BAS_DETECTUNITS 'DEFINED-ON-LINE '226) 
(PUT 'BAS_DETECTUNITS 'DEFINED-IN-FILE 'CALI/BAS.RED) 
(PUT 'BAS_DETECTUNITS 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE BAS_DETECTUNITS (B) (BAS_MAKE (BAS_NR B) (BAS=DETECTUNITS (BAS_DPOLY B)))) 
(ENDMODULE) 