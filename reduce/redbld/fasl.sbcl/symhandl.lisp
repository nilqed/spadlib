(cl:declaim (cl:optimize cl:debug cl:safety))
(cl:declaim (sb-ext:muffle-conditions sb-ext:compiler-note cl:style-warning))
(MODULE (LIST 'SYMHANDL)) 
(PUT 'AVAILABLE*P 'NUMBER-OF-ARGS 1) 
(PUT 'AVAILABLE*P 'DEFINED-ON-LINE '47) 
(PUT 'AVAILABLE*P 'DEFINED-IN-FILE 'SYMMETRY/SYMHANDL.RED) 
(PUT 'AVAILABLE*P 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE AVAILABLE*P (GROUP)
    (PROG ()
      (COND ((NOT (IDP GROUP)) (REDERR "this is no group identifier")))
      (RETURN (FLAGP GROUP 'AVAILABLE)))) 
(PUT 'STORING*P 'NUMBER-OF-ARGS 1) 
(PUT 'STORING*P 'DEFINED-ON-LINE '56) 
(PUT 'STORING*P 'DEFINED-IN-FILE 'SYMMETRY/SYMHANDL.RED) 
(PUT 'STORING*P 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE STORING*P (GROUP) (PROG () (RETURN (FLAGP GROUP 'STORING)))) 
(PUT 'G*ELEMENT*P 'NUMBER-OF-ARGS 2) 
(PUT 'G*ELEMENT*P 'DEFINED-ON-LINE '64) 
(PUT 'G*ELEMENT*P 'DEFINED-IN-FILE 'SYMMETRY/SYMHANDL.RED) 
(PUT 'G*ELEMENT*P 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE G*ELEMENT*P (GROUP ELEMENT)
    (PROG ()
      (COND ((MEMQ ELEMENT (GET*ELEMENTS GROUP)) (RETURN T)) (T (RETURN NIL))))) 
(PUT 'G*GENERATER*P 'NUMBER-OF-ARGS 2) 
(PUT 'G*GENERATER*P 'DEFINED-ON-LINE '70) 
(PUT 'G*GENERATER*P 'DEFINED-IN-FILE 'SYMMETRY/SYMHANDL.RED) 
(PUT 'G*GENERATER*P 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE G*GENERATER*P (GROUP ELEMENT)
    (PROG ()
      (COND ((MEMQ ELEMENT (GET*GENERATORS GROUP)) (RETURN T))
            (T (RETURN NIL))))) 
(PUT 'GET*AVAILABLE*GROUPS 'NUMBER-OF-ARGS 0) 
(PUT 'GET*AVAILABLE*GROUPS 'DEFINED-ON-LINE '82) 
(PUT 'GET*AVAILABLE*GROUPS 'DEFINED-IN-FILE 'SYMMETRY/SYMHANDL.RED) 
(PUT 'GET*AVAILABLE*GROUPS 'PROCEDURE_TYPE '(ARROW UNIT GENERAL)) 
(DE GET*AVAILABLE*GROUPS NIL (PROG () (RETURN (GET 'AVAILABLES 'GROUPS)))) 
(PUT 'GET*ORDER 'NUMBER-OF-ARGS 1) 
(PUT 'GET*ORDER 'DEFINED-ON-LINE '88) 
(PUT 'GET*ORDER 'DEFINED-IN-FILE 'SYMMETRY/SYMHANDL.RED) 
(PUT 'GET*ORDER 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE GET*ORDER (GROUP) (PROG () (RETURN (LENGTH (GET*ELEMENTS GROUP))))) 
(PUT 'GET*ELEMENTS 'NUMBER-OF-ARGS 1) 
(PUT 'GET*ELEMENTS 'DEFINED-ON-LINE '94) 
(PUT 'GET*ELEMENTS 'DEFINED-IN-FILE 'SYMMETRY/SYMHANDL.RED) 
(PUT 'GET*ELEMENTS 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE GET*ELEMENTS (GROUP) (PROG (LL) (RETURN (GET GROUP 'ELEMS)))) 
(PUT 'GET*GENERATORS 'NUMBER-OF-ARGS 1) 
(PUT 'GET*GENERATORS 'DEFINED-ON-LINE '102) 
(PUT 'GET*GENERATORS 'DEFINED-IN-FILE 'SYMMETRY/SYMHANDL.RED) 
(PUT 'GET*GENERATORS 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE GET*GENERATORS (GROUP) (PROG () (RETURN (GET GROUP 'GENERATORS)))) 
(PUT 'GET*GENERATOR*RELATIONS 'NUMBER-OF-ARGS 1) 
(PUT 'GET*GENERATOR*RELATIONS 'DEFINED-ON-LINE '108) 
(PUT 'GET*GENERATOR*RELATIONS 'DEFINED-IN-FILE 'SYMMETRY/SYMHANDL.RED) 
(PUT 'GET*GENERATOR*RELATIONS 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE GET*GENERATOR*RELATIONS (GROUP) (PROG () (RETURN (GET GROUP 'RELATIONS)))) 
(PUT 'GET*PRODUCT 'NUMBER-OF-ARGS 3) 
(PUT 'GET*PRODUCT 'DEFINED-ON-LINE '115) 
(PUT 'GET*PRODUCT 'DEFINED-IN-FILE 'SYMMETRY/SYMHANDL.RED) 
(PUT 'GET*PRODUCT 'PROCEDURE_TYPE
     '(ARROW (TIMES GENERAL GENERAL GENERAL) GENERAL)) 
(DE GET*PRODUCT (GROUP ELEM1 ELEM2)
    (PROG (TABLE ABOVE LEFT)
      (SETQ TABLE (GET GROUP 'GROUPTABLE))
      (SETQ ABOVE (CAR TABLE))
      (SETQ LEFT
              (PROG (ROW FORALL-RESULT FORALL-ENDPTR)
                (SETQ ROW TABLE)
                (COND ((NULL ROW) (RETURN NIL)))
                (SETQ FORALL-RESULT
                        (SETQ FORALL-ENDPTR
                                (CONS ((LAMBDA (ROW) (CAR ROW)) (CAR ROW))
                                      NIL)))
               LOOPLABEL
                (SETQ ROW (CDR ROW))
                (COND ((NULL ROW) (RETURN FORALL-RESULT)))
                (RPLACD FORALL-ENDPTR
                        (CONS ((LAMBDA (ROW) (CAR ROW)) (CAR ROW)) NIL))
                (SETQ FORALL-ENDPTR (CDR FORALL-ENDPTR))
                (GO LOOPLABEL)))
      (RETURN
       (GET+MAT+ENTRY TABLE (GIVE*POSITION ELEM1 LEFT)
        (GIVE*POSITION ELEM2 ABOVE))))) 
(PUT 'GET*INVERSE 'NUMBER-OF-ARGS 2) 
(PUT 'GET*INVERSE 'DEFINED-ON-LINE '127) 
(PUT 'GET*INVERSE 'DEFINED-IN-FILE 'SYMMETRY/SYMHANDL.RED) 
(PUT 'GET*INVERSE 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE GET*INVERSE (GROUP ELEM)
    (PROG (INVLIST)
      (SETQ INVLIST (GET GROUP 'INVERSE))
      (RETURN (NTH (CADR INVLIST) (GIVE*POSITION ELEM (CAR INVLIST)))))) 
(PUT 'GIVE*POSITION 'NUMBER-OF-ARGS 2) 
(PUT 'GIVE*POSITION 'DEFINED-ON-LINE '136) 
(PUT 'GIVE*POSITION 'DEFINED-IN-FILE 'SYMMETRY/SYMHANDL.RED) 
(PUT 'GIVE*POSITION 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE GIVE*POSITION (ELEM LL)
    (PROG (J FOUND)
      (SETQ J 1)
      (SETQ FOUND NIL)
      (PROG ()
       WHILELABEL
        (COND ((NOT (AND (NULL FOUND) (LEQ J (LENGTH LL)))) (RETURN NIL)))
        (PROGN
         (COND ((EQUAL (NTH LL J) ELEM) (SETQ FOUND T))
               (T (SETQ J (PLUS J 1))))
         NIL)
        (GO WHILELABEL))
      (COND ((NULL FOUND) (REDERR "error in give position")))
      (RETURN J))) 
(PUT 'GET*ELEM*IN*GENERATORS 'NUMBER-OF-ARGS 2) 
(PUT 'GET*ELEM*IN*GENERATORS 'DEFINED-ON-LINE '148) 
(PUT 'GET*ELEM*IN*GENERATORS 'DEFINED-IN-FILE 'SYMMETRY/SYMHANDL.RED) 
(PUT 'GET*ELEM*IN*GENERATORS 'PROCEDURE_TYPE
     '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE GET*ELEM*IN*GENERATORS (GROUP ELEM)
    (PROG (LL FOUND RES)
      (SETQ LL (GET GROUP 'ELEM_IN_GENERATORS))
      (COND ((EQUAL ELEM 'ID) (RETURN (LIST 'ID))))
      (SETQ FOUND NIL)
      (PROG ()
       WHILELABEL
        (COND ((NOT (AND (NULL FOUND) (GREATERP (LENGTH LL) 0))) (RETURN NIL)))
        (PROGN
         (COND
          ((EQUAL ELEM (CAAAR LL))
           (PROGN (SETQ RES (CADR (CAR LL))) (SETQ FOUND T) NIL)))
         (SETQ LL (CDR LL))
         NIL)
        (GO WHILELABEL))
      (COND (FOUND (RETURN RES))
            (T (REDERR "error in get!*elem!*in!*generators"))))) 
(PUT 'GET*NR*EQUI*CLASSES 'NUMBER-OF-ARGS 1) 
(PUT 'GET*NR*EQUI*CLASSES 'DEFINED-ON-LINE '168) 
(PUT 'GET*NR*EQUI*CLASSES 'DEFINED-IN-FILE 'SYMMETRY/SYMHANDL.RED) 
(PUT 'GET*NR*EQUI*CLASSES 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE GET*NR*EQUI*CLASSES (GROUP)
    (PROG () (RETURN (LENGTH (GET GROUP 'EQUICLASSES))))) 
(PUT 'GET*EQUI*CLASS 'NUMBER-OF-ARGS 2) 
(PUT 'GET*EQUI*CLASS 'DEFINED-ON-LINE '174) 
(PUT 'GET*EQUI*CLASS 'DEFINED-IN-FILE 'SYMMETRY/SYMHANDL.RED) 
(PUT 'GET*EQUI*CLASS 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE GET*EQUI*CLASS (GROUP ELEM)
    (PROG (LL EQUIC FOUND)
      (SETQ LL (GET GROUP 'EQUICLASSES))
      (SETQ FOUND NIL)
      (PROG ()
       WHILELABEL
        (COND ((NOT (AND (NULL FOUND) (GREATERP (LENGTH LL) 0))) (RETURN NIL)))
        (PROGN
         (COND
          ((MEMQ ELEM (CAR LL))
           (PROGN (SETQ EQUIC (CAR LL)) (SETQ FOUND T) NIL)))
         (SETQ LL (CDR LL))
         NIL)
        (GO WHILELABEL))
      (COND (FOUND (RETURN EQUIC))))) 
(PUT 'GET*ALL*EQUI*CLASSES 'NUMBER-OF-ARGS 1) 
(PUT 'GET*ALL*EQUI*CLASSES 'DEFINED-ON-LINE '192) 
(PUT 'GET*ALL*EQUI*CLASSES 'DEFINED-IN-FILE 'SYMMETRY/SYMHANDL.RED) 
(PUT 'GET*ALL*EQUI*CLASSES 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE GET*ALL*EQUI*CLASSES (GROUP) (PROG () (RETURN (GET GROUP 'EQUICLASSES)))) 
(PUT 'GET*NR*REAL*IRRED*REPS 'NUMBER-OF-ARGS 1) 
(PUT 'GET*NR*REAL*IRRED*REPS 'DEFINED-ON-LINE '206) 
(PUT 'GET*NR*REAL*IRRED*REPS 'DEFINED-IN-FILE 'SYMMETRY/SYMHANDL.RED) 
(PUT 'GET*NR*REAL*IRRED*REPS 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE GET*NR*REAL*IRRED*REPS (GROUP)
    (PROG () (RETURN (GET GROUP 'REALREPNUMBER)))) 
(PUT 'GET*REAL*CHARACTER 'NUMBER-OF-ARGS 2) 
(PUT 'GET*REAL*CHARACTER 'DEFINED-ON-LINE '212) 
(PUT 'GET*REAL*CHARACTER 'DEFINED-IN-FILE 'SYMMETRY/SYMHANDL.RED) 
(PUT 'GET*REAL*CHARACTER 'PROCEDURE_TYPE
     '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE GET*REAL*CHARACTER (GROUP NR)
    (PROG () (RETURN (MK_CHARACTER (GET*REAL*IRREDUCIBLE*REP GROUP NR))))) 
(PUT 'GET*REAL*COMP*CHARTYPE*P 'NUMBER-OF-ARGS 2) 
(PUT 'GET*REAL*COMP*CHARTYPE*P 'DEFINED-ON-LINE '218) 
(PUT 'GET*REAL*COMP*CHARTYPE*P 'DEFINED-IN-FILE 'SYMMETRY/SYMHANDL.RED) 
(PUT 'GET*REAL*COMP*CHARTYPE*P 'PROCEDURE_TYPE
     '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE GET*REAL*COMP*CHARTYPE*P (GROUP NR)
    (PROG ()
      (COND ((EQCAR (GET GROUP (MKID 'REALREP NR)) 'COMPLEXTYPE) (RETURN T))))) 
(PUT 'GET*REAL*IRREDUCIBLE*REP 'NUMBER-OF-ARGS 2) 
(PUT 'GET*REAL*IRREDUCIBLE*REP 'DEFINED-ON-LINE '225) 
(PUT 'GET*REAL*IRREDUCIBLE*REP 'DEFINED-IN-FILE 'SYMMETRY/SYMHANDL.RED) 
(PUT 'GET*REAL*IRREDUCIBLE*REP 'PROCEDURE_TYPE
     '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE GET*REAL*IRREDUCIBLE*REP (GROUP NR)
    (PROG ()
      (RETURN
       (MK_RESIMP_REP
        (APPEND (LIST GROUP) (CDR (GET GROUP (MKID 'REALREP NR)))))))) 
(PUT 'GET*NR*COMPLEX*IRRED*REPS 'NUMBER-OF-ARGS 1) 
(PUT 'GET*NR*COMPLEX*IRRED*REPS 'DEFINED-ON-LINE '241) 
(PUT 'GET*NR*COMPLEX*IRRED*REPS 'DEFINED-IN-FILE 'SYMMETRY/SYMHANDL.RED) 
(PUT 'GET*NR*COMPLEX*IRRED*REPS 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE GET*NR*COMPLEX*IRRED*REPS (GROUP)
    (PROG () (RETURN (GET GROUP 'COMPLEXREPNUMBER)))) 
(PUT 'GET*COMPLEX*CHARACTER 'NUMBER-OF-ARGS 2) 
(PUT 'GET*COMPLEX*CHARACTER 'DEFINED-ON-LINE '247) 
(PUT 'GET*COMPLEX*CHARACTER 'DEFINED-IN-FILE 'SYMMETRY/SYMHANDL.RED) 
(PUT 'GET*COMPLEX*CHARACTER 'PROCEDURE_TYPE
     '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE GET*COMPLEX*CHARACTER (GROUP NR)
    (PROG () (RETURN (MK_CHARACTER (GET*COMPLEX*IRREDUCIBLE*REP GROUP NR))))) 
(PUT 'GET*COMPLEX*IRREDUCIBLE*REP 'NUMBER-OF-ARGS 2) 
(PUT 'GET*COMPLEX*IRREDUCIBLE*REP 'DEFINED-ON-LINE '253) 
(PUT 'GET*COMPLEX*IRREDUCIBLE*REP 'DEFINED-IN-FILE 'SYMMETRY/SYMHANDL.RED) 
(PUT 'GET*COMPLEX*IRREDUCIBLE*REP 'PROCEDURE_TYPE
     '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE GET*COMPLEX*IRREDUCIBLE*REP (GROUP NR)
    (PROG ()
      (RETURN
       (MK_RESIMP_REP
        (APPEND (LIST GROUP) (GET GROUP (MKID 'COMPLEXREP NR))))))) 
(PUT 'SET*GROUP 'NUMBER-OF-ARGS 2) 
(PUT 'SET*GROUP 'DEFINED-ON-LINE '266) 
(PUT 'SET*GROUP 'DEFINED-IN-FILE 'SYMMETRY/SYMHANDL.RED) 
(PUT 'SET*GROUP 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE SET*GROUP (GROUP EQUICLASSES)
    (PROG () (PUT GROUP 'EQUICLASSES EQUICLASSES))) 
(PUT 'SET*ELEMS*GROUP 'NUMBER-OF-ARGS 2) 
(PUT 'SET*ELEMS*GROUP 'DEFINED-ON-LINE '272) 
(PUT 'SET*ELEMS*GROUP 'DEFINED-IN-FILE 'SYMMETRY/SYMHANDL.RED) 
(PUT 'SET*ELEMS*GROUP 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE SET*ELEMS*GROUP (GROUP ELEMS) (PROG () (PUT GROUP 'ELEMS ELEMS))) 
(PUT 'SET*GENERATORS 'NUMBER-OF-ARGS 2) 
(PUT 'SET*GENERATORS 'DEFINED-ON-LINE '278) 
(PUT 'SET*GENERATORS 'DEFINED-IN-FILE 'SYMMETRY/SYMHANDL.RED) 
(PUT 'SET*GENERATORS 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE SET*GENERATORS (GROUP GENERATORS)
    (PROG () (PUT GROUP 'GENERATORS GENERATORS))) 
(PUT 'SET*RELATIONS 'NUMBER-OF-ARGS 2) 
(PUT 'SET*RELATIONS 'DEFINED-ON-LINE '284) 
(PUT 'SET*RELATIONS 'DEFINED-IN-FILE 'SYMMETRY/SYMHANDL.RED) 
(PUT 'SET*RELATIONS 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE SET*RELATIONS (GROUP RELATIONS) (PROG () (PUT GROUP 'RELATIONS RELATIONS))) 
(PUT 'SET*AVAILABLE 'NUMBER-OF-ARGS 1) 
(PUT 'SET*AVAILABLE 'DEFINED-ON-LINE '290) 
(PUT 'SET*AVAILABLE 'DEFINED-IN-FILE 'SYMMETRY/SYMHANDL.RED) 
(PUT 'SET*AVAILABLE 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE SET*AVAILABLE (GROUP)
    (PROG (GROUPLIST)
      (FLAG (LIST GROUP) 'AVAILABLE)
      (SETQ GROUPLIST (GET 'AVAILABLES 'GROUPS))
      (SETQ GROUPLIST (APPEND GROUPLIST (LIST GROUP)))
      (PUT 'AVAILABLES 'GROUPS GROUPLIST))) 
(PUT 'SET*STORING 'NUMBER-OF-ARGS 1) 
(PUT 'SET*STORING 'DEFINED-ON-LINE '299) 
(PUT 'SET*STORING 'DEFINED-IN-FILE 'SYMMETRY/SYMHANDL.RED) 
(PUT 'SET*STORING 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE SET*STORING (GROUP) (PROG () (FLAG (LIST GROUP) 'STORING))) 
(PUT 'SET*GROUPTABLE 'NUMBER-OF-ARGS 2) 
(PUT 'SET*GROUPTABLE 'DEFINED-ON-LINE '304) 
(PUT 'SET*GROUPTABLE 'DEFINED-IN-FILE 'SYMMETRY/SYMHANDL.RED) 
(PUT 'SET*GROUPTABLE 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE SET*GROUPTABLE (GROUP TABLE) (PROG () (PUT GROUP 'GROUPTABLE TABLE))) 
(PUT 'SET*INVERSE 'NUMBER-OF-ARGS 2) 
(PUT 'SET*INVERSE 'DEFINED-ON-LINE '310) 
(PUT 'SET*INVERSE 'DEFINED-IN-FILE 'SYMMETRY/SYMHANDL.RED) 
(PUT 'SET*INVERSE 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE SET*INVERSE (GROUP INVLIST) (PROG () (PUT GROUP 'INVERSE INVLIST))) 
(PUT 'SET*ELEMASGEN 'NUMBER-OF-ARGS 2) 
(PUT 'SET*ELEMASGEN 'DEFINED-ON-LINE '316) 
(PUT 'SET*ELEMASGEN 'DEFINED-IN-FILE 'SYMMETRY/SYMHANDL.RED) 
(PUT 'SET*ELEMASGEN 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE SET*ELEMASGEN (GROUP GLIST) (PROG () (PUT GROUP 'ELEM_IN_GENERATORS GLIST))) 
(PUT 'SET*REPRESENTATION 'NUMBER-OF-ARGS 3) 
(PUT 'SET*REPRESENTATION 'DEFINED-ON-LINE '322) 
(PUT 'SET*REPRESENTATION 'DEFINED-IN-FILE 'SYMMETRY/SYMHANDL.RED) 
(PUT 'SET*REPRESENTATION 'PROCEDURE_TYPE
     '(ARROW (TIMES GENERAL GENERAL GENERAL) GENERAL)) 
(DE SET*REPRESENTATION (GROUP REPLIST TYPE)
    (PROG (NR)
      (SETQ NR (GET GROUP (MKID TYPE 'REPNUMBER)))
      (COND ((NULL NR) (SETQ NR 0)))
      (SETQ NR (PLUS NR 1))
      (PUT GROUP (MKID (MKID TYPE 'REP) NR) REPLIST)
      (SET*REPNUMBER GROUP TYPE NR))) 
(PUT 'SET*REPNUMBER 'NUMBER-OF-ARGS 3) 
(PUT 'SET*REPNUMBER 'DEFINED-ON-LINE '333) 
(PUT 'SET*REPNUMBER 'DEFINED-IN-FILE 'SYMMETRY/SYMHANDL.RED) 
(PUT 'SET*REPNUMBER 'PROCEDURE_TYPE
     '(ARROW (TIMES GENERAL GENERAL GENERAL) GENERAL)) 
(DE SET*REPNUMBER (GROUP TYPE NR)
    (PROG () (PUT GROUP (MKID TYPE 'REPNUMBER) NR))) 
(PUT 'MK*INVERSE*LIST 'NUMBER-OF-ARGS 1) 
(PUT 'MK*INVERSE*LIST 'DEFINED-ON-LINE '345) 
(PUT 'MK*INVERSE*LIST 'DEFINED-IN-FILE 'SYMMETRY/SYMHANDL.RED) 
(PUT 'MK*INVERSE*LIST 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE MK*INVERSE*LIST (TABLE)
    (PROG (ELEMLIST INVLIST ELEM ROW COLUMN)
      (SETQ ELEMLIST (CDR (CAR (MK+TRANSPOSE+MATRIX TABLE))))
      (SETQ INVLIST
              (PROG (ELEM FORALL-RESULT FORALL-ENDPTR)
                (SETQ ELEM ELEMLIST)
                (COND ((NULL ELEM) (RETURN NIL)))
                (SETQ FORALL-RESULT
                        (SETQ FORALL-ENDPTR
                                (CONS
                                 ((LAMBDA (ELEM)
                                    (PROGN
                                     (SETQ ROW (GIVE*POSITION ELEM ELEMLIST))
                                     (SETQ COLUMN
                                             (GIVE*POSITION 'ID
                                              (CDR (NTH TABLE (PLUS ROW 1)))))
                                     (NTH (CDR (CAR TABLE)) COLUMN)))
                                  (CAR ELEM))
                                 NIL)))
               LOOPLABEL
                (SETQ ELEM (CDR ELEM))
                (COND ((NULL ELEM) (RETURN FORALL-RESULT)))
                (RPLACD FORALL-ENDPTR
                        (CONS
                         ((LAMBDA (ELEM)
                            (PROGN
                             (SETQ ROW (GIVE*POSITION ELEM ELEMLIST))
                             (SETQ COLUMN
                                     (GIVE*POSITION 'ID
                                      (CDR (NTH TABLE (PLUS ROW 1)))))
                             (NTH (CDR (CAR TABLE)) COLUMN)))
                          (CAR ELEM))
                         NIL))
                (SETQ FORALL-ENDPTR (CDR FORALL-ENDPTR))
                (GO LOOPLABEL)))
      (RETURN (LIST ELEMLIST INVLIST)))) 
(PUT 'MK*EQUICLASSES 'NUMBER-OF-ARGS 1) 
(PUT 'MK*EQUICLASSES 'DEFINED-ON-LINE '359) 
(PUT 'MK*EQUICLASSES 'DEFINED-IN-FILE 'SYMMETRY/SYMHANDL.RED) 
(PUT 'MK*EQUICLASSES 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE MK*EQUICLASSES (TABLE)
    (PROG (ELEMLIST RESTLIST S R TT TS ROWS ROWT COLUMNT COLUMNR EQUICLASSES
           EQUIC FIRSTROW)
      (SETQ ELEMLIST (CDR (CAR (MK+TRANSPOSE+MATRIX TABLE))))
      (SETQ RESTLIST ELEMLIST)
      (SETQ FIRSTROW (CDR (CAR TABLE)))
      (SETQ EQUICLASSES NIL)
      (PROG ()
       WHILELABEL
        (COND ((NOT (GREATERP (LENGTH RESTLIST) 0)) (RETURN NIL)))
        (PROGN
         (SETQ S (CAR RESTLIST))
         (SETQ ROWS (GIVE*POSITION S ELEMLIST))
         (SETQ EQUIC (LIST S))
         (SETQ RESTLIST (CDR RESTLIST))
         (PROG (TT)
           (SETQ TT ELEMLIST)
          LAB
           (COND ((NULL TT) (RETURN NIL)))
           ((LAMBDA (TT)
              (PROGN
               (SETQ COLUMNT (GIVE*POSITION TT FIRSTROW))
               (SETQ ROWT (GIVE*POSITION TT ELEMLIST))
               (SETQ TS (GET+MAT+ENTRY TABLE (PLUS ROWS 1) (PLUS COLUMNT 1)))
               (SETQ COLUMNR
                       (GIVE*POSITION TS (CDR (NTH TABLE (PLUS ROWT 1)))))
               (SETQ R (NTH FIRSTROW COLUMNR))
               (SETQ EQUIC (UNION EQUIC (LIST R)))
               (SETQ RESTLIST (DELETE R RESTLIST))
               NIL))
            (CAR TT))
           (SETQ TT (CDR TT))
           (GO LAB))
         (SETQ EQUICLASSES (APPEND EQUICLASSES (LIST EQUIC)))
         NIL)
        (GO WHILELABEL))
      (RETURN EQUICLASSES))) 
(ENDMODULE) 