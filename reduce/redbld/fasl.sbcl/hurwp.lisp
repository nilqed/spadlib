(cl:declaim (cl:optimize cl:debug cl:safety))
(cl:declaim (sb-ext:muffle-conditions sb-ext:compiler-note cl:style-warning))
(MODULE (LIST 'HURWP)) 
(GLOBAL '(OFL* MLIST*)) 
(FLUID '(*EXP *GCD)) 
(FLAG '(TCON) 'MATFLG) 
(PUT 'TCON 'MSIMPFN 'TCON) 
(PUT 'TCON 'RTYPEFN 'GETRTYPECAR) 
(PUT 'TCON 'NUMBER-OF-ARGS 1) 
(PUT 'TCON 'DEFINED-ON-LINE '39) 
(PUT 'TCON 'DEFINED-IN-FILE 'FIDE/HURWP.RED) 
(PUT 'TCON 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE TCON (U)
    (PROG (V B)
      (SETQ V (MATSM (LIST 'TP U)))
      (PROG (A)
        (SETQ A V)
       LAB
        (COND ((NULL A) (RETURN NIL)))
        ((LAMBDA (A)
           (PROGN
            (SETQ B A)
            (PROG ()
             WHILELABEL
              (COND ((NOT B) (RETURN NIL)))
              (PROGN
               (RPLACA B
                       (MULTSQ (SUBF (CAR (CAR B)) '((I MINUS I)))
                               (INVSQ (CONS (CDR (CAR B)) 1))))
               (SETQ B (CDR B)))
              (GO WHILELABEL))))
         (CAR A))
        (SETQ A (CDR A))
        (GO LAB))
      (RETURN V))) 
(AEVAL (NULL (SETQ *MODE 'ALGEBRAIC))) 
(KORDER (LIST 'LAM)) 
(NULL (SETQ *MODE 'SYMBOLIC)) 
(GLOBAL '(POSITIVE* USERPOS* USERNEG* *PFACTOR)) 
(SETQ *PFACTOR NIL) 
(PUT 'POSITIVEP 'NUMBER-OF-ARGS 1) 
(PUT 'POSITIVEP 'DEFINED-ON-LINE '61) 
(PUT 'POSITIVEP 'DEFINED-IN-FILE 'FIDE/HURWP.RED) 
(PUT 'POSITIVEP 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE POSITIVEP (U)
    (COND ((NUMBERP U) (COND ((GREATERP U 0) T) (T NIL)))
          ((AND (EQCAR U '*SQ) (FIXP (CAADR U)) (FIXP (CDADR U)))
           (COND ((GREATERP (TIMES (CAADR U) (CDADR U)) 0) T) (T NIL)))
          (T
           (PROG (X EXP)
             (SETQ EXP *EXP)
             (COND
              ((AND *PFACTOR (MEMBER 'FACTOR MLIST*))
               (PROGN
                (SETQ *EXP NIL)
                (SETQ U (REVAL1 (LIST 'PPFACTOR U) NIL)))))
             (SETQ U (PREPSQ* (SIMP U)))
             (SETQ *EXP EXP)
             (SETQ X
                     (COND
                      ((AND (TERMINALP) (NULL OFL*))
                       (PROG (Y Z)
                         (PRIN2* "Is it true, that  ")
                         (MAPRIN U)
                         (PRIN2* "  >  0    ?")
                        A
                         (PRIN2* "  Reply (Y/N/?)")
                         (TERPRI* T)
                         (SETQ Y (READ))
                         (COND
                          ((EQ Y 'Y)
                           (PROGN
                            (SETQ Z T)
                            (SETQ USERPOS* (CONS U USERPOS*))))
                          ((EQ Y 'N)
                           (PROGN
                            (SETQ Z NIL)
                            (SETQ USERNEG* (CONS U USERNEG*))))
                          ((EQ Y '?) (SETQ Z 'COND)) (T (GO A)))
                         (RETURN Z)))
                      (T 'COND)))
             (COND
              ((EQ X 'COND)
               (COND ((NULL POSITIVE*) (SETQ POSITIVE* (LIST (CONS 1 U))))
                     (T
                      (SETQ POSITIVE*
                              (CONS (CONS (PLUS (CAAR POSITIVE*) 1) U)
                                    POSITIVE*))))))
             (RETURN X))))) 
(GLOBAL '(HCONDS*)) 
(AEVAL (NULL (SETQ *MODE 'ALGEBRAIC))) 
(ARRAYFN 'ALGEBRAIC (LIST (LIST 'COF 20) (LIST 'FCOF 20))) 
(SHARE (LIST 'HCONDS*)) 
(PUT 'PPFACTOR 'NUMBER-OF-ARGS 1) 
(FLAG '(PPFACTOR) 'OPFN) 
(PUT 'PPFACTOR 'DEFINED-ON-LINE '112) 
(PUT 'PPFACTOR 'DEFINED-IN-FILE 'FIDE/HURWP.RED) 
(PUT 'PPFACTOR 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE PPFACTOR (X)
    (PROG (D N DE)
      (SETQ D (AEVAL (LIST 'OLD_FACTORIZE (LIST 'NUM X))))
      (SETQ N
              (PROG (A FORALL-RESULT)
                (SETQ A (GETRLIST (AEVAL D)))
                (SETQ FORALL-RESULT 1)
               LAB1
                (COND ((NULL A) (RETURN FORALL-RESULT)))
                (SETQ FORALL-RESULT
                        (AEVAL*
                         (LIST 'TIMES ((LAMBDA (A) (AEVAL A)) (CAR A))
                               FORALL-RESULT)))
                (SETQ A (CDR A))
                (GO LAB1)))
      (COND ((EVALEQUAL (AEVAL (LIST 'DEN X)) 1) (RETURN (AEVAL N))))
      (SETQ D (AEVAL (LIST 'OLD_FACTORIZE (LIST 'DEN X))))
      (SETQ DE
              (PROG (A FORALL-RESULT)
                (SETQ A (GETRLIST (AEVAL D)))
                (SETQ FORALL-RESULT 1)
               LAB1
                (COND ((NULL A) (RETURN FORALL-RESULT)))
                (SETQ FORALL-RESULT
                        (AEVAL*
                         (LIST 'TIMES ((LAMBDA (A) (AEVAL A)) (CAR A))
                               FORALL-RESULT)))
                (SETQ A (CDR A))
                (GO LAB1)))
      (RETURN (AEVAL (LIST 'QUOTIENT N DE))))) 
(PUT 'HURWITZP 'NUMBER-OF-ARGS 1) 
(FLAG '(HURWITZP) 'OPFN) 
(PUT 'HURWITZP 'DEFINED-ON-LINE '123) 
(PUT 'HURWITZP 'DEFINED-IN-FILE 'FIDE/HURWP.RED) 
(PUT 'HURWITZP 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE HURWITZP (U)
    (COND ((EVALEQUAL (AEVAL (LIST 'IM U)) 0) (AEVAL (LIST 'REHURWP U)))
          (T (AEVAL (LIST 'COHURWP U))))) 
(NULL (SETQ *MODE 'SYMBOLIC)) 
(PUT 'COEF1 'NUMBER-OF-ARGS 3) 
(PUT 'COEF1 'DEFINED-ON-LINE '135) 
(PUT 'COEF1 'DEFINED-IN-FILE 'FIDE/HURWP.RED) 
(PUT 'COEF1 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL GENERAL) GENERAL)) 
(DE COEF1 (U V A)
    (PROG (LCO L)
      (SETQ LCO (REVAL1 (LIST 'COEFF U V) NIL))
      (SETQ LCO (CDR LCO))
      (SETQ L (DIFFERENCE (LENGTH LCO) 1))
      (PROG (I)
        (SETQ I 0)
       LAB
        (COND ((MINUSP (DIFFERENCE L I)) (RETURN NIL)))
        (PROGN (SETEL (LIST A I) (CAR LCO)) (SETQ LCO (CDR LCO)))
        (SETQ I (PLUS2 I 1))
        (GO LAB))
      (RETURN L))) 
(PUT 'REHURWP 'NUMBER-OF-ARGS 1) 
(PUT 'REHURWP 'DEFINED-ON-LINE '147) 
(PUT 'REHURWP 'DEFINED-IN-FILE 'FIDE/HURWP.RED) 
(PUT 'REHURWP 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE REHURWP (U)
    (PROG (DEG HURP GCD)
      (SETQ GCD *GCD)
      (SETQ *GCD T)
      (SETQ DEG (COEF1 (CAR U) 'LAM 'COF))
      (COND ((EQUAL DEG 0) (RETURN (TYPERR U "Polynomial in LAM"))))
      (SETQ POSITIVE* (SETQ USERPOS* (SETQ USERNEG* NIL)))
      (COND
       ((LEQ DEG 2)
        (PROGN
         (PROG (I)
           (SETQ I 0)
          LAB
           (COND ((MINUSP (DIFFERENCE DEG I)) (RETURN NIL)))
           (SETEL (LIST 'COF I)
                  (REVAL1
                   (LIST 'QUOTIENT (GETEL (LIST 'COF I))
                         (GETEL (LIST 'COF DEG)))
                   NIL))
           (SETQ I (PLUS2 I 1))
           (GO LAB))
         (COND ((EQUAL DEG 1) (SETQ HURP (POSITIVEP (GETEL (LIST 'COF 0)))))
               ((EQUAL DEG 2)
                (SETQ HURP
                        (COND
                         ((AND (POSITIVEP (GETEL (LIST 'COF 0)))
                               (POSITIVEP (GETEL (LIST 'COF 1))))
                          (COND (POSITIVE* 'COND) (T T)))
                         (POSITIVE* 'COND) (T NIL)))))
         (PRINTCOND NIL)))
       (T (SETQ HURP (REHURWP1 DEG))))
      (SETQ *GCD GCD)
      (RETURN (RETHURP HURP)))) 
(PUT 'RETHURP 'NUMBER-OF-ARGS 1) 
(PUT 'RETHURP 'DEFINED-ON-LINE '174) 
(PUT 'RETHURP 'DEFINED-IN-FILE 'FIDE/HURWP.RED) 
(PUT 'RETHURP 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE RETHURP (HURP)
    (PROGN
     (SETQ HCONDS*
             (PROGN
              (SETQ ALGLIST* (CONS NIL NIL))
              (CONS 'LIST
                    (COND
                     (POSITIVE*
                      (PROG (A FORALL-RESULT FORALL-ENDPTR)
                        (SETQ A POSITIVE*)
                        (COND ((NULL A) (RETURN NIL)))
                        (SETQ FORALL-RESULT
                                (SETQ FORALL-ENDPTR
                                        (CONS ((LAMBDA (A) (CDR A)) (CAR A))
                                              NIL)))
                       LOOPLABEL
                        (SETQ A (CDR A))
                        (COND ((NULL A) (RETURN FORALL-RESULT)))
                        (RPLACD FORALL-ENDPTR
                                (CONS ((LAMBDA (A) (CDR A)) (CAR A)) NIL))
                        (SETQ FORALL-ENDPTR (CDR FORALL-ENDPTR))
                        (GO LOOPLABEL)))
                     (T NIL)))))
     (CONS
      (LIST
       (CONS
        (CONS (COND ((NULL HURP) 'NO) ((NULL POSITIVE*) 'YES) (T 'COND)) 1) 1))
      1))) 
(PUT 'REHURWP 'SIMPFN 'REHURWP) 
(PUT 'COHURWP 'NUMBER-OF-ARGS 1) 
(PUT 'COHURWP 'DEFINED-ON-LINE '184) 
(PUT 'COHURWP 'DEFINED-IN-FILE 'FIDE/HURWP.RED) 
(PUT 'COHURWP 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE COHURWP (U)
    (PROG (DEG)
      (SETQ U (REVAL1 (LIST 'SUB '(EQUAL LAM (TIMES I LAM)) (CAR U)) T))
      (SETQ DEG (COEF1 U 'LAM 'COF))
      (COND ((EQUAL DEG 0) (RETURN (TYPERR U "Polynomial in LAM"))))
      (SETQ POSITIVE* (SETQ USERPOS* (SETQ USERNEG* NIL)))
      (COND
       ((EQUAL (REVAL1 (LIST 'IM (GETEL (LIST 'COF DEG))) NIL) 0)
        (PROG (J)
          (SETQ J 0)
         LAB
          (COND ((MINUSP (DIFFERENCE DEG J)) (RETURN NIL)))
          (SETEL (LIST 'COF J)
                 (REVAL1 (LIST 'TIMES 'I (GETEL (LIST 'COF J))) NIL))
          (SETQ J (PLUS2 J 1))
          (GO LAB))))
      (RETURN (RETHURP (COHURWP1 DEG))))) 
(PUT 'COHURWP 'SIMPFN 'COHURWP) 
(PUT 'REHURWP1 'NUMBER-OF-ARGS 1) 
(PUT 'REHURWP1 'DEFINED-ON-LINE '199) 
(PUT 'REHURWP1 'DEFINED-IN-FILE 'FIDE/HURWP.RED) 
(PUT 'REHURWP1 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE REHURWP1 (DEG)
    (PROG (I BAI BDI X LICH SUD BSUD MATR HMAT CSUD CLICH DSUD DLICH)
     A
      (SETQ I DEG)
      (SETQ CSUD (SETQ CLICH NIL))
      (SETQ BSUD T)
     B
      (SETQ X (POSITIVEP (GETEL (LIST 'COF I))))
      (COND ((NULL X) (GO C)) ((EQ X T) (SETQ BAI T))
            ((EQ X 'COND)
             (COND
              ((OR (EQUAL I DEG) (EQUAL I 0))
               (PROGN
                (SETQ CSUD (CONS (CAAR POSITIVE*) CSUD))
                (SETQ CLICH (CONS (CAAR POSITIVE*) CLICH))))
              (BSUD (SETQ CSUD (CONS (CAAR POSITIVE*) CSUD)))
              (T (SETQ CLICH (CONS (CAAR POSITIVE*) CLICH))))))
      (SETQ I (DIFFERENCE I 1))
      (SETQ BSUD (NOT BSUD))
      (COND ((GEQ I 0) (GO B)))
      (GO D)
     C
      (COND ((OR BAI BDI) (GO N)) (T (SETQ BAI T)))
      (PROG (I)
        (SETQ I 0)
       LAB
        (COND ((MINUSP (DIFFERENCE DEG I)) (RETURN NIL)))
        (SETEL (LIST 'COF I) (REVAL1 (LIST 'MINUS (GETEL (LIST 'COF I))) NIL))
        (SETQ I (PLUS2 I 1))
        (GO LAB))
      (GO A)
     D
      (SETQ BSUD T)
      (PROG (I)
        (SETQ I DEG)
       LAB
        (COND ((MINUSP (TIMES (MINUS 1) (DIFFERENCE 0 I))) (RETURN NIL)))
        (PROGN
         (SETQ X (SIMP (GETEL (LIST 'COF I))))
         (COND (BSUD (SETQ SUD (CONS X SUD))) (T (SETQ LICH (CONS X LICH))))
         (SETQ BSUD (NOT BSUD)))
        (SETQ I (PLUS2 I (MINUS 1)))
        (GO LAB))
      (SETQ SUD (REVERSE SUD))
      (SETQ LICH (REVERSE LICH))
      (SETQ SUD (FILZERO SUD DEG))
      (SETQ LICH (FILZERO LICH DEG))
      (SETQ DSUD (SETQ DLICH NIL))
      (SETQ MATR NIL)
      (SETQ I 1)
      (SETQ BSUD NIL)
     D1
      (SETQ MATR (NCONC MATR (LIST LICH)))
      (SETQ LICH (CONS (CONS NIL 1) LICH))
     D2
      (SETQ HMAT (CUTMAT MATR I))
      (SETQ X (MK*SQ (DETQ HMAT)))
      (SETQ X (POSITIVEP X))
      (COND ((NULL X) (COND (BSUD (GO N)) (T (GO C))))
            ((AND (EQ X T) (NOT BSUD)) (SETQ BDI T))
            ((EQ X 'COND)
             (COND (BSUD (SETQ DSUD (CONS (CAAR POSITIVE*) DSUD)))
                   (T (SETQ DLICH (CONS (CAAR POSITIVE*) DLICH))))))
      (SETQ I (PLUS I 1))
      (SETQ BSUD (NOT BSUD))
      (COND ((GREATERP I DEG) (GO K)))
      (COND ((NOT BSUD) (GO D1)))
      (SETQ MATR (NCONC MATR (LIST SUD)))
      (SETQ SUD (CONS (CONS NIL 1) SUD))
      (GO D2)
     N
      (RETURN NIL)
     K
      (COND
       ((OR (NULL POSITIVE*)
            (AND (OR (NULL CSUD) (NULL CLICH)) (OR (NULL DSUD) (NULL DLICH))))
        (RETURN (PROGN (PRINTUSER) T))))
      (PRIN2T "If we denote:")
      (PRINTCOND T)
      (PRINTDEF 'C1 (SETQ CLICH (REVERSE CLICH)))
      (PRINTDEF 'C2 (SETQ CSUD (REVERSE CSUD)))
      (PRINTDEF 'D1 (SETQ DLICH (REVERSE DLICH)))
      (PRINTDEF 'D2 (SETQ DSUD (REVERSE DSUD)))
      (PRIN2T "Necessary and sufficient conditions are:")
      (PRIN2T
       (COND ((OR (NULL CSUD) (NULL CLICH)) "  (D1)  OR  (D2)")
             ((OR (NULL DSUD) (NULL DLICH)) "  (C1)  OR  (C2)")
             (T "  (  (C1)  OR  (C2)  )  AND  (  (D1)  OR  (D2)  )")))
      (PRINTUSER)
      (RETURN 'COND))) 
(PUT 'PRINTCOND 'NUMBER-OF-ARGS 1) 
(PUT 'PRINTCOND 'DEFINED-ON-LINE '277) 
(PUT 'PRINTCOND 'DEFINED-IN-FILE 'FIDE/HURWP.RED) 
(PUT 'PRINTCOND 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE PRINTCOND (X)
    (PROGN
     (COND ((NOT X) (PRIN2T "Necessary and sufficient conditions are:")))
     (SETQ POSITIVE* (REVERSE POSITIVE*))
     (PROG (A)
       (SETQ A POSITIVE*)
      LAB
       (COND ((NULL A) (RETURN NIL)))
       ((LAMBDA (A)
          (PROGN
           (COND (X (PROGN (PRIN2* " (") (PRIN2* (CAR A)) (PRIN2* ")  "))))
           (MAPRIN (CDR A))
           (PRIN2* "  >  0")
           (TERPRI* T)))
        (CAR A))
       (SETQ A (CDR A))
       (GO LAB))
     (COND ((NOT X) (PRINTUSER))))) 
(PUT 'PRINTUSER 'NUMBER-OF-ARGS 0) 
(PUT 'PRINTUSER 'DEFINED-ON-LINE '290) 
(PUT 'PRINTUSER 'DEFINED-IN-FILE 'FIDE/HURWP.RED) 
(PUT 'PRINTUSER 'PROCEDURE_TYPE '(ARROW UNIT GENERAL)) 
(DE PRINTUSER NIL
    (COND
     ((OR USERPOS* USERNEG*)
      (PROGN
       (PRIN2T "You have explicitly stated:")
       (PROG (A)
         (SETQ A USERPOS*)
        LAB
         (COND ((NULL A) (RETURN NIL)))
         ((LAMBDA (A) (PROGN (MAPRIN A) (PRIN2* "  >  0") (TERPRI* T)))
          (CAR A))
         (SETQ A (CDR A))
         (GO LAB))
       (PROG (A)
         (SETQ A USERNEG*)
        LAB
         (COND ((NULL A) (RETURN NIL)))
         ((LAMBDA (A) (PROGN (MAPRIN A) (PRIN2* "  <=  0") (TERPRI* T)))
          (CAR A))
         (SETQ A (CDR A))
         (GO LAB)))))) 
(PUT 'PRINTDEF 'NUMBER-OF-ARGS 2) 
(PUT 'PRINTDEF 'DEFINED-ON-LINE '300) 
(PUT 'PRINTDEF 'DEFINED-IN-FILE 'FIDE/HURWP.RED) 
(PUT 'PRINTDEF 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE PRINTDEF (X Y)
    (COND
     (Y
      (PROGN
       (PRIN2* " (")
       (PRIN2* X)
       (PRIN2* ")   (")
       (PRIN2* (CAR Y))
       (PRIN2* ")")
       (COND
        ((CDR Y)
         (PROG (A)
           (SETQ A (CDR Y))
          LAB
           (COND ((NULL A) (RETURN NIL)))
           ((LAMBDA (A) (PROGN (PRIN2* " AND (") (PRIN2* A) (PRIN2* ")")))
            (CAR A))
           (SETQ A (CDR A))
           (GO LAB))))
       (TERPRI* T))))) 
(PUT 'FILZERO 'NUMBER-OF-ARGS 2) 
(PUT 'FILZERO 'DEFINED-ON-LINE '313) 
(PUT 'FILZERO 'DEFINED-IN-FILE 'FIDE/HURWP.RED) 
(PUT 'FILZERO 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE FILZERO (X N)
    (PROG (Y I)
      (SETQ Y X)
      (SETQ I 1)
      (COND ((NULL X) (RETURN (TYPERR X "Empty list"))))
      (PROG ()
       WHILELABEL
        (COND ((NOT (CDR Y)) (RETURN NIL)))
        (PROGN (SETQ Y (CDR Y)) (SETQ I (PLUS I 1)))
        (GO WHILELABEL))
      (PROG ()
       WHILELABEL
        (COND ((NOT (LESSP I N)) (RETURN NIL)))
        (PROGN
         (RPLACD Y (LIST (CONS NIL 1)))
         (SETQ Y (CDR Y))
         (SETQ I (PLUS I 1)))
        (GO WHILELABEL))
      (RETURN X))) 
(PUT 'CUTMAT 'NUMBER-OF-ARGS 2) 
(PUT 'CUTMAT 'DEFINED-ON-LINE '330) 
(PUT 'CUTMAT 'DEFINED-IN-FILE 'FIDE/HURWP.RED) 
(PUT 'CUTMAT 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE CUTMAT (X N)
    (PROG (A FORALL-RESULT FORALL-ENDPTR)
      (SETQ A X)
      (COND ((NULL A) (RETURN NIL)))
      (SETQ FORALL-RESULT
              (SETQ FORALL-ENDPTR
                      (CONS ((LAMBDA (A) (CUTROW A N)) (CAR A)) NIL)))
     LOOPLABEL
      (SETQ A (CDR A))
      (COND ((NULL A) (RETURN FORALL-RESULT)))
      (RPLACD FORALL-ENDPTR (CONS ((LAMBDA (A) (CUTROW A N)) (CAR A)) NIL))
      (SETQ FORALL-ENDPTR (CDR FORALL-ENDPTR))
      (GO LOOPLABEL))) 
(PUT 'CUTROW 'NUMBER-OF-ARGS 2) 
(PUT 'CUTROW 'DEFINED-ON-LINE '335) 
(PUT 'CUTROW 'DEFINED-IN-FILE 'FIDE/HURWP.RED) 
(PUT 'CUTROW 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE CUTROW (Y N)
    (PROG (I Z ZZ)
      (SETQ I 1)
      (SETQ Z (LIST (CAR Y)))
      (SETQ ZZ Z)
      (SETQ Y (CDR Y))
      (PROG ()
       WHILELABEL
        (COND ((NOT (LESSP I N)) (RETURN NIL)))
        (PROGN
         (RPLACD ZZ (LIST (CAR Y)))
         (SETQ Y (CDR Y))
         (SETQ ZZ (CDR ZZ))
         (SETQ I (PLUS I 1)))
        (GO WHILELABEL))
      (RETURN Z))) 
(PUT 'COHURWP1 'NUMBER-OF-ARGS 1) 
(PUT 'COHURWP1 'DEFINED-ON-LINE '350) 
(PUT 'COHURWP1 'DEFINED-IN-FILE 'FIDE/HURWP.RED) 
(PUT 'COHURWP1 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE COHURWP1 (DEG)
    (PROG (K X Y AK BK AKK BKK MATR HMAT)
      (PROG (J)
        (SETQ J 0)
       LAB
        (COND ((MINUSP (DIFFERENCE DEG J)) (RETURN NIL)))
        (PROGN
         (SETQ X (GETEL (LIST 'COF J)))
         (SETQ Y (SIMP (LIST 'RE X)))
         (SETQ X
                 (RESIMP
                  (SIMP (LIST 'QUOTIENT (LIST 'DIFFERENCE X (MK*SQ Y)) 'I))))
         (SETQ AK (CONS X AK))
         (SETQ BK (CONS Y BK)))
        (SETQ J (PLUS2 J 1))
        (GO LAB))
      (SETQ POSITIVE* (SETQ USERPOS* (SETQ USERNEG* NIL)))
      (SETQ AKK (FILZERO AK (TIMES 2 DEG)))
      (SETQ BKK (FILZERO BK (TIMES 2 DEG)))
      (SETQ K 2)
     D1
      (SETQ MATR (NCONC MATR (LIST AKK)))
      (SETQ MATR (NCONC MATR (LIST BKK)))
      (SETQ AKK (CONS (CONS NIL 1) AKK))
      (SETQ BKK (CONS (CONS NIL 1) BKK))
      (SETQ HMAT (CUTMAT MATR K))
      (SETQ X (MK*SQ (DETQ HMAT)))
      (SETQ X (POSITIVEP X))
      (COND ((NULL X) (GO N)))
      (COND ((EQUAL K (TIMES 2 DEG)) (GO KO)))
      (SETQ K (PLUS K 2))
      (GO D1)
     N
      (RETURN NIL)
     KO
      (PRINTCOND NIL)
      (RETURN T))) 
(ENDMODULE) 