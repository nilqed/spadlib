(cl:declaim (cl:optimize cl:debug cl:safety))
(cl:declaim (sb-ext:muffle-conditions sb-ext:compiler-note cl:style-warning))
(MODULE (LIST 'GENERAL)) 
(GLOBAL '(!ARBINT)) 
(SETQ !ARBINT 0) 
(PUT 'ATOMLIS 'NUMBER-OF-ARGS 1) 
(PUT 'ATOMLIS 'DEFINED-ON-LINE '35) 
(PUT 'ATOMLIS 'DEFINED-IN-FILE 'RTOOLS/GENERAL.RED) 
(PUT 'ATOMLIS 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE ATOMLIS (U) (OR (NULL U) (AND (ATOM (CAR U)) (ATOMLIS (CDR U))))) 
(FLAG '(EQ EQUAL) 'EQUALOPR) 
(PUT 'MAKEARBCOMPLEX 'NUMBER-OF-ARGS 0) 
(PUT 'MAKEARBCOMPLEX 'DEFINED-ON-LINE '40) 
(PUT 'MAKEARBCOMPLEX 'DEFINED-IN-FILE 'RTOOLS/GENERAL.RED) 
(PUT 'MAKEARBCOMPLEX 'PROCEDURE_TYPE '(ARROW UNIT GENERAL)) 
(DE MAKEARBCOMPLEX NIL
    (PROG (ANS)
      (SETQ !ARBINT (PLUS !ARBINT 1))
      (SETQ ANS (CAR (SIMP* (LIST 'ARBCOMPLEX !ARBINT))))
      (RETURN ANS))) 
(PUT 'PERMP 'NUMBER-OF-ARGS 2) 
(PUT 'PERMP 'DEFINED-ON-LINE '56) 
(PUT 'PERMP 'DEFINED-IN-FILE 'RTOOLS/GENERAL.RED) 
(PUT 'PERMP 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE PERMP (U V)
    (COND ((NULL U) T) ((EQUAL (CAR U) (CAR V)) (PERMP (CDR U) (CDR V)))
          (T (NOT (PERMP (CDR U) (SUBST (CAR V) (CAR U) (CDR V))))))) 
(PUT 'PERMUTATIONS 'NUMBER-OF-ARGS 1) 
(PUT 'PERMUTATIONS 'DEFINED-ON-LINE '62) 
(PUT 'PERMUTATIONS 'DEFINED-IN-FILE 'RTOOLS/GENERAL.RED) 
(PUT 'PERMUTATIONS 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE PERMUTATIONS (U)
    (COND ((NULL U) (LIST U))
          (T
           (PROG (J FORALL-RESULT FORALL-ENDPTR)
             (SETQ J U)
            STARTOVER
             (COND ((NULL J) (RETURN NIL)))
             (SETQ FORALL-RESULT
                     ((LAMBDA (J) (MAPCONS (PERMUTATIONS (DELETE J U)) J))
                      (CAR J)))
             (SETQ FORALL-ENDPTR (LASTPAIR FORALL-RESULT))
             (SETQ J (CDR J))
             (COND ((ATOM FORALL-ENDPTR) (GO STARTOVER)))
            LOOPLABEL
             (COND ((NULL J) (RETURN FORALL-RESULT)))
             (RPLACD FORALL-ENDPTR
                     ((LAMBDA (J) (MAPCONS (PERMUTATIONS (DELETE J U)) J))
                      (CAR J)))
             (SETQ FORALL-ENDPTR (LASTPAIR FORALL-ENDPTR))
             (SETQ J (CDR J))
             (GO LOOPLABEL))))) 
(DE POSINTEGERP (U) (AND (FIXP U) (GREATERP U 0))) 
(PUT 'POSINTEGERP 'NUMBER-OF-ARGS 1) 
(PUT 'POSINTEGERP 'DEFINED-ON-LINE '67) 
(PUT 'POSINTEGERP 'DEFINED-IN-FILE 'RTOOLS/GENERAL.RED) 
(PUT 'POSINTEGERP 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(PUTC 'POSINTEGERP 'INLINE '(LAMBDA (U) (AND (FIXP U) (GREATERP U 0)))) 
(PUT 'REMOVE 'NUMBER-OF-ARGS 2) 
(PUT 'REMOVE 'DEFINED-ON-LINE '71) 
(PUT 'REMOVE 'DEFINED-IN-FILE 'RTOOLS/GENERAL.RED) 
(PUT 'REMOVE 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE REMOVE (X N)
    (COND ((NULL X) NIL) ((EQUAL N 1) (CDR X))
          (T (CONS (CAR X) (REMOVE (CDR X) (DIFFERENCE N 1)))))) 
(PUT 'REPASC 'NUMBER-OF-ARGS 3) 
(PUT 'REPASC 'DEFINED-ON-LINE '77) 
(PUT 'REPASC 'DEFINED-IN-FILE 'RTOOLS/GENERAL.RED) 
(PUT 'REPASC 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL GENERAL) GENERAL)) 
(DE REPASC (U V W)
    (COND ((NULL W) (RERROR 'ALG 7 (LIST "key" U "not found")))
          ((EQUAL U (CAAR W)) (CONS (CONS U V) (CDR W)))
          (T (CONS (CAR W) (REPASC U V (CDR W)))))) 
(PUT 'REPASCQ 'NUMBER-OF-ARGS 3) 
(PUT 'REPASCQ 'DEFINED-ON-LINE '83) 
(PUT 'REPASCQ 'DEFINED-IN-FILE 'RTOOLS/GENERAL.RED) 
(PUT 'REPASCQ 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL GENERAL) GENERAL)) 
(DE REPASCQ (U V W)
    (COND ((NULL W) (RERROR 'ALG 7 (LIST "key" U "not found")))
          ((EQ U (CAAR W)) (CONS (CONS U V) (CDR W)))
          (T (CONS (CAR W) (REPASCQ U V (CDR W)))))) 
(PUT 'SPACES 'NUMBER-OF-ARGS 1) 
(PUT 'SPACES 'DEFINED-ON-LINE '89) 
(PUT 'SPACES 'DEFINED-IN-FILE 'RTOOLS/GENERAL.RED) 
(PUT 'SPACES 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE SPACES (N)
    (PROG (I)
      (SETQ I 1)
     LAB
      (COND ((MINUSP (DIFFERENCE N I)) (RETURN NIL)))
      (PRIN2 " ")
      (SETQ I (PLUS2 I 1))
      (GO LAB))) 
(PUT 'XNP 'NUMBER-OF-ARGS 2) 
(PUT 'XNP 'DEFINED-ON-LINE '98) 
(PUT 'XNP 'DEFINED-IN-FILE 'RTOOLS/GENERAL.RED) 
(PUT 'XNP 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE XNP (U V) (AND U (OR (MEMQ (CAR U) V) (XNP (CDR U) V)))) 
(FLUID '(INTS-AS-SYMBOLS*)) 
(SETQ INTS-AS-SYMBOLS* (MKVECT 15)) 
(PROG (I)
  (SETQ I 0)
 LAB
  (COND ((MINUSP (DIFFERENCE 15 I)) (RETURN NIL)))
  (PUTV INTS-AS-SYMBOLS* I (INTERN (COMPRESS (CONS '! (EXPLODE I)))))
  (SETQ I (PLUS2 I 1))
  (GO LAB)) 
(DE *NUM2ID (U)
    (COND ((AND (LEQ U 15) (GEQ U 0)) (GETV INTS-AS-SYMBOLS* U))
          (T (INTERN (LIST2STRING (EXPLODE U)))))) 
(PUT '*NUM2ID 'NUMBER-OF-ARGS 1) 
(PUT '*NUM2ID 'DEFINED-ON-LINE '111) 
(PUT '*NUM2ID 'DEFINED-IN-FILE 'RTOOLS/GENERAL.RED) 
(PUT '*NUM2ID 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(PUTC '*NUM2ID 'INLINE
      '(LAMBDA (U)
         (COND ((AND (LEQ U 15) (GEQ U 0)) (GETV INTS-AS-SYMBOLS* U))
               (T (INTERN (LIST2STRING (EXPLODE U))))))) 
(PUT 'ALISTP 'NUMBER-OF-ARGS 1) 
(PUT 'ALISTP 'DEFINED-ON-LINE '115) 
(PUT 'ALISTP 'DEFINED-IN-FILE 'RTOOLS/GENERAL.RED) 
(PUT 'ALISTP 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE ALISTP (L) (OR (NULL L) (AND (PAIRP L) (PAIRP (CAR L)) (ALISTP (CDR L))))) 
(DE GREATERPCAR (U V) (GREATERP (CAR U) (CAR V))) 
(PUT 'GREATERPCAR 'NUMBER-OF-ARGS 2) 
(PUT 'GREATERPCAR 'DEFINED-ON-LINE '118) 
(PUT 'GREATERPCAR 'DEFINED-IN-FILE 'RTOOLS/GENERAL.RED) 
(PUT 'GREATERPCAR 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(PUTC 'GREATERPCAR 'INLINE '(LAMBDA (U V) (GREATERP (CAR U) (CAR V)))) 
(DE LESSPCAR (U V) (LESSP (CAR U) (CAR V))) 
(PUT 'LESSPCAR 'NUMBER-OF-ARGS 2) 
(PUT 'LESSPCAR 'DEFINED-ON-LINE '121) 
(PUT 'LESSPCAR 'DEFINED-IN-FILE 'RTOOLS/GENERAL.RED) 
(PUT 'LESSPCAR 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(PUTC 'LESSPCAR 'INLINE '(LAMBDA (U V) (LESSP (CAR U) (CAR V)))) 
(DE GREATERPCDR (A B) (GREATERP (CDR A) (CDR B))) 
(PUT 'GREATERPCDR 'NUMBER-OF-ARGS 2) 
(PUT 'GREATERPCDR 'DEFINED-ON-LINE '124) 
(PUT 'GREATERPCDR 'DEFINED-IN-FILE 'RTOOLS/GENERAL.RED) 
(PUT 'GREATERPCDR 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(PUTC 'GREATERPCDR 'INLINE '(LAMBDA (A B) (GREATERP (CDR A) (CDR B)))) 
(DE LESSPCDR (U V) (LESSP (CDR U) (CDR V))) 
(PUT 'LESSPCDR 'NUMBER-OF-ARGS 2) 
(PUT 'LESSPCDR 'DEFINED-ON-LINE '127) 
(PUT 'LESSPCDR 'DEFINED-IN-FILE 'RTOOLS/GENERAL.RED) 
(PUT 'LESSPCDR 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(PUTC 'LESSPCDR 'INLINE '(LAMBDA (U V) (LESSP (CDR U) (CDR V)))) 
(DE IDENTITY-FUNCTION (X) X) 
(PUT 'IDENTITY-FUNCTION 'NUMBER-OF-ARGS 1) 
(PUT 'IDENTITY-FUNCTION 'DEFINED-ON-LINE '130) 
(PUT 'IDENTITY-FUNCTION 'DEFINED-IN-FILE 'RTOOLS/GENERAL.RED) 
(PUT 'IDENTITY-FUNCTION 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(PUTC 'IDENTITY-FUNCTION 'INLINE '(LAMBDA (X) X)) 
(DE ORDPCAR (U V) (ORDP (CAR U) (CAR V))) 
(PUT 'ORDPCAR 'NUMBER-OF-ARGS 2) 
(PUT 'ORDPCAR 'DEFINED-ON-LINE '133) 
(PUT 'ORDPCAR 'DEFINED-IN-FILE 'RTOOLS/GENERAL.RED) 
(PUT 'ORDPCAR 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(PUTC 'ORDPCAR 'INLINE '(LAMBDA (U V) (ORDP (CAR U) (CAR V)))) 
(DE ORDPCADR (U V) (ORDP (CADR U) (CADR V))) 
(PUT 'ORDPCADR 'NUMBER-OF-ARGS 2) 
(PUT 'ORDPCADR 'DEFINED-ON-LINE '136) 
(PUT 'ORDPCADR 'DEFINED-IN-FILE 'RTOOLS/GENERAL.RED) 
(PUT 'ORDPCADR 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(PUTC 'ORDPCADR 'INLINE '(LAMBDA (U V) (ORDP (CADR U) (CADR V)))) 
(DE ORDOPCADR (U V) (ORDOP (CADR U) (CADR V))) 
(PUT 'ORDOPCADR 'NUMBER-OF-ARGS 2) 
(PUT 'ORDOPCADR 'DEFINED-ON-LINE '139) 
(PUT 'ORDOPCADR 'DEFINED-IN-FILE 'RTOOLS/GENERAL.RED) 
(PUT 'ORDOPCADR 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(PUTC 'ORDOPCADR 'INLINE '(LAMBDA (U V) (ORDOP (CADR U) (CADR V)))) 
(DE ARG1OF2 (U V) U) 
(PUT 'ARG1OF2 'NUMBER-OF-ARGS 2) 
(PUT 'ARG1OF2 'DEFINED-ON-LINE '142) 
(PUT 'ARG1OF2 'DEFINED-IN-FILE 'RTOOLS/GENERAL.RED) 
(PUT 'ARG1OF2 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(PUTC 'ARG1OF2 'INLINE '(LAMBDA (U V) U)) 
(DE ARG2OF2 (U V) V) 
(PUT 'ARG2OF2 'NUMBER-OF-ARGS 2) 
(PUT 'ARG2OF2 'DEFINED-ON-LINE '144) 
(PUT 'ARG2OF2 'DEFINED-IN-FILE 'RTOOLS/GENERAL.RED) 
(PUT 'ARG2OF2 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(PUTC 'ARG2OF2 'INLINE '(LAMBDA (U V) V)) 
(PUT 'FPMAXBITS 'NUMBER-OF-ARGS 2) 
(FLAG '(FPMAXBITS) 'OPFN) 
(PUT 'FPMAXBITS 'DEFINED-ON-LINE '148) 
(PUT 'FPMAXBITS 'DEFINED-IN-FILE 'RTOOLS/GENERAL.RED) 
(PUT 'FPMAXBITS 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE FPMAXBITS (FF N)
    (COND ((EVALEQUAL (AEVAL FF) (AEVAL '(|:DN:| 0 . -1))) (AEVAL FF))
          ((EVALLESSP (AEVAL FF) (AEVAL '(|:DN:| 0 . -1)))
           (AEVAL (LIST 'MINUS (LIST 'FPMAXBITS (LIST 'MINUS FF) N))))
          (T
           (PROG (X K)
             (SETQ X (AEVAL 0))
             (SETQ K (AEVAL (LIST 'EXPT 2 (LIST 'DIFFERENCE N 1))))
             (WHILE (EVALGEQ (AEVAL* FF) (AEVAL* K))
                    (PROGN
                     (SETQ X (AEVAL* (LIST 'PLUS X 1)))
                     (SETQ FF (AEVAL* (LIST 'TIMES '(|:DN:| 5 . -1) FF)))))
             (WHILE (EVALLESSP (AEVAL* FF) (AEVAL* K))
                    (PROGN
                     (SETQ X (AEVAL* (LIST 'DIFFERENCE X 1)))
                     (SETQ FF (AEVAL* (LIST 'TIMES '(|:DN:| 20 . -1) FF)))))
             (SETQ K (AEVAL (LIST 'FIX FF)))
             (COND
              ((EVALEQUAL (AEVAL (LIST 'DIFFERENCE FF K))
                          (AEVAL '(|:DN:| 5 . -1)))
               (PROGN
                (COND
                 ((EVALEQUAL (AEVAL (LIST 'REMAINDER 'B 2)) 1)
                  (SETQ K (AEVAL (LIST 'PLUS K 1)))))))
              ((EVALGEQ (AEVAL (LIST 'DIFFERENCE FF K))
                        (AEVAL '(|:DN:| 5 . -1)))
               (SETQ K (AEVAL (LIST 'PLUS K 1)))))
             (RETURN
              (AEVAL (LIST 'TIMES K (LIST 'EXPT '(|:DN:| 20 . -1) X)))))))) 
(PUT 'FLOATP1 'NUMBER-OF-ARGS 1) 
(PUT 'FLOATP1 'DEFINED-ON-LINE '166) 
(PUT 'FLOATP1 'DEFINED-IN-FILE 'RTOOLS/GENERAL.RED) 
(PUT 'FLOATP1 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE FLOATP1 (U)
    (COND ((FLOATP U) U) ((AND (EQCAR U '|:RD:|) (FLOATP (CDR U))) (CDR U))
          ((AND (EQCAR U '*SQ) (EQUAL (CDR (CADR U)) 1))
           (FLOATP1 (CAR (CADR U))))
          (T NIL))) 
(PUT 'BFLOATP1 'NUMBER-OF-ARGS 1) 
(PUT 'BFLOATP1 'DEFINED-ON-LINE '172) 
(PUT 'BFLOATP1 'DEFINED-IN-FILE 'RTOOLS/GENERAL.RED) 
(PUT 'BFLOATP1 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE BFLOATP1 (U)
    (COND ((AND (EQCAR U '|:RD:|) (NOT (ATOM (CDR U)))) (CDR U))
          ((AND (EQCAR U '*SQ) (EQUAL (CDR (CADR U)) 1))
           (BFLOATP1 (CAR (CADR U))))
          (T NIL))) 
(PUT 'HEXFLOAT 'NUMBER-OF-ARGS 1) 
(PUT 'HEXFLOAT 'DEFINED-ON-LINE '177) 
(PUT 'HEXFLOAT 'DEFINED-IN-FILE 'RTOOLS/GENERAL.RED) 
(PUT 'HEXFLOAT 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE HEXFLOAT (U)
    (PROG (R NEG BX HI LO)
      (SETQ BX 0)
      (SETQ HI (EXPT 2.0 53))
      (SETQ LO (EXPT 2.0 52))
      (COND ((EQUAL U 0.0) (RETURN "0.0"))
            ((LESSP U 0) (PROGN (SETQ NEG T) (SETQ U (MINUS U)))))
      (PROG ()
       WHILELABEL
        (COND ((NOT (LESSP U LO)) (RETURN NIL)))
        (PROGN (SETQ U (TIMES 2.0 U)) (SETQ BX (DIFFERENCE BX 1)))
        (GO WHILELABEL))
      (PROG ()
       WHILELABEL
        (COND ((NOT (GEQ U HI)) (RETURN NIL)))
        (PROGN (SETQ U (QUOTIENT U 2)) (SETQ BX (PLUS BX 1)))
        (GO WHILELABEL))
      (SETQ R (CONS 'P (APPEND (EXPLODE2 BX) '(|"|))))
      (SETQ R (CONS '|0| (CONS 'X (APPEND (EXPLODE2 (HEX (FIX U))) R))))
      (COND (NEG (SETQ R (CONS '- R))))
      (RETURN (COMPRESS (CONS '|"| R))))) 
(PUT 'HEXBFLOAT 'NUMBER-OF-ARGS 1) 
(PUT 'HEXBFLOAT 'DEFINED-ON-LINE '194) 
(PUT 'HEXBFLOAT 'DEFINED-IN-FILE 'RTOOLS/GENERAL.RED) 
(PUT 'HEXBFLOAT 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE HEXBFLOAT (U)
    (PROG (M X NEG R)
      (SETQ M (CAR U))
      (SETQ X (CDR U))
      (COND ((EQUAL M 0) (RETURN "0.0"))
            ((LESSP M 0) (PROGN (SETQ NEG T) (SETQ M (MINUS M)))))
      (SETQ R (CONS 'P (APPEND (EXPLODE2 X) '(|"|))))
      (SETQ R (CONS '|0| (CONS 'X (APPEND (EXPLODE2 (HEX M)) R))))
      (COND (NEG (SETQ R (CONS '- R))))
      (RETURN (COMPRESS (CONS '|"| R))))) 
(PUT 'HEX 'NUMBER-OF-ARGS 1) 
(PUT 'HEX 'DEFINED-ON-LINE '217) 
(PUT 'HEX 'DEFINED-IN-FILE 'RTOOLS/GENERAL.RED) 
(PUT 'HEX 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE HEX (N)
    (PROG (R W)
      (SETQ R '(|"|))
      (COND
       ((FIXP N)
        (PROGN
         (COND
          ((LESSP N 0)
           (PROGN
            (SETQ W 16)
            (PROG ()
             WHILELABEL
              (COND ((NOT (LEQ (PLUS W N) 0)) (RETURN NIL)))
              (SETQ W (TIMES 16 W))
              (GO WHILELABEL))
            (SETQ N (PLUS W N)))))
         (PROG ()
          REPEATLABEL
           (PROGN
            (SETQ R
                    (CONS
                     (NTH
                      '(|0| |1| |2| |3| |4| |5| |6| |7| |8| |9| A B C D E F)
                      (ADD1 (REMAINDER N 16)))
                     R))
            (SETQ N (QUOTIENT N 16)))
           (COND ((NOT (ZEROP N)) (GO REPEATLABEL))))
         (COND
          (W
           (PROGN
            (COND ((NOT (EQCAR R 'F)) (SETQ R (CONS 'F R))))
            (SETQ R (CONS '~ R)))))
         (RETURN (COMPRESS (CONS '|"| R)))))
       ((SETQ W (FLOATP1 N)) (RETURN (HEXFLOAT W)))
       ((SETQ W (BFLOATP1 N)) (RETURN (HEXBFLOAT W))))
      (RETURN N))) 
(FLAG '(HEX) 'OPFN) 
(FLAG '(PRINHEX) 'OPFN) 
(PUT 'SPLIT64 'NUMBER-OF-ARGS 1) 
(PUT 'SPLIT64 'DEFINED-ON-LINE '263) 
(PUT 'SPLIT64 'DEFINED-IN-FILE 'RTOOLS/GENERAL.RED) 
(PUT 'SPLIT64 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE SPLIT64 (N)
    (PROG (BASE R)
      (SETQ BASE (EXPT 2 64))
      (PROG ()
       WHILELABEL
        (COND ((NOT (OR (GEQ N BASE) (LESSP N (MINUS 1)))) (RETURN NIL)))
        (PROGN
         (SETQ R (CONS (LAND N (DIFFERENCE BASE 1)) R))
         (SETQ N (QUOTIENT (DIFFERENCE N (CAR R)) BASE)))
        (GO WHILELABEL))
      (RETURN (CONS N R)))) 
(PUT 'HEX64 'NUMBER-OF-ARGS 1) 
(PUT 'HEX64 'DEFINED-ON-LINE '272) 
(PUT 'HEX64 'DEFINED-IN-FILE 'RTOOLS/GENERAL.RED) 
(PUT 'HEX64 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE HEX64 (N)
    (PROG (W)
      (SETQ W (SPLIT64 N))
      (COND ((EQUAL (CAR W) (MINUS 1)) (PROGN (PRIN2 "0x-f") (SETQ W (CDR W))))
            (T (PRIN2 "0x0")))
      (PROG (D)
        (SETQ D W)
       LAB
        (COND ((NULL D) (RETURN NIL)))
        ((LAMBDA (D)
           (PROGN
            (PRIN2 "_")
            (COND ((GEQ (PLUS (POSN) 18) (LINELENGTH NIL)) (TERPRI)))
            (PROG (I)
              (SETQ I 1)
             LAB
              (COND ((MINUSP (DIFFERENCE 16 I)) (RETURN NIL)))
              (PRINHEX (LAND (ASHIFT D (DIFFERENCE (TIMES 4 I) 64)) 15))
              (SETQ I (PLUS2 I 1))
              (GO LAB))))
         (CAR D))
        (SETQ D (CDR D))
        (GO LAB))
      (PRIN2 "$"))) 
(PUT 'HEX64T 'NUMBER-OF-ARGS 1) 
(PUT 'HEX64T 'DEFINED-ON-LINE '287) 
(PUT 'HEX64T 'DEFINED-IN-FILE 'RTOOLS/GENERAL.RED) 
(PUT 'HEX64T 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE HEX64T (N) (PROGN (COND ((NEQ (POSN) 0) (TERPRI))) (HEX64 N) (TERPRI))) 
(PUT 'LEAFCOUNT 'NUMBER-OF-ARGS 1) 
(PUT 'LEAFCOUNT 'DEFINED-ON-LINE '297) 
(PUT 'LEAFCOUNT 'DEFINED-IN-FILE 'RTOOLS/GENERAL.RED) 
(PUT 'LEAFCOUNT 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE LEAFCOUNT (U)
    (PROG (N)
      (SETQ N 0)
      (PROG ()
       WHILELABEL
        (COND ((NOT (NOT (ATOM U))) (RETURN NIL)))
        (PROGN (SETQ N (PLUS N (LEAFCOUNT (CAR U)))) (SETQ U (CDR U)))
        (GO WHILELABEL))
      (COND ((NULL U) (RETURN N)) (T (RETURN (PLUS N 1)))))) 
(FLAG '(LEAFCOUNT) 'OPFN) 
(SETQ *HASH-TABLE-P (GETD 'HASH-TABLE-P)) 
(PUT 'TREESIZE 'NUMBER-OF-ARGS 1) 
(PUT 'TREESIZE 'DEFINED-ON-LINE '321) 
(PUT 'TREESIZE 'DEFINED-IN-FILE 'RTOOLS/GENERAL.RED) 
(PUT 'TREESIZE 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE TREESIZE (U)
    (PROG (STACK SEEN N)
      (SETQ STACK (LIST U))
      (SETQ SEEN (MKHASH 32 0))
      (SETQ N 0)
      (PROG ()
       WHILELABEL
        (COND ((NOT STACK) (RETURN NIL)))
        (PROGN
         (SETQ U (CAR STACK))
         (SETQ STACK (CDR STACK))
         (COND
          ((NOT (GETHASH U SEEN))
           (PROGN
            (PUTHASH U SEEN T)
            (COND
             ((AND *HASH-TABLE-P (HASH-TABLE-P U))
              (SETQ STACK (CONS (HASHCONTENTS U) STACK)))
             ((VECTORP U)
              (PROGN
               (PROG (I)
                 (SETQ I 0)
                LAB
                 (COND ((MINUSP (DIFFERENCE (UPBV U) I)) (RETURN NIL)))
                 (SETQ STACK (CONS (GETV U I) STACK))
                 (SETQ I (PLUS2 I 1))
                 (GO LAB))
               (SETQ N (PLUS N (UPBV U) 1))))
             ((FIXP U)
              (SETQ N
                      (PLUS N
                            (QUOTIENT
                             (MSD (COND ((LESSP U 0) (MINUS U)) (T U))) 64)
                            1)))
             ((ATOM U) (SETQ N (PLUS N 1)))
             (T
              (PROGN
               (SETQ STACK (CONS (CDR U) STACK))
               (SETQ STACK (CONS (CAR U) STACK))
               (SETQ U (CAR U))
               (SETQ N (PLUS N 1)))))))))
        (GO WHILELABEL))
      (RETURN N))) 
(PUT 'KEEPTOPFEW 'NUMBER-OF-ARGS 4) 
(PUT 'KEEPTOPFEW 'DEFINED-ON-LINE '348) 
(PUT 'KEEPTOPFEW 'DEFINED-IN-FILE 'RTOOLS/GENERAL.RED) 
(PUT 'KEEPTOPFEW 'PROCEDURE_TYPE
     '(ARROW (TIMES GENERAL GENERAL GENERAL GENERAL) GENERAL)) 
(DE KEEPTOPFEW (KEY VAL LL COUNT)
    (COND ((EQUAL COUNT 0) NIL) ((EQUAL LL NIL) (LIST (CONS KEY VAL)))
          ((LESSP KEY (CAAR LL))
           (CONS (CAR LL) (KEEPTOPFEW KEY VAL (CDR LL) (DIFFERENCE COUNT 1))))
          (T (CONS (CONS KEY VAL) (FIRSTFEW (DIFFERENCE COUNT 1) LL))))) 
(PUT 'FIRSTFEW 'NUMBER-OF-ARGS 2) 
(PUT 'FIRSTFEW 'DEFINED-ON-LINE '354) 
(PUT 'FIRSTFEW 'DEFINED-IN-FILE 'RTOOLS/GENERAL.RED) 
(PUT 'FIRSTFEW 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE FIRSTFEW (COUNT LL)
    (COND ((OR (EQUAL COUNT 0) (NULL LL)) NIL)
          (T (CONS (CAR LL) (FIRSTFEW (DIFFERENCE COUNT 1) (CDR LL)))))) 
(PUT 'FINDSPACEUSERS 'NUMBER-OF-ARGS 0) 
(PUT 'FINDSPACEUSERS 'DEFINED-ON-LINE '371) 
(PUT 'FINDSPACEUSERS 'DEFINED-IN-FILE 'RTOOLS/GENERAL.RED) 
(PUT 'FINDSPACEUSERS 'PROCEDURE_TYPE '(ARROW UNIT GENERAL)) 
(DE FINDSPACEUSERS NIL
    (PROG (BIGGEST N UNIT)
      (COND ((MEMQ 'SIXTY-FOUR LISPSYSTEM*) (SETQ UNIT 16)) (T (EQUAL UNIT 8)))
      (PROG (A)
        (SETQ A (OBLIST))
       LAB
        (COND ((NULL A) (RETURN NIL)))
        ((LAMBDA (A)
           (PROGN
            (SETQ N (PLUS (TREESIZE (SYMBOL-VALUE A)) (TREESIZE (PROP A))))
            (SETQ BIGGEST (KEEPTOPFEW N A BIGGEST 10))))
         (CAR A))
        (SETQ A (CDR A))
        (GO LAB))
      (OPTTERPRI)
      (PROG (P)
        (SETQ P BIGGEST)
       LAB
        (COND ((NULL P) (RETURN NIL)))
        ((LAMBDA (P)
           (PROGN
            (PRIN1 (CDR P))
            (PRINC ": ")
            (TTAB 20)
            (PRIN1 (TIMES UNIT (QUOTIENT (CAR P) 1000.0)))
            (PROGN (PRIN2 '|k|) (TERPRI) '|k|)))
         (CAR P))
        (SETQ P (CDR P))
        (GO LAB)))) 
(PUT 'HASHSIZE 'NUMBER-OF-ARGS 1) 
(PUT 'HASHSIZE 'DEFINED-ON-LINE '394) 
(PUT 'HASHSIZE 'DEFINED-IN-FILE 'RTOOLS/GENERAL.RED) 
(PUT 'HASHSIZE 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE HASHSIZE (H) (TREESIZE (HASHCONTENTS H))) 
(FLUID '(ALGLIST* $HASH)) 
(GLOBAL '(KERNHASH)) 
(SETQ $HASH (MKHASH 200 3 NIL)) 
(PUT 'HASHSIZES 'NUMBER-OF-ARGS 0) 
(PUT 'HASHSIZES 'DEFINED-ON-LINE '419) 
(PUT 'HASHSIZES 'DEFINED-IN-FILE 'RTOOLS/GENERAL.RED) 
(PUT 'HASHSIZES 'PROCEDURE_TYPE '(ARROW UNIT GENERAL)) 
(DE HASHSIZES NIL
    (PROG (UNIT)
      (COND ((MEMQ 'SIXTY-FOUR LISPSYSTEM*) (SETQ UNIT 8)) (T (EQUAL UNIT 4)))
      (TERPRI)
      (PRIN2 "alglist_count* = ")
      (PRINT ALGLIST_COUNT*)
      (PRIN2 "alglist_limit* = ")
      (PRINT ALGLIST_LIMIT*)
      (PRIN2 "alglist*:")
      (TTAB 20)
      (PRINT (TIMES UNIT (TREESIZE (CAR ALGLIST*))))
      (PRIN2 "kernhash:")
      (TTAB 20)
      (PRINT (TIMES UNIT (HASHSIZE KERNHASH)))
      (PRIN2 "$hash (for det):")
      (TTAB 20)
      (PRINT (TIMES UNIT (HASHSIZE $HASH)))
      (PROGN
       (PRIN2 "Symbol values and properties:")
       (TERPRI)
       "Symbol values and properties:")
      (FINDSPACEUSERS))) 
(FLAG '(HASHSIZES) 'OPFN) 
(ENDMODULE) 