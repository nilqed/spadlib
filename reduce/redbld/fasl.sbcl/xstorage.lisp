(cl:declaim (cl:optimize cl:debug cl:safety))
(cl:declaim (sb-ext:muffle-conditions sb-ext:compiler-note cl:style-warning))
(MODULE (LIST 'XSTORAGE)) 
(PUT 'XSET_PTRS 'NUMBER-OF-ARGS 1) 
(PUTC 'XSET_PTRS 'INLINE '(LAMBDA (U) (CDR U))) 
(DE XSET_PTRS (U) (CDR U)) 
(PUT 'XSET_PTRS 'SETQFN '(LAMBDA (U V) (SETCDR U V))) 
(PUT 'SET_XSET_PTRS 'NUMBER-OF-ARGS 2) 
(PUTC 'SET_XSET_PTRS 'INLINE '(LAMBDA (U V) (SETCDR U V))) 
(DE SET_XSET_PTRS (U V) (SETCDR U V)) 
(PUT 'XSET_ITEM 'NUMBER-OF-ARGS 1) 
(PUTC 'XSET_ITEM 'INLINE '(LAMBDA (U) (CAR U))) 
(DE XSET_ITEM (U) (CAR U)) 
(PUT 'XSET_ITEM 'SETQFN '(LAMBDA (U V) (SETCAR U V))) 
(PUT 'SET_XSET_ITEM 'NUMBER-OF-ARGS 2) 
(PUTC 'SET_XSET_ITEM 'INLINE '(LAMBDA (U V) (SETCAR U V))) 
(DE SET_XSET_ITEM (U V) (SETCAR U V)) 
(PUT 'RIGHT_XSET 'NUMBER-OF-ARGS 1) 
(PUTC 'RIGHT_XSET 'INLINE '(LAMBDA (U) (CDDR U))) 
(DE RIGHT_XSET (U) (CDDR U)) 
(PUT 'RIGHT_XSET 'SETQFN '(LAMBDA (U V) (SETCDR (CDR U) V))) 
(PUT 'SET_RIGHT_XSET 'NUMBER-OF-ARGS 2) 
(PUTC 'SET_RIGHT_XSET 'INLINE '(LAMBDA (U V) (SETCDR (CDR U) V))) 
(DE SET_RIGHT_XSET (U V) (SETCDR (CDR U) V)) 
(PUT 'LEFT_XSET 'NUMBER-OF-ARGS 1) 
(PUTC 'LEFT_XSET 'INLINE '(LAMBDA (U) (CADR U))) 
(DE LEFT_XSET (U) (CADR U)) 
(PUT 'LEFT_XSET 'SETQFN '(LAMBDA (U V) (SETCAR (CDR U) V))) 
(PUT 'SET_LEFT_XSET 'NUMBER-OF-ARGS 2) 
(PUTC 'SET_LEFT_XSET 'INLINE '(LAMBDA (U V) (SETCAR (CDR U) V))) 
(DE SET_LEFT_XSET (U V) (SETCAR (CDR U) V)) 
NIL 
(PUT 'FIND_ITEM 'NUMBER-OF-ARGS 2) 
(PUT 'FIND_ITEM 'DEFINED-ON-LINE '45) 
(PUT 'FIND_ITEM 'DEFINED-IN-FILE 'XIDEAL/XSTORAGE.RED) 
(PUT 'FIND_ITEM 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE FIND_ITEM (PR C)
    (COND ((NULL (CDR C)) NIL)
          (T
           (OR (FIND_ITEM PR (CADR C)) (COND ((EQUAL (CAR C) PR) C))
               (FIND_ITEM PR (CDDR C)))))) 
(PUT 'ADD_ITEM 'NUMBER-OF-ARGS 2) 
(PUT 'ADD_ITEM 'DEFINED-ON-LINE '54) 
(PUT 'ADD_ITEM 'DEFINED-IN-FILE 'XIDEAL/XSTORAGE.RED) 
(PUT 'ADD_ITEM 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE ADD_ITEM (PR C)
    (COND
     ((NULL (CDR C))
      (PROGN
       (SETCAR C PR)
       (SETCDR C (CONS (CONS '*XSET* NIL) (CONS '*XSET* NIL)))
       NIL))
     ((MONORDP (CAR (CAR C)) (CAR PR)) (ADD_ITEM PR (CADR C)))
     (T (ADD_ITEM PR (CDDR C))))) 
(PUT 'REMOVE_ITEM 'NUMBER-OF-ARGS 2) 
(PUT 'REMOVE_ITEM 'DEFINED-ON-LINE '72) 
(PUT 'REMOVE_ITEM 'DEFINED-IN-FILE 'XIDEAL/XSTORAGE.RED) 
(PUT 'REMOVE_ITEM 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE REMOVE_ITEM (PR C) (COND ((SETQ C (FIND_ITEM PR C)) (REMOVE_ROOT_ITEM C)))) 
(PUT 'REMOVE_LEAST_ITEM 'NUMBER-OF-ARGS 1) 
(PUT 'REMOVE_LEAST_ITEM 'DEFINED-ON-LINE '78) 
(PUT 'REMOVE_LEAST_ITEM 'DEFINED-IN-FILE 'XIDEAL/XSTORAGE.RED) 
(PUT 'REMOVE_LEAST_ITEM 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE REMOVE_LEAST_ITEM (C)
    (COND ((NULL (CDR C)) (REDERR "How did we get here?"))
          ((NULL (CDR (CADR C))) (REMOVE_ROOT_ITEM C))
          (T (REMOVE_LEAST_ITEM (CADR C))))) 
(PUT 'REMOVE_ROOT_ITEM 'NUMBER-OF-ARGS 1) 
(PUT 'REMOVE_ROOT_ITEM 'DEFINED-ON-LINE '86) 
(PUT 'REMOVE_ROOT_ITEM 'DEFINED-IN-FILE 'XIDEAL/XSTORAGE.RED) 
(PUT 'REMOVE_ROOT_ITEM 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE REMOVE_ROOT_ITEM (C)
    (PROG (X Y)
      (SETQ X (CADR C))
      (SETQ Y (CAR C))
      (SETCAR C (CAR (CDDR C)))
      (SETCDR C (CDR (CDDR C)))
      (COND
       ((NOT (NULL (CDR X)))
        (PROGN
         (PROG ()
          WHILELABEL
           (COND ((NOT (NOT (NULL (CDR C)))) (RETURN NIL)))
           (SETQ C (CADR C))
           (GO WHILELABEL))
         (SETCAR C (CAR X))
         (SETCDR C (CDR X)))))
      (RETURN Y))) 
(PUT 'REMOVE_ITEMS 'NUMBER-OF-ARGS 2) 
(PUT 'REMOVE_ITEMS 'DEFINED-ON-LINE '101) 
(PUT 'REMOVE_ITEMS 'DEFINED-IN-FILE 'XIDEAL/XSTORAGE.RED) 
(PUT 'REMOVE_ITEMS 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE REMOVE_ITEMS (C U)
    (PROG ()
      (COND ((NULL (CDR C)) (RETURN NIL)))
      (REMOVE_ITEMS (CADR C) U)
      (REMOVE_ITEMS (CDDR C) U)
      (COND ((XNP U (CAR C)) (REMOVE_ROOT_ITEM C))))) 
(ENDMODULE) 