(cl:declaim (cl:optimize cl:debug cl:safety))
(cl:declaim (sb-ext:muffle-conditions sb-ext:compiler-note cl:style-warning))
(MODULE (LIST 'LSPRAT)) 
(NULL (SETQ *MODE 'SYMBOLIC)) 
(FLUID '(*DOUBLE *GENDECS *GETDECS)) 
(SWITCH (LIST 'GENDECS)) 
(FLUID '(*MAKECALLS)) 
(SWITCH (LIST 'MAKECALLS)) 
(SETQ *MAKECALLS T) 
(GLOBAL '(MINRATLINELEN* RATLINELEN* *RATCURRIND* RATCURRIND* TABLEN*)) 
(SHARE (LIST 'RATCURRIND* 'MINRATLINELEN* 'RATLINELEN* 'TABLEN*)) 
(SETQ RATCURRIND* (PROGN (SETQ ALGLIST* (CONS NIL NIL)) 0)) 
(SETQ MINRATLINELEN* (PROGN (SETQ ALGLIST* (CONS NIL NIL)) 40)) 
(SETQ RATLINELEN* (PROGN (SETQ ALGLIST* (CONS NIL NIL)) 80)) 
(SETQ *RATCURRIND* 0) 
(GLOBAL '(DEFTYPE* *DO* *NOTFORTRANFUNS* *LEGALFORTTYPES*)) 
(GLOBAL '(*STDOUT*)) 
(GLOBAL '(*POSN* |$#|)) 
(PUT 'RATFOR 'FORMATTER 'FORMATRAT) 
(PUT 'RATFOR 'CODEGEN 'RATCODE) 
(PUT 'RATFOR 'PROCTEM 'PROCRATTEM) 
(PUT 'RATFOR 'GENDECS 'RATDECS) 
(PUT 'RATFOR 'ASSIGNER 'MKFRATASSIGN) 
(PUT 'RATFOR 'BOOLEAN-TYPE 'LOGICAL) 
(PUT 'RATCODE 'NUMBER-OF-ARGS 1) 
(PUT 'RATCODE 'DEFINED-ON-LINE '78) 
(PUT 'RATCODE 'DEFINED-IN-FILE 'GENTRAN/LSPRAT.RED) 
(PUT 'RATCODE 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE RATCODE (FORMS)
    (PROG (F FORALL-RESULT FORALL-ENDPTR)
      (SETQ F FORMS)
     STARTOVER
      (COND ((NULL F) (RETURN NIL)))
      (SETQ FORALL-RESULT
              ((LAMBDA (F)
                 (COND ((ATOM F) (RATEXP F))
                       ((MEMQ (CAR F) '(|:RD:| |:CR:| |:CRN:| |:GI:|))
                        (RATEXP F))
                       ((OR (LISPSTMTP F) (LISPSTMTGPP F))
                        (COND
                         (*GENDECS
                          (PROG (R)
                            (SETQ R
                                    (APPEND
                                     (RATDECS (SYMTABGET '*MAIN* '*DECS*))
                                     (RATSTMT F)))
                            (SYMTABREM '*MAIN* '*DECS*)
                            (RETURN R)))
                         (T (RATSTMT F))))
                       ((LISPDEFP F) (RATSUBPROG F)) (T (RATEXP F))))
               (CAR F)))
      (SETQ FORALL-ENDPTR (LASTPAIR FORALL-RESULT))
      (SETQ F (CDR F))
      (COND ((ATOM FORALL-ENDPTR) (GO STARTOVER)))
     LOOPLABEL
      (COND ((NULL F) (RETURN FORALL-RESULT)))
      (RPLACD FORALL-ENDPTR
              ((LAMBDA (F)
                 (COND ((ATOM F) (RATEXP F))
                       ((MEMQ (CAR F) '(|:RD:| |:CR:| |:CRN:| |:GI:|))
                        (RATEXP F))
                       ((OR (LISPSTMTP F) (LISPSTMTGPP F))
                        (COND
                         (*GENDECS
                          (PROG (R)
                            (SETQ R
                                    (APPEND
                                     (RATDECS (SYMTABGET '*MAIN* '*DECS*))
                                     (RATSTMT F)))
                            (SYMTABREM '*MAIN* '*DECS*)
                            (RETURN R)))
                         (T (RATSTMT F))))
                       ((LISPDEFP F) (RATSUBPROG F)) (T (RATEXP F))))
               (CAR F)))
      (SETQ FORALL-ENDPTR (LASTPAIR FORALL-ENDPTR))
      (SETQ F (CDR F))
      (GO LOOPLABEL))) 
(PUT 'RATSUBPROG 'NUMBER-OF-ARGS 1) 
(PUT 'RATSUBPROG 'DEFINED-ON-LINE '104) 
(PUT 'RATSUBPROG 'DEFINED-IN-FILE 'GENTRAN/LSPRAT.RED) 
(PUT 'RATSUBPROG 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE RATSUBPROG (DEFF)
    (PROG (TYPE STYPE NAME PARAMS BODY LASTST R)
      (SETQ NAME (CADR DEFF))
      (COND
       ((AND (ONEP (LENGTH (SETQ BODY (CDDDR DEFF)))) (LISPSTMTGPP (CAR BODY)))
        (PROGN
         (SETQ BODY (CDAR BODY))
         (COND ((NULL (CAR BODY)) (SETQ BODY (CDR BODY)))))))
      (COND
       ((LISPRETURNP (SETQ LASTST (CAR (REVERSE BODY))))
        (SETQ BODY (APPEND BODY (LIST '(END)))))
       ((NOT (LISPENDP LASTST))
        (SETQ BODY (APPEND BODY (LIST '(RETURN) '(END))))))
      (SETQ TYPE (CADR (SYMTABGET NAME NAME)))
      (SETQ STYPE
              (OR (SYMTABGET NAME '*TYPE*)
                  (COND ((OR TYPE (FUNCTIONFORMP BODY NAME)) 'FUNCTION)
                        (T 'SUBROUTINE))))
      (SYMTABREM NAME '*TYPE*)
      (SETQ PARAMS (OR (SYMTABGET NAME '*PARAMS*) (CADDR DEFF)))
      (SYMTABREM NAME '*PARAMS*)
      (COND
       ((AND *GETDECS (NULL TYPE) (EQ STYPE 'FUNCTION)) (SETQ TYPE DEFTYPE*)))
      (COND
       (TYPE
        (PROGN
         (SYMTABREM NAME NAME)
         (COND
          (*DOUBLE
           (COND ((MEMQ TYPE '(REAL REAL*8)) (SETQ TYPE '|DOUBLE PRECISION|))
                 ((EQ TYPE 'COMPLEX) (SETQ TYPE 'COMPLEX*16)))))
         NIL)))
      (SETQ R (MKFRATSUBPROGDEC TYPE STYPE NAME PARAMS))
      (COND (*GENDECS (SETQ R (APPEND R (RATDECS (SYMTABGET NAME '*DECS*))))))
      (SETQ R
              (APPEND R
                      (PROG (S FORALL-RESULT FORALL-ENDPTR)
                        (SETQ S BODY)
                       STARTOVER
                        (COND ((NULL S) (RETURN NIL)))
                        (SETQ FORALL-RESULT ((LAMBDA (S) (RATSTMT S)) (CAR S)))
                        (SETQ FORALL-ENDPTR (LASTPAIR FORALL-RESULT))
                        (SETQ S (CDR S))
                        (COND ((ATOM FORALL-ENDPTR) (GO STARTOVER)))
                       LOOPLABEL
                        (COND ((NULL S) (RETURN FORALL-RESULT)))
                        (RPLACD FORALL-ENDPTR
                                ((LAMBDA (S) (RATSTMT S)) (CAR S)))
                        (SETQ FORALL-ENDPTR (LASTPAIR FORALL-ENDPTR))
                        (SETQ S (CDR S))
                        (GO LOOPLABEL))))
      (COND (*GENDECS (PROGN (SYMTABREM NAME NIL) (SYMTABREM NAME '*DECS*))))
      (RETURN R))) 
(PUT 'RATDECS 'NUMBER-OF-ARGS 1) 
(PUT 'RATDECS 'DEFINED-ON-LINE '147) 
(PUT 'RATDECS 'DEFINED-IN-FILE 'GENTRAN/LSPRAT.RED) 
(PUT 'RATDECS 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE RATDECS (DECS)
    (PROG (TL FORALL-RESULT FORALL-ENDPTR)
      (SETQ TL (FORMTYPELISTS DECS))
     STARTOVER
      (COND ((NULL TL) (RETURN NIL)))
      (SETQ FORALL-RESULT
              ((LAMBDA (TL) (MKFRATDEC (CAR TL) (CDR TL))) (CAR TL)))
      (SETQ FORALL-ENDPTR (LASTPAIR FORALL-RESULT))
      (SETQ TL (CDR TL))
      (COND ((ATOM FORALL-ENDPTR) (GO STARTOVER)))
     LOOPLABEL
      (COND ((NULL TL) (RETURN FORALL-RESULT)))
      (RPLACD FORALL-ENDPTR
              ((LAMBDA (TL) (MKFRATDEC (CAR TL) (CDR TL))) (CAR TL)))
      (SETQ FORALL-ENDPTR (LASTPAIR FORALL-ENDPTR))
      (SETQ TL (CDR TL))
      (GO LOOPLABEL))) 
(PUT 'RATEXP 'NUMBER-OF-ARGS 1) 
(PUT 'RATEXP 'DEFINED-ON-LINE '155) 
(PUT 'RATEXP 'DEFINED-IN-FILE 'GENTRAN/LSPRAT.RED) 
(PUT 'RATEXP 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE RATEXP (EXP) (RATEXP1 EXP 0)) 
(PUT 'RATEXP1 'NUMBER-OF-ARGS 2) 
(PUT 'RATEXP1 'DEFINED-ON-LINE '158) 
(PUT 'RATEXP1 'DEFINED-IN-FILE 'GENTRAN/LSPRAT.RED) 
(PUT 'RATEXP1 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE RATEXP1 (EXP WTIN)
    (COND ((ATOM EXP) (LIST (FORTRANNAME EXP)))
          ((ONEP (LENGTH EXP)) (FORTRANNAME EXP))
          ((OPTYPE (CAR EXP))
           (PROG (WT OP RES)
             (SETQ WT (RATFORPRECEDENCE (CAR EXP)))
             (SETQ OP (RATFOROP (CAR EXP)))
             (SETQ EXP (CDR EXP))
             (COND
              ((ONEP (LENGTH EXP)) (SETQ RES (CONS OP (RATEXP1 (CAR EXP) WT))))
              (T
               (PROGN
                (SETQ RES (RATEXP1 (CAR EXP) WT))
                (COND
                 ((EQ OP '+)
                  (PROG ()
                   WHILELABEL
                    (COND ((NOT (SETQ EXP (CDR EXP))) (RETURN NIL)))
                    (PROGN
                     (COND
                      ((OR (ATOM (CAR EXP)) (NEQ (CAAR EXP) 'MINUS))
                       (SETQ RES (APPEND RES (LIST OP)))))
                     (SETQ RES (APPEND RES (RATEXP1 (CAR EXP) WT))))
                    (GO WHILELABEL)))
                 (T
                  (PROG ()
                   WHILELABEL
                    (COND ((NOT (SETQ EXP (CDR EXP))) (RETURN NIL)))
                    (SETQ RES
                            (APPEND (APPEND RES (LIST OP))
                                    (RATEXP1 (CAR EXP) WT)))
                    (GO WHILELABEL)))))))
             (COND ((GEQ WTIN WT) (SETQ RES (INSERTPARENS RES))))
             (RETURN RES)))
          ((EQ (CAR EXP) 'LITERAL) (RATLITERAL EXP))
          ((EQ (CAR EXP) 'RANGE)
           (APPEND (FORTEXP (CADR EXP)) (CONS '|:| (FORTEXP (CADDR EXP)))))
          ((EQ (CAR EXP) '|:RD:|)
           (PROG (MT DOTPOS |:LOWER-SCI:| |:UPPER-SCI:|)
             (SETQ DOTPOS 0)
             (SETQ |:LOWER-SCI:| 0)
             (SETQ |:UPPER-SCI:| 0)
             (SETQ MT (|RD:EXPLODE| EXP))
             (SETQ EXP (CAR MT))
             (SETQ MT (PLUS (CADR MT) (DIFFERENCE (CADDR MT) 1)))
             (SETQ EXP (APPEND (LIST 'LITERAL (CAR EXP) '|.|) (CDR EXP)))
             (COND
              ((NULL (EQUAL MT 0))
               (SETQ EXP (APPEND EXP (LIST (COND (*DOUBLE 'D) (T 'E)) MT))))
              (*DOUBLE (SETQ EXP (APPEND EXP '(E 0)))))
             (RETURN (RATLITERAL EXP))))
          ((MEMQ (CAR EXP) '(|:CR:| |:CRN:| |:GI:|))
           (PROG (RE IM)
             (SETQ RE
                     (EXPLODE
                      (COND ((ATOM (CADR EXP)) (CADR EXP)) (T (CAADR EXP)))))
             (SETQ RE
                     (COND ((MEMQ 'E RE) (SUBST 'D 'E RE))
                           ((MEMQ 'E RE) (SUBST 'D 'E RE))
                           (*DOUBLE (APPEND RE '(D 0)))
                           (T (APPEND RE '(E 0)))))
             (SETQ IM
                     (EXPLODE
                      (COND ((ATOM (CDDR EXP)) (CDDR EXP)) (T (CADDR EXP)))))
             (SETQ IM
                     (COND ((MEMQ 'E IM) (SUBST 'D 'E IM))
                           ((MEMQ 'E IM) (SUBST 'D 'E IM))
                           (*DOUBLE (APPEND IM '(D 0)))
                           (T (APPEND IM '(E 0)))))
             (RETURN (CONS '|(| (APPEND RE (CONS '|,| (APPEND IM '(|)|))))))))
          (T
           (PROG (OP RES)
             (SETQ OP (FORTRANNAME (CAR EXP)))
             (SETQ EXP (CDR EXP))
             (SETQ RES (RATEXP1 (CAR EXP) 0))
             (PROG ()
              WHILELABEL
               (COND ((NOT (SETQ EXP (CDR EXP))) (RETURN NIL)))
               (SETQ RES
                       (APPEND (APPEND RES (LIST '|,|)) (RATEXP1 (CAR EXP) 0)))
               (GO WHILELABEL))
             (RETURN (CONS OP (INSERTPARENS RES))))))) 
(PUT 'RATFOROP 'NUMBER-OF-ARGS 1) 
(PUT 'RATFOROP 'DEFINED-ON-LINE '247) 
(PUT 'RATFOROP 'DEFINED-IN-FILE 'GENTRAN/LSPRAT.RED) 
(PUT 'RATFOROP 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE RATFOROP (OP) (OR (GET OP '*RATFOROP*) OP)) 
(PUT 'OR '*RATFOROP* '|\||) 
(PUT 'AND '*RATFOROP* '&) 
(PUT 'NOT '*RATFOROP* '!) 
(PUT 'EQUAL '*RATFOROP* '==) 
(PUT 'NEQ '*RATFOROP* '!=) 
(PUT 'GREATERP '*RATFOROP* '>) 
(PUT 'GEQ '*RATFOROP* '>=) 
(PUT 'LESSP '*RATFOROP* '<) 
(PUT 'LEQ '*RATFOROP* '<=) 
(PUT 'PLUS '*RATFOROP* '+) 
(PUT 'TIMES '*RATFOROP* '*) 
(PUT 'QUOTIENT '*RATFOROP* '/) 
(PUT 'MINUS '*RATFOROP* '-) 
(PUT 'EXPT '*RATFOROP* '**) 
(PUT 'RATFORPRECEDENCE 'NUMBER-OF-ARGS 1) 
(PUT 'RATFORPRECEDENCE 'DEFINED-ON-LINE '265) 
(PUT 'RATFORPRECEDENCE 'DEFINED-IN-FILE 'GENTRAN/LSPRAT.RED) 
(PUT 'RATFORPRECEDENCE 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE RATFORPRECEDENCE (OP) (OR (GET OP '*RATFORPRECEDENCE*) 9)) 
(PUT 'OR '*RATFORPRECEDENCE* 1) 
(PUT 'AND '*RATFORPRECEDENCE* 2) 
(PUT 'NOT '*RATFORPRECEDENCE* 3) 
(PUT 'EQUAL '*RATFORPRECEDENCE* 4) 
(PUT 'NEQ '*RATFORPRECEDENCE* 4) 
(PUT 'GREATERP '*RATFORPRECEDENCE* 4) 
(PUT 'GEQ '*RATFORPRECEDENCE* 4) 
(PUT 'LESSP '*RATFORPRECEDENCE* 4) 
(PUT 'LEQ '*RATFORPRECEDENCE* 4) 
(PUT 'PLUS '*RATFORPRECEDENCE* 5) 
(PUT 'TIMES '*RATFORPRECEDENCE* 6) 
(PUT 'QUOTIENT '*RATFORPRECEDENCE* 6) 
(PUT 'MINUS '*RATFORPRECEDENCE* 7) 
(PUT 'EXPT '*RATFORPRECEDENCE* 8) 
(PUT 'RATSTMT 'NUMBER-OF-ARGS 1) 
(PUT 'RATSTMT 'DEFINED-ON-LINE '287) 
(PUT 'RATSTMT 'DEFINED-IN-FILE 'GENTRAN/LSPRAT.RED) 
(PUT 'RATSTMT 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE RATSTMT (STMT)
    (COND ((NULL STMT) NIL) ((LISPLABELP STMT) (RATSTMTNUM STMT))
          ((EQ (CAR STMT) 'LITERAL) (RATLITERAL STMT))
          ((LISPREADP STMT) (RATREAD STMT))
          ((LISPASSIGNP STMT) (RATASSIGN STMT))
          ((LISPPRINTP STMT) (RATWRITE STMT)) ((LISPCONDP STMT) (RATIF STMT))
          ((LISPBREAKP STMT) (RATBREAK STMT)) ((LISPGOP STMT) (RATGOTO STMT))
          ((LISPRETURNP STMT) (RATRETURN STMT))
          ((LISPSTOPP STMT) (RATSTOP STMT)) ((LISPENDP STMT) (RATEND STMT))
          ((LISPREPEATP STMT) (RATREPEAT STMT))
          ((LISPWHILEP STMT) (RATWHILE STMT))
          ((LISPFORP STMT) (RATFORFOR STMT))
          ((LISPSTMTGPP STMT) (RATSTMTGP STMT))
          ((LISPDEFP STMT) (RATSUBPROG STMT))
          ((LISPCALLP STMT) (RATCALL STMT)))) 
(PUT 'RATASSIGN 'NUMBER-OF-ARGS 1) 
(PUT 'RATASSIGN 'DEFINED-ON-LINE '326) 
(PUT 'RATASSIGN 'DEFINED-IN-FILE 'GENTRAN/LSPRAT.RED) 
(PUT 'RATASSIGN 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE RATASSIGN (STMT) (MKFRATASSIGN (CADR STMT) (CADDR STMT))) 
(PUT 'RATBREAK 'NUMBER-OF-ARGS 1) 
(PUT 'RATBREAK 'DEFINED-ON-LINE '329) 
(PUT 'RATBREAK 'DEFINED-IN-FILE 'GENTRAN/LSPRAT.RED) 
(PUT 'RATBREAK 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE RATBREAK (STMT) (MKFRATBREAK)) 
(PUT 'RATCALL 'NUMBER-OF-ARGS 1) 
(PUT 'RATCALL 'DEFINED-ON-LINE '332) 
(PUT 'RATCALL 'DEFINED-IN-FILE 'GENTRAN/LSPRAT.RED) 
(PUT 'RATCALL 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE RATCALL (STMT) (MKFRATCALL (CAR STMT) (CDR STMT))) 
(PUT 'RATFORFOR 'NUMBER-OF-ARGS 1) 
(PUT 'RATFORFOR 'DEFINED-ON-LINE '335) 
(PUT 'RATFORFOR 'DEFINED-IN-FILE 'GENTRAN/LSPRAT.RED) 
(PUT 'RATFORFOR 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE RATFORFOR (STMT)
    (PROG (R VAR LOEXP STEPEXP HIEXP STMTLST)
      (SETQ VAR (CADR STMT))
      (SETQ STMT (CDDR STMT))
      (SETQ LOEXP (CAAR STMT))
      (SETQ STEPEXP (CADAR STMT))
      (SETQ HIEXP (CADDAR STMT))
      (SETQ STMTLST (CDDR STMT))
      (SETQ R (MKFRATDO VAR LOEXP HIEXP STEPEXP))
      (INDENTRATLEVEL (PLUS 1))
      (SETQ R
              (APPEND R
                      (PROG (ST FORALL-RESULT FORALL-ENDPTR)
                        (SETQ ST STMTLST)
                       STARTOVER
                        (COND ((NULL ST) (RETURN NIL)))
                        (SETQ FORALL-RESULT
                                ((LAMBDA (ST) (RATSTMT ST)) (CAR ST)))
                        (SETQ FORALL-ENDPTR (LASTPAIR FORALL-RESULT))
                        (SETQ ST (CDR ST))
                        (COND ((ATOM FORALL-ENDPTR) (GO STARTOVER)))
                       LOOPLABEL
                        (COND ((NULL ST) (RETURN FORALL-RESULT)))
                        (RPLACD FORALL-ENDPTR
                                ((LAMBDA (ST) (RATSTMT ST)) (CAR ST)))
                        (SETQ FORALL-ENDPTR (LASTPAIR FORALL-ENDPTR))
                        (SETQ ST (CDR ST))
                        (GO LOOPLABEL))))
      (INDENTRATLEVEL (MINUS 1))
      (RETURN R))) 
(PUT 'RATEND 'NUMBER-OF-ARGS 1) 
(PUT 'RATEND 'DEFINED-ON-LINE '351) 
(PUT 'RATEND 'DEFINED-IN-FILE 'GENTRAN/LSPRAT.RED) 
(PUT 'RATEND 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE RATEND (STMT) (MKFRATEND)) 
(PUT 'RATGOTO 'NUMBER-OF-ARGS 1) 
(PUT 'RATGOTO 'DEFINED-ON-LINE '354) 
(PUT 'RATGOTO 'DEFINED-IN-FILE 'GENTRAN/LSPRAT.RED) 
(PUT 'RATGOTO 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE RATGOTO (STMT)
    (PROG (STMTNUM)
      (SETQ STMTNUM
              (OR (GET (CADR STMT) '*STMTNUM*)
                  (PUT (CADR STMT) '*STMTNUM* (GENSTMTNUM))))
      (RETURN (MKFRATGO STMTNUM)))) 
(PUT 'RATIF 'NUMBER-OF-ARGS 1) 
(PUT 'RATIF 'DEFINED-ON-LINE '362) 
(PUT 'RATIF 'DEFINED-IN-FILE 'GENTRAN/LSPRAT.RED) 
(PUT 'RATIF 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE RATIF (STMT)
    (PROG (R ST)
      (SETQ R (MKFRATIF (CAADR STMT)))
      (INDENTRATLEVEL (PLUS 1))
      (SETQ ST (SEQTOGP (CDADR STMT)))
      (COND
       ((AND (EQCAR ST 'COND) (EQUAL (LENGTH ST) 2))
        (SETQ ST (MKSTMTGP 0 (LIST ST)))))
      (SETQ R (APPEND R (RATSTMT ST)))
      (INDENTRATLEVEL (MINUS 1))
      (SETQ STMT (CDR STMT))
      (PROG ()
       WHILELABEL
        (COND
         ((NOT (AND (SETQ STMT (CDR STMT)) (NEQ (CAAR STMT) T))) (RETURN NIL)))
        (PROGN
         (SETQ R (APPEND R (MKFRATELSEIF (CAAR STMT))))
         (INDENTRATLEVEL (PLUS 1))
         (SETQ ST (SEQTOGP (CDAR STMT)))
         (COND
          ((AND (EQCAR ST 'COND) (EQUAL (LENGTH ST) 2))
           (SETQ ST (MKSTMTGP 0 (LIST ST)))))
         (SETQ R (APPEND R (RATSTMT ST)))
         (INDENTRATLEVEL (MINUS 1)))
        (GO WHILELABEL))
      (COND
       (STMT
        (PROGN
         (SETQ R (APPEND R (MKFRATELSE)))
         (INDENTRATLEVEL (PLUS 1))
         (SETQ ST (SEQTOGP (CDAR STMT)))
         (COND
          ((AND (EQCAR ST 'COND) (EQUAL (LENGTH ST) 2))
           (SETQ ST (MKSTMTGP 0 (LIST ST)))))
         (SETQ R (APPEND R (RATSTMT ST)))
         (INDENTRATLEVEL (MINUS 1)))))
      (RETURN R))) 
(PUT 'RATLITERAL 'NUMBER-OF-ARGS 1) 
(PUT 'RATLITERAL 'DEFINED-ON-LINE '396) 
(PUT 'RATLITERAL 'DEFINED-IN-FILE 'GENTRAN/LSPRAT.RED) 
(PUT 'RATLITERAL 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE RATLITERAL (STMT) (MKFRATLITERAL (CDR STMT))) 
(PUT 'RATREAD 'NUMBER-OF-ARGS 1) 
(PUT 'RATREAD 'DEFINED-ON-LINE '399) 
(PUT 'RATREAD 'DEFINED-IN-FILE 'GENTRAN/LSPRAT.RED) 
(PUT 'RATREAD 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE RATREAD (STMT) (MKFRATREAD (CADR STMT))) 
(PUT 'RATREPEAT 'NUMBER-OF-ARGS 1) 
(PUT 'RATREPEAT 'DEFINED-ON-LINE '402) 
(PUT 'RATREPEAT 'DEFINED-IN-FILE 'GENTRAN/LSPRAT.RED) 
(PUT 'RATREPEAT 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE RATREPEAT (STMT)
    (PROG (R STMTLST LOGEXP)
      (SETQ STMT (REVERSE (CDR STMT)))
      (SETQ LOGEXP (CAR STMT))
      (SETQ STMTLST (REVERSE (CDR STMT)))
      (SETQ R (MKFRATREPEAT))
      (INDENTRATLEVEL (PLUS 1))
      (SETQ R
              (APPEND R
                      (PROG (ST FORALL-RESULT FORALL-ENDPTR)
                        (SETQ ST STMTLST)
                       STARTOVER
                        (COND ((NULL ST) (RETURN NIL)))
                        (SETQ FORALL-RESULT
                                ((LAMBDA (ST) (RATSTMT ST)) (CAR ST)))
                        (SETQ FORALL-ENDPTR (LASTPAIR FORALL-RESULT))
                        (SETQ ST (CDR ST))
                        (COND ((ATOM FORALL-ENDPTR) (GO STARTOVER)))
                       LOOPLABEL
                        (COND ((NULL ST) (RETURN FORALL-RESULT)))
                        (RPLACD FORALL-ENDPTR
                                ((LAMBDA (ST) (RATSTMT ST)) (CAR ST)))
                        (SETQ FORALL-ENDPTR (LASTPAIR FORALL-ENDPTR))
                        (SETQ ST (CDR ST))
                        (GO LOOPLABEL))))
      (INDENTRATLEVEL (MINUS 1))
      (RETURN (APPEND R (MKFRATUNTIL LOGEXP))))) 
(PUT 'RATRETURN 'NUMBER-OF-ARGS 1) 
(PUT 'RATRETURN 'DEFINED-ON-LINE '415) 
(PUT 'RATRETURN 'DEFINED-IN-FILE 'GENTRAN/LSPRAT.RED) 
(PUT 'RATRETURN 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE RATRETURN (STMT)
    (COND ((CDR STMT) (MKFRATRETURN (CADR STMT))) (T (MKFRATRETURN NIL)))) 
(PUT 'RATSTMTGP 'NUMBER-OF-ARGS 1) 
(PUT 'RATSTMTGP 'DEFINED-ON-LINE '421) 
(PUT 'RATSTMTGP 'DEFINED-IN-FILE 'GENTRAN/LSPRAT.RED) 
(PUT 'RATSTMTGP 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE RATSTMTGP (STMTGP)
    (PROG (R)
      (COND ((EQ (CAR STMTGP) 'PROGN) (SETQ STMTGP (CDR STMTGP)))
            (T (SETQ STMTGP (CDDR STMTGP))))
      (SETQ R (MKFRATBEGINGP))
      (INDENTRATLEVEL (PLUS 1))
      (SETQ R
              (APPEND R
                      (PROG (STMT FORALL-RESULT FORALL-ENDPTR)
                        (SETQ STMT STMTGP)
                       STARTOVER
                        (COND ((NULL STMT) (RETURN NIL)))
                        (SETQ FORALL-RESULT
                                ((LAMBDA (STMT) (RATSTMT STMT)) (CAR STMT)))
                        (SETQ FORALL-ENDPTR (LASTPAIR FORALL-RESULT))
                        (SETQ STMT (CDR STMT))
                        (COND ((ATOM FORALL-ENDPTR) (GO STARTOVER)))
                       LOOPLABEL
                        (COND ((NULL STMT) (RETURN FORALL-RESULT)))
                        (RPLACD FORALL-ENDPTR
                                ((LAMBDA (STMT) (RATSTMT STMT)) (CAR STMT)))
                        (SETQ FORALL-ENDPTR (LASTPAIR FORALL-ENDPTR))
                        (SETQ STMT (CDR STMT))
                        (GO LOOPLABEL))))
      (INDENTRATLEVEL (MINUS 1))
      (RETURN (APPEND R (MKFRATENDGP))))) 
(PUT 'RATSTMTNUM 'NUMBER-OF-ARGS 1) 
(PUT 'RATSTMTNUM 'DEFINED-ON-LINE '435) 
(PUT 'RATSTMTNUM 'DEFINED-IN-FILE 'GENTRAN/LSPRAT.RED) 
(PUT 'RATSTMTNUM 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE RATSTMTNUM (LABEL)
    (PROG (STMTNUM)
      (SETQ STMTNUM
              (OR (GET LABEL '*STMTNUM*) (PUT LABEL '*STMTNUM* (GENSTMTNUM))))
      (RETURN (MKFRATCONTINUE STMTNUM)))) 
(PUT 'RATSTOP 'NUMBER-OF-ARGS 1) 
(PUT 'RATSTOP 'DEFINED-ON-LINE '443) 
(PUT 'RATSTOP 'DEFINED-IN-FILE 'GENTRAN/LSPRAT.RED) 
(PUT 'RATSTOP 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE RATSTOP (STMT) (MKFRATSTOP)) 
(PUT 'RATWHILE 'NUMBER-OF-ARGS 1) 
(PUT 'RATWHILE 'DEFINED-ON-LINE '446) 
(PUT 'RATWHILE 'DEFINED-IN-FILE 'GENTRAN/LSPRAT.RED) 
(PUT 'RATWHILE 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE RATWHILE (STMT)
    (PROG (R LOGEXP STMTLST)
      (SETQ LOGEXP (CADR STMT))
      (SETQ STMTLST (CDDR STMT))
      (SETQ R (MKFRATWHILE LOGEXP))
      (INDENTRATLEVEL (PLUS 1))
      (SETQ R
              (APPEND R
                      (PROG (ST FORALL-RESULT FORALL-ENDPTR)
                        (SETQ ST STMTLST)
                       STARTOVER
                        (COND ((NULL ST) (RETURN NIL)))
                        (SETQ FORALL-RESULT
                                ((LAMBDA (ST) (RATSTMT ST)) (CAR ST)))
                        (SETQ FORALL-ENDPTR (LASTPAIR FORALL-RESULT))
                        (SETQ ST (CDR ST))
                        (COND ((ATOM FORALL-ENDPTR) (GO STARTOVER)))
                       LOOPLABEL
                        (COND ((NULL ST) (RETURN FORALL-RESULT)))
                        (RPLACD FORALL-ENDPTR
                                ((LAMBDA (ST) (RATSTMT ST)) (CAR ST)))
                        (SETQ FORALL-ENDPTR (LASTPAIR FORALL-ENDPTR))
                        (SETQ ST (CDR ST))
                        (GO LOOPLABEL))))
      (INDENTRATLEVEL (MINUS 1))
      (RETURN R))) 
(PUT 'RATWRITE 'NUMBER-OF-ARGS 1) 
(PUT 'RATWRITE 'DEFINED-ON-LINE '458) 
(PUT 'RATWRITE 'DEFINED-IN-FILE 'GENTRAN/LSPRAT.RED) 
(PUT 'RATWRITE 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE RATWRITE (STMT) (MKFRATWRITE (CDR STMT))) 
(DE RATEXP_NAME (U)
    (COND ((ATOM U) (LIST U))
          (T (RPLACA (RATEXP (CONS 'DUMMYARRAYTOKEN (CDR U))) (CAR U))))) 
(PUT 'RATEXP_NAME 'NUMBER-OF-ARGS 1) 
(PUT 'RATEXP_NAME 'DEFINED-ON-LINE '472) 
(PUT 'RATEXP_NAME 'DEFINED-IN-FILE 'GENTRAN/LSPRAT.RED) 
(PUT 'RATEXP_NAME 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(PUTC 'RATEXP_NAME 'INLINE
      '(LAMBDA (U)
         (COND ((ATOM U) (LIST U))
               (T (RPLACA (RATEXP (CONS 'DUMMYARRAYTOKEN (CDR U))) (CAR U)))))) 
(PUT 'MKFRATASSIGN 'NUMBER-OF-ARGS 2) 
(PUT 'MKFRATASSIGN 'DEFINED-ON-LINE '476) 
(PUT 'MKFRATASSIGN 'DEFINED-IN-FILE 'GENTRAN/LSPRAT.RED) 
(PUT 'MKFRATASSIGN 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE MKFRATASSIGN (LHS RHS)
    (APPEND
     (APPEND
      (CONS (MKRATTAB)
            (COND ((ATOM LHS) (LIST LHS))
                  (T
                   (RPLACA (RATEXP (CONS 'DUMMYARRAYTOKEN (CDR LHS)))
                           (CAR LHS)))))
      (CONS '= (RATEXP RHS)))
     (LIST (MKRATTERPRI)))) 
(PUT 'MKFRATBEGINGP 'NUMBER-OF-ARGS 0) 
(PUT 'MKFRATBEGINGP 'DEFINED-ON-LINE '480) 
(PUT 'MKFRATBEGINGP 'DEFINED-IN-FILE 'GENTRAN/LSPRAT.RED) 
(PUT 'MKFRATBEGINGP 'PROCEDURE_TYPE '(ARROW UNIT GENERAL)) 
(DE MKFRATBEGINGP NIL (LIST (MKRATTAB) '{ (MKRATTERPRI))) 
(PUT 'MKFRATBREAK 'NUMBER-OF-ARGS 0) 
(PUT 'MKFRATBREAK 'DEFINED-ON-LINE '483) 
(PUT 'MKFRATBREAK 'DEFINED-IN-FILE 'GENTRAN/LSPRAT.RED) 
(PUT 'MKFRATBREAK 'PROCEDURE_TYPE '(ARROW UNIT GENERAL)) 
(DE MKFRATBREAK NIL (LIST (MKRATTAB) 'BREAK (MKRATTERPRI))) 
(PUT 'MKFRATCALL 'NUMBER-OF-ARGS 2) 
(PUT 'MKFRATCALL 'DEFINED-ON-LINE '486) 
(PUT 'MKFRATCALL 'DEFINED-IN-FILE 'GENTRAN/LSPRAT.RED) 
(PUT 'MKFRATCALL 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE MKFRATCALL (FNAME PARAMS)
    (PROGN
     (COND
      (PARAMS
       (SETQ PARAMS
               (APPEND
                (APPEND (LIST '|(|)
                        (PROG (P FORALL-RESULT FORALL-ENDPTR)
                          (SETQ P (INSERTCOMMAS PARAMS))
                         STARTOVER
                          (COND ((NULL P) (RETURN NIL)))
                          (SETQ FORALL-RESULT
                                  ((LAMBDA (P) (RATEXP P)) (CAR P)))
                          (SETQ FORALL-ENDPTR (LASTPAIR FORALL-RESULT))
                          (SETQ P (CDR P))
                          (COND ((ATOM FORALL-ENDPTR) (GO STARTOVER)))
                         LOOPLABEL
                          (COND ((NULL P) (RETURN FORALL-RESULT)))
                          (RPLACD FORALL-ENDPTR
                                  ((LAMBDA (P) (RATEXP P)) (CAR P)))
                          (SETQ FORALL-ENDPTR (LASTPAIR FORALL-ENDPTR))
                          (SETQ P (CDR P))
                          (GO LOOPLABEL)))
                (LIST '|)|)))))
     (COND
      (*MAKECALLS
       (APPEND (APPEND (LIST (MKRATTAB) 'CALL BLANK) (RATEXP FNAME))
               (APPEND PARAMS (LIST (MKRATTERPRI)))))
      (T (APPEND (RATEXP FNAME) PARAMS))))) 
(PUT 'MKFRATCONTINUE 'NUMBER-OF-ARGS 1) 
(PUT 'MKFRATCONTINUE 'DEFINED-ON-LINE '503) 
(PUT 'MKFRATCONTINUE 'DEFINED-IN-FILE 'GENTRAN/LSPRAT.RED) 
(PUT 'MKFRATCONTINUE 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE MKFRATCONTINUE (STMTNUM)
    (LIST STMTNUM BLANK (MKRATTAB) 'CONTINUE (MKRATTERPRI))) 
(PUT 'MKFRATDEC 'NUMBER-OF-ARGS 2) 
(PUT 'MKFRATDEC 'DEFINED-ON-LINE '507) 
(PUT 'MKFRATDEC 'DEFINED-IN-FILE 'GENTRAN/LSPRAT.RED) 
(PUT 'MKFRATDEC 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE MKFRATDEC (TYPE VARLIST)
    (PROGN
     (COND ((EQUAL TYPE 'SCALAR) (SETQ TYPE DEFTYPE*)))
     (COND
      ((AND TYPE (NULL (MEMQ TYPE *LEGALFORTTYPES*)))
       (GENTRANERR 'E TYPE "Illegal Ratfor type. " NIL)))
     (SETQ TYPE (OR TYPE 'DIMENSION))
     (COND
      (*DOUBLE
       (COND ((MEMQ TYPE '(REAL REAL*8)) (SETQ TYPE '|DOUBLE PRECISION|))
             ((MEMQ TYPE '(|IMPLICIT REAL| |IMPLICIT REAL*8|))
              (SETQ TYPE '|IMPLICIT DOUBLE PRECISION|))
             ((EQ TYPE 'COMPLEX) (SETQ TYPE 'COMPLEX*16))
             ((EQ TYPE '|IMPLICIT COMPLEX|)
              (SETQ TYPE '|IMPLICIT COMPLEX*16|)))))
     (SETQ VARLIST
             (PROG (V FORALL-RESULT FORALL-ENDPTR)
               (SETQ V (INSERTCOMMAS VARLIST))
              STARTOVER
               (COND ((NULL V) (RETURN NIL)))
               (SETQ FORALL-RESULT
                       ((LAMBDA (V)
                          (COND ((ATOM V) (LIST V))
                                (T
                                 (RPLACA
                                  (RATEXP (CONS 'DUMMYARRAYTOKEN (CDR V)))
                                  (CAR V)))))
                        (CAR V)))
               (SETQ FORALL-ENDPTR (LASTPAIR FORALL-RESULT))
               (SETQ V (CDR V))
               (COND ((ATOM FORALL-ENDPTR) (GO STARTOVER)))
              LOOPLABEL
               (COND ((NULL V) (RETURN FORALL-RESULT)))
               (RPLACD FORALL-ENDPTR
                       ((LAMBDA (V)
                          (COND ((ATOM V) (LIST V))
                                (T
                                 (RPLACA
                                  (RATEXP (CONS 'DUMMYARRAYTOKEN (CDR V)))
                                  (CAR V)))))
                        (CAR V)))
               (SETQ FORALL-ENDPTR (LASTPAIR FORALL-ENDPTR))
               (SETQ V (CDR V))
               (GO LOOPLABEL)))
     (COND
      ((IMPLICITP TYPE)
       (APPEND (LIST (MKRATTAB) TYPE BLANK '|(|)
               (APPEND VARLIST (LIST '|)| (MKRATTERPRI)))))
      (T
       (APPEND (LIST (MKRATTAB) TYPE BLANK)
               (APPEND VARLIST (LIST (MKRATTERPRI)))))))) 
(PUT 'MKFRATDO 'NUMBER-OF-ARGS 4) 
(PUT 'MKFRATDO 'DEFINED-ON-LINE '535) 
(PUT 'MKFRATDO 'DEFINED-IN-FILE 'GENTRAN/LSPRAT.RED) 
(PUT 'MKFRATDO 'PROCEDURE_TYPE
     '(ARROW (TIMES GENERAL GENERAL GENERAL GENERAL) GENERAL)) 
(DE MKFRATDO (VAR LO HI INCR)
    (PROGN
     (COND ((ONEP INCR) (SETQ INCR NIL))
           (INCR (SETQ INCR (CONS '|,| (RATEXP INCR)))))
     (APPEND
      (APPEND (APPEND (LIST (MKRATTAB) *DO* BLANK) (RATEXP VAR))
              (APPEND (CONS '= (RATEXP LO)) (CONS '|,| (RATEXP HI))))
      (APPEND INCR (LIST (MKRATTERPRI)))))) 
(PUT 'MKFRATELSE 'NUMBER-OF-ARGS 0) 
(PUT 'MKFRATELSE 'DEFINED-ON-LINE '546) 
(PUT 'MKFRATELSE 'DEFINED-IN-FILE 'GENTRAN/LSPRAT.RED) 
(PUT 'MKFRATELSE 'PROCEDURE_TYPE '(ARROW UNIT GENERAL)) 
(DE MKFRATELSE NIL (LIST (MKRATTAB) 'ELSE (MKRATTERPRI))) 
(PUT 'MKFRATELSEIF 'NUMBER-OF-ARGS 1) 
(PUT 'MKFRATELSEIF 'DEFINED-ON-LINE '549) 
(PUT 'MKFRATELSEIF 'DEFINED-IN-FILE 'GENTRAN/LSPRAT.RED) 
(PUT 'MKFRATELSEIF 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE MKFRATELSEIF (EXP)
    (APPEND (APPEND (LIST (MKRATTAB) 'ELSE BLANK 'IF BLANK '|(|) (RATEXP EXP))
            (LIST '|)| (MKRATTERPRI)))) 
(PUT 'MKFRATEND 'NUMBER-OF-ARGS 0) 
(PUT 'MKFRATEND 'DEFINED-ON-LINE '553) 
(PUT 'MKFRATEND 'DEFINED-IN-FILE 'GENTRAN/LSPRAT.RED) 
(PUT 'MKFRATEND 'PROCEDURE_TYPE '(ARROW UNIT GENERAL)) 
(DE MKFRATEND NIL (LIST (MKRATTAB) 'END (MKRATTERPRI))) 
(PUT 'MKFRATENDGP 'NUMBER-OF-ARGS 0) 
(PUT 'MKFRATENDGP 'DEFINED-ON-LINE '556) 
(PUT 'MKFRATENDGP 'DEFINED-IN-FILE 'GENTRAN/LSPRAT.RED) 
(PUT 'MKFRATENDGP 'PROCEDURE_TYPE '(ARROW UNIT GENERAL)) 
(DE MKFRATENDGP NIL (LIST (MKRATTAB) '} (MKRATTERPRI))) 
(PUT 'MKFRATGO 'NUMBER-OF-ARGS 1) 
(PUT 'MKFRATGO 'DEFINED-ON-LINE '559) 
(PUT 'MKFRATGO 'DEFINED-IN-FILE 'GENTRAN/LSPRAT.RED) 
(PUT 'MKFRATGO 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE MKFRATGO (STMTNUM) (LIST (MKRATTAB) 'GOTO BLANK STMTNUM (MKRATTERPRI))) 
(PUT 'MKFRATIF 'NUMBER-OF-ARGS 1) 
(PUT 'MKFRATIF 'DEFINED-ON-LINE '562) 
(PUT 'MKFRATIF 'DEFINED-IN-FILE 'GENTRAN/LSPRAT.RED) 
(PUT 'MKFRATIF 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE MKFRATIF (EXP)
    (APPEND (APPEND (LIST (MKRATTAB) 'IF BLANK '|(|) (RATEXP EXP))
            (LIST '|)| (MKRATTERPRI)))) 
(PUT 'MKFRATLITERAL 'NUMBER-OF-ARGS 1) 
(PUT 'MKFRATLITERAL 'DEFINED-ON-LINE '566) 
(PUT 'MKFRATLITERAL 'DEFINED-IN-FILE 'GENTRAN/LSPRAT.RED) 
(PUT 'MKFRATLITERAL 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE MKFRATLITERAL (ARGS)
    (PROG (A FORALL-RESULT FORALL-ENDPTR)
      (SETQ A ARGS)
     STARTOVER
      (COND ((NULL A) (RETURN NIL)))
      (SETQ FORALL-RESULT
              ((LAMBDA (A)
                 (COND ((EQ A 'TAB*) (LIST (MKRATTAB)))
                       ((EQ A 'CR*) (LIST (MKRATTERPRI)))
                       ((PAIRP A) (RATEXP A)) (T (LIST (STRIPQUOTES A)))))
               (CAR A)))
      (SETQ FORALL-ENDPTR (LASTPAIR FORALL-RESULT))
      (SETQ A (CDR A))
      (COND ((ATOM FORALL-ENDPTR) (GO STARTOVER)))
     LOOPLABEL
      (COND ((NULL A) (RETURN FORALL-RESULT)))
      (RPLACD FORALL-ENDPTR
              ((LAMBDA (A)
                 (COND ((EQ A 'TAB*) (LIST (MKRATTAB)))
                       ((EQ A 'CR*) (LIST (MKRATTERPRI)))
                       ((PAIRP A) (RATEXP A)) (T (LIST (STRIPQUOTES A)))))
               (CAR A)))
      (SETQ FORALL-ENDPTR (LASTPAIR FORALL-ENDPTR))
      (SETQ A (CDR A))
      (GO LOOPLABEL))) 
(PUT 'MKFRATREAD 'NUMBER-OF-ARGS 1) 
(PUT 'MKFRATREAD 'DEFINED-ON-LINE '577) 
(PUT 'MKFRATREAD 'DEFINED-IN-FILE 'GENTRAN/LSPRAT.RED) 
(PUT 'MKFRATREAD 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE MKFRATREAD (VAR)
    (APPEND (LIST (MKRATTAB) 'READ '|(*,*)| BLANK)
            (APPEND (RATEXP VAR) (LIST (MKRATTERPRI))))) 
(PUT 'MKFRATREPEAT 'NUMBER-OF-ARGS 0) 
(PUT 'MKFRATREPEAT 'DEFINED-ON-LINE '581) 
(PUT 'MKFRATREPEAT 'DEFINED-IN-FILE 'GENTRAN/LSPRAT.RED) 
(PUT 'MKFRATREPEAT 'PROCEDURE_TYPE '(ARROW UNIT GENERAL)) 
(DE MKFRATREPEAT NIL (LIST (MKRATTAB) 'REPEAT (MKRATTERPRI))) 
(PUT 'MKFRATRETURN 'NUMBER-OF-ARGS 1) 
(PUT 'MKFRATRETURN 'DEFINED-ON-LINE '584) 
(PUT 'MKFRATRETURN 'DEFINED-IN-FILE 'GENTRAN/LSPRAT.RED) 
(PUT 'MKFRATRETURN 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE MKFRATRETURN (EXP)
    (COND
     (EXP
      (APPEND (APPEND (LIST (MKRATTAB) 'RETURN '|(|) (RATEXP EXP))
              (LIST '|)| (MKRATTERPRI))))
     (T (LIST (MKRATTAB) 'RETURN (MKRATTERPRI))))) 
(PUT 'MKFRATSTOP 'NUMBER-OF-ARGS 0) 
(PUT 'MKFRATSTOP 'DEFINED-ON-LINE '591) 
(PUT 'MKFRATSTOP 'DEFINED-IN-FILE 'GENTRAN/LSPRAT.RED) 
(PUT 'MKFRATSTOP 'PROCEDURE_TYPE '(ARROW UNIT GENERAL)) 
(DE MKFRATSTOP NIL (LIST (MKRATTAB) 'STOP (MKRATTERPRI))) 
(PUT 'MKFRATSUBPROGDEC 'NUMBER-OF-ARGS 4) 
(PUT 'MKFRATSUBPROGDEC 'DEFINED-ON-LINE '594) 
(PUT 'MKFRATSUBPROGDEC 'DEFINED-IN-FILE 'GENTRAN/LSPRAT.RED) 
(PUT 'MKFRATSUBPROGDEC 'PROCEDURE_TYPE
     '(ARROW (TIMES GENERAL GENERAL GENERAL GENERAL) GENERAL)) 
(DE MKFRATSUBPROGDEC (TYPE STYPE NAME PARAMS)
    (PROGN
     (COND
      (PARAMS
       (SETQ PARAMS
               (APPEND
                (CONS '|(|
                      (PROG (P FORALL-RESULT FORALL-ENDPTR)
                        (SETQ P (INSERTCOMMAS PARAMS))
                       STARTOVER
                        (COND ((NULL P) (RETURN NIL)))
                        (SETQ FORALL-RESULT ((LAMBDA (P) (RATEXP P)) (CAR P)))
                        (SETQ FORALL-ENDPTR (LASTPAIR FORALL-RESULT))
                        (SETQ P (CDR P))
                        (COND ((ATOM FORALL-ENDPTR) (GO STARTOVER)))
                       LOOPLABEL
                        (COND ((NULL P) (RETURN FORALL-RESULT)))
                        (RPLACD FORALL-ENDPTR
                                ((LAMBDA (P) (RATEXP P)) (CAR P)))
                        (SETQ FORALL-ENDPTR (LASTPAIR FORALL-ENDPTR))
                        (SETQ P (CDR P))
                        (GO LOOPLABEL)))
                (LIST '|)|)))))
     (COND (TYPE (SETQ TYPE (LIST (MKRATTAB) TYPE BLANK STYPE BLANK)))
           (T (SETQ TYPE (LIST (MKRATTAB) STYPE BLANK))))
     (APPEND (APPEND TYPE (RATEXP NAME)) (APPEND PARAMS (LIST (MKRATTERPRI)))))) 
(PUT 'MKFRATUNTIL 'NUMBER-OF-ARGS 1) 
(PUT 'MKFRATUNTIL 'DEFINED-ON-LINE '608) 
(PUT 'MKFRATUNTIL 'DEFINED-IN-FILE 'GENTRAN/LSPRAT.RED) 
(PUT 'MKFRATUNTIL 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE MKFRATUNTIL (LOGEXP)
    (APPEND (LIST (MKRATTAB) 'UNTIL BLANK '|(|)
            (APPEND (RATEXP LOGEXP) (LIST '|)| (MKRATTERPRI))))) 
(PUT 'MKFRATWHILE 'NUMBER-OF-ARGS 1) 
(PUT 'MKFRATWHILE 'DEFINED-ON-LINE '612) 
(PUT 'MKFRATWHILE 'DEFINED-IN-FILE 'GENTRAN/LSPRAT.RED) 
(PUT 'MKFRATWHILE 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE MKFRATWHILE (EXP)
    (APPEND (APPEND (LIST (MKRATTAB) 'WHILE BLANK '|(|) (RATEXP EXP))
            (LIST '|)| (MKRATTERPRI)))) 
(PUT 'MKFRATWRITE 'NUMBER-OF-ARGS 1) 
(PUT 'MKFRATWRITE 'DEFINED-ON-LINE '616) 
(PUT 'MKFRATWRITE 'DEFINED-IN-FILE 'GENTRAN/LSPRAT.RED) 
(PUT 'MKFRATWRITE 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE MKFRATWRITE (ARGLIST)
    (APPEND
     (APPEND (LIST (MKRATTAB) 'WRITE '|(*,*)| BLANK)
             (PROG (ARG FORALL-RESULT FORALL-ENDPTR)
               (SETQ ARG (INSERTCOMMAS ARGLIST))
              STARTOVER
               (COND ((NULL ARG) (RETURN NIL)))
               (SETQ FORALL-RESULT ((LAMBDA (ARG) (RATEXP ARG)) (CAR ARG)))
               (SETQ FORALL-ENDPTR (LASTPAIR FORALL-RESULT))
               (SETQ ARG (CDR ARG))
               (COND ((ATOM FORALL-ENDPTR) (GO STARTOVER)))
              LOOPLABEL
               (COND ((NULL ARG) (RETURN FORALL-RESULT)))
               (RPLACD FORALL-ENDPTR ((LAMBDA (ARG) (RATEXP ARG)) (CAR ARG)))
               (SETQ FORALL-ENDPTR (LASTPAIR FORALL-ENDPTR))
               (SETQ ARG (CDR ARG))
               (GO LOOPLABEL)))
     (LIST (MKRATTERPRI)))) 
(PUT 'MKRATTAB 'NUMBER-OF-ARGS 0) 
(PUT 'MKRATTAB 'DEFINED-ON-LINE '625) 
(PUT 'MKRATTAB 'DEFINED-IN-FILE 'GENTRAN/LSPRAT.RED) 
(PUT 'MKRATTAB 'PROCEDURE_TYPE '(ARROW UNIT GENERAL)) 
(DE MKRATTAB NIL (LIST 'RATTAB RATCURRIND*)) 
(PUT 'INDENTRATLEVEL 'NUMBER-OF-ARGS 1) 
(PUT 'INDENTRATLEVEL 'DEFINED-ON-LINE '629) 
(PUT 'INDENTRATLEVEL 'DEFINED-IN-FILE 'GENTRAN/LSPRAT.RED) 
(PUT 'INDENTRATLEVEL 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE INDENTRATLEVEL (N)
    (SETQ RATCURRIND*
            (PROGN
             (SETQ ALGLIST* (CONS NIL NIL))
             (PLUS RATCURRIND* (TIMES N TABLEN*))))) 
(PUT 'MKRATTERPRI 'NUMBER-OF-ARGS 0) 
(PUT 'MKRATTERPRI 'DEFINED-ON-LINE '633) 
(PUT 'MKRATTERPRI 'DEFINED-IN-FILE 'GENTRAN/LSPRAT.RED) 
(PUT 'MKRATTERPRI 'PROCEDURE_TYPE '(ARROW UNIT GENERAL)) 
(DE MKRATTERPRI NIL (LIST 'RATTERPRI)) 
(PUT 'FORMATRAT 'NUMBER-OF-ARGS 1) 
(PUT 'FORMATRAT 'DEFINED-ON-LINE '639) 
(PUT 'FORMATRAT 'DEFINED-IN-FILE 'GENTRAN/LSPRAT.RED) 
(PUT 'FORMATRAT 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE FORMATRAT (LST)
    (PROG (LINELEN STR)
      (SETQ LINELEN (LINELENGTH 300))
      (SETQ *POSN* 0)
      (PROG (ELT)
        (SETQ ELT LST)
       LAB
        (COND ((NULL ELT) (RETURN NIL)))
        ((LAMBDA (ELT)
           (COND ((PAIRP ELT) (LISPEVAL ELT))
                 (T
                  (PROGN
                   (SETQ STR (EXPLODE2 ELT))
                   (COND
                    ((FLOATP ELT)
                     (COND
                      (*DOUBLE
                       (COND ((MEMQ 'E STR) (SETQ STR (SUBST 'D 'E STR)))
                             ((MEMQ 'E STR) (SETQ STR (SUBST 'D 'E STR)))
                             (T (SETQ STR (APPEND STR '(D |0|))))))
                      (T (SETQ STR (SUBST 'E 'E STR))))))
                   (COND
                    ((GREATERP (PLUS *POSN* (LENGTH STR)) RATLINELEN*)
                     (RATCONTLINE)))
                   (PROG (U)
                     (SETQ U STR)
                    LAB
                     (COND ((NULL U) (RETURN NIL)))
                     ((LAMBDA (U) (PPRIN2 U)) (CAR U))
                     (SETQ U (CDR U))
                     (GO LAB))))))
         (CAR ELT))
        (SETQ ELT (CDR ELT))
        (GO LAB))
      (LINELENGTH LINELEN))) 
(PUT 'RATCONTLINE 'NUMBER-OF-ARGS 0) 
(PUT 'RATCONTLINE 'DEFINED-ON-LINE '664) 
(PUT 'RATCONTLINE 'DEFINED-IN-FILE 'GENTRAN/LSPRAT.RED) 
(PUT 'RATCONTLINE 'PROCEDURE_TYPE '(ARROW UNIT GENERAL)) 
(DE RATCONTLINE NIL (PROGN (RATTERPRI) (RATTAB *RATCURRIND*) (PPRIN2 " "))) 
(PUT 'RATTERPRI 'NUMBER-OF-ARGS 0) 
(PUT 'RATTERPRI 'DEFINED-ON-LINE '671) 
(PUT 'RATTERPRI 'DEFINED-IN-FILE 'GENTRAN/LSPRAT.RED) 
(PUT 'RATTERPRI 'PROCEDURE_TYPE '(ARROW UNIT GENERAL)) 
(DE RATTERPRI NIL (PTERPRI)) 
(PUT 'RATTAB 'NUMBER-OF-ARGS 1) 
(PUT 'RATTAB 'DEFINED-ON-LINE '674) 
(PUT 'RATTAB 'DEFINED-IN-FILE 'GENTRAN/LSPRAT.RED) 
(PUT 'RATTAB 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE RATTAB (N)
    (PROGN
     (SETQ *RATCURRIND* (MIN0 N (DIFFERENCE RATLINELEN* MINRATLINELEN*)))
     (COND
      ((GREATERP (SETQ N (DIFFERENCE *RATCURRIND* *POSN*)) 0)
       (PPRIN2 (NSPACES N)))))) 
(PUT 'PROCRATTEM 'NUMBER-OF-ARGS 0) 
(PUT 'PROCRATTEM 'DEFINED-ON-LINE '683) 
(PUT 'PROCRATTEM 'DEFINED-IN-FILE 'GENTRAN/LSPRAT.RED) 
(PUT 'PROCRATTEM 'PROCEDURE_TYPE '(ARROW UNIT GENERAL)) 
(DE PROCRATTEM NIL
    (PROG (C LINELEN)
      (SETQ LINELEN (LINELENGTH 150))
      (SETQ C (READCH))
      (PROG ()
       WHILELABEL
        (COND ((NOT (NEQ C $EOF$)) (RETURN NIL)))
        (COND
         ((MEMQ C '(|f| F |s| S))
          (PROGN (PPRIN2 C) (SETQ C (PROCSUBPROGHEADING C))))
         ((EQ C '|#|) (SETQ C (PROCRATCOMM)))
         ((EQ C '|;|) (SETQ C (PROCACTIVE)))
         ((EQ C $EOL$) (PROGN (PTERPRI) (SETQ C (READCH))))
         (T (PROGN (PPRIN2 C) (SETQ C (READCH)))))
        (GO WHILELABEL))
      (LINELENGTH LINELEN))) 
(PUT 'PROCRATCOMM 'NUMBER-OF-ARGS 0) 
(PUT 'PROCRATCOMM 'DEFINED-ON-LINE '711) 
(PUT 'PROCRATCOMM 'DEFINED-IN-FILE 'GENTRAN/LSPRAT.RED) 
(PUT 'PROCRATCOMM 'PROCEDURE_TYPE '(ARROW UNIT GENERAL)) 
(DE PROCRATCOMM NIL
    (PROG (C)
      (PPRIN2 '|#|)
      (PROG ()
       WHILELABEL
        (COND ((NOT (NEQ (SETQ C (READCH)) $EOL$)) (RETURN NIL)))
        (PPRIN2 C)
        (GO WHILELABEL))
      (PTERPRI)
      (RETURN (READCH)))) 
(ENDMODULE) 