(cl:declaim (cl:optimize cl:debug cl:safety))
(cl:declaim (sb-ext:muffle-conditions sb-ext:compiler-note cl:style-warning))
(MODULE (LIST 'OPMTCH)) 
(FLUID '(*UNCACHED FRLIS* MATCHLENGTH* SUBFG*)) 
(SETQ MATCHLENGTH* (PROGN (SETQ ALGLIST* (CONS NIL NIL)) 5)) 
(SHARE (LIST 'MATCHLENGTH*)) 
(NEWTOK '((/ /) SLASH)) 
(MKOP 'SLASH) 
(INFIX (LIST 'SLASH)) 
(PRECEDENCE (LIST 'SLASH 'QUOTIENT)) 
(PUT 'EMTCH 'NUMBER-OF-ARGS 1) 
(PUT 'EMTCH 'DEFINED-ON-LINE '52) 
(PUT 'EMTCH 'DEFINED-IN-FILE 'ALG/OPMTCH.RED) 
(PUT 'EMTCH 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE EMTCH (U)
    (COND ((ATOM U) U) (T ((LAMBDA (X) (COND (X X) (T U))) (OPMTCH U))))) 
(DE ASSOC_LOOKUP (U TABLE) (COND ((NULL TABLE) NIL) (T (GETHASH U TABLE)))) 
(PUT 'ASSOC_LOOKUP 'NUMBER-OF-ARGS 2) 
(PUT 'ASSOC_LOOKUP 'DEFINED-ON-LINE '61) 
(PUT 'ASSOC_LOOKUP 'DEFINED-IN-FILE 'ALG/OPMTCH.RED) 
(PUT 'ASSOC_LOOKUP 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(PUTC 'ASSOC_LOOKUP 'INLINE
      '(LAMBDA (U TABLE) (COND ((NULL TABLE) NIL) (T (GETHASH U TABLE))))) 
(DE ASSOC_ADD (U Q TABLE)
    (PROGN
     (COND ((NULL TABLE) (SETQ TABLE (MKHASH 200 3 2.0))))
     (PUTHASH U TABLE (CONS U Q))
     TABLE)) 
(PUT 'ASSOC_ADD 'NUMBER-OF-ARGS 3) 
(PUT 'ASSOC_ADD 'DEFINED-ON-LINE '65) 
(PUT 'ASSOC_ADD 'DEFINED-IN-FILE 'ALG/OPMTCH.RED) 
(PUT 'ASSOC_ADD 'PROCEDURE_TYPE
     '(ARROW (TIMES GENERAL GENERAL GENERAL) GENERAL)) 
(PUTC 'ASSOC_ADD 'INLINE
      '(LAMBDA (U Q TABLE)
         (PROGN
          (COND ((NULL TABLE) (SETQ TABLE (MKHASH 200 3 2.0))))
          (PUTHASH U TABLE (CONS U Q))
          TABLE))) 
(PUT 'OPMTCH 'NUMBER-OF-ARGS 1) 
(PUT 'OPMTCH 'DEFINED-ON-LINE '70) 
(PUT 'OPMTCH 'DEFINED-IN-FILE 'ALG/OPMTCH.RED) 
(PUT 'OPMTCH 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE OPMTCH (U)
    (PROG (Q X Y Z)
      (COND ((NULL (SETQ X (GET (CAR U) 'OPMTCH))) (RETURN NIL))
            ((NULL SUBFG*) (RETURN NIL))
            ((AND (NULL *UNCACHED)
                  (SETQ Q
                          ((LAMBDA (G611)
                             (COND ((NULL G611) NIL) (T (GETHASH U G611))))
                           (CDR ALGLIST*))))
             (RETURN (CDR Q))))
      (SETQ Z
              (PROG (J FORALL-RESULT FORALL-ENDPTR)
                (SETQ J (CDR U))
                (COND ((NULL J) (RETURN NIL)))
                (SETQ FORALL-RESULT
                        (SETQ FORALL-ENDPTR
                                (CONS ((LAMBDA (J) (EMTCH J)) (CAR J)) NIL)))
               LOOPLABEL
                (SETQ J (CDR J))
                (COND ((NULL J) (RETURN FORALL-RESULT)))
                (RPLACD FORALL-ENDPTR
                        (CONS ((LAMBDA (J) (EMTCH J)) (CAR J)) NIL))
                (SETQ FORALL-ENDPTR (CDR FORALL-ENDPTR))
                (GO LOOPLABEL)))
     A
      (COND ((NULL X) (GO C)))
      (SETQ Y (MCHARG Z (CAAR X) (CAR U)))
     B
      (COND ((NULL Y) (PROGN (SETQ X (CDR X)) (GO A)))
            ((LISPEVAL (SUBLA (CAR Y) (CDADAR X)))
             (PROGN (SETQ Q (SUBLA (CAR Y) (CADDAR X))) (GO C))))
      (SETQ Y (CDR Y))
      (GO B)
     C
      (COND
       ((NOT *UNCACHED)
        (RPLACD ALGLIST*
                ((LAMBDA (G614)
                   (PROGN
                    (COND ((NULL G614) (SETQ G614 (MKHASH 200 3 2.0))))
                    (PUTHASH U G614 (CONS U Q))
                    G614))
                 (CDR ALGLIST*)))))
      (RETURN Q))) 
(PUT 'MCHARG 'NUMBER-OF-ARGS 3) 
(PUT 'MCHARG 'DEFINED-ON-LINE '89) 
(PUT 'MCHARG 'DEFINED-IN-FILE 'ALG/OPMTCH.RED) 
(PUT 'MCHARG 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL GENERAL) GENERAL)) 
(DE MCHARG (U V W)
    (PROGN
     (COND ((ATSOC 'MINUS V) (MCHARG1 (REFORM-MINUS U V) V W))
           ((AND V (EQCAR (CAR V) 'SLASH))
            (PROG (F FORALL-RESULT FORALL-ENDPTR)
              (SETQ F (REFORM-MINUS2 U V))
             STARTOVER
              (COND ((NULL F) (RETURN NIL)))
              (SETQ FORALL-RESULT
                      ((LAMBDA (F) (MCHARG1 (CAR F) (CDR F) W)) (CAR F)))
              (SETQ FORALL-ENDPTR (LASTPAIR FORALL-RESULT))
              (SETQ F (CDR F))
              (COND ((ATOM FORALL-ENDPTR) (GO STARTOVER)))
             LOOPLABEL
              (COND ((NULL F) (RETURN FORALL-RESULT)))
              (RPLACD FORALL-ENDPTR
                      ((LAMBDA (F) (MCHARG1 (CAR F) (CDR F) W)) (CAR F)))
              (SETQ FORALL-ENDPTR (LASTPAIR FORALL-ENDPTR))
              (SETQ F (CDR F))
              (GO LOOPLABEL)))
           (T (MCHARG1 U V W))))) 
(PUT 'MCHARG1 'NUMBER-OF-ARGS 3) 
(PUT 'MCHARG1 'DEFINED-ON-LINE '95) 
(PUT 'MCHARG1 'DEFINED-IN-FILE 'ALG/OPMTCH.RED) 
(PUT 'MCHARG1 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL GENERAL) GENERAL)) 
(DE MCHARG1 (U V W)
    (COND ((AND (NULL U) (NULL V)) (LIST NIL))
          (T
           (PROG (M N)
             (SETQ M 0)
             (SETQ N 0)
             (SETQ M (LENGTH U))
             (SETQ N (LENGTH V))
             (COND
              ((AND (FLAGP W 'NARY) (GREATERP M 2))
               (COND
                ((AND (LEQ M MATCHLENGTH*) (FLAGP W 'SYMMETRIC))
                 (RETURN (MCHCOMB U V W)))
                ((EQUAL N 2) (PROGN (SETQ U (CDR (MKBIN W U))) (SETQ M 2)))
                (T (RETURN NIL)))))
             (RETURN
              (COND ((NEQ M N) NIL) ((FLAGP W 'SYMMETRIC) (MCHSARG U V W))
                    ((MTP V) (LIST (PAIR V U)))
                    (T (MCHARG2 U V (LIST NIL) W)))))))) 
(PUT 'REFORM-MINUS 'NUMBER-OF-ARGS 2) 
(PUT 'REFORM-MINUS 'DEFINED-ON-LINE '115) 
(PUT 'REFORM-MINUS 'DEFINED-IN-FILE 'ALG/OPMTCH.RED) 
(PUT 'REFORM-MINUS 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE REFORM-MINUS (U V)
    (COND ((OR (NULL V) (NULL U)) U)
          (T
           ((LAMBDA (C)
              (CONS
               (COND
                ((AND (EQCAR (CAR V) 'MINUS) (EQCAR C 'QUOTIENT)
                      (EQCAR (CADR C) 'MINUS))
                 (LIST 'MINUS (LIST 'QUOTIENT (CADR (CADR C)) (CADDR C))))
                (T C))
               (REFORM-MINUS (CDR U) (CDR V))))
            (CAR U))))) 
(PUT 'REFORM-MINUS2 'NUMBER-OF-ARGS 2) 
(PUT 'REFORM-MINUS2 'DEFINED-ON-LINE '125) 
(PUT 'REFORM-MINUS2 'DEFINED-IN-FILE 'ALG/OPMTCH.RED) 
(PUT 'REFORM-MINUS2 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE REFORM-MINUS2 (U V)
    (COND ((OR (NULL U) (NOT (EQCAR (CAR U) 'QUOTIENT))) NIL)
          (T
           (PROGN
            (SETQ V (CONS (CONS 'QUOTIENT (CDAR V)) (CDR V)))
            (COND ((NOT (SMEMQ 'MINUS (CADDAR U))) (LIST (CONS U V)))
                  (T
                   (LIST (CONS U V)
                         (CONS
                          (CONS
                           (LIST 'QUOTIENT (REVAL1 (LIST 'MINUS (CADAR U)) T)
                                 (REVAL1 (LIST 'MINUS (CADDAR U)) T))
                           (CDR U))
                          V)))))))) 
(PUT 'MCHCOMB 'NUMBER-OF-ARGS 3) 
(PUT 'MCHCOMB 'DEFINED-ON-LINE '137) 
(PUT 'MCHCOMB 'DEFINED-IN-FILE 'ALG/OPMTCH.RED) 
(PUT 'MCHCOMB 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL GENERAL) GENERAL)) 
(DE MCHCOMB (U V OP)
    (PROG (N)
      (SETQ N 0)
      (SETQ N (PLUS (DIFFERENCE (LENGTH U) (LENGTH V)) 1))
      (COND ((LESSP N 1) (RETURN NIL)) ((EQUAL N 1) (RETURN (MCHSARG U V OP)))
            ((NOT (SMEMQLP FRLIS* V)) (RETURN NIL)))
      (RETURN
       (PROG (X FORALL-RESULT FORALL-ENDPTR)
         (SETQ X (COMB U N))
        STARTOVER
         (COND ((NULL X) (RETURN NIL)))
         (SETQ FORALL-RESULT
                 ((LAMBDA (X)
                    (COND
                     ((NULL NCMP*)
                      (MCHSARG (CONS (CONS OP X) (SETDIFF U X)) V OP))
                     (T
                      ((LAMBDA (Y)
                         (COND ((NULL Y) NIL)
                               (T
                                (MCHSARG (CONS (CONS OP X) (CAR Y))
                                         (COND ((CDR Y) (REVERSE V)) (T V))
                                         OP))))
                       (MCHCOMB2 X U NIL NIL NIL)))))
                  (CAR X)))
         (SETQ FORALL-ENDPTR (LASTPAIR FORALL-RESULT))
         (SETQ X (CDR X))
         (COND ((ATOM FORALL-ENDPTR) (GO STARTOVER)))
        LOOPLABEL
         (COND ((NULL X) (RETURN FORALL-RESULT)))
         (RPLACD FORALL-ENDPTR
                 ((LAMBDA (X)
                    (COND
                     ((NULL NCMP*)
                      (MCHSARG (CONS (CONS OP X) (SETDIFF U X)) V OP))
                     (T
                      ((LAMBDA (Y)
                         (COND ((NULL Y) NIL)
                               (T
                                (MCHSARG (CONS (CONS OP X) (CAR Y))
                                         (COND ((CDR Y) (REVERSE V)) (T V))
                                         OP))))
                       (MCHCOMB2 X U NIL NIL NIL)))))
                  (CAR X)))
         (SETQ FORALL-ENDPTR (LASTPAIR FORALL-ENDPTR))
         (SETQ X (CDR X))
         (GO LOOPLABEL))))) 
(PUT 'MCHCOMB2 'NUMBER-OF-ARGS 5) 
(PUT 'MCHCOMB2 'DEFINED-ON-LINE '154) 
(PUT 'MCHCOMB2 'DEFINED-IN-FILE 'ALG/OPMTCH.RED) 
(PUT 'MCHCOMB2 'PROCEDURE_TYPE
     '(ARROW (TIMES GENERAL GENERAL GENERAL GENERAL GENERAL) GENERAL)) 
(DE MCHCOMB2 (U V W BOOL1 BOOL2)
    (COND ((NULL U) (CONS (REVERSIP2 W V) BOOL2))
          ((EQUAL (CAR U) (CAR V))
           (COND
            ((AND *NCMP (NONCOMP1 (CAR U)))
             (MCHCOMB2 (CDR U) (CDR V) W T BOOL2))
            (T (MCHCOMB2 (CDR U) (CDR V) W BOOL1 BOOL2))))
          ((AND *NCMP (NONCOMP1 (CAR U)))
           (COND (BOOL1 NIL)
                 (T
                  (MCHCOMB2 U (CDR V) (CONS (CAR V) W) T
                            (COND (BOOL2 BOOL2) (T T))))))
          (T (MCHCOMB2 U (CDR V) (CONS (CAR V) W) BOOL1 BOOL2)))) 
(PUT 'COMB 'NUMBER-OF-ARGS 2) 
(PUT 'COMB 'DEFINED-ON-LINE '179) 
(PUT 'COMB 'DEFINED-IN-FILE 'ALG/OPMTCH.RED) 
(PUT 'COMB 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE COMB (U N)
    (PROG (V W M)
      (SETQ M 0)
      (COND ((EQUAL N 0) (RETURN (LIST NIL)))
            ((LESSP (SETQ M (DIFFERENCE (LENGTH U) N)) 0) (RETURN NIL)))
      (PROG (I)
        (SETQ I 1)
       LAB
        (COND ((MINUSP (DIFFERENCE M I)) (RETURN NIL)))
        (PROGN
         (SETQ W (COMB (CDR U) (DIFFERENCE N 1)))
         (PROG (Q)
           (SETQ Q W)
          LAB
           (COND ((NULL Q) (RETURN NIL)))
           ((LAMBDA (Q) (SETQ V (CONS (CONS (CAR U) Q) V))) (CAR Q))
           (SETQ Q (CDR Q))
           (GO LAB))
         (SETQ U (CDR U)))
        (SETQ I (PLUS2 I 1))
        (GO LAB))
      (RETURN (CONS U V)))) 
(PUT 'MCHARG2 'NUMBER-OF-ARGS 4) 
(PUT 'MCHARG2 'DEFINED-ON-LINE '199) 
(PUT 'MCHARG2 'DEFINED-IN-FILE 'ALG/OPMTCH.RED) 
(PUT 'MCHARG2 'PROCEDURE_TYPE
     '(ARROW (TIMES GENERAL GENERAL GENERAL GENERAL) GENERAL)) 
(DE MCHARG2 (U V W X)
    (PROG (Y)
      (COND ((NULL U) (RETURN W)))
      (SETQ Y (MCHK (CAR U) (CAR V)))
      (SETQ U (CDR U))
      (SETQ V (CDR V))
      (RETURN
       (PROG (J FORALL-RESULT FORALL-ENDPTR)
         (SETQ J Y)
        STARTOVER
         (COND ((NULL J) (RETURN NIL)))
         (SETQ FORALL-RESULT
                 ((LAMBDA (J) (MCHARG2 U (UPDTEMPLATE J V X) (MSAPPEND W J) X))
                  (CAR J)))
         (SETQ FORALL-ENDPTR (LASTPAIR FORALL-RESULT))
         (SETQ J (CDR J))
         (COND ((ATOM FORALL-ENDPTR) (GO STARTOVER)))
        LOOPLABEL
         (COND ((NULL J) (RETURN FORALL-RESULT)))
         (RPLACD FORALL-ENDPTR
                 ((LAMBDA (J) (MCHARG2 U (UPDTEMPLATE J V X) (MSAPPEND W J) X))
                  (CAR J)))
         (SETQ FORALL-ENDPTR (LASTPAIR FORALL-ENDPTR))
         (SETQ J (CDR J))
         (GO LOOPLABEL))))) 
(PUT 'MSAPPEND 'NUMBER-OF-ARGS 2) 
(PUT 'MSAPPEND 'DEFINED-ON-LINE '210) 
(PUT 'MSAPPEND 'DEFINED-IN-FILE 'ALG/OPMTCH.RED) 
(PUT 'MSAPPEND 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE MSAPPEND (U V)
    (PROG (J FORALL-RESULT FORALL-ENDPTR)
      (SETQ J U)
      (COND ((NULL J) (RETURN NIL)))
      (SETQ FORALL-RESULT
              (SETQ FORALL-ENDPTR
                      (CONS ((LAMBDA (J) (APPEND V (SUBLIS V J))) (CAR J))
                            NIL)))
     LOOPLABEL
      (SETQ J (CDR J))
      (COND ((NULL J) (RETURN FORALL-RESULT)))
      (RPLACD FORALL-ENDPTR
              (CONS ((LAMBDA (J) (APPEND V (SUBLIS V J))) (CAR J)) NIL))
      (SETQ FORALL-ENDPTR (CDR FORALL-ENDPTR))
      (GO LOOPLABEL))) 
(PUT 'UPDTEMPLATE 'NUMBER-OF-ARGS 3) 
(PUT 'UPDTEMPLATE 'DEFINED-ON-LINE '214) 
(PUT 'UPDTEMPLATE 'DEFINED-IN-FILE 'ALG/OPMTCH.RED) 
(PUT 'UPDTEMPLATE 'PROCEDURE_TYPE
     '(ARROW (TIMES GENERAL GENERAL GENERAL) GENERAL)) 
(DE UPDTEMPLATE (U V W)
    (PROG (X Y)
      (RETURN
       (PROG (J FORALL-RESULT FORALL-ENDPTR)
         (SETQ J V)
         (COND ((NULL J) (RETURN NIL)))
         (SETQ FORALL-RESULT
                 (SETQ FORALL-ENDPTR
                         (CONS
                          ((LAMBDA (J)
                             (COND ((EQUAL (SETQ X (SUBLA U J)) J) J)
                                   ((NEQ (SETQ Y (REVAL-WITHOUT X W)) X) Y)
                                   (T X)))
                           (CAR J))
                          NIL)))
        LOOPLABEL
         (SETQ J (CDR J))
         (COND ((NULL J) (RETURN FORALL-RESULT)))
         (RPLACD FORALL-ENDPTR
                 (CONS
                  ((LAMBDA (J)
                     (COND ((EQUAL (SETQ X (SUBLA U J)) J) J)
                           ((NEQ (SETQ Y (REVAL-WITHOUT X W)) X) Y) (T X)))
                   (CAR J))
                  NIL))
         (SETQ FORALL-ENDPTR (CDR FORALL-ENDPTR))
         (GO LOOPLABEL))))) 
(PUT 'REVAL-WITHOUT 'NUMBER-OF-ARGS 2) 
(PUT 'REVAL-WITHOUT 'DEFINED-ON-LINE '222) 
(PUT 'REVAL-WITHOUT 'DEFINED-IN-FILE 'ALG/OPMTCH.RED) 
(PUT 'REVAL-WITHOUT 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE REVAL-WITHOUT (U V)
    (PROG (X)
      (SETQ X (GET V 'OPMTCH))
      (REMPROP V 'OPMTCH)
      (SETQ U (ERRORSET* (LIST 'REVAL (MKQUOTE U)) T))
      (PUT V 'OPMTCH X)
      (COND ((ERRORP U) (ERROR1)) (T (RETURN (CAR U)))))) 
(PUT 'MCHK 'NUMBER-OF-ARGS 2) 
(PUT 'MCHK 'DEFINED-ON-LINE '234) 
(PUT 'MCHK 'DEFINED-IN-FILE 'ALG/OPMTCH.RED) 
(PUT 'MCHK 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE MCHK (U V)
    (COND ((EQUAL U V) (LIST NIL))
          ((EQCAR U '*SQ) (MCHK (PREPSQXX (CADR U)) V))
          ((EQCAR V '*SQ) (MCHK U (PREPSQXX (CADR V))))
          ((ATOM V) (COND ((MEMQ V FRLIS*) (LIST (LIST (CONS V U)))) (T NIL)))
          ((ATOM U)
           (COND
            ((AND (NUMBERP U) (LESSP U 0) (EQCAR V 'MINUS))
             (MCHK (LIST 'MINUS (MINUS U)) V))
            (T (MCHKOPT U V))))
          ((EQUAL (CAR V) 'DIFFERENCE)
           (MCHK U (LIST 'PLUS (CADR V) (LIST 'MINUS (CADDR V)))))
          ((OR (GET (CAR U) 'DNAME) (GET (CAR V) 'DNAME)) NIL)
          ((EQ (CAR U) (CAR V)) (MCHARG (CDR U) (CDR V) (CAR U)))
          ((MEMQ (CAR V) FRLIS*)
           (PROG (J FORALL-RESULT FORALL-ENDPTR)
             (SETQ J
                     (MCHARG (SUBST (CAR U) (CAR V) (CDR U))
                             (SUBST (CAR U) (CAR V) (CDR V)) (CAR U)))
             (COND ((NULL J) (RETURN NIL)))
             (SETQ FORALL-RESULT
                     (SETQ FORALL-ENDPTR
                             (CONS
                              ((LAMBDA (J) (CONS (CONS (CAR V) (CAR U)) J))
                               (CAR J))
                              NIL)))
            LOOPLABEL
             (SETQ J (CDR J))
             (COND ((NULL J) (RETURN FORALL-RESULT)))
             (RPLACD FORALL-ENDPTR
                     (CONS
                      ((LAMBDA (J) (CONS (CONS (CAR V) (CAR U)) J)) (CAR J))
                      NIL))
             (SETQ FORALL-ENDPTR (CDR FORALL-ENDPTR))
             (GO LOOPLABEL)))
          ((EQ (CAR U) 'MINUS) (MCHKMINUS (CADR U) V)) (T (MCHKOPT U V)))) 
(PUT 'MCHKOPT 'NUMBER-OF-ARGS 2) 
(PUT 'MCHKOPT 'DEFINED-ON-LINE '258) 
(PUT 'MCHKOPT 'DEFINED-IN-FILE 'ALG/OPMTCH.RED) 
(PUT 'MCHKOPT 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE MCHKOPT (U V)
    ((LAMBDA (O) (COND (O (MCHKOPT1 U V O)))) (GET (CAR V) 'OPTIONAL))) 
(PUT 'MCHKOPT1 'NUMBER-OF-ARGS 3) 
(PUT 'MCHKOPT1 'DEFINED-ON-LINE '263) 
(PUT 'MCHKOPT1 'DEFINED-IN-FILE 'ALG/OPMTCH.RED) 
(PUT 'MCHKOPT1 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL GENERAL) GENERAL)) 
(DE MCHKOPT1 (U V O)
    (PROG (V1 V2 W)
      (COND ((NULL (SETQ W (CDR V))) (RETURN NIL)))
      (SETQ V1 (CAR W))
      (COND ((NULL (SETQ W (CDR W))) (RETURN NIL)))
      (SETQ V2 (CAR W))
      (COND ((CDR W) (RETURN NIL)))
      (RETURN
       (COND
        ((FLAGP V1 'OPTIONAL)
         (PROG (R FORALL-RESULT FORALL-ENDPTR)
           (SETQ R (MCHK U V2))
           (COND ((NULL R) (RETURN NIL)))
           (SETQ FORALL-RESULT
                   (SETQ FORALL-ENDPTR
                           (CONS
                            ((LAMBDA (R) (CONS (CONS V1 (CAR O)) R)) (CAR R))
                            NIL)))
          LOOPLABEL
           (SETQ R (CDR R))
           (COND ((NULL R) (RETURN FORALL-RESULT)))
           (RPLACD FORALL-ENDPTR
                   (CONS ((LAMBDA (R) (CONS (CONS V1 (CAR O)) R)) (CAR R))
                         NIL))
           (SETQ FORALL-ENDPTR (CDR FORALL-ENDPTR))
           (GO LOOPLABEL)))
        ((FLAGP V2 'OPTIONAL)
         (PROG (R FORALL-RESULT FORALL-ENDPTR)
           (SETQ R (MCHK U V1))
           (COND ((NULL R) (RETURN NIL)))
           (SETQ FORALL-RESULT
                   (SETQ FORALL-ENDPTR
                           (CONS
                            ((LAMBDA (R) (CONS (CONS V2 (CADR O)) R)) (CAR R))
                            NIL)))
          LOOPLABEL
           (SETQ R (CDR R))
           (COND ((NULL R) (RETURN FORALL-RESULT)))
           (RPLACD FORALL-ENDPTR
                   (CONS ((LAMBDA (R) (CONS (CONS V2 (CADR O)) R)) (CAR R))
                         NIL))
           (SETQ FORALL-ENDPTR (CDR FORALL-ENDPTR))
           (GO LOOPLABEL)))
        (T NIL))))) 
(PUT 'PLUS 'OPTIONAL '(0 0)) 
(PUT 'TIMES 'OPTIONAL '(1 1)) 
(PUT 'QUOTIENT 'OPTIONAL '((RULE_ERROR "fraction with optional numerator") 1)) 
(PUT 'EXPT 'OPTIONAL '((RULE_ERROR "exponential with optional base") 1)) 
(PUT 'RULE_ERROR 'NUMBER-OF-ARGS 1) 
(PUT 'RULE_ERROR 'DEFINED-ON-LINE '283) 
(PUT 'RULE_ERROR 'DEFINED-IN-FILE 'ALG/OPMTCH.RED) 
(PUT 'RULE_ERROR 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE RULE_ERROR (U) (REDERR (LIST "error in rule:" U "illegal"))) 
(FLAG '(RULE_ERROR) 'OPFN) 
(PUT 'MCHKMINUS 'NUMBER-OF-ARGS 2) 
(PUT 'MCHKMINUS 'DEFINED-ON-LINE '302) 
(PUT 'MCHKMINUS 'DEFINED-IN-FILE 'ALG/OPMTCH.RED) 
(PUT 'MCHKMINUS 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE MCHKMINUS (U V)
    (COND ((NOT (MEMQ (CAR V) '(TIMES QUOTIENT))) NIL)
          ((OR (ATOM U) (NOT (EQ (CAR U) (CAR V))))
           (COND ((EQ (CAR V) 'TIMES) (MCHKOPT1 U V '((MINUS 1) (MINUS 1))))
                 (T (MCHKOPT (LIST 'MINUS U) V))))
          ((OR (NUMBERP (CADR U)) (AND (PAIRP (CADR U)) (GET (CAADR U) 'DNAME))
               (EQ (CAR V) 'QUOTIENT))
           (MCHARG (CONS (LIST 'MINUS (CADR U)) (CDDR U)) (CDR V) (CAR V)))
          (T (MCHARG (CONS '(MINUS 1) (CDR U)) (CDR V) 'TIMES)))) 
(PUT 'MKBIN 'NUMBER-OF-ARGS 2) 
(PUT 'MKBIN 'DEFINED-ON-LINE '312) 
(PUT 'MKBIN 'DEFINED-IN-FILE 'ALG/OPMTCH.RED) 
(PUT 'MKBIN 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE MKBIN (U V)
    (COND ((NULL (CDDR V)) (CONS U V)) (T (LIST U (CAR V) (MKBIN U (CDR V)))))) 
(PUT 'MTP 'NUMBER-OF-ARGS 1) 
(PUT 'MTP 'DEFINED-ON-LINE '315) 
(PUT 'MTP 'DEFINED-IN-FILE 'ALG/OPMTCH.RED) 
(PUT 'MTP 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE MTP (V)
    (OR (NULL V)
        (AND (MEMQ (CAR V) FRLIS*) (NOT (MEMBER (CAR V) (CDR V)))
             (MTP (CDR V))))) 
(PUT 'MCHSARG 'NUMBER-OF-ARGS 3) 
(PUT 'MCHSARG 'DEFINED-ON-LINE '319) 
(PUT 'MCHSARG 'DEFINED-IN-FILE 'ALG/OPMTCH.RED) 
(PUT 'MCHSARG 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL GENERAL) GENERAL)) 
(DE MCHSARG (U V W)
    (REVERSIP*
     (COND
      ((AND (MTP V) (OR (NEQ W 'TIMES) (NONCOMFREE U)))
       (PROG (J FORALL-RESULT FORALL-ENDPTR)
         (SETQ J (NONCOMPERM V))
         (COND ((NULL J) (RETURN NIL)))
         (SETQ FORALL-RESULT
                 (SETQ FORALL-ENDPTR
                         (CONS ((LAMBDA (J) (PAIR J U)) (CAR J)) NIL)))
        LOOPLABEL
         (SETQ J (CDR J))
         (COND ((NULL J) (RETURN FORALL-RESULT)))
         (RPLACD FORALL-ENDPTR (CONS ((LAMBDA (J) (PAIR J U)) (CAR J)) NIL))
         (SETQ FORALL-ENDPTR (CDR FORALL-ENDPTR))
         (GO LOOPLABEL)))
      (T
       (PROG (J FORALL-RESULT FORALL-ENDPTR)
         (SETQ J (NONCOMPERM U))
        STARTOVER
         (COND ((NULL J) (RETURN NIL)))
         (SETQ FORALL-RESULT ((LAMBDA (J) (MCHARG2 J V (LIST NIL) W)) (CAR J)))
         (SETQ FORALL-ENDPTR (LASTPAIR FORALL-RESULT))
         (SETQ J (CDR J))
         (COND ((ATOM FORALL-ENDPTR) (GO STARTOVER)))
        LOOPLABEL
         (COND ((NULL J) (RETURN FORALL-RESULT)))
         (RPLACD FORALL-ENDPTR
                 ((LAMBDA (J) (MCHARG2 J V (LIST NIL) W)) (CAR J)))
         (SETQ FORALL-ENDPTR (LASTPAIR FORALL-ENDPTR))
         (SETQ J (CDR J))
         (GO LOOPLABEL)))))) 
(PUT 'NONCOMFREE 'NUMBER-OF-ARGS 1) 
(PUT 'NONCOMFREE 'DEFINED-ON-LINE '326) 
(PUT 'NONCOMFREE 'DEFINED-IN-FILE 'ALG/OPMTCH.RED) 
(PUT 'NONCOMFREE 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE NONCOMFREE (U)
    (COND ((IDP U) (NOT (FLAGP U 'NONCOM)))
          (T (OR (ATOM U) (AND (NONCOMFREE (CAR U)) (NONCOMFREE (CDR U))))))) 
(PUT 'NONCOMPERM 'NUMBER-OF-ARGS 1) 
(PUT 'NONCOMPERM 'DEFINED-ON-LINE '330) 
(PUT 'NONCOMPERM 'DEFINED-IN-FILE 'ALG/OPMTCH.RED) 
(PUT 'NONCOMPERM 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE NONCOMPERM (U)
    (COND ((NULL U) (LIST U))
          (T
           (PROG (J FORALL-RESULT FORALL-ENDPTR)
             (SETQ J U)
            STARTOVER
             (COND ((NULL J) (RETURN NIL)))
             (SETQ FORALL-RESULT
                     ((LAMBDA (J)
                        ((LAMBDA (X)
                           (COND ((EQ X 'FAILED) NIL)
                                 (T (MAPCONS (NONCOMPERM X) J))))
                         (NONCOMDEL J U)))
                      (CAR J)))
             (SETQ FORALL-ENDPTR (LASTPAIR FORALL-RESULT))
             (SETQ J (CDR J))
             (COND ((ATOM FORALL-ENDPTR) (GO STARTOVER)))
            LOOPLABEL
             (COND ((NULL J) (RETURN FORALL-RESULT)))
             (RPLACD FORALL-ENDPTR
                     ((LAMBDA (J)
                        ((LAMBDA (X)
                           (COND ((EQ X 'FAILED) NIL)
                                 (T (MAPCONS (NONCOMPERM X) J))))
                         (NONCOMDEL J U)))
                      (CAR J)))
             (SETQ FORALL-ENDPTR (LASTPAIR FORALL-ENDPTR))
             (SETQ J (CDR J))
             (GO LOOPLABEL))))) 
(PUT 'NONCOMDEL 'NUMBER-OF-ARGS 2) 
(PUT 'NONCOMDEL 'DEFINED-ON-LINE '338) 
(PUT 'NONCOMDEL 'DEFINED-IN-FILE 'ALG/OPMTCH.RED) 
(PUT 'NONCOMDEL 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE NONCOMDEL (U V)
    (COND ((NULL (NONCOMP* U)) (DELETE U V)) (T (NONCOMDEL1 U V)))) 
(PUT 'NONCOMDEL1 'NUMBER-OF-ARGS 2) 
(PUT 'NONCOMDEL1 'DEFINED-ON-LINE '341) 
(PUT 'NONCOMDEL1 'DEFINED-IN-FILE 'ALG/OPMTCH.RED) 
(PUT 'NONCOMDEL1 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE NONCOMDEL1 (U V)
    (PROG (Z)
     A
      (COND ((NULL V) (RETURN (REVERSIP* Z)))
            ((EQ U (CAR V)) (RETURN (REVERSIP2 Z (CDR V))))
            ((NONCOMP* (CAR V)) (RETURN 'FAILED)))
      (SETQ Z (CONS (CAR V) Z))
      (SETQ V (CDR V))
      (GO A))) 
(PUT 'NONCOMP* 'NUMBER-OF-ARGS 1) 
(PUT 'NONCOMP* 'DEFINED-ON-LINE '351) 
(PUT 'NONCOMP* 'DEFINED-IN-FILE 'ALG/OPMTCH.RED) 
(PUT 'NONCOMP* 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE NONCOMP* (U)
    (OR (AND *NCMP (NONCOMP1 U))
        (AND (EQCAR U 'EXPT) (AND *NCMP (NONCOMP1 (CADR U)))))) 
(FLAGOP (LIST 'ANTISYMMETRIC 'SYMMETRIC)) 
(FLAG '(PLUS TIMES) 'SYMMETRIC) 
(ENDMODULE) 