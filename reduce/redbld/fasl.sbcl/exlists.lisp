(cl:declaim (cl:optimize cl:debug cl:safety))
(cl:declaim (sb-ext:muffle-conditions sb-ext:compiler-note cl:style-warning))
(MODULE (LIST 'EXCALC-LISTS)) 
(PUT 'EXDFLIST 'NUMBER-OF-ARGS 2) 
(PUT 'EXDFLIST 'DEFINED-ON-LINE '30) 
(PUT 'EXDFLIST 'DEFINED-IN-FILE 'EXCALC/EXLISTS.RED) 
(PUT 'EXDFLIST 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE EXDFLIST (U V) (CONS 'LIST (EXDFL1 (LISTEVAL (CAR U) V)))) 
(PUT 'EXDFL1 'NUMBER-OF-ARGS 1) 
(PUT 'EXDFL1 'DEFINED-ON-LINE '33) 
(PUT 'EXDFL1 'DEFINED-IN-FILE 'EXCALC/EXLISTS.RED) 
(PUT 'EXDFL1 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE EXDFL1 (U)
    (COND ((NULL U) NIL)
          (T
           ((LAMBDA (X)
              (COND (X (CONS (MK*SQ (*PF2SQ X)) (EXDFL1 (CDR U))))
                    (T (EXDFL1 (CDR U)))))
            (PARTITEXDF (LIST (CAR U))))))) 
(PUT 'D 'LISTFN 'EXDFLIST) 
(PUT 'INNERPRODLIST 'NUMBER-OF-ARGS 2) 
(PUT 'INNERPRODLIST 'DEFINED-ON-LINE '41) 
(PUT 'INNERPRODLIST 'DEFINED-IN-FILE 'EXCALC/EXLISTS.RED) 
(PUT 'INNERPRODLIST 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE INNERPRODLIST (U V)
    ((LAMBDA (X Y)
       (CONS 'LIST
             (COND
              ((EQCAR X 'LIST)
               (COND
                ((EQCAR Y 'LIST)
                 (REDERR "currently only one list arg is implemented"))
                (T (INNERPRODL1 (CDR X) Y))))
              ((EQCAR Y 'LIST) (INNERPROD1L X (CDR Y))))))
     (COND ((EQ (GETRTYPE (CAR U)) 'LIST) (LISTEVAL (CAR U) NIL)) (T (CAR U)))
     (COND ((EQ (GETRTYPE (CADR U)) 'LIST) (LISTEVAL (CADR U) NIL))
           (T (CADR U))))) 
(PUT 'INNERPRODL1 'NUMBER-OF-ARGS 2) 
(PUT 'INNERPRODL1 'DEFINED-ON-LINE '53) 
(PUT 'INNERPRODL1 'DEFINED-IN-FILE 'EXCALC/EXLISTS.RED) 
(PUT 'INNERPRODL1 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE INNERPRODL1 (U V)
    (COND ((NULL U) NIL)
          (T
           ((LAMBDA (X)
              (COND (X (CONS (MK*SQ (*PF2SQ X)) (INNERPRODL1 (CDR U) V)))
                    (T (INNERPRODL1 (CDR U) V))))
            (PARTITINNERPROD (LIST (CAR U) V)))))) 
(PUT 'INNERPROD1L 'NUMBER-OF-ARGS 2) 
(PUT 'INNERPROD1L 'DEFINED-ON-LINE '59) 
(PUT 'INNERPROD1L 'DEFINED-IN-FILE 'EXCALC/EXLISTS.RED) 
(PUT 'INNERPROD1L 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE INNERPROD1L (U V)
    (COND ((NULL V) NIL)
          (T
           ((LAMBDA (X)
              (COND (X (CONS (MK*SQ (*PF2SQ X)) (INNERPROD1L U (CDR V))))
                    (T (INNERPROD1L U (CDR V)))))
            (PARTITINNERPROD (LIST U (CAR V))))))) 
(PUT 'INNERPROD 'LISTFN 'INNERPRODLIST) 
(PUT 'LIEDFLIST 'NUMBER-OF-ARGS 2) 
(PUT 'LIEDFLIST 'DEFINED-ON-LINE '67) 
(PUT 'LIEDFLIST 'DEFINED-IN-FILE 'EXCALC/EXLISTS.RED) 
(PUT 'LIEDFLIST 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE LIEDFLIST (U V)
    ((LAMBDA (X Y)
       (CONS 'LIST
             (COND
              ((EQCAR X 'LIST)
               (COND
                ((EQCAR Y 'LIST)
                 (REDERR "currently only one list arg is implemented"))
                (T (LIEDFL1 (CDR X) Y))))
              ((EQCAR Y 'LIST) (LIEDF1L X (CDR Y))))))
     (COND ((EQ (GETRTYPE (CAR U)) 'LIST) (LISTEVAL (CAR U) NIL)) (T (CAR U)))
     (COND ((EQ (GETRTYPE (CADR U)) 'LIST) (LISTEVAL (CADR U) NIL))
           (T (CADR U))))) 
(PUT 'LIEDFL1 'NUMBER-OF-ARGS 2) 
(PUT 'LIEDFL1 'DEFINED-ON-LINE '79) 
(PUT 'LIEDFL1 'DEFINED-IN-FILE 'EXCALC/EXLISTS.RED) 
(PUT 'LIEDFL1 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE LIEDFL1 (U V)
    (COND ((NULL U) NIL)
          (T
           ((LAMBDA (X)
              (COND (X (CONS (MK*SQ (*PF2SQ X)) (LIEDFL1 (CDR U) V)))
                    (T (LIEDFL1 (CDR U) V))))
            (PARTITLIEDF (LIST (CAR U) V)))))) 
(PUT 'LIEDF1L 'NUMBER-OF-ARGS 2) 
(PUT 'LIEDF1L 'DEFINED-ON-LINE '85) 
(PUT 'LIEDF1L 'DEFINED-IN-FILE 'EXCALC/EXLISTS.RED) 
(PUT 'LIEDF1L 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE LIEDF1L (U V)
    (COND ((NULL V) NIL)
          (T
           ((LAMBDA (X)
              (COND (X (CONS (MK*SQ (*PF2SQ X)) (LIEDF1L U (CDR V))))
                    (T (LIEDF1L U (CDR V)))))
            (PARTITLIEDF (LIST U (CAR V))))))) 
(PUT 'LIEDF 'LISTFN 'LIEDFLIST) 
(PUT 'MODULOLIST 'NUMBER-OF-ARGS 2) 
(PUT 'MODULOLIST 'DEFINED-ON-LINE '94) 
(PUT 'MODULOLIST 'DEFINED-IN-FILE 'EXCALC/EXLISTS.RED) 
(PUT 'MODULOLIST 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE MODULOLIST (U V)
    (CONS 'LIST (MODULOL1 (CDR (LISTEVAL (CAR U) NIL)) (CADR U)))) 
(PUT 'MODULOL1 'NUMBER-OF-ARGS 2) 
(PUT 'MODULOL1 'DEFINED-ON-LINE '97) 
(PUT 'MODULOL1 'DEFINED-IN-FILE 'EXCALC/EXLISTS.RED) 
(PUT 'MODULOL1 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE MODULOL1 (U V)
    (COND ((NULL U) NIL)
          (T
           ((LAMBDA (X)
              (COND (X (CONS (MK*SQ (*PF2SQ X)) (MODULOL1 (CDR U) V)))
                    (T (MODULOL1 (CDR U) V))))
            (PARTITMODULO (LIST (CAR U) V)))))) 
(PUT 'MODULO 'LISTFN 'MODULOLIST) 
(PUT 'WEDGELIST 'NUMBER-OF-ARGS 2) 
(PUT 'WEDGELIST 'DEFINED-ON-LINE '105) 
(PUT 'WEDGELIST 'DEFINED-IN-FILE 'EXCALC/EXLISTS.RED) 
(PUT 'WEDGELIST 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE WEDGELIST (U V)
    ((LAMBDA (X Y)
       (CONS 'LIST
             (COND
              ((EQCAR X 'LIST)
               (COND
                ((EQCAR Y 'LIST)
                 (REDERR "currently only one list arg is implemented"))
                (T (WEDGEL1 (CDR X) Y))))
              ((EQCAR Y 'LIST) (WEDGE1L X (CDR Y))))))
     (COND ((EQ (GETRTYPE (CAR U)) 'LIST) (LISTEVAL (CAR U) NIL)) (T (CAR U)))
     (COND ((EQ (GETRTYPE (CADR U)) 'LIST) (LISTEVAL (CADR U) NIL))
           (T (CADR U))))) 
(PUT 'WEDGEL1 'NUMBER-OF-ARGS 2) 
(PUT 'WEDGEL1 'DEFINED-ON-LINE '117) 
(PUT 'WEDGEL1 'DEFINED-IN-FILE 'EXCALC/EXLISTS.RED) 
(PUT 'WEDGEL1 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE WEDGEL1 (U V)
    (COND ((NULL U) NIL)
          (T
           ((LAMBDA (X)
              (COND (X (CONS (MK*SQ (*PF2SQ X)) (WEDGEL1 (CDR U) V)))
                    (T (WEDGEL1 (CDR U) V))))
            (PARTITWEDGE (LIST (CAR U) V)))))) 
(PUT 'WEDGE1L 'NUMBER-OF-ARGS 2) 
(PUT 'WEDGE1L 'DEFINED-ON-LINE '123) 
(PUT 'WEDGE1L 'DEFINED-IN-FILE 'EXCALC/EXLISTS.RED) 
(PUT 'WEDGE1L 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE WEDGE1L (U V)
    (COND ((NULL V) NIL)
          (T
           ((LAMBDA (X)
              (COND (X (CONS (MK*SQ (*PF2SQ X)) (WEDGE1L U (CDR V))))
                    (T (WEDGE1L U (CDR V)))))
            (PARTITWEDGE (LIST U (CAR V))))))) 
(PUT 'WEDGE 'LISTFN 'WEDGELIST) 
(PUT 'EXC-MAPLIST 'NUMBER-OF-ARGS 2) 
(PUT 'EXC-MAPLIST 'DEFINED-ON-LINE '131) 
(PUT 'EXC-MAPLIST 'DEFINED-IN-FILE 'EXCALC/EXLISTS.RED) 
(PUT 'EXC-MAPLIST 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE EXC-MAPLIST (U V)
    ((LAMBDA (Y)
       (CONS 'LIST
             (COND ((EQCAR Y 'LIST) (EXC-MAP1L (CAR U) (CADR U) (CDR Y))))))
     (COND ((EQ (GETRTYPE (CADDR U)) 'LIST) (LISTEVAL (CADDR U) V))
           (T (CADDR U))))) 
(PUT 'EXC-MAP1L 'NUMBER-OF-ARGS 3) 
(PUT 'EXC-MAP1L 'DEFINED-ON-LINE '138) 
(PUT 'EXC-MAP1L 'DEFINED-IN-FILE 'EXCALC/EXLISTS.RED) 
(PUT 'EXC-MAP1L 'PROCEDURE_TYPE
     '(ARROW (TIMES GENERAL GENERAL GENERAL) GENERAL)) 
(DE EXC-MAP1L (U P V)
    (COND ((NULL V) NIL)
          (T
           ((LAMBDA (X)
              (COND (X (CONS (MK*SQ (*PF2SQ X)) (EXC-MAP1L U P (CDR V))))
                    (T (EXC-MAP1L U P (CDR V)))))
            (EXCALC-MAPFN (LIST U P (CAR V))))))) 
(ENDMODULE) 