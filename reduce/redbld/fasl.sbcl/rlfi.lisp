(cl:declaim (cl:optimize cl:debug cl:safety))
(cl:declaim (sb-ext:muffle-conditions sb-ext:compiler-note cl:style-warning))
(MODULE (LIST 'RLFI)) 
(CREATE-PACKAGE '(RLFI) '(CONTRIB MISC)) 
(FLUID '(POSN* ORIG*)) 
(GLOBAL '(MSTYLE* NOCHAR* NOCHAR1* LINEL* LALINE* NCHARSPR* MSTYLES*)) 
(SETQ NOCHAR* NIL) 
(SETQ NOCHAR1* NIL) 
(SETQ LALINE* 72) 
(SETQ NCHARSPR* 0) 
(SETQ LINEL* (CONS (LINELENGTH NIL) LALINE*)) 
(SETQ MSTYLE* 'DISPLAYMATH) 
(SETQ MSTYLES* '(MATH DISPLAYMATH EQUATION)) 
(FLAG
 '(ALPHA BETA GAMMA DELTA EPSILON VAREPSILON ZETA ETA THETA VARTHETA IOTA KAPPA
   LAMBDA MU NU XI PI VARPI RHO VARRHO SIGMA VARSIGMA TAU UPSILON PHI VARPHI
   CHI PSI OMEGA |gAMMA| |dELTA| |tHETA| |lAMBDA| |xI| |pI| |sIGMA| |uPSILON|
   |pHI| |pSI| |oMEGA| INFTY HBAR NABLA PERP ALPHA BETA GAMMA DELTA EPSILON
   VAREPSILON ZETA ETA THETA VARTHETA IOTA KAPPA LAMBDA MU NU XI PI VARPI RHO
   VARRHO SIGMA VARSIGMA TAU UPSILON PHI VARPHI CHI PSI OMEGA GAMMA DELTA THETA
   LAMBDA XI PI SIGMA UPSILON PHI PSI OMEGA INFTY HBAR NABLA PERP)
 'SYMBOL) 
(FLAG '(CDOTS) 'SYMBOL) 
(FLAG
 '(HAT CHECK BREVE ACUTE GRAVE TILDE BAR VEC DOT DDOT HAT CHECK BREVE ACUTE
   GRAVE TILDE BAR VEC DOT DDOT)
 'ACCDEF) 
(DEFLIST
 '((BOLD |\\\\MATHBF{|) (ROMAN |\\MATHRM{|) (BOLD |\\MATHBF{|)
   (ROMAN |\\MATHRM{|))
 'FONTDEF) 
(DEFLIST
 '((|(| |\\LEFT(|) (|)| |\\RIGHT)|) (|pi| |\\PI |) (PI |\\PI |) (|e| E) (|i| I)
   (E E) (I I))
 'NAME) 
(DEFLIST '((TIMES | |) (SETQ =) (GEQ |\\GEQ |) (LEQ |\\LEQ |)) 'LAPR) 
(DEFLIST
 '((ACOS |\\ARCCOS|) (COTH |\\COTH|) (SEC |\\SEC|) (ASIN |\\ARCSIN|)
   (CSC |\\CSC|) (SIN |\\SIN|) (ATAN |\\ARCTAN|) (EXP |\\EXP|) (SINH |\\SINH|)
   (ARG |\\ARG|) (LN |\\LN|) (TAN |\\TAN|) (COS |\\COS|) (LOG |\\LOG|)
   (TANH |\\TANH|) (COSH |\\COSH|) (MAX |\\MAX|) (SUM |\\SUM|) (COT |\\COT|)
   (MIN |\\MIN|) (PRODUCT |\\PROD|))
 'LAPOP) 
(DEFLIST
 '((ABS "{\\mathrm{abs}}") (DEG2RAD "{\\mathrm{deg2rad}}")
   (ACOSD "{\\mathrm{acosd}}") (DILOG "{\\mathrm{dilog}}")
   (ACOSH "{\\mathrm{acosh}}") (DMS2DEG "{\\mathrm{dms2deg}}")
   (ACOT "{\\mathrm{acot}}") (DMS2RAD "{\\mathrm{dms2rad}}")
   (ACOTD "{\\mathrm{acotd}}") (ERF "{\\mathrm{erf}}")
   (ACOTH "{\\mathrm{acoth}}") (EXPINT "{\\mathrm{expint}}")
   (ACSC "{\\mathrm{acsc}}") (FACTORIAL "{\\mathrm{factorial}}")
   (ACSCD "{\\mathrm{acscd}}") (FIX "{\\mathrm{fix}}")
   (ACSCH "{\\mathrm{acsch}}") (FLOOR "{\\mathrm{floor}}")
   (ARBCOMPLEX "{\\mathrm{arbcomplex}}") (HYPOT "{\\mathrm{hypot}}")
   (ARBINT "{\\mathrm{arbint}}") (ICBRT "{\\mathrm{icbrt}}")
   (ARBREAL "{\\mathrm{arbreal}}") (ILOG2 "{\\mathrm{ilog2}}")
   (ARGD "{\\mathrm{argd}}") (IMPART "{\\mathrm{impart}}")
   (ASEC "{\\mathrm{asec}}") (IROOTN "{\\mathrm{irootn}}")
   (ASECD "{\\mathrm{asecd}}") (ISQRT "{\\mathrm{isqrt}}")
   (ASECH "{\\mathrm{asech}}") (LOG10 "{\\mathrm{log10}}")
   (ASIND "{\\mathrm{asind}}") (LOGB "{\\mathrm{logb}}")
   (ASINH "{\\mathrm{asinh}}") (NORM "{\\mathrm{norm}}")
   (ATAN2 "{\\mathrm{atan2}}") (ONE_OF "{\\mathrm{one_of}}")
   (ATAN2D "{\\mathrm{atan2d}}") (PERM "{\\mathrm{perm}}")
   (ATAND "{\\mathrm{atand}}") (RAD2DEG "{\\mathrm{rad2deg}}")
   (ATANH "{\\mathrm{atanh}}") (RAD2DMS "{\\mathrm{rad2dms}}")
   (CBRT "{\\mathrm{cbrt}}") (REPART "{\\mathrm{repart}}")
   (CEILING "{\\mathrm{ceiling}}") (ROOT_OF "{\\mathrm{root_of}}")
   (CHOOSE "{\\mathrm{choose}}") (ROUND "{\\mathrm{round}}")
   (COSD "{\\mathrm{cosd}}") (SECD "{\\mathrm{secd}}")
   (COSH "{\\mathrm{cosh}}") (SECH "{\\mathrm{sech}}")
   (COTD "{\\mathrm{cotd}}") (SGN "{\\mathrm{sgn}}") (CSCD "{\\mathrm{cscd}}")
   (SIND "{\\mathrm{sind}}") (CSCH "{\\mathrm{csch}}") (SOL "{\\mathrm{sol}}")
   (DEG2DMS "{\\mathrm{deg2dms}}") (TAND "{\\mathrm{tand}}"))
 'LAPOP) 
(PUT 'GET* 'NUMBER-OF-ARGS 2) 
(PUT 'GET* 'DEFINED-ON-LINE '156) 
(PUT 'GET* 'DEFINED-IN-FILE 'MISC/RLFI.RED) 
(PUT 'GET* 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE GET* (U V) (COND ((NUMBERP U) NIL) (T (GET U V)))) 
(FLUID '(*LATEX *LASIMP *VERBATIM **A2SFN)) 
(SWITCH (LIST 'LATEX 'LASIMP 'VERBATIM)) 
(SETQ *LASIMP T) 
(PUT 'LATEX 'SIMPFG
     '((T (LATEXON) (SETQ OUTPUTHANDLER* 'RLFI_OUTPUT))
       (NIL (LATEXOFF) (SETQ OUTPUTHANDLER* NIL)))) 
(PUT 'VERBATIM 'SIMPFG '((T (VERBATIMON)) (NIL (VERBATIMOFF)))) 
(PUT 'RLFI_OUTPUT_SETQ 'NUMBER-OF-ARGS 2) 
(PUT 'RLFI_OUTPUT_SETQ 'DEFINED-ON-LINE '167) 
(PUT 'RLFI_OUTPUT_SETQ 'DEFINED-IN-FILE 'MISC/RLFI.RED) 
(PUT 'RLFI_OUTPUT_SETQ 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE RLFI_OUTPUT_SETQ (VAR REST)
    (CONS 'SETQ
          (CONS VAR
                (COND
                 ((EQCAR REST 'SETQ)
                  (CDR (RLFI_OUTPUT_SETQ (CADR REST) (CADDR REST))))
                 (T
                  (LIST
                   (COND ((NUMBERP REST) (LIST 'TEX REST))
                         (*VERBATIM (CADR (TEXAEVAL1 REST)))
                         (T (TEXAEVAL1 REST))))))))) 
(PUT 'RLFI_OUTPUT 'NUMBER-OF-ARGS 2) 
(PUT 'RLFI_OUTPUT 'DEFINED-ON-LINE '173) 
(PUT 'RLFI_OUTPUT 'DEFINED-IN-FILE 'MISC/RLFI.RED) 
(PUT 'RLFI_OUTPUT 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE RLFI_OUTPUT (M U)
    (PROG (OUTPUTHANDLER*)
      (COND
       ((EQ M 'MAPRIN)
        (MAPRIN
         (COND ((EQCAR U 'SETQ) (RLFI_OUTPUT_SETQ (CADR U) (CADDR U)))
               ((NUMBERP U) (LIST 'TEX U)) (*VERBATIM (CADR (TEXAEVAL1 U)))
               (T (TEXAEVAL1 U)))))
       ((EQ M 'PRIN2*)
        (PRIN2* (COND (*VERBATIM (CADR (TEXAEVAL1 U))) (T (TEXAEVAL1 U)))))
       ((EQ M 'TERPRI) (TERPRI* U))
       ((EQ M 'ASSGNPRI) (ASSGNPRI (TEXAEVAL1 (CAR U)) (CADR U) (CADDR U)))))) 
(PUT 'TEXAEVAL1 'NUMBER-OF-ARGS 1) 
(PUT 'TEXAEVAL1 'DEFINED-ON-LINE '188) 
(PUT 'TEXAEVAL1 'DEFINED-IN-FILE 'MISC/RLFI.RED) 
(PUT 'TEXAEVAL1 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE TEXAEVAL1 (L)
    (COND ((AND *LATEX (NULL (EQCAR L 'TEX))) (TEXAEVAL L)) (T L))) 
(PUT 'LATEXON 'NUMBER-OF-ARGS 0) 
(PUT 'LATEXON 'DEFINED-ON-LINE '192) 
(PUT 'LATEXON 'DEFINED-IN-FILE 'MISC/RLFI.RED) 
(PUT 'LATEXON 'PROCEDURE_TYPE '(ARROW UNIT GENERAL)) 
(DE LATEXON NIL
    (PROGN
     (SETQ **A2SFN 'TEXAEVAL)
     (SETQ *RAISE NIL)
     (PRIN2T "\\documentstyle{article}")
     (PRIN2T "\\begin{document}")
     (COND
      (*VERBATIM
       (PROGN (PRIN2T "\\begin{verbatim}") (PRIN2T "REDUCE Input:"))))
     (PUT 'TEX 'RTYPEFN '(LAMBDA (X) 'TEX)))) 
(PUT 'LATEXOFF 'NUMBER-OF-ARGS 0) 
(PUT 'LATEXOFF 'DEFINED-ON-LINE '203) 
(PUT 'LATEXOFF 'DEFINED-IN-FILE 'MISC/RLFI.RED) 
(PUT 'LATEXOFF 'PROCEDURE_TYPE '(ARROW UNIT GENERAL)) 
(DE LATEXOFF NIL
    (PROGN
     (SETQ **A2SFN 'AEVAL)
     (SETQ *RAISE T)
     (REMPROP 'TEX 'RTYPEFN)
     (COND (*VERBATIM (PROGN (TERPRI) (PRIN2T "\\end{verbatim}"))))
     (PRIN2T "\\end{document}")
     (RMSUBS))) 
(PUT 'VERBATIMON 'NUMBER-OF-ARGS 0) 
(PUT 'VERBATIMON 'DEFINED-ON-LINE '214) 
(PUT 'VERBATIMON 'DEFINED-IN-FILE 'MISC/RLFI.RED) 
(PUT 'VERBATIMON 'PROCEDURE_TYPE '(ARROW UNIT GENERAL)) 
(DE VERBATIMON NIL
    (PROGN
     (COND
      ((AND *LATEX (NULL *VERBATIM))
       (PROGN (PRIN2T "\\begin{verbatim}") (PRIN2T "REDUCE Input:"))))
     (SETQ *ECHO T))) 
(PUT 'VERBATIMOFF 'NUMBER-OF-ARGS 0) 
(PUT 'VERBATIMOFF 'DEFINED-ON-LINE '220) 
(PUT 'VERBATIMOFF 'DEFINED-IN-FILE 'MISC/RLFI.RED) 
(PUT 'VERBATIMOFF 'PROCEDURE_TYPE '(ARROW UNIT GENERAL)) 
(DE VERBATIMOFF NIL
    (PROGN
     (COND
      ((AND *LATEX *VERBATIM) (PROGN (TERPRI) (PRIN2T "\\end{verbatim}"))))
     (SETQ *ECHO NIL))) 
(PUT 'TEXAEVAL 'NUMBER-OF-ARGS 1) 
(PUT 'TEXAEVAL 'DEFINED-ON-LINE '226) 
(PUT 'TEXAEVAL 'DEFINED-IN-FILE 'MISC/RLFI.RED) 
(PUT 'TEXAEVAL 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE TEXAEVAL (U) (COND (*LASIMP (TEXIFY (REVAL1 U NIL))) (T (TEXIFY U)))) 
(PUT 'TEXIFY 'NUMBER-OF-ARGS 1) 
(PUT 'TEXIFY 'DEFINED-ON-LINE '231) 
(PUT 'TEXIFY 'DEFINED-IN-FILE 'MISC/RLFI.RED) 
(PUT 'TEXIFY 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE TEXIFY (U) (COND ((NUMBERP U) U) (T (LIST 'TEX U)))) 
(PUT 'TEX 'TAG 'TEX) 
(PUT 'TEX 'SIMPFN 'SIMPCAR) 
(PUT 'TEX 'TYPELETFN 'TEXLET) 
(PUT 'TEX 'PRIFN 'LATEXPRINT) 
(PUT 'TEX 'SETPRIFN 'SETLAPRIN) 
(PUT 'TEX 'EVFN 'TEXEVFN) 
(FLAG '(TEX) 'SPRIFN) 
(PUT 'TEXEVFN 'NUMBER-OF-ARGS 2) 
(PUT 'TEXEVFN 'DEFINED-ON-LINE '244) 
(PUT 'TEXEVFN 'DEFINED-IN-FILE 'MISC/RLFI.RED) 
(PUT 'TEXEVFN 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE TEXEVFN (U V) (REVAL1 (CADR U) V)) 
(PUT 'TEXLET 'NUMBER-OF-ARGS 5) 
(PUT 'TEXLET 'DEFINED-ON-LINE '246) 
(PUT 'TEXLET 'DEFINED-IN-FILE 'MISC/RLFI.RED) 
(PUT 'TEXLET 'PROCEDURE_TYPE
     '(ARROW (TIMES GENERAL GENERAL GENERAL GENERAL GENERAL) GENERAL)) 
(DE TEXLET (U V TU B TV)
    (COND ((EQCAR V 'TEX) (LET2 U (CADR V) NIL B))
          (T (MSGPRI " value for " U " not assigned " V NIL)))) 
(PUT 'LATEXPRINT 'NUMBER-OF-ARGS 1) 
(PUT 'LATEXPRINT 'DEFINED-ON-LINE '252) 
(PUT 'LATEXPRINT 'DEFINED-IN-FILE 'MISC/RLFI.RED) 
(PUT 'LATEXPRINT 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE LATEXPRINT (U) (PROGN (PRINLABEGIN) (LATEXPRIN U) (PRINLAEND))) 
(PUT 'SETLAPRIN 'NUMBER-OF-ARGS 2) 
(PUT 'SETLAPRIN 'DEFINED-ON-LINE '258) 
(PUT 'SETLAPRIN 'DEFINED-IN-FILE 'MISC/RLFI.RED) 
(PUT 'SETLAPRIN 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE SETLAPRIN (U V)
    (PROGN
     (PRINLABEGIN)
     (LATEXPRIN U)
     (OPRINLA 'SETQ)
     (LATEXPRIN V)
     (PRINLAEND))) 
(PUT 'MATHSTYLE 'NUMBER-OF-ARGS 1) 
(PUT 'MATHSTYLE 'DEFINED-ON-LINE '266) 
(PUT 'MATHSTYLE 'DEFINED-IN-FILE 'MISC/RLFI.RED) 
(PUT 'MATHSTYLE 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE MATHSTYLE (U)
    (COND ((MEMQ (CAR U) MSTYLES*) (PROGN (SETQ MSTYLE* (CAR U)) NIL))
          (T
           (MSGPRI " mathematical style " (CAR U) " not supported " NIL NIL)))) 
(PUT 'MATHSTYLE 'STAT 'RLIS) 
(PUT 'PRINLABEGIN 'NUMBER-OF-ARGS 0) 
(PUT 'PRINLABEGIN 'DEFINED-ON-LINE '273) 
(PUT 'PRINLABEGIN 'DEFINED-IN-FILE 'MISC/RLFI.RED) 
(PUT 'PRINLABEGIN 'PROCEDURE_TYPE '(ARROW UNIT GENERAL)) 
(DE PRINLABEGIN NIL
    (PROGN
     (COND (*VERBATIM (PROGN (TERPRI) (PRIN2T "\\end{verbatim}"))))
     (SETQ LINEL* (CONS (LINELENGTH NIL) LALINE*))
     (COND (OFL* (LINELENGTH (PLUS LALINE* 2)))
           (T (SETQ LALINE* (DIFFERENCE (CAR LINEL*) 2))))
     (PRIN2 "\\begin{")
     (PRIN2 MSTYLE*)
     (PRIN2T "}"))) 
(PUT 'PRINLAEND 'NUMBER-OF-ARGS 0) 
(PUT 'PRINLAEND 'DEFINED-ON-LINE '285) 
(PUT 'PRINLAEND 'DEFINED-IN-FILE 'MISC/RLFI.RED) 
(PUT 'PRINLAEND 'PROCEDURE_TYPE '(ARROW UNIT GENERAL)) 
(DE PRINLAEND NIL
    (PROGN
     (TERPRI)
     (PRIN2 "\\end{")
     (PRIN2 MSTYLE*)
     (PRIN2T "}")
     (COND
      (*VERBATIM
       (PROGN (PRIN2T "\\begin{verbatim}") (PRIN2T "REDUCE Input:"))))
     (SETQ NCHARSPR* 0)
     (COND
      (NOCHAR1*
       (MSGPRI " Longer than one character identifiers used " NIL NOCHAR1* NIL
               NIL)))
     (COND (OFL* (LINELENGTH (CAR LINEL*))) (T (SETQ LALINE* (CDR LINEL*))))
     (SETQ NOCHAR* (APPEND NOCHAR* NOCHAR1*))
     (SETQ NOCHAR1* NIL))) 
(PUT 'LATEXPRIN 'NUMBER-OF-ARGS 1) 
(PUT 'LATEXPRIN 'DEFINED-ON-LINE '303) 
(PUT 'LATEXPRIN 'DEFINED-IN-FILE 'MISC/RLFI.RED) 
(PUT 'LATEXPRIN 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE LATEXPRIN (U)
    (COND ((EQCAR U 'TEX) (MAPRINTLA (CADR U) 0)) (T (MAPRINTLA U 0)))) 
(PUT 'TEXPRLA 'NUMBER-OF-ARGS 2) 
(PUT 'TEXPRLA 'DEFINED-ON-LINE '308) 
(PUT 'TEXPRLA 'DEFINED-IN-FILE 'MISC/RLFI.RED) 
(PUT 'TEXPRLA 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE TEXPRLA (U P) (MAPRINTLA (CAR U) P)) 
(PUT 'TEX 'LAPRIFN 'TEXPRLA) 
(PUT 'MAPRINTLA 'NUMBER-OF-ARGS 2) 
(PUT 'MAPRINTLA 'DEFINED-ON-LINE '313) 
(PUT 'MAPRINTLA 'DEFINED-IN-FILE 'MISC/RLFI.RED) 
(PUT 'MAPRINTLA 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE MAPRINTLA (L P)
    (PROG (X)
      (COND ((NULL L) (RETURN NIL)) ((NUMBERP L) (GO C))
            ((ATOM L) (RETURN (PRINLATOM L)))
            ((STRINGP L) (RETURN (PRIN2LA L)))
            ((NOT (ATOM (CAR L))) (RETURN (MAPRINTLA (CAR L) P)))
            ((AND (SETQ X (GET (CAR L) 'LAPRIFN))
                  (OR
                   (AND (NOT (FLAGP (CAR L) 'FULLA))
                        (NOT (EQ (APPLY X (LIST (CDR L) P)) 'FAILED)))
                   (AND (FLAGP (CAR L) 'FULLA)
                        (NOT (EQ (APPLY X (LIST L P)) 'FAILED)))))
             (RETURN L))
            ((SETQ X (GET (CAR L) 'INDEXED))
             (RETURN (PRINIDOP (CAR L) (CDR L) X)))
            ((SETQ X (GET (CAR L) 'INFIX)) (GO A))
            ((EQ (CAR L) '|:RD:|)
             (RETURN
              (PROG (*NAT LL)
                (SETQ LL
                        (COND ((FLOATP (CDR L)) (LENGTHC (CDR L)))
                              (T
                               (PLUS (LENGTHC (CADR L)) (LENGTHC (CDDR L))
                                     5))))
                (COND
                 ((GREATERP (PLUS NCHARSPR* LL) LALINE*)
                  (PROGN (TERPRI) (SETQ NCHARSPR* LL)))
                 (T (SETQ NCHARSPR* (PLUS NCHARSPR* LL))))
                (SETQ POSN* ORIG*)
                (|RD:PRIN| L)))))
      (OPRINLA (CAR L))
      (PRINPOPARGS (CAR L) (CDR L) P)
      (RETURN L)
     A
      (SETQ P (GREATERP X P))
      (COND ((AND (NULL P) (EQ (CAR L) 'EQUAL)) (SETQ P T)))
      (COND (P (GO B)))
      (PRINLATOM '|(|)
     B
      (INPRINLA (CAR L) X (CDR L))
      (COND (P (RETURN L)))
      (PRINLATOM '|)|)
      (RETURN L)
     C
      (COND
       ((OR (NOT (LESSP L 0)) (LESSP P (GET 'MINUS 'INFIX)))
        (RETURN (PRIN2LA L))))
      (PRIN2LA '|(|)
      (PRIN2LA L)
      (PRIN2LA '|)|)
      (RETURN L))) 
(PUT 'PRINPOPARGS 'NUMBER-OF-ARGS 3) 
(PUT 'PRINPOPARGS 'DEFINED-ON-LINE '361) 
(PUT 'PRINPOPARGS 'DEFINED-IN-FILE 'MISC/RLFI.RED) 
(PUT 'PRINPOPARGS 'PROCEDURE_TYPE
     '(ARROW (TIMES GENERAL GENERAL GENERAL) GENERAL)) 
(DE PRINPOPARGS (OP ARGS P)
    (PROG (X)
      (SETQ X (OR (NULL ARGS) (CDR ARGS) (NOT (ATOM (CAR ARGS)))))
      (COND (X (PRINLATOM '|(|)) (T (PRIN2LA "\\,")))
      (COND (ARGS (INPRINLA '*COMMA* 0 ARGS)))
      (COND (X (PRINLATOM '|)|)))
      (COND ((AND (NULL X) (EQUAL P (GET 'TIMES 'INFIX))) (PRIN2LA "\\:")))
      (RETURN ARGS))) 
(PUT 'PRINLATOM 'NUMBER-OF-ARGS 1) 
(PUT 'PRINLATOM 'DEFINED-ON-LINE '375) 
(PUT 'PRINLATOM 'DEFINED-IN-FILE 'MISC/RLFI.RED) 
(PUT 'PRINLATOM 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE PRINLATOM (U)
    (PROG (N F A)
      (COND ((SETQ F (GET U 'FONT)) (PRIN2LA F)))
      (COND ((SETQ A (GET U 'ACCENT)) (PRIN2LA A)))
      (COND ((SETQ N (GET U 'NAME)) (PRIN2LA N)) (T (PRIN2LA (TESTCHAR1 U))))
      (COND (A (PRIN2LA "}")))
      (COND (F (PRIN2LA "}")))
      (RETURN U))) 
(PUT 'DEFID 'NUMBER-OF-ARGS 1) 
(PUT 'DEFID 'DEFINED-ON-LINE '389) 
(PUT 'DEFID 'DEFINED-IN-FILE 'MISC/RLFI.RED) 
(PUT 'DEFID 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE DEFID (U)
    (PROG (AT X Y)
      (SETQ AT (CAR U))
      (COND ((OR (NOT (ATOM AT)) (NULL (CAR U))) (GO ER)))
     A
      (SETQ U (CDR U))
      (SETQ X (CAR U))
      (COND ((EQCAR X 'EQUAL) (SETQ X (CDR X))) (T (GO ER)))
      (COND
       ((EQ (CAR X) 'NAME)
        (COND
         ((FLAGP (CADR X) 'SYMBOL)
          (PUT AT 'NAME (INCOMPE3 '|\\| (CADR X) BLANK)))
         (T (PUT AT 'NAME (TESTCHAR1 (CADR X))))))
       ((EQ (CAR X) 'FONT)
        (COND ((SETQ Y (GET (CADR X) 'FONTDEF)) (PUT AT 'FONT Y)) (T (GO ER))))
       ((EQ (CAR X) 'ACCENT)
        (COND
         ((FLAGP (CADR X) 'ACCDEF)
          (PUT AT 'ACCENT (INCOMPE3 '|\\| (CADR X) '{)))
         (T (GO ER))))
       (T (GO ER)))
      (COND ((CDR U) (GO A)))
      (RETURN NIL)
     ER
      (LPRIE " Syntax error "))) 
(PUT 'DEFID 'STAT 'RLIS) 
(PUT 'INCOMPE3 'NUMBER-OF-ARGS 3) 
(PUT 'INCOMPE3 'DEFINED-ON-LINE '419) 
(PUT 'INCOMPE3 'DEFINED-IN-FILE 'MISC/RLFI.RED) 
(PUT 'INCOMPE3 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL GENERAL) GENERAL)) 
(DE INCOMPE3 (A B C)
    (INTERN (COMPRESS (APPEND (EXPLODE A) (APPEND (EXPLODE B) (EXPLODE C)))))) 
(PUT 'TESTCHAR1 'NUMBER-OF-ARGS 1) 
(PUT 'TESTCHAR1 'DEFINED-ON-LINE '423) 
(PUT 'TESTCHAR1 'DEFINED-IN-FILE 'MISC/RLFI.RED) 
(PUT 'TESTCHAR1 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE TESTCHAR1 (U)
    (COND ((FIXP U) U) ((NULL (CDR (EXPLODE2 U))) U) ((MEMBER U NOCHAR*) U)
          ((MEMBER U NOCHAR1*) U)
          (T (PROGN (SETQ NOCHAR1* (CONS U NOCHAR1*)) U)))) 
(PUT 'CHUNDEXP 'NUMBER-OF-ARGS 1) 
(PUT 'CHUNDEXP 'DEFINED-ON-LINE '431) 
(PUT 'CHUNDEXP 'DEFINED-IN-FILE 'MISC/RLFI.RED) 
(PUT 'CHUNDEXP 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE CHUNDEXP (U)
    (PROG (X)
      (SETQ U (EXPLODE2 U))
      (SETQ X U)
      (COND ((AND (EQCAR U '_) (CDR U)) (SETQ U (CONS '|\\| U))))
     A
      (COND ((NULL (CDR X)) (GO R)))
      (COND
       ((EQ (CADR X) '_)
        (PROGN (RPLACD X (CONS '|\\| (CDR X))) (SETQ X (CDR X)))))
      (SETQ X (CDR X))
      (GO A)
     R
      (RETURN U))) 
(PUT 'INPRINLA 'NUMBER-OF-ARGS 3) 
(PUT 'INPRINLA 'DEFINED-ON-LINE '448) 
(PUT 'INPRINLA 'DEFINED-IN-FILE 'MISC/RLFI.RED) 
(PUT 'INPRINLA 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL GENERAL) GENERAL)) 
(DE INPRINLA (OP P L)
    (PROG ()
      (COND ((GET OP 'ALT) (GO A)))
      (MAPRINTLA (CAR L) P)
     A0
      (SETQ L (CDR L))
     A
      (COND ((NULL L) (RETURN NIL))
            ((OR (ATOM (CAR L)) (NOT (EQ OP (GET* (CAAR L) 'ALT))))
             (PROGN (OPRINLA OP) (MAPRINTLA (NEGNUMBERCHK (CAR L)) P)))
            (T (MAPRINTLA (CAR L) P)))
      (GO A0))) 
(PUT 'OPRINLA 'NUMBER-OF-ARGS 1) 
(PUT 'OPRINLA 'DEFINED-ON-LINE '462) 
(PUT 'OPRINLA 'DEFINED-IN-FILE 'MISC/RLFI.RED) 
(PUT 'OPRINLA 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE OPRINLA (OP)
    (PROG (X)
      (COND ((SETQ X (GET OP 'LAPR)) (PRIN2LA X))
            ((SETQ X (GET OP 'PRTCH)) (PRIN2LA X))
            ((SETQ X (GET OP 'LAPOP)) (PROGN (PRIN2LA X) (PRIN2LA BLANK)))
            (T (PRINLATOM OP))))) 
(PUT 'SLASH 'SIMPFN 'SIMPIDEN) 
(FLUID '(*STRING-RESULT *STRING-OUTPUT)) 
(PUT 'PRIN2LA 'NUMBER-OF-ARGS 1) 
(PUT 'PRIN2LA 'DEFINED-ON-LINE '481) 
(PUT 'PRIN2LA 'DEFINED-IN-FILE 'MISC/RLFI.RED) 
(PUT 'PRIN2LA 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE PRIN2LA (U)
    (PROG (L)
      (SETQ U (CHUNDEXP U))
      (COND
       (*STRING-OUTPUT
        (PROG (A)
          (SETQ A U)
         LAB
          (COND ((NULL A) (RETURN NIL)))
          ((LAMBDA (A) (SETQ *STRING-RESULT (CONS A *STRING-RESULT))) (CAR A))
          (SETQ A (CDR A))
          (GO LAB)))
       (T
        (PROGN
         (SETQ L (LENGTH U))
         (COND
          ((GREATERP (PLUS NCHARSPR* L) LALINE*)
           (PROGN (TERPRI) (SETQ NCHARSPR* 0))))
         (PROG (A)
           (SETQ A U)
          LAB
           (COND ((NULL A) (RETURN NIL)))
           ((LAMBDA (A) (PRIN2 A)) (CAR A))
           (SETQ A (CDR A))
           (GO LAB))
         (SETQ NCHARSPR* (PLUS NCHARSPR* L))))))) 
(PUT 'LATEX-STRING 'NUMBER-OF-ARGS 1) 
(PUT 'LATEX-STRING 'DEFINED-ON-LINE '499) 
(PUT 'LATEX-STRING 'DEFINED-IN-FILE 'MISC/RLFI.RED) 
(PUT 'LATEX-STRING 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE LATEX-STRING (U)
    (PROG (*STRING-RESULT *STRING-OUTPUT)
      (SETQ *STRING-OUTPUT T)
      (LATEXPRIN U)
      (RETURN (LIST2STRING (REVERSE *STRING-RESULT))))) 
(FLAG '(LATEX-STRING) 'OPFN) 
(PUT 'PRINFRAC 'NUMBER-OF-ARGS 2) 
(PUT 'PRINFRAC 'DEFINED-ON-LINE '508) 
(PUT 'PRINFRAC 'DEFINED-IN-FILE 'MISC/RLFI.RED) 
(PUT 'PRINFRAC 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE PRINFRAC (L P)
    (PROGN
     (PRIN2LA "\\frac{")
     (MAPRINTLA (CAR L) 0)
     (PRIN2LA "}{")
     (MAPRINTLA (CADR L) 0)
     (PRIN2LA "}"))) 
(PUT 'SLASH 'LAPRIFN 'PRINFRAC) 
(PUT 'DEFINDEX 'NUMBER-OF-ARGS 1) 
(PUT 'DEFINDEX 'DEFINED-ON-LINE '517) 
(PUT 'DEFINDEX 'DEFINED-IN-FILE 'MISC/RLFI.RED) 
(PUT 'DEFINDEX 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE DEFINDEX (U)
    (PROG (A)
      (SETQ A U)
     LAB
      (COND ((NULL A) (RETURN NIL)))
      ((LAMBDA (A) (DEFINDEX1 A)) (CAR A))
      (SETQ A (CDR A))
      (GO LAB))) 
(PUT 'DEFINDEX 'STAT 'RLIS) 
(PUT 'DEFINDEX1 'NUMBER-OF-ARGS 1) 
(PUT 'DEFINDEX1 'DEFINED-ON-LINE '522) 
(PUT 'DEFINDEX1 'DEFINED-IN-FILE 'MISC/RLFI.RED) 
(PUT 'DEFINDEX1 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE DEFINDEX1 (U)
    (PROG (AT X)
      (SETQ AT (CAR U))
      (PROG (A)
        (SETQ A (CDR U))
       LAB
        (COND ((NULL A) (RETURN NIL)))
        ((LAMBDA (A)
           (COND ((NOT (MEMQ A '(ARG UP DOWN LEFTUP LEFTDOWN))) (SETQ X T))))
         (CAR A))
        (SETQ A (CDR A))
        (GO LAB))
      (COND ((OR (NOT (ATOM AT)) (NULL (CDR U))) (SETQ X T)))
      (RETURN
       (COND (X (MSGPRI " Syntax error " U NIL NIL 'HOLD))
             (T (PUT AT 'INDEXED (CDR U))))))) 
(PUT 'PRINIDOP 'NUMBER-OF-ARGS 3) 
(PUT 'PRINIDOP 'DEFINED-ON-LINE '533) 
(PUT 'PRINIDOP 'DEFINED-IN-FILE 'MISC/RLFI.RED) 
(PUT 'PRINIDOP 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL GENERAL) GENERAL)) 
(DE PRINIDOP (OP ARGS MASK)
    (PROG (ARG UP DOWN LUP LDOWN)
      (COND ((NULL ARGS) (RETURN (PRINLATOM OP))))
     A
      (COND ((EQ (CAR MASK) 'ARG) (SETQ ARG (CONS (CAR ARGS) ARG)))
            ((EQ (CAR MASK) 'UP) (SETQ UP (CONS (CAR ARGS) UP)))
            ((EQ (CAR MASK) 'DOWN) (SETQ DOWN (CONS (CAR ARGS) DOWN)))
            ((EQ (CAR MASK) 'LEFTUP) (SETQ LUP (CONS (CAR ARGS) LUP)))
            ((EQ (CAR MASK) 'LEFTDOWN) (SETQ LDOWN (CONS (CAR ARGS) LDOWN))))
      (SETQ MASK (CDR MASK))
      (SETQ ARGS (CDR ARGS))
      (COND ((AND MASK ARGS) (GO A)))
      (SETQ MASK '(ARG))
      (COND (ARGS (GO A)))
      (SETQ ARG (REVERSE ARG))
      (SETQ UP (REVERSE UP))
      (SETQ DOWN (REVERSE DOWN))
      (SETQ LUP (REVERSE LUP))
      (SETQ LDOWN (REVERSE LDOWN))
      (COND ((OR LUP LDOWN) (PRIN2LA "\\:")))
      (COND (LUP (PROGN (PRIN2LA '^{) (PRININDEXS LUP) (PRIN2LA "}"))))
      (COND
       (LDOWN
        (PROGN (PRIN2LA "_") (PRIN2LA "{") (PRININDEXS LDOWN) (PRIN2LA "}"))))
      (OPRINLA OP)
      (COND (UP (PROGN (PRIN2LA '^{) (PRININDEXS UP) (PRIN2LA "}"))))
      (COND
       (DOWN
        (PROGN (PRIN2LA "_") (PRIN2LA "{") (PRININDEXS DOWN) (PRIN2LA "}"))))
      (COND
       (ARG
        (PROGN (PRINLATOM '|(|) (INPRINLA '*COMMA* 0 ARG) (PRINLATOM '|)|))))
      (RETURN OP))) 
(PUT 'PRININDEXS 'NUMBER-OF-ARGS 1) 
(PUT 'PRININDEXS 'DEFINED-ON-LINE '580) 
(PUT 'PRININDEXS 'DEFINED-IN-FILE 'MISC/RLFI.RED) 
(PUT 'PRININDEXS 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE PRININDEXS (NDXS)
    (PROG (B)
      (PROG (A)
        (SETQ A NDXS)
       LAB
        (COND ((NULL A) (RETURN NIL)))
        ((LAMBDA (A) (COND ((NOT (ATOM A)) (SETQ B T)))) (CAR A))
        (SETQ A (CDR A))
        (GO LAB))
      (COND
       ((NOT B)
        (PROG (A)
          (SETQ A NDXS)
         LAB
          (COND ((NULL A) (RETURN NIL)))
          ((LAMBDA (A) (PRINLATOM A)) (CAR A))
          (SETQ A (CDR A))
          (GO LAB)))
       (T (INPRINLA '*COMMA* 0 NDXS))))) 
(PUT 'EXPTPRLA 'NUMBER-OF-ARGS 2) 
(PUT 'EXPTPRLA 'DEFINED-ON-LINE '590) 
(PUT 'EXPTPRLA 'DEFINED-IN-FILE 'MISC/RLFI.RED) 
(PUT 'EXPTPRLA 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE EXPTPRLA (ARGS P)
    (PROG (ARG EXP ILIST)
      (SETQ ARG (CAR ARGS))
      (SETQ EXP (CADR ARGS))
      (COND
       ((AND (NOT (ATOM EXP)) (EQ (CAR EXP) 'QUOTIENT) (EQUAL (CADR EXP) 1)
             (ATOM (CADDR EXP)))
        (COND
         ((EQUAL (CADDR EXP) 2)
          (PROGN (PRIN2LA "\\sqrt{") (MAPRINTLA ARG 0) (PRIN2LA "}")))
         (T
          (PROGN
           (PRIN2LA "\\sqrt[")
           (PRINLATOM (CADDR EXP))
           (PRIN2LA "]{")
           (MAPRINTLA ARG 0)
           (PRIN2LA "}")))))
       ((ATOM ARG)
        (PROGN (PRINLATOM ARG) (PRIN2LA '^{) (MAPRINTLA EXP 0) (PRIN2LA "}")))
       ((AND (ATOM (CAR ARG)) (NOT (SETQ ILIST (GET (CAR ARG) 'INDEXED)))
             (NOT (GET (CAR ARG) 'LAPRIFN)) (NOT (GET (CAR ARG) 'INFIX))
             (ATOM EXP))
        (PROGN
         (OPRINLA (CAR ARG))
         (PRIN2LA '^{)
         (PRINLATOM EXP)
         (PRIN2LA "}")
         (PRINPOPARGS (CAR ARG) (CDR ARG) P)))
       ((AND (ATOM (CAR ARG)) (SETQ ILIST (GET (CAR ARG) 'INDEXED))
             (NOT (MEMQ 'UP ILIST)))
        (PROGN (MAPRINTLA ARG 0) (PRIN2LA '^{) (MAPRINTLA EXP 0) (PRIN2LA '})))
       (T
        (PROGN
         (PRINLATOM '|(|)
         (MAPRINTLA ARG 0)
         (PRINLATOM '|)|)
         (PRIN2LA '^{)
         (MAPRINTLA EXP 0)
         (PRIN2LA "}"))))
      (RETURN ARGS))) 
(PUT 'EXPT 'LAPRIFN 'EXPTPRLA) 
(PUT 'SQRTPRLA 'NUMBER-OF-ARGS 2) 
(PUT 'SQRTPRLA 'DEFINED-ON-LINE '638) 
(PUT 'SQRTPRLA 'DEFINED-IN-FILE 'MISC/RLFI.RED) 
(PUT 'SQRTPRLA 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE SQRTPRLA (ARG P)
    (PROGN (PRIN2LA "\\sqrt {") (MAPRINTLA (CAR ARG) 0) (PRIN2LA "}"))) 
(PUT 'SQRT 'LAPRIFN 'SQRTPRLA) 
(PUT 'INTPRLA 'NUMBER-OF-ARGS 2) 
(PUT 'INTPRLA 'DEFINED-ON-LINE '645) 
(PUT 'INTPRLA 'DEFINED-IN-FILE 'MISC/RLFI.RED) 
(PUT 'INTPRLA 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE INTPRLA (ARGS P)
    (PROG (ARG VAR)
      (COND
       ((OR (NULL ARGS) (NULL (CDR ARGS)) (NOT (ATOM (CADR ARGS))))
        (RETURN 'FAILED)))
      (SETQ ARG (CAR ARGS))
      (SETQ VAR (CADR ARGS))
      (PRIN2LA "\\int ")
      (MAPRINTLA ARG 0)
      (PRIN2LA "\\:d\\,")
      (PRINLATOM VAR)
      (RETURN ARGS))) 
(PUT 'INT 'LAPRIFN 'INTPRLA) 
(PUT 'DINTPRLA 'NUMBER-OF-ARGS 2) 
(PUT 'DINTPRLA 'DEFINED-ON-LINE '661) 
(PUT 'DINTPRLA 'DEFINED-IN-FILE 'MISC/RLFI.RED) 
(PUT 'DINTPRLA 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE DINTPRLA (ARGS P)
    (PROG (DOWN UP ARG VAR)
      (COND
       ((OR (NULL ARGS) (NULL (CDR ARGS)) (NULL (CDDR ARGS))
            (NULL (CDDDR ARGS)) (NOT (ATOM (SETQ VAR (CADDDR ARGS)))))
        (RETURN 'FAILED)))
      (SETQ DOWN (CAR ARGS))
      (SETQ UP (CADR ARGS))
      (SETQ ARG (CADDR ARGS))
      (PRIN2LA "\\int")
      (PRIN2LA "_")
      (PRIN2LA "{")
      (MAPRINTLA DOWN 0)
      (PRIN2LA "}^{")
      (MAPRINTLA UP 0)
      (PRIN2LA "}")
      (MAPRINTLA ARG 0)
      (PRIN2LA "\\:d\\,")
      (PRINLATOM VAR)
      (RETURN ARGS))) 
(PUT 'DINT 'LAPRIFN 'DINTPRLA) 
(PUT 'SUMPRLA 'NUMBER-OF-ARGS 2) 
(PUT 'SUMPRLA 'DEFINED-ON-LINE '684) 
(PUT 'SUMPRLA 'DEFINED-IN-FILE 'MISC/RLFI.RED) 
(PUT 'SUMPRLA 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE SUMPRLA (EX P)
    (PROG (OP DOWN UP ARG)
      (COND
       ((OR (NOT (GET (SETQ OP (CAR EX)) 'LAPOP)) (NULL (CDR EX))
            (NULL (CDDR EX)) (NULL (CDDDR EX)))
        (RETURN 'FAILED)))
      (SETQ DOWN (CADR EX))
      (SETQ UP (CADDR EX))
      (SETQ ARG (CADDDR EX))
      (OPRINLA OP)
      (COND
       (DOWN
        (PROGN (PRIN2LA "_") (PRIN2LA "{") (MAPRINTLA DOWN 0) (PRIN2LA "}"))))
      (COND (UP (PROGN (PRIN2LA '^{) (MAPRINTLA UP 0) (PRIN2LA "}"))))
      (MAPRINTLA ARG (DIFFERENCE (GET 'TIMES 'INFIX) 1))
      (RETURN EX))) 
(PUT 'SUM 'LAPRIFN 'SUMPRLA) 
(PUT 'PRODUCT 'LAPRIFN 'SUMPRLA) 
(FLAG '(SUM PRODUCT) 'FULLA) 
(PUT 'SQPRLA 'NUMBER-OF-ARGS 2) 
(PUT 'SQPRLA 'DEFINED-ON-LINE '712) 
(PUT 'SQPRLA 'DEFINED-IN-FILE 'MISC/RLFI.RED) 
(PUT 'SQPRLA 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE SQPRLA (ARGS P) (MAPRINTLA (PREPSQ* (CAR ARGS)) P)) 
(PUT '*SQ 'LAPRIFN 'SQPRLA) 
(PUT '|PS:PRLA| 'NUMBER-OF-ARGS 2) 
(PUT '|PS:PRLA| 'DEFINED-ON-LINE '719) 
(PUT '|PS:PRLA| 'DEFINED-IN-FILE 'MISC/RLFI.RED) 
(PUT '|PS:PRLA| 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE |PS:PRLA| (ARG P) (MAPRINTLA (|PS:PRINT1| (CONS '|:PS:| ARG)) P)) 
(PUT '|:PS:| 'LAPRIFN '|PS:PRLA|) 
(PUT 'TAYPRLA 'NUMBER-OF-ARGS 2) 
(PUT 'TAYPRLA 'DEFINED-ON-LINE '724) 
(PUT 'TAYPRLA 'DEFINED-IN-FILE 'MISC/RLFI.RED) 
(PUT 'TAYPRLA 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE TAYPRLA (ARG P) (MAPRINTLA (TAYLOR*PRINT1 (CONS 'TAYLOR* ARG)) P)) 
(PUT 'TAYLOR* 'LAPRIFN 'TAYPRLA) 
(PUT 'DFPRLA 'NUMBER-OF-ARGS 2) 
(PUT 'DFPRLA 'DEFINED-ON-LINE '729) 
(PUT 'DFPRLA 'DEFINED-IN-FILE 'MISC/RLFI.RED) 
(PUT 'DFPRLA 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE DFPRLA (DFEX P)
    (PROG (OP ORD ARG X ARGUP)
      (SETQ OP (GET (CAR DFEX) 'LAPOP))
      (SETQ ARG (CADR DFEX))
      (SETQ DFEX (CDDR DFEX))
      (SETQ X DFEX)
      (SETQ ORD 0)
     A
      (COND ((NULL (CDR X)) (PROGN (SETQ X (CDR X)) (SETQ ORD (PLUS ORD 1))))
            ((FIXP (CADR X))
             (PROGN (SETQ ORD (PLUS ORD (CADR X))) (SETQ X (CDDR X))))
            (T (PROGN (SETQ X (CDR X)) (SETQ ORD (PLUS ORD 1)))))
      (COND (X (GO A)))
      (COND
       ((OR (ATOM ARG)
            (AND (NOT (GET (CAR ARG) 'INFIX)) (NOT (GET (CAR ARG) 'LAPRIFN))))
        (SETQ ARGUP T)))
      (PRIN2LA "\\frac{")
      (PRIN2LA OP)
      (COND ((EQUAL ORD 1) (PRIN2LA "\\,"))
            (T (PROGN (PRIN2LA '^{) (PRIN2LA ORD) (PRIN2LA "}"))))
      (COND (ARGUP (MAPRINTLA ARG 0)))
      (PRIN2LA "}{")
      (SETQ X DFEX)
     B
      (COND ((AND (NOT (ATOM (CAR X))) (CDR X) (FIXP (CADR X))) (PRIN2LA "(")))
      (PRIN2LA OP)
      (COND
       ((OR (NULL (CDR X)) (NOT (FIXP (CADR X))))
        (PROGN (PRIN2LA "\\,") (MAPRINTLA (CAR X) 0) (SETQ X (CDR X))))
       (T
        (PROGN
         (MAPRINTLA (CAR X) 0)
         (COND ((NOT (ATOM (CAR X))) (PRIN2LA ")")))
         (PRIN2LA '^{)
         (PRIN2LA (CADR X))
         (PRIN2LA "}")
         (SETQ X (CDDR X)))))
      (COND (X (GO B)))
      (PRIN2LA "}")
      (COND ((NULL ARGUP) (MAPRINTLA ARG (GET 'QUOTIENT 'INFIX))))
      (RETURN ARG))) 
(PUT 'DF 'LAPRIFN 'DFPRLA) 
(PUT 'PDF 'LAPRIFN 'DFPRLA) 
(FLAG '(DF PDF) 'FULLA) 
(PUT 'DF 'LAPOP "{\\rm d}") 
(PUT 'PDF 'LAPOP "\\partial ") 
(PUT 'LISTPRLA 'NUMBER-OF-ARGS 2) 
(PUT 'LISTPRLA 'DEFINED-ON-LINE '785) 
(PUT 'LISTPRLA 'DEFINED-IN-FILE 'MISC/RLFI.RED) 
(PUT 'LISTPRLA 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE LISTPRLA (ARGS P)
    (COND
     (ARGS
      (PROGN
       (PRIN2T "\\left\\{")
       (MAPRINTLA (CAR ARGS) 0)
       (SETQ ARGS (CDR ARGS))
       (COND
        (ARGS
         (PROG (A)
           (SETQ A ARGS)
          LAB
           (COND ((NULL A) (RETURN NIL)))
           ((LAMBDA (A) (PROGN (PRIN2LA " , ") (MAPRINTLA A 0))) (CAR A))
           (SETQ A (CDR A))
           (GO LAB))))
       (TERPRI)
       (PRIN2 "\\right\\}")))
     (T (PRIN2 "\\{\\}")))) 
(PUT 'LIST 'LAPRIFN 'LISTPRLA) 
(PUT 'ARBINT 'INDEXED '(DOWN)) 
(PUT 'ARBREAL 'INDEXED '(DOWN)) 
(PUT 'ARBCOMPLEX 'INDEXED '(DOWN)) 
(PUT 'BINOMPRLA 'NUMBER-OF-ARGS 2) 
(PUT 'BINOMPRLA 'DEFINED-ON-LINE '805) 
(PUT 'BINOMPRLA 'DEFINED-IN-FILE 'MISC/RLFI.RED) 
(PUT 'BINOMPRLA 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE BINOMPRLA (U P)
    (PROG ()
      (PRIN2LA "\\binom")
      (PRIN2LA "{")
      (MAPRINTLA (CAR U) 0)
      (PRIN2LA "}{")
      (MAPRINTLA (CADR U) 0)
      (PRIN2LA "}"))) 
(PUT 'BINOMIAL 'LAPRIFN 'BINOMPRLA) 
(AEVAL (NULL (SETQ *MODE 'ALGEBRAIC))) 
(OPERATOR (LIST 'PDF 'DINT 'PRODUCT)) 
(PUT '|...| 'NAME '|\\CDOTS |) 
(ENDMODULE) 