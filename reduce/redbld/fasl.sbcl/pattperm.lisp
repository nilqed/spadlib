(cl:declaim (cl:optimize cl:debug cl:safety))
(cl:declaim (sb-ext:muffle-conditions sb-ext:compiler-note cl:style-warning))
(MODULE (LIST 'PATTPERM)) 
(FLUID '(SYMM OP R P I UPB IDENTITY EXPAND ACONTRACT MCONTRACT COMB)) 
(GLOBAL '(*SYM-ASSOC)) 
(GLOBAL '(*UDEBUG)) 
(PUT 'FIRST0 'NUMBER-OF-ARGS 2) 
(PUT 'FIRST0 'DEFINED-ON-LINE '43) 
(PUT 'FIRST0 'DEFINED-IN-FILE 'PM/PATTPERM.RED) 
(PUT 'FIRST0 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE FIRST0 (U N)
    (COND ((GREATERP N 0) (CONS (CAR U) (FIRST0 (CDR U) (DIFFERENCE N 1))))
          (T NIL))) 
(PUT 'LAST0 'NUMBER-OF-ARGS 2) 
(PUT 'LAST0 'DEFINED-ON-LINE '46) 
(PUT 'LAST0 'DEFINED-IN-FILE 'PM/PATTPERM.RED) 
(PUT 'LAST0 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE LAST0 (U N) (COND ((LESSP N 1) U) (T (LAST0 (CDR U) (DIFFERENCE N 1))))) 
(PUT 'LIST-MGEN 'NUMBER-OF-ARGS 1) 
(PUT 'LIST-MGEN 'DEFINED-ON-LINE '49) 
(PUT 'LIST-MGEN 'DEFINED-IN-FILE 'PM/PATTPERM.RED) 
(PUT 'LIST-MGEN 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE LIST-MGEN (U)
    (PROG (I)
      (SETQ I 0)
      (PROG (J)
        (SETQ J U)
       LAB
        (COND ((NULL J) (RETURN NIL)))
        ((LAMBDA (J)
           (COND
            ((AND (ATOM J) (AND (ATOM J) (GET J 'MGEN))) (SETQ I (PLUS I 1)))))
         (CAR J))
        (SETQ J (CDR J))
        (GO LAB))
      (RETURN I))) 
(PUT 'INITARG 'NUMBER-OF-ARGS 1) 
(PUT 'INITARG 'DEFINED-ON-LINE '56) 
(PUT 'INITARG 'DEFINED-IN-FILE 'PM/PATTPERM.RED) 
(PUT 'INITARG 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE INITARG (U)
    (PROG (ASSOC MGEN FLEX FILLER N LMGEN)
      (SETQ N 0)
      (SETQ LMGEN 0)
      (SETQ SYMM (FLAGP OP 'SYMMETRIC))
      (SETQ N (PLUS (DIFFERENCE (LENGTH P) (LENGTH R)) 1))
      (SETQ IDENTITY (GET OP 'IDENTITY))
      (SETQ MGEN ((LAMBDA (U) (AND (ATOM U) (GET U 'MGEN))) (CAR R)))
      (SETQ LMGEN (LIST-MGEN (CDR R)))
      (SETQ ASSOC
              (AND (FLAGP OP 'ASSOC)
                   (NOT (AND SYMM (GREATERP LMGEN 0) (NOT *SYM-ASSOC)))))
      (SETQ FLEX (AND (GREATERP (LENGTH R) 1) (OR ASSOC LMGEN)))
      (SETQ FILLER (OR (GREATERP N 1) (AND IDENTITY (GREATERP (LENGTH P) 0))))
      (SETQ MCONTRACT (AND MGEN FILLER))
      (SETQ ACONTRACT (AND ASSOC FILLER (NOT MGEN)))
      (SETQ EXPAND (AND IDENTITY (OR (LESSP N 1) FLEX)))
      (SETQ I (COND ((OR FLEX (LESSP N 1)) (COND (MGEN 0) (T 1))) (T N)))
      (SETQ UPB (COND (IDENTITY (LENGTH P)) (T (PLUS N LMGEN))))
      (COND (SYMM (SETQ COMB (INITCOMB U)))))) 
(PUT 'NEXTARG 'NUMBER-OF-ARGS 1) 
(PUT 'NEXTARG 'DEFINED-ON-LINE '80) 
(PUT 'NEXTARG 'DEFINED-IN-FILE 'PM/PATTPERM.RED) 
(PUT 'NEXTARG 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE NEXTARG (U) (COND (SYMM (S-NEXTARG U)) (T (O-NEXTARG U)))) 
(PUT 'O-NEXTARG 'NUMBER-OF-ARGS 1) 
(PUT 'O-NEXTARG 'DEFINED-ON-LINE '83) 
(PUT 'O-NEXTARG 'DEFINED-IN-FILE 'PM/PATTPERM.RED) 
(PUT 'O-NEXTARG 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE O-NEXTARG (U)
    (PROG (ARGS)
      (COND (*UDEBUG (UPRINT)))
      (SETQ ARGS
              (COND ((AND (EQUAL I 1) (LEQ I UPB)) U)
                    ((AND (EQUAL I 0) (LEQ I UPB)) (CONS '(NULL-FN) U))
                    ((AND ACONTRACT (LEQ I UPB))
                     (CONS (CONS OP (FIRST0 U I)) (LAST0 U I)))
                    ((AND MCONTRACT (LEQ I UPB))
                     (CONS (CONS 'NULL-FN (FIRST0 U I)) (LAST0 U I)))
                    (EXPAND (PROGN (SETQ EXPAND NIL) (CONS IDENTITY U)))))
      (SETQ I (PLUS I 1))
      (RETURN ARGS))) 
(PUT 'S-NEXTARG 'NUMBER-OF-ARGS 1) 
(PUT 'S-NEXTARG 'DEFINED-ON-LINE '98) 
(PUT 'S-NEXTARG 'DEFINED-IN-FILE 'PM/PATTPERM.RED) 
(PUT 'S-NEXTARG 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE S-NEXTARG (U)
    (PROG (V ARGS)
      (COND (*UDEBUG (UPRINT)))
      (COND ((NULL COMB) (PROGN (SETQ I (PLUS I 1)) (SETQ COMB (INITCOMB U)))))
      (SETQ ARGS
              (COND
               ((SETQ V (GETCOMB U COMB))
                (COND ((AND (EQUAL I 1) (LEQ I UPB)) (CONS (CAAR V) (CDR V)))
                      ((AND (EQUAL I 0) (LEQ I UPB)) (CONS '(NULL-FN) U))
                      ((AND ACONTRACT (LEQ I UPB))
                       (CONS (CONS OP (CAR V)) (CDR V)))
                      ((AND MCONTRACT (LEQ I UPB))
                       (CONS (CONS 'NULL-FN (CAR V)) (CDR V)))
                      (EXPAND (PROGN (SETQ EXPAND NIL) (CONS IDENTITY U)))
                      (T NIL)))
               ((AND (EQUAL I 0) (LEQ I UPB)) (CONS '(NULL-FN) U))
               (EXPAND (PROGN (SETQ EXPAND NIL) (CONS IDENTITY U)))))
      (RETURN ARGS))) 
(PUT 'GETCOMB 'NUMBER-OF-ARGS 2) 
(PUT 'GETCOMB 'DEFINED-ON-LINE '115) 
(PUT 'GETCOMB 'DEFINED-IN-FILE 'PM/PATTPERM.RED) 
(PUT 'GETCOMB 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE GETCOMB (U V)
    (PROG (GROUP)
      (SETQ COMB (NEXTCOMB V I))
      (SETQ GROUP (CAR COMB))
      (SETQ COMB (CDR COMB))
      (RETURN (COND (GROUP (CONS GROUP (SETDIFF U GROUP))) (T NIL))))) 
(PUT 'UPRINT 'NUMBER-OF-ARGS 0) 
(PUT 'UPRINT 'DEFINED-ON-LINE '123) 
(PUT 'UPRINT 'DEFINED-IN-FILE 'PM/PATTPERM.RED) 
(PUT 'UPRINT 'PROCEDURE_TYPE '(ARROW UNIT GENERAL)) 
(DE UPRINT NIL
    (PROGN
     (COND (EXPAND (PROGN (PRIN2 'EXPAND) (PRIN2 " "))))
     (COND (MCONTRACT (PROGN (PRIN2 'MCONTRACT) (PRIN2 " "))))
     (COND (ACONTRACT (PROGN (PRIN2 'ACONTRACT) (PRIN2 "  "))))
     (PRIN2 " upb = ")
     (PRIN2 UPB)
     (PRIN2 " i = ")
     (PRIN2 I)
     (COND (SYMM (PROGN (PRIN2 'SYMMETRIC) (PRIN2 COMB))))
     (TERPRI))) 
(PUT 'INITCOMB 'NUMBER-OF-ARGS 1) 
(PUT 'INITCOMB 'DEFINED-ON-LINE '132) 
(PUT 'INITCOMB 'DEFINED-IN-FILE 'PM/PATTPERM.RED) 
(PUT 'INITCOMB 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE INITCOMB (U) (CONS U NIL)) 
(PUT 'NEXTCOMB 'NUMBER-OF-ARGS 2) 
(PUT 'NEXTCOMB 'DEFINED-ON-LINE '134) 
(PUT 'NEXTCOMB 'DEFINED-IN-FILE 'PM/PATTPERM.RED) 
(PUT 'NEXTCOMB 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE NEXTCOMB (ENV N)
    (PROG (ARGS NENV V I)
      (SETQ I 0)
      (SETQ ARGS (CAR ENV))
      (SETQ NENV (CDR ENV))
      (RETURN
       (COND ((EQUAL N 0) (CONS NIL NIL))
             ((LESSP (SETQ I (DIFFERENCE (LENGTH ARGS) N)) 0) (LIST NIL))
             ((EQUAL I 0) (CONS ARGS NIL))
             (NENV
              (PROGN
               (SETQ V (NEXTCOMB NENV (DIFFERENCE N 1)))
               (CONS (CONS (CAR ARGS) (CAR V))
                     (COND ((CDR V) (CONS ARGS (CDR V)))
                           (T (LIST (CDR ARGS)))))))
             (T
              (PROGN
               (SETQ V (NEXTCOMB (INITCOMB (CDR ARGS)) (DIFFERENCE N 1)))
               (CONS (CONS (CAR ARGS) (CAR V))
                     (COND ((CDR V) (CONS ARGS (CDR V)))
                           (T (LIST (CDR ARGS))))))))))) 
(ENDMODULE) 