(cl:declaim (cl:optimize cl:debug cl:safety))
(cl:declaim (sb-ext:muffle-conditions sb-ext:compiler-note cl:style-warning))
(MODULE (LIST 'EXPVEC)) 
(PUT 'EVPERM 'NUMBER-OF-ARGS 2) 
(PUT 'EVPERM 'DEFINED-ON-LINE '44) 
(PUT 'EVPERM 'DEFINED-IN-FILE 'DIPOLY/EXPVEC.RED) 
(PUT 'EVPERM 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE EVPERM (E1 N)
    (COND ((NULL N) NIL) (T (CONS (EVNTH E1 (CAR N)) (EVPERM E1 (CDR N)))))) 
(PUT 'EVCONS 'NUMBER-OF-ARGS 2) 
(PUT 'EVCONS 'DEFINED-ON-LINE '51) 
(PUT 'EVCONS 'DEFINED-IN-FILE 'DIPOLY/EXPVEC.RED) 
(PUT 'EVCONS 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE EVCONS (E1 E2) (CONS E1 E2)) 
(PUT 'EVNTH 'NUMBER-OF-ARGS 2) 
(PUT 'EVNTH 'DEFINED-ON-LINE '56) 
(PUT 'EVNTH 'DEFINED-IN-FILE 'DIPOLY/EXPVEC.RED) 
(PUT 'EVNTH 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE EVNTH (E1 N)
    (COND ((NULL E1) 0) ((EQUAL N 1) (EVFIRST E1))
          (T (EVNTH (EVRED E1) (DIFFERENCE N 1))))) 
(PUT 'EVRED 'NUMBER-OF-ARGS 1) 
(PUT 'EVRED 'DEFINED-ON-LINE '62) 
(PUT 'EVRED 'DEFINED-IN-FILE 'DIPOLY/EXPVEC.RED) 
(PUT 'EVRED 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE EVRED (E1) (COND (E1 (CDR E1)) (T NIL))) 
(PUT 'EVFIRST 'NUMBER-OF-ARGS 1) 
(PUT 'EVFIRST 'DEFINED-ON-LINE '67) 
(PUT 'EVFIRST 'DEFINED-IN-FILE 'DIPOLY/EXPVEC.RED) 
(PUT 'EVFIRST 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE EVFIRST (E1) (COND (E1 (CAR E1)) (T 0))) 
(PUT 'EVSUM0 'NUMBER-OF-ARGS 2) 
(PUT 'EVSUM0 'DEFINED-ON-LINE '72) 
(PUT 'EVSUM0 'DEFINED-IN-FILE 'DIPOLY/EXPVEC.RED) 
(PUT 'EVSUM0 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE EVSUM0 (N P)
    (COND ((NULL P) (EVZERO1 N)) (T (EVSUM (CAR P) (EVSUM0 N (CDDR P)))))) 
(PUT 'EVZERO1 'NUMBER-OF-ARGS 1) 
(PUT 'EVZERO1 'DEFINED-ON-LINE '78) 
(PUT 'EVZERO1 'DEFINED-IN-FILE 'DIPOLY/EXPVEC.RED) 
(PUT 'EVZERO1 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE EVZERO1 (N)
    (PROG (X)
      (PROG (I)
        (SETQ I 1)
       LAB
        (COND ((MINUSP (DIFFERENCE N I)) (RETURN NIL)))
        (PROGN (SETQ X (CONS 0 X)))
        (SETQ I (PLUS2 I 1))
        (GO LAB))
      (RETURN X))) 
(PUT 'INDEXCPL 'NUMBER-OF-ARGS 2) 
(PUT 'INDEXCPL 'DEFINED-ON-LINE '86) 
(PUT 'INDEXCPL 'DEFINED-IN-FILE 'DIPOLY/EXPVEC.RED) 
(PUT 'INDEXCPL 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE INDEXCPL (EV N)
    (COND ((NULL EV) EV)
          (T
           (COND ((EQUAL (CAR EV) 0) (INDEXCPL (CDR EV) (PLUS N 1)))
                 (T (CONS N (INDEXCPL (CDR EV) (PLUS N 1)))))))) 
(PUT 'EVZER1? 'NUMBER-OF-ARGS 1) 
(PUT 'EVZER1? 'DEFINED-ON-LINE '92) 
(PUT 'EVZER1? 'DEFINED-IN-FILE 'DIPOLY/EXPVEC.RED) 
(PUT 'EVZER1? 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE EVZER1? (E) (NULL E)) 
(PUT 'EVZERO? 'NUMBER-OF-ARGS 1) 
(PUT 'EVZERO? 'DEFINED-ON-LINE '96) 
(PUT 'EVZERO? 'DEFINED-IN-FILE 'DIPOLY/EXPVEC.RED) 
(PUT 'EVZERO? 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE EVZERO? (E) (OR (NULL E) (AND (EQUAL (CAR E) 0) (EVZERO? (CDR E))))) 
(PUT 'EVZERO 'NUMBER-OF-ARGS 0) 
(PUT 'EVZERO 'DEFINED-ON-LINE '100) 
(PUT 'EVZERO 'DEFINED-IN-FILE 'DIPOLY/EXPVEC.RED) 
(PUT 'EVZERO 'PROCEDURE_TYPE '(ARROW UNIT GENERAL)) 
(DE EVZERO NIL
    (PROG (X)
      (PROG (I)
        (SETQ I 1)
       LAB
        (COND ((MINUSP (DIFFERENCE (LENGTH DIPVARS*) I)) (RETURN NIL)))
        (PROGN (SETQ X (CONS 0 X)))
        (SETQ I (PLUS2 I 1))
        (GO LAB))
      (RETURN X))) 
(PUT 'MKEXPVEC 'NUMBER-OF-ARGS 1) 
(PUT 'MKEXPVEC 'DEFINED-ON-LINE '107) 
(PUT 'MKEXPVEC 'DEFINED-IN-FILE 'DIPOLY/EXPVEC.RED) 
(PUT 'MKEXPVEC 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE MKEXPVEC (U)
    (COND ((NOT (MEMBER U DIPVARS*)) (TYPERR U "dipoly variable"))
          (T
           (PROG (X FORALL-RESULT FORALL-ENDPTR)
             (SETQ X DIPVARS*)
             (COND ((NULL X) (RETURN NIL)))
             (SETQ FORALL-RESULT
                     (SETQ FORALL-ENDPTR
                             (CONS
                              ((LAMBDA (X) (COND ((EQ X U) 1) (T 0))) (CAR X))
                              NIL)))
            LOOPLABEL
             (SETQ X (CDR X))
             (COND ((NULL X) (RETURN FORALL-RESULT)))
             (RPLACD FORALL-ENDPTR
                     (CONS ((LAMBDA (X) (COND ((EQ X U) 1) (T 0))) (CAR X))
                           NIL))
             (SETQ FORALL-ENDPTR (CDR FORALL-ENDPTR))
             (GO LOOPLABEL))))) 
(PUT 'EVLCM 'NUMBER-OF-ARGS 2) 
(PUT 'EVLCM 'DEFINED-ON-LINE '112) 
(PUT 'EVLCM 'DEFINED-IN-FILE 'DIPOLY/EXPVEC.RED) 
(PUT 'EVLCM 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE EVLCM (E1 E2)
    (PROG (X)
      (PROG ()
       WHILELABEL
        (COND ((NOT (AND E1 E2)) (RETURN NIL)))
        (PROGN
         (SETQ X
                 (CONS
                  (COND ((IGREATERP (CAR E1) (CAR E2)) (CAR E1)) (T (CAR E2)))
                  X))
         (SETQ E1 (CDR E1))
         (SETQ E2 (CDR E2)))
        (GO WHILELABEL))
      (RETURN (REVERSIP X)))) 
(PUT 'EVMTEST? 'NUMBER-OF-ARGS 2) 
(PUT 'EVMTEST? 'DEFINED-ON-LINE '126) 
(PUT 'EVMTEST? 'DEFINED-IN-FILE 'DIPOLY/EXPVEC.RED) 
(PUT 'EVMTEST? 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE EVMTEST? (E1 E2)
    (COND
     ((AND E1 E2)
      (AND (NOT (ILESSP (CAR E1) (CAR E2))) (EVMTEST? (CDR E1) (CDR E2))))
     (T (EVZERO? E2)))) 
(PUT 'EVSUM 'NUMBER-OF-ARGS 2) 
(PUT 'EVSUM 'DEFINED-ON-LINE '134) 
(PUT 'EVSUM 'DEFINED-IN-FILE 'DIPOLY/EXPVEC.RED) 
(PUT 'EVSUM 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE EVSUM (E1 E2)
    (PROG (X)
      (PROG ()
       WHILELABEL
        (COND ((NOT (AND E1 E2)) (RETURN NIL)))
        (PROGN
         (SETQ X (CONS (IPLUS2 (CAR E1) (CAR E2)) X))
         (SETQ E1 (CDR E1))
         (SETQ E2 (CDR E2)))
        (GO WHILELABEL))
      (SETQ X (REVERSIP X))
      (RETURN (COND (E1 (NCONC X E1)) (E2 (NCONC X E2)) (T X))))) 
(PUT 'EVDIF 'NUMBER-OF-ARGS 2) 
(PUT 'EVDIF 'DEFINED-ON-LINE '147) 
(PUT 'EVDIF 'DEFINED-IN-FILE 'DIPOLY/EXPVEC.RED) 
(PUT 'EVDIF 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE EVDIF (E1 E2)
    (PROG (X)
      (PROG ()
       WHILELABEL
        (COND ((NOT E2) (RETURN NIL)))
        (PROGN
         (COND ((NULL E1) (SETQ E1 '(0))))
         (SETQ X (CONS (IDIFFERENCE (CAR E1) (CAR E2)) X))
         (SETQ E1 (CDR E1))
         (SETQ E2 (CDR E2)))
        (GO WHILELABEL))
      (RETURN (NCONC (REVERSIP X) E1)))) 
(PUT 'INTEVPROD 'NUMBER-OF-ARGS 2) 
(PUT 'INTEVPROD 'DEFINED-ON-LINE '160) 
(PUT 'INTEVPROD 'DEFINED-IN-FILE 'DIPOLY/EXPVEC.RED) 
(PUT 'INTEVPROD 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE INTEVPROD (N E)
    (PROG (X FORALL-RESULT FORALL-ENDPTR)
      (SETQ X E)
      (COND ((NULL X) (RETURN NIL)))
      (SETQ FORALL-RESULT
              (SETQ FORALL-ENDPTR
                      (CONS ((LAMBDA (X) (ITIMES2 N X)) (CAR X)) NIL)))
     LOOPLABEL
      (SETQ X (CDR X))
      (COND ((NULL X) (RETURN FORALL-RESULT)))
      (RPLACD FORALL-ENDPTR (CONS ((LAMBDA (X) (ITIMES2 N X)) (CAR X)) NIL))
      (SETQ FORALL-ENDPTR (CDR FORALL-ENDPTR))
      (GO LOOPLABEL))) 
(PUT 'EXPVEC2A 'NUMBER-OF-ARGS 1) 
(PUT 'EXPVEC2A 'DEFINED-ON-LINE '164) 
(PUT 'EXPVEC2A 'DEFINED-IN-FILE 'DIPOLY/EXPVEC.RED) 
(PUT 'EXPVEC2A 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE EXPVEC2A (E) (EXPVEC2A1 E DIPVARS*)) 
(PUT 'EXPVEC2A1 'NUMBER-OF-ARGS 2) 
(PUT 'EXPVEC2A1 'DEFINED-ON-LINE '168) 
(PUT 'EXPVEC2A1 'DEFINED-IN-FILE 'DIPOLY/EXPVEC.RED) 
(PUT 'EXPVEC2A1 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE EXPVEC2A1 (U V)
    (COND ((NULL U) NIL) ((EQUAL (CAR U) 0) (EXPVEC2A1 (CDR U) (CDR V)))
          ((EQUAL (CAR U) 1) (CONS (CAR V) (EXPVEC2A1 (CDR U) (CDR V))))
          (T (CONS (LIST 'EXPT (CAR V) (CAR U)) (EXPVEC2A1 (CDR U) (CDR V)))))) 
(PUT 'DIPEVLPRI 'NUMBER-OF-ARGS 2) 
(PUT 'DIPEVLPRI 'DEFINED-ON-LINE '175) 
(PUT 'DIPEVLPRI 'DEFINED-IN-FILE 'DIPOLY/EXPVEC.RED) 
(PUT 'DIPEVLPRI 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE DIPEVLPRI (E V) (DIPEVLPRI1 E DIPVARS* V)) 
(PUT 'DIPEVLPRI1 'NUMBER-OF-ARGS 3) 
(PUT 'DIPEVLPRI1 'DEFINED-ON-LINE '180) 
(PUT 'DIPEVLPRI1 'DEFINED-IN-FILE 'DIPOLY/EXPVEC.RED) 
(PUT 'DIPEVLPRI1 'PROCEDURE_TYPE
     '(ARROW (TIMES GENERAL GENERAL GENERAL) GENERAL)) 
(DE DIPEVLPRI1 (E U V)
    (COND ((NULL E) NIL) ((EQUAL (CAR E) 0) (DIPEVLPRI1 (CDR E) (CDR U) V))
          (T
           (PROGN
            (COND (V (DIPPRIN2 "*")))
            (COND
             ((OR (ATOM (CAR U)) (NULL (GET (CAAR U) 'DIPPRIFN)))
              (DIPPRIN2 (CAR U)))
             (T (APPLY1 (GET (CAAR U) 'DIPPRIFN) (CAR U))))
            (COND
             ((IGREATERP (CAR E) 1)
              (PROGN (DIPPRIN2 "**") (DIPPRIN2 (CAR E)))))
            (DIPEVLPRI1 (CDR E) (CDR U) T))))) 
(ENDMODULE) 