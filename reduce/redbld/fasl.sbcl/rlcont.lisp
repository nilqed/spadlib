(cl:declaim (cl:optimize cl:debug cl:safety))
(cl:declaim (sb-ext:muffle-conditions sb-ext:compiler-note cl:style-warning))
(MODULE (LIST 'RLCONT)) 
(REVISION 'RLCONT "$Id: rlcont.red 6087 2021-10-08 16:02:24Z thomas-sturm $") 
(COPYRIGHT 'RLCONT "(c) 1995-2009 A. Dolzmann, T. Sturm, 2016 T. Sturm") 
(PUT 'B 'RL_CALIAS 'IBALP) 
(PUT '|b| 'RL_CALIAS 'IBALP) 
(PUT 'BOOLEAN 'RL_CALIAS 'IBALP) 
(PUT 'C 'RL_CALIAS 'ACFSF) 
(PUT '|c| 'RL_CALIAS 'ACFSF) 
(PUT 'COMPLEX 'RL_CALIAS 'ACFSF) 
(PUT 'DIFFERENTIAL 'RL_CALIAS 'DCFSF) 
(PUT 'PADICS 'RL_CALIAS 'DVFSF) 
(PUT 'R 'RL_CALIAS 'OFSF) 
(PUT '|r| 'RL_CALIAS 'OFSF) 
(PUT 'REALS 'RL_CALIAS 'OFSF) 
(PUT 'QUEUES 'RL_CALIAS 'QQE) 
(PUT 'TERMS 'RL_CALIAS 'TALP) 
(PUT 'Z 'RL_CALIAS 'PASF) 
(PUT '|z| 'RL_CALIAS 'PASF) 
(PUT 'INTEGERS 'RL_CALIAS 'PASF) 
(SETQ RL_BUILTINS* (CONS 'RLSET (DELETE 'RLSET RL_BUILTINS*))) 
(PUT 'RLSET 'RL_SUPPORT 'RL_BUILTIN) 
(PUT 'RLSET 'RL_BUILTIN
     '((DOC
        (SYNOPSIS (1 . "rlset(D: Domain,...)") (2 . "rlset({D: Domain,...})")
         (3 . "rlset()"))
        (DESCRIPTION . "set current domain, and return the old one")
        (RETURNS . "{Domain,...}")
        (ARGUMENTS (1 "D" . "the new domain")
         (2 "..." . "domain-specific optional arguments"))
        (SEEALSO)))) 
(PUT 'RLSET 'PSOPFN 'RL_SET$) 
(PUT 'RL_SET$ 'NUMBER-OF-ARGS 1) 
(PUT 'RL_SET$ 'DEFINED-ON-LINE '71) 
(PUT 'RL_SET$ 'DEFINED-IN-FILE 'REDLOG/RL/RLCONT.RED) 
(PUT 'RL_SET$ 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE RL_SET$ (ARGL)
    (PROG (W)
      (COND
       (ARGL
        (PROGN
         (SETQ W (REVAL1 (CAR ARGL) T))
         (COND
          ((EQCAR W 'LIST)
           (PROGN
            (COND ((CDR ARGL) (REDERR "too many arguments")))
            (SETQ ARGL (CDR W))))
          (T
           (SETQ ARGL
                   (CONS W
                         (PROG (X FORALL-RESULT FORALL-ENDPTR)
                           (SETQ X (CDR ARGL))
                           (COND ((NULL X) (RETURN NIL)))
                           (SETQ FORALL-RESULT
                                   (SETQ FORALL-ENDPTR
                                           (CONS
                                            ((LAMBDA (X) (REVAL1 X T)) (CAR X))
                                            NIL)))
                          LOOPLABEL
                           (SETQ X (CDR X))
                           (COND ((NULL X) (RETURN FORALL-RESULT)))
                           (RPLACD FORALL-ENDPTR
                                   (CONS ((LAMBDA (X) (REVAL1 X T)) (CAR X))
                                         NIL))
                           (SETQ FORALL-ENDPTR (CDR FORALL-ENDPTR))
                           (GO LOOPLABEL)))))))))
      (SETQ W (RL_SET ARGL))
      (COND ((AND *RLABOUT (NOT W)) (RL_ABOUT)))
      (RETURN (CONS 'LIST W)))) 
(PUT 'RL_SET 'NUMBER-OF-ARGS 1) 
(PUT 'RL_SET 'DEFINED-ON-LINE '88) 
(PUT 'RL_SET 'DEFINED-IN-FILE 'REDLOG/RL/RLCONT.RED) 
(PUT 'RL_SET 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE RL_SET (ARGL)
    (PROG (CNTXT W)
      (SETQ CNTXT (COND (RL_CID* (APPEND RL_USEDCNAME* RL_ARGL*)) (T NIL)))
      (COND ((NULL ARGL) (RETURN CNTXT)))
      (COND (RL_CID* (RL_EXIT)))
      (SETQ W (RL_ENTER ARGL))
      (COND (W (PROGN (COND (CNTXT (RL_ENTER CNTXT))) (REDERR W))))
      (RETURN CNTXT))) 
(PUT 'RL_EXIT 'NUMBER-OF-ARGS 0) 
(PUT 'RL_EXIT 'DEFINED-ON-LINE '101) 
(PUT 'RL_EXIT 'DEFINED-IN-FILE 'REDLOG/RL/RLCONT.RED) 
(PUT 'RL_EXIT 'PROCEDURE_TYPE '(ARROW UNIT GENERAL)) 
(DE RL_EXIT NIL
    (PROG (W)
      (SETQ W
              (PROG (PAIR FORALL-RESULT FORALL-ENDPTR)
                (SETQ PAIR (GET (CAR RL_CID*) 'RL_CSWITCHES))
                (COND ((NULL PAIR) (RETURN NIL)))
                (SETQ FORALL-RESULT
                        (SETQ FORALL-ENDPTR
                                (CONS
                                 ((LAMBDA (PAIR)
                                    (CONS (CAR PAIR) (RL_ONP (CAR PAIR))))
                                  (CAR PAIR))
                                 NIL)))
               LOOPLABEL
                (SETQ PAIR (CDR PAIR))
                (COND ((NULL PAIR) (RETURN FORALL-RESULT)))
                (RPLACD FORALL-ENDPTR
                        (CONS
                         ((LAMBDA (PAIR) (CONS (CAR PAIR) (RL_ONP (CAR PAIR))))
                          (CAR PAIR))
                         NIL))
                (SETQ FORALL-ENDPTR (CDR FORALL-ENDPTR))
                (GO LOOPLABEL)))
      (PUT (CAR RL_CID*) 'RL_CSWITCHES W)
      (PROG (PAIR)
        (SETQ PAIR RL_OCSWITCHES*)
       LAB
        (COND ((NULL PAIR) (RETURN NIL)))
        ((LAMBDA (PAIR) (RL_VONOFF (CAR PAIR) (CDR PAIR))) (CAR PAIR))
        (SETQ PAIR (CDR PAIR))
        (GO LAB))
      (COND ((SETQ W (GET (CAR RL_CID*) 'RL_EXIT)) (APPLY W NIL))))) 
(PUT 'RL_ENTER 'NUMBER-OF-ARGS 1) 
(PUT 'RL_ENTER 'DEFINED-ON-LINE '112) 
(PUT 'RL_ENTER 'DEFINED-IN-FILE 'REDLOG/RL/RLCONT.RED) 
(PUT 'RL_ENTER 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE RL_ENTER (ARGL)
    (PROG (W ENTER CID USEDCNAME)
      (SETQ USEDCNAME (CAR ARGL))
      (SETQ CID (RL_CNAME USEDCNAME))
      (SETQ ARGL (CDR ARGL))
      ((LAMBDA (*MSG)
         (SETQ W (ERRORSET (LIST 'LOAD-PACKAGE (MKQUOTE CID)) NIL *BACKTRACE)))
       NIL)
      (COND ((ERRORP W) (RETURN (LIST "switching to context" CID "failed"))))
      (COND
       ((NOT (FLAGP CID 'RL_PACKAGE))
        (RETURN (LIST CID "is not an rl package"))))
      (SETQ ENTER (GET CID 'RL_ENTER))
      (COND
       ((AND (NULL ENTER) ARGL)
        (PROGN
         (LPRIM (LIST "extra" (IOTO_CPLU "argument" (CDR ARGL)) "ignored"))
         (SETQ ARGL NIL)
         NIL)))
      (COND
       (ENTER
        (PROGN
         (SETQ W (APPLY ENTER (LIST ARGL)))
         (COND ((NOT (CAR W)) (RETURN (CDR W))) (T (SETQ ARGL (CDR W)))))))
      (SETQ RL_CID* (LIST CID))
      (SETQ RL_ARGL* ARGL)
      (SETQ RL_USEDCNAME* (LIST USEDCNAME))
      (SETQ RL_OCSWITCHES* NIL)
      (PROG (PAIR)
        (SETQ PAIR (GET (CAR RL_CID*) 'RL_CSWITCHES))
       LAB
        (COND ((NULL PAIR) (RETURN NIL)))
        ((LAMBDA (PAIR)
           (PROGN
            (SETQ RL_OCSWITCHES*
                    (CONS (CONS (CAR PAIR) (RL_ONP (CAR PAIR)))
                          RL_OCSWITCHES*))
            (RL_VONOFF (CAR PAIR) (CDR PAIR))))
         (CAR PAIR))
        (SETQ PAIR (CDR PAIR))
        (GO LAB))
      (SETQ RL_OCSWITCHES* (REVERSIP RL_OCSWITCHES*))
      (RL_UPDCACHE)
      (RMSUBS)
      (RETURN NIL))) 
(PUT 'RL_SIMPTERM 'NUMBER-OF-ARGS 1) 
(DE RL_SIMPTERM (X) (APPLY (GET (CAR RL_CID*) 'RL_SIMPTERM) (LIST X))) 
(PUT 'RL_PREPTERM 'NUMBER-OF-ARGS 1) 
(DE RL_PREPTERM (X) (APPLY (GET (CAR RL_CID*) 'RL_PREPTERM) (LIST X))) 
(PUT 'RL_CNAME 'NUMBER-OF-ARGS 1) 
(PUT 'RL_CNAME 'DEFINED-ON-LINE '155) 
(PUT 'RL_CNAME 'DEFINED-IN-FILE 'REDLOG/RL/RLCONT.RED) 
(PUT 'RL_CNAME 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE RL_CNAME (USEDCNAME) (OR (GET USEDCNAME 'RL_CALIAS) USEDCNAME)) 
(PUT 'RL_ONP 'NUMBER-OF-ARGS 1) 
(PUT 'RL_ONP 'DEFINED-ON-LINE '158) 
(PUT 'RL_ONP 'DEFINED-IN-FILE 'REDLOG/RL/RLCONT.RED) 
(PUT 'RL_ONP 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE RL_ONP (S) (EVAL (INTERN (COMPRESS (APPEND (EXPLODE '*) (EXPLODE S)))))) 
(PUT 'RL_VONOFF 'NUMBER-OF-ARGS 2) 
(PUT 'RL_VONOFF 'DEFINED-ON-LINE '161) 
(PUT 'RL_VONOFF 'DEFINED-IN-FILE 'REDLOG/RL/RLCONT.RED) 
(PUT 'RL_VONOFF 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE RL_VONOFF (SW V)
    (COND
     ((NEQ V (RL_ONP SW))
      (PROGN
       (LPRIM (LIST "turned" (COND ((RL_ONP SW) "off") (T "on")) "switch" SW))
       (ONOFF SW V))))) 
(PUT 'RL_UPDCACHE 'NUMBER-OF-ARGS 0) 
(PUT 'RL_UPDCACHE 'DEFINED-ON-LINE '168) 
(PUT 'RL_UPDCACHE 'DEFINED-IN-FILE 'REDLOG/RL/RLCONT.RED) 
(PUT 'RL_UPDCACHE 'PROCEDURE_TYPE '(ARROW UNIT GENERAL)) 
(DE RL_UPDCACHE NIL
    (PROGN
     (PROG (BBV)
       (SETQ BBV RL_BBL*)
      LAB
       (COND ((NULL BBV) (RETURN NIL)))
       ((LAMBDA (BBV) (SET BBV NIL)) (CAR BBV))
       (SETQ BBV (CDR BBV))
       (GO LAB))
     (PROG (X)
       (SETQ X (GET (CAR RL_CID*) 'RL_PARAMS))
      LAB
       (COND ((NULL X) (RETURN NIL)))
       ((LAMBDA (X) (SET (CAR X) (CDR X))) (CAR X))
       (SETQ X (CDR X))
       (GO LAB))
     (PROG (SV)
       (SETQ SV RL_SERVL*)
      LAB
       (COND ((NULL SV) (RETURN NIL)))
       ((LAMBDA (SV) (SET SV NIL)) (CAR SV))
       (SETQ SV (CDR SV))
       (GO LAB))
     (PROG (X)
       (SETQ X (GET (CAR RL_CID*) 'RL_SERVICES))
      LAB
       (COND ((NULL X) (RETURN NIL)))
       ((LAMBDA (X) (SET (CAR X) (CDR X))) (CAR X))
       (SETQ X (CDR X))
       (GO LAB)))) 
(PUT 'RL_SERVIADD 'NUMBER-OF-ARGS 3) 
(PUT 'RL_SERVIADD 'DEFINED-ON-LINE '181) 
(PUT 'RL_SERVIADD 'DEFINED-IN-FILE 'REDLOG/RL/RLCONT.RED) 
(PUT 'RL_SERVIADD 'PROCEDURE_TYPE
     '(ARROW (TIMES GENERAL GENERAL GENERAL) GENERAL)) 
(DE RL_SERVIADD (TAG NAME VALUE) (RL_SBIADD TAG 'RL_SERVICES NAME VALUE)) 
(PUT 'RL_BBIADD 'NUMBER-OF-ARGS 3) 
(PUT 'RL_BBIADD 'DEFINED-ON-LINE '184) 
(PUT 'RL_BBIADD 'DEFINED-IN-FILE 'REDLOG/RL/RLCONT.RED) 
(PUT 'RL_BBIADD 'PROCEDURE_TYPE
     '(ARROW (TIMES GENERAL GENERAL GENERAL) GENERAL)) 
(DE RL_BBIADD (TAG NAME VALUE) (RL_SBIADD TAG 'RL_PARAMS NAME VALUE)) 
(PUT 'RL_CSWADD 'NUMBER-OF-ARGS 3) 
(PUT 'RL_CSWADD 'DEFINED-ON-LINE '187) 
(PUT 'RL_CSWADD 'DEFINED-IN-FILE 'REDLOG/RL/RLCONT.RED) 
(PUT 'RL_CSWADD 'PROCEDURE_TYPE
     '(ARROW (TIMES GENERAL GENERAL GENERAL) GENERAL)) 
(DE RL_CSWADD (TAG NAME VALUE) (RL_SBIADD TAG 'RL_CSWITCHES NAME VALUE)) 
(PUT 'RL_SBIADD 'NUMBER-OF-ARGS 4) 
(PUT 'RL_SBIADD 'DEFINED-ON-LINE '190) 
(PUT 'RL_SBIADD 'DEFINED-IN-FILE 'REDLOG/RL/RLCONT.RED) 
(PUT 'RL_SBIADD 'PROCEDURE_TYPE
     '(ARROW (TIMES GENERAL GENERAL GENERAL GENERAL) GENERAL)) 
(DE RL_SBIADD (TAG PRP NAME VALUE)
    (PROG (W AL OLD)
      (COND
       ((NOT (FLAGP TAG 'RL_PACKAGE))
        (REDERR (LIST TAG "is not a context identifier"))))
      (SETQ AL (GET TAG PRP))
      (SETQ W (ATSOC NAME AL))
      (COND
       ((NULL W)
        (PROGN
         (SETQ AL (CONS (CONS NAME VALUE) AL))
         (PUT TAG PRP AL)
         (RETURN NIL))))
      (SETQ OLD (CDR W))
      (SETCDR W VALUE)
      (LPRIM (LIST "Changed definition of" NAME))
      (PUT TAG PRP AL)
      (RETURN OLD))) 
(PUT 'RL_COPYC 'NUMBER-OF-ARGS 2) 
(PUT 'RL_COPYC 'DEFINED-ON-LINE '208) 
(PUT 'RL_COPYC 'DEFINED-IN-FILE 'REDLOG/RL/RLCONT.RED) 
(PUT 'RL_COPYC 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE RL_COPYC (NEW OLD)
    (PROGN
     (COND ((FLAGP OLD 'RL_PACKAGE) (FLAG (LIST NEW) 'RL_PACKAGE)))
     (PROG (TAG)
       (SETQ TAG
               '(SIMPFNNAME RL_CSWITCHES RL_PARAMS RL_SERVICES RL_PREPAT
                 RL_RESIMPAT RL_LENGTHAT RL_PREPTERM RL_SIMPTERM RL_ENTER
                 RL_EXIT))
      LAB
       (COND ((NULL TAG) (RETURN NIL)))
       ((LAMBDA (TAG) (RL_CPUT NEW TAG OLD)) (CAR TAG))
       (SETQ TAG (CDR TAG))
       (GO LAB)))) 
(PUT 'RL_CPUT 'NUMBER-OF-ARGS 3) 
(PUT 'RL_CPUT 'DEFINED-ON-LINE '221) 
(PUT 'RL_CPUT 'DEFINED-IN-FILE 'REDLOG/RL/RLCONT.RED) 
(PUT 'RL_CPUT 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL GENERAL) GENERAL)) 
(DE RL_CPUT (NEW TAG OLD)
    ((LAMBDA (W) (COND (W (PUT NEW TAG W)))) (GET OLD TAG))) 
((LAMBDA (W)
   (COND
    (W
     (SETQ RL_DEFLANG*
             (LIST
              (INTERN
               (COMPRESS (REVERSIP (CDR (REVERSIP (CDR (EXPLODE W))))))))))))
 (GETENV "RLDEFLANG")) 
(COND (RL_DEFLANG* (RL_SET RL_DEFLANG*))) 
(ENDMODULE) 