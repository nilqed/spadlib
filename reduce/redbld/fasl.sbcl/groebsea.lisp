(cl:declaim (cl:optimize cl:debug cl:safety))
(cl:declaim (sb-ext:muffle-conditions sb-ext:compiler-note cl:style-warning))
(MODULE (LIST 'GROEBSEA)) 
(PUT 'GROEBSEARCHINLIST 'NUMBER-OF-ARGS 2) 
(PUT 'GROEBSEARCHINLIST 'DEFINED-ON-LINE '9) 
(PUT 'GROEBSEARCHINLIST 'DEFINED-IN-FILE 'GROEBNER/GROEBSEA.RED) 
(PUT 'GROEBSEARCHINLIST 'PROCEDURE_TYPE
     '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE GROEBSEARCHINLIST (VEV G)
    (COND ((NULL G) NIL) ((BUCHVEVDIVIDES? (CADR (CAR G)) VEV) (CAR G))
          (T (GROEBSEARCHINLIST VEV (CDR G))))) 
(PUT 'GROEBLISTADD 'NUMBER-OF-ARGS 2) 
(PUT 'GROEBLISTADD 'DEFINED-ON-LINE '48) 
(PUT 'GROEBLISTADD 'DEFINED-IN-FILE 'GROEBNER/GROEBSEA.RED) 
(PUT 'GROEBLISTADD 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE GROEBLISTADD (POLY STRU)
    (COND ((ILESSP HCOUNT* 5000) (VDPLSORTIN POLY STRU))
          (T (VDPLSORTINREPLACING POLY STRU)))) 
(PUT 'GROEBSTREEADD 'NUMBER-OF-ARGS 2) 
(PUT 'GROEBSTREEADD 'DEFINED-ON-LINE '55) 
(PUT 'GROEBSTREEADD 'DEFINED-IN-FILE 'GROEBNER/GROEBSEA.RED) 
(PUT 'GROEBSTREEADD 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE GROEBSTREEADD (POLY STRU) (GROEBLISTADD POLY STRU)) 
(PUT 'GROEBVEVDIVIDES? 'NUMBER-OF-ARGS 2) 
(PUT 'GROEBVEVDIVIDES? 'DEFINED-ON-LINE '63) 
(PUT 'GROEBVEVDIVIDES? 'DEFINED-IN-FILE 'GROEBNER/GROEBSEA.RED) 
(PUT 'GROEBVEVDIVIDES? 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE GROEBVEVDIVIDES? (E1 E2)
    (COND ((NULL E1) T)
          ((NULL E2)
           (COND
            ((OR (NULL E1) (AND (EQUAL (CAR E1) 0) (VEVZERO?1 (CDR E1)))) T)
            (T NIL)))
          ((IGREATERP (CAR E1) (CAR E2)) NIL)
          (T (GROEBVEVDIVIDES? (CDR E1) (CDR E2))))) 
(PUT 'GROEBSECONDARYREDUCTION 'NUMBER-OF-ARGS 6) 
(PUT 'GROEBSECONDARYREDUCTION 'DEFINED-ON-LINE '72) 
(PUT 'GROEBSECONDARYREDUCTION 'DEFINED-IN-FILE 'GROEBNER/GROEBSEA.RED) 
(PUT 'GROEBSECONDARYREDUCTION 'PROCEDURE_TYPE
     '(ARROW (TIMES GENERAL GENERAL GENERAL GENERAL GENERAL GENERAL) GENERAL)) 
(DE GROEBSECONDARYREDUCTION (POLY G G99 D GC MODE)
    (PROG (BREAK FIRST P PL REP RPOLY VEV X)
      (SETQ MODE NIL)
      (SETQ SECONDVALUE* G99)
      (SETQ THIRDVALUE* D)
      (SETQ FOURTHVALUE* GC)
      (SETQ VEV (CADR POLY))
      (SETQ RPOLY (VDPRED POLY))
      (PROG (P)
        (SETQ P G99)
       LAB
        (COND ((NULL P) (RETURN NIL)))
        ((LAMBDA (P)
           (COND ((BUCHVEVDIVIDES? VEV (CADR P)) (SETQ G99 (DELETE P G99)))))
         (CAR P))
        (SETQ P (CDR P))
        (GO LAB))
      (COND
       ((OR (GREATERP (DIPLENGTH (CADR (CDDR POLY))) 2)
            (OR (NULL VEV) (AND (EQUAL (CAR VEV) 0) (VEVZERO?1 (CDR VEV)))))
        (RETURN G)))
      (COND
       ((AND *GROEBWEAK (NOT (OR (NULL RPOLY) (NULL (CADR (CDDR RPOLY)))))
             (GROEBWEAKTESTBRANCH=1 POLY G D))
        (RETURN 'ABORT)))
      (AND *TRGROEB (GROEBMESS50 G))
      (SETQ PL (UNION G G99))
      (SETQ FIRST T)
      (PROG ()
       WHILELABEL
        (COND ((NOT (AND PL (NOT BREAK))) (RETURN NIL)))
        (PROGN
         (SETQ P (CAR PL))
         (SETQ PL (CDR PL))
         (COND
          ((GROEBPROFITSFROMVEV P VEV)
           (PROGN
            (SETQ X (GROEBNORMALFORM1 P POLY))
            (SETQ X (GROEBSIMPCONTNORMALFORM X))
            (SETQ X (VDPENUMERATE X))
            (COND (FIRST (AND *TRGROEB (GROEBMESS20 POLY))))
            (SETQ FIRST NIL)
            (AND *TRGROEB (GROEBMESS21 P X))
            (SETQ REP (CONS (CONS P X) REP))
            (COND
             ((AND (NOT (OR (NULL X) (NULL (CADR (CDDR X)))))
                   (OR (NULL (CADR X))
                       (AND (EQUAL (CAR (CADR X)) 0)
                            (VEVZERO?1 (CDR (CADR X))))))
              (SETQ BREAK T)))
            NIL))))
        (GO WHILELABEL))
      (COND (BREAK (RETURN 'ABORT)))
      (SETQ G99
              (PROG (P FORALL-RESULT FORALL-ENDPTR)
                (SETQ P G99)
                (COND ((NULL P) (RETURN NIL)))
                (SETQ FORALL-RESULT
                        (SETQ FORALL-ENDPTR
                                (CONS
                                 ((LAMBDA (P) (GROEBSECONDARYREPLACE P REP))
                                  (CAR P))
                                 NIL)))
               LOOPLABEL
                (SETQ P (CDR P))
                (COND ((NULL P) (RETURN FORALL-RESULT)))
                (RPLACD FORALL-ENDPTR
                        (CONS
                         ((LAMBDA (P) (GROEBSECONDARYREPLACE P REP)) (CAR P))
                         NIL))
                (SETQ FORALL-ENDPTR (CDR FORALL-ENDPTR))
                (GO LOOPLABEL)))
      (SETQ SECONDVALUE* (GROEBSECONDARYREMOVEMULTIPLES G99))
      (SETQ THIRDVALUE* D)
      (SETQ FOURTHVALUE*
              (GROEBSECONDARYREMOVEMULTIPLES
               (PROG (Y FORALL-RESULT FORALL-ENDPTR)
                 (SETQ Y GC)
                 (COND ((NULL Y) (RETURN NIL)))
                 (SETQ FORALL-RESULT
                         (SETQ FORALL-ENDPTR
                                 (CONS
                                  ((LAMBDA (Y) (GROEBSECONDARYREPLACE Y REP))
                                   (CAR Y))
                                  NIL)))
                LOOPLABEL
                 (SETQ Y (CDR Y))
                 (COND ((NULL Y) (RETURN FORALL-RESULT)))
                 (RPLACD FORALL-ENDPTR
                         (CONS
                          ((LAMBDA (Y) (GROEBSECONDARYREPLACE Y REP)) (CAR Y))
                          NIL))
                 (SETQ FORALL-ENDPTR (CDR FORALL-ENDPTR))
                 (GO LOOPLABEL))))
      (SETQ G
              (PROG (Y FORALL-RESULT FORALL-ENDPTR)
                (SETQ Y G)
                (COND ((NULL Y) (RETURN NIL)))
                (SETQ FORALL-RESULT
                        (SETQ FORALL-ENDPTR
                                (CONS
                                 ((LAMBDA (Y) (GROEBSECONDARYREPLACE Y REP))
                                  (CAR Y))
                                 NIL)))
               LOOPLABEL
                (SETQ Y (CDR Y))
                (COND ((NULL Y) (RETURN FORALL-RESULT)))
                (RPLACD FORALL-ENDPTR
                        (CONS
                         ((LAMBDA (Y) (GROEBSECONDARYREPLACE Y REP)) (CAR Y))
                         NIL))
                (SETQ FORALL-ENDPTR (CDR FORALL-ENDPTR))
                (GO LOOPLABEL)))
      (AND *TRGROEB (GROEBMESS50 G))
      (RETURN (GROEBSECONDARYREMOVEMULTIPLES G)))) 
(PUT 'GROEBSECONDARYREMOVEMULTIPLES 'NUMBER-OF-ARGS 1) 
(PUT 'GROEBSECONDARYREMOVEMULTIPLES 'DEFINED-ON-LINE '111) 
(PUT 'GROEBSECONDARYREMOVEMULTIPLES 'DEFINED-IN-FILE 'GROEBNER/GROEBSEA.RED) 
(PUT 'GROEBSECONDARYREMOVEMULTIPLES 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE GROEBSECONDARYREMOVEMULTIPLES (G)
    (COND ((NULL G) NIL)
          ((OR (OR (NULL (CAR G)) (NULL (CADR (CDDR (CAR G)))))
               (MEMBER (CAR G) (CDR G)))
           (GROEBSECONDARYREMOVEMULTIPLES (CDR G)))
          (T (CONS (CAR G) (GROEBSECONDARYREMOVEMULTIPLES (CDR G)))))) 
(PUT 'GROEBSECONDARYREPLACE 'NUMBER-OF-ARGS 2) 
(PUT 'GROEBSECONDARYREPLACE 'DEFINED-ON-LINE '117) 
(PUT 'GROEBSECONDARYREPLACE 'DEFINED-IN-FILE 'GROEBNER/GROEBSEA.RED) 
(PUT 'GROEBSECONDARYREPLACE 'PROCEDURE_TYPE
     '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE GROEBSECONDARYREPLACE (X REP)
    ((LAMBDA (Y) (COND (Y (CDR Y)) (T X))) (ATSOC X REP))) 
(ENDMODULE) 