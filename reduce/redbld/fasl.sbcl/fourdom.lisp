(cl:declaim (cl:optimize cl:debug cl:safety))
(cl:declaim (sb-ext:muffle-conditions sb-ext:compiler-note cl:style-warning))
(MODULE (LIST 'FOURDOM)) 
(GLOBAL '(DOMAINLIST*)) 
(SETQ DOMAINLIST* (UNION '(|:FS:|) DOMAINLIST*)) 
(PUT 'FOURIER 'TAG '|:FS:|) 
(PUT '|:FS:| 'DNAME 'FOURIER) 
(FLAG '(|:FS:|) 'FIELD) 
(PUT '|:FS:| 'I2D 'I2FOURIER) 
(PUT '|:FS:| 'MINUSP '|FS:MINUSP:|) 
(PUT '|:FS:| 'PLUS '|FS:PLUS:|) 
(PUT '|:FS:| 'TIMES '|FS:TIMES:|) 
(PUT '|:FS:| 'EXPT '|FS:EXPT:|) 
(PUT '|:FS:| 'DIFFERENCE '|FS:DIFFERENCE:|) 
(PUT '|:FS:| 'QUOTIENT '|FS:QUOTIENT:|) 
(PUT '|:FS:| 'DIVIDE '|FS:DIVIDE:|) 
(PUT '|:FS:| 'GCD '|FS:GCD:|) 
(PUT '|:FS:| 'ZEROP '|FS:ZEROP:|) 
(PUT '|:FS:| 'ONEP '|FS:ONEP:|) 
(PUT '|:FS:| 'PREPFN '|FS:PREPFN:|) 
(PUT '|:FS:| 'SPECPRN '|FS:PRIN:|) 
(PUT '|:FS:| 'PRIFN '|FS:PRIN:|) 
(PUT '|:FS:| 'FANCY-PRIFN '|FS:FANCY-PRIN:|) 
(PUT '|:FS:| 'INTEQUIVFN '|FS:INTEQUIV:|) 
(FLAG '(|:FS:|) 'RATMODE) 
(PUT '|:FS:| '|:MOD:| (MKDMODERR '|:FS:| '|:MOD:|)) 
(PUT '|:RN:| '|:FS:| '*D2FOURIER) 
(PUT '|:FT:| '|:FS:| 'CDR) 
(PUT '|:GI:| '|:FS:| '*D2FOURIER) 
(PUT '|:GF:| '|:FS:| '*D2FOURIER) 
(PUT 'EXPT '|:FS:| '|FS:EXPT:|) 
(DE I2FOURIER (U) (COND ((EQUAL DMODE* '|:FS:|) (*D2FOURIER U)) (T U))) 
(PUT 'I2FOURIER 'NUMBER-OF-ARGS 1) 
(PUT 'I2FOURIER 'DEFINED-ON-LINE '68) 
(PUT 'I2FOURIER 'DEFINED-IN-FILE 'CAMAL/FOURDOM.RED) 
(PUT 'I2FOURIER 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(PUTC 'I2FOURIER 'INLINE
      '(LAMBDA (U) (COND ((EQUAL DMODE* '|:FS:|) (*D2FOURIER U)) (T U)))) 
(PUT '*D2FOURIER 'NUMBER-OF-ARGS 1) 
(PUT '*D2FOURIER 'DEFINED-ON-LINE '71) 
(PUT '*D2FOURIER 'DEFINED-IN-FILE 'CAMAL/FOURDOM.RED) 
(PUT '*D2FOURIER 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE *D2FOURIER (U)
    (COND ((NULL U) NIL)
          (T
           (PROG (FOURIER)
             (SETQ FOURIER (MKVECT 3))
             (PUTV FOURIER 0 (CONS U 1))
             (PUTV FOURIER 1 'COS)
             (PUTV FOURIER 2 (|FS:MAKE-NULLANGLE|))
             (PUTV FOURIER 3 NIL)
             (RETURN (CONS (GET 'FOURIER 'TAG) FOURIER)))))) 
(PUT '*SQ2FOURIER 'NUMBER-OF-ARGS 1) 
(PUT '*SQ2FOURIER 'DEFINED-ON-LINE '82) 
(PUT '*SQ2FOURIER 'DEFINED-IN-FILE 'CAMAL/FOURDOM.RED) 
(PUT '*SQ2FOURIER 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE *SQ2FOURIER (U)
    (COND ((NULL (CAR U)) NIL)
          (T
           (PROG (FOURIER)
             (SETQ FOURIER (MKVECT 3))
             (PUTV FOURIER 0 U)
             (PUTV FOURIER 1 'COS)
             (PUTV FOURIER 2 (|FS:MAKE-NULLANGLE|))
             (PUTV FOURIER 3 NIL)
             (RETURN (CONS (GET 'FOURIER 'TAG) FOURIER)))))) 
(DE |FS:MINUSP:| (X) (|FS:MINUSP| (CDR X))) 
(PUT '|FS:MINUSP:| 'NUMBER-OF-ARGS 1) 
(PUT '|FS:MINUSP:| 'DEFINED-ON-LINE '93) 
(PUT '|FS:MINUSP:| 'DEFINED-IN-FILE 'CAMAL/FOURDOM.RED) 
(PUT '|FS:MINUSP:| 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(PUTC '|FS:MINUSP:| 'INLINE '(LAMBDA (X) (|FS:MINUSP| (CDR X)))) 
(PUT '|FS:MINUSP| 'NUMBER-OF-ARGS 1) 
(PUT '|FS:MINUSP| 'DEFINED-ON-LINE '95) 
(PUT '|FS:MINUSP| 'DEFINED-IN-FILE 'CAMAL/FOURDOM.RED) 
(PUT '|FS:MINUSP| 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE |FS:MINUSP| (X)
    (COND ((NULL X) NIL) ((NULL (GETV X 3)) (MINUSF (CAR (GETV X 0))))
          (T (|FS:MINUSP| (GETV X 3))))) 
(PUT '|FS:TIMES:| 'NUMBER-OF-ARGS 2) 
(PUT '|FS:TIMES:| 'DEFINED-ON-LINE '102) 
(PUT '|FS:TIMES:| 'DEFINED-IN-FILE 'CAMAL/FOURDOM.RED) 
(PUT '|FS:TIMES:| 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE |FS:TIMES:| (X Y)
    (COND ((NULL X) NIL) ((NULL Y) NIL)
          ((NUMBERP Y)
           (CONS (GET 'FOURIER 'TAG) (|FS:TIMESCOEFF| (CONS Y 1) (CDR X))))
          ((NUMBERP X)
           (CONS (GET 'FOURIER 'TAG) (|FS:TIMESCOEFF| (CONS X 1) (CDR Y))))
          ((NOT (EQCAR X (GET 'FOURIER 'TAG)))
           (CONS (GET 'FOURIER 'TAG) (|FS:TIMESCOEFF| X (CDR Y))))
          ((NOT (EQCAR Y (GET 'FOURIER 'TAG)))
           (CONS (GET 'FOURIER 'TAG) (|FS:TIMESCOEFF| Y (CDR X))))
          (T (CONS (GET 'FOURIER 'TAG) (|FS:TIMES| (CDR X) (CDR Y)))))) 
(PUT '|FS:TIMESCOEFF| 'NUMBER-OF-ARGS 2) 
(PUT '|FS:TIMESCOEFF| 'DEFINED-ON-LINE '115) 
(PUT '|FS:TIMESCOEFF| 'DEFINED-IN-FILE 'CAMAL/FOURDOM.RED) 
(PUT '|FS:TIMESCOEFF| 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE |FS:TIMESCOEFF| (X Y)
    (COND ((NULL Y) NIL)
          (T
           (PROG (ANS COEFF)
             (SETQ COEFF (MULTSQ X (GETV Y 0)))
             (COND
              ((EQUAL COEFF '(NIL . 1))
               (PROGN
                (PRINT "zero in times")
                (RETURN (|FS:TIMESCOEFF| X (GETV Y 3))))))
             (SETQ ANS (MKVECT 3))
             (PUTV ANS 0 COEFF)
             (PUTV ANS 1 (GETV Y 1))
             (PUTV ANS 2 (GETV Y 2))
             (PUTV ANS 3 (|FS:TIMESCOEFF| X (GETV Y 3)))
             (RETURN ANS))))) 
(PUT '|FS:TIMES| 'NUMBER-OF-ARGS 2) 
(PUT '|FS:TIMES| 'DEFINED-ON-LINE '130) 
(PUT '|FS:TIMES| 'DEFINED-IN-FILE 'CAMAL/FOURDOM.RED) 
(PUT '|FS:TIMES| 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE |FS:TIMES| (X Y)
    (COND ((NULL X) NIL) ((NULL Y) NIL)
          (T
           (PROG (ANS)
             (SETQ ANS (|FS:TIMESTERM| X Y))
             (RETURN (|FS:PLUS| ANS (|FS:TIMES| (GETV X 3) Y))))))) 
(PUT '|FS:TIMESTERM| 'NUMBER-OF-ARGS 2) 
(PUT '|FS:TIMESTERM| 'DEFINED-ON-LINE '137) 
(PUT '|FS:TIMESTERM| 'DEFINED-IN-FILE 'CAMAL/FOURDOM.RED) 
(PUT '|FS:TIMESTERM| 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE |FS:TIMESTERM| (X Y)
    (COND ((NULL Y) NIL) ((NULL X) NIL)
          (T
           (PROG (ANS)
             (SETQ ANS (|FS:TIMESTERMTERM| X Y))
             (RETURN (|FS:PLUS| ANS (|FS:TIMESTERM| X (GETV Y 3)))))))) 
(PUT '|FS:TIMESTERMTERM| 'NUMBER-OF-ARGS 2) 
(PUT '|FS:TIMESTERMTERM| 'DEFINED-ON-LINE '145) 
(PUT '|FS:TIMESTERMTERM| 'DEFINED-IN-FILE 'CAMAL/FOURDOM.RED) 
(PUT '|FS:TIMESTERMTERM| 'PROCEDURE_TYPE
     '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE |FS:TIMESTERMTERM| (X Y)
    (PROG (SUM DIFF ANS XV YV COEFF)
      (SETQ SUM (MKVECT 7))
      (SETQ XV (GETV X 2))
      (SETQ YV (GETV Y 2))
      (PROG (I)
        (SETQ I 0)
       LAB
        (COND ((MINUSP (DIFFERENCE 7 I)) (RETURN NIL)))
        (PUTV SUM I (PLUS (GETV XV I) (GETV YV I)))
        (SETQ I (PLUS2 I 1))
        (GO LAB))
      (SETQ DIFF (MKVECT 7))
      (PROG (I)
        (SETQ I 0)
       LAB
        (COND ((MINUSP (DIFFERENCE 7 I)) (RETURN NIL)))
        (PUTV DIFF I (DIFFERENCE (GETV XV I) (GETV YV I)))
        (SETQ I (PLUS2 I 1))
        (GO LAB))
      (SETQ COEFF (MULTSQ (GETV X 0) (GETV Y 0)))
      (SETQ COEFF (MULTSQ COEFF '(1 . 2)))
      (COND ((NULL (CAR COEFF)) (RETURN NIL)))
      (COND
       ((EQUAL (GETV X 1) 'SIN)
        (COND
         ((EQUAL (GETV Y 1) 'SIN)
          (RETURN
           (|FS:PLUS| (MAKE-TERM 'COS SUM (NEGSQ COEFF))
            (MAKE-TERM 'COS DIFF COEFF))))
         (T
          (RETURN
           (|FS:PLUS| (MAKE-TERM 'SIN SUM COEFF)
            (MAKE-TERM 'SIN DIFF COEFF))))))
       ((EQUAL (GETV Y 1) 'SIN)
        (RETURN
         (|FS:PLUS| (MAKE-TERM 'SIN SUM COEFF)
          (MAKE-TERM 'SIN DIFF (NEGSQ COEFF)))))
       (T
        (RETURN
         (|FS:PLUS| (MAKE-TERM 'COS SUM COEFF) (MAKE-TERM 'COS DIFF COEFF))))))) 
(PUT '|FS:EXPT:| 'NUMBER-OF-ARGS 2) 
(PUT '|FS:EXPT:| 'DEFINED-ON-LINE '180) 
(PUT '|FS:EXPT:| 'DEFINED-IN-FILE 'CAMAL/FOURDOM.RED) 
(PUT '|FS:EXPT:| 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE |FS:EXPT:| (X N)
    (PROG (ANS XX)
      (SETQ ANS (CDR (*D2FOURIER 1)))
      (SETQ X (CDR X))
      (PROG (I)
        (SETQ I 1)
       LAB
        (COND ((MINUSP (DIFFERENCE N I)) (RETURN NIL)))
        (SETQ ANS (|FS:TIMES| ANS X))
        (SETQ I (PLUS2 I 1))
        (GO LAB))
      (RETURN (CONS (GET 'FOURIER 'TAG) ANS)))) 
(PUT 'MAKE-TERM 'NUMBER-OF-ARGS 3) 
(PUT 'MAKE-TERM 'DEFINED-ON-LINE '188) 
(PUT 'MAKE-TERM 'DEFINED-IN-FILE 'CAMAL/FOURDOM.RED) 
(PUT 'MAKE-TERM 'PROCEDURE_TYPE
     '(ARROW (TIMES GENERAL GENERAL GENERAL) GENERAL)) 
(DE MAKE-TERM (FN ANG COEFF)
    (PROG (FOURIER SIGN I)
      (SETQ SIGN 0)
      (SETQ I 0)
     TOP
      (COND ((LESSP (GETV ANG I) 0) (SETQ SIGN (MINUS 1)))
            ((GREATERP (GETV ANG I) 0) (SETQ SIGN 1))
            ((EQUAL I 7) (PROGN (COND ((EQUAL FN 'SIN) (RETURN NIL)))))
            (T (PROGN (SETQ I (IPLUS2 I 1)) (GO TOP))))
      (SETQ FOURIER (MKVECT 3))
      (COND ((OR (EQUAL SIGN 1) (EQUAL FN 'COS)) (PUTV FOURIER 0 COEFF))
            (T (PUTV FOURIER 0 (MULTSQ '(-1 . 1) COEFF))))
      (PUTV FOURIER 1 FN)
      (COND
       ((EQUAL SIGN (MINUS 1))
        (PROGN
         (SETQ SIGN (MKVECT 7))
         (PROG (I)
           (SETQ I 0)
          LAB
           (COND ((MINUSP (DIFFERENCE 7 I)) (RETURN NIL)))
           (PUTV SIGN I (MINUS (GETV ANG I)))
           (SETQ I (PLUS2 I 1))
           (GO LAB))
         (SETQ ANG SIGN))))
      (PUTV FOURIER 2 ANG)
      (PUTV FOURIER 3 NIL)
      (RETURN FOURIER))) 
(PUT '|FS:QUOTIENT:| 'NUMBER-OF-ARGS 2) 
(PUT '|FS:QUOTIENT:| 'DEFINED-ON-LINE '210) 
(PUT '|FS:QUOTIENT:| 'DEFINED-IN-FILE 'CAMAL/FOURDOM.RED) 
(PUT '|FS:QUOTIENT:| 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE |FS:QUOTIENT:| (X Y)
    (COND ((NUMBERP Y) (|FS:TIMES:| X (*SQ2FOURIER (CONS 1 Y))))
          (T (RERROR 'FOURIER 98 "Unimplemented")))) 
(PUT '|FS:DIVIDE:| 'NUMBER-OF-ARGS 2) 
(PUT '|FS:DIVIDE:| 'DEFINED-ON-LINE '214) 
(PUT '|FS:DIVIDE:| 'DEFINED-IN-FILE 'CAMAL/FOURDOM.RED) 
(PUT '|FS:DIVIDE:| 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE |FS:DIVIDE:| (X Y) (RERROR 'FOURIER 98 "Unimplemented")) 
(PUT '|FS:GCD:| 'NUMBER-OF-ARGS 2) 
(PUT '|FS:GCD:| 'DEFINED-ON-LINE '217) 
(PUT '|FS:GCD:| 'DEFINED-IN-FILE 'CAMAL/FOURDOM.RED) 
(PUT '|FS:GCD:| 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE |FS:GCD:| (X Y) (RERROR 'FOURIER 98 "Unimplemented")) 
(DE |FS:DIFFERENCE:| (X Y) (|FS:PLUS:| X (|FS:NEGATE:| Y))) 
(PUT '|FS:DIFFERENCE:| 'NUMBER-OF-ARGS 2) 
(PUT '|FS:DIFFERENCE:| 'DEFINED-ON-LINE '220) 
(PUT '|FS:DIFFERENCE:| 'DEFINED-IN-FILE 'CAMAL/FOURDOM.RED) 
(PUT '|FS:DIFFERENCE:| 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(PUTC '|FS:DIFFERENCE:| 'INLINE '(LAMBDA (X Y) (|FS:PLUS:| X (|FS:NEGATE:| Y)))) 
(DE |FS:NEGATE:| (X) (CONS (GET 'FOURIER 'TAG) (|FS:NEGATE| (CDR X)))) 
(PUT '|FS:NEGATE:| 'NUMBER-OF-ARGS 1) 
(PUT '|FS:NEGATE:| 'DEFINED-ON-LINE '223) 
(PUT '|FS:NEGATE:| 'DEFINED-IN-FILE 'CAMAL/FOURDOM.RED) 
(PUT '|FS:NEGATE:| 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(PUTC '|FS:NEGATE:| 'INLINE
      '(LAMBDA (X) (CONS (GET 'FOURIER 'TAG) (|FS:NEGATE| (CDR X))))) 
(PUT '|FS:NEGATE| 'NUMBER-OF-ARGS 1) 
(PUT '|FS:NEGATE| 'DEFINED-ON-LINE '226) 
(PUT '|FS:NEGATE| 'DEFINED-IN-FILE 'CAMAL/FOURDOM.RED) 
(PUT '|FS:NEGATE| 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE |FS:NEGATE| (X)
    (COND ((NULL X) NIL)
          (T
           (PROG (ANS)
             (SETQ ANS (MKVECT 3))
             (PUTV ANS 0 (NEGSQ (GETV X 0)))
             (PUTV ANS 1 (GETV X 1))
             (PUTV ANS 2 (GETV X 2))
             (PUTV ANS 3 (|FS:NEGATE| (GETV X 3)))
             (RETURN ANS))))) 
(PUT '|FS:ZEROP:| 'NUMBER-OF-ARGS 1) 
(PUT '|FS:ZEROP:| 'DEFINED-ON-LINE '237) 
(PUT '|FS:ZEROP:| 'DEFINED-IN-FILE 'CAMAL/FOURDOM.RED) 
(PUT '|FS:ZEROP:| 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE |FS:ZEROP:| (U)
    (OR (NULL U) (AND (NOT (NUMBERP U)) (NULL (CDR U)))
        (AND (NULL (GETV (CDR U) 3))
             ((LAMBDA (V) (AND (NUMBERP V) (ZEROP V))) (GETV (CDR U) 0))))) 
(PUT '|FS:ONEP:| 'NUMBER-OF-ARGS 1) 
(PUT '|FS:ONEP:| 'DEFINED-ON-LINE '244) 
(PUT '|FS:ONEP:| 'DEFINED-IN-FILE 'CAMAL/FOURDOM.RED) 
(PUT '|FS:ONEP:| 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE |FS:ONEP:| (U) (|FS:ONEP| (CDR U))) 
(PUT '|FS:ONEP| 'NUMBER-OF-ARGS 1) 
(PUT '|FS:ONEP| 'DEFINED-ON-LINE '246) 
(PUT '|FS:ONEP| 'DEFINED-IN-FILE 'CAMAL/FOURDOM.RED) 
(PUT '|FS:ONEP| 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE |FS:ONEP| (U)
    (AND (NULL (GETV U 3)) (ONEP (GETV U 0)) (|FS:NULL-ANGLE| U)
         (EQUAL (GETV U 1) 'COS))) 
(DE |FS:PREPFN:| (X) X) 
(PUT '|FS:PREPFN:| 'NUMBER-OF-ARGS 1) 
(PUT '|FS:PREPFN:| 'DEFINED-ON-LINE '250) 
(PUT '|FS:PREPFN:| 'DEFINED-IN-FILE 'CAMAL/FOURDOM.RED) 
(PUT '|FS:PREPFN:| 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(PUTC '|FS:PREPFN:| 'INLINE '(LAMBDA (X) X)) 
(DE SIMPFS (U) (CONS (CONS '|:FS:| U) 1)) 
(PUT 'SIMPFS 'NUMBER-OF-ARGS 1) 
(PUT 'SIMPFS 'DEFINED-ON-LINE '252) 
(PUT 'SIMPFS 'DEFINED-IN-FILE 'CAMAL/FOURDOM.RED) 
(PUT 'SIMPFS 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(PUTC 'SIMPFS 'INLINE '(LAMBDA (U) (CONS (CONS '|:FS:| U) 1))) 
(PUT '|:FS:| 'SIMPFN 'SIMPFS) 
(DE ZEROTERM (X) (EQUAL (GETV X 0) '(NIL . 1))) 
(PUT 'ZEROTERM 'NUMBER-OF-ARGS 1) 
(PUT 'ZEROTERM 'DEFINED-ON-LINE '260) 
(PUT 'ZEROTERM 'DEFINED-IN-FILE 'CAMAL/FOURDOM.RED) 
(PUT 'ZEROTERM 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(PUTC 'ZEROTERM 'INLINE '(LAMBDA (X) (EQUAL (GETV X 0) '(NIL . 1)))) 
(PUT '|FS:PRIN:| 'NUMBER-OF-ARGS 1) 
(PUT '|FS:PRIN:| 'DEFINED-ON-LINE '262) 
(PUT '|FS:PRIN:| 'DEFINED-IN-FILE 'CAMAL/FOURDOM.RED) 
(PUT '|FS:PRIN:| 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE |FS:PRIN:| (X) (PROGN (PRIN2* "[") (|FS:PRIN| (CDR X)) (PRIN2* "]"))) 
(PUT '|FS:PRIN| 'NUMBER-OF-ARGS 1) 
(PUT '|FS:PRIN| 'DEFINED-ON-LINE '265) 
(PUT '|FS:PRIN| 'DEFINED-IN-FILE 'CAMAL/FOURDOM.RED) 
(PUT '|FS:PRIN| 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE |FS:PRIN| (X)
    (COND ((NULL X) (PRIN2* " 0 "))
          (T
           (PROGN
            (PROG ()
             WHILELABEL
              (COND ((NOT X) (RETURN NIL)))
              (PROGN
               (|FS:PRIN1| X)
               (SETQ X (GETV X 3))
               (COND (X (PRIN2* " + "))))
              (GO WHILELABEL)))))) 
(PUT '|FS:PRIN1| 'NUMBER-OF-ARGS 1) 
(PUT '|FS:PRIN1| 'DEFINED-ON-LINE '274) 
(PUT '|FS:PRIN1| 'DEFINED-IN-FILE 'CAMAL/FOURDOM.RED) 
(PUT '|FS:PRIN1| 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE |FS:PRIN1| (X)
    (PROG (FIRST U V)
      (SETQ FIRST T)
      (COND
       ((NOT (EQUAL (GETV X 0) '(1 . 1)))
        (PROGN (PRIN2* "(") (SQPRINT (GETV X 0)) (PRIN2* ")"))))
      (COND
       ((NOT (|FS:NULL-ANGLE| X))
        (PROGN
         (PRIN2* (GETV X 1))
         (PRIN2* "[")
         (SETQ U (GETV X 2))
         (PROG (I)
           (SETQ I 0)
          LAB
           (COND ((MINUSP (DIFFERENCE 7 I)) (RETURN NIL)))
           (COND
            ((NOT (EQUAL (SETQ V (GETV U I)) 0))
             (PROGN
              (COND
               ((LESSP V 0)
                (PROGN (SETQ FIRST T) (PRIN2* "-") (SETQ V (MINUS V)))))
              (COND ((NOT FIRST) (PRIN2* "+")))
              (COND ((NOT (EQUAL V 1)) (PRIN2* V)))
              (SETQ FIRST NIL)
              (PRIN2* (GETV FOURIER-NAME* I)))))
           (SETQ I (PLUS2 I 1))
           (GO LAB))
         (PRIN2* "]")))
       ((EQUAL (GETV X 0) '(1 . 1)) (PRIN2* "1"))))) 
(PUT '|FS:FANCY-PRIN:| 'NUMBER-OF-ARGS 1) 
(PUT '|FS:FANCY-PRIN:| 'DEFINED-ON-LINE '297) 
(PUT '|FS:FANCY-PRIN:| 'DEFINED-IN-FILE 'CAMAL/FOURDOM.RED) 
(PUT '|FS:FANCY-PRIN:| 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE |FS:FANCY-PRIN:| (X)
    (PROGN (FANCY-PRIN2 "[") (|FS:FANCY-PRIN| (CDR X)) (FANCY-PRIN2 "]"))) 
(PUT '|FS:FANCY-PRIN| 'NUMBER-OF-ARGS 1) 
(PUT '|FS:FANCY-PRIN| 'DEFINED-ON-LINE '300) 
(PUT '|FS:FANCY-PRIN| 'DEFINED-IN-FILE 'CAMAL/FOURDOM.RED) 
(PUT '|FS:FANCY-PRIN| 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE |FS:FANCY-PRIN| (X)
    (COND ((NULL X) (FANCY-PRIN2 "0"))
          (T
           (PROGN
            (PROG ()
             WHILELABEL
              (COND ((NOT X) (RETURN NIL)))
              (PROGN
               (|FS:FANCY-PRIN1| X)
               (SETQ X (GETV X 3))
               (COND (X (FANCY-OPRIN 'PLUS))))
              (GO WHILELABEL)))))) 
(PUT '|FS:FANCY-PRIN1| 'NUMBER-OF-ARGS 1) 
(PUT '|FS:FANCY-PRIN1| 'DEFINED-ON-LINE '309) 
(PUT '|FS:FANCY-PRIN1| 'DEFINED-IN-FILE 'CAMAL/FOURDOM.RED) 
(PUT '|FS:FANCY-PRIN1| 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE |FS:FANCY-PRIN1| (X)
    (PROG (FIRST U V)
      (SETQ FIRST T)
      (COND
       ((NOT (EQUAL (GETV X 0) '(1 . 1)))
        (FANCY-IN-BRACKETS
         (LIST 'FANCY-MAPRIN0 (LIST 'LIST ''*SQ (MKQUOTE (GETV X 0)))) '|(|
         '|)|)))
      (COND
       ((NOT (|FS:NULL-ANGLE| X))
        (PROGN
         (FANCY-PRIN2 (GETV X 1))
         (FANCY-PRIN2 "[")
         (SETQ U (GETV X 2))
         (PROG (I)
           (SETQ I 0)
          LAB
           (COND ((MINUSP (DIFFERENCE 7 I)) (RETURN NIL)))
           (COND
            ((NOT (EQUAL (SETQ V (GETV U I)) 0))
             (PROGN
              (COND
               ((LESSP V 0)
                (PROGN
                 (SETQ FIRST T)
                 (FANCY-OPRIN 'MINUS)
                 (SETQ V (MINUS V)))))
              (COND ((NOT FIRST) (FANCY-OPRIN 'PLUS)))
              (COND ((NOT (EQUAL V 1)) (FANCY-PRIN2 V)))
              (SETQ FIRST NIL)
              (FANCY-PRIN2 (GETV FOURIER-NAME* I)))))
           (SETQ I (PLUS2 I 1))
           (GO LAB))
         (FANCY-PRIN2 "]")))
       ((EQUAL (GETV X 0) '(1 . 1)) (FANCY-PRIN2 "1"))))) 
(PUT '|FS:INTEQUIV:| 'NUMBER-OF-ARGS 1) 
(PUT '|FS:INTEQUIV:| 'DEFINED-ON-LINE '332) 
(PUT '|FS:INTEQUIV:| 'DEFINED-IN-FILE 'CAMAL/FOURDOM.RED) 
(PUT '|FS:INTEQUIV:| 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE |FS:INTEQUIV:| (U)
    ((LAMBDA (X)
       (AND (NULL (GETV X 3)) (|FS:NULL-ANGLE| X) (EQUAL (GETV X 1) 'COS)
            (FIXP (CAR (GETV X 0))) (EQUAL (CDR (GETV X 0)) 1)))
     (CDR U))) 
(ENDMODULE) 