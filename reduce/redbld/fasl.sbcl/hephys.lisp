(cl:declaim (cl:optimize cl:debug cl:safety))
(cl:declaim (sb-ext:muffle-conditions sb-ext:compiler-note cl:style-warning))
(MODULE (LIST 'HEPHYS)) 
(CREATE-PACKAGE '(HEPHYS) '(APPL)) 
(FLUID '(*NOSPURP *SUB2 NCMP* NDIMS*)) 
(GLOBAL '(DEFINDICES* INDICES* MUL* NDIM*)) 
(SETQ DEFINDICES* NIL) 
(SETQ INDICES* NIL) 
(SETQ NDIM* 4) 
(DEFLIST '((CONS SIMPDOT)) 'SIMPFN) 
(FLAG '(CONS) 'SYMMETRIC) 
(PUT 'VECTOR 'STAT 'RLIS) 
(PUT 'VECTOR 'NUMBER-OF-ARGS 1) 
(PUT 'VECTOR 'DEFINED-ON-LINE '63) 
(PUT 'VECTOR 'DEFINED-IN-FILE 'HEPHYS/HEPHYS.RED) 
(PUT 'VECTOR 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE VECTOR (U) (VECTOR1 U)) 
(PUT 'VECTOR1 'NUMBER-OF-ARGS 1) 
(PUT 'VECTOR1 'DEFINED-ON-LINE '65) 
(PUT 'VECTOR1 'DEFINED-IN-FILE 'HEPHYS/HEPHYS.RED) 
(PUT 'VECTOR1 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE VECTOR1 (U)
    (PROG (X)
      (SETQ X U)
     LAB
      (COND ((NULL X) (RETURN NIL)))
      ((LAMBDA (X)
         (PROG (Y)
           (COND
            ((OR (NOT (IDP X)) (AND (SETQ Y (GETTYPE X)) (NEQ Y 'HVECTOR)))
             (TYPERR (COND (Y (LIST Y X)) (T X)) "high energy vector"))
            (T (PUT X 'RTYPE 'HVECTOR)))))
       (CAR X))
      (SETQ X (CDR X))
      (GO LAB))) 
(PUT 'HVECTOR 'FN 'VECFN) 
(PUT 'HVECTOR 'EVFN 'VEVAL) 
(PUT 'G 'SIMPFN 'SIMPGAMMA) 
(NONCOM (LIST 'G)) 
(PUT 'INDEX 'NUMBER-OF-ARGS 1) 
(PUT 'INDEX 'DEFINED-ON-LINE '81) 
(PUT 'INDEX 'DEFINED-IN-FILE 'HEPHYS/HEPHYS.RED) 
(PUT 'INDEX 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE INDEX (U) (PROG () (VECTOR1 U) (RMSUBS) (SETQ INDICES* (UNION INDICES* U)))) 
(PUT 'REMIND 'NUMBER-OF-ARGS 1) 
(PUT 'REMIND 'DEFINED-ON-LINE '84) 
(PUT 'REMIND 'DEFINED-IN-FILE 'HEPHYS/HEPHYS.RED) 
(PUT 'REMIND 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE REMIND (U) (PROG () (SETQ INDICES* (SETDIFF INDICES* U)))) 
(PUT 'MASS 'NUMBER-OF-ARGS 1) 
(PUT 'MASS 'DEFINED-ON-LINE '87) 
(PUT 'MASS 'DEFINED-IN-FILE 'HEPHYS/HEPHYS.RED) 
(PUT 'MASS 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE MASS (U)
    (COND ((NULL (CAR U)) (RERROR 'HEPHYS 1 "No arguments to MASS"))
          (T
           (PROGN
            (PROG (X)
              (SETQ X U)
             LAB
              (COND ((NULL X) (RETURN NIL)))
              ((LAMBDA (X) (PUT (CADR X) 'RTYPE 'HVECTOR)) (CAR X))
              (SETQ X (CDR X))
              (GO LAB))
            (PROG (X)
              (SETQ X U)
             LAB
              (COND ((NULL X) (RETURN NIL)))
              ((LAMBDA (X) (PUT (CADR X) 'MASS (CADDR X))) (CAR X))
              (SETQ X (CDR X))
              (GO LAB)))))) 
(PUT 'GETMAS 'NUMBER-OF-ARGS 1) 
(PUT 'GETMAS 'DEFINED-ON-LINE '92) 
(PUT 'GETMAS 'DEFINED-IN-FILE 'HEPHYS/HEPHYS.RED) 
(PUT 'GETMAS 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE GETMAS (U)
    ((LAMBDA (X) (COND (X X) (T (RERROR 'HEPHYS 2 (LIST U "has no mass")))))
     (GET U 'MASS))) 
(PUT 'VECDIM 'NUMBER-OF-ARGS 1) 
(PUT 'VECDIM 'DEFINED-ON-LINE '96) 
(PUT 'VECDIM 'DEFINED-IN-FILE 'HEPHYS/HEPHYS.RED) 
(PUT 'VECDIM 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE VECDIM (U) (PROG () (SETQ NDIM* (CAR U)))) 
(PUT 'MSHELL 'NUMBER-OF-ARGS 1) 
(PUT 'MSHELL 'DEFINED-ON-LINE '99) 
(PUT 'MSHELL 'DEFINED-IN-FILE 'HEPHYS/HEPHYS.RED) 
(PUT 'MSHELL 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE MSHELL (U)
    (PROG (X Z)
     A
      (COND ((NULL U) (RETURN (LET0 Z))))
      (SETQ X (GETMAS (CAR U)))
      (SETQ Z
              (CONS (LIST 'EQUAL (LIST 'CONS (CAR U) (CAR U)) (LIST 'EXPT X 2))
                    Z))
      (SETQ U (CDR U))
      (GO A))) 
(PUT 'NOSPUR 'NUMBER-OF-ARGS 1) 
(PUT 'NOSPUR 'DEFINED-ON-LINE '108) 
(PUT 'NOSPUR 'DEFINED-IN-FILE 'HEPHYS/HEPHYS.RED) 
(PUT 'NOSPUR 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE NOSPUR (U) (PROGN (RMSUBS) (SETQ *NOSPURP T) (FLAG U 'NOSPUR))) 
(PUT 'SPUR 'NUMBER-OF-ARGS 1) 
(PUT 'SPUR 'DEFINED-ON-LINE '111) 
(PUT 'SPUR 'DEFINED-IN-FILE 'HEPHYS/HEPHYS.RED) 
(PUT 'SPUR 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE SPUR (U) (PROGN (RMSUBS) (REMFLAG U 'NOSPUR) (REMFLAG U 'REDUCE))) 
(RLISTAT '(VECDIM INDEX MASS MSHELL REMIND NOSPUR SPUR VECTOR)) 
(PUT 'VEVAL 'NUMBER-OF-ARGS 2) 
(PUT 'VEVAL 'DEFINED-ON-LINE '119) 
(PUT 'VEVAL 'DEFINED-IN-FILE 'HEPHYS/HEPHYS.RED) 
(PUT 'VEVAL 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE VEVAL (U V)
    (PROG (Z)
      (PROG (X)
        (SETQ X (NSSIMP U 'HVECTOR))
       LAB
        (COND ((NULL X) (RETURN NIL)))
        ((LAMBDA (X)
           (PROGN
            (COND ((NULL (CDR X)) (RERROR 'HEPHYS 3 "Missing vector"))
                  ((CDDR X) (MSGPRI "Redundant vector in" (CDR X) NIL NIL T)))
            (SETQ Z (ACONC* Z (RETIMES (CONS (PREPSQ (CAR X)) (CDR X)))))))
         (CAR X))
        (SETQ X (CDR X))
        (GO LAB))
      (RETURN (REPLUS Z)))) 
(PUT 'VMULT 'NUMBER-OF-ARGS 1) 
(PUT 'VMULT 'DEFINED-ON-LINE '129) 
(PUT 'VMULT 'DEFINED-IN-FILE 'HEPHYS/HEPHYS.RED) 
(PUT 'VMULT 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE VMULT (U)
    (PROG (Z)
      (SETQ Z (LIST (LIST (CONS 1 1))))
     A
      (COND ((NULL U) (RETURN Z)))
      (SETQ Z (VMULT1 (NSSIMP (CAR U) 'HVECTOR) Z))
      (COND ((NULL Z) (RETURN NIL)))
      (SETQ U (CDR U))
      (GO A))) 
(PUT 'VMULT1 'NUMBER-OF-ARGS 2) 
(PUT 'VMULT1 'DEFINED-ON-LINE '139) 
(PUT 'VMULT1 'DEFINED-IN-FILE 'HEPHYS/HEPHYS.RED) 
(PUT 'VMULT1 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE VMULT1 (U V)
    (PROG (Z)
      (COND ((NULL V) (RETURN NIL)))
     A
      (COND ((NULL U) (RETURN Z))
            ((CDDAR U) (MSGPRI "Redundant vector in" (CDAR U) NIL NIL T)))
      (SETQ Z
              (NCONC* Z
                      (PROG (J FORALL-RESULT FORALL-ENDPTR)
                        (SETQ J V)
                        (COND ((NULL J) (RETURN NIL)))
                        (SETQ FORALL-RESULT
                                (SETQ FORALL-ENDPTR
                                        (CONS
                                         ((LAMBDA (J)
                                            (CONS (MULTSQ (CAR J) (CAAR U))
                                                  (APPEND (CDR J) (CDAR U))))
                                          (CAR J))
                                         NIL)))
                       LOOPLABEL
                        (SETQ J (CDR J))
                        (COND ((NULL J) (RETURN FORALL-RESULT)))
                        (RPLACD FORALL-ENDPTR
                                (CONS
                                 ((LAMBDA (J)
                                    (CONS (MULTSQ (CAR J) (CAAR U))
                                          (APPEND (CDR J) (CDAR U))))
                                  (CAR J))
                                 NIL))
                        (SETQ FORALL-ENDPTR (CDR FORALL-ENDPTR))
                        (GO LOOPLABEL))))
      (SETQ U (CDR U))
      (GO A))) 
(PUT 'SIMPDOT 'NUMBER-OF-ARGS 1) 
(PUT 'SIMPDOT 'DEFINED-ON-LINE '151) 
(PUT 'SIMPDOT 'DEFINED-IN-FILE 'HEPHYS/HEPHYS.RED) 
(PUT 'SIMPDOT 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE SIMPDOT (U) (MKVARG U (FUNCTION DOTORD))) 
(PUT 'DOTORD 'NUMBER-OF-ARGS 1) 
(PUT 'DOTORD 'DEFINED-ON-LINE '154) 
(PUT 'DOTORD 'DEFINED-IN-FILE 'HEPHYS/HEPHYS.RED) 
(PUT 'DOTORD 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE DOTORD (U)
    (PROGN
     (COND
      ((AND (XNP U INDICES*) (NOT (MEMQ 'ISIMPQ MUL*)))
       (SETQ MUL* (ACONC* MUL* 'ISIMPQ)))
      (T NIL))
     (COND
      ((MEMQ 'A U)
       (RERROR 'HEPHYS 4 "A represents only gamma5 in vector expressions"))
      (T (MKSQ (CONS 'CONS (ORD2 (CAR U) (CARX (CDR U) 'DOT))) 1))))) 
(PUT 'MKVARG 'NUMBER-OF-ARGS 2) 
(PUT 'MKVARG 'DEFINED-ON-LINE '162) 
(PUT 'MKVARG 'DEFINED-IN-FILE 'HEPHYS/HEPHYS.RED) 
(PUT 'MKVARG 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE MKVARG (U V)
    (PROG (Z)
      (SETQ U (VMULT U))
      (SETQ Z (CONS NIL 1))
     A
      (COND ((NULL U) (RETURN Z)))
      (SETQ Z (ADDSQ (MULTSQ (APPLY1 V (CDAR U)) (CAAR U)) Z))
      (SETQ U (CDR U))
      (GO A))) 
(PUT 'SIMPGAMMA 'NUMBER-OF-ARGS 1) 
(PUT 'SIMPGAMMA 'DEFINED-ON-LINE '172) 
(PUT 'SIMPGAMMA 'DEFINED-IN-FILE 'HEPHYS/HEPHYS.RED) 
(PUT 'SIMPGAMMA 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE SIMPGAMMA (U)
    (COND
     ((OR (NULL U) (NULL (CDR U)))
      (RERROR 'HEPHYS 5 "Missing arguments for G operator"))
     (T
      (PROG (Z)
        (COND ((NOT (MEMQ 'ISIMPQ MUL*)) (SETQ MUL* (ACONC* MUL* 'ISIMPQ))))
        (SETQ NCMP* T)
        (SETQ Z (CONS NIL 1))
        (PROG (J)
          (SETQ J (VMULT (CDR U)))
         LAB
          (COND ((NULL J) (RETURN NIL)))
          ((LAMBDA (J)
             (SETQ Z
                     (ADDSQ
                      (MULTSQ (MKSQ (CONS 'G (CONS (CAR U) (CDR J))) 1)
                              (CAR J))
                      Z)))
           (CAR J))
          (SETQ J (CDR J))
          (GO LAB))
        (RETURN Z))))) 
(PUT 'SIMPEPS 'NUMBER-OF-ARGS 1) 
(PUT 'SIMPEPS 'DEFINED-ON-LINE '184) 
(PUT 'SIMPEPS 'DEFINED-IN-FILE 'HEPHYS/HEPHYS.RED) 
(PUT 'SIMPEPS 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE SIMPEPS (U) (MKVARG U (FUNCTION EPSORD))) 
(PUT 'EPSORD 'NUMBER-OF-ARGS 1) 
(PUT 'EPSORD 'DEFINED-ON-LINE '187) 
(PUT 'EPSORD 'DEFINED-IN-FILE 'HEPHYS/HEPHYS.RED) 
(PUT 'EPSORD 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE EPSORD (U) (COND ((REPEATS U) (CONS NIL 1)) (T (MKEPSQ U)))) 
(PUT 'MKEPSK 'NUMBER-OF-ARGS 1) 
(PUT 'MKEPSK 'DEFINED-ON-LINE '190) 
(PUT 'MKEPSK 'DEFINED-IN-FILE 'HEPHYS/HEPHYS.RED) 
(PUT 'MKEPSK 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE MKEPSK (U)
    (PROG (X)
      (COND
       ((AND (XNP U INDICES*) (NOT (MEMQ 'ISIMPQ MUL*)))
        (SETQ MUL* (ACONC* MUL* 'ISIMPQ))))
      (SETQ X (ORDN U))
      (SETQ U (PERMP X U))
      (RETURN (CONS U (CONS 'EPS X))))) 
(PUT 'MKEPSQ 'NUMBER-OF-ARGS 1) 
(PUT 'MKEPSQ 'DEFINED-ON-LINE '201) 
(PUT 'MKEPSQ 'DEFINED-IN-FILE 'HEPHYS/HEPHYS.RED) 
(PUT 'MKEPSQ 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE MKEPSQ (U)
    ((LAMBDA (X)
       ((LAMBDA (Y) (COND ((NULL (CAR X)) (NEGSQ Y)) (T Y))) (MKSQ (CDR X) 1)))
     (MKEPSK U))) 
(DE MKG (U L) (MKSF (CONS 'G (CONS L U)))) 
(PUT 'MKG 'NUMBER-OF-ARGS 2) 
(PUT 'MKG 'DEFINED-ON-LINE '209) 
(PUT 'MKG 'DEFINED-IN-FILE 'HEPHYS/HEPHYS.RED) 
(PUT 'MKG 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(PUTC 'MKG 'INLINE '(LAMBDA (U L) (MKSF (CONS 'G (CONS L U))))) 
(DE MKA (L) (MKSF (LIST 'G L 'A))) 
(PUT 'MKA 'NUMBER-OF-ARGS 1) 
(PUT 'MKA 'DEFINED-ON-LINE '213) 
(PUT 'MKA 'DEFINED-IN-FILE 'HEPHYS/HEPHYS.RED) 
(PUT 'MKA 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(PUTC 'MKA 'INLINE '(LAMBDA (L) (MKSF (LIST 'G L 'A)))) 
(DE MKGAMF (U L) (MKSF (CONS 'G (CONS L U)))) 
(PUT 'MKGAMF 'NUMBER-OF-ARGS 2) 
(PUT 'MKGAMF 'DEFINED-ON-LINE '217) 
(PUT 'MKGAMF 'DEFINED-IN-FILE 'HEPHYS/HEPHYS.RED) 
(PUT 'MKGAMF 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(PUTC 'MKGAMF 'INLINE '(LAMBDA (U L) (MKSF (CONS 'G (CONS L U))))) 
(PUT 'MKG1 'NUMBER-OF-ARGS 2) 
(PUT 'MKG1 'DEFINED-ON-LINE '220) 
(PUT 'MKG1 'DEFINED-IN-FILE 'HEPHYS/HEPHYS.RED) 
(PUT 'MKG1 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE MKG1 (U L)
    (COND ((NOT (FLAGP L 'NOSPUR)) (MKSF (CONS 'G (CONS L U))))
          (T (MKSF (CONS 'G (CONS L U)))))) 
(DE MKPF (U V)
    ((LAMBDA (G544)
       (COND (*PHYSOP-LOADED (PHYSOP-MULTF G544 V)) (T (POLY-MULTF G544 V))))
     (LIST (CONS U 1)))) 
(PUT 'MKPF 'NUMBER-OF-ARGS 2) 
(PUT 'MKPF 'DEFINED-ON-LINE '223) 
(PUT 'MKPF 'DEFINED-IN-FILE 'HEPHYS/HEPHYS.RED) 
(PUT 'MKPF 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(PUTC 'MKPF 'INLINE
      '(LAMBDA (U V)
         ((LAMBDA (G544)
            (COND (*PHYSOP-LOADED (PHYSOP-MULTF G544 V))
                  (T (POLY-MULTF G544 V))))
          (LIST (CONS U 1))))) 
(PUT 'MKF 'NUMBER-OF-ARGS 2) 
(PUT 'MKF 'DEFINED-ON-LINE '226) 
(PUT 'MKF 'DEFINED-IN-FILE 'HEPHYS/HEPHYS.RED) 
(PUT 'MKF 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE MKF (U V) (COND (*PHYSOP-LOADED (PHYSOP-MULTF U V)) (T (POLY-MULTF U V)))) 
(PUT 'MULTD* 'NUMBER-OF-ARGS 2) 
(PUT 'MULTD* 'DEFINED-ON-LINE '229) 
(PUT 'MULTD* 'DEFINED-IN-FILE 'HEPHYS/HEPHYS.RED) 
(PUT 'MULTD* 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE MULTD* (U V) (COND ((EQUAL U 1) V) (T (MULTD U V)))) 
(DE ADDFS (U V) (ADDF U V)) 
(PUT 'ADDFS 'NUMBER-OF-ARGS 2) 
(PUT 'ADDFS 'DEFINED-ON-LINE '232) 
(PUT 'ADDFS 'DEFINED-IN-FILE 'HEPHYS/HEPHYS.RED) 
(PUT 'ADDFS 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(PUTC 'ADDFS 'INLINE '(LAMBDA (U V) (ADDF U V))) 
(DE MULTFS (U V)
    (COND (*PHYSOP-LOADED (PHYSOP-MULTF U V)) (T (POLY-MULTF U V)))) 
(PUT 'MULTFS 'NUMBER-OF-ARGS 2) 
(PUT 'MULTFS 'DEFINED-ON-LINE '235) 
(PUT 'MULTFS 'DEFINED-IN-FILE 'HEPHYS/HEPHYS.RED) 
(PUT 'MULTFS 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(PUTC 'MULTFS 'INLINE
      '(LAMBDA (U V)
         (COND (*PHYSOP-LOADED (PHYSOP-MULTF U V)) (T (POLY-MULTF U V))))) 
(PUT 'RCONS 'CLEANUPFN 'ISIMPA) 
(FLUID '(|*:AVOID|)) 
(PUT 'ISIMPA 'NUMBER-OF-ARGS 2) 
(PUT 'ISIMPA 'DEFINED-ON-LINE '249) 
(PUT 'ISIMPA 'DEFINED-IN-FILE 'HEPHYS/HEPHYS.RED) 
(PUT 'ISIMPA 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE ISIMPA (U V)
    (COND
     ((OR (EQCAR U 'LIST) |*:AVOID|
          (AND (ATOM U) (EQ (GET U 'RTYPE) 'HVECTOR)))
      (PROGN (SETQ |*:AVOID| NIL) U))
     (T (*Q2A1 (ISIMPQ (SIMP U)) V)))) 
(PUT 'ISIMPQ 'NUMBER-OF-ARGS 1) 
(PUT 'ISIMPQ 'DEFINED-ON-LINE '257) 
(PUT 'ISIMPQ 'DEFINED-IN-FILE 'HEPHYS/HEPHYS.RED) 
(PUT 'ISIMPQ 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE ISIMPQ (U)
    (PROG (NDIMS*)
      (SETQ NDIMS* (SIMP NDIM*))
      (COND
       ((NEQ (CDR NDIMS*) 1)
        (PROGN
         (SETQ *SUB2 T)
         (SETQ NDIMS*
                 ((LAMBDA (G541)
                    ((LAMBDA (G544)
                       (COND (*PHYSOP-LOADED (PHYSOP-MULTF G544 G541))
                             (T (POLY-MULTF G544 G541))))
                     (LIST
                      (CONS (GETPOWER (FKERN (LIST 'RECIP (CDR NDIMS*))) 1)
                            1))))
                  (CAR NDIMS*)))))
       (T (SETQ NDIMS* (CAR NDIMS*))))
     A
      (SETQ U (CONS (ISIMP1 (CAR U) INDICES* NIL NIL NIL) (CDR U)))
      (COND
       (DEFINDICES*
        (PROGN
         (SETQ INDICES* (UNION DEFINDICES* INDICES*))
         (SETQ DEFINDICES* NIL)
         (GO A)))
       ((NULL *SUB2) (RETURN U)) (T (RETURN (RESIMP U)))))) 
(PUT 'ISIMP1 'NUMBER-OF-ARGS 5) 
(PUT 'ISIMP1 'DEFINED-ON-LINE '274) 
(PUT 'ISIMP1 'DEFINED-IN-FILE 'HEPHYS/HEPHYS.RED) 
(PUT 'ISIMP1 'PROCEDURE_TYPE
     '(ARROW (TIMES GENERAL GENERAL GENERAL GENERAL GENERAL) GENERAL)) 
(DE ISIMP1 (U I V W X)
    (COND ((NULL U) NIL)
          ((OR (ATOM U) (ATOM (CAR U)))
           (COND (X (MULTD U (SPUR0 (CAR X) I V W (CDR X))))
                 (V (RERROR 'HEPHYS 6 (CONS "Unmatched index" (MAPOVERCAR V))))
                 (W
                  ((LAMBDA (G542 G543)
                     (COND (*PHYSOP-LOADED (PHYSOP-MULTF G542 G543))
                           (T (POLY-MULTF G542 G543))))
                   (EMULT W) (ISIMP1 U I V NIL X)))
                 (T U)))
          (T (ADDF (ISIMP2 (CAR U) I V W X) (ISIMP1 (CDR U) I V W X))))) 
(PUT 'ISIMP2 'NUMBER-OF-ARGS 5) 
(PUT 'ISIMP2 'DEFINED-ON-LINE '284) 
(PUT 'ISIMP2 'DEFINED-IN-FILE 'HEPHYS/HEPHYS.RED) 
(PUT 'ISIMP2 'PROCEDURE_TYPE
     '(ARROW (TIMES GENERAL GENERAL GENERAL GENERAL GENERAL) GENERAL)) 
(DE ISIMP2 (U I V W X)
    (PROG (Z)
      (COND ((ATOM (SETQ Z (CAAR U))) (GO A))
            ((AND (EQ (CAR Z) 'CONS) (XNP (CDR Z) I))
             (RETURN (DOTSUM U I V W X)))
            ((EQ (CAR Z) 'G) (GO B))
            ((EQ (CAR Z) 'EPS) (RETURN (ESUM U I V W X))))
     A
      (RETURN
       ((LAMBDA (G545)
          ((LAMBDA (G544)
             (COND (*PHYSOP-LOADED (PHYSOP-MULTF G544 G545))
                   (T (POLY-MULTF G544 G545))))
           (LIST (CONS (CAR U) 1))))
        (ISIMP1 (CDR U) I V W X)))
     B
      (SETQ Z (GADD (APPN (CDDR Z) (CDAR U)) X (CADR Z)))
      (RETURN (ISIMP1 (MULTD* (NB (CAR Z)) (CDR U)) I V W (CDR Z))))) 
(PUT 'NB 'NUMBER-OF-ARGS 1) 
(PUT 'NB 'DEFINED-ON-LINE '297) 
(PUT 'NB 'DEFINED-IN-FILE 'HEPHYS/HEPHYS.RED) 
(PUT 'NB 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE NB (U) (COND (U 1) (T (MINUS 1)))) 
(DE MKDOT (U V) (MKSF (CONS 'CONS (ORD2 U V)))) 
(PUT 'MKDOT 'NUMBER-OF-ARGS 2) 
(PUT 'MKDOT 'DEFINED-ON-LINE '300) 
(PUT 'MKDOT 'DEFINED-IN-FILE 'HEPHYS/HEPHYS.RED) 
(PUT 'MKDOT 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(PUTC 'MKDOT 'INLINE '(LAMBDA (U V) (MKSF (CONS 'CONS (ORD2 U V))))) 
(PUT 'DOTSUM 'NUMBER-OF-ARGS 5) 
(PUT 'DOTSUM 'DEFINED-ON-LINE '304) 
(PUT 'DOTSUM 'DEFINED-IN-FILE 'HEPHYS/HEPHYS.RED) 
(PUT 'DOTSUM 'PROCEDURE_TYPE
     '(ARROW (TIMES GENERAL GENERAL GENERAL GENERAL GENERAL) GENERAL)) 
(DE DOTSUM (U I V W X)
    (PROG (I1 N U1 U2 V1 Y Z Z1)
      (SETQ N (CDAR U))
      (COND
       ((NOT (MEMBER (CAR (SETQ U1 (CDAAR U))) I)) (SETQ U1 (REVERSE U1))))
      (SETQ U2 (CADR U1))
      (SETQ U1 (CAR U1))
      (SETQ V1 (CDR U))
      (COND ((EQUAL N 2) (GO H)) ((NEQ N 1) (TYPERR N "index power")))
     A
      (COND ((MEMBER U1 I) (GO A1))
            ((NULL (SETQ Z (MKSF (CONS 'CONS (ORD2 U1 U2))))) (RETURN NIL))
            (T (RETURN (MKF Z (ISIMP1 V1 I1 V W X)))))
     A1
      (SETQ I1 (DELETE U1 I))
      (COND
       ((EQ U1 U2)
        (RETURN
         ((LAMBDA (G546 G547)
            (COND (*PHYSOP-LOADED (PHYSOP-MULTF G546 G547))
                  (T (POLY-MULTF G546 G547))))
          NDIMS* (ISIMP1 V1 I1 V W X))))
       ((NOT (SETQ Z (BASSOC U1 V))) (GO C)) ((MEMBER U2 I) (GO D)))
      (COND ((EQ U1 (CAR Z)) (SETQ U1 (CDR Z))) (T (SETQ U1 (CAR Z))))
      (GO E)
     C
      (COND
       ((SETQ Z (MEMLIS U1 X))
        (RETURN (ISIMP1 V1 I1 V W (CONS (SUBST U2 U1 Z) (DELETE Z X)))))
       ((SETQ Z (MEMLIS U1 W))
        (RETURN
         (ESUM (CONS (CONS (CONS 'EPS (SUBST U2 U1 Z)) 1) V1) I1 V (DELETE Z W)
          X)))
       ((AND (MEMBER U2 I) (NULL Y)) (GO G)))
      (RETURN (ISIMP1 V1 I (CONS (CONS U1 U2) V) W X))
     D
      (SETQ Z1 U1)
      (SETQ U1 U2)
      (COND ((EQ Z1 (CAR Z)) (SETQ U2 (CDR Z))) (T (SETQ U2 (CAR Z))))
     E
      (SETQ I I1)
      (SETQ V (DELETE Z V))
      (GO A)
     G
      (SETQ Y T)
      (SETQ Z U1)
      (SETQ U1 U2)
      (SETQ U2 Z)
      (GO A1)
     H
      (COND
       ((EQ U1 U2) (RERROR 'HEPHYS 7 "2 invalid as repeated index power")))
      (SETQ I (SETQ I1 (DELETE U1 I)))
      (SETQ U1 U2)
      (GO A))) 
(PUT 'MKSF 'NUMBER-OF-ARGS 1) 
(PUT 'MKSF 'DEFINED-ON-LINE '354) 
(PUT 'MKSF 'DEFINED-IN-FILE 'HEPHYS/HEPHYS.RED) 
(PUT 'MKSF 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE MKSF (U)
    (PROG (X)
      (SETQ X (MKSQ U 1))
      (COND ((EQUAL (CDR X) 1) (RETURN (CAR X))))
      (SETQ *SUB2 T)
      (RETURN (LIST (CONS (GETPOWER (FKERN U) 1) 1))))) 
(PUT 'GADD 'NUMBER-OF-ARGS 3) 
(PUT 'GADD 'DEFINED-ON-LINE '367) 
(PUT 'GADD 'DEFINED-IN-FILE 'HEPHYS/HEPHYS.RED) 
(PUT 'GADD 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL GENERAL) GENERAL)) 
(DE GADD (U V L)
    (PROG (W X N)
      (SETQ N 0)
      (SETQ N 0)
      (COND ((NOT (SETQ X (ATSOC L V))) (GO A)))
      (SETQ V (DELETE X V))
      (SETQ W (CDDR X))
      (SETQ X (CADR X))
     A
      (COND ((NULL U) (RETURN (CONS (EVENP N) (CONS (CONS L (CONS X W)) V))))
            ((EQ (CAR U) 'A) (GO C)) (T (SETQ W (CONS (CAR U) W))))
     B
      (SETQ U (CDR U))
      (GO A)
     C
      (COND
       ((NEQ NDIMS* 4)
        (RERROR 'HEPHYS 8 "Gamma5 not allowed unless vecdim is 4")))
      (SETQ X (NOT X))
      (SETQ N (PLUS (LENGTH W) N))
      (GO B))) 
(PUT 'SPUR0 'NUMBER-OF-ARGS 5) 
(PUT 'SPUR0 'DEFINED-ON-LINE '389) 
(PUT 'SPUR0 'DEFINED-IN-FILE 'HEPHYS/HEPHYS.RED) 
(PUT 'SPUR0 'PROCEDURE_TYPE
     '(ARROW (TIMES GENERAL GENERAL GENERAL GENERAL GENERAL) GENERAL)) 
(DE SPUR0 (U I V1 V2 V3)
    (PROG (L W I1 KAHP N Z)
      (SETQ L (CAR U))
      (SETQ N 1)
      (SETQ Z (CADR U))
      (SETQ U (REVERSE (CDDR U)))
      (COND (Z (SETQ U (CONS 'A U))))
      (COND ((NULL U) (GO END1))
            ((NULL (FLAGP L 'NOSPUR))
             (COND
              ((OR (AND (EQ (CAR U) 'A) (OR (LESSP (LENGTH U) 5) (HEVENP U)))
                   (AND (NOT (EQ (CAR U) 'A)) (NOT (HEVENP U))))
               (RETURN NIL))
              ((NULL I) (PROGN (SETQ W (REVERSE U)) (GO END1))))))
     A
      (COND ((NULL U) (GO END1))
            ((MEMBER (CAR U) I)
             (COND
              ((MEMBER (CAR U) (CDR U))
               (PROGN
                (COND
                 ((EQ (CAR U) (CADR U))
                  (PROGN
                   (SETQ I (DELETE (CAR U) I))
                   (SETQ U (CDDR U))
                   (SETQ N
                           ((LAMBDA (G549)
                              (COND (*PHYSOP-LOADED (PHYSOP-MULTF N G549))
                                    (T (POLY-MULTF N G549))))
                            NDIMS*))
                   (GO A))))
                (SETQ KAHP T)
                (SETQ I1 (CONS (CAR U) I1))
                (GO A1)))
              ((MEMBER (CAR U) I1) (GO A1))
              ((SETQ Z (BASSOC (CAR U) V1))
               (PROGN
                (SETQ V1 (DELETE Z V1))
                (COND (W (SETQ I (DELETE (CAR W) I))))
                (SETQ U (CONS (OTHER (CAR U) Z) (CDR U)))
                (GO A)))
              ((SETQ Z (MEMLIS (CAR U) V2))
               (RETURN
                (COND
                 ((AND (FLAGP L 'NOSPUR) (NULL V1) (NULL V3) (NULL (CDR V2)))
                  (MKF (MKSF (CONS 'G (CONS L (APPEND (REVERSE W) U))))
                   ((LAMBDA (G551)
                      (COND (*PHYSOP-LOADED (PHYSOP-MULTF N G551))
                            (T (POLY-MULTF N G551))))
                    (MKEPSF Z))))
                 (T
                  (MULTD* N
                   (ISIMP1
                    (SPUR0 (CONS L (CONS NIL (APPEND (REVERSE U) W))) NIL NIL
                     (DELETE Z V2) V3)
                    I V1 (LIST Z) NIL))))))
              ((SETQ Z (MEMLIS (CAR U) V3))
               (COND
                ((EQUAL NDIMS* 4)
                 (RETURN
                  (SPUR0I U (DELETE (CAR U) I) V1 V2 (DELETE Z V3) L N W Z)))
                (T
                 (PROGN
                  (SETQ INDICES* (DELETE (CAR U) INDICES*))
                  (SETQ I (DELETE (CAR U) I))
                  (COND
                   ((NOT (MEMQ (CAR U) DEFINDICES*))
                    (SETQ DEFINDICES* (CONS (CAR U) DEFINDICES*))))
                  (GO A1)))))
              (T (RERROR 'HEPHYS 9 (LIST "Unmatched index" (CAR U)))))))
     A1
      (SETQ W (CONS (CAR U) W))
      (SETQ U (CDR U))
      (GO A)
     END1
      (COND
       (KAHP
        (COND
         ((EQUAL NDIMS* 4)
          (PROGN
           (SETQ Z
                   ((LAMBDA (G553)
                      (COND (*PHYSOP-LOADED (PHYSOP-MULTF N G553))
                            (T (POLY-MULTF N G553))))
                    (KAHANE (REVERSE W) I1 L)))
           (RETURN (ISIMP1 Z (SETDIFF I I1) V1 V2 V3))))
         (T (SETQ Z (SPURDIM W I L NIL 1)))))
       (T (SETQ Z (SPURR W L NIL 1))))
      (RETURN
       (COND ((NULL Z) NIL)
             ((AND (GET 'EPS 'KLIST) (NOT (FLAGP L 'NOSPUR)))
              (ISIMP1
               (COND (*PHYSOP-LOADED (PHYSOP-MULTF N Z)) (T (POLY-MULTF N Z)))
               I V1 V2 V3))
             (T
              ((LAMBDA (G555)
                 (COND (*PHYSOP-LOADED (PHYSOP-MULTF Z G555))
                       (T (POLY-MULTF Z G555))))
               (ISIMP1 N I V1 V2 V3))))))) 
(PUT 'SPUR0I 'NUMBER-OF-ARGS 9) 
(PUT 'SPUR0I 'DEFINED-ON-LINE '459) 
(PUT 'SPUR0I 'DEFINED-IN-FILE 'HEPHYS/HEPHYS.RED) 
(PUT 'SPUR0I 'PROCEDURE_TYPE
     '(ARROW
       (TIMES GENERAL GENERAL GENERAL GENERAL GENERAL GENERAL GENERAL GENERAL
              GENERAL)
       GENERAL)) 
(DE SPUR0I (U I V1 V2 V3 L N W Z)
    (PROG (KAHP I1)
      (COND
       ((AND (FLAGP L 'NOSPUR) (FLAGP (CAR Z) 'NOSPUR))
        (RERROR 'HEPHYS 10 "NOSPUR on more than one line not implemented"))
       ((FLAGP (CAR Z) 'NOSPUR) (SETQ KAHP (CAR Z))))
      (SETQ Z (CDR Z))
      (SETQ I1 (CAR Z))
      (SETQ Z (REVERSE (CDR Z)))
      (COND (I1 (SETQ Z (CONS 'A Z))))
      (SETQ I1 NIL)
      (PROGN
       (PROG ()
        WHILELABEL
         (COND ((NOT (NULL (EQ (CAR U) (CAR Z)))) (RETURN NIL)))
         (PROGN (SETQ I1 (CONS (CAR Z) I1)) (SETQ Z (CDR Z)))
         (GO WHILELABEL))
       (SETQ Z (CDR Z))
       (SETQ U (CDR U))
       (COND
        ((FLAGP L 'NOSPUR)
         (PROGN
          (SETQ W (CONS W (CONS U (CONS I1 Z))))
          (SETQ I1 (CAR W))
          (SETQ Z (CADR W))
          (SETQ U (CADDR W))
          (SETQ W (CDDDR W)))))
       (SETQ W (REVERSE W))
       (COND
        ((NULL (AND (OR (NULL U) (NOT (EQCAR W 'A))) (SETQ U (APPEND U W))))
         (PROGN
          (COND ((NOT (HEVENP U)) (SETQ N (MINUS N))))
          (SETQ U (CONS 'A (APPEND U (CDR W)))))))
       (COND (KAHP (SETQ L KAHP)))
       (SETQ Z
               (MKF (MKSF (CONS 'G (CONS L (REVERSE I1))))
                ((LAMBDA (G558 G559)
                   (COND (*PHYSOP-LOADED (PHYSOP-MULTF G558 G559))
                         (T (POLY-MULTF G558 G559))))
                 (BRACE U L I)
                 ((LAMBDA (G557)
                    (COND (*PHYSOP-LOADED (PHYSOP-MULTF N G557))
                          (T (POLY-MULTF N G557))))
                  (MKG1 Z L)))))
       (SETQ Z (ISIMP1 Z I V1 V2 V3))
       (COND
        ((OR (NULL Z) (SETQ Z ((LAMBDA (*EXP) (QUOTF1 Z 2)) T))) (RETURN Z))
        (T (ERRACH (LIST 'SPUR0 N I V1 V2 V3))))))) 
(PUT 'SPURDIM 'NUMBER-OF-ARGS 5) 
(PUT 'SPURDIM 'DEFINED-ON-LINE '493) 
(PUT 'SPURDIM 'DEFINED-IN-FILE 'HEPHYS/HEPHYS.RED) 
(PUT 'SPURDIM 'PROCEDURE_TYPE
     '(ARROW (TIMES GENERAL GENERAL GENERAL GENERAL GENERAL) GENERAL)) 
(DE SPURDIM (U I L V N)
    (PROG (W X Y Z Z1 M)
      (SETQ M 0)
     A
      (COND
       ((NULL U)
        (RETURN
         (COND ((NULL V) N)
               ((FLAGP L 'NOSPUR)
                ((LAMBDA (G561)
                   (COND (*PHYSOP-LOADED (PHYSOP-MULTF N G561))
                         (T (POLY-MULTF N G561))))
                 (MKSF (CONS 'G (CONS L V)))))
               (T
                ((LAMBDA (G563)
                   (COND (*PHYSOP-LOADED (PHYSOP-MULTF N G563))
                         (T (POLY-MULTF N G563))))
                 (SPRGEN V))))))
       ((NOT (MEMQ (CAR U) (CDR U)))
        (PROGN (SETQ V (CONS (CAR U) V)) (SETQ U (CDR U)) (GO A))))
      (SETQ X (CAR U))
      (SETQ Y (CDR U))
      (SETQ W Y)
      (SETQ M 1)
     B
      (COND ((MEMQ X I) (GO D)) ((NOT (EQ X (CAR W))) (GO C))
            ((NULL (SETQ W (MKSF (CONS 'CONS (ORD2 X X))))) (RETURN Z)))
      (COND ((MEMQ X I) (SETQ W NDIMS*)))
      (RETURN (ADDF (MKF W (SPURDIM (DELETE X Y) I L V N)) Z))
     C
      (SETQ Z1 (MKSF (CONS 'CONS (ORD2 X (CAR W)))))
      (COND
       ((MEMQ (CAR W) I)
        (SETQ Z
                (ADDF
                 (SPURDIM (SUBST X (CAR W) (REMOVE Y M)) I L V (TIMES 2 N))
                 Z)))
       (Z1
        (SETQ Z (ADDF (MKF Z1 (SPURDIM (REMOVE Y M) I L V (TIMES 2 N))) Z))))
      (SETQ W (CDR W))
      (SETQ N (MINUS N))
      (SETQ M (PLUS M 1))
      (GO B)
     D
      (PROG ()
       WHILELABEL
        (COND ((NOT (NOT (EQ X (CAR W)))) (RETURN NIL)))
        (PROGN
         (SETQ Z
                 (ADDF
                  (SPURDIM (SUBST (CAR W) X (REMOVE Y M)) I L V (TIMES 2 N))
                  Z))
         (SETQ W (CDR W))
         (SETQ N (MINUS N))
         (SETQ M (PLUS M 1)))
        (GO WHILELABEL))
      (RETURN (ADDF (MKF NDIMS* (SPURDIM (DELETE X Y) I L V N)) Z)))) 
(PUT 'APPN 'NUMBER-OF-ARGS 2) 
(PUT 'APPN 'DEFINED-ON-LINE '528) 
(PUT 'APPN 'DEFINED-IN-FILE 'HEPHYS/HEPHYS.RED) 
(PUT 'APPN 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE APPN (U N) (COND ((EQUAL N 1) U) (T (APPEND U (APPN U (DIFFERENCE N 1)))))) 
(PUT 'OTHER 'NUMBER-OF-ARGS 2) 
(PUT 'OTHER 'DEFINED-ON-LINE '531) 
(PUT 'OTHER 'DEFINED-IN-FILE 'HEPHYS/HEPHYS.RED) 
(PUT 'OTHER 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE OTHER (U V) (COND ((EQ U (CAR V)) (CDR V)) (T (CAR V)))) 
(PUT 'KAHANE 'NUMBER-OF-ARGS 3) 
(PUT 'KAHANE 'DEFINED-ON-LINE '534) 
(PUT 'KAHANE 'DEFINED-IN-FILE 'HEPHYS/HEPHYS.RED) 
(PUT 'KAHANE 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL GENERAL) GENERAL)) 
(DE KAHANE (U I L)
    (PROG (P R V W X Y Z K M)
      (SETQ K 0)
      (SETQ M 0)
      (SETQ K 0)
      (COND ((EQCAR U 'A) (GO A1)))
     A
      (SETQ P (NOT P))
      (COND ((NULL U) (GO D)) ((MEMBER (CAR U) I) (GO C)))
     A1
      (SETQ W (ACONC* W (CAR U)))
     B
      (SETQ U (CDR U))
      (GO A)
     C
      (SETQ Y (CONS (CAR U) P))
      (SETQ Z (CONS (CONS X (CONS Y W)) Z))
      (SETQ X Y)
      (SETQ W NIL)
      (SETQ K (PLUS K 1))
      (GO B)
     D
      (SETQ Z (CONS (CONS NIL (CONS X W)) Z))
      (SETQ M 1)
     L1
      (COND ((NULL Z) (GO L9)))
      (SETQ U (CAAR Z))
      (SETQ X (CADAR Z))
      (SETQ W (CDDAR Z))
      (SETQ Z (CDR Z))
      (SETQ M (PLUS M 1))
      (COND ((NULL U) (GO L2))
            ((AND (EQ (CAR U) (CAR X)) (EXC X (CDR U))) (GO L7)))
      (SETQ W (REVERSE W))
      (SETQ R T)
     L2
      (SETQ P (NOT (EXC X R)))
      (SETQ X (CAR X))
      (SETQ Y NIL)
     L3
      (COND
       ((NULL Z)
        (RERROR 'HEPHYS 11
                (CONS "Unmatched index"
                      (COND
                       (Y
                        (COND ((NOT (ATOM (CADAR Y))) (CADAR Y))
                              ((NOT (ATOM (CAAR Y))) (CAAR Y)) (T NIL)))
                       (T NIL)))))
       ((AND (EQ X (CAR (SETQ I (CADAR Z)))) (NOT (EXC I P))) (GO L5))
       ((AND (EQ X (CAR (SETQ I (CAAR Z)))) (EXC I P)) (GO L4)))
      (SETQ Y (CONS (CAR Z) Y))
      (SETQ Z (CDR Z))
      (GO L3)
     L4
      (SETQ X (CADAR Z))
      (SETQ W (APPR (CDDAR Z) W))
      (SETQ R T)
      (GO L6)
     L5
      (SETQ X (CAAR Z))
      (SETQ W (APPEND (CDDAR Z) W))
      (SETQ R NIL)
     L6
      (SETQ Z (APPR Y (CDR Z)))
      (COND ((NULL X) (GO L8)) ((NOT (EQCAR U (CAR X))) (GO L2)))
     L7
      (COND ((AND W (CDR U)) (SETQ W (ACONC* (CDR W) (CAR W)))))
      (SETQ V
              ((LAMBDA (G564)
                 (COND (*PHYSOP-LOADED (PHYSOP-MULTF G564 V))
                       (T (POLY-MULTF G564 V))))
               (BRACE W L NIL)))
      (GO L1)
     L8
      (SETQ V (MKSF (CONS 'G (CONS L W))))
      (SETQ Z (REVERSE Z))
      (SETQ K (QUOTIENT K 2))
      (GO L1)
     L9
      (SETQ U (EXPT 2 K))
      (COND ((NOT (EVENP (DIFFERENCE K M))) (SETQ U (MINUS U))))
      (RETURN (MULTD* U V)))) 
(PUT 'APPR 'NUMBER-OF-ARGS 2) 
(PUT 'APPR 'DEFINED-ON-LINE '603) 
(PUT 'APPR 'DEFINED-IN-FILE 'HEPHYS/HEPHYS.RED) 
(PUT 'APPR 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE APPR (U V) (COND ((NULL U) V) (T (APPR (CDR U) (CONS (CAR U) V))))) 
(PUT 'EXC 'NUMBER-OF-ARGS 2) 
(PUT 'EXC 'DEFINED-ON-LINE '606) 
(PUT 'EXC 'DEFINED-IN-FILE 'HEPHYS/HEPHYS.RED) 
(PUT 'EXC 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE EXC (U V) (COND ((NULL (CDR U)) V) (T (NOT V)))) 
(PUT 'BRACE 'NUMBER-OF-ARGS 3) 
(PUT 'BRACE 'DEFINED-ON-LINE '609) 
(PUT 'BRACE 'DEFINED-IN-FILE 'HEPHYS/HEPHYS.RED) 
(PUT 'BRACE 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL GENERAL) GENERAL)) 
(DE BRACE (U L I)
    (COND ((NULL U) 2)
          ((OR (XNP I U) (FLAGP L 'NOSPUR))
           (ADDF (MKG1 U L) (MKG1 (REVERSE U) L)))
          ((EQ (CAR U) 'A)
           (COND
            ((HEVENP U)
             (ADDF (MKSF (CONS 'G (CONS L U)))
                   (NEGF
                    (MKSF (CONS 'G (CONS L (CONS 'A (REVERSE (CDR U)))))))))
            (T (MKF (MKSF (LIST 'G L 'A)) (SPR2 (CDR U) L 2 NIL)))))
          ((HEVENP U) (SPR2 U L 2 NIL)) (T (SPR1 U L 2 NIL)))) 
(PUT 'SPR1 'NUMBER-OF-ARGS 4) 
(PUT 'SPR1 'DEFINED-ON-LINE '620) 
(PUT 'SPR1 'DEFINED-IN-FILE 'HEPHYS/HEPHYS.RED) 
(PUT 'SPR1 'PROCEDURE_TYPE
     '(ARROW (TIMES GENERAL GENERAL GENERAL GENERAL) GENERAL)) 
(DE SPR1 (U L N B)
    (COND ((NULL U) NIL) ((NULL (CDR U)) (MULTD* N (MKG1 U L)))
          (T
           (PROG (M X Z)
             (SETQ X U)
             (SETQ M 1)
            A
             (COND ((NULL X) (RETURN Z)))
             (SETQ Z
                     (ADDF
                      (MKF (MKG1 (LIST (CAR X)) L)
                       (COND ((NULL B) (SPURR (REMOVE U M) L NIL N))
                             (T (SPR1 (REMOVE U M) L N NIL))))
                      Z))
             (SETQ X (CDR X))
             (SETQ N (MINUS N))
             (SETQ M (PLUS M 1))
             (GO A))))) 
(PUT 'SPR2 'NUMBER-OF-ARGS 4) 
(PUT 'SPR2 'DEFINED-ON-LINE '637) 
(PUT 'SPR2 'DEFINED-IN-FILE 'HEPHYS/HEPHYS.RED) 
(PUT 'SPR2 'PROCEDURE_TYPE
     '(ARROW (TIMES GENERAL GENERAL GENERAL GENERAL) GENERAL)) 
(DE SPR2 (U L N B)
    (COND
     ((AND (NULL (CDDR U)) (NULL B))
      (MULTD* N (MKSF (CONS 'CONS (ORD2 (CAR U) (CADR U))))))
     (T
      ((LAMBDA (X) (COND (B (ADDF (SPR1 U L N B) X)) (T X)))
       (ADDF (SPURR U L NIL N)
             (MKF (MKSF (LIST 'G L 'A))
              (SPURR (APPEND U (LIST 'A)) L NIL N))))))) 
(PUT 'HEVENP 'NUMBER-OF-ARGS 1) 
(PUT 'HEVENP 'DEFINED-ON-LINE '643) 
(PUT 'HEVENP 'DEFINED-IN-FILE 'HEPHYS/HEPHYS.RED) 
(PUT 'HEVENP 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE HEVENP (U) (OR (NULL U) (NOT (HEVENP (CDR U))))) 
(PUT 'BASSOC 'NUMBER-OF-ARGS 2) 
(PUT 'BASSOC 'DEFINED-ON-LINE '646) 
(PUT 'BASSOC 'DEFINED-IN-FILE 'HEPHYS/HEPHYS.RED) 
(PUT 'BASSOC 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE BASSOC (U V)
    (COND ((NULL V) NIL) ((OR (EQ U (CAAR V)) (EQ U (CDAR V))) (CAR V))
          (T (BASSOC U (CDR V))))) 
(PUT 'MEMLIS 'NUMBER-OF-ARGS 2) 
(PUT 'MEMLIS 'DEFINED-ON-LINE '651) 
(PUT 'MEMLIS 'DEFINED-IN-FILE 'HEPHYS/HEPHYS.RED) 
(PUT 'MEMLIS 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE MEMLIS (U V)
    (COND ((NULL V) NIL) ((MEMBER U (CAR V)) (CAR V)) (T (MEMLIS U (CDR V))))) 
(PUT 'SPURR 'NUMBER-OF-ARGS 4) 
(PUT 'SPURR 'DEFINED-ON-LINE '656) 
(PUT 'SPURR 'DEFINED-IN-FILE 'HEPHYS/HEPHYS.RED) 
(PUT 'SPURR 'PROCEDURE_TYPE
     '(ARROW (TIMES GENERAL GENERAL GENERAL GENERAL) GENERAL)) 
(DE SPURR (U L V N)
    (PROG (W X Y Z Z1 M)
      (SETQ M 0)
     A
      (COND ((NULL U) (GO B)) ((MEMBER (CAR U) (CDR U)) (GO G)))
      (SETQ V (CONS (CAR U) V))
      (SETQ U (CDR U))
      (GO A)
     B
      (RETURN
       (COND ((NULL V) N)
             ((FLAGP L 'NOSPUR) (MULTD* N (MKSF (CONS 'G (CONS L V)))))
             (T (MULTD* N (SPRGEN V)))))
     G
      (SETQ X (CAR U))
      (SETQ Y (CDR U))
      (SETQ W Y)
      (SETQ M 1)
     H
      (COND ((NOT (EQ X (CAR W))) (GO H1))
            ((NULL (SETQ W (MKSF (CONS 'CONS (ORD2 X X))))) (RETURN Z))
            (T (RETURN (ADDF (MKF W (SPURR (DELETE X Y) L V N)) Z))))
     H1
      (SETQ Z1 (MKSF (CONS 'CONS (ORD2 X (CAR W)))))
      (COND
       (Z1 (SETQ Z (ADDF (MKF Z1 (SPURR (REMOVE Y M) L V (TIMES 2 N))) Z))))
      (SETQ W (CDR W))
      (SETQ N (MINUS N))
      (SETQ M (PLUS M 1))
      (GO H))) 
(PUT 'SPRGEN 'NUMBER-OF-ARGS 1) 
(PUT 'SPRGEN 'DEFINED-ON-LINE '681) 
(PUT 'SPRGEN 'DEFINED-IN-FILE 'HEPHYS/HEPHYS.RED) 
(PUT 'SPRGEN 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE SPRGEN (V)
    (PROG (X Y Z)
      (COND ((NOT (EQ (CAR V) 'A)) (RETURN (SPRGEN1 V T)))
            ((NULL (SETQ X (COMB (SETQ V (CDR V)) 4))) (RETURN NIL))
            ((NULL (CDR X)) (GO E)))
     C
      (COND
       ((NULL X)
        (RETURN
         ((LAMBDA (G544)
            (COND (*PHYSOP-LOADED (PHYSOP-MULTF G544 Z))
                  (T (POLY-MULTF G544 Z))))
          (LIST (CONS (CONS 'I 1) 1))))))
      (SETQ Y (MKEPSF (CAR X)))
      (COND ((EQUAL (ASIGN (CAR X) V 1) (MINUS 1)) (SETQ Y (NEGF Y))))
      (SETQ Z
              (ADDF
               ((LAMBDA (G569)
                  (COND (*PHYSOP-LOADED (PHYSOP-MULTF Y G569))
                        (T (POLY-MULTF Y G569))))
                (SPRGEN1 (SETDIFF V (CAR X)) T))
               Z))
     D
      (SETQ X (CDR X))
      (GO C)
     E
      (SETQ Z (MKEPSF (CAR X)))
      (GO D))) 
(PUT 'ASIGN 'NUMBER-OF-ARGS 3) 
(PUT 'ASIGN 'DEFINED-ON-LINE '696) 
(PUT 'ASIGN 'DEFINED-IN-FILE 'HEPHYS/HEPHYS.RED) 
(PUT 'ASIGN 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL GENERAL) GENERAL)) 
(DE ASIGN (U V N)
    (COND ((NULL U) N)
          (T (ASIGN (CDR U) V (TIMES (ASIGN1 (CAR U) V (MINUS 1)) N))))) 
(PUT 'ASIGN1 'NUMBER-OF-ARGS 3) 
(PUT 'ASIGN1 'DEFINED-ON-LINE '699) 
(PUT 'ASIGN1 'DEFINED-IN-FILE 'HEPHYS/HEPHYS.RED) 
(PUT 'ASIGN1 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL GENERAL) GENERAL)) 
(DE ASIGN1 (U V N) (COND ((EQ U (CAR V)) N) (T (ASIGN1 U (CDR V) (MINUS N))))) 
(PUT 'SPRGEN1 'NUMBER-OF-ARGS 2) 
(PUT 'SPRGEN1 'DEFINED-ON-LINE '702) 
(PUT 'SPRGEN1 'DEFINED-IN-FILE 'HEPHYS/HEPHYS.RED) 
(PUT 'SPRGEN1 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE SPRGEN1 (U B)
    (COND ((NULL U) NIL)
          ((NULL (CDDR U))
           ((LAMBDA (X) (COND (B X) (T (NEGF X))))
            (MKSF (CONS 'CONS (ORD2 (CAR U) (CADR U))))))
          (T
           (PROG (W X Y Z)
             (SETQ X (CAR U))
             (SETQ U (CDR U))
             (SETQ Y U)
            A
             (COND ((NULL U) (RETURN Z))
                   ((NULL (SETQ W (MKSF (CONS 'CONS (ORD2 X (CAR U))))))
                    (GO C)))
             (SETQ Z
                     (ADDF
                      ((LAMBDA (G571)
                         (COND (*PHYSOP-LOADED (PHYSOP-MULTF W G571))
                               (T (POLY-MULTF W G571))))
                       (SPRGEN1 (DELETE (CAR U) Y) B))
                      Z))
            C
             (SETQ B (NOT B))
             (SETQ U (CDR U))
             (GO A))))) 
(PUT 'EPS 'SIMPFN 'SIMPEPS) 
(PUT 'MKEPSF 'NUMBER-OF-ARGS 1) 
(PUT 'MKEPSF 'DEFINED-ON-LINE '723) 
(PUT 'MKEPSF 'DEFINED-IN-FILE 'HEPHYS/HEPHYS.RED) 
(PUT 'MKEPSF 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE MKEPSF (U)
    ((LAMBDA (X)
       ((LAMBDA (Y) (COND ((NULL (CAR X)) (NEGF Y)) (T Y))) (MKSF (CDR X))))
     (MKEPSK U))) 
(PUT 'ESUM 'NUMBER-OF-ARGS 5) 
(PUT 'ESUM 'DEFINED-ON-LINE '727) 
(PUT 'ESUM 'DEFINED-IN-FILE 'HEPHYS/HEPHYS.RED) 
(PUT 'ESUM 'PROCEDURE_TYPE
     '(ARROW (TIMES GENERAL GENERAL GENERAL GENERAL GENERAL) GENERAL)) 
(DE ESUM (U I V W X)
    (PROG (Y Z Z1)
      (SETQ Z (CAR U))
      (SETQ U (CDR U))
      (COND
       ((NEQ (CDR Z) 1)
        (SETQ U
                ((LAMBDA (G572)
                   (COND (*PHYSOP-LOADED (PHYSOP-MULTF G572 U))
                         (T (POLY-MULTF G572 U))))
                 (EXPTF (MKEPSF (CDAR Z)) (DIFFERENCE (CDR Z) 1))))))
      (SETQ Z (CDAR Z))
     A
      (COND ((REPEATS Z) (RETURN NIL)))
     B
      (COND ((NULL Z) (RETURN (ISIMP1 U I V (CONS (REVERSE Y) W) X)))
            ((MEMBER (CAR Z) I)
             (PROGN
              (COND
               ((SETQ Z1 (BASSOC (CAR Z) V))
                (PROGN
                 (SETQ V (DELETE Z1 V))
                 (SETQ I (DELETE (CAR Z) I))
                 (SETQ Z
                         (APPEND (REVERSE Y)
                                 (CONS (OTHER (CAR Z) Z1) (CDR Z))))
                 (SETQ Y NIL)
                 (GO A)))
               ((SETQ Z1 (MEMLIS (CAR Z) W))
                (PROGN
                 (SETQ Z (APPEND (REVERSE Y) Z))
                 (SETQ Y (INTERSECTION I (INTERSECTION Z Z1)))
                 (RETURN
                  (ISIMP1
                   ((LAMBDA (G574)
                      (COND (*PHYSOP-LOADED (PHYSOP-MULTF G574 U))
                            (T (POLY-MULTF G574 U))))
                    (EMULT1 Z1 Z Y))
                   (SETDIFF I Y) V (DELETE Z1 W) X))))))))
      (SETQ Y (CONS (CAR Z) Y))
      (SETQ Z (CDR Z))
      (GO B))) 
(PUT 'EMULT 'NUMBER-OF-ARGS 1) 
(PUT 'EMULT 'DEFINED-ON-LINE '756) 
(PUT 'EMULT 'DEFINED-IN-FILE 'HEPHYS/HEPHYS.RED) 
(PUT 'EMULT 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE EMULT (U)
    (COND ((NULL (CDR U)) (MKEPSF (CAR U)))
          ((NULL (CDDR U)) (EMULT1 (CAR U) (CADR U) NIL))
          (T
           ((LAMBDA (G576 G577)
              (COND (*PHYSOP-LOADED (PHYSOP-MULTF G576 G577))
                    (T (POLY-MULTF G576 G577))))
            (EMULT1 (CAR U) (CADR U) NIL) (EMULT (CDDR U)))))) 
(PUT 'EMULT1 'NUMBER-OF-ARGS 3) 
(PUT 'EMULT1 'DEFINED-ON-LINE '761) 
(PUT 'EMULT1 'DEFINED-IN-FILE 'HEPHYS/HEPHYS.RED) 
(PUT 'EMULT1 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL GENERAL) GENERAL)) 
(DE EMULT1 (U V I)
    ((LAMBDA (X Y)
       ((LAMBDA (M N)
          (COND ((EQUAL M 4) (TIMES 24 N))
                ((EQUAL M 3)
                 (MULTD (TIMES 6 N)
                        (MKSF (CONS 'CONS (ORD2 (CAR X) (CAR Y))))))
                (T
                 (MULTD* (TIMES N (COND ((EQUAL M 0) 1) (T M)))
                  (CAR
                   (DETQ
                    (MAPLIST X
                             (FUNCTION
                              (LAMBDA (K)
                                (MAPLIST Y
                                         (FUNCTION
                                          (LAMBDA (J)
                                            (CONS
                                             (MKSF
                                              (CONS 'CONS
                                                    (ORD2 (CAR K) (CAR J))))
                                             1)))))))))))))
        (LENGTH I)
        ((LAMBDA (J) (NB (COND ((PERMP U (APPEND I X)) (NOT J)) (T J))))
         (PERMP V (APPEND I Y)))))
     (SETDIFF U I) (SETDIFF V I))) 
(ENDMODULE) 