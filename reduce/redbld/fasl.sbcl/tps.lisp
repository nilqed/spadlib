(cl:declaim (cl:optimize cl:debug cl:safety))
(cl:declaim (sb-ext:muffle-conditions sb-ext:compiler-note cl:style-warning))
(MODULE (LIST 'TPS)) 
(CREATE-PACKAGE
 '(TPS TPSCOMP TPSEVAL TPSDOM TPSFNS TPSREV TPSSUM TPSMISC TPSCONV)
 '(CONTRIB TPS)) 
(FLUID '(|PS:EXP-LIM| KNOWNPS |PS:LEVEL| |PS:MAX-ORDER| *PSPRINTORDER)) 
(SWITCH (LIST (LIST 'EQUAL 'PSPRINTORDER 'ON))) 
(DE RANDS (E) (CDR E)) 
(PUT 'RANDS 'NUMBER-OF-ARGS 1) 
(PUT 'RANDS 'DEFINED-ON-LINE '93) 
(PUT 'RANDS 'DEFINED-IN-FILE 'TPS/TPS.RED) 
(PUT 'RANDS 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(PUTC 'RANDS 'INLINE '(LAMBDA (E) (CDR E))) 
(DE RAND1 (E) (CADR E)) 
(PUT 'RAND1 'NUMBER-OF-ARGS 1) 
(PUT 'RAND1 'DEFINED-ON-LINE '96) 
(PUT 'RAND1 'DEFINED-IN-FILE 'TPS/TPS.RED) 
(PUT 'RAND1 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(PUTC 'RAND1 'INLINE '(LAMBDA (E) (CADR E))) 
(DE RAND2 (E) (CADDR E)) 
(PUT 'RAND2 'NUMBER-OF-ARGS 1) 
(PUT 'RAND2 'DEFINED-ON-LINE '99) 
(PUT 'RAND2 'DEFINED-IN-FILE 'TPS/TPS.RED) 
(PUT 'RAND2 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(PUTC 'RAND2 'INLINE '(LAMBDA (E) (CADDR E))) 
(DE RAND3 (E) (CADDDR E)) 
(PUT 'RAND3 'NUMBER-OF-ARGS 1) 
(PUT 'RAND3 'DEFINED-ON-LINE '102) 
(PUT 'RAND3 'DEFINED-IN-FILE 'TPS/TPS.RED) 
(PUT 'RAND3 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(PUTC 'RAND3 'INLINE '(LAMBDA (E) (CADDDR E))) 
(DE RATOR (E) (CAR E)) 
(PUT 'RATOR 'NUMBER-OF-ARGS 1) 
(PUT 'RATOR 'DEFINED-ON-LINE '105) 
(PUT 'RATOR 'DEFINED-IN-FILE 'TPS/TPS.RED) 
(PUT 'RATOR 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(PUTC 'RATOR 'INLINE '(LAMBDA (E) (CAR E))) 
(DE |PS:DOMAINP| (U) (OR (ATOM U) (AND (NEQ (CAR U) '|:PS:|) (NOT (LISTP U))))) 
(PUT '|PS:DOMAINP| 'NUMBER-OF-ARGS 1) 
(PUT '|PS:DOMAINP| 'DEFINED-ON-LINE '108) 
(PUT '|PS:DOMAINP| 'DEFINED-IN-FILE 'TPS/TPS.RED) 
(PUT '|PS:DOMAINP| 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(PUTC '|PS:DOMAINP| 'INLINE
      '(LAMBDA (U) (OR (ATOM U) (AND (NEQ (CAR U) '|:PS:|) (NOT (LISTP U)))))) 
(DE |PS:P| (U) (AND (PAIRP U) (EQUAL (CAR U) '|:PS:|))) 
(PUT '|PS:P| 'NUMBER-OF-ARGS 1) 
(PUT '|PS:P| 'DEFINED-ON-LINE '111) 
(PUT '|PS:P| 'DEFINED-IN-FILE 'TPS/TPS.RED) 
(PUT '|PS:P| 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(PUTC '|PS:P| 'INLINE '(LAMBDA (U) (AND (PAIRP U) (EQUAL (CAR U) '|:PS:|)))) 
(DE |PS:ATOM| (U)
    (OR (ATOM U) (AND (NEQ (CAR U) '|:PS:|) (GET (CAR U) 'DNAME)))) 
(PUT '|PS:ATOM| 'NUMBER-OF-ARGS 1) 
(PUT '|PS:ATOM| 'DEFINED-ON-LINE '114) 
(PUT '|PS:ATOM| 'DEFINED-IN-FILE 'TPS/TPS.RED) 
(PUT '|PS:ATOM| 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(PUTC '|PS:ATOM| 'INLINE
      '(LAMBDA (U)
         (OR (ATOM U) (AND (NEQ (CAR U) '|:PS:|) (GET (CAR U) 'DNAME))))) 
(DE |PS:NUMBERP| (U)
    (OR (NUMBERP U) (AND (PAIRP U) (NEQ (CAR U) '|:PS:|) (GET (CAR U) 'DNAME)))) 
(PUT '|PS:NUMBERP| 'NUMBER-OF-ARGS 1) 
(PUT '|PS:NUMBERP| 'DEFINED-ON-LINE '117) 
(PUT '|PS:NUMBERP| 'DEFINED-IN-FILE 'TPS/TPS.RED) 
(PUT '|PS:NUMBERP| 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(PUTC '|PS:NUMBERP| 'INLINE
      '(LAMBDA (U)
         (OR (NUMBERP U)
             (AND (PAIRP U) (NEQ (CAR U) '|:PS:|) (GET (CAR U) 'DNAME))))) 
(PUT 'CONSTANTPSP 'NUMBER-OF-ARGS 1) 
(PUT 'CONSTANTPSP 'DEFINED-ON-LINE '120) 
(PUT 'CONSTANTPSP 'DEFINED-IN-FILE 'TPS/TPS.RED) 
(PUT 'CONSTANTPSP 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE CONSTANTPSP (U)
    (OR
     (OR (NUMBERP U)
         (AND (PAIRP U) (NEQ (CAR U) '|:PS:|) (GET (CAR U) 'DNAME)))
     (EQ (|PS:EXPRESSION| U) 'PSCONSTANT))) 
(PUT '|PS:GETV| 'NUMBER-OF-ARGS 2) 
(PUT '|PS:GETV| 'DEFINED-ON-LINE '123) 
(PUT '|PS:GETV| 'DEFINED-IN-FILE 'TPS/TPS.RED) 
(PUT '|PS:GETV| 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE |PS:GETV| (PS I)
    (COND
     ((EQCAR PS '|:PS:|)
      (COND ((IDP (CDR PS)) (GETV (EVAL (CDR PS)) I)) (T (GETV (CDR PS) I))))
     (T (RERROR 'TPS 1 (LIST "PS:GETV: not a ps" PS))))) 
(PUT '|PS:PUTV| 'NUMBER-OF-ARGS 3) 
(PUT '|PS:PUTV| 'DEFINED-ON-LINE '129) 
(PUT '|PS:PUTV| 'DEFINED-IN-FILE 'TPS/TPS.RED) 
(PUT '|PS:PUTV| 'PROCEDURE_TYPE
     '(ARROW (TIMES GENERAL GENERAL GENERAL) GENERAL)) 
(DE |PS:PUTV| (PS I V)
    (COND
     ((EQCAR PS '|:PS:|)
      (COND ((IDP (CDR PS)) (PUTV (EVAL (CDR PS)) I V))
            (T (PUTV (CDR PS) I V))))
     (T (RERROR 'TPS 2 (LIST "PS:PUTV: not a ps" PS))))) 
(PUT '|PS:ORDER| 'NUMBER-OF-ARGS 1) 
(PUT '|PS:ORDER| 'DEFINED-ON-LINE '135) 
(PUT '|PS:ORDER| 'DEFINED-IN-FILE 'TPS/TPS.RED) 
(PUT '|PS:ORDER| 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE |PS:ORDER| (PS)
    (COND ((OR (ATOM PS) (AND (NEQ (CAR PS) '|:PS:|) (GET (CAR PS) 'DNAME))) 0)
          (T (|PS:GETV| PS 0)))) 
(DE |PS:SET-ORDER| (PS N) (|PS:PUTV| PS 0 N)) 
(PUT '|PS:SET-ORDER| 'NUMBER-OF-ARGS 2) 
(PUT '|PS:SET-ORDER| 'DEFINED-ON-LINE '139) 
(PUT '|PS:SET-ORDER| 'DEFINED-IN-FILE 'TPS/TPS.RED) 
(PUT '|PS:SET-ORDER| 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(PUTC '|PS:SET-ORDER| 'INLINE '(LAMBDA (PS N) (|PS:PUTV| PS 0 N))) 
(PUT '|PS:LAST-TERM| 'NUMBER-OF-ARGS 1) 
(PUT '|PS:LAST-TERM| 'DEFINED-ON-LINE '142) 
(PUT '|PS:LAST-TERM| 'DEFINED-IN-FILE 'TPS/TPS.RED) 
(PUT '|PS:LAST-TERM| 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE |PS:LAST-TERM| (PS)
    (COND
     ((OR (ATOM PS) (AND (NEQ (CAR PS) '|:PS:|) (GET (CAR PS) 'DNAME)))
      |PS:MAX-ORDER|)
     (T (|PS:GETV| PS 1)))) 
(SETQ |PS:MAX-ORDER| 2147483647) 
(DE |PS:SET-LAST-TERM| (PS N) (|PS:PUTV| PS 1 N)) 
(PUT '|PS:SET-LAST-TERM| 'NUMBER-OF-ARGS 2) 
(PUT '|PS:SET-LAST-TERM| 'DEFINED-ON-LINE '149) 
(PUT '|PS:SET-LAST-TERM| 'DEFINED-IN-FILE 'TPS/TPS.RED) 
(PUT '|PS:SET-LAST-TERM| 'PROCEDURE_TYPE
     '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(PUTC '|PS:SET-LAST-TERM| 'INLINE '(LAMBDA (PS N) (|PS:PUTV| PS 1 N))) 
(PUT '|PS:DEPVAR| 'NUMBER-OF-ARGS 1) 
(PUT '|PS:DEPVAR| 'DEFINED-ON-LINE '152) 
(PUT '|PS:DEPVAR| 'DEFINED-IN-FILE 'TPS/TPS.RED) 
(PUT '|PS:DEPVAR| 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE |PS:DEPVAR| (PS)
    (COND
     ((OR (ATOM PS) (AND (NEQ (CAR PS) '|:PS:|) (GET (CAR PS) 'DNAME))) NIL)
     (T (|PS:GETV| PS 2)))) 
(DE |PS:SET-DEPVAR| (PS X) (|PS:PUTV| PS 2 X)) 
(PUT '|PS:SET-DEPVAR| 'NUMBER-OF-ARGS 2) 
(PUT '|PS:SET-DEPVAR| 'DEFINED-ON-LINE '156) 
(PUT '|PS:SET-DEPVAR| 'DEFINED-IN-FILE 'TPS/TPS.RED) 
(PUT '|PS:SET-DEPVAR| 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(PUTC '|PS:SET-DEPVAR| 'INLINE '(LAMBDA (PS X) (|PS:PUTV| PS 2 X))) 
(PUT '|PS:EXPANSION-POINT| 'NUMBER-OF-ARGS 1) 
(PUT '|PS:EXPANSION-POINT| 'DEFINED-ON-LINE '159) 
(PUT '|PS:EXPANSION-POINT| 'DEFINED-IN-FILE 'TPS/TPS.RED) 
(PUT '|PS:EXPANSION-POINT| 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE |PS:EXPANSION-POINT| (PS)
    (COND
     ((OR (ATOM PS) (AND (NEQ (CAR PS) '|:PS:|) (GET (CAR PS) 'DNAME))) NIL)
     (T (|PS:GETV| PS 3)))) 
(DE |PS:SET-EXPANSION-POINT| (PS X) (|PS:PUTV| PS 3 X)) 
(PUT '|PS:SET-EXPANSION-POINT| 'NUMBER-OF-ARGS 2) 
(PUT '|PS:SET-EXPANSION-POINT| 'DEFINED-ON-LINE '163) 
(PUT '|PS:SET-EXPANSION-POINT| 'DEFINED-IN-FILE 'TPS/TPS.RED) 
(PUT '|PS:SET-EXPANSION-POINT| 'PROCEDURE_TYPE
     '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(PUTC '|PS:SET-EXPANSION-POINT| 'INLINE '(LAMBDA (PS X) (|PS:PUTV| PS 3 X))) 
(PUT '|PS:VALUE| 'NUMBER-OF-ARGS 1) 
(PUT '|PS:VALUE| 'DEFINED-ON-LINE '166) 
(PUT '|PS:VALUE| 'DEFINED-IN-FILE 'TPS/TPS.RED) 
(PUT '|PS:VALUE| 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE |PS:VALUE| (PS)
    (COND
     ((OR (ATOM PS) (AND (NEQ (CAR PS) '|:PS:|) (GET (CAR PS) 'DNAME)))
      (COND (PS PS) (T 0)))
     (T (|PS:GETV| PS 4)))) 
(DE |PS:SET-VALUE| (PS X) (|PS:PUTV| PS 4 X)) 
(PUT '|PS:SET-VALUE| 'NUMBER-OF-ARGS 2) 
(PUT '|PS:SET-VALUE| 'DEFINED-ON-LINE '170) 
(PUT '|PS:SET-VALUE| 'DEFINED-IN-FILE 'TPS/TPS.RED) 
(PUT '|PS:SET-VALUE| 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(PUTC '|PS:SET-VALUE| 'INLINE '(LAMBDA (PS X) (|PS:PUTV| PS 4 X))) 
(DE |PS:TERMS| (PS)
    (COND
     ((OR (ATOM PS) (AND (NEQ (CAR PS) '|:PS:|) (GET (CAR PS) 'DNAME)))
      (LIST (CONS 0 (CONS PS 1))))
     (T (|PS:GETV| PS 5)))) 
(PUT '|PS:TERMS| 'NUMBER-OF-ARGS 1) 
(PUT '|PS:TERMS| 'DEFINED-ON-LINE '173) 
(PUT '|PS:TERMS| 'DEFINED-IN-FILE 'TPS/TPS.RED) 
(PUT '|PS:TERMS| 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(PUTC '|PS:TERMS| 'INLINE
      '(LAMBDA (PS)
         (COND
          ((OR (ATOM PS) (AND (NEQ (CAR PS) '|:PS:|) (GET (CAR PS) 'DNAME)))
           (LIST (CONS 0 (CONS PS 1))))
          (T (|PS:GETV| PS 5))))) 
(DE |PS:SET-TERMS| (PS X) (|PS:PUTV| PS 5 X)) 
(PUT '|PS:SET-TERMS| 'NUMBER-OF-ARGS 2) 
(PUT '|PS:SET-TERMS| 'DEFINED-ON-LINE '177) 
(PUT '|PS:SET-TERMS| 'DEFINED-IN-FILE 'TPS/TPS.RED) 
(PUT '|PS:SET-TERMS| 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(PUTC '|PS:SET-TERMS| 'INLINE '(LAMBDA (PS X) (|PS:PUTV| PS 5 X))) 
(PUT '|PS:EXPRESSION| 'NUMBER-OF-ARGS 1) 
(PUT '|PS:EXPRESSION| 'DEFINED-ON-LINE '180) 
(PUT '|PS:EXPRESSION| 'DEFINED-IN-FILE 'TPS/TPS.RED) 
(PUT '|PS:EXPRESSION| 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE |PS:EXPRESSION| (PS)
    (COND
     ((OR (ATOM PS) (AND (NEQ (CAR PS) '|:PS:|) (GET (CAR PS) 'DNAME))) PS)
     (T (|PS:GETV| PS 6)))) 
(DE |PS:SET-EXPRESSION| (PS X) (|PS:PUTV| PS 6 X)) 
(PUT '|PS:SET-EXPRESSION| 'NUMBER-OF-ARGS 2) 
(PUT '|PS:SET-EXPRESSION| 'DEFINED-ON-LINE '184) 
(PUT '|PS:SET-EXPRESSION| 'DEFINED-IN-FILE 'TPS/TPS.RED) 
(PUT '|PS:SET-EXPRESSION| 'PROCEDURE_TYPE
     '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(PUTC '|PS:SET-EXPRESSION| 'INLINE '(LAMBDA (PS X) (|PS:PUTV| PS 6 X))) 
(DE |PS:OPERATOR| (PS) (CAR (|PS:GETV| PS 6))) 
(PUT '|PS:OPERATOR| 'NUMBER-OF-ARGS 1) 
(PUT '|PS:OPERATOR| 'DEFINED-ON-LINE '187) 
(PUT '|PS:OPERATOR| 'DEFINED-IN-FILE 'TPS/TPS.RED) 
(PUT '|PS:OPERATOR| 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(PUTC '|PS:OPERATOR| 'INLINE '(LAMBDA (PS) (CAR (|PS:GETV| PS 6)))) 
(DE |PS:OPERANDS| (PS) (CDR (|PS:GETV| PS 6))) 
(PUT '|PS:OPERANDS| 'NUMBER-OF-ARGS 1) 
(PUT '|PS:OPERANDS| 'DEFINED-ON-LINE '190) 
(PUT '|PS:OPERANDS| 'DEFINED-IN-FILE 'TPS/TPS.RED) 
(PUT '|PS:OPERANDS| 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(PUTC '|PS:OPERANDS| 'INLINE '(LAMBDA (PS) (CDR (|PS:GETV| PS 6)))) 
(PUT '|PS:GET-TERM| 'NUMBER-OF-ARGS 2) 
(PUT '|PS:GET-TERM| 'DEFINED-ON-LINE '193) 
(PUT '|PS:GET-TERM| 'DEFINED-IN-FILE 'TPS/TPS.RED) 
(PUT '|PS:GET-TERM| 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE |PS:GET-TERM| (PS I)
    ((LAMBDA (PSORDER PSLAST)
       (COND ((LESSP I PSORDER) (CONS NIL 1))
             ((GREATERP I PSLAST)
              (COND ((EQUAL (|PS:EXPRESSION| PS) 'FULL) (CONS NIL 1)) (T NIL)))
             (T
              (PROG (TERM)
                (SETQ TERM
                        (ASSOC (DIFFERENCE I PSORDER)
                               (COND
                                ((OR (ATOM PS)
                                     (AND (NEQ (CAR PS) '|:PS:|)
                                          (GET (CAR PS) 'DNAME)))
                                 (LIST (CONS 0 (CONS PS 1))))
                                (T (|PS:GETV| PS 5)))))
                (RETURN (COND (TERM (CDR TERM)) (T (CONS NIL 1))))))))
     (|PS:ORDER| PS) (|PS:LAST-TERM| PS))) 
(PUT '|PS:SET-TERM| 'NUMBER-OF-ARGS 3) 
(PUT '|PS:SET-TERM| 'DEFINED-ON-LINE '205) 
(PUT '|PS:SET-TERM| 'DEFINED-IN-FILE 'TPS/TPS.RED) 
(PUT '|PS:SET-TERM| 'PROCEDURE_TYPE
     '(ARROW (TIMES GENERAL GENERAL GENERAL) GENERAL)) 
(DE |PS:SET-TERM| (PS N X)
    (PROG (PSORDER TERMS)
      (SETQ PSORDER (|PS:ORDER| PS))
      (COND
       ((LESSP N PSORDER)
        (RERROR 'TPS 3 (LIST N "less than the order of " PS)))
       ((LEQ N (|PS:LAST-TERM| PS))
        (RERROR 'TPS 4 (LIST N "less than power of last term of " PS))))
      (SETQ TERMS
              (COND
               ((OR (ATOM PS)
                    (AND (NEQ (CAR PS) '|:PS:|) (GET (CAR PS) 'DNAME)))
                (LIST (CONS 0 (CONS PS 1))))
               (T (|PS:GETV| PS 5))))
      (COND
       ((OR (ATOM X) (NEQ (CAR X) NIL))
        (COND (TERMS (NCONC TERMS (LIST (CONS (DIFFERENCE N PSORDER) X))))
              (T (|PS:PUTV| PS 5 (LIST (CONS (DIFFERENCE N PSORDER) X))))))
       ((EQUAL N PSORDER) (|PS:PUTV| PS 0 (PLUS N 1))))
      (|PS:PUTV| PS 1 N))) 
(FLAG '(PSTRUNCATE) 'OPFN) 
(PUT 'PSTRUNCATE 'NUMBER-OF-ARGS 2) 
(PUT 'PSTRUNCATE 'DEFINED-ON-LINE '228) 
(PUT 'PSTRUNCATE 'DEFINED-IN-FILE 'TPS/TPS.RED) 
(PUT 'PSTRUNCATE 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE PSTRUNCATE (PS N)
    (PROGN
     (SETQ N (IEVAL N))
     (SETQ PS (PREPSQXX (SIMP* PS)))
     (COND
      ((OR (NUMBERP PS)
           (AND (PAIRP PS) (NEQ (CAR PS) '|:PS:|) (GET (CAR PS) 'DNAME)))
       (COND
        ((GEQ N 0)
         (COND ((ATOM PS) PS) (T (APPLY1 (GET (CAR PS) 'PREPFN) PS))))
        (T 0)))
      ((AND (PAIRP PS) (EQUAL (CAR PS) '|:PS:|)) (|PREP:PS| PS N))
      (T (TYPERR PS "power series:  truncate"))))) 
(PUT 'PSEXPLIM 'SIMPFN 'SIMPPSEXPLIM) 
(SETQ |PS:EXP-LIM| 6) 
(PUT 'SIMPPSEXPLIM 'NUMBER-OF-ARGS 1) 
(PUT 'SIMPPSEXPLIM 'DEFINED-ON-LINE '245) 
(PUT 'SIMPPSEXPLIM 'DEFINED-IN-FILE 'TPS/TPS.RED) 
(PUT 'SIMPPSEXPLIM 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE SIMPPSEXPLIM (U)
    (PROG (N)
      (SETQ N 0)
      (SETQ N |PS:EXP-LIM|)
      (COND (U (SETQ |PS:EXP-LIM| (IEVAL (CARX U 'PSEXPLIM)))))
      (RETURN (COND ((EQUAL N 0) (CONS NIL 1)) (T (CONS N 1)))))) 
(PUT 'SIMPPS 'NUMBER-OF-ARGS 1) 
(PUT 'SIMPPS 'DEFINED-ON-LINE '252) 
(PUT 'SIMPPS 'DEFINED-IN-FILE 'TPS/TPS.RED) 
(PUT 'SIMPPS 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE SIMPPS (A)
    (COND ((EQUAL (LENGTH A) 3) (APPLY 'SIMPPS1 A))
          (T
           (RERROR 'TPS 5
                   "Args should be <FORM>,<depvar>, and <point>:  simpps")))) 
(PUT 'PS 'SIMPFN 'SIMPPS) 
(PUT 'SIMPPS1 'NUMBER-OF-ARGS 3) 
(PUT 'SIMPPS1 'DEFINED-ON-LINE '259) 
(PUT 'SIMPPS1 'DEFINED-IN-FILE 'TPS/TPS.RED) 
(PUT 'SIMPPS1 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL GENERAL) GENERAL)) 
(DE SIMPPS1 (FORM DEPVAR ABOUT)
    (COND
     ((EQUAL FORM NIL)
      (RERROR 'TPS 6 "Args should be <FORM>,<depvar>, and <point>: simpps"))
     ((NOT (KERNP (SIMP* DEPVAR))) (TYPERR DEPVAR "kernel:  simpps"))
     ((SMEMBER DEPVAR (SETQ ABOUT (PREPSQXX (SIMP* ABOUT))))
      (RERROR 'TPS 7 "Expansion point depends on dependent variable:  simpps"))
     (T
      (PROG (KNOWNPS |PS:LEVEL|)
        (SETQ |PS:LEVEL| 0)
        (RETURN
         (CONS
          (|PS:COMPILE| (|PS:PRESIMP| FORM) DEPVAR
           (COND ((EQUAL ABOUT 'INFINITY) '|PS:INF|) (T ABOUT)))
          1)))))) 
(PUT 'PSTERM 'SIMPFN 'SIMPPSTERM) 
(PUT 'SIMPPSTERM 'NUMBER-OF-ARGS 1) 
(PUT 'SIMPPSTERM 'DEFINED-ON-LINE '276) 
(PUT 'SIMPPSTERM 'DEFINED-IN-FILE 'TPS/TPS.RED) 
(PUT 'SIMPPSTERM 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE SIMPPSTERM (A)
    (COND ((EQUAL (LENGTH A) 2) (APPLY 'SIMPPSTERM1 A))
          (T
           (RERROR 'TPS 8
                   "Args should be of form <power series>,<term>: simppsterm")))) 
(PUT 'SIMPPSTERM1 'NUMBER-OF-ARGS 2) 
(PUT 'SIMPPSTERM1 'DEFINED-ON-LINE '282) 
(PUT 'SIMPPSTERM1 'DEFINED-IN-FILE 'TPS/TPS.RED) 
(PUT 'SIMPPSTERM1 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE SIMPPSTERM1 (P N)
    (PROGN
     (SETQ N (IEVAL N))
     (SETQ P (PREPSQXX (SIMP* P)))
     (COND
      ((OR (NUMBERP P)
           (AND (PAIRP P) (NEQ (CAR P) '|:PS:|) (GET (CAR P) 'DNAME)))
       (COND ((OR (NEQ N 0) (EQUAL P 0)) (CONS NIL 1)) (T (CONS P 1))))
      ((AND (PAIRP P) (EQUAL (CAR P) '|:PS:|))
       (PROGN (|PS:FIND-ORDER| P) (|PS:EVALUATE| P N)))
      (T (TYPERR P "power series:  simppsterm1"))))) 
(PUT 'PSORDER 'SIMPFN 'SIMPPSORDER) 
(PUT 'PSSETORDER 'SIMPFN 'SIMPPSSETORDER) 
(PUT 'SIMPPSORDER 'NUMBER-OF-ARGS 1) 
(PUT 'SIMPPSORDER 'DEFINED-ON-LINE '295) 
(PUT 'SIMPPSORDER 'DEFINED-IN-FILE 'TPS/TPS.RED) 
(PUT 'SIMPPSORDER 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE SIMPPSORDER (U)
    (PROGN
     (SETQ U (PREPSQXX (SIMP* (CARX U 'PSORDER))))
     (COND
      ((OR (NUMBERP U)
           (AND (PAIRP U) (NEQ (CAR U) '|:PS:|) (GET (CAR U) 'DNAME)))
       (COND ((EQUAL U 0) (CONS (LIST (CONS (CONS 'UNDEFINED 1) 1)) 1))
             (T (CONS NIL 1))))
      ((AND (PAIRP U) (EQUAL (CAR U) '|:PS:|))
       (CONS ((LAMBDA (U) (COND ((ZEROP U) NIL) (T U))) (|PS:FIND-ORDER| U))
             1))
      (T (TYPERR U "power series:  simppsorder"))))) 
(PUT 'SIMPPSSETORDER 'NUMBER-OF-ARGS 1) 
(PUT 'SIMPPSSETORDER 'DEFINED-ON-LINE '304) 
(PUT 'SIMPPSSETORDER 'DEFINED-IN-FILE 'TPS/TPS.RED) 
(PUT 'SIMPPSSETORDER 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE SIMPPSSETORDER (U)
    ((LAMBDA (PSORD PS)
       (COND
        ((NOT (AND (PAIRP PS) (EQUAL (CAR PS) '|:PS:|)))
         (TYPERR PS "power series: simppssetorder"))
        ((NOT (FIXP PSORD)) (TYPERR PSORD "integer: simppssetorder"))
        (T
         (PROGN
          (SETQ U (|PS:ORDER| PS))
          (|PS:PUTV| PS 0 PSORD)
          (CONS (COND ((EQUAL U 0) NIL) (T U)) 1)))))
     (PREPSQXX (SIMP* (CARX (CDR U) 'PSSETORDER))) (PREPSQXX (SIMP* (CAR U))))) 
(PUT 'PSEXPANSIONPT 'SIMPFN 'SIMPPSEXPANSIONPT) 
(PUT 'SIMPPSEXPANSIONPT 'NUMBER-OF-ARGS 1) 
(PUT 'SIMPPSEXPANSIONPT 'DEFINED-ON-LINE '316) 
(PUT 'SIMPPSEXPANSIONPT 'DEFINED-IN-FILE 'TPS/TPS.RED) 
(PUT 'SIMPPSEXPANSIONPT 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE SIMPPSEXPANSIONPT (U)
    (PROGN
     (SETQ U (PREPSQXX (SIMP* (CARX U 'PSEXPANSIONPT))))
     (COND
      ((OR (NUMBERP U)
           (AND (PAIRP U) (NEQ (CAR U) '|:PS:|) (GET (CAR U) 'DNAME)))
       (CONS (LIST (CONS (CONS 'UNDEFINED 1) 1)) 1))
      ((AND (PAIRP U) (EQUAL (CAR U) '|:PS:|))
       ((LAMBDA (ABOUT)
          (COND
           ((NEQ ABOUT '|PS:INF|)
            (COND (ABOUT (SIMP* ABOUT))
                  (T (CONS (LIST (CONS (CONS 'UNDEFINED 1) 1)) 1))))
           (T (CONS (LIST (CONS (CONS 'INFINITY 1) 1)) 1))))
        (|PS:EXPANSION-POINT| U)))
      (T (TYPERR U "power series:  simppsexpansionpt"))))) 
(PUT 'PSDEPVAR 'SIMPFN 'SIMPPSDEPVAR) 
(PUT 'SIMPPSDEPVAR 'NUMBER-OF-ARGS 1) 
(PUT 'SIMPPSDEPVAR 'DEFINED-ON-LINE '330) 
(PUT 'SIMPPSDEPVAR 'DEFINED-IN-FILE 'TPS/TPS.RED) 
(PUT 'SIMPPSDEPVAR 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE SIMPPSDEPVAR (U)
    (PROGN
     (SETQ U (PREPSQXX (SIMP* (CARX U 'PSDEPVAR))))
     (COND
      ((OR (NUMBERP U)
           (AND (PAIRP U) (NEQ (CAR U) '|:PS:|) (GET (CAR U) 'DNAME)))
       (CONS (LIST (CONS (CONS 'UNDEFINED 1) 1)) 1))
      ((AND (PAIRP U) (EQUAL (CAR U) '|:PS:|))
       (COND ((SETQ U (|PS:DEPVAR| U)) (CONS (LIST (CONS (CONS U 1) 1)) 1))
             (T (CONS (LIST (CONS (CONS 'UNDEFINED 1) 1)) 1))))
      (T (TYPERR U "power series:  simppsdepvar"))))) 
(PUT 'PSFUNCTION 'SIMPFN 'SIMPPSFUNCTION) 
(PUT 'SIMPPSFUNCTION 'NUMBER-OF-ARGS 1) 
(PUT 'SIMPPSFUNCTION 'DEFINED-ON-LINE '340) 
(PUT 'SIMPPSFUNCTION 'DEFINED-IN-FILE 'TPS/TPS.RED) 
(PUT 'SIMPPSFUNCTION 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE SIMPPSFUNCTION (U)
    (PROGN
     (SETQ U (PREPSQXX (SIMP* (CARX U 'PSFUNCTION))))
     (COND
      ((OR (NUMBERP U)
           (AND (PAIRP U) (NEQ (CAR U) '|:PS:|) (GET (CAR U) 'DNAME)))
       (CONS U 1))
      ((AND (PAIRP U) (EQUAL (CAR U) '|:PS:|)) (SIMP* (|PS:VALUE| U)))
      (T (TYPERR U "power series:  simppsfunction"))))) 
(PUT '|PS:PRESIMP| 'NUMBER-OF-ARGS 1) 
(PUT '|PS:PRESIMP| 'DEFINED-ON-LINE '347) 
(PUT '|PS:PRESIMP| 'DEFINED-IN-FILE 'TPS/TPS.RED) 
(PUT '|PS:PRESIMP| 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE |PS:PRESIMP| (FORM)
    (COND
     ((AND (PAIRP FORM) (OR (EQUAL (CAR FORM) 'EXPT) (EQUAL (CAR FORM) 'INT)))
      (LIST (CAR FORM) (PREPSORT (CADR FORM)) (PREPSORT (CADDR FORM))))
     (T (PREPSORT FORM)))) 
(PUT 'PREPSORT 'NUMBER-OF-ARGS 1) 
(PUT 'PREPSORT 'DEFINED-ON-LINE '353) 
(PUT 'PREPSORT 'DEFINED-IN-FILE 'TPS/TPS.RED) 
(PUT 'PREPSORT 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE PREPSORT (U) (COND ((GETD 'LOGSORT) (LOGSORT U)) (T (PREPSQXX (SIMP* U))))) 
(PUT '*PRE2DP 'NUMBER-OF-ARGS 1) 
(PUT '*PRE2DP 'DEFINED-ON-LINE '357) 
(PUT '*PRE2DP 'DEFINED-IN-FILE 'TPS/TPS.RED) 
(PUT '*PRE2DP 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE *PRE2DP (U)
    (PROG (X)
      (SETQ U (SIMP* U))
      (RETURN
       (COND
        ((FIXP (CDR U))
         (COND
          ((AND (EQUAL (CDR U) 1)
                ((LAMBDA (U) (OR (ATOM U) (ATOM (CAR U)))) (SETQ X (CAR U))))
           X)
          ((FIXP (CAR U)) (MKRN (CAR U) (CDR U))))))))) 
(FLAG '(|:PS:|) 'FULL) 
(PUT '|:PS:| 'SIMPFN '|SIMP:PS:|) 
(PUT '|SIMP:PS:| 'NUMBER-OF-ARGS 1) 
(PUT '|SIMP:PS:| 'DEFINED-ON-LINE '369) 
(PUT '|SIMP:PS:| 'DEFINED-IN-FILE 'TPS/TPS.RED) 
(PUT '|SIMP:PS:| 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE |SIMP:PS:| (PS) (CONS (|SIMP:PS1| PS) 1)) 
(PUT '|SIMP:PS1| 'NUMBER-OF-ARGS 1) 
(PUT '|SIMP:PS1| 'DEFINED-ON-LINE '372) 
(PUT '|SIMP:PS1| 'DEFINED-IN-FILE 'TPS/TPS.RED) 
(PUT '|SIMP:PS1| 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE |SIMP:PS1| (PS)
    (COND ((OR (ATOM PS) (NEQ (CAR PS) '|:PS:|) (IDP (CDR PS))) PS)
          ((AND (CAR (GETV (CDR PS) 7)) (NULL *RESIMP)) PS)
          (T
           (PROG (TERMS SIMPFN EX)
             (SETQ EX (|PS:EXPRESSION| PS))
             (COND
              ((AND (PAIRP EX) (EQUAL (CAR EX) 'PSGEN))
               (SETQ SIMPFN '|SIMP:PS1|))
              (T (SETQ SIMPFN 'RESIMP)))
             (SETQ TERMS
                     (COND
                      ((OR (ATOM PS)
                           (AND (NEQ (CAR PS) '|:PS:|) (GET (CAR PS) 'DNAME)))
                       (LIST (CONS 0 (CONS PS 1))))
                      (T (|PS:GETV| PS 5))))
             (|PS:PUTV| PS 5
              (PROG (TERM FORALL-RESULT FORALL-ENDPTR)
                (SETQ TERM TERMS)
                (COND ((NULL TERM) (RETURN NIL)))
                (SETQ FORALL-RESULT
                        (SETQ FORALL-ENDPTR
                                (CONS
                                 ((LAMBDA (TERM)
                                    (CONS (CAR TERM)
                                          (APPLY1 SIMPFN (CDR TERM))))
                                  (CAR TERM))
                                 NIL)))
               LOOPLABEL
                (SETQ TERM (CDR TERM))
                (COND ((NULL TERM) (RETURN FORALL-RESULT)))
                (RPLACD FORALL-ENDPTR
                        (CONS
                         ((LAMBDA (TERM)
                            (CONS (CAR TERM) (APPLY1 SIMPFN (CDR TERM))))
                          (CAR TERM))
                         NIL))
                (SETQ FORALL-ENDPTR (CDR FORALL-ENDPTR))
                (GO LOOPLABEL)))
             (COND ((OR (ATOM EX) (EQUAL (CAR EX) '|PS:SUMMATION|)) NIL)
                   (T
                    (PROGN
                     (|PS:PUTV| PS 6
                      (CONS (CAR EX) (MAPCAR (CDR EX) '|SIMP:PS1|)))
                     (|PS:PUTV| PS 4 (PREPSQXX (SIMP* (|PS:VALUE| PS)))))))
             (PUTV (CDR PS) 7 *SQVAR*)
             (RETURN PS))))) 
(PUT 'PSCHANGEVAR 'SIMPFN 'SIMPPSCHANGEVAR) 
(PUT 'SIMPPSCHANGEVAR 'NUMBER-OF-ARGS 1) 
(PUT 'SIMPPSCHANGEVAR 'DEFINED-ON-LINE '397) 
(PUT 'SIMPPSCHANGEVAR 'DEFINED-IN-FILE 'TPS/TPS.RED) 
(PUT 'SIMPPSCHANGEVAR 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE SIMPPSCHANGEVAR (U)
    ((LAMBDA (NEWVAR PS OLDVAR)
       (COND
        ((NOT (AND (PAIRP PS) (EQUAL (CAR PS) '|:PS:|)))
         (TYPERR PS "power series: simppschangevar"))
        ((NOT (KERNP NEWVAR))
         (TYPERR (PREPSQXX NEWVAR) "kernel: simppschangevar"))
        (T
         (PROGN
          (SETQ OLDVAR (|PS:DEPVAR| PS))
          (SETQ NEWVAR (PREPSQXX NEWVAR))
          (COND
           ((AND (SMEMBER NEWVAR (|PS:VALUE| PS)) (NEQ NEWVAR OLDVAR))
            (RERROR 'TPS 9 "Series depends on new variable"))
           (OLDVAR
            (PROGN
             (|PS:PUTV| PS 2 NEWVAR)
             (|PS:PUTV| PS 4 (SUBST NEWVAR OLDVAR (|PS:VALUE| PS)))
             (CONS PS 1)))
           (T (RERROR 'TPS 10 "Can't change variable of constant series")))))))
     (SIMP* (CARX (CDR U) 'PSCHANGEVAR)) (PREPSQXX (SIMP* (CAR U))) NIL)) 
(ENDMODULE) 