(cl:declaim (cl:optimize cl:debug cl:safety))
(cl:declaim (sb-ext:muffle-conditions sb-ext:compiler-note cl:style-warning))
(MODULE (LIST 'ODEPATCH)) 
(PACKAGES_TO_LOAD (LIST 'INT)) 
(GLOBAL '(ODESOLVEOLDSIMPINT)) 
((LAMBDA (S)
   (COND ((NOT (EQ S 'NOINTINT_SIMPINT)) (SETQ ODESOLVEOLDSIMPINT S))))
 (GET 'INT 'SIMPFN)) 
(PUT 'INT 'SIMPFN 'NOINTINT_SIMPINT) 
(FLUID '(*NOINT *ODESOLVE_NOINT *DF_PARTIAL)) 
(PUT 'NOINTINT_SIMPINT 'NUMBER-OF-ARGS 1) 
(PUT 'NOINTINT_SIMPINT 'DEFINED-ON-LINE '50) 
(PUT 'NOINTINT_SIMPINT 'DEFINED-IN-FILE 'ODESOLVE/ODEPATCH.RED) 
(PUT 'NOINTINT_SIMPINT 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE NOINTINT_SIMPINT (U)
    (COND
     (*NOINT
      (PROG (V VARSTACK*)
        (SETQ U (CONS 'INT U))
        (RETURN
         (COND
          ((NEQ (SETQ V (FORMLNR U)) U)
           (PROGN
            (SETQ V (SIMP (SUBST 'INT* 'INT V)))
            (CONS (REMAKESF (CAR V)) (REMAKESF (CDR V)))))
          (T (CONS (LIST (CONS (GETPOWER (FKERN U) 1) 1)) 1))))))
     ((OR (ATOM U) (NULL (CDR U))
          (AND (CDDR U) (OR (NULL (CDDDR U)) (CDDDDR U))))
      (RERROR 'INT 1 "Improper number of arguments to INT"))
     ((CDDR U) (SIMPDINT U))
     (T
      (PROG (CAR_U RESULT)
        (SETQ CAR_U (MK*SQ (SIMP* (CAR U))))
        (SETQ CAR_U (SUBST 'NOINT 'INT CAR_U))
        (SETQ U (CONS CAR_U (CONS (*A2K (CADR U)) NIL)))
        (PUT 'INT 'SIMPFN ODESOLVEOLDSIMPINT)
        (SETQ RESULT (ERRORSET* (LIST ODESOLVEOLDSIMPINT (MKQUOTE U)) T))
        (PUT 'INT 'SIMPFN 'NOINTINT_SIMPINT)
        (COND ((ERRORP RESULT) (ERROR1)))
        (RETURN (NOINT2INTSQ (CAR RESULT))))))) 
(AEVAL (OPERATOR (LIST 'NOINT))) 
(FLAG '(ODESOLVE-INT) 'OPFN) 
(PUT 'ODESOLVE-INT 'NUMBER-OF-ARGS 2) 
(PUT 'ODESOLVE-INT 'DEFINED-ON-LINE '86) 
(PUT 'ODESOLVE-INT 'DEFINED-IN-FILE 'ODESOLVE/ODEPATCH.RED) 
(PUT 'ODESOLVE-INT 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE ODESOLVE-INT (Y X)
    (COND (*ODESOLVE_NOINT (FORMLNR (LIST 'NOINT Y X)))
          (T (MK*SQ (NOINTINT_SIMPINT (LIST Y X)))))) 
(PUT 'NOINT2INTSQ 'NUMBER-OF-ARGS 1) 
(PUT 'NOINT2INTSQ 'DEFINED-ON-LINE '91) 
(PUT 'NOINT2INTSQ 'DEFINED-IN-FILE 'ODESOLVE/ODEPATCH.RED) 
(PUT 'NOINT2INTSQ 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE NOINT2INTSQ (U) (CONS (NOINT2INTF (CAR U)) (NOINT2INTF (CDR U)))) 
(PUT 'NOINT2INTF 'NUMBER-OF-ARGS 1) 
(PUT 'NOINT2INTF 'DEFINED-ON-LINE '94) 
(PUT 'NOINT2INTF 'DEFINED-IN-FILE 'ODESOLVE/ODEPATCH.RED) 
(PUT 'NOINT2INTF 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE NOINT2INTF (U)
    (COND ((OR (ATOM U) (ATOM (CAR U))) U)
          (T
           (PROG (K C R P T1)
             (SETQ K (NOINT2INTK (CAAAR U)))
             (SETQ C (NOINT2INTF (CDAR U)))
             (SETQ R (NOINT2INTF (CDR U)))
             (COND ((EQ K (CAAAR U)) (SETQ P (CAAR U)))
                   (T (SETQ P (CONS K (CDAAR U)))))
             (COND ((AND (EQ P (CAAR U)) (EQ C (CDAR U))) (SETQ T1 (CAR U)))
                   (T (SETQ T1 (CONS P C))))
             (COND ((AND (EQ T1 (CAR U)) (EQ R (CDR U))) (RETURN U))
                   (T (RETURN (CONS T1 R)))))))) 
(PUT 'NOINT2INTK 'NUMBER-OF-ARGS 1) 
(PUT 'NOINT2INTK 'DEFINED-ON-LINE '109) 
(PUT 'NOINT2INTK 'DEFINED-IN-FILE 'ODESOLVE/ODEPATCH.RED) 
(PUT 'NOINT2INTK 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE NOINT2INTK (K)
    (COND ((NOT (EQCAR K 'NOINT)) K)
          (T
           (FKERN
            (CONS 'INT
                  (PROG (A FORALL-RESULT FORALL-ENDPTR)
                    (SETQ A (CDR K))
                    (COND ((NULL A) (RETURN NIL)))
                    (SETQ FORALL-RESULT
                            (SETQ FORALL-ENDPTR
                                    (CONS ((LAMBDA (A) (NOINT2INT A)) (CAR A))
                                          NIL)))
                   LOOPLABEL
                    (SETQ A (CDR A))
                    (COND ((NULL A) (RETURN FORALL-RESULT)))
                    (RPLACD FORALL-ENDPTR
                            (CONS ((LAMBDA (A) (NOINT2INT A)) (CAR A)) NIL))
                    (SETQ FORALL-ENDPTR (CDR FORALL-ENDPTR))
                    (GO LOOPLABEL))))))) 
(PUT 'NOINT2INT 'NUMBER-OF-ARGS 1) 
(PUT 'NOINT2INT 'DEFINED-ON-LINE '113) 
(PUT 'NOINT2INT 'DEFINED-IN-FILE 'ODESOLVE/ODEPATCH.RED) 
(PUT 'NOINT2INT 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE NOINT2INT (U)
    (COND ((ATOM U) U)
          ((EQUAL (CAR U) 'NOINT)
           (CONS 'INT
                 (PROG (A FORALL-RESULT FORALL-ENDPTR)
                   (SETQ A (CDR U))
                   (COND ((NULL A) (RETURN NIL)))
                   (SETQ FORALL-RESULT
                           (SETQ FORALL-ENDPTR
                                   (CONS ((LAMBDA (A) (NOINT2INT A)) (CAR A))
                                         NIL)))
                  LOOPLABEL
                   (SETQ A (CDR A))
                   (COND ((NULL A) (RETURN FORALL-RESULT)))
                   (RPLACD FORALL-ENDPTR
                           (CONS ((LAMBDA (A) (NOINT2INT A)) (CAR A)) NIL))
                   (SETQ FORALL-ENDPTR (CDR FORALL-ENDPTR))
                   (GO LOOPLABEL))))
          ((EQUAL (CAR U) '*SQ) (MK*SQ (NOINT2INTSQ (CADR Y))))
          (T
           (PROG (SA SD)
             (SETQ SA (NOINT2INT (CAR U)))
             (SETQ SD (NOINT2INT (CDR U)))
             (COND ((AND (EQ SA (CAR U)) (EQ SD (CDR U))) (RETURN U))
                   (T (RETURN (CONS SA SD)))))))) 
(SWITCH (LIST (LIST 'EQUAL 'NOINTINT 'ON))) 
(PUT 'NOINTINT 'SIMPFG
     '((NIL (PUT 'INT 'SIMPFN 'SIMPINT) (RMSUBS))
       (T (PUT 'INT 'SIMPFN 'NOINTINT_SIMPINT)))) 
(ON1 'ALLOWDFINT) 
(ENDMODULE) 