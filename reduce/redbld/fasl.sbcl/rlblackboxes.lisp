(cl:declaim (cl:optimize cl:debug cl:safety))
(cl:declaim (sb-ext:muffle-conditions sb-ext:compiler-note cl:style-warning))
(MODULE (LIST 'RLBLACKBOXES)) 
(REVISION 'RLBLACKBOXES
          "$Id: rlblackboxes.red 6030 2021-09-16 14:01:45Z thomas-sturm $") 
(COPYRIGHT 'RLBLACKBOXES "(c) 2017 T. Sturm") 
(PUT 'RL_A2CDL 'DOCAL
     '((SYNOPSIS . "rl_a2cdl/1")
       (DESCRIPTION
        . "atomic formula multiplicity list to case distinction list"))) 
(PUT 'RL_A2CDL 'RL_SUPPORT 'RL_BLACKBOX) 
(FLUID '(RL_A2CDL*)) 
(SETQ RL_BBL* (CONS 'RL_A2CDL* RL_BBL*)) 
(PUT 'RL_A2CDL 'NUMBER-OF-ARGS 1) 
(DE RL_A2CDL (A1) (APPLY RL_A2CDL* (LIST A1))) 
(SETQ RL_BLACKBOXES* (CONS 'RL_A2CDL RL_BLACKBOXES*)) 
(PUT 'RL_BSATP 'DOCAL
     '((SYNOPSIS . "rl_bsatp/2") (DESCRIPTION . "bound satisfiable predicate"))) 
(PUT 'RL_BSATP 'RL_SUPPORT 'RL_BLACKBOX) 
(FLUID '(RL_BSATP*)) 
(SETQ RL_BBL* (CONS 'RL_BSATP* RL_BBL*)) 
(PUT 'RL_BSATP 'NUMBER-OF-ARGS 2) 
(DE RL_BSATP (A1 A2) (APPLY RL_BSATP* (LIST A1 A2))) 
(SETQ RL_BLACKBOXES* (CONS 'RL_BSATP RL_BLACKBOXES*)) 
(PUT 'RL_BESTGAUSSP 'DOCAL
     '((SYNOPSIS . "rl_bestgaussp/1")
       (DESCRIPTION . "best Gauss solution predicate"))) 
(PUT 'RL_BESTGAUSSP 'RL_SUPPORT 'RL_BLACKBOX) 
(FLUID '(RL_BESTGAUSSP*)) 
(SETQ RL_BBL* (CONS 'RL_BESTGAUSSP* RL_BBL*)) 
(PUT 'RL_BESTGAUSSP 'NUMBER-OF-ARGS 1) 
(DE RL_BESTGAUSSP (A1) (APPLY RL_BESTGAUSSP* (LIST A1))) 
(SETQ RL_BLACKBOXES* (CONS 'RL_BESTGAUSSP RL_BLACKBOXES*)) 
(PUT 'RL_BETTERGAUSSP 'DOCAL
     '((SYNOPSIS . "rl_bettergaussp/2")
       (DESCRIPTION . "better Gauss solution predicate"))) 
(PUT 'RL_BETTERGAUSSP 'RL_SUPPORT 'RL_BLACKBOX) 
(FLUID '(RL_BETTERGAUSSP*)) 
(SETQ RL_BBL* (CONS 'RL_BETTERGAUSSP* RL_BBL*)) 
(PUT 'RL_BETTERGAUSSP 'NUMBER-OF-ARGS 2) 
(DE RL_BETTERGAUSSP (A1 A2) (APPLY RL_BETTERGAUSSP* (LIST A1 A2))) 
(SETQ RL_BLACKBOXES* (CONS 'RL_BETTERGAUSSP RL_BLACKBOXES*)) 
(PUT 'RL_BNFSIMPL 'DOCAL
     '((SYNOPSIS . "rl_bnfsimpl/2")
       (DESCRIPTION . "Boolean normal form construction simplification step"))) 
(PUT 'RL_BNFSIMPL 'RL_SUPPORT 'RL_BLACKBOX) 
(FLUID '(RL_BNFSIMPL*)) 
(SETQ RL_BBL* (CONS 'RL_BNFSIMPL* RL_BBL*)) 
(PUT 'RL_BNFSIMPL 'NUMBER-OF-ARGS 2) 
(DE RL_BNFSIMPL (A1 A2) (APPLY RL_BNFSIMPL* (LIST A1 A2))) 
(SETQ RL_BLACKBOXES* (CONS 'RL_BNFSIMPL RL_BLACKBOXES*)) 
(PUT 'RL_BQAPPLY2ATS1 'DOCAL
     '((SYNOPSIS . "rl_bqapply2ats1/3")
       (DESCRIPTION . "bounded qantifier in cl_apply2ats1"))) 
(PUT 'RL_BQAPPLY2ATS1 'RL_SUPPORT 'RL_BLACKBOX) 
(FLUID '(RL_BQAPPLY2ATS1*)) 
(SETQ RL_BBL* (CONS 'RL_BQAPPLY2ATS1* RL_BBL*)) 
(PUT 'RL_BQAPPLY2ATS1 'NUMBER-OF-ARGS 3) 
(DE RL_BQAPPLY2ATS1 (A1 A2 A3) (APPLY RL_BQAPPLY2ATS1* (LIST A1 A2 A3))) 
(SETQ RL_BLACKBOXES* (CONS 'RL_BQAPPLY2ATS1 RL_BLACKBOXES*)) 
(PUT 'RL_BQATNUM 'DOCAL
     '((SYNOPSIS . "rl_bqatnum/1")
       (DESCRIPTION . "bounded qantifier in cl_atnum"))) 
(PUT 'RL_BQATNUM 'RL_SUPPORT 'RL_BLACKBOX) 
(FLUID '(RL_BQATNUM*)) 
(SETQ RL_BBL* (CONS 'RL_BQATNUM* RL_BBL*)) 
(PUT 'RL_BQATNUM 'NUMBER-OF-ARGS 1) 
(DE RL_BQATNUM (A1) (APPLY RL_BQATNUM* (LIST A1))) 
(SETQ RL_BLACKBOXES* (CONS 'RL_BQATNUM RL_BLACKBOXES*)) 
(PUT 'RL_BQQNUM 'DOCAL
     '((SYNOPSIS . "rl_bqqnum/1")
       (DESCRIPTION . "bounded qantifier in cl_qnum"))) 
(PUT 'RL_BQQNUM 'RL_SUPPORT 'RL_BLACKBOX) 
(FLUID '(RL_BQQNUM*)) 
(SETQ RL_BBL* (CONS 'RL_BQQNUM* RL_BBL*)) 
(PUT 'RL_BQQNUM 'NUMBER-OF-ARGS 1) 
(DE RL_BQQNUM (A1) (APPLY RL_BQQNUM* (LIST A1))) 
(SETQ RL_BLACKBOXES* (CONS 'RL_BQQNUM RL_BLACKBOXES*)) 
(PUT 'RL_BQDEPTH 'DOCAL
     '((SYNOPSIS . "rl_bqdepth/1")
       (DESCRIPTION . "bounded qantifier in cl_depth"))) 
(PUT 'RL_BQDEPTH 'RL_SUPPORT 'RL_BLACKBOX) 
(FLUID '(RL_BQDEPTH*)) 
(SETQ RL_BBL* (CONS 'RL_BQDEPTH* RL_BBL*)) 
(PUT 'RL_BQDEPTH 'NUMBER-OF-ARGS 1) 
(DE RL_BQDEPTH (A1) (APPLY RL_BQDEPTH* (LIST A1))) 
(SETQ RL_BLACKBOXES* (CONS 'RL_BQDEPTH RL_BLACKBOXES*)) 
(PUT 'RL_BQF2ML 'DOCAL
     '((SYNOPSIS . "rl_bqf2ml/2")
       (DESCRIPTION . "bounded qantifier in cl_f2ml"))) 
(PUT 'RL_BQF2ML 'RL_SUPPORT 'RL_BLACKBOX) 
(FLUID '(RL_BQF2ML*)) 
(SETQ RL_BBL* (CONS 'RL_BQF2ML* RL_BBL*)) 
(PUT 'RL_BQF2ML 'NUMBER-OF-ARGS 2) 
(DE RL_BQF2ML (A1 A2) (APPLY RL_BQF2ML* (LIST A1 A2))) 
(SETQ RL_BLACKBOXES* (CONS 'RL_BQF2ML RL_BLACKBOXES*)) 
(PUT 'RL_BQSUBFOF1 'DOCAL
     '((SYNOPSIS . "rl_bqsubfof1/4")
       (DESCRIPTION . "bounded qantifier in cl_subfof1"))) 
(PUT 'RL_BQSUBFOF1 'RL_SUPPORT 'RL_BLACKBOX) 
(FLUID '(RL_BQSUBFOF1*)) 
(SETQ RL_BBL* (CONS 'RL_BQSUBFOF1* RL_BBL*)) 
(PUT 'RL_BQSUBFOF1 'NUMBER-OF-ARGS 4) 
(DE RL_BQSUBFOF1 (A1 A2 A3 A4) (APPLY RL_BQSUBFOF1* (LIST A1 A2 A3 A4))) 
(SETQ RL_BLACKBOXES* (CONS 'RL_BQSUBFOF1 RL_BLACKBOXES*)) 
(PUT 'RL_BQREPLACE1 'DOCAL
     '((SYNOPSIS . "rl_bqreplace1/2")
       (DESCRIPTION . "bounded qantifier in cl_replace1"))) 
(PUT 'RL_BQREPLACE1 'RL_SUPPORT 'RL_BLACKBOX) 
(FLUID '(RL_BQREPLACE1*)) 
(SETQ RL_BBL* (CONS 'RL_BQREPLACE1* RL_BBL*)) 
(PUT 'RL_BQREPLACE1 'NUMBER-OF-ARGS 2) 
(DE RL_BQREPLACE1 (A1 A2) (APPLY RL_BQREPLACE1* (LIST A1 A2))) 
(SETQ RL_BLACKBOXES* (CONS 'RL_BQREPLACE1 RL_BLACKBOXES*)) 
(PUT 'RL_BQNNF1 'DOCAL
     '((SYNOPSIS . "rl_bqnnf1/2")
       (DESCRIPTION . "bounded qantifier in cl_nnf1"))) 
(PUT 'RL_BQNNF1 'RL_SUPPORT 'RL_BLACKBOX) 
(FLUID '(RL_BQNNF1*)) 
(SETQ RL_BBL* (CONS 'RL_BQNNF1* RL_BBL*)) 
(PUT 'RL_BQNNF1 'NUMBER-OF-ARGS 2) 
(DE RL_BQNNF1 (A1 A2) (APPLY RL_BQNNF1* (LIST A1 A2))) 
(SETQ RL_BLACKBOXES* (CONS 'RL_BQNNF1 RL_BLACKBOXES*)) 
(PUT 'RL_BQRENAME-VARS1 'DOCAL
     '((SYNOPSIS . "rl_bqrename-vars1/2")
       (DESCRIPTION . "bounded qantifier in cl_rename!-vars1"))) 
(PUT 'RL_BQRENAME-VARS1 'RL_SUPPORT 'RL_BLACKBOX) 
(FLUID '(RL_BQRENAME-VARS1*)) 
(SETQ RL_BBL* (CONS 'RL_BQRENAME-VARS1* RL_BBL*)) 
(PUT 'RL_BQRENAME-VARS1 'NUMBER-OF-ARGS 2) 
(DE RL_BQRENAME-VARS1 (A1 A2) (APPLY RL_BQRENAME-VARS1* (LIST A1 A2))) 
(SETQ RL_BLACKBOXES* (CONS 'RL_BQRENAME-VARS1 RL_BLACKBOXES*)) 
(PUT 'RL_BQVARL2 'DOCAL
     '((SYNOPSIS . "rl_bqvarl2/4")
       (DESCRIPTION . "bounded qantifier in cl_varl2"))) 
(PUT 'RL_BQVARL2 'RL_SUPPORT 'RL_BLACKBOX) 
(FLUID '(RL_BQVARL2*)) 
(SETQ RL_BBL* (CONS 'RL_BQVARL2* RL_BBL*)) 
(PUT 'RL_BQVARL2 'NUMBER-OF-ARGS 4) 
(DE RL_BQVARL2 (A1 A2 A3 A4) (APPLY RL_BQVARL2* (LIST A1 A2 A3 A4))) 
(SETQ RL_BLACKBOXES* (CONS 'RL_BQVARL2 RL_BLACKBOXES*)) 
(PUT 'RL_BQQVARL1 'DOCAL
     '((SYNOPSIS . "rl_bqqvarl1/1")
       (DESCRIPTION . "bounded qantifier in cl_qvarl1"))) 
(PUT 'RL_BQQVARL1 'RL_SUPPORT 'RL_BLACKBOX) 
(FLUID '(RL_BQQVARL1*)) 
(SETQ RL_BBL* (CONS 'RL_BQQVARL1* RL_BBL*)) 
(PUT 'RL_BQQVARL1 'NUMBER-OF-ARGS 1) 
(DE RL_BQQVARL1 (A1) (APPLY RL_BQQVARL1* (LIST A1))) 
(SETQ RL_BLACKBOXES* (CONS 'RL_BQQVARL1 RL_BLACKBOXES*)) 
(PUT 'RL_BQORDP 'DOCAL
     '((SYNOPSIS . "rl_bqordp/2")
       (DESCRIPTION . "bounded qantifier in cl_ordp"))) 
(PUT 'RL_BQORDP 'RL_SUPPORT 'RL_BLACKBOX) 
(FLUID '(RL_BQORDP*)) 
(SETQ RL_BBL* (CONS 'RL_BQORDP* RL_BBL*)) 
(PUT 'RL_BQORDP 'NUMBER-OF-ARGS 2) 
(DE RL_BQORDP (A1 A2) (APPLY RL_BQORDP* (LIST A1 A2))) 
(SETQ RL_BLACKBOXES* (CONS 'RL_BQORDP RL_BLACKBOXES*)) 
(PUT 'RL_DFGPRINTAT 'DOCAL
     '((SYNOPSIS . "rl_dfgprintat/1")
       (DESCRIPTION . "DFG format print atomic formula"))) 
(PUT 'RL_DFGPRINTAT 'RL_SUPPORT 'RL_BLACKBOX) 
(FLUID '(RL_DFGPRINTAT*)) 
(SETQ RL_BBL* (CONS 'RL_DFGPRINTAT* RL_BBL*)) 
(PUT 'RL_DFGPRINTAT 'NUMBER-OF-ARGS 1) 
(DE RL_DFGPRINTAT (A1) (APPLY RL_DFGPRINTAT* (LIST A1))) 
(SETQ RL_BLACKBOXES* (CONS 'RL_DFGPRINTAT RL_BLACKBOXES*)) 
(PUT 'RL_DFGPRINTV 'DOCAL
     '((SYNOPSIS . "rl_dfgprintv/1")
       (DESCRIPTION . "DFG format print variable"))) 
(PUT 'RL_DFGPRINTV 'RL_SUPPORT 'RL_BLACKBOX) 
(FLUID '(RL_DFGPRINTV*)) 
(SETQ RL_BBL* (CONS 'RL_DFGPRINTV* RL_BBL*)) 
(PUT 'RL_DFGPRINTV 'NUMBER-OF-ARGS 1) 
(DE RL_DFGPRINTV (A1) (APPLY RL_DFGPRINTV* (LIST A1))) 
(SETQ RL_BLACKBOXES* (CONS 'RL_DFGPRINTV RL_BLACKBOXES*)) 
(PUT 'RL_EQNRHSKERNELS 'DOCAL
     '((SYNOPSIS . "rl_eqnrhskernels/1")
       (DESCRIPTION . "list of kernels of rational function in LP form"))) 
(PUT 'RL_EQNRHSKERNELS 'RL_SUPPORT 'RL_BLACKBOX) 
(FLUID '(RL_EQNRHSKERNELS*)) 
(SETQ RL_BBL* (CONS 'RL_EQNRHSKERNELS* RL_BBL*)) 
(PUT 'RL_EQNRHSKERNELS 'NUMBER-OF-ARGS 1) 
(DE RL_EQNRHSKERNELS (A1) (APPLY RL_EQNRHSKERNELS* (LIST A1))) 
(SETQ RL_BLACKBOXES* (CONS 'RL_EQNRHSKERNELS RL_BLACKBOXES*)) 
(PUT 'RL_ESETUNION 'DOCAL
     '((SYNOPSIS . "rl_esetunion/2") (DESCRIPTION . "elimination set union"))) 
(PUT 'RL_ESETUNION 'RL_SUPPORT 'RL_BLACKBOX) 
(FLUID '(RL_ESETUNION*)) 
(SETQ RL_BBL* (CONS 'RL_ESETUNION* RL_BBL*)) 
(PUT 'RL_ESETUNION 'NUMBER-OF-ARGS 2) 
(DE RL_ESETUNION (A1 A2) (APPLY RL_ESETUNION* (LIST A1 A2))) 
(SETQ RL_BLACKBOXES* (CONS 'RL_ESETUNION RL_BLACKBOXES*)) 
(PUT 'RL_FBQE 'DOCAL
     '((SYNOPSIS . "rl_fbqe/2")
       (DESCRIPTION . "fallback quantifier elimination"))) 
(PUT 'RL_FBQE 'RL_SUPPORT 'RL_BLACKBOX) 
(FLUID '(RL_FBQE*)) 
(SETQ RL_BBL* (CONS 'RL_FBQE* RL_BBL*)) 
(PUT 'RL_FBQE 'NUMBER-OF-ARGS 2) 
(DE RL_FBQE (A1 A2) (APPLY RL_FBQE* (LIST A1 A2))) 
(SETQ RL_BLACKBOXES* (CONS 'RL_FBQE RL_BLACKBOXES*)) 
(PUT 'RL_FCTRAT 'DOCAL
     '((SYNOPSIS . "rl_fctrat/1")
       (DESCRIPTION . "factorize terms of atomic formula"))) 
(PUT 'RL_FCTRAT 'RL_SUPPORT 'RL_BLACKBOX) 
(FLUID '(RL_FCTRAT*)) 
(SETQ RL_BBL* (CONS 'RL_FCTRAT* RL_BBL*)) 
(PUT 'RL_FCTRAT 'NUMBER-OF-ARGS 1) 
(DE RL_FCTRAT (A1) (APPLY RL_FCTRAT* (LIST A1))) 
(SETQ RL_BLACKBOXES* (CONS 'RL_FCTRAT RL_BLACKBOXES*)) 
(PUT 'RL_MKEQUATION 'DOCAL
     '((SYNOPSIS . "rl_mkequation/2") (DESCRIPTION . "make equation"))) 
(PUT 'RL_MKEQUATION 'RL_SUPPORT 'RL_BLACKBOX) 
(FLUID '(RL_MKEQUATION*)) 
(SETQ RL_BBL* (CONS 'RL_MKEQUATION* RL_BBL*)) 
(PUT 'RL_MKEQUATION 'NUMBER-OF-ARGS 2) 
(DE RL_MKEQUATION (A1 A2) (APPLY RL_MKEQUATION* (LIST A1 A2))) 
(SETQ RL_BLACKBOXES* (CONS 'RL_MKEQUATION RL_BLACKBOXES*)) 
(PUT 'RL_QEFSOLSET 'DOCAL
     '((SYNOPSIS . "rl_qefsolset/5")
       (DESCRIPTION . "quantifier elimination finite solution set"))) 
(PUT 'RL_QEFSOLSET 'RL_SUPPORT 'RL_BLACKBOX) 
(FLUID '(RL_QEFSOLSET*)) 
(SETQ RL_BBL* (CONS 'RL_QEFSOLSET* RL_BBL*)) 
(PUT 'RL_QEFSOLSET 'NUMBER-OF-ARGS 5) 
(DE RL_QEFSOLSET (A1 A2 A3 A4 A5) (APPLY RL_QEFSOLSET* (LIST A1 A2 A3 A4 A5))) 
(SETQ RL_BLACKBOXES* (CONS 'RL_QEFSOLSET RL_BLACKBOXES*)) 
(PUT 'RL_GETINEQ 'DOCAL
     '((SYNOPSIS . "rl_getineq/2")
       (DESCRIPTION
        . "list of contained inequalities not containing certain variables"))) 
(PUT 'RL_GETINEQ 'RL_SUPPORT 'RL_BLACKBOX) 
(FLUID '(RL_GETINEQ*)) 
(SETQ RL_BBL* (CONS 'RL_GETINEQ* RL_BBL*)) 
(PUT 'RL_GETINEQ 'NUMBER-OF-ARGS 2) 
(DE RL_GETINEQ (A1 A2) (APPLY RL_GETINEQ* (LIST A1 A2))) 
(SETQ RL_BLACKBOXES* (CONS 'RL_GETINEQ RL_BLACKBOXES*)) 
(PUT 'RL_NEGATEAT 'DOCAL
     '((SYNOPSIS . "rl_negateat/1")
       (DESCRIPTION . "implicit logical negation of atomic formula"))) 
(PUT 'RL_NEGATEAT 'RL_SUPPORT 'RL_BLACKBOX) 
(FLUID '(RL_NEGATEAT*)) 
(SETQ RL_BBL* (CONS 'RL_NEGATEAT* RL_BBL*)) 
(PUT 'RL_NEGATEAT 'NUMBER-OF-ARGS 1) 
(DE RL_NEGATEAT (A1) (APPLY RL_NEGATEAT* (LIST A1))) 
(SETQ RL_BLACKBOXES* (CONS 'RL_NEGATEAT RL_BLACKBOXES*)) 
(PUT 'RL_RXFFN 'DOCAL
     '((SYNOPSIS . "rl_rxffn/1")
       (DESCRIPTION . "resolve extension function tranformation function"))) 
(PUT 'RL_RXFFN 'RL_SUPPORT 'RL_BLACKBOX) 
(FLUID '(RL_RXFFN*)) 
(SETQ RL_BBL* (CONS 'RL_RXFFN* RL_BBL*)) 
(PUT 'RL_RXFFN 'NUMBER-OF-ARGS 1) 
(DE RL_RXFFN (A1) (APPLY RL_RXFFN* (LIST A1))) 
(SETQ RL_BLACKBOXES* (CONS 'RL_RXFFN RL_BLACKBOXES*)) 
(PUT 'RL_VARLAT 'DOCAL
     '((SYNOPSIS . "rl_varlat/1")
       (DESCRIPTION . "list of variables contained in atomic formula"))) 
(PUT 'RL_VARLAT 'RL_SUPPORT 'RL_BLACKBOX) 
(FLUID '(RL_VARLAT*)) 
(SETQ RL_BBL* (CONS 'RL_VARLAT* RL_BBL*)) 
(PUT 'RL_VARLAT 'NUMBER-OF-ARGS 1) 
(DE RL_VARLAT (A1) (APPLY RL_VARLAT* (LIST A1))) 
(SETQ RL_BLACKBOXES* (CONS 'RL_VARLAT RL_BLACKBOXES*)) 
(PUT 'RL_MULTSUREP 'DOCAL
     '((SYNOPSIS . "rl_multsurep/2")
       (DESCRIPTION . "multiplicative sure predicate"))) 
(PUT 'RL_MULTSUREP 'RL_SUPPORT 'RL_BLACKBOX) 
(FLUID '(RL_MULTSUREP*)) 
(SETQ RL_BBL* (CONS 'RL_MULTSUREP* RL_BBL*)) 
(PUT 'RL_MULTSUREP 'NUMBER-OF-ARGS 2) 
(DE RL_MULTSUREP (A1 A2) (APPLY RL_MULTSUREP* (LIST A1 A2))) 
(SETQ RL_BLACKBOXES* (CONS 'RL_MULTSUREP RL_BLACKBOXES*)) 
(PUT 'RL_QSCSAAT 'DOCAL
     '((SYNOPSIS . "rl_qscsaat/1")
       (DESCRIPTION . "quine simplification compute satisfying assignment"))) 
(PUT 'RL_QSCSAAT 'RL_SUPPORT 'RL_BLACKBOX) 
(FLUID '(RL_QSCSAAT*)) 
(SETQ RL_BBL* (CONS 'RL_QSCSAAT* RL_BBL*)) 
(PUT 'RL_QSCSAAT 'NUMBER-OF-ARGS 1) 
(DE RL_QSCSAAT (A1) (APPLY RL_QSCSAAT* (LIST A1))) 
(SETQ RL_BLACKBOXES* (CONS 'RL_QSCSAAT RL_BLACKBOXES*)) 
(PUT 'RL_QSCONSENS 'DOCAL
     '((SYNOPSIS . "rl_qsconsens/3")
       (DESCRIPTION . "quine simplification compute consensus"))) 
(PUT 'RL_QSCONSENS 'RL_SUPPORT 'RL_BLACKBOX) 
(FLUID '(RL_QSCONSENS*)) 
(SETQ RL_BBL* (CONS 'RL_QSCONSENS* RL_BBL*)) 
(PUT 'RL_QSCONSENS 'NUMBER-OF-ARGS 3) 
(DE RL_QSCONSENS (A1 A2 A3) (APPLY RL_QSCONSENS* (LIST A1 A2 A3))) 
(SETQ RL_BLACKBOXES* (CONS 'RL_QSCONSENS RL_BLACKBOXES*)) 
(PUT 'RL_QSIMPLTESTCCL 'DOCAL
     '((SYNOPSIS . "rl_qsimpltestccl/3")
       (DESCRIPTION
        . "quine simplification implication test clause against clause list"))) 
(PUT 'RL_QSIMPLTESTCCL 'RL_SUPPORT 'RL_BLACKBOX) 
(FLUID '(RL_QSIMPLTESTCCL*)) 
(SETQ RL_BBL* (CONS 'RL_QSIMPLTESTCCL* RL_BBL*)) 
(PUT 'RL_QSIMPLTESTCCL 'NUMBER-OF-ARGS 3) 
(DE RL_QSIMPLTESTCCL (A1 A2 A3) (APPLY RL_QSIMPLTESTCCL* (LIST A1 A2 A3))) 
(SETQ RL_BLACKBOXES* (CONS 'RL_QSIMPLTESTCCL RL_BLACKBOXES*)) 
(PUT 'RL_QSSIADD 'DOCAL
     '((SYNOPSIS . "rl_qssiadd/4")
       (DESCRIPTION . "quine simplification simplify additively"))) 
(PUT 'RL_QSSIADD 'RL_SUPPORT 'RL_BLACKBOX) 
(FLUID '(RL_QSSIADD*)) 
(SETQ RL_BBL* (CONS 'RL_QSSIADD* RL_BBL*)) 
(PUT 'RL_QSSIADD 'NUMBER-OF-ARGS 4) 
(DE RL_QSSIADD (A1 A2 A3 A4) (APPLY RL_QSSIADD* (LIST A1 A2 A3 A4))) 
(SETQ RL_BLACKBOXES* (CONS 'RL_QSSIADD RL_BLACKBOXES*)) 
(PUT 'RL_QSSIMPL 'DOCAL
     '((SYNOPSIS . "rl_qssimpl/3")
       (DESCRIPTION . "quine simplification simplify"))) 
(PUT 'RL_QSSIMPL 'RL_SUPPORT 'RL_BLACKBOX) 
(FLUID '(RL_QSSIMPL*)) 
(SETQ RL_BBL* (CONS 'RL_QSSIMPL* RL_BBL*)) 
(PUT 'RL_QSSIMPL 'NUMBER-OF-ARGS 3) 
(DE RL_QSSIMPL (A1 A2 A3) (APPLY RL_QSSIMPL* (LIST A1 A2 A3))) 
(SETQ RL_BLACKBOXES* (CONS 'RL_QSSIMPL RL_BLACKBOXES*)) 
(PUT 'RL_QSSUBAT 'DOCAL '((SYNOPSIS . "rl_qssubat/2") (DESCRIPTION . ""))) 
(PUT 'RL_QSSUBAT 'RL_SUPPORT 'RL_BLACKBOX) 
(FLUID '(RL_QSSUBAT*)) 
(SETQ RL_BBL* (CONS 'RL_QSSUBAT* RL_BBL*)) 
(PUT 'RL_QSSUBAT 'NUMBER-OF-ARGS 2) 
(DE RL_QSSUBAT (A1 A2) (APPLY RL_QSSUBAT* (LIST A1 A2))) 
(SETQ RL_BLACKBOXES* (CONS 'RL_QSSUBAT RL_BLACKBOXES*)) 
(PUT 'RL_QSSUBSUMEP 'DOCAL
     '((SYNOPSIS . "rl_qssubsumep/3") (DESCRIPTION . "subsumption predicate"))) 
(PUT 'RL_QSSUBSUMEP 'RL_SUPPORT 'RL_BLACKBOX) 
(FLUID '(RL_QSSUBSUMEP*)) 
(SETQ RL_BBL* (CONS 'RL_QSSUBSUMEP* RL_BBL*)) 
(PUT 'RL_QSSUBSUMEP 'NUMBER-OF-ARGS 3) 
(DE RL_QSSUBSUMEP (A1 A2 A3) (APPLY RL_QSSUBSUMEP* (LIST A1 A2 A3))) 
(SETQ RL_BLACKBOXES* (CONS 'RL_QSSUBSUMEP RL_BLACKBOXES*)) 
(PUT 'RL_QSSUSUAT 'DOCAL '((SYNOPSIS . "rl_qssusuat/3") (DESCRIPTION . ""))) 
(PUT 'RL_QSSUSUAT 'RL_SUPPORT 'RL_BLACKBOX) 
(FLUID '(RL_QSSUSUAT*)) 
(SETQ RL_BBL* (CONS 'RL_QSSUSUAT* RL_BBL*)) 
(PUT 'RL_QSSUSUAT 'NUMBER-OF-ARGS 3) 
(DE RL_QSSUSUAT (A1 A2 A3) (APPLY RL_QSSUSUAT* (LIST A1 A2 A3))) 
(SETQ RL_BLACKBOXES* (CONS 'RL_QSSUSUAT RL_BLACKBOXES*)) 
(PUT 'RL_QSTAUTP 'DOCAL
     '((SYNOPSIS . "rl_qstautp/1") (DESCRIPTION . "tautology predicate"))) 
(PUT 'RL_QSTAUTP 'RL_SUPPORT 'RL_BLACKBOX) 
(FLUID '(RL_QSTAUTP*)) 
(SETQ RL_BBL* (CONS 'RL_QSTAUTP* RL_BBL*)) 
(PUT 'RL_QSTAUTP 'NUMBER-OF-ARGS 1) 
(DE RL_QSTAUTP (A1) (APPLY RL_QSTAUTP* (LIST A1))) 
(SETQ RL_BLACKBOXES* (CONS 'RL_QSTAUTP RL_BLACKBOXES*)) 
(PUT 'RL_QSTRYCONS 'DOCAL
     '((SYNOPSIS . "rl_qstrycons/4")
       (DESCRIPTION . "quine simplification try consensus"))) 
(PUT 'RL_QSTRYCONS 'RL_SUPPORT 'RL_BLACKBOX) 
(FLUID '(RL_QSTRYCONS*)) 
(SETQ RL_BBL* (CONS 'RL_QSTRYCONS* RL_BBL*)) 
(PUT 'RL_QSTRYCONS 'NUMBER-OF-ARGS 4) 
(DE RL_QSTRYCONS (A1 A2 A3 A4) (APPLY RL_QSTRYCONS* (LIST A1 A2 A3 A4))) 
(SETQ RL_BLACKBOXES* (CONS 'RL_QSTRYCONS RL_BLACKBOXES*)) 
(PUT 'RL_SMT2PRINTAT 'DOCAL
     '((SYNOPSIS . "rl_smt2printat/1")
       (DESCRIPTION . "SMTLIB-2 format print atomic formula"))) 
(PUT 'RL_SMT2PRINTAT 'RL_SUPPORT 'RL_BLACKBOX) 
(FLUID '(RL_SMT2PRINTAT*)) 
(SETQ RL_BBL* (CONS 'RL_SMT2PRINTAT* RL_BBL*)) 
(PUT 'RL_SMT2PRINTAT 'NUMBER-OF-ARGS 1) 
(DE RL_SMT2PRINTAT (A1) (APPLY RL_SMT2PRINTAT* (LIST A1))) 
(SETQ RL_BLACKBOXES* (CONS 'RL_SMT2PRINTAT RL_BLACKBOXES*)) 
(PUT 'RL_SMT2PRINTLOGIC 'DOCAL
     '((SYNOPSIS . "rl_smt2printlogic/0")
       (DESCRIPTION . "SMTLIB-2 format print logic"))) 
(PUT 'RL_SMT2PRINTLOGIC 'RL_SUPPORT 'RL_BLACKBOX) 
(FLUID '(RL_SMT2PRINTLOGIC*)) 
(SETQ RL_BBL* (CONS 'RL_SMT2PRINTLOGIC* RL_BBL*)) 
(PUT 'RL_SMT2PRINTLOGIC 'NUMBER-OF-ARGS 0) 
(DE RL_SMT2PRINTLOGIC NIL (APPLY RL_SMT2PRINTLOGIC* (LIST))) 
(SETQ RL_BLACKBOXES* (CONS 'RL_SMT2PRINTLOGIC RL_BLACKBOXES*)) 
(PUT 'RL_SMT2READAT 'DOCAL
     '((SYNOPSIS . "rl_smt2readat/1")
       (DESCRIPTION . "SMTLIB-2 format read atomic formula"))) 
(PUT 'RL_SMT2READAT 'RL_SUPPORT 'RL_BLACKBOX) 
(FLUID '(RL_SMT2READAT*)) 
(SETQ RL_BBL* (CONS 'RL_SMT2READAT* RL_BBL*)) 
(PUT 'RL_SMT2READAT 'NUMBER-OF-ARGS 1) 
(DE RL_SMT2READAT (A1) (APPLY RL_SMT2READAT* (LIST A1))) 
(SETQ RL_BLACKBOXES* (CONS 'RL_SMT2READAT RL_BLACKBOXES*)) 
(PUT 'RL_SIMPLAT1 'DOCAL
     '((SYNOPSIS . "rl_simplat1/2") (DESCRIPTION . "simplify atomic formula"))) 
(PUT 'RL_SIMPLAT1 'RL_SUPPORT 'RL_BLACKBOX) 
(FLUID '(RL_SIMPLAT1*)) 
(SETQ RL_BBL* (CONS 'RL_SIMPLAT1* RL_BBL*)) 
(PUT 'RL_SIMPLAT1 'NUMBER-OF-ARGS 2) 
(DE RL_SIMPLAT1 (A1 A2) (APPLY RL_SIMPLAT1* (LIST A1 A2))) 
(SETQ RL_BLACKBOXES* (CONS 'RL_SIMPLAT1 RL_BLACKBOXES*)) 
(PUT 'RL_SIMPLIFYBOUNDEDQUANTIFIER 'DOCAL
     '((SYNOPSIS . "rl_simplifyboundedquantifier/3")
       (DESCRIPTION . "simplify bounded quantifier"))) 
(PUT 'RL_SIMPLIFYBOUNDEDQUANTIFIER 'RL_SUPPORT 'RL_BLACKBOX) 
(FLUID '(RL_SIMPLIFYBOUNDEDQUANTIFIER*)) 
(SETQ RL_BBL* (CONS 'RL_SIMPLIFYBOUNDEDQUANTIFIER* RL_BBL*)) 
(PUT 'RL_SIMPLIFYBOUNDEDQUANTIFIER 'NUMBER-OF-ARGS 3) 
(DE RL_SIMPLIFYBOUNDEDQUANTIFIER (A1 A2 A3)
    (APPLY RL_SIMPLIFYBOUNDEDQUANTIFIER* (LIST A1 A2 A3))) 
(SETQ RL_BLACKBOXES* (CONS 'RL_SIMPLIFYBOUNDEDQUANTIFIER RL_BLACKBOXES*)) 
(PUT 'RL_SMUPDKNOWL 'DOCAL
     '((SYNOPSIS . "rl_smupdknowl/4")
       (DESCRIPTION . "smart simplification update knowledge"))) 
(PUT 'RL_SMUPDKNOWL 'RL_SUPPORT 'RL_BLACKBOX) 
(FLUID '(RL_SMUPDKNOWL*)) 
(SETQ RL_BBL* (CONS 'RL_SMUPDKNOWL* RL_BBL*)) 
(PUT 'RL_SMUPDKNOWL 'NUMBER-OF-ARGS 4) 
(DE RL_SMUPDKNOWL (A1 A2 A3 A4) (APPLY RL_SMUPDKNOWL* (LIST A1 A2 A3 A4))) 
(SETQ RL_BLACKBOXES* (CONS 'RL_SMUPDKNOWL RL_BLACKBOXES*)) 
(PUT 'RL_SMRMKNOWL 'DOCAL
     '((SYNOPSIS . "rl_smrmknowl/2")
       (DESCRIPTION . "smart simplification remove knowledge"))) 
(PUT 'RL_SMRMKNOWL 'RL_SUPPORT 'RL_BLACKBOX) 
(FLUID '(RL_SMRMKNOWL*)) 
(SETQ RL_BBL* (CONS 'RL_SMRMKNOWL* RL_BBL*)) 
(PUT 'RL_SMRMKNOWL 'NUMBER-OF-ARGS 2) 
(DE RL_SMRMKNOWL (A1 A2) (APPLY RL_SMRMKNOWL* (LIST A1 A2))) 
(SETQ RL_BLACKBOXES* (CONS 'RL_SMRMKNOWL RL_BLACKBOXES*)) 
(PUT 'RL_SMCPKNOWL 'DOCAL
     '((SYNOPSIS . "rl_smcpknowl/1")
       (DESCRIPTION . "smart simplification copyknowledge"))) 
(PUT 'RL_SMCPKNOWL 'RL_SUPPORT 'RL_BLACKBOX) 
(FLUID '(RL_SMCPKNOWL*)) 
(SETQ RL_BBL* (CONS 'RL_SMCPKNOWL* RL_BBL*)) 
(PUT 'RL_SMCPKNOWL 'NUMBER-OF-ARGS 1) 
(DE RL_SMCPKNOWL (A1) (APPLY RL_SMCPKNOWL* (LIST A1))) 
(SETQ RL_BLACKBOXES* (CONS 'RL_SMCPKNOWL RL_BLACKBOXES*)) 
(PUT 'RL_SMMKATL 'DOCAL
     '((SYNOPSIS . "rl_smmkatl/4")
       (DESCRIPTION . "smart simplification make list of atomic formulas"))) 
(PUT 'RL_SMMKATL 'RL_SUPPORT 'RL_BLACKBOX) 
(FLUID '(RL_SMMKATL*)) 
(SETQ RL_BBL* (CONS 'RL_SMMKATL* RL_BBL*)) 
(PUT 'RL_SMMKATL 'NUMBER-OF-ARGS 4) 
(DE RL_SMMKATL (A1 A2 A3 A4) (APPLY RL_SMMKATL* (LIST A1 A2 A3 A4))) 
(SETQ RL_BLACKBOXES* (CONS 'RL_SMMKATL RL_BLACKBOXES*)) 
(PUT 'RL_SMSIMPL-IMPL 'DOCAL
     '((SYNOPSIS . "rl_smsimpl-impl/5")
       (DESCRIPTION . "smart-simplify implication"))) 
(PUT 'RL_SMSIMPL-IMPL 'RL_SUPPORT 'RL_BLACKBOX) 
(FLUID '(RL_SMSIMPL-IMPL*)) 
(SETQ RL_BBL* (CONS 'RL_SMSIMPL-IMPL* RL_BBL*)) 
(PUT 'RL_SMSIMPL-IMPL 'NUMBER-OF-ARGS 5) 
(DE RL_SMSIMPL-IMPL (A1 A2 A3 A4 A5)
    (APPLY RL_SMSIMPL-IMPL* (LIST A1 A2 A3 A4 A5))) 
(SETQ RL_BLACKBOXES* (CONS 'RL_SMSIMPL-IMPL RL_BLACKBOXES*)) 
(PUT 'RL_SMSIMPL-EQUIV1 'DOCAL
     '((SYNOPSIS . "rl_smsimpl-equiv1/5")
       (DESCRIPTION . "smart-simplify equivalence"))) 
(PUT 'RL_SMSIMPL-EQUIV1 'RL_SUPPORT 'RL_BLACKBOX) 
(FLUID '(RL_SMSIMPL-EQUIV1*)) 
(SETQ RL_BBL* (CONS 'RL_SMSIMPL-EQUIV1* RL_BBL*)) 
(PUT 'RL_SMSIMPL-EQUIV1 'NUMBER-OF-ARGS 5) 
(DE RL_SMSIMPL-EQUIV1 (A1 A2 A3 A4 A5)
    (APPLY RL_SMSIMPL-EQUIV1* (LIST A1 A2 A3 A4 A5))) 
(SETQ RL_BLACKBOXES* (CONS 'RL_SMSIMPL-EQUIV1 RL_BLACKBOXES*)) 
(PUT 'RL_SPECELIM 'DOCAL
     '((SYNOPSIS . "rl_specelim/5") (DESCRIPTION . "special elimination"))) 
(PUT 'RL_SPECELIM 'RL_SUPPORT 'RL_BLACKBOX) 
(FLUID '(RL_SPECELIM*)) 
(SETQ RL_BBL* (CONS 'RL_SPECELIM* RL_BBL*)) 
(PUT 'RL_SPECELIM 'NUMBER-OF-ARGS 5) 
(DE RL_SPECELIM (A1 A2 A3 A4 A5) (APPLY RL_SPECELIM* (LIST A1 A2 A3 A4 A5))) 
(SETQ RL_BLACKBOXES* (CONS 'RL_SPECELIM RL_BLACKBOXES*)) 
(PUT 'RL_STRUCTAT 'DOCAL
     '((SYNOPSIS . "rl_structat/2")
       (DESCRIPTION . "structural formula analysis atomic case"))) 
(PUT 'RL_STRUCTAT 'RL_SUPPORT 'RL_BLACKBOX) 
(FLUID '(RL_STRUCTAT*)) 
(SETQ RL_BBL* (CONS 'RL_STRUCTAT* RL_BBL*)) 
(PUT 'RL_STRUCTAT 'NUMBER-OF-ARGS 2) 
(DE RL_STRUCTAT (A1 A2) (APPLY RL_STRUCTAT* (LIST A1 A2))) 
(SETQ RL_BLACKBOXES* (CONS 'RL_STRUCTAT RL_BLACKBOXES*)) 
(PUT 'RL_SUSIPOST 'DOCAL
     '((SYNOPSIS . "rl_susipost/2") (DESCRIPTION . "susi post simplification"))) 
(PUT 'RL_SUSIPOST 'RL_SUPPORT 'RL_BLACKBOX) 
(FLUID '(RL_SUSIPOST*)) 
(SETQ RL_BBL* (CONS 'RL_SUSIPOST* RL_BBL*)) 
(PUT 'RL_SUSIPOST 'NUMBER-OF-ARGS 2) 
(DE RL_SUSIPOST (A1 A2) (APPLY RL_SUSIPOST* (LIST A1 A2))) 
(SETQ RL_BLACKBOXES* (CONS 'RL_SUSIPOST RL_BLACKBOXES*)) 
(PUT 'RL_SUSITF 'DOCAL
     '((SYNOPSIS . "rl_susitf/2") (DESCRIPTION . "susi transform"))) 
(PUT 'RL_SUSITF 'RL_SUPPORT 'RL_BLACKBOX) 
(FLUID '(RL_SUSITF*)) 
(SETQ RL_BBL* (CONS 'RL_SUSITF* RL_BBL*)) 
(PUT 'RL_SUSITF 'NUMBER-OF-ARGS 2) 
(DE RL_SUSITF (A1 A2) (APPLY RL_SUSITF* (LIST A1 A2))) 
(SETQ RL_BLACKBOXES* (CONS 'RL_SUSITF RL_BLACKBOXES*)) 
(PUT 'RL_SUSIBIN 'DOCAL
     '((SYNOPSIS . "rl_susibin/2")
       (DESCRIPTION . "susi binary smart simplification"))) 
(PUT 'RL_SUSIBIN 'RL_SUPPORT 'RL_BLACKBOX) 
(FLUID '(RL_SUSIBIN*)) 
(SETQ RL_BBL* (CONS 'RL_SUSIBIN* RL_BBL*)) 
(PUT 'RL_SUSIBIN 'NUMBER-OF-ARGS 2) 
(DE RL_SUSIBIN (A1 A2) (APPLY RL_SUSIBIN* (LIST A1 A2))) 
(SETQ RL_BLACKBOXES* (CONS 'RL_SUSIBIN RL_BLACKBOXES*)) 
(PUT 'RL_IFSTRUCTAT 'DOCAL
     '((SYNOPSIS . "rl_ifstructat/2")
       (DESCRIPTION
        . "irreducible factors structural formula analysis atomic case"))) 
(PUT 'RL_IFSTRUCTAT 'RL_SUPPORT 'RL_BLACKBOX) 
(FLUID '(RL_IFSTRUCTAT*)) 
(SETQ RL_BBL* (CONS 'RL_IFSTRUCTAT* RL_BBL*)) 
(PUT 'RL_IFSTRUCTAT 'NUMBER-OF-ARGS 2) 
(DE RL_IFSTRUCTAT (A1 A2) (APPLY RL_IFSTRUCTAT* (LIST A1 A2))) 
(SETQ RL_BLACKBOXES* (CONS 'RL_IFSTRUCTAT RL_BLACKBOXES*)) 
(PUT 'RL_SACAT 'DOCAL
     '((SYNOPSIS . "rl_sacat/3")
       (DESCRIPTION . "subsumption and cut atomic formula"))) 
(PUT 'RL_SACAT 'RL_SUPPORT 'RL_BLACKBOX) 
(FLUID '(RL_SACAT*)) 
(SETQ RL_BBL* (CONS 'RL_SACAT* RL_BBL*)) 
(PUT 'RL_SACAT 'NUMBER-OF-ARGS 3) 
(DE RL_SACAT (A1 A2 A3) (APPLY RL_SACAT* (LIST A1 A2 A3))) 
(SETQ RL_BLACKBOXES* (CONS 'RL_SACAT RL_BLACKBOXES*)) 
(PUT 'RL_SACATLP 'DOCAL
     '((SYNOPSIS . "rl_sacatlp/2")
       (DESCRIPTION . "subsumption and cut atomic formula list predciate"))) 
(PUT 'RL_SACATLP 'RL_SUPPORT 'RL_BLACKBOX) 
(FLUID '(RL_SACATLP*)) 
(SETQ RL_BBL* (CONS 'RL_SACATLP* RL_BBL*)) 
(PUT 'RL_SACATLP 'NUMBER-OF-ARGS 2) 
(DE RL_SACATLP (A1 A2) (APPLY RL_SACATLP* (LIST A1 A2))) 
(SETQ RL_BLACKBOXES* (CONS 'RL_SACATLP RL_BLACKBOXES*)) 
(PUT 'RL_SUBSUMPTION 'DOCAL
     '((SYNOPSIS . "rl_subsumption/3")
       (DESCRIPTION . "subsumption relation w.r.t. generic or"))) 
(PUT 'RL_SUBSUMPTION 'RL_SUPPORT 'RL_BLACKBOX) 
(FLUID '(RL_SUBSUMPTION*)) 
(SETQ RL_BBL* (CONS 'RL_SUBSUMPTION* RL_BBL*)) 
(PUT 'RL_SUBSUMPTION 'NUMBER-OF-ARGS 3) 
(DE RL_SUBSUMPTION (A1 A2 A3) (APPLY RL_SUBSUMPTION* (LIST A1 A2 A3))) 
(SETQ RL_BLACKBOXES* (CONS 'RL_SUBSUMPTION RL_BLACKBOXES*)) 
(PUT 'RL_T2CDL 'DOCAL
     '((SYNOPSIS . "rl_t2cdl/1")
       (DESCRIPTION . "term to case distinction list"))) 
(PUT 'RL_T2CDL 'RL_SUPPORT 'RL_BLACKBOX) 
(FLUID '(RL_T2CDL*)) 
(SETQ RL_BBL* (CONS 'RL_T2CDL* RL_BBL*)) 
(PUT 'RL_T2CDL 'NUMBER-OF-ARGS 1) 
(DE RL_T2CDL (A1) (APPLY RL_T2CDL* (LIST A1))) 
(SETQ RL_BLACKBOXES* (CONS 'RL_T2CDL RL_BLACKBOXES*)) 
(PUT 'RL_TERMMLAT 'DOCAL
     '((SYNOPSIS . "rl_termmlat/1")
       (DESCRIPTION . "term multiplicity list on atomic formula"))) 
(PUT 'RL_TERMMLAT 'RL_SUPPORT 'RL_BLACKBOX) 
(FLUID '(RL_TERMMLAT*)) 
(SETQ RL_BBL* (CONS 'RL_TERMMLAT* RL_BBL*)) 
(PUT 'RL_TERMMLAT 'NUMBER-OF-ARGS 1) 
(DE RL_TERMMLAT (A1) (APPLY RL_TERMMLAT* (LIST A1))) 
(SETQ RL_BLACKBOXES* (CONS 'RL_TERMMLAT RL_BLACKBOXES*)) 
(PUT 'RL_TRANSFORM 'DOCAL
     '((SYNOPSIS . "rl_transform/7")
       (DESCRIPTION . "equivalently transform formula before QE step"))) 
(PUT 'RL_TRANSFORM 'RL_SUPPORT 'RL_BLACKBOX) 
(FLUID '(RL_TRANSFORM*)) 
(SETQ RL_BBL* (CONS 'RL_TRANSFORM* RL_BBL*)) 
(PUT 'RL_TRANSFORM 'NUMBER-OF-ARGS 7) 
(DE RL_TRANSFORM (A1 A2 A3 A4 A5 A6 A7)
    (APPLY RL_TRANSFORM* (LIST A1 A2 A3 A4 A5 A6 A7))) 
(SETQ RL_BLACKBOXES* (CONS 'RL_TRANSFORM RL_BLACKBOXES*)) 
(PUT 'RL_VARSUBSTAT 'DOCAL
     '((SYNOPSIS . "rl_varsubstat/3")
       (DESCRIPTION
        . "substitute variable with another variable in atomic formula"))) 
(PUT 'RL_VARSUBSTAT 'RL_SUPPORT 'RL_BLACKBOX) 
(FLUID '(RL_VARSUBSTAT*)) 
(SETQ RL_BBL* (CONS 'RL_VARSUBSTAT* RL_BBL*)) 
(PUT 'RL_VARSUBSTAT 'NUMBER-OF-ARGS 3) 
(DE RL_VARSUBSTAT (A1 A2 A3) (APPLY RL_VARSUBSTAT* (LIST A1 A2 A3))) 
(SETQ RL_BLACKBOXES* (CONS 'RL_VARSUBSTAT RL_BLACKBOXES*)) 
(PUT 'RL_TRANSLAT 'DOCAL
     '((SYNOPSIS . "rl_translat/5")
       (DESCRIPTION
        . "translate atomic formula into a list of bounds modulo a theory"))) 
(PUT 'RL_TRANSLAT 'RL_SUPPORT 'RL_BLACKBOX) 
(FLUID '(RL_TRANSLAT*)) 
(SETQ RL_BBL* (CONS 'RL_TRANSLAT* RL_BBL*)) 
(PUT 'RL_TRANSLAT 'NUMBER-OF-ARGS 5) 
(DE RL_TRANSLAT (A1 A2 A3 A4 A5) (APPLY RL_TRANSLAT* (LIST A1 A2 A3 A4 A5))) 
(SETQ RL_BLACKBOXES* (CONS 'RL_TRANSLAT RL_BLACKBOXES*)) 
(PUT 'RL_ELIMSET 'DOCAL
     '((SYNOPSIS . "rl_elimset/2")
       (DESCRIPTION . "elimination set computation"))) 
(PUT 'RL_ELIMSET 'RL_SUPPORT 'RL_BLACKBOX) 
(FLUID '(RL_ELIMSET*)) 
(SETQ RL_BBL* (CONS 'RL_ELIMSET* RL_BBL*)) 
(PUT 'RL_ELIMSET 'NUMBER-OF-ARGS 2) 
(DE RL_ELIMSET (A1 A2) (APPLY RL_ELIMSET* (LIST A1 A2))) 
(SETQ RL_BLACKBOXES* (CONS 'RL_ELIMSET RL_BLACKBOXES*)) 
(PUT 'RL_TRYGAUSS 'DOCAL
     '((SYNOPSIS . "rl_trygauss/5") (DESCRIPTION . "try Gauss elimination"))) 
(PUT 'RL_TRYGAUSS 'RL_SUPPORT 'RL_BLACKBOX) 
(FLUID '(RL_TRYGAUSS*)) 
(SETQ RL_BBL* (CONS 'RL_TRYGAUSS* RL_BBL*)) 
(PUT 'RL_TRYGAUSS 'NUMBER-OF-ARGS 5) 
(DE RL_TRYGAUSS (A1 A2 A3 A4 A5) (APPLY RL_TRYGAUSS* (LIST A1 A2 A3 A4 A5))) 
(SETQ RL_BLACKBOXES* (CONS 'RL_TRYGAUSS RL_BLACKBOXES*)) 
(PUT 'RL_VARSEL 'DOCAL
     '((SYNOPSIS . "rl_varsel/3")
       (DESCRIPTION . "select variable to be eliminated"))) 
(PUT 'RL_VARSEL 'RL_SUPPORT 'RL_BLACKBOX) 
(FLUID '(RL_VARSEL*)) 
(SETQ RL_BBL* (CONS 'RL_VARSEL* RL_BBL*)) 
(PUT 'RL_VARSEL 'NUMBER-OF-ARGS 3) 
(DE RL_VARSEL (A1 A2 A3) (APPLY RL_VARSEL* (LIST A1 A2 A3))) 
(SETQ RL_BLACKBOXES* (CONS 'RL_VARSEL RL_BLACKBOXES*)) 
(PUT 'RL_BETTERP 'DOCAL
     '((SYNOPSIS . "rl_betterp/2")
       (DESCRIPTION
        . "compare quality of two different elimination set substitution results"))) 
(PUT 'RL_BETTERP 'RL_SUPPORT 'RL_BLACKBOX) 
(FLUID '(RL_BETTERP*)) 
(SETQ RL_BBL* (CONS 'RL_BETTERP* RL_BBL*)) 
(PUT 'RL_BETTERP 'NUMBER-OF-ARGS 2) 
(DE RL_BETTERP (A1 A2) (APPLY RL_BETTERP* (LIST A1 A2))) 
(SETQ RL_BLACKBOXES* (CONS 'RL_BETTERP RL_BLACKBOXES*)) 
(PUT 'RL_QEMKANS 'DOCAL
     '((SYNOPSIS . "rl_qemkans/1")
       (DESCRIPTION . "make answer from result container"))) 
(PUT 'RL_QEMKANS 'RL_SUPPORT 'RL_BLACKBOX) 
(FLUID '(RL_QEMKANS*)) 
(SETQ RL_BBL* (CONS 'RL_QEMKANS* RL_BBL*)) 
(PUT 'RL_QEMKANS 'NUMBER-OF-ARGS 1) 
(DE RL_QEMKANS (A1) (APPLY RL_QEMKANS* (LIST A1))) 
(SETQ RL_BLACKBOXES* (CONS 'RL_QEMKANS RL_BLACKBOXES*)) 
(PUT 'RL_ORDATP 'DOCAL
     '((SYNOPSIS . "rl_ordatp/2")
       (DESCRIPTION . "total order on atomic formulas"))) 
(PUT 'RL_ORDATP 'RL_SUPPORT 'RL_BLACKBOX) 
(FLUID '(RL_ORDATP*)) 
(SETQ RL_BBL* (CONS 'RL_ORDATP* RL_BBL*)) 
(PUT 'RL_ORDATP 'NUMBER-OF-ARGS 2) 
(DE RL_ORDATP (A1 A2) (APPLY RL_ORDATP* (LIST A1 A2))) 
(SETQ RL_BLACKBOXES* (CONS 'RL_ORDATP RL_BLACKBOXES*)) 
(PUT 'RL_SIGNAT 'DOCAL
     '((SYNOPSIS . "rl_signat/1")
       (DESCRIPTION
        . "replace varable-free terms in atomic formula with their signs"))) 
(PUT 'RL_SIGNAT 'RL_SUPPORT 'RL_BLACKBOX) 
(FLUID '(RL_SIGNAT*)) 
(SETQ RL_BBL* (CONS 'RL_SIGNAT* RL_BBL*)) 
(PUT 'RL_SIGNAT 'NUMBER-OF-ARGS 1) 
(DE RL_SIGNAT (A1) (APPLY RL_SIGNAT* (LIST A1))) 
(SETQ RL_BLACKBOXES* (CONS 'RL_SIGNAT RL_BLACKBOXES*)) 
(PUT 'RL_SUBALCHK 'DOCAL
     '((SYNOPSIS . "rl_subalchk/1") (DESCRIPTION . "substitute alist check"))) 
(PUT 'RL_SUBALCHK 'RL_SUPPORT 'RL_BLACKBOX) 
(FLUID '(RL_SUBALCHK*)) 
(SETQ RL_BBL* (CONS 'RL_SUBALCHK* RL_BBL*)) 
(PUT 'RL_SUBALCHK 'NUMBER-OF-ARGS 1) 
(DE RL_SUBALCHK (A1) (APPLY RL_SUBALCHK* (LIST A1))) 
(SETQ RL_BLACKBOXES* (CONS 'RL_SUBALCHK RL_BLACKBOXES*)) 
(PUT 'RL_SUBAT 'DOCAL
     '((SYNOPSIS . "rl_subat/2")
       (DESCRIPTION . "substitute into atomic formula"))) 
(PUT 'RL_SUBAT 'RL_SUPPORT 'RL_BLACKBOX) 
(FLUID '(RL_SUBAT*)) 
(SETQ RL_BBL* (CONS 'RL_SUBAT* RL_BBL*)) 
(PUT 'RL_SUBAT 'NUMBER-OF-ARGS 2) 
(DE RL_SUBAT (A1 A2) (APPLY RL_SUBAT* (LIST A1 A2))) 
(SETQ RL_BLACKBOXES* (CONS 'RL_SUBAT RL_BLACKBOXES*)) 
(PUT 'RL_TORDP 'DOCAL
     '((SYNOPSIS . "rl_tordp/2") (DESCRIPTION . "total order on terms"))) 
(PUT 'RL_TORDP 'RL_SUPPORT 'RL_BLACKBOX) 
(FLUID '(RL_TORDP*)) 
(SETQ RL_BBL* (CONS 'RL_TORDP* RL_BBL*)) 
(PUT 'RL_TORDP 'NUMBER-OF-ARGS 2) 
(DE RL_TORDP (A1 A2) (APPLY RL_TORDP* (LIST A1 A2))) 
(SETQ RL_BLACKBOXES* (CONS 'RL_TORDP RL_BLACKBOXES*)) 
(PUT 'RL_PREPAT 'DOCAL
     '((SYNOPSIS . "rl_prepat/1")
       (DESCRIPTION . "Lisp prefix from atomic formula"))) 
(PUT 'RL_PREPAT 'RL_SUPPORT 'RL_BLACKBOX) 
(FLUID '(RL_PREPAT*)) 
(SETQ RL_BBL* (CONS 'RL_PREPAT* RL_BBL*)) 
(PUT 'RL_PREPAT 'NUMBER-OF-ARGS 1) 
(DE RL_PREPAT (A1) (APPLY RL_PREPAT* (LIST A1))) 
(SETQ RL_BLACKBOXES* (CONS 'RL_PREPAT RL_BLACKBOXES*)) 
(PUT 'RL_SIMPAT 'DOCAL
     '((SYNOPSIS . "rl_simpat/1")
       (DESCRIPTION . "atomic formula from Lisp prefix"))) 
(PUT 'RL_SIMPAT 'RL_SUPPORT 'RL_BLACKBOX) 
(FLUID '(RL_SIMPAT*)) 
(SETQ RL_BBL* (CONS 'RL_SIMPAT* RL_BBL*)) 
(PUT 'RL_SIMPAT 'NUMBER-OF-ARGS 1) 
(DE RL_SIMPAT (A1) (APPLY RL_SIMPAT* (LIST A1))) 
(SETQ RL_BLACKBOXES* (CONS 'RL_SIMPAT RL_BLACKBOXES*)) 
(PUT 'RL_VSUBALCHK 'DOCAL
     '((SYNOPSIS . "rl_vsubalchk/1")
       (DESCRIPTION . "virtual substitution Alist check"))) 
(PUT 'RL_VSUBALCHK 'RL_SUPPORT 'RL_BLACKBOX) 
(FLUID '(RL_VSUBALCHK*)) 
(SETQ RL_BBL* (CONS 'RL_VSUBALCHK* RL_BBL*)) 
(PUT 'RL_VSUBALCHK 'NUMBER-OF-ARGS 1) 
(DE RL_VSUBALCHK (A1) (APPLY RL_VSUBALCHK* (LIST A1))) 
(SETQ RL_BLACKBOXES* (CONS 'RL_VSUBALCHK RL_BLACKBOXES*)) 
(PUT 'RL_VSUBAT 'DOCAL
     '((SYNOPSIS . "rl_vsubat/3")
       (DESCRIPTION . "virtual substitution into atomic formula"))) 
(PUT 'RL_VSUBAT 'RL_SUPPORT 'RL_BLACKBOX) 
(FLUID '(RL_VSUBAT*)) 
(SETQ RL_BBL* (CONS 'RL_VSUBAT* RL_BBL*)) 
(PUT 'RL_VSUBAT 'NUMBER-OF-ARGS 3) 
(DE RL_VSUBAT (A1 A2 A3) (APPLY RL_VSUBAT* (LIST A1 A2 A3))) 
(SETQ RL_BLACKBOXES* (CONS 'RL_VSUBAT RL_BLACKBOXES*)) 
(ENDMODULE) 