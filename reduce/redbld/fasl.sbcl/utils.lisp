(cl:declaim (cl:optimize cl:debug cl:safety))
(cl:declaim (sb-ext:muffle-conditions sb-ext:compiler-note cl:style-warning))
(MODULE (LIST 'UTILS)) 
(NULL (SETQ *MODE 'SYMBOLIC)) 
(FLAG '(GENSTMTNUM) 'OPFN) 
(GLOBAL '(GENSTMTINCR* GENSTMTNUM* TABLEN*)) 
(SHARE (LIST 'GENSTMTINCR* 'GENSTMTNUM* 'TABLEN*)) 
(SETQ GENSTMTINCR* (PROGN (SETQ ALGLIST* (CONS NIL NIL)) 1)) 
(SETQ GENSTMTNUM* (PROGN (SETQ ALGLIST* (CONS NIL NIL)) 25000)) 
(SETQ TABLEN* (PROGN (SETQ ALGLIST* (CONS NIL NIL)) 4)) 
(GLOBAL
 '(*LISPARITHEXPOPS* *LISPDEFOPS* *LISPLOGEXPOPS* *LISPSTMTGPOPS* *LISPSTMTOPS*
   *SYMBOLTABLE*)) 
(SETQ *LISPARITHEXPOPS* '(EXPT MINUS PLUS QUOTIENT TIMES)) 
(SETQ *LISPDEFOPS* '(DEFUN)) 
(SETQ *LISPLOGEXPOPS* '(AND EQUAL GEQ GREATERP LEQ LESSP NEQ NOT OR)) 
(SETQ *LISPSTMTGPOPS* '(PROG PROGN)) 
(SETQ *LISPSTMTOPS*
        '(BREAK COND END FOR GO READ REPEAT RETURN SETQ STOP WHILE WRITE)) 
(SETQ *SYMBOLTABLE* '(*MAIN*)) 
(GLOBAL '(*FOR*)) 
(PUT 'GENSTMTNUM 'NUMBER-OF-ARGS 0) 
(PUT 'GENSTMTNUM 'DEFINED-ON-LINE '69) 
(PUT 'GENSTMTNUM 'DEFINED-IN-FILE 'GENTRAN/UTILS.RED) 
(PUT 'GENSTMTNUM 'PROCEDURE_TYPE '(ARROW UNIT GENERAL)) 
(DE GENSTMTNUM NIL
    (SETQ GENSTMTNUM*
            (PROGN
             (SETQ ALGLIST* (CONS NIL NIL))
             (PLUS GENSTMTNUM* GENSTMTINCR*)))) 
(PUT 'SYMTABPUT 'NUMBER-OF-ARGS 3) 
(PUT 'SYMTABPUT 'DEFINED-ON-LINE '78) 
(PUT 'SYMTABPUT 'DEFINED-IN-FILE 'GENTRAN/UTILS.RED) 
(PUT 'SYMTABPUT 'PROCEDURE_TYPE
     '(ARROW (TIMES GENERAL GENERAL GENERAL) GENERAL)) 
(DE SYMTABPUT (NAME TYPE VALUE)
    (PROGN
     (SETQ NAME (OR NAME (CAR *SYMBOLTABLE*)))
     (SETQ *SYMBOLTABLE* (CONS NAME (DELETE NAME *SYMBOLTABLE*)))
     (COND ((MEMQ TYPE '(*TYPE* *PARAMS*)) (PUT NAME TYPE VALUE))
           (TYPE
            (PROG (V VTYPE VDIMS DEC DECS)
              (SETQ V TYPE)
              (SETQ VTYPE (CAR VALUE))
              (SETQ VDIMS (CDR VALUE))
              (SETQ DECS (GET NAME '*DECS*))
              (SETQ DEC (ASSOC V DECS))
              (SETQ DECS (DELETE DEC DECS))
              (SETQ VTYPE
                      (OR VTYPE (COND ((GREATERP (LENGTH DEC) 1) (CADR DEC)))))
              (SETQ VDIMS
                      (OR VDIMS (COND ((GREATERP (LENGTH DEC) 2) (CDDR DEC)))))
              (SETQ DEC (CONS V (CONS VTYPE VDIMS)))
              (PUT NAME '*DECS* (APPEND DECS (LIST DEC)))))))) 
(PUT 'SYMTABGET 'NUMBER-OF-ARGS 2) 
(PUT 'SYMTABGET 'DEFINED-ON-LINE '111) 
(PUT 'SYMTABGET 'DEFINED-IN-FILE 'GENTRAN/UTILS.RED) 
(PUT 'SYMTABGET 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE SYMTABGET (NAME TYPE)
    (PROGN
     (COND (TYPE (SETQ NAME (OR NAME (CAR *SYMBOLTABLE*)))))
     (COND ((NULL NAME) *SYMBOLTABLE*)
           ((MEMQ TYPE '(*TYPE* *PARAMS* *DECS*)) (GET NAME TYPE))
           (T (ASSOC TYPE (GET NAME '*DECS*)))))) 
(PUT 'DECLARED-AS-FLOAT 'NUMBER-OF-ARGS 1) 
(PUT 'DECLARED-AS-FLOAT 'DEFINED-ON-LINE '136) 
(PUT 'DECLARED-AS-FLOAT 'DEFINED-IN-FILE 'GENTRAN/UTILS.RED) 
(PUT 'DECLARED-AS-FLOAT 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE DECLARED-AS-FLOAT (U)
    (PROG (DECS)
      (RETURN
       (AND (SETQ DECS (SYMTABGET NIL U))
            (MEMQ (CADR DECS)
                  '(REAL REAL*8 REAL*16 |DOUBLE PRECISION| DOUBLE FLOAT)))))) 
(PUT 'SYMTABREM 'NUMBER-OF-ARGS 2) 
(PUT 'SYMTABREM 'DEFINED-ON-LINE '144) 
(PUT 'SYMTABREM 'DEFINED-IN-FILE 'GENTRAN/UTILS.RED) 
(PUT 'SYMTABREM 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE SYMTABREM (NAME TYPE)
    (PROGN
     (SETQ NAME (OR NAME (CAR *SYMBOLTABLE*)))
     (COND
      ((NULL TYPE)
       (SETQ *SYMBOLTABLE* (OR (DELETE NAME *SYMBOLTABLE*) '(*MAIN*))))
      ((MEMQ TYPE '(*TYPE* *PARAMS* *DECS*)) (REMPROP NAME TYPE))
      (T
       (PROG (V DEC DECS)
         (SETQ V TYPE)
         (SETQ DECS (GET NAME '*DECS*))
         (SETQ DEC (ASSOC V DECS))
         (SETQ DECS (DELETE DEC DECS))
         (PUT NAME '*DECS* DECS)))))) 
(PUT 'GETVARTYPE 'NUMBER-OF-ARGS 1) 
(PUT 'GETVARTYPE 'DEFINED-ON-LINE '175) 
(PUT 'GETVARTYPE 'DEFINED-IN-FILE 'GENTRAN/UTILS.RED) 
(PUT 'GETVARTYPE 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE GETVARTYPE (VAR)
    (PROG (TYPE)
      (COND ((PAIRP VAR) (SETQ VAR (CAR VAR))))
      (SETQ TYPE (SYMTABGET NIL VAR))
      (COND ((AND TYPE (GEQ (LENGTH TYPE) 2)) (SETQ TYPE (CADR TYPE)))
            (T (SETQ TYPE NIL)))
      (RETURN TYPE))) 
(PUT 'ARRAYELTP 'NUMBER-OF-ARGS 1) 
(PUT 'ARRAYELTP 'DEFINED-ON-LINE '188) 
(PUT 'ARRAYELTP 'DEFINED-IN-FILE 'GENTRAN/UTILS.RED) 
(PUT 'ARRAYELTP 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE ARRAYELTP (EXP)
    (OR (GREATERP (LENGTH (SYMTABGET NIL (CAR EXP))) 2)
        (EQUAL (CAR EXP) 'DUMMYARRAYTOKEN))) 
(PUT 'MKASSIGN 'NUMBER-OF-ARGS 2) 
(PUT 'MKASSIGN 'DEFINED-ON-LINE '197) 
(PUT 'MKASSIGN 'DEFINED-IN-FILE 'GENTRAN/UTILS.RED) 
(PUT 'MKASSIGN 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE MKASSIGN (VAR EXP) (LIST 'SETQ VAR EXP)) 
(PUT 'MKCOND 'NUMBER-OF-ARGS 1) 
(PUT 'MKCOND 'DEFINED-ON-LINE '200) 
(PUT 'MKCOND 'DEFINED-IN-FILE 'GENTRAN/UTILS.RED) 
(PUT 'MKCOND 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE MKCOND (PAIRS) (CONS 'COND PAIRS)) 
(PUT 'MKDEF 'NUMBER-OF-ARGS 3) 
(PUT 'MKDEF 'DEFINED-ON-LINE '203) 
(PUT 'MKDEF 'DEFINED-IN-FILE 'GENTRAN/UTILS.RED) 
(PUT 'MKDEF 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL GENERAL) GENERAL)) 
(DE MKDEF (NAME PARAMS BODY) (APPEND (LIST 'DEFUN NAME PARAMS) BODY)) 
(PUT 'MKRETURN 'NUMBER-OF-ARGS 1) 
(PUT 'MKRETURN 'DEFINED-ON-LINE '206) 
(PUT 'MKRETURN 'DEFINED-IN-FILE 'GENTRAN/UTILS.RED) 
(PUT 'MKRETURN 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE MKRETURN (EXP) (LIST 'RETURN EXP)) 
(PUT 'MKSTMTGP 'NUMBER-OF-ARGS 2) 
(PUT 'MKSTMTGP 'DEFINED-ON-LINE '209) 
(PUT 'MKSTMTGP 'DEFINED-IN-FILE 'GENTRAN/UTILS.RED) 
(PUT 'MKSTMTGP 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE MKSTMTGP (VARS STMTS)
    (COND ((NUMBERP VARS) (CONS 'PROGN STMTS))
          (T (CONS 'PROG (CONS VARS STMTS))))) 
(PUT 'LISPASSIGNP 'NUMBER-OF-ARGS 1) 
(PUT 'LISPASSIGNP 'DEFINED-ON-LINE '219) 
(PUT 'LISPASSIGNP 'DEFINED-IN-FILE 'GENTRAN/UTILS.RED) 
(PUT 'LISPASSIGNP 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE LISPASSIGNP (STMT) (EQCAR STMT 'SETQ)) 
(PUT 'LISPBREAKP 'NUMBER-OF-ARGS 1) 
(PUT 'LISPBREAKP 'DEFINED-ON-LINE '222) 
(PUT 'LISPBREAKP 'DEFINED-IN-FILE 'GENTRAN/UTILS.RED) 
(PUT 'LISPBREAKP 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE LISPBREAKP (FORM) (EQCAR FORM 'BREAK)) 
(PUT 'LISPCALLP 'NUMBER-OF-ARGS 1) 
(PUT 'LISPCALLP 'DEFINED-ON-LINE '225) 
(PUT 'LISPCALLP 'DEFINED-IN-FILE 'GENTRAN/UTILS.RED) 
(PUT 'LISPCALLP 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE LISPCALLP (FORM) (PAIRP FORM)) 
(PUT 'LISPCONDP 'NUMBER-OF-ARGS 1) 
(PUT 'LISPCONDP 'DEFINED-ON-LINE '228) 
(PUT 'LISPCONDP 'DEFINED-IN-FILE 'GENTRAN/UTILS.RED) 
(PUT 'LISPCONDP 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE LISPCONDP (STMT) (EQCAR STMT 'COND)) 
(PUT 'LISPDEFP 'NUMBER-OF-ARGS 1) 
(PUT 'LISPDEFP 'DEFINED-ON-LINE '231) 
(PUT 'LISPDEFP 'DEFINED-IN-FILE 'GENTRAN/UTILS.RED) 
(PUT 'LISPDEFP 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE LISPDEFP (FORM) (AND (PAIRP FORM) (MEMQ (CAR FORM) *LISPDEFOPS*))) 
(PUT 'LISPEXPP 'NUMBER-OF-ARGS 1) 
(PUT 'LISPEXPP 'DEFINED-ON-LINE '234) 
(PUT 'LISPEXPP 'DEFINED-IN-FILE 'GENTRAN/UTILS.RED) 
(PUT 'LISPEXPP 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE LISPEXPP (FORM)
    (OR (ATOM FORM) (MEMQ (CAR FORM) *LISPARITHEXPOPS*)
        (MEMQ (CAR FORM) *LISPLOGEXPOPS*)
        (AND (NOT (MEMQ (CAR FORM) *LISPSTMTOPS*))
             (NOT (MEMQ (CAR FORM) *LISPSTMTGPOPS*))
             (NOT (MEMQ (CAR FORM) *LISPDEFOPS*))))) 
(PUT 'LISPENDP 'NUMBER-OF-ARGS 1) 
(PUT 'LISPENDP 'DEFINED-ON-LINE '242) 
(PUT 'LISPENDP 'DEFINED-IN-FILE 'GENTRAN/UTILS.RED) 
(PUT 'LISPENDP 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE LISPENDP (FORM) (EQCAR FORM 'END)) 
(PUT 'LISPFORP 'NUMBER-OF-ARGS 1) 
(PUT 'LISPFORP 'DEFINED-ON-LINE '245) 
(PUT 'LISPFORP 'DEFINED-IN-FILE 'GENTRAN/UTILS.RED) 
(PUT 'LISPFORP 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE LISPFORP (FORM) (EQCAR FORM *FOR*)) 
(PUT 'LISPGOP 'NUMBER-OF-ARGS 1) 
(PUT 'LISPGOP 'DEFINED-ON-LINE '248) 
(PUT 'LISPGOP 'DEFINED-IN-FILE 'GENTRAN/UTILS.RED) 
(PUT 'LISPGOP 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE LISPGOP (FORM) (EQCAR FORM 'GO)) 
(PUT 'LISPLABELP 'NUMBER-OF-ARGS 1) 
(PUT 'LISPLABELP 'DEFINED-ON-LINE '251) 
(PUT 'LISPLABELP 'DEFINED-IN-FILE 'GENTRAN/UTILS.RED) 
(PUT 'LISPLABELP 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE LISPLABELP (FORM) (ATOM FORM)) 
(PUT 'LISPPRINTP 'NUMBER-OF-ARGS 1) 
(PUT 'LISPPRINTP 'DEFINED-ON-LINE '254) 
(PUT 'LISPPRINTP 'DEFINED-IN-FILE 'GENTRAN/UTILS.RED) 
(PUT 'LISPPRINTP 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE LISPPRINTP (FORM) (EQCAR FORM 'WRITE)) 
(PUT 'LISPREADP 'NUMBER-OF-ARGS 1) 
(PUT 'LISPREADP 'DEFINED-ON-LINE '257) 
(PUT 'LISPREADP 'DEFINED-IN-FILE 'GENTRAN/UTILS.RED) 
(PUT 'LISPREADP 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE LISPREADP (FORM) (EQCAR FORM 'READ)) 
(PUT 'LISPREPEATP 'NUMBER-OF-ARGS 1) 
(PUT 'LISPREPEATP 'DEFINED-ON-LINE '260) 
(PUT 'LISPREPEATP 'DEFINED-IN-FILE 'GENTRAN/UTILS.RED) 
(PUT 'LISPREPEATP 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE LISPREPEATP (FORM) (EQCAR FORM 'REPEAT)) 
(PUT 'LISPRETURNP 'NUMBER-OF-ARGS 1) 
(PUT 'LISPRETURNP 'DEFINED-ON-LINE '263) 
(PUT 'LISPRETURNP 'DEFINED-IN-FILE 'GENTRAN/UTILS.RED) 
(PUT 'LISPRETURNP 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE LISPRETURNP (STMT) (EQCAR STMT 'RETURN)) 
(PUT 'LISPSTMTP 'NUMBER-OF-ARGS 1) 
(PUT 'LISPSTMTP 'DEFINED-ON-LINE '266) 
(PUT 'LISPSTMTP 'DEFINED-IN-FILE 'GENTRAN/UTILS.RED) 
(PUT 'LISPSTMTP 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE LISPSTMTP (FORM)
    (OR (ATOM FORM) (MEMQ (CAR FORM) *LISPSTMTOPS*)
        (AND (ATOM (CAR FORM))
             (NOT
              (OR (MEMQ (CAR FORM) *LISPARITHEXPOPS*)
                  (MEMQ (CAR FORM) *LISPLOGEXPOPS*)
                  (MEMQ (CAR FORM) *LISPSTMTGPOPS*)
                  (MEMQ (CAR FORM) *LISPDEFOPS*)))))) 
(PUT 'LISPSTMTGPP 'NUMBER-OF-ARGS 1) 
(PUT 'LISPSTMTGPP 'DEFINED-ON-LINE '275) 
(PUT 'LISPSTMTGPP 'DEFINED-IN-FILE 'GENTRAN/UTILS.RED) 
(PUT 'LISPSTMTGPP 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE LISPSTMTGPP (FORM) (AND (PAIRP FORM) (MEMQ (CAR FORM) *LISPSTMTGPOPS*))) 
(PUT 'LISPSTOPP 'NUMBER-OF-ARGS 1) 
(PUT 'LISPSTOPP 'DEFINED-ON-LINE '278) 
(PUT 'LISPSTOPP 'DEFINED-IN-FILE 'GENTRAN/UTILS.RED) 
(PUT 'LISPSTOPP 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE LISPSTOPP (FORM) (EQCAR FORM 'STOP)) 
(PUT 'LISPWHILEP 'NUMBER-OF-ARGS 1) 
(PUT 'LISPWHILEP 'DEFINED-ON-LINE '281) 
(PUT 'LISPWHILEP 'DEFINED-IN-FILE 'GENTRAN/UTILS.RED) 
(PUT 'LISPWHILEP 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE LISPWHILEP (FORM) (EQCAR FORM 'WHILE)) 
(PUT 'FORMTYPELISTS 'NUMBER-OF-ARGS 1) 
(PUT 'FORMTYPELISTS 'DEFINED-ON-LINE '290) 
(PUT 'FORMTYPELISTS 'DEFINED-IN-FILE 'GENTRAN/UTILS.RED) 
(PUT 'FORMTYPELISTS 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE FORMTYPELISTS (VARLISTS)
    (PROG (TYPE TYPELISTS TL)
      (PROG (VL)
        (SETQ VL VARLISTS)
       LAB
        (COND ((NULL VL) (RETURN NIL)))
        ((LAMBDA (VL)
           (PROGN
            (SETQ TYPE (CADR VL))
            (COND
             ((ONEP (LENGTH (SETQ VL (DELETE TYPE VL)))) (SETQ VL (CAR VL))))
            (COND
             ((SETQ TL (ASSOC TYPE TYPELISTS))
              (SETQ TYPELISTS (DELETE TL TYPELISTS)))
             (T (SETQ TL (LIST TYPE))))
            (SETQ TYPELISTS (APPEND TYPELISTS (LIST (APPEND TL (LIST VL)))))))
         (CAR VL))
        (SETQ VL (CDR VL))
        (GO LAB))
      (RETURN TYPELISTS))) 
(PUT 'FUNCTIONFORMP 'NUMBER-OF-ARGS 2) 
(PUT 'FUNCTIONFORMP 'DEFINED-ON-LINE '311) 
(PUT 'FUNCTIONFORMP 'DEFINED-IN-FILE 'GENTRAN/UTILS.RED) 
(PUT 'FUNCTIONFORMP 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE FUNCTIONFORMP (STMT NAME)
    (COND ((OR (NULL STMT) (ATOM STMT)) NIL)
          ((AND (EQ (CAR STMT) 'SETQ) (EQ (CADR STMT) NAME)) T)
          ((AND (EQ (CAR STMT) 'RETURN) (CDR STMT)) T)
          (T
           (LISPEVAL
            (CONS 'OR
                  (PROG (ST FORALL-RESULT FORALL-ENDPTR)
                    (SETQ ST STMT)
                    (COND ((NULL ST) (RETURN NIL)))
                    (SETQ FORALL-RESULT
                            (SETQ FORALL-ENDPTR
                                    (CONS
                                     ((LAMBDA (ST) (FUNCTIONFORMP ST NAME))
                                      (CAR ST))
                                     NIL)))
                   LOOPLABEL
                    (SETQ ST (CDR ST))
                    (COND ((NULL ST) (RETURN FORALL-RESULT)))
                    (RPLACD FORALL-ENDPTR
                            (CONS
                             ((LAMBDA (ST) (FUNCTIONFORMP ST NAME)) (CAR ST))
                             NIL))
                    (SETQ FORALL-ENDPTR (CDR FORALL-ENDPTR))
                    (GO LOOPLABEL))))))) 
(PUT 'IMPLICITP 'NUMBER-OF-ARGS 1) 
(PUT 'IMPLICITP 'DEFINED-ON-LINE '324) 
(PUT 'IMPLICITP 'DEFINED-IN-FILE 'GENTRAN/UTILS.RED) 
(PUT 'IMPLICITP 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE IMPLICITP (TYPE)
    (PROG (XTYPE XIMP R)
      (SETQ XTYPE (EXPLODE2 TYPE))
      (SETQ XIMP (EXPLODE2 'IMPLICIT))
      (SETQ R T)
      (PROG ()
       REPEATLABEL
        (SETQ R (AND R (EQ (CAR XTYPE) (CAR XIMP))))
        (COND
         ((NOT
           (OR (NULL (SETQ XTYPE (CDR XTYPE))) (NULL (SETQ XIMP (CDR XIMP)))))
          (GO REPEATLABEL))))
      (RETURN R))) 
(PUT 'INSERTCOMMAS 'NUMBER-OF-ARGS 1) 
(PUT 'INSERTCOMMAS 'DEFINED-ON-LINE '342) 
(PUT 'INSERTCOMMAS 'DEFINED-IN-FILE 'GENTRAN/UTILS.RED) 
(PUT 'INSERTCOMMAS 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE INSERTCOMMAS (LST)
    (PROG (RESULT)
      (COND ((NULL LST) (RETURN NIL)))
      (SETQ RESULT (LIST (CAR LST)))
      (PROG ()
       WHILELABEL
        (COND ((NOT (SETQ LST (CDR LST))) (RETURN NIL)))
        (SETQ RESULT (CONS (CAR LST) (CONS '|,| RESULT)))
        (GO WHILELABEL))
      (RETURN (REVERSE RESULT)))) 
(PUT 'INSERTPARENS 'NUMBER-OF-ARGS 1) 
(PUT 'INSERTPARENS 'DEFINED-ON-LINE '353) 
(PUT 'INSERTPARENS 'DEFINED-IN-FILE 'GENTRAN/UTILS.RED) 
(PUT 'INSERTPARENS 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE INSERTPARENS (EXP) (CONS '|(| (APPEND EXP (LIST '|)|)))) 
(PUT 'OPTYPE 'NUMBER-OF-ARGS 1) 
(PUT 'OPTYPE 'DEFINED-ON-LINE '356) 
(PUT 'OPTYPE 'DEFINED-IN-FILE 'GENTRAN/UTILS.RED) 
(PUT 'OPTYPE 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE OPTYPE (OP) (GET OP '*OPTYPE*)) 
(PUT 'MINUS '*OPTYPE* 'UNARY) 
(PUT 'NOT '*OPTYPE* 'UNARY) 
(PUT 'QUOTIENT '*OPTYPE* 'BINARY) 
(PUT 'EXPT '*OPTYPE* 'BINARY) 
(PUT 'EQUAL '*OPTYPE* 'BINARY) 
(PUT 'NEQ '*OPTYPE* 'BINARY) 
(PUT 'GREATERP '*OPTYPE* 'BINARY) 
(PUT 'GEQ '*OPTYPE* 'BINARY) 
(PUT 'LESSP '*OPTYPE* 'BINARY) 
(PUT 'LEQ '*OPTYPE* 'BINARY) 
(PUT 'PLUS '*OPTYPE* 'NARY) 
(PUT 'TIMES '*OPTYPE* 'NARY) 
(PUT 'AND '*OPTYPE* 'NARY) 
(PUT 'OR '*OPTYPE* 'NARY) 
(PUT 'SEQTOGP 'NUMBER-OF-ARGS 1) 
(PUT 'SEQTOGP 'DEFINED-ON-LINE '374) 
(PUT 'SEQTOGP 'DEFINED-IN-FILE 'GENTRAN/UTILS.RED) 
(PUT 'SEQTOGP 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE SEQTOGP (LST)
    (COND ((OR (NULL LST) (ATOM LST) (LISPSTMTP LST) (LISPSTMTGPP LST)) LST)
          ((AND (ONEP (LENGTH LST)) (PAIRP (CAR LST))) (SEQTOGP (CAR LST)))
          (T
           (MKSTMTGP NIL
            (PROG (ST FORALL-RESULT FORALL-ENDPTR)
              (SETQ ST LST)
              (COND ((NULL ST) (RETURN NIL)))
              (SETQ FORALL-RESULT
                      (SETQ FORALL-ENDPTR
                              (CONS ((LAMBDA (ST) (SEQTOGP ST)) (CAR ST))
                                    NIL)))
             LOOPLABEL
              (SETQ ST (CDR ST))
              (COND ((NULL ST) (RETURN FORALL-RESULT)))
              (RPLACD FORALL-ENDPTR
                      (CONS ((LAMBDA (ST) (SEQTOGP ST)) (CAR ST)) NIL))
              (SETQ FORALL-ENDPTR (CDR FORALL-ENDPTR))
              (GO LOOPLABEL)))))) 
(PUT 'STRINGTOATOM 'NUMBER-OF-ARGS 1) 
(PUT 'STRINGTOATOM 'DEFINED-ON-LINE '382) 
(PUT 'STRINGTOATOM 'DEFINED-IN-FILE 'GENTRAN/UTILS.RED) 
(PUT 'STRINGTOATOM 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE STRINGTOATOM (A)
    (INTERN
     (COMPRESS
      (PROG (C FORALL-RESULT FORALL-ENDPTR)
        (SETQ C (APPEND (CONS '|"| (EXPLODE2 A)) (LIST '|"|)))
       STARTOVER
        (COND ((NULL C) (RETURN NIL)))
        (SETQ FORALL-RESULT ((LAMBDA (C) (LIST '! C)) (CAR C)))
        (SETQ FORALL-ENDPTR (LASTPAIR FORALL-RESULT))
        (SETQ C (CDR C))
        (COND ((ATOM FORALL-ENDPTR) (GO STARTOVER)))
       LOOPLABEL
        (COND ((NULL C) (RETURN FORALL-RESULT)))
        (RPLACD FORALL-ENDPTR ((LAMBDA (C) (LIST '! C)) (CAR C)))
        (SETQ FORALL-ENDPTR (LASTPAIR FORALL-ENDPTR))
        (SETQ C (CDR C))
        (GO LOOPLABEL))))) 
(PUT 'STRIPQUOTES 'NUMBER-OF-ARGS 1) 
(PUT 'STRIPQUOTES 'DEFINED-ON-LINE '387) 
(PUT 'STRIPQUOTES 'DEFINED-IN-FILE 'GENTRAN/UTILS.RED) 
(PUT 'STRIPQUOTES 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE STRIPQUOTES (A)
    (COND
     ((ATOM A)
      (INTERN
       (COMPRESS
        (PROG (C FORALL-RESULT FORALL-ENDPTR)
          (SETQ C (EXPLODE2 A))
         STARTOVER
          (COND ((NULL C) (RETURN NIL)))
          (SETQ FORALL-RESULT ((LAMBDA (C) (LIST '! C)) (CAR C)))
          (SETQ FORALL-ENDPTR (LASTPAIR FORALL-RESULT))
          (SETQ C (CDR C))
          (COND ((ATOM FORALL-ENDPTR) (GO STARTOVER)))
         LOOPLABEL
          (COND ((NULL C) (RETURN FORALL-RESULT)))
          (RPLACD FORALL-ENDPTR ((LAMBDA (C) (LIST '! C)) (CAR C)))
          (SETQ FORALL-ENDPTR (LASTPAIR FORALL-ENDPTR))
          (SETQ C (CDR C))
          (GO LOOPLABEL)))))
     ((EQ (CAR A) 'QUOTE) (STRIPQUOTES (CADR A))) (T A))) 
(PUT 'FLUSHSPACES 'NUMBER-OF-ARGS 1) 
(PUT 'FLUSHSPACES 'DEFINED-ON-LINE '396) 
(PUT 'FLUSHSPACES 'DEFINED-IN-FILE 'GENTRAN/UTILS.RED) 
(PUT 'FLUSHSPACES 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE FLUSHSPACES (C)
    (PROGN
     (PROG ()
      WHILELABEL
       (COND ((NOT (SEPRP C)) (RETURN NIL)))
       (PROGN (COND ((EQ C $EOL$) (PTERPRI)) (T (PPRIN2 C))) (SETQ C (READCH)))
       (GO WHILELABEL))
     C)) 
(PUT 'FLUSHSPACESCOMMAS 'NUMBER-OF-ARGS 1) 
(PUT 'FLUSHSPACESCOMMAS 'DEFINED-ON-LINE '407) 
(PUT 'FLUSHSPACESCOMMAS 'DEFINED-IN-FILE 'GENTRAN/UTILS.RED) 
(PUT 'FLUSHSPACESCOMMAS 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE FLUSHSPACESCOMMAS (C)
    (PROGN
     (PROG ()
      WHILELABEL
       (COND ((NOT (OR (SEPRP C) (EQ C '|,|))) (RETURN NIL)))
       (PROGN (COND ((EQ C $EOL$) (PTERPRI)) (T (PPRIN2 C))) (SETQ C (READCH)))
       (GO WHILELABEL))
     C)) 
(ENDMODULE) 