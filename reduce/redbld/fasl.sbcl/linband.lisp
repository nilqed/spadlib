(cl:declaim (cl:optimize cl:debug cl:safety))
(cl:declaim (sb-ext:muffle-conditions sb-ext:compiler-note cl:style-warning))
(MODULE (LIST 'LINBAND)) 
(GLOBAL '(FORTCURRIND* GENSTMTNUM* GENSTMTINCR*)) 
(FLUID '(*PERIOD)) 
(FLUID '(*IMSL *NAG *ESSL)) 
(SWITCH (LIST 'IMSL 'NAG 'ESSL)) 
(SETQ *IMSL NIL) 
(SETQ *NAG NIL) 
(SETQ *ESSL NIL) 
(PUT 'ISON 'NUMBER-OF-ARGS 1) 
(PUT 'ISON 'DEFINED-ON-LINE '44) 
(PUT 'ISON 'DEFINED-IN-FILE 'FIDE/LINBAND.RED) 
(PUT 'ISON 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE ISON (X) (COND ((EVAL X) 1) (T 0))) 
(FLAG '(ISON) 'OPFN) 
(COND
 ((NULL (GETD 'GENTEMPST))
  (PROGN
   (PUT 'GENTEMPST 'NUMBER-OF-ARGS 0)
   (PUT 'GENTEMPST 'DEFINED-ON-LINE '51)
   (PUT 'GENTEMPST 'DEFINED-IN-FILE 'FIDE/LINBAND.RED)
   (PUT 'GENTEMPST 'PROCEDURE_TYPE '(ARROW UNIT GENERAL))
   (DE GENTEMPST NIL (LIST 'GENTEMP (XREAD T)))))) 
(GLOBAL '(TEMP*)) 
(SETQ TEMP* NIL) 
(PUT 'GENTEMP 'NUMBER-OF-ARGS 1) 
(PUT 'GENTEMP 'DEFINED-ON-LINE '57) 
(PUT 'GENTEMP 'DEFINED-IN-FILE 'FIDE/LINBAND.RED) 
(PUT 'GENTEMP 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE GENTEMP (U)
    (PROGN (SETQ TEMP* (CONS (CONS (CONS *PERIOD FORTCURRIND*) U) TEMP*)) NIL)) 
(PUT 'GENTEMP 'STAT 'GENTEMPST) 
(PUT 'GENTEMP 'FORMFN 'FORMGENTRAN) 
(LOAD-PACKAGE 'GENTRAN) 
(PUT 'OUTTEMP 'NUMBER-OF-ARGS 0) 
(PUT 'OUTTEMP 'DEFINED-ON-LINE '64) 
(PUT 'OUTTEMP 'DEFINED-IN-FILE 'FIDE/LINBAND.RED) 
(PUT 'OUTTEMP 'PROCEDURE_TYPE '(ARROW UNIT GENERAL)) 
(DE OUTTEMP NIL
    (PROG (PERIOD FORTIND)
      (SETQ PERIOD *PERIOD)
      (SETQ FORTIND FORTCURRIND*)
      (PROG (A)
        (SETQ A (REVERSE TEMP*))
       LAB
        (COND ((NULL A) (RETURN NIL)))
        ((LAMBDA (A)
           (PROGN
            (SETQ *PERIOD (CAAR A))
            (SETQ FORTCURRIND* (PROGN (SETQ ALGLIST* (CONS NIL NIL)) (CDAR A)))
            (EVAL (LIST 'GENTRAN (MKQUOTE (CDR A)) NIL))))
         (CAR A))
        (SETQ A (CDR A))
        (GO LAB))
      (SETQ TEMP* NIL)
      (SETQ *PERIOD PERIOD)
      (SETQ FORTCURRIND* (PROGN (SETQ ALGLIST* (CONS NIL NIL)) FORTIND))
      (RETURN NIL))) 
(PUT 'OUTTEMP 'STAT 'ENDSTAT) 
(FLAG '(OUTTEMP) 'EVAL) 
(AEVAL (NULL (SETQ *MODE 'ALGEBRAIC))) 
(PUT 'GENLINBANDSOL 'NUMBER-OF-ARGS 3) 
(FLAG '(GENLINBANDSOL) 'OPFN) 
(PUT 'GENLINBANDSOL 'DEFINED-ON-LINE '84) 
(PUT 'GENLINBANDSOL 'DEFINED-IN-FILE 'FIDE/LINBAND.RED) 
(PUT 'GENLINBANDSOL 'PROCEDURE_TYPE
     '(ARROW (TIMES GENERAL GENERAL GENERAL) GENERAL)) 
(DE GENLINBANDSOL (NLC NUC SYSTEM)
    (PROG (PVARS SVARS VAREQ FVEQ)
      (PROGN
       (PUT 'LIST 'EVFNO (GET 'LIST 'EVFN))
       (PUT 'LIST 'EVFN 'LISTNOEVAL)
       (PUT 'EQUAL 'PSOPFNO (GET 'EQUAL 'PSOPFN))
       (PUT 'EQUAL 'PSOPFN 'EQUALAEVAL))
      (SETQ SYSTEM (AEVAL (LIST 'EXPANDDO NLC NUC SYSTEM)))
      (SETQ VAREQ (AEVAL (LIST 'FIRST SYSTEM)))
      (SETQ PVARS (AEVAL (LIST 'LIST)))
      (SETQ SVARS (AEVAL (LIST 'FINDSVARS NUC VAREQ SYSTEM)))
      (AEVAL (OFF (LIST 'PERIOD)))
      (AEVAL (GENTRAN (LIST 'SETQ 'N '1) 'NIL))
      (AEVAL (GENTEMP (LIST 'SETQ 'N '1)))
      (AEVAL (ON (LIST 'PERIOD)))
      (SETK 'NCOL* (AEVAL (LIST 'PLUS NLC NUC 1)))
      (PROG (I)
        (SETQ I 1)
       LAB
        (COND ((|AMINUSP:| (LIST 'DIFFERENCE (AEVAL* NLC) I)) (RETURN NIL)))
        (PROGN
         (AEVAL*
          (LIST 'GENVAREQ PVARS SVARS VAREQ NLC
                (LIST 'PLUS (LIST 'DIFFERENCE NLC I) 1) 'PFIX*))
         (SETQ PVARS
                 (AEVAL*
                  (LIST 'APPEND PVARS
                        (LIST 'CONS (LIST 'FIRST VAREQ) (LIST 'LIST)))))
         (SETQ SYSTEM (AEVAL* (LIST 'NEXTVAREQSYS VAREQ SYSTEM)))
         (SETQ VAREQ (AEVAL* (LIST 'FIRST SYSTEM)))
         (SETQ SYSTEM (AEVAL* (LIST 'REST SYSTEM)))
         (AEVAL* (LIST 'GENNP1))
         (SETQ SVARS (AEVAL* (LIST 'FINDSVARS NUC VAREQ SYSTEM))))
        (SETQ I
                ((LAMBDA (FORALL-RESULT) (AEVAL* (LIST 'PLUS FORALL-RESULT 1)))
                 I))
        (GO LAB))
      (WHILE (EVALEQUAL (AEVAL* (LIST 'LENGTH SVARS)) (AEVAL* NUC))
             (PROGN
              (AEVAL* (LIST 'GENVAREQ PVARS SVARS VAREQ NLC 0 0))
              (SETQ PVARS
                      (AEVAL*
                       (LIST 'APPEND (LIST 'REST PVARS)
                             (LIST 'CONS (LIST 'FIRST VAREQ) (LIST 'LIST)))))
              (SETQ FVEQ (AEVAL* (LIST 'FIRST SYSTEM)))
              (SETQ SYSTEM (AEVAL* (LIST 'NEXTVAREQSYS VAREQ SYSTEM)))
              (SETQ VAREQ (AEVAL* (LIST 'FIRST SYSTEM)))
              (SETQ SYSTEM (AEVAL* (LIST 'REST SYSTEM)))
              (COND
               ((AND (EVALEQUAL (AEVAL* (LIST 'FFST SYSTEM)) (AEVAL* 'DO))
                     (EVALEQUAL (AEVAL* (LIST 'FIRST VAREQ))
                                (AEVAL* (LIST 'FIRST (LIST 'FRRFST SYSTEM))))
                     (EVALEQUAL (AEVAL* (LIST 'REST VAREQ))
                                (AEVAL* (LIST 'REST (LIST 'FRRFST SYSTEM)))))
                (SETQ PVARS
                        (AEVAL* (LIST 'FINDPVARS NLC (LIST 'FIRST SYSTEM)))))
               ((AND (EVALEQUAL (AEVAL* (LIST 'FIRST FVEQ)) (AEVAL* 'DO))
                     (NOT
                      (EVALEQUAL (AEVAL* (LIST 'FFST SYSTEM)) (AEVAL* 'DO))))
                (SETQ PVARS (AEVAL* (LIST 'LASTVARS NLC FVEQ)))))
              (AEVAL* (LIST 'GENNP1))
              (SETQ SVARS (AEVAL* (LIST 'FINDSVARS NUC VAREQ SYSTEM)))))
      (PROG (I)
        (SETQ I 1)
       LAB
        (COND ((|AMINUSP:| (LIST 'DIFFERENCE (AEVAL* NUC) I)) (RETURN NIL)))
        (PROGN
         (AEVAL* (LIST 'GENVAREQ PVARS SVARS VAREQ NLC I 'SFIX*))
         (SETQ PVARS
                 (AEVAL*
                  (LIST 'APPEND (LIST 'REST PVARS)
                        (LIST 'CONS (LIST 'FIRST VAREQ) (LIST 'LIST)))))
         (SETQ SYSTEM (AEVAL* (LIST 'NEXTVAREQSYS VAREQ SYSTEM)))
         (SETQ VAREQ (AEVAL* (LIST 'FIRST SYSTEM)))
         (SETQ SYSTEM (AEVAL* (LIST 'REST SYSTEM)))
         (COND
          ((NOT (EVALEQUAL (AEVAL* SVARS) (AEVAL* (LIST 'LIST))))
           (PROGN
            (SETQ SVARS (AEVAL* (LIST 'REST SVARS)))
            (AEVAL* (LIST 'GENNP1))))))
        (SETQ I
                ((LAMBDA (FORALL-RESULT) (AEVAL* (LIST 'PLUS FORALL-RESULT 1)))
                 I))
        (GO LAB))
      (AEVAL (OFF (LIST 'PERIOD)))
      (COND
       ((EVALEQUAL (AEVAL (LIST 'ISON '*IMSL)) 1)
        (SETQ PVARS (AEVAL (LIST 'GENCALL-IMSL NLC NUC))))
       ((EVALEQUAL (AEVAL (LIST 'ISON '*NAG)) 1)
        (SETQ PVARS (AEVAL (LIST 'GENCALL-NAG NLC NUC))))
       ((EVALEQUAL (AEVAL (LIST 'ISON '*ESSL)) 1)
        (SETQ PVARS (AEVAL (LIST 'GENCALL-ESSL NLC NUC))))
       (T (SETQ PVARS (AEVAL (LIST 'GENCALL-LINPACK NLC NUC)))))
      (AEVAL (ON (LIST 'PERIOD)))
      (AEVAL (OUTTEMP))
      (PROGN
       (PUT 'LIST 'EVFN (REMPROP 'LIST 'EVFNO))
       (PUT 'EQUAL 'PSOPFN (REMPROP 'EQUAL 'PSOPFNO))))) 
(PUT 'GENCALL-IMSL 'NUMBER-OF-ARGS 2) 
(FLAG '(GENCALL-IMSL) 'OPFN) 
(PUT 'GENCALL-IMSL 'DEFINED-ON-LINE '150) 
(PUT 'GENCALL-IMSL 'DEFINED-IN-FILE 'FIDE/LINBAND.RED) 
(PUT 'GENCALL-IMSL 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE GENCALL-IMSL (NLC NUC)
    (GENTRAN
     (LIST 'PROGN
           (LIST 'LITERAL 'TAB* '"call leqt1b(acof,n," (AEVAL NLC) '","
                 (AEVAL NUC) '",iacof,arhs,1,iarhs,0,xl,ier)" 'CR*)
           (LIST 'LITERAL
                 '"c  iacof is actual 1-st dimension of the acof array" 'CR*)
           (LIST 'LITERAL
                 '"c  iarhs is actual 1-st dimension of the arhs array" 'CR*)
           (LIST 'LITERAL '"c  xl is working array with size n*(nlc+1)" 'CR*)
           (LIST 'LITERAL
                 '"c  where n is number of equations nlc number of lower" 'CR*)
           (LIST 'LITERAL '"c  codiagonals" 'CR*)
           (LIST 'LITERAL
                 '"c  if ier=129( .ne.0) matrix acof is algorithmically singular"
                 'CR*)
           (LIST 'LITERAL 'TAB* '"if(ier.ne.0) call errout" 'CR*))
     'NIL)) 
(PUT 'GENCALL-LINPACK 'NUMBER-OF-ARGS 2) 
(FLAG '(GENCALL-LINPACK) 'OPFN) 
(PUT 'GENCALL-LINPACK 'DEFINED-ON-LINE '165) 
(PUT 'GENCALL-LINPACK 'DEFINED-IN-FILE 'FIDE/LINBAND.RED) 
(PUT 'GENCALL-LINPACK 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE GENCALL-LINPACK (NLC NUC)
    (COND
     ((AND (EVALEQUAL (AEVAL 'NCOL*) 3) (EVALEQUAL (AEVAL NLC) 1))
      (AEVAL (LIST 'GENCALL-LINPACK-TRID NLC NUC)))
     (T
      (AEVAL
       (GENTRAN
        (LIST 'PROGN
              (LIST 'LITERAL 'TAB* '"call dgbfa(acof,iacof,n," (AEVAL NLC) '","
                    (AEVAL NUC) '",ipvt,ier)" 'CR*)
              (LIST 'LITERAL '"c  n is number of equations" 'CR*)
              (LIST 'LITERAL '"c  acof is array of dimension (iacof,p), p >= n"
                    'CR*)
              (LIST 'LITERAL '"c     iacof >= " (AEVAL (LIST 'PLUS NLC 'NCOL*))
                    'CR*)
              (LIST 'LITERAL '"c  ipvt is array of dimension at least (n)"
                    'CR*)
              (LIST 'LITERAL
                    '"c  if (ier.ne.0) matrix acof is algorithmically singular"
                    'CR*)
              (LIST 'LITERAL 'TAB* '"if(ier.ne.0) call errout" 'CR*)
              (LIST 'LITERAL 'TAB* '"call dgbsl(acof,iacof,n," (AEVAL NLC) '","
                    (AEVAL NUC) '",ipvt,arhs,0)" 'CR*))
        'NIL))))) 
(PUT 'GENCALL-LINPACK-TRID 'NUMBER-OF-ARGS 2) 
(FLAG '(GENCALL-LINPACK-TRID) 'OPFN) 
(PUT 'GENCALL-LINPACK-TRID 'DEFINED-ON-LINE '180) 
(PUT 'GENCALL-LINPACK-TRID 'DEFINED-IN-FILE 'FIDE/LINBAND.RED) 
(PUT 'GENCALL-LINPACK-TRID 'PROCEDURE_TYPE
     '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE GENCALL-LINPACK-TRID (NLC NUC)
    (GENTRAN
     (LIST 'PROGN
           (LIST 'LITERAL 'TAB* '"call dgtsl(n,alcd,ad,aucd,arhs,ier)" 'CR*)
           (LIST 'LITERAL '"c  n is number of equations" 'CR*)
           (LIST 'LITERAL
                 '"c  alcd,ad,aucd,arhs are arrays of dimension at least (n)"
                 'CR*)
           (LIST 'LITERAL
                 '"c  if (ier.ne.0) matrix acof is algorithmically singular"
                 'CR*)
           (LIST 'LITERAL 'TAB* '"if(ier.ne.0) call errout" 'CR*))
     'NIL)) 
(PUT 'GENCALL-ESSL 'NUMBER-OF-ARGS 2) 
(FLAG '(GENCALL-ESSL) 'OPFN) 
(PUT 'GENCALL-ESSL 'DEFINED-ON-LINE '190) 
(PUT 'GENCALL-ESSL 'DEFINED-IN-FILE 'FIDE/LINBAND.RED) 
(PUT 'GENCALL-ESSL 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE GENCALL-ESSL (NLC NUC)
    (COND
     ((AND (EVALEQUAL (AEVAL 'NCOL*) 3) (EVALEQUAL (AEVAL NLC) 1))
      (AEVAL (LIST 'GENCALL-ESSL-TRID NLC NUC)))
     (T
      (AEVAL
       (GENTRAN
        (LIST 'PROGN
              (LIST 'LITERAL 'TAB* '"call dgbf(acof,iacof,n," (AEVAL NLC) '","
                    (AEVAL NUC) '",ipvt)" 'CR*)
              (LIST 'LITERAL '"c  n is number of equations" 'CR*)
              (LIST 'LITERAL '"c  acof and arhs are double precision type"
                    'CR*)
              (LIST 'LITERAL
                    '"c  for single precision change dgbf to sgbf and "
                    '"dgbs to sgbs" 'CR*)
              (LIST 'LITERAL '"c  acof is array of dimension (iacof,p), p >= n"
                    'CR*)
              (LIST 'LITERAL '"c     iacof >= "
                    (AEVAL (LIST 'PLUS NLC 'NCOL* 15)) 'CR*)
              (LIST 'LITERAL '"c  arhs is array of dimension at least (n)"
                    'CR*)
              (LIST 'LITERAL
                    '"c  ipvt is integer array of dimension at least (n)" 'CR*)
              (LIST 'LITERAL 'TAB* '"call dgbs(acof,iacof,n," (AEVAL NLC) '","
                    (AEVAL NUC) '",ipvt,arhs)" 'CR*))
        'NIL))))) 
(PUT 'GENCALL-ESSL-TRID 'NUMBER-OF-ARGS 2) 
(FLAG '(GENCALL-ESSL-TRID) 'OPFN) 
(PUT 'GENCALL-ESSL-TRID 'DEFINED-ON-LINE '206) 
(PUT 'GENCALL-ESSL-TRID 'DEFINED-IN-FILE 'FIDE/LINBAND.RED) 
(PUT 'GENCALL-ESSL-TRID 'PROCEDURE_TYPE
     '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE GENCALL-ESSL-TRID (NLC NUC)
    (GENTRAN
     (LIST 'PROGN
           (LIST 'LITERAL 'TAB* '"call dgtf(n,alcd,ad,aucd,af,ipvt)" 'CR*)
           (LIST 'LITERAL '"c  n is number of equations" 'CR*)
           (LIST 'LITERAL
                 '"c  alcd,ad,aucd,af,arhs are arrays of dimension at least (n)"
                 'CR*)
           (LIST 'LITERAL '"c  these arrays are double precision type" 'CR*)
           (LIST 'LITERAL '"c  for single precision change dgtf to sgtf and "
                 '"dgts to sgts" 'CR*)
           (LIST 'LITERAL
                 '"c  ipvt is integer array of dimension at least (n+3)/8"
                 'CR*)
           (LIST 'LITERAL 'TAB* '"call dgts(n,alcd,ad,aucd,af,ipvt,arhs)"
                 'CR*))
     'NIL)) 
(PUT 'GENCALL-NAG 'NUMBER-OF-ARGS 2) 
(FLAG '(GENCALL-NAG) 'OPFN) 
(PUT 'GENCALL-NAG 'DEFINED-ON-LINE '219) 
(PUT 'GENCALL-NAG 'DEFINED-IN-FILE 'FIDE/LINBAND.RED) 
(PUT 'GENCALL-NAG 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE GENCALL-NAG (NLC NUC)
    (COND
     ((AND (EVALEQUAL (AEVAL 'NCOL*) 3) (EVALEQUAL (AEVAL NLC) 1))
      (AEVAL (LIST 'GENCALL-NAG-TRID NLC NUC)))
     (T
      (AEVAL
       (GENTRAN
        (LIST 'PROGN (LIST 'SETQ 'IER '0)
              (LIST 'LITERAL 'TAB* '"call f01lbf(n," (AEVAL NLC) '","
                    (AEVAL NUC) '",acof,iacof,al,ial,in,iv,ier)" 'CR*)
              (LIST 'LITERAL '"c  n is number of equations" 'CR*)
              (LIST 'LITERAL '"c  acof is array of dimension (iacof,p), p >= n"
                    'CR*)
              (LIST 'LITERAL '"c      iacof >= min(n," (AEVAL 'NCOL*) '")"
                    'CR*)
              (LIST 'LITERAL '"c  al is array of dimension (ial,p), p >= n"
                    'CR*)
              (LIST 'LITERAL '"c      ial >= max(1," (AEVAL NLC) '")" 'CR*)
              (LIST 'LITERAL
                    '"c  in is integer array of dimension at least (n)" 'CR*)
              (LIST 'LITERAL 'TAB* '"if(ier.ne.0) call errout" 'CR*)
              (LIST 'LITERAL 'TAB* '"call f04ldf(n," (AEVAL NLC) '","
                    (AEVAL NUC) '",1,acof,iacof,al,ial,in,arhs,iarhs,ier)"
                    'CR*)
              (LIST 'LITERAL
                    '"c  arhs is array of dimension (iarhs), iarhs >= n" 'CR*)
              (LIST 'LITERAL 'TAB* '"if(ier.ne.0) call errout" 'CR*))
        'NIL))))) 
(PUT 'GENCALL-NAG-TRID 'NUMBER-OF-ARGS 2) 
(FLAG '(GENCALL-NAG-TRID) 'OPFN) 
(PUT 'GENCALL-NAG-TRID 'DEFINED-ON-LINE '237) 
(PUT 'GENCALL-NAG-TRID 'DEFINED-IN-FILE 'FIDE/LINBAND.RED) 
(PUT 'GENCALL-NAG-TRID 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE GENCALL-NAG-TRID (NLC NUC)
    (GENTRAN
     (LIST 'PROGN (LIST 'SETQ 'IER '0)
           (LIST 'LITERAL 'TAB*
                 '"call f01lef(n,ad,0.,aucd,alcd,1.e-10,au2cd,in,ier)" 'CR*)
           (LIST 'LITERAL '"c  n is number of equations" 'CR*)
           (LIST 'LITERAL
                 '"c  alcd,ad,aucd,au2cd,arhs are arrays of dimension at least (n)"
                 'CR*)
           (LIST 'LITERAL '"c  in is integer array of dimension at least (n)"
                 'CR*)
           (LIST 'LITERAL 'TAB* '"if(ier.ne.0 .or. in(n).ne.0) call errout"
                 'CR*)
           (LIST 'LITERAL 'TAB*
                 '"call f04lef(1,n,ad,aucd,alcd,au2cd,in,arhs,0.,ier)" 'CR*)
           (LIST 'LITERAL 'TAB* '"if(ier.ne.0) call errout" 'CR*))
     'NIL)) 
(PUT 'GENNP1 'NUMBER-OF-ARGS 0) 
(FLAG '(GENNP1) 'OPFN) 
(PUT 'GENNP1 'DEFINED-ON-LINE '251) 
(PUT 'GENNP1 'DEFINED-IN-FILE 'FIDE/LINBAND.RED) 
(PUT 'GENNP1 'PROCEDURE_TYPE '(ARROW UNIT GENERAL)) 
(DE GENNP1 NIL
    (PROGN
     (AEVAL (OFF (LIST 'PERIOD)))
     (AEVAL (GENTRAN (LIST 'SETQ 'N (LIST 'PLUS 'N '1)) 'NIL))
     (AEVAL (GENTEMP (LIST 'SETQ 'N (LIST 'PLUS 'N '1))))
     (AEVAL (ON (LIST 'PERIOD))))) 
(NULL (SETQ *MODE 'SYMBOLIC)) 
(PUT 'SIMPSUBE 'NUMBER-OF-ARGS 1) 
(PUT 'SIMPSUBE 'DEFINED-ON-LINE '261) 
(PUT 'SIMPSUBE 'DEFINED-IN-FILE 'FIDE/LINBAND.RED) 
(PUT 'SIMPSUBE 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE SIMPSUBE (U)
    (PROG (X)
     A
      (COND ((NULL (CDR U)) (GO D))
            ((NULL (EQEXPR (CAR U))) (ERRPRI2 (CAR U) T)))
      (SETQ X (CONS (LIST 'EQUAL (REVAL1 (CADAR U) T) (CADDAR U)) X))
      (SETQ U (CDR U))
      (GO A)
     D
      (SETQ X (REVERSE (CONS (CAR U) X)))
      (SETQ X (SUBEVAL X))
      (RETURN X))) 
(PUT 'SUBE 'PSOPFN 'SIMPSUBE) 
(AEVAL (NULL (SETQ *MODE 'ALGEBRAIC))) 
(PUT 'FFST 'NUMBER-OF-ARGS 1) 
(FLAG '(FFST) 'OPFN) 
(PUT 'FFST 'DEFINED-ON-LINE '280) 
(PUT 'FFST 'DEFINED-IN-FILE 'FIDE/LINBAND.RED) 
(PUT 'FFST 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE FFST (U) (LIST 'FIRST (LIST 'FIRST U))) 
(PUT 'FRST 'NUMBER-OF-ARGS 1) 
(FLAG '(FRST) 'OPFN) 
(PUT 'FRST 'DEFINED-ON-LINE '282) 
(PUT 'FRST 'DEFINED-IN-FILE 'FIDE/LINBAND.RED) 
(PUT 'FRST 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE FRST (U) (LIST 'FIRST (LIST 'REST U))) 
(PUT 'RFST 'NUMBER-OF-ARGS 1) 
(FLAG '(RFST) 'OPFN) 
(PUT 'RFST 'DEFINED-ON-LINE '284) 
(PUT 'RFST 'DEFINED-IN-FILE 'FIDE/LINBAND.RED) 
(PUT 'RFST 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE RFST (U) (LIST 'REST (LIST 'FIRST U))) 
(PUT 'RRST 'NUMBER-OF-ARGS 1) 
(FLAG '(RRST) 'OPFN) 
(PUT 'RRST 'DEFINED-ON-LINE '286) 
(PUT 'RRST 'DEFINED-IN-FILE 'FIDE/LINBAND.RED) 
(PUT 'RRST 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE RRST (U) (LIST 'REST (LIST 'REST U))) 
(PUT 'FFFST 'NUMBER-OF-ARGS 1) 
(FLAG '(FFFST) 'OPFN) 
(PUT 'FFFST 'DEFINED-ON-LINE '289) 
(PUT 'FFFST 'DEFINED-IN-FILE 'FIDE/LINBAND.RED) 
(PUT 'FFFST 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE FFFST (U) (LIST 'FIRST (LIST 'FFST U))) 
(PUT 'FFRST 'NUMBER-OF-ARGS 1) 
(FLAG '(FFRST) 'OPFN) 
(PUT 'FFRST 'DEFINED-ON-LINE '291) 
(PUT 'FFRST 'DEFINED-IN-FILE 'FIDE/LINBAND.RED) 
(PUT 'FFRST 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE FFRST (U) (LIST 'FIRST (LIST 'FRST U))) 
(PUT 'FRFST 'NUMBER-OF-ARGS 1) 
(FLAG '(FRFST) 'OPFN) 
(PUT 'FRFST 'DEFINED-ON-LINE '293) 
(PUT 'FRFST 'DEFINED-IN-FILE 'FIDE/LINBAND.RED) 
(PUT 'FRFST 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE FRFST (U) (LIST 'FIRST (LIST 'RFST U))) 
(PUT 'FRRST 'NUMBER-OF-ARGS 1) 
(FLAG '(FRRST) 'OPFN) 
(PUT 'FRRST 'DEFINED-ON-LINE '295) 
(PUT 'FRRST 'DEFINED-IN-FILE 'FIDE/LINBAND.RED) 
(PUT 'FRRST 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE FRRST (U) (LIST 'FIRST (LIST 'RRST U))) 
(PUT 'RFFST 'NUMBER-OF-ARGS 1) 
(FLAG '(RFFST) 'OPFN) 
(PUT 'RFFST 'DEFINED-ON-LINE '297) 
(PUT 'RFFST 'DEFINED-IN-FILE 'FIDE/LINBAND.RED) 
(PUT 'RFFST 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE RFFST (U) (LIST 'REST (LIST 'FFST U))) 
(PUT 'RFRST 'NUMBER-OF-ARGS 1) 
(FLAG '(RFRST) 'OPFN) 
(PUT 'RFRST 'DEFINED-ON-LINE '299) 
(PUT 'RFRST 'DEFINED-IN-FILE 'FIDE/LINBAND.RED) 
(PUT 'RFRST 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE RFRST (U) (LIST 'REST (LIST 'FRST U))) 
(PUT 'RRFST 'NUMBER-OF-ARGS 1) 
(FLAG '(RRFST) 'OPFN) 
(PUT 'RRFST 'DEFINED-ON-LINE '301) 
(PUT 'RRFST 'DEFINED-IN-FILE 'FIDE/LINBAND.RED) 
(PUT 'RRFST 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE RRFST (U) (LIST 'REST (LIST 'RFST U))) 
(PUT 'RRRST 'NUMBER-OF-ARGS 1) 
(FLAG '(RRRST) 'OPFN) 
(PUT 'RRRST 'DEFINED-ON-LINE '303) 
(PUT 'RRRST 'DEFINED-IN-FILE 'FIDE/LINBAND.RED) 
(PUT 'RRRST 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE RRRST (U) (LIST 'REST (LIST 'RRST U))) 
(PUT 'FFFFST 'NUMBER-OF-ARGS 1) 
(FLAG '(FFFFST) 'OPFN) 
(PUT 'FFFFST 'DEFINED-ON-LINE '306) 
(PUT 'FFFFST 'DEFINED-IN-FILE 'FIDE/LINBAND.RED) 
(PUT 'FFFFST 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE FFFFST (U) (LIST 'FFST (LIST 'FFST U))) 
(PUT 'FFFRST 'NUMBER-OF-ARGS 1) 
(FLAG '(FFFRST) 'OPFN) 
(PUT 'FFFRST 'DEFINED-ON-LINE '308) 
(PUT 'FFFRST 'DEFINED-IN-FILE 'FIDE/LINBAND.RED) 
(PUT 'FFFRST 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE FFFRST (U) (LIST 'FFST (LIST 'FRST U))) 
(PUT 'FFRFST 'NUMBER-OF-ARGS 1) 
(FLAG '(FFRFST) 'OPFN) 
(PUT 'FFRFST 'DEFINED-ON-LINE '310) 
(PUT 'FFRFST 'DEFINED-IN-FILE 'FIDE/LINBAND.RED) 
(PUT 'FFRFST 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE FFRFST (U) (LIST 'FFST (LIST 'RFST U))) 
(PUT 'FFRRST 'NUMBER-OF-ARGS 1) 
(FLAG '(FFRRST) 'OPFN) 
(PUT 'FFRRST 'DEFINED-ON-LINE '312) 
(PUT 'FFRRST 'DEFINED-IN-FILE 'FIDE/LINBAND.RED) 
(PUT 'FFRRST 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE FFRRST (U) (LIST 'FFST (LIST 'RRST U))) 
(PUT 'FRFFST 'NUMBER-OF-ARGS 1) 
(FLAG '(FRFFST) 'OPFN) 
(PUT 'FRFFST 'DEFINED-ON-LINE '314) 
(PUT 'FRFFST 'DEFINED-IN-FILE 'FIDE/LINBAND.RED) 
(PUT 'FRFFST 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE FRFFST (U) (LIST 'FRST (LIST 'FFST U))) 
(PUT 'FRFRST 'NUMBER-OF-ARGS 1) 
(FLAG '(FRFRST) 'OPFN) 
(PUT 'FRFRST 'DEFINED-ON-LINE '316) 
(PUT 'FRFRST 'DEFINED-IN-FILE 'FIDE/LINBAND.RED) 
(PUT 'FRFRST 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE FRFRST (U) (LIST 'FRST (LIST 'FRST U))) 
(PUT 'FRRFST 'NUMBER-OF-ARGS 1) 
(FLAG '(FRRFST) 'OPFN) 
(PUT 'FRRFST 'DEFINED-ON-LINE '318) 
(PUT 'FRRFST 'DEFINED-IN-FILE 'FIDE/LINBAND.RED) 
(PUT 'FRRFST 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE FRRFST (U) (LIST 'FRST (LIST 'RFST U))) 
(PUT 'FRRRST 'NUMBER-OF-ARGS 1) 
(FLAG '(FRRRST) 'OPFN) 
(PUT 'FRRRST 'DEFINED-ON-LINE '320) 
(PUT 'FRRRST 'DEFINED-IN-FILE 'FIDE/LINBAND.RED) 
(PUT 'FRRRST 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE FRRRST (U) (LIST 'FRST (LIST 'RRST U))) 
(PUT 'RFFFST 'NUMBER-OF-ARGS 1) 
(FLAG '(RFFFST) 'OPFN) 
(PUT 'RFFFST 'DEFINED-ON-LINE '322) 
(PUT 'RFFFST 'DEFINED-IN-FILE 'FIDE/LINBAND.RED) 
(PUT 'RFFFST 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE RFFFST (U) (LIST 'RFST (LIST 'FFST U))) 
(PUT 'RFFRST 'NUMBER-OF-ARGS 1) 
(FLAG '(RFFRST) 'OPFN) 
(PUT 'RFFRST 'DEFINED-ON-LINE '324) 
(PUT 'RFFRST 'DEFINED-IN-FILE 'FIDE/LINBAND.RED) 
(PUT 'RFFRST 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE RFFRST (U) (LIST 'RFST (LIST 'FRST U))) 
(PUT 'RFRFST 'NUMBER-OF-ARGS 1) 
(FLAG '(RFRFST) 'OPFN) 
(PUT 'RFRFST 'DEFINED-ON-LINE '326) 
(PUT 'RFRFST 'DEFINED-IN-FILE 'FIDE/LINBAND.RED) 
(PUT 'RFRFST 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE RFRFST (U) (LIST 'RFST (LIST 'RFST U))) 
(PUT 'RFRRST 'NUMBER-OF-ARGS 1) 
(FLAG '(RFRRST) 'OPFN) 
(PUT 'RFRRST 'DEFINED-ON-LINE '328) 
(PUT 'RFRRST 'DEFINED-IN-FILE 'FIDE/LINBAND.RED) 
(PUT 'RFRRST 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE RFRRST (U) (LIST 'RFST (LIST 'RRST U))) 
(PUT 'RRFFST 'NUMBER-OF-ARGS 1) 
(FLAG '(RRFFST) 'OPFN) 
(PUT 'RRFFST 'DEFINED-ON-LINE '330) 
(PUT 'RRFFST 'DEFINED-IN-FILE 'FIDE/LINBAND.RED) 
(PUT 'RRFFST 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE RRFFST (U) (LIST 'RRST (LIST 'FFST U))) 
(PUT 'RRFRST 'NUMBER-OF-ARGS 1) 
(FLAG '(RRFRST) 'OPFN) 
(PUT 'RRFRST 'DEFINED-ON-LINE '332) 
(PUT 'RRFRST 'DEFINED-IN-FILE 'FIDE/LINBAND.RED) 
(PUT 'RRFRST 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE RRFRST (U) (LIST 'RRST (LIST 'FRST U))) 
(PUT 'RRRFST 'NUMBER-OF-ARGS 1) 
(FLAG '(RRRFST) 'OPFN) 
(PUT 'RRRFST 'DEFINED-ON-LINE '334) 
(PUT 'RRRFST 'DEFINED-IN-FILE 'FIDE/LINBAND.RED) 
(PUT 'RRRFST 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE RRRFST (U) (LIST 'RRST (LIST 'RFST U))) 
(PUT 'RRRRST 'NUMBER-OF-ARGS 1) 
(FLAG '(RRRRST) 'OPFN) 
(PUT 'RRRRST 'DEFINED-ON-LINE '336) 
(PUT 'RRRRST 'DEFINED-IN-FILE 'FIDE/LINBAND.RED) 
(PUT 'RRRRST 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE RRRRST (U) (LIST 'RRST (LIST 'RRST U))) 
(PUT 'FINDSVARS 'NUMBER-OF-ARGS 3) 
(FLAG '(FINDSVARS) 'OPFN) 
(PUT 'FINDSVARS 'DEFINED-ON-LINE '339) 
(PUT 'FINDSVARS 'DEFINED-IN-FILE 'FIDE/LINBAND.RED) 
(PUT 'FINDSVARS 'PROCEDURE_TYPE
     '(ARROW (TIMES GENERAL GENERAL GENERAL) GENERAL)) 
(DE FINDSVARS (NUC VAREQ SYSTEM)
    (COND
     ((EVALEQUAL (AEVAL (LIST 'FFST SYSTEM)) (AEVAL 'DO))
      (AEVAL (LIST 'FINDSVARSDO NUC VAREQ (LIST 'FIRST SYSTEM))))
     (T (AEVAL (LIST 'FINDSVARS1 NUC (LIST 'REST SYSTEM)))))) 
(PUT 'FINDSVARS1 'NUMBER-OF-ARGS 2) 
(FLAG '(FINDSVARS1) 'OPFN) 
(PUT 'FINDSVARS1 'DEFINED-ON-LINE '345) 
(PUT 'FINDSVARS1 'DEFINED-IN-FILE 'FIDE/LINBAND.RED) 
(PUT 'FINDSVARS1 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE FINDSVARS1 (NUC SYSTEM)
    (COND
     ((OR (EVALEQUAL (AEVAL NUC) 0)
          (EVALEQUAL (AEVAL SYSTEM) (AEVAL (LIST 'LIST))))
      (AEVAL (LIST 'LIST)))
     ((EVALEQUAL (AEVAL (LIST 'FFST SYSTEM)) (AEVAL 'DO))
      (AEVAL (LIST 'FSVARS1DO NUC (LIST 'FIRST SYSTEM))))
     (T
      (AEVAL
       (LIST 'CONS (LIST 'FFST SYSTEM)
             (LIST 'FINDSVARS1 (LIST 'DIFFERENCE NUC 1)
                   (LIST 'REST SYSTEM))))))) 
(PUT 'FSVARS1DO 'NUMBER-OF-ARGS 2) 
(FLAG '(FSVARS1DO) 'OPFN) 
(PUT 'FSVARS1DO 'DEFINED-ON-LINE '351) 
(PUT 'FSVARS1DO 'DEFINED-IN-FILE 'FIDE/LINBAND.RED) 
(PUT 'FSVARS1DO 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE FSVARS1DO (NUC CYKL)
    (PROG (ID FROM STEP SYST X Y)
      (SETQ CYKL (AEVAL (LIST 'REST CYKL)))
      (SETQ SYST (AEVAL (LIST 'FIRST CYKL)))
      (SETQ ID (AEVAL (LIST 'FIRST SYST)))
      (SETQ FROM (AEVAL (LIST 'FRST SYST)))
      (SETQ STEP (AEVAL (LIST 'FRRRST SYST)))
      (SETQ SYST (AEVAL (LIST 'REST CYKL)))
      (SETQ X (AEVAL (LIST 'LIST)))
     A
      (SETQ Y (AEVAL (LIST 'SUBE (LIST 'EQUAL ID FROM) (LIST 'FFST SYST))))
      (SETQ X (AEVAL (LIST 'CONS Y X)))
      (SETQ NUC (AEVAL (LIST 'DIFFERENCE NUC 1)))
      (COND ((EVALEQUAL (AEVAL NUC) 0) (GO R)))
      (SETQ SYST (AEVAL (LIST 'REST SYST)))
      (COND ((NOT (EVALEQUAL (AEVAL SYST) (AEVAL (LIST 'LIST)))) (GO A)))
      (SETQ SYST (AEVAL (LIST 'REST CYKL)))
      (SETQ FROM (AEVAL (LIST 'PLUS FROM STEP)))
      (GO A)
     R
      (SETQ X (AEVAL (LIST 'REVERSE X)))
      (RETURN (AEVAL X)))) 
(PUT 'FINDSVARSDO 'NUMBER-OF-ARGS 3) 
(FLAG '(FINDSVARSDO) 'OPFN) 
(PUT 'FINDSVARSDO 'DEFINED-ON-LINE '375) 
(PUT 'FINDSVARSDO 'DEFINED-IN-FILE 'FIDE/LINBAND.RED) 
(PUT 'FINDSVARSDO 'PROCEDURE_TYPE
     '(ARROW (TIMES GENERAL GENERAL GENERAL) GENERAL)) 
(DE FINDSVARSDO (NUC VAREQ CYKL)
    (PROG (ID ADD1 STEP SYST X Y)
      (SETQ CYKL (AEVAL (LIST 'REST CYKL)))
      (SETQ SYST (AEVAL (LIST 'FIRST CYKL)))
      (SETQ ID (AEVAL (LIST 'FIRST SYST)))
      (SETQ STEP (AEVAL (LIST 'FRRRST SYST)))
      (SETQ SYST (AEVAL (LIST 'REST CYKL)))
      (WHILE
       (NOT
        (AND
         (EVALEQUAL (AEVAL* (LIST 'FIRST VAREQ)) (AEVAL* (LIST 'FFST SYST)))
         (EVALEQUAL (AEVAL* (LIST 'REST VAREQ)) (AEVAL* (LIST 'RFST SYST)))))
       (SETQ SYST (AEVAL* (LIST 'REST SYST))))
      (SETQ SYST (AEVAL (LIST 'REST SYST)))
      (SETQ ADD1 (AEVAL 0))
      (SETQ X (AEVAL (LIST 'LIST)))
     A
      (COND ((EVALEQUAL (AEVAL SYST) (AEVAL (LIST 'LIST))) (GO B)))
      (SETQ Y
              (AEVAL
               (LIST 'SUBE (LIST 'EQUAL ID (LIST 'PLUS ID ADD1))
                     (LIST 'FFST SYST))))
      (SETQ X (AEVAL (LIST 'CONS Y X)))
      (SETQ NUC (AEVAL (LIST 'DIFFERENCE NUC 1)))
      (COND ((EVALEQUAL (AEVAL NUC) 0) (GO R)))
      (SETQ SYST (AEVAL (LIST 'REST SYST)))
      (GO A)
     B
      (SETQ SYST (AEVAL (LIST 'REST CYKL)))
      (SETQ ADD1 (AEVAL (LIST 'PLUS ADD1 STEP)))
      (GO A)
     R
      (SETQ X (AEVAL (LIST 'REVERSE X)))
      (RETURN (AEVAL X)))) 
(PUT 'EXPANDDO 'NUMBER-OF-ARGS 3) 
(FLAG '(EXPANDDO) 'OPFN) 
(PUT 'EXPANDDO 'DEFINED-ON-LINE '404) 
(PUT 'EXPANDDO 'DEFINED-IN-FILE 'FIDE/LINBAND.RED) 
(PUT 'EXPANDDO 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL GENERAL) GENERAL)) 
(DE EXPANDDO (NLC NUC SYSTEM)
    (PROG (X)
      (SETQ X (AEVAL (LIST 'LIST)))
     A
      (COND ((EVALEQUAL (AEVAL SYSTEM) (AEVAL (LIST 'LIST))) (GO R)))
      (COND
       ((EVALEQUAL (AEVAL (LIST 'FFST SYSTEM)) (AEVAL 'DO))
        (SETQ X
                (AEVAL
                 (LIST 'APPEND (LIST 'EXPDDO NLC NUC (LIST 'FIRST SYSTEM))
                       X))))
       (T (SETQ X (AEVAL (LIST 'CONS (LIST 'FIRST SYSTEM) X)))))
      (SETQ SYSTEM (AEVAL (LIST 'REST SYSTEM)))
      (GO A)
     R
      (SETQ X (AEVAL (LIST 'REVERSE X)))
      (RETURN (AEVAL X)))) 
(PUT 'EXPDDO 'NUMBER-OF-ARGS 3) 
(FLAG '(EXPDDO) 'OPFN) 
(PUT 'EXPDDO 'DEFINED-ON-LINE '421) 
(PUT 'EXPDDO 'DEFINED-IN-FILE 'FIDE/LINBAND.RED) 
(PUT 'EXPDDO 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL GENERAL) GENERAL)) 
(DE EXPDDO (NLC NUC CYKL)
    (PROG (ID FROM TO1 STEP SYST LSYST NS X Y BN)
      (SETQ CYKL (AEVAL (LIST 'REST CYKL)))
      (SETQ SYST (AEVAL (LIST 'FIRST CYKL)))
      (SETQ ID (AEVAL (LIST 'FIRST SYST)))
      (SETQ FROM (AEVAL (LIST 'FRST SYST)))
      (SETQ TO1 (AEVAL (LIST 'FRRST SYST)))
      (SETQ STEP (AEVAL (LIST 'FRRRST SYST)))
      (SETQ SYST (AEVAL (LIST 'REST CYKL)))
      (SETQ LSYST (AEVAL (LIST 'LENGTH SYST)))
      (SETQ NS (AEVAL (LIST 'QUOTIENT1 NLC LSYST)))
      (COND
       ((EVALGREATERP (AEVAL NLC) (AEVAL (LIST 'TIMES NS LSYST)))
        (SETQ NS (AEVAL (LIST 'PLUS NS 1)))))
      (SETQ BN (AEVAL 0))
      (SETQ X (AEVAL (LIST 'LIST)))
     A
      (SETQ Y
              (AEVAL
               (LIST 'CONS (LIST 'SUBE (LIST 'EQUAL ID FROM) (LIST 'FFST SYST))
                     (LIST 'CONS
                           (LIST 'SUBE (LIST 'EQUAL ID FROM)
                                 (LIST 'FRFST SYST))
                           (LIST 'LIST)))))
      (SETQ X (AEVAL (LIST 'CONS Y X)))
      (SETQ SYST (AEVAL (LIST 'REST SYST)))
      (COND ((NOT (EVALEQUAL (AEVAL SYST) (AEVAL (LIST 'LIST)))) (GO A)))
      (SETQ NS (AEVAL (LIST 'DIFFERENCE NS 1)))
      (SETQ FROM (AEVAL (LIST 'PLUS FROM STEP)))
      (COND ((EVALEQUAL (AEVAL NS) 0) (GO B)))
      (SETQ SYST (AEVAL (LIST 'REST CYKL)))
      (GO A)
     B
      (COND ((EVALEQUAL (AEVAL BN) 1) (GO R)))
      (SETQ SYST (AEVAL (LIST 'REST CYKL)))
      (SETQ NS (AEVAL (LIST 'QUOTIENT1 NUC LSYST)))
      (COND
       ((EVALGREATERP (AEVAL NUC) (AEVAL (LIST 'TIMES NS LSYST)))
        (SETQ NS (AEVAL (LIST 'PLUS NS 1)))))
      (SETQ TO1 (AEVAL (LIST 'DIFFERENCE TO1 (LIST 'TIMES NS STEP))))
      (SETQ Y
              (AEVAL
               (LIST 'CONS 'DO
                     (LIST 'CONS
                           (LIST 'CONS ID
                                 (LIST 'CONS FROM
                                       (LIST 'CONS TO1
                                             (LIST 'CONS STEP (LIST 'LIST)))))
                           SYST))))
      (SETQ X (AEVAL (LIST 'CONS Y X)))
      (SETQ FROM (AEVAL (LIST 'PLUS TO1 STEP)))
      (SETQ BN (AEVAL 1))
      (GO A)
     R
      (RETURN (AEVAL X)))) 
(PUT 'QUOTIENT1 'NUMBER-OF-ARGS 2) 
(PUT 'QUOTIENT1 'DEFINED-ON-LINE '459) 
(PUT 'QUOTIENT1 'DEFINED-IN-FILE 'FIDE/LINBAND.RED) 
(PUT 'QUOTIENT1 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE QUOTIENT1 (U V) (QUOTIENT U V)) 
(FLAG '(QUOTIENT1) 'OPFN) 
(OPERATOR (LIST 'ACOF 'ARHS)) 
(PUT 'GENVAREQ 'NUMBER-OF-ARGS 6) 
(FLAG '(GENVAREQ) 'OPFN) 
(PUT 'GENVAREQ 'DEFINED-ON-LINE '465) 
(PUT 'GENVAREQ 'DEFINED-IN-FILE 'FIDE/LINBAND.RED) 
(PUT 'GENVAREQ 'PROCEDURE_TYPE
     '(ARROW (TIMES GENERAL GENERAL GENERAL GENERAL GENERAL GENERAL) GENERAL)) 
(DE GENVAREQ (PVARS SVARS VAREQ NLC NZERO MODE)
    (COND
     ((EVALEQUAL (AEVAL (LIST 'ISON '*IMSL)) 1)
      (AEVAL (LIST 'GENVAREQ-IMSL PVARS SVARS VAREQ NLC NZERO MODE)))
     ((EVALEQUAL (AEVAL (LIST 'ISON '*NAG)) 1)
      (AEVAL (LIST 'GENVAREQ-NAG PVARS SVARS VAREQ NLC NZERO MODE)))
     (T (AEVAL (LIST 'GENVAREQ-LINPACK PVARS SVARS VAREQ NLC NZERO MODE))))) 
(PUT 'GENVAREQ-IMSL 'NUMBER-OF-ARGS 6) 
(FLAG '(GENVAREQ-IMSL) 'OPFN) 
(PUT 'GENVAREQ-IMSL 'DEFINED-ON-LINE '472) 
(PUT 'GENVAREQ-IMSL 'DEFINED-IN-FILE 'FIDE/LINBAND.RED) 
(PUT 'GENVAREQ-IMSL 'PROCEDURE_TYPE
     '(ARROW (TIMES GENERAL GENERAL GENERAL GENERAL GENERAL GENERAL) GENERAL)) 
(DE GENVAREQ-IMSL (PVARS SVARS VAREQ NLC NZERO MODE)
    (PROG (J VAR RHSIDE LHSIDE X Y)
      (SETQ J 0)
      (COND
       ((NOT
         (EVALEQUAL
          (AEVAL
           (LIST 'PLUS (LIST 'LENGTH PVARS) (LIST 'LENGTH SVARS) 1 NZERO))
          (AEVAL 'NCOL*)))
        (RETURN
         (PROGN
          (ASSGNPRI (AEVAL " Unconsistent PVARS:") NIL 'FIRST)
          (ASSGNPRI (AEVAL PVARS) NIL NIL)
          (ASSGNPRI (AEVAL " SVARS:") NIL NIL)
          (ASSGNPRI (AEVAL SVARS) NIL NIL)
          (ASSGNPRI (AEVAL " NZERO:") NIL NIL)
          (ASSGNPRI (AEVAL NZERO) NIL 'LAST)))))
      (SETQ VAR (AEVAL (LIST 'FIRST VAREQ)))
      (SETQ VAREQ (AEVAL (LIST 'FRST VAREQ)))
      (SETQ RHSIDE (AEVAL (LIST 'RHS VAREQ)))
      (SETQ LHSIDE (AEVAL (LIST 'LHS VAREQ)))
      (SETQ J (AEVAL 1))
      (SETQ X (AEVAL 0))
      (COND
       ((EVALEQUAL (AEVAL MODE) (AEVAL 'PFIX*))
        (WHILE (EVALLEQ J (AEVAL* NZERO))
               (PROGN
                (AEVAL*
                 (GENTRAN (LIST 'SETQ (LIST 'ACOF 'N (AEVAL J)) '0) 'NIL))
                (SETQ J (AEVAL* (PLUS J 1)))))))
      (PROG (A)
        (SETQ A (GETRLIST (AEVAL PVARS)))
       LAB
        (COND ((NULL A) (RETURN NIL)))
        ((LAMBDA (A)
           (PROGN
            (SETQ Y (AEVAL (LIST 'LINCOF LHSIDE A)))
            (SETQ X (AEVAL (LIST 'PLUS X (LIST 'TIMES A Y))))
            (AEVAL
             (GENTRAN (LIST 'SETQ (LIST 'ACOF 'N (AEVAL J)) (AEVAL Y)) 'NIL))
            (SETQ J (AEVAL (PLUS J 1)))))
         (CAR A))
        (SETQ A (CDR A))
        (GO LAB))
      (SETQ Y (AEVAL (LIST 'LINCOF LHSIDE VAR)))
      (SETQ X (AEVAL (LIST 'PLUS X (LIST 'TIMES VAR Y))))
      (AEVAL (GENTRAN (LIST 'SETQ (LIST 'ACOF 'N (AEVAL J)) (AEVAL Y)) 'NIL))
      (SETQ J (AEVAL (PLUS J 1)))
      (PROG (A)
        (SETQ A (GETRLIST (AEVAL SVARS)))
       LAB
        (COND ((NULL A) (RETURN NIL)))
        ((LAMBDA (A)
           (PROGN
            (SETQ Y (AEVAL (LIST 'LINCOF LHSIDE A)))
            (SETQ X (AEVAL (LIST 'PLUS X (LIST 'TIMES A Y))))
            (AEVAL
             (GENTRAN (LIST 'SETQ (LIST 'ACOF 'N (AEVAL J)) (AEVAL Y)) 'NIL))
            (SETQ J (AEVAL (PLUS J 1)))))
         (CAR A))
        (SETQ A (CDR A))
        (GO LAB))
      (COND
       ((EVALEQUAL (AEVAL MODE) (AEVAL 'SFIX*))
        (WHILE (EVALLEQ J (AEVAL* 'NCOL*))
               (PROGN
                (AEVAL*
                 (GENTRAN (LIST 'SETQ (LIST 'ACOF 'N (AEVAL J)) '0) 'NIL))
                (SETQ J (AEVAL* (PLUS J 1)))))))
      (AEVAL (GENTRAN (LIST 'SETQ (LIST 'ARHS 'N) (AEVAL RHSIDE)) 'NIL))
      (AEVAL (GENTEMP (LIST 'SETQ (AEVAL VAR) (LIST 'ARHS 'N))))
      (COND
       ((NOT (EVALEQUAL (AEVAL (LIST 'DIFFERENCE X LHSIDE)) 0))
        (PROGN
         (ASSGNPRI (AEVAL " For equation ") NIL 'FIRST)
         (ASSGNPRI (AEVAL VAREQ) NIL NIL)
         (ASSGNPRI (AEVAL " given only ") NIL NIL)
         (ASSGNPRI (AEVAL "variables ") NIL NIL)
         (ASSGNPRI (AEVAL PVARS) NIL NIL)
         (ASSGNPRI (AEVAL SVARS) NIL NIL)
         (ASSGNPRI (AEVAL VAR) NIL 'LAST))))
      (RETURN (AEVAL 'NIL)))) 
(PUT 'GENVAREQ-LINPACK 'NUMBER-OF-ARGS 6) 
(FLAG '(GENVAREQ-LINPACK) 'OPFN) 
(PUT 'GENVAREQ-LINPACK 'DEFINED-ON-LINE '515) 
(PUT 'GENVAREQ-LINPACK 'DEFINED-IN-FILE 'FIDE/LINBAND.RED) 
(PUT 'GENVAREQ-LINPACK 'PROCEDURE_TYPE
     '(ARROW (TIMES GENERAL GENERAL GENERAL GENERAL GENERAL GENERAL) GENERAL)) 
(DE GENVAREQ-LINPACK (PVARS SVARS VAREQ NLC NZERO MODE)
    (PROG (J JJ NN VAR RHSIDE LHSIDE X Y)
      (SETQ J 0)
      (SETQ JJ 0)
      (SETQ NN 0)
      (COND
       ((NOT
         (EVALEQUAL
          (AEVAL
           (LIST 'PLUS (LIST 'LENGTH PVARS) (LIST 'LENGTH SVARS) 1 NZERO))
          (AEVAL 'NCOL*)))
        (RETURN
         (PROGN
          (ASSGNPRI (AEVAL " Unconsistent PVARS:") NIL 'FIRST)
          (ASSGNPRI (AEVAL PVARS) NIL NIL)
          (ASSGNPRI (AEVAL " SVARS:") NIL NIL)
          (ASSGNPRI (AEVAL SVARS) NIL NIL)
          (ASSGNPRI (AEVAL " NZERO:") NIL NIL)
          (ASSGNPRI (AEVAL NZERO) NIL 'LAST)))))
      (COND
       ((AND (EVALEQUAL (AEVAL NLC) 1) (EVALEQUAL (AEVAL 'NCOL*) 3))
        (RETURN
         (AEVAL
          (LIST 'GENVAREQ-LINPACK-TRID PVARS SVARS VAREQ NLC NZERO MODE)))))
      (SETQ VAR (AEVAL (LIST 'FIRST VAREQ)))
      (SETQ VAREQ (AEVAL (LIST 'FRST VAREQ)))
      (SETQ RHSIDE (AEVAL (LIST 'RHS VAREQ)))
      (SETQ LHSIDE (AEVAL (LIST 'LHS VAREQ)))
      (SETQ J (AEVAL (LIST 'DIFFERENCE 'N NLC)))
      (SETQ JJ (AEVAL 1))
      (SETQ NN (AEVAL (LIST 'PLUS 'NCOL* NLC)))
      (SETQ X (AEVAL 0))
      (COND
       ((EVALEQUAL (AEVAL MODE) (AEVAL 'PFIX*))
        (WHILE (EVALLEQ JJ (AEVAL* NZERO))
               (PROGN
                (SETQ NN (AEVAL* (DIFFERENCE NN 1)))
                (SETQ JJ (AEVAL* (PLUS JJ 1)))
                (SETQ J (AEVAL* (PLUS J 1)))))))
      (PROG (A)
        (SETQ A (GETRLIST (AEVAL PVARS)))
       LAB
        (COND ((NULL A) (RETURN NIL)))
        ((LAMBDA (A)
           (PROGN
            (SETQ Y (AEVAL (LIST 'LINCOF LHSIDE A)))
            (SETQ X (AEVAL (LIST 'PLUS X (LIST 'TIMES A Y))))
            (AEVAL
             (GENTRAN (LIST 'SETQ (LIST 'ACOF (AEVAL NN) (AEVAL J)) (AEVAL Y))
                      'NIL))
            (SETQ NN (AEVAL (DIFFERENCE NN 1)))
            (SETQ J (AEVAL (PLUS J 1)))))
         (CAR A))
        (SETQ A (CDR A))
        (GO LAB))
      (SETQ Y (AEVAL (LIST 'LINCOF LHSIDE VAR)))
      (SETQ X (AEVAL (LIST 'PLUS X (LIST 'TIMES VAR Y))))
      (AEVAL
       (GENTRAN (LIST 'SETQ (LIST 'ACOF (AEVAL NN) (AEVAL J)) (AEVAL Y)) 'NIL))
      (SETQ NN (AEVAL (DIFFERENCE NN 1)))
      (SETQ J (AEVAL (PLUS J 1)))
      (PROG (A)
        (SETQ A (GETRLIST (AEVAL SVARS)))
       LAB
        (COND ((NULL A) (RETURN NIL)))
        ((LAMBDA (A)
           (PROGN
            (SETQ Y (AEVAL (LIST 'LINCOF LHSIDE A)))
            (SETQ X (AEVAL (LIST 'PLUS X (LIST 'TIMES A Y))))
            (AEVAL
             (GENTRAN (LIST 'SETQ (LIST 'ACOF (AEVAL NN) (AEVAL J)) (AEVAL Y))
                      'NIL))
            (SETQ NN (AEVAL (DIFFERENCE NN 1)))
            (SETQ J (AEVAL (PLUS J 1)))))
         (CAR A))
        (SETQ A (CDR A))
        (GO LAB))
      (AEVAL (GENTRAN (LIST 'SETQ (LIST 'ARHS 'N) (AEVAL RHSIDE)) 'NIL))
      (AEVAL (GENTEMP (LIST 'SETQ (AEVAL VAR) (LIST 'ARHS 'N))))
      (COND
       ((NOT (EVALEQUAL (AEVAL (LIST 'DIFFERENCE X LHSIDE)) 0))
        (PROGN
         (ASSGNPRI (AEVAL " For equation ") NIL 'FIRST)
         (ASSGNPRI (AEVAL VAREQ) NIL NIL)
         (ASSGNPRI (AEVAL " given only ") NIL NIL)
         (ASSGNPRI (AEVAL "variables ") NIL NIL)
         (ASSGNPRI (AEVAL PVARS) NIL NIL)
         (ASSGNPRI (AEVAL SVARS) NIL NIL)
         (ASSGNPRI (AEVAL VAR) NIL 'LAST))))
      (RETURN (AEVAL 'NIL)))) 
(PUT 'GENVAREQ-LINPACK-TRID 'NUMBER-OF-ARGS 6) 
(FLAG '(GENVAREQ-LINPACK-TRID) 'OPFN) 
(PUT 'GENVAREQ-LINPACK-TRID 'DEFINED-ON-LINE '564) 
(PUT 'GENVAREQ-LINPACK-TRID 'DEFINED-IN-FILE 'FIDE/LINBAND.RED) 
(PUT 'GENVAREQ-LINPACK-TRID 'PROCEDURE_TYPE
     '(ARROW (TIMES GENERAL GENERAL GENERAL GENERAL GENERAL GENERAL) GENERAL)) 
(DE GENVAREQ-LINPACK-TRID (PVARS SVARS VAREQ NLC NZERO MODE)
    (PROG (VAR RHSIDE LHSIDE X Y)
      (SETQ VAR (AEVAL (LIST 'FIRST VAREQ)))
      (SETQ VAREQ (AEVAL (LIST 'FRST VAREQ)))
      (SETQ RHSIDE (AEVAL (LIST 'RHS VAREQ)))
      (SETQ LHSIDE (AEVAL (LIST 'LHS VAREQ)))
      (SETQ X (AEVAL 0))
      (PROG (A)
        (SETQ A (GETRLIST (AEVAL PVARS)))
       LAB
        (COND ((NULL A) (RETURN NIL)))
        ((LAMBDA (A)
           (PROGN
            (SETQ Y (AEVAL (LIST 'LINCOF LHSIDE A)))
            (SETQ X (AEVAL (LIST 'PLUS X (LIST 'TIMES A Y))))
            (AEVAL (GENTRAN (LIST 'SETQ (LIST 'ALCD 'N) (AEVAL Y)) 'NIL))))
         (CAR A))
        (SETQ A (CDR A))
        (GO LAB))
      (SETQ Y (AEVAL (LIST 'LINCOF LHSIDE VAR)))
      (SETQ X (AEVAL (LIST 'PLUS X (LIST 'TIMES VAR Y))))
      (AEVAL (GENTRAN (LIST 'SETQ (LIST 'AD 'N) (AEVAL Y)) 'NIL))
      (PROG (A)
        (SETQ A (GETRLIST (AEVAL SVARS)))
       LAB
        (COND ((NULL A) (RETURN NIL)))
        ((LAMBDA (A)
           (PROGN
            (SETQ Y (AEVAL (LIST 'LINCOF LHSIDE A)))
            (SETQ X (AEVAL (LIST 'PLUS X (LIST 'TIMES A Y))))
            (AEVAL (GENTRAN (LIST 'SETQ (LIST 'AUCD 'N) (AEVAL Y)) 'NIL))))
         (CAR A))
        (SETQ A (CDR A))
        (GO LAB))
      (AEVAL (GENTRAN (LIST 'SETQ (LIST 'ARHS 'N) (AEVAL RHSIDE)) 'NIL))
      (AEVAL (GENTEMP (LIST 'SETQ (AEVAL VAR) (LIST 'ARHS 'N))))
      (COND
       ((NOT (EVALEQUAL (AEVAL (LIST 'DIFFERENCE X LHSIDE)) 0))
        (PROGN
         (ASSGNPRI (AEVAL " For equation ") NIL 'FIRST)
         (ASSGNPRI (AEVAL VAREQ) NIL NIL)
         (ASSGNPRI (AEVAL " given only ") NIL NIL)
         (ASSGNPRI (AEVAL "variables ") NIL NIL)
         (ASSGNPRI (AEVAL PVARS) NIL NIL)
         (ASSGNPRI (AEVAL SVARS) NIL NIL)
         (ASSGNPRI (AEVAL VAR) NIL 'LAST))))
      (RETURN (AEVAL 'NIL)))) 
(PUT 'GENVAREQ-NAG 'NUMBER-OF-ARGS 6) 
(FLAG '(GENVAREQ-NAG) 'OPFN) 
(PUT 'GENVAREQ-NAG 'DEFINED-ON-LINE '590) 
(PUT 'GENVAREQ-NAG 'DEFINED-IN-FILE 'FIDE/LINBAND.RED) 
(PUT 'GENVAREQ-NAG 'PROCEDURE_TYPE
     '(ARROW (TIMES GENERAL GENERAL GENERAL GENERAL GENERAL GENERAL) GENERAL)) 
(DE GENVAREQ-NAG (PVARS SVARS VAREQ NLC NZERO MODE)
    (PROG (J VAR RHSIDE LHSIDE X Y)
      (SETQ J 0)
      (COND
       ((NOT
         (EVALEQUAL
          (AEVAL
           (LIST 'PLUS (LIST 'LENGTH PVARS) (LIST 'LENGTH SVARS) 1 NZERO))
          (AEVAL 'NCOL*)))
        (RETURN
         (PROGN
          (ASSGNPRI (AEVAL " Unconsistent PVARS:") NIL 'FIRST)
          (ASSGNPRI (AEVAL PVARS) NIL NIL)
          (ASSGNPRI (AEVAL " SVARS:") NIL NIL)
          (ASSGNPRI (AEVAL SVARS) NIL NIL)
          (ASSGNPRI (AEVAL " NZERO:") NIL NIL)
          (ASSGNPRI (AEVAL NZERO) NIL 'LAST)))))
      (COND
       ((AND (EVALEQUAL (AEVAL NLC) 1) (EVALEQUAL (AEVAL 'NCOL*) 3))
        (RETURN
         (AEVAL (LIST 'GENVAREQ-NAG-TRID PVARS SVARS VAREQ NLC NZERO MODE)))))
      (SETQ VAR (AEVAL (LIST 'FIRST VAREQ)))
      (SETQ VAREQ (AEVAL (LIST 'FRST VAREQ)))
      (SETQ RHSIDE (AEVAL (LIST 'RHS VAREQ)))
      (SETQ LHSIDE (AEVAL (LIST 'LHS VAREQ)))
      (SETQ J (AEVAL 1))
      (SETQ X (AEVAL 0))
      (PROG (A)
        (SETQ A (GETRLIST (AEVAL PVARS)))
       LAB
        (COND ((NULL A) (RETURN NIL)))
        ((LAMBDA (A)
           (PROGN
            (SETQ Y (AEVAL (LIST 'LINCOF LHSIDE A)))
            (SETQ X (AEVAL (LIST 'PLUS X (LIST 'TIMES A Y))))
            (AEVAL
             (GENTRAN (LIST 'SETQ (LIST 'ACOF (AEVAL J) 'N) (AEVAL Y)) 'NIL))
            (SETQ J (AEVAL (PLUS J 1)))))
         (CAR A))
        (SETQ A (CDR A))
        (GO LAB))
      (SETQ Y (AEVAL (LIST 'LINCOF LHSIDE VAR)))
      (SETQ X (AEVAL (LIST 'PLUS X (LIST 'TIMES VAR Y))))
      (AEVAL (GENTRAN (LIST 'SETQ (LIST 'ACOF (AEVAL J) 'N) (AEVAL Y)) 'NIL))
      (SETQ J (AEVAL (PLUS J 1)))
      (PROG (A)
        (SETQ A (GETRLIST (AEVAL SVARS)))
       LAB
        (COND ((NULL A) (RETURN NIL)))
        ((LAMBDA (A)
           (PROGN
            (SETQ Y (AEVAL (LIST 'LINCOF LHSIDE A)))
            (SETQ X (AEVAL (LIST 'PLUS X (LIST 'TIMES A Y))))
            (AEVAL
             (GENTRAN (LIST 'SETQ (LIST 'ACOF (AEVAL J) 'N) (AEVAL Y)) 'NIL))
            (SETQ J (AEVAL (PLUS J 1)))))
         (CAR A))
        (SETQ A (CDR A))
        (GO LAB))
      (AEVAL (GENTRAN (LIST 'SETQ (LIST 'ARHS 'N) (AEVAL RHSIDE)) 'NIL))
      (AEVAL (GENTEMP (LIST 'SETQ (AEVAL VAR) (LIST 'ARHS 'N))))
      (COND
       ((NOT (EVALEQUAL (AEVAL (LIST 'DIFFERENCE X LHSIDE)) 0))
        (PROGN
         (ASSGNPRI (AEVAL " For equation ") NIL 'FIRST)
         (ASSGNPRI (AEVAL VAREQ) NIL NIL)
         (ASSGNPRI (AEVAL " given only ") NIL NIL)
         (ASSGNPRI (AEVAL "variables ") NIL NIL)
         (ASSGNPRI (AEVAL PVARS) NIL NIL)
         (ASSGNPRI (AEVAL SVARS) NIL NIL)
         (ASSGNPRI (AEVAL VAR) NIL 'LAST))))
      (RETURN (AEVAL 'NIL)))) 
(PUT 'GENVAREQ-NAG-TRID 'NUMBER-OF-ARGS 6) 
(FLAG '(GENVAREQ-NAG-TRID) 'OPFN) 
(PUT 'GENVAREQ-NAG-TRID 'DEFINED-ON-LINE '630) 
(PUT 'GENVAREQ-NAG-TRID 'DEFINED-IN-FILE 'FIDE/LINBAND.RED) 
(PUT 'GENVAREQ-NAG-TRID 'PROCEDURE_TYPE
     '(ARROW (TIMES GENERAL GENERAL GENERAL GENERAL GENERAL GENERAL) GENERAL)) 
(DE GENVAREQ-NAG-TRID (PVARS SVARS VAREQ NLC NZERO MODE)
    (PROG (VAR RHSIDE LHSIDE X Y)
      (SETQ VAR (AEVAL (LIST 'FIRST VAREQ)))
      (SETQ VAREQ (AEVAL (LIST 'FRST VAREQ)))
      (SETQ RHSIDE (AEVAL (LIST 'RHS VAREQ)))
      (SETQ LHSIDE (AEVAL (LIST 'LHS VAREQ)))
      (SETQ X (AEVAL 0))
      (PROG (A)
        (SETQ A (GETRLIST (AEVAL PVARS)))
       LAB
        (COND ((NULL A) (RETURN NIL)))
        ((LAMBDA (A)
           (PROGN
            (SETQ Y (AEVAL (LIST 'LINCOF LHSIDE A)))
            (SETQ X (AEVAL (LIST 'PLUS X (LIST 'TIMES A Y))))
            (AEVAL (GENTRAN (LIST 'SETQ (LIST 'ALCD 'N) (AEVAL Y)) 'NIL))))
         (CAR A))
        (SETQ A (CDR A))
        (GO LAB))
      (SETQ Y (AEVAL (LIST 'LINCOF LHSIDE VAR)))
      (SETQ X (AEVAL (LIST 'PLUS X (LIST 'TIMES VAR Y))))
      (AEVAL (GENTRAN (LIST 'SETQ (LIST 'AD 'N) (AEVAL Y)) 'NIL))
      (PROG (A)
        (SETQ A (GETRLIST (AEVAL SVARS)))
       LAB
        (COND ((NULL A) (RETURN NIL)))
        ((LAMBDA (A)
           (PROGN
            (SETQ Y (AEVAL (LIST 'LINCOF LHSIDE A)))
            (SETQ X (AEVAL (LIST 'PLUS X (LIST 'TIMES A Y))))
            (AEVAL
             (GENTRAN (LIST 'SETQ (LIST 'AUCD (LIST 'PLUS 'N '1)) (AEVAL Y))
                      'NIL))))
         (CAR A))
        (SETQ A (CDR A))
        (GO LAB))
      (AEVAL (GENTRAN (LIST 'SETQ (LIST 'ARHS 'N) (AEVAL RHSIDE)) 'NIL))
      (AEVAL (GENTEMP (LIST 'SETQ (AEVAL VAR) (LIST 'ARHS 'N))))
      (COND
       ((NOT (EVALEQUAL (AEVAL (LIST 'DIFFERENCE X LHSIDE)) 0))
        (PROGN
         (ASSGNPRI (AEVAL " For equation ") NIL 'FIRST)
         (ASSGNPRI (AEVAL VAREQ) NIL NIL)
         (ASSGNPRI (AEVAL " given only ") NIL NIL)
         (ASSGNPRI (AEVAL "variables ") NIL NIL)
         (ASSGNPRI (AEVAL PVARS) NIL NIL)
         (ASSGNPRI (AEVAL SVARS) NIL NIL)
         (ASSGNPRI (AEVAL VAR) NIL 'LAST))))
      (RETURN (AEVAL 'NIL)))) 
(PUT 'LINCOF 'NUMBER-OF-ARGS 2) 
(FLAG '(LINCOF) 'OPFN) 
(PUT 'LINCOF 'DEFINED-ON-LINE '656) 
(PUT 'LINCOF 'DEFINED-IN-FILE 'FIDE/LINBAND.RED) 
(PUT 'LINCOF 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE LINCOF (EXPRE KER)
    (LIST 'QUOTIENT
          (LIST 'DIFFERENCE EXPRE (LIST 'SUBE (LIST 'EQUAL KER 0) EXPRE)) KER)) 
(SETK 'STACKDOLABEL* (AEVAL (LIST 'LIST))) 
(PUT 'NEXTVAREQSYS 'NUMBER-OF-ARGS 2) 
(FLAG '(NEXTVAREQSYS) 'OPFN) 
(PUT 'NEXTVAREQSYS 'DEFINED-ON-LINE '663) 
(PUT 'NEXTVAREQSYS 'DEFINED-IN-FILE 'FIDE/LINBAND.RED) 
(PUT 'NEXTVAREQSYS 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE NEXTVAREQSYS (VAREQ SYSTEM)
    (COND
     ((EVALEQUAL (AEVAL (LIST 'REST SYSTEM)) (AEVAL (LIST 'LIST)))
      (AEVAL (LIST 'CONS (LIST 'LIST) (LIST 'LIST))))
     ((EVALEQUAL (AEVAL (LIST 'FFST SYSTEM)) (AEVAL 'DO))
      (AEVAL (LIST 'NEXTVESDO VAREQ SYSTEM)))
     ((EVALEQUAL (AEVAL (LIST 'FFRST SYSTEM)) (AEVAL 'DO))
      (AEVAL (LIST 'NEXTVESDOFST (LIST 'REST SYSTEM))))
     (T (AEVAL (LIST 'CONS (LIST 'FRST SYSTEM) (LIST 'REST SYSTEM)))))) 
(PUT 'NEXTVESDOFST 'NUMBER-OF-ARGS 1) 
(FLAG '(NEXTVESDOFST) 'OPFN) 
(PUT 'NEXTVESDOFST 'DEFINED-ON-LINE '672) 
(PUT 'NEXTVESDOFST 'DEFINED-IN-FILE 'FIDE/LINBAND.RED) 
(PUT 'NEXTVESDOFST 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE NEXTVESDOFST (SYSTEM)
    (PROG (ID FROM TO1 STEP)
      (SETQ ID (AEVAL (LIST 'FRFST SYSTEM)))
      (SETQ FROM (AEVAL (LIST 'FRST ID)))
      (SETQ TO1 (AEVAL (LIST 'FRRST ID)))
      (SETQ STEP (AEVAL (LIST 'FRRRST ID)))
      (SETQ ID (AEVAL (LIST 'FIRST ID)))
      (SETQ GENSTMTNUM*
              (PROGN
               (SETQ ALGLIST* (CONS NIL NIL))
               (AEVAL (LIST 'PLUS GENSTMTNUM* GENSTMTINCR*))))
      (AEVAL
       (GENTRAN
        (LIST 'LITERAL 'TAB* '"do " (AEVAL GENSTMTNUM*) '" " (AEVAL ID) '"="
              (AEVAL FROM) '"," (AEVAL TO1) '"," (AEVAL STEP) 'CR*)
        'NIL))
      (SETK 'STACKDOLABEL* (AEVAL (LIST 'CONS GENSTMTNUM* 'STACKDOLABEL*)))
      (SETQ GENSTMTNUM*
              (PROGN
               (SETQ ALGLIST* (CONS NIL NIL))
               (AEVAL (LIST 'PLUS GENSTMTNUM* GENSTMTINCR*))))
      (AEVAL
       (GENTEMP
        (LIST 'PROGN
              (LIST 'LITERAL 'TAB* '"do " (AEVAL GENSTMTNUM*) '" " (AEVAL ID)
                    '"=" (AEVAL FROM) '"," (AEVAL TO1) '"," (AEVAL STEP)
                    'CR*))))
      (SETQ FORTCURRIND*
              (PROGN
               (SETQ ALGLIST* (CONS NIL NIL))
               (AEVAL (LIST 'PLUS FORTCURRIND* 4))))
      (SETK 'STACKDOLABEL* (AEVAL (LIST 'CONS GENSTMTNUM* 'STACKDOLABEL*)))
      (SETQ ID (AEVAL (LIST 'CONS (LIST 'FRRFST SYSTEM) SYSTEM)))
      (RETURN (AEVAL ID)))) 
(PUT 'NEXTVESDO 'NUMBER-OF-ARGS 2) 
(FLAG '(NEXTVESDO) 'OPFN) 
(PUT 'NEXTVESDO 'DEFINED-ON-LINE '695) 
(PUT 'NEXTVESDO 'DEFINED-IN-FILE 'FIDE/LINBAND.RED) 
(PUT 'NEXTVESDO 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE NEXTVESDO (VAREQ SYSTEM)
    (PROG (VAREQS)
      (SETQ VAREQS (AEVAL (LIST 'RRFST SYSTEM)))
      (WHILE
       (AND
        (NOT
         (AND
          (EVALEQUAL (AEVAL* (LIST 'FIRST VAREQ)) (AEVAL* (LIST 'FFST VAREQS)))
          (EVALEQUAL (AEVAL* (LIST 'REST VAREQ))
                     (AEVAL* (LIST 'RFST VAREQS)))))
        (NOT (EVALEQUAL (AEVAL* (LIST 'REST VAREQS)) (AEVAL* (LIST 'LIST)))))
       (SETQ VAREQS (AEVAL* (LIST 'REST VAREQS))))
      (SETQ VAREQS (AEVAL (LIST 'REST VAREQS)))
      (COND
       ((EVALEQUAL (AEVAL VAREQS) (AEVAL (LIST 'LIST)))
        (PROGN
         (SETQ FORTCURRIND*
                 (PROGN
                  (SETQ ALGLIST* (CONS NIL NIL))
                  (AEVAL (LIST 'DIFFERENCE FORTCURRIND* 4))))
         (AEVAL
          (GENTEMP
           (LIST 'PROGN
                 (LIST 'LITERAL (AEVAL (LIST 'FIRST 'STACKDOLABEL*)) 'TAB*
                       '"continue" 'CR*))))
         (SETK 'STACKDOLABEL* (AEVAL (LIST 'REST 'STACKDOLABEL*)))
         (AEVAL
          (GENTRAN
           (LIST 'LITERAL (AEVAL (LIST 'FIRST 'STACKDOLABEL*)) 'TAB*
                 '"continue" 'CR*)
           'NIL))
         (SETK 'STACKDOLABEL* (AEVAL (LIST 'REST 'STACKDOLABEL*)))
         (SETQ VAREQS
                 (AEVAL
                  (LIST 'CONS (LIST 'FRST SYSTEM) (LIST 'REST SYSTEM))))))
       (T (SETQ VAREQS (AEVAL (LIST 'CONS (LIST 'FIRST VAREQS) SYSTEM)))))
      (RETURN (AEVAL VAREQS)))) 
(PUT 'FINDPVARS 'NUMBER-OF-ARGS 2) 
(FLAG '(FINDPVARS) 'OPFN) 
(PUT 'FINDPVARS 'DEFINED-ON-LINE '718) 
(PUT 'FINDPVARS 'DEFINED-IN-FILE 'FIDE/LINBAND.RED) 
(PUT 'FINDPVARS 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE FINDPVARS (NLC CYKL)
    (PROG (ID STEP)
      (SETQ ID (AEVAL (LIST 'FRST CYKL)))
      (SETQ STEP (AEVAL (LIST 'FRRRST ID)))
      (SETQ ID (AEVAL (LIST 'FIRST ID)))
      (SETQ CYKL (AEVAL (LIST 'REVERSE (LIST 'RRST CYKL))))
      (SETQ ID
              (AEVAL
               (LIST 'REVERSE
                     (LIST 'FSVARS1DO NLC
                           (LIST 'CONS 'DO
                                 (LIST 'CONS
                                       (LIST 'CONS ID
                                             (LIST 'CONS
                                                   (LIST 'DIFFERENCE ID STEP)
                                                   (LIST 'CONS 0
                                                         (LIST 'CONS
                                                               (LIST 'MINUS
                                                                     STEP)
                                                               (LIST 'LIST)))))
                                       CYKL))))))
      (RETURN (AEVAL ID)))) 
(PUT 'LASTVARS 'NUMBER-OF-ARGS 2) 
(FLAG '(LASTVARS) 'OPFN) 
(PUT 'LASTVARS 'DEFINED-ON-LINE '731) 
(PUT 'LASTVARS 'DEFINED-IN-FILE 'FIDE/LINBAND.RED) 
(PUT 'LASTVARS 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE LASTVARS (NLC CYKL)
    (PROG (ID STEP TO1)
      (SETQ ID (AEVAL (LIST 'FRST CYKL)))
      (SETQ TO1 (AEVAL (LIST 'FRRST ID)))
      (SETQ STEP (AEVAL (LIST 'FRRRST ID)))
      (SETQ ID (AEVAL (LIST 'FIRST ID)))
      (SETQ CYKL (AEVAL (LIST 'REVERSE (LIST 'RRST CYKL))))
      (SETQ ID
              (AEVAL
               (LIST 'REVERSE
                     (LIST 'FSVARS1DO NLC
                           (LIST 'CONS 'DO
                                 (LIST 'CONS
                                       (LIST 'CONS ID
                                             (LIST 'CONS TO1
                                                   (LIST 'CONS 0
                                                         (LIST 'CONS
                                                               (LIST 'MINUS
                                                                     STEP)
                                                               (LIST 'LIST)))))
                                       CYKL))))))
      (RETURN (AEVAL ID)))) 
(NULL (SETQ *MODE 'SYMBOLIC)) 
(FLAG
 '(FFST FRST RFST RRST FFFST FFRST FRFST FRRST RFFST RFRST RRFST RRRST FFFFST
   FFFRST FFRFST FFRRST FRFFST FRFRST FRRFST FRRRST RFFFST RFFRST RFRFST RFRRST
   RRFFST RRFRST RRRFST RRRRST FINDSVARS FINDSVARS1 FSVARS1DO FINDSVARSDO
   EXPANDDO EXPDDO GENVAREQ NEXTVAREQSYS NEXTVESDOFST NEXTVESDO FINDPVARS
   LASTVARS)
 'NOVAL) 
(PUT 'EQUALAEVAL 'NUMBER-OF-ARGS 1) 
(PUT 'EQUALAEVAL 'DEFINED-ON-LINE '752) 
(PUT 'EQUALAEVAL 'DEFINED-IN-FILE 'FIDE/LINBAND.RED) 
(PUT 'EQUALAEVAL 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE EQUALAEVAL (U) (CONS 'EQUAL (AEVLIS U))) 
(PUT 'AEVLIS 'NUMBER-OF-ARGS 1) 
(PUT 'AEVLIS 'DEFINED-ON-LINE '755) 
(PUT 'AEVLIS 'DEFINED-IN-FILE 'FIDE/LINBAND.RED) 
(PUT 'AEVLIS 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE AEVLIS (U)
    (PROG (A FORALL-RESULT FORALL-ENDPTR)
      (SETQ A U)
      (COND ((NULL A) (RETURN NIL)))
      (SETQ FORALL-RESULT
              (SETQ FORALL-ENDPTR
                      (CONS ((LAMBDA (A) (REVAL1 A NIL)) (CAR A)) NIL)))
     LOOPLABEL
      (SETQ A (CDR A))
      (COND ((NULL A) (RETURN FORALL-RESULT)))
      (RPLACD FORALL-ENDPTR (CONS ((LAMBDA (A) (REVAL1 A NIL)) (CAR A)) NIL))
      (SETQ FORALL-ENDPTR (CDR FORALL-ENDPTR))
      (GO LOOPLABEL))) 
(PUT 'LISTNOEVAL 'NUMBER-OF-ARGS 2) 
(PUT 'LISTNOEVAL 'DEFINED-ON-LINE '758) 
(PUT 'LISTNOEVAL 'DEFINED-IN-FILE 'FIDE/LINBAND.RED) 
(PUT 'LISTNOEVAL 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE LISTNOEVAL (U V)
    (COND ((ATOM U) (LISTNOEVAL (CADR (GET U 'AVALUE)) V)) (T U))) 
(ENDMODULE) 