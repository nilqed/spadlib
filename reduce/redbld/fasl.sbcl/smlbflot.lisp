(cl:declaim (cl:optimize cl:debug cl:safety))
(cl:declaim (sb-ext:muffle-conditions sb-ext:compiler-note cl:style-warning))
(MODULE (LIST 'SMLBFLOT)) 
(EXPORTS
 (LIST '|ABS:| 'BFEXPLODE0 'BFLERRMSG '|BFPRIN:| '|BFTRIM:| '|BFZEROP:|
       '|CONV:MT| '|CUT:EP| '|CUT:MT| 'DECIMAL2INTERNAL '|DECPREC:|
       '|DIFFERENCE:| '|DIVIDE:| '|EQUAL:| 'FL2BF '|GREATERP:| '|INCPREC:|
       '|LEQ:| '|LESSP:| '|MAX:| '|MAX:| '|MAX2:| '|MIN:| '|MIN2:| '|MINUS:|
       '|MINUSP:| '|ORDER:| '|PLUS:| '|READ:NUM| '|ROUND:MT| '|ROUND:LAST|
       '|TIMES:|)) 
(IMPORTS
 (LIST 'ACONC 'ASHIFT '|BFP:| 'CEILING '|CONV:BF2I| '|EP:| 'EQCAR 'FLOOR 'GEQ
       '|I2BF:| 'LEQ 'LSHIFT '|MAKE:IBF| '|MSD:| '|MT:| 'NEQ 'NORMBF 'ODDINTP
       '|PRECI:| 'PRECISION 'PRIN2* 'RERROR 'RETAG 'REVERSIP)) 
(FLUID
 '(*BFSPACE *FULLPREC *NAT |:PREC:| |:BPREC:| |:PRINT-PREC:| |:UPPER-SCI:|
   |:LOWER-SCI:|)) 
(GLOBAL '(!NFPD !NBFPD BFTEN* BFZ* FORT_EXPONENT)) 
(SWITCH (LIST 'BFSPACE 'FULLPREC)) 
(FLAG '(FORT_EXPONENT) 'SHARE) 
(SETQ *BFSPACE NIL) 
(SETQ |:LOWER-SCI:| 10) 
(SETQ |:UPPER-SCI:| 5) 
(PUT 'BFLERRMSG 'NUMBER-OF-ARGS 1) 
(PUT 'BFLERRMSG 'DEFINED-ON-LINE '65) 
(PUT 'BFLERRMSG 'DEFINED-IN-FILE 'ARITH/SMLBFLOT.RED) 
(PUT 'BFLERRMSG 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE BFLERRMSG (U) (ERROR 0 (LIST "Invalid argument to" U))) 
(PUT '|BFZEROP:| 'NUMBER-OF-ARGS 1) 
(PUT '|BFZEROP:| 'DEFINED-ON-LINE '69) 
(PUT '|BFZEROP:| 'DEFINED-IN-FILE 'ARITH/SMLBFLOT.RED) 
(PUT '|BFZEROP:| 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE |BFZEROP:| (U) (EQUAL (CADR U) 0)) 
(PUT 'FL2BF 'NUMBER-OF-ARGS 1) 
(PUT 'FL2BF 'DEFINED-ON-LINE '73) 
(PUT 'FL2BF 'DEFINED-IN-FILE 'ARITH/SMLBFLOT.RED) 
(PUT 'FL2BF 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE FL2BF (X)
    ((LAMBDA (|:BPREC:|)
       (COND ((ZEROP X) BFZ*)
             ((NOT (EQN (DIFFERENCE X X) 0.0))
              (REDERR "Floating point infinity or NaN"))
             (T
              (PROG (S R D)
                (SETQ D 0)
                (COND ((LESSP X 0) (PROGN (SETQ X (MINUS X)) (SETQ S T))))
                (SETQ R (NORMBF (|READ:NUM| X)))
                (SETQ D (PLUS (CDDR R) (|MSD:| (CADR R))))
                (SETQ X (TIMES X (EXPT 2.0 (MINUS D))))
                (SETQ X (PLUS X (QUOTIENT 0.5 (EXPT 2.0 |:BPREC:|))))
                (SETQ X (FIX (TIMES X (EXPT 2.0 |:BPREC:|))))
                (RETURN
                 (CONS '|:RD:|
                       (CONS (COND (S (MINUS X)) (T X))
                             (DIFFERENCE D |:BPREC:|))))))))
     !NBFPD)) 
(PUT '|BFPRIN:| 'NUMBER-OF-ARGS 1) 
(PUT '|BFPRIN:| 'DEFINED-ON-LINE '86) 
(PUT '|BFPRIN:| 'DEFINED-IN-FILE 'ARITH/SMLBFLOT.RED) 
(PUT '|BFPRIN:| 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE |BFPRIN:| (U) (BFPRIN0 U)) 
(PUT 'DIVIDE-BY-POWER-OF-TEN 'NUMBER-OF-ARGS 2) 
(PUT 'DIVIDE-BY-POWER-OF-TEN 'DEFINED-ON-LINE '91) 
(PUT 'DIVIDE-BY-POWER-OF-TEN 'DEFINED-IN-FILE 'ARITH/SMLBFLOT.RED) 
(PUT 'DIVIDE-BY-POWER-OF-TEN 'PROCEDURE_TYPE
     '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE DIVIDE-BY-POWER-OF-TEN (X N)
    (COND ((LESSP N 0) (BFLERRMSG 'DIVIDE-BY-POWER-OF-TEN))
          (T
           ((LAMBDA (F)
              (PROGN
               (PROG ()
                WHILELABEL
                 (COND ((NOT (GREATERP N 0)) (RETURN NIL)))
                 (PROGN
                  (COND
                   ((NOT (EVENP N))
                    (SETQ X (NORMBF (|DIVIDE:| X F |:BPREC:|)))))
                  (SETQ N (ASHIFT N (MINUS 1)))
                  (SETQ F (NORMBF (|CUT:MT| (|TIMES:| F F) |:BPREC:|))))
                 (GO WHILELABEL))
               X))
            BFTEN*)))) 
(PUT 'MULTIPLY-BY-POWER-OF-TEN 'NUMBER-OF-ARGS 2) 
(PUT 'MULTIPLY-BY-POWER-OF-TEN 'DEFINED-ON-LINE '100) 
(PUT 'MULTIPLY-BY-POWER-OF-TEN 'DEFINED-IN-FILE 'ARITH/SMLBFLOT.RED) 
(PUT 'MULTIPLY-BY-POWER-OF-TEN 'PROCEDURE_TYPE
     '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE MULTIPLY-BY-POWER-OF-TEN (X N)
    (COND ((LESSP N 0) (BFLERRMSG 'MULTIPLY-BY-POWER-OF-TEN))
          (T
           ((LAMBDA (F)
              (PROGN
               (PROG ()
                WHILELABEL
                 (COND ((NOT (GREATERP N 0)) (RETURN NIL)))
                 (PROGN
                  (COND ((NOT (EVENP N)) (SETQ X (NORMBF (|TIMES:| X F)))))
                  (SETQ N (ASHIFT N (MINUS 1)))
                  (SETQ F (NORMBF (|CUT:MT| (|TIMES:| F F) |:BPREC:|))))
                 (GO WHILELABEL))
               (NORMBF (|CUT:MT| X |:BPREC:|))))
            BFTEN*)))) 
(GLOBAL '(!LOG2OF10)) 
(PUT '|ROUND:DEC| 'NUMBER-OF-ARGS 2) 
(PUT '|ROUND:DEC| 'DEFINED-ON-LINE '111) 
(PUT '|ROUND:DEC| 'DEFINED-IN-FILE 'ARITH/SMLBFLOT.RED) 
(PUT '|ROUND:DEC| 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE |ROUND:DEC| (X P)
    (PROG (SETPR M EX)
      (SETQ M 0)
      (SETQ EX 0)
      (COND
       ((NULL P)
        (SETQ P
                (COND (|:PRINT-PREC:| |:PRINT-PREC:|)
                      (T (DIFFERENCE |:PREC:| 2)))))
       ((GREATERP P (PRECISION 0)) (SETQ SETPR (PRECISION P))))
      (SETQ X (|ROUND:DEC1| X P))
      (SETQ M (CAR X))
      (SETQ EX (CDR X))
      (SETQ X (CONS '|:RD:| (CONS M 0)))
      (COND ((LESSP EX 0) (SETQ X (DIVIDE-BY-POWER-OF-TEN X (MINUS EX))))
            ((GREATERP EX 0) (SETQ X (MULTIPLY-BY-POWER-OF-TEN X EX))))
      (COND (SETPR (PRECISION SETPR)))
      (RETURN (|ROUND:MT| X (CEILING (TIMES P !LOG2OF10)))))) 
(PUT '|ROUND:DEC1| 'NUMBER-OF-ARGS 2) 
(PUT '|ROUND:DEC1| 'DEFINED-ON-LINE '128) 
(PUT '|ROUND:DEC1| 'DEFINED-IN-FILE 'ARITH/SMLBFLOT.RED) 
(PUT '|ROUND:DEC1| 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE |ROUND:DEC1| (X P)
    (COND ((|BFZEROP:| X) (CDR X))
          (T
           ((LAMBDA (|:BPREC:|)
              (PROG (EXACT LO SIGN EX K M N L)
                (SETQ EX 0)
                (SETQ K 0)
                (SETQ M 0)
                (SETQ N 0)
                (SETQ L 0)
                (COND
                 ((LESSP (CADR X) 0)
                  (PROGN (SETQ SIGN T) (SETQ X (|MINUS:| X)))))
                (SETQ N (|ORDER:| X))
                (SETQ L (|MSD:| (ABS N)))
                ((LAMBDA (|:BPREC:|)
                   (PROGN
                    (SETQ LO
                            (|DIVIDE:| (|:LOG2| |:BPREC:|) (|:LOG10| |:BPREC:|)
                                       |:BPREC:|))
                    (SETQ K
                            (|CONV:BF2I|
                             (|TIMES:| (CONS '|:RD:| (CONS N 0)) LO)))
                    (COND
                     ((EQUAL K
                             (|CONV:BF2I|
                              (|TIMES:| (CONS '|:RD:| (CONS (PLUS N 1) 0))
                                        LO)))
                      (SETQ EXACT T)))))
                 (MAX !NBFPD (PLUS L 7)))
                (SETQ |:BPREC:| (PLUS |:BPREC:| L))
                (COND ((LESSP N 0) (SETQ K (DIFFERENCE K 1))))
                (SETQ EX (PLUS (DIFFERENCE K P) 1))
                (COND
                 ((LESSP EX 0)
                  (SETQ X (MULTIPLY-BY-POWER-OF-TEN X (MINUS EX))))
                 ((GREATERP EX 0) (SETQ X (DIVIDE-BY-POWER-OF-TEN X EX))))
                (COND (EXACT NIL)
                      (T
                       (PROGN
                        (SETQ L (LENGTH (EXPLODE (|CONV:BF2I| X))))
                        (COND
                         ((LESSP L P)
                          (PROGN
                           (SETQ X (|TIMES:| X BFTEN*))
                           (SETQ EX (DIFFERENCE EX 1))))
                         ((GREATERP L P)
                          (PROGN
                           (SETQ X (|DIVIDE:| X BFTEN* |:BPREC:|))
                           (SETQ EX (PLUS EX 1))))))))
                (SETQ X (|PLUS:| X BFHALF*))
                (SETQ X (|PLUS:| X (FL2BF (EXPT 0.1 18))))
                (SETQ M (|CONV:BF2I| X))
                (COND
                 ((GREATERP (LENGTH (EXPLODE M)) P)
                  (PROGN
                   (SETQ M (QUOTIENT (PLUS M 5) 10))
                   (SETQ EX (PLUS EX 1)))))
                (COND (SIGN (SETQ M (MINUS M))))
                (RETURN (CONS M EX))))
            |:BPREC:|)))) 
(PUT 'BFPRIN0 'NUMBER-OF-ARGS 1) 
(PUT 'BFPRIN0 'DEFINED-ON-LINE '212) 
(PUT 'BFPRIN0 'DEFINED-IN-FILE 'ARITH/SMLBFLOT.RED) 
(PUT 'BFPRIN0 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE BFPRIN0 (U)
    (PROG (R M EX)
      (SETQ M 0)
      (SETQ EX 0)
      (SETQ R
              (|ROUND:DEC1| U
                            (COND (|:PRINT-PREC:| |:PRINT-PREC:|)
                                  (T (DIFFERENCE |:PREC:| 2)))))
      (SETQ M (CAR R))
      (SETQ EX (CDR R))
      (BFPRIN0X M EX))) 
(PUT 'BFPRIN0X 'NUMBER-OF-ARGS 2) 
(PUT 'BFPRIN0X 'DEFINED-ON-LINE '220) 
(PUT 'BFPRIN0X 'DEFINED-IN-FILE 'ARITH/SMLBFLOT.RED) 
(PUT 'BFPRIN0X 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE BFPRIN0X (M EX)
    (PROG (LST DOTPOS)
      (SETQ DOTPOS 0)
      (SETQ LST (BFEXPLODE0X M EX))
      (SETQ EX (CADR LST))
      (SETQ DOTPOS (CADDR LST))
      (SETQ LST (CAR LST))
      (RETURN (PRIN2* (|BFPRIN:LST| LST EX DOTPOS))))) 
(PUT 'BFEXPL0 'NUMBER-OF-ARGS 2) 
(PUT 'BFEXPL0 'DEFINED-ON-LINE '231) 
(PUT 'BFEXPL0 'DEFINED-IN-FILE 'ARITH/SMLBFLOT.RED) 
(PUT 'BFEXPL0 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE BFEXPL0 (U |:PREC:|)
    (PROG (R M EX)
      (SETQ M 0)
      (SETQ EX 0)
      (COND ((FLOATP U) (SETQ U (FL2BF U)))
            ((FLOATP (CDR U)) (SETQ U (FL2BF (CDR U)))))
      (SETQ R
              (|ROUND:DEC1| U
                            (COND (|:PRINT-PREC:| |:PRINT-PREC:|)
                                  (T (DIFFERENCE |:PREC:| 2)))))
      (SETQ M (CAR R))
      (SETQ EX (CDR R))
      (RETURN (BFEXPL0X M EX)))) 
(PUT 'BFEXPL0X 'NUMBER-OF-ARGS 2) 
(PUT 'BFEXPL0X 'DEFINED-ON-LINE '241) 
(PUT 'BFEXPL0X 'DEFINED-IN-FILE 'ARITH/SMLBFLOT.RED) 
(PUT 'BFEXPL0X 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE BFEXPL0X (M EX)
    (PROG (LST DOTPOS)
      (SETQ DOTPOS 0)
      (SETQ LST (BFEXPLODE0X M EX))
      (SETQ EX (CADR LST))
      (SETQ DOTPOS (CADDR LST))
      (SETQ LST (CAR LST))
      (RETURN (|BFPRIN:LST| LST EX DOTPOS)))) 
(PUT 'FPPREC 'NUMBER-OF-ARGS 2) 
(PUT 'FPPREC 'DEFINED-ON-LINE '260) 
(PUT 'FPPREC 'DEFINED-IN-FILE 'ARITH/SMLBFLOT.RED) 
(PUT 'FPPREC 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE FPPREC (A N)
    (COND ((FIXP A) A)
          ((AND (NOT (FLOATP A)) (NOT (EQCAR A '|:RD:|))) "[not a float]")
          ((OR (NOT (FIXP N)) (LESSP N 2)) "[second arg must be integer > 2]")
          (T (BFEXPL0 A N)))) 
(FLAG '(FPPREC) 'OPFN) 
(PUT 'BFEXPLODE0 'NUMBER-OF-ARGS 1) 
(PUT 'BFEXPLODE0 'DEFINED-ON-LINE '268) 
(PUT 'BFEXPLODE0 'DEFINED-IN-FILE 'ARITH/SMLBFLOT.RED) 
(PUT 'BFEXPLODE0 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE BFEXPLODE0 (U)
    (PROG (R M EX)
      (SETQ M 0)
      (SETQ EX 0)
      (SETQ R
              (|ROUND:DEC1| U
                            (COND (|:PRINT-PREC:| |:PRINT-PREC:|)
                                  (T (DIFFERENCE |:PREC:| 2)))))
      (SETQ M (CAR R))
      (SETQ EX (CDR R))
      (RETURN (BFEXPLODE0X M EX)))) 
(PUT 'BFEXPLODE0X 'NUMBER-OF-ARGS 2) 
(PUT 'BFEXPLODE0X 'DEFINED-ON-LINE '283) 
(PUT 'BFEXPLODE0X 'DEFINED-IN-FILE 'ARITH/SMLBFLOT.RED) 
(PUT 'BFEXPLODE0X 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE BFEXPLODE0X (M EX)
    (PROG (LST S DOTPOS L)
      (SETQ DOTPOS 0)
      (SETQ L 0)
      (COND ((LESSP M 0) (PROGN (SETQ S T) (SETQ M (MINUS M)))))
      (SETQ LST (EXPLODE M))
      (SETQ L (LENGTH LST))
      (COND
       ((AND (NEQ EX 0)
             (OR (LESSP (PLUS L EX) (MINUS |:LOWER-SCI:|))
                 (GREATERP (PLUS L EX) |:UPPER-SCI:|)))
        (PROGN (SETQ DOTPOS 1) (SETQ EX (PLUS EX (DIFFERENCE L 1)))))
       (T
        (PROGN
         (SETQ DOTPOS (PLUS L EX))
         (SETQ EX 0)
         (COND
          ((GREATERP DOTPOS (DIFFERENCE L 1))
           (SETQ LST (NCONC* LST (NLIST '|0| (PLUS (DIFFERENCE DOTPOS L) 1)))))
          (T
           (PROG ()
            WHILELABEL
             (COND ((NOT (LESSP DOTPOS 1)) (RETURN NIL)))
             (PROGN (SETQ LST (CONS '|0| LST)) (SETQ DOTPOS (PLUS DOTPOS 1)))
             (GO WHILELABEL)))))))
      (COND (S (PROGN (SETQ LST (CONS '- LST)) (SETQ DOTPOS (PLUS DOTPOS 1)))))
      (COND
       ((NULL *FULLPREC)
        (PROGN
         (SETQ LST (REVERSIP LST))
         (PROG ()
          WHILELABEL
           (COND
            ((NOT
              (AND LST (EQ (CAR LST) '|0|)
                   (GREATERP (LENGTH LST) (PLUS DOTPOS 1))))
             (RETURN NIL)))
           (SETQ LST (CDR LST))
           (GO WHILELABEL))
         (SETQ LST (REVERSIP LST)))))
      (RETURN (LIST LST EX DOTPOS)))) 
(PUT '|BFPRIN:LST| 'NUMBER-OF-ARGS 3) 
(PUT '|BFPRIN:LST| 'DEFINED-ON-LINE '309) 
(PUT '|BFPRIN:LST| 'DEFINED-IN-FILE 'ARITH/SMLBFLOT.RED) 
(PUT '|BFPRIN:LST| 'PROCEDURE_TYPE
     '(ARROW (TIMES GENERAL GENERAL GENERAL) GENERAL)) 
(DE |BFPRIN:LST| (LST EX DOTPOS)
    (PROG (RESULT EE W J)
      (SETQ J 0)
      (SETQ EE 'E)
      (COND ((AND *FORT (LITER (SETQ W (REVAL1 FORT_EXPONENT T)))) (SETQ EE W))
            (T (SETQ W NIL)))
      (COND
       ((AND (EQ (CAR LST) '-) (EQUAL DOTPOS 1))
        (PROGN (SETQ DOTPOS 2) (SETQ EX (DIFFERENCE EX 1)))))
      (COND
       ((NEQ EX 0)
        (COND
         ((EQ (CAR LST) '-)
          (PROGN (SETQ EX (PLUS EX (DIFFERENCE DOTPOS 2))) (SETQ DOTPOS 2)))
         (T
          (PROGN (SETQ EX (PLUS EX (DIFFERENCE DOTPOS 1))) (SETQ DOTPOS 1)))))
       ((EQUAL DOTPOS (LENGTH LST)) (SETQ DOTPOS (MINUS 1))))
      (PROG (CHAR)
        (SETQ CHAR LST)
       LAB
        (COND ((NULL CHAR) (RETURN NIL)))
        ((LAMBDA (CHAR)
           (PROGN
            (SETQ RESULT (CONS CHAR RESULT))
            (SETQ J (PLUS J 1))
            (SETQ DOTPOS (DIFFERENCE DOTPOS 1))
            (COND
             ((EQUAL J 5)
              (PROGN
               (COND ((AND *NAT *BFSPACE) (SETQ RESULT (CONS BLANK RESULT))))
               (SETQ J 0))))
            (COND
             ((EQUAL DOTPOS 0)
              (PROGN (SETQ RESULT (CONS '|.| RESULT)) (SETQ J (PLUS J 1)))))
            (COND
             ((EQUAL J 5)
              (PROGN
               (COND ((AND *NAT *BFSPACE) (SETQ RESULT (CONS BLANK RESULT))))
               (SETQ J 0))))))
         (CAR CHAR))
        (SETQ CHAR (CDR CHAR))
        (GO LAB))
      (COND
       ((OR (NEQ EX 0) W)
        (PROGN
         (COND ((NOT (AND *NAT *BFSPACE)) (SETQ RESULT (CONS EE RESULT)))
               ((EQUAL J 0)
                (PROGN (SETQ RESULT (CONS BLANK (CONS EE RESULT))) (SETQ J 2)))
               ((EQUAL J 1)
                (PROGN
                 (SETQ RESULT (CONS BLANK (CONS EE (CONS BLANK RESULT))))
                 (SETQ J 4)))
               ((EQUAL J 2)
                (PROGN
                 (SETQ RESULT
                         (CONS BLANK
                               (CONS BLANK (CONS EE (CONS BLANK RESULT)))))
                 (SETQ J 0)))
               ((EQUAL J 3)
                (PROGN
                 (SETQ RESULT (CONS BLANK (CONS EE (CONS BLANK RESULT))))
                 (SETQ J 0)))
               ((EQUAL J 4)
                (PROGN
                 (SETQ RESULT (CONS BLANK (CONS EE (CONS BLANK RESULT))))
                 (SETQ J 2))))
         (SETQ LST
                 (COND ((GREATERP EX 0) (CONS '+ (EXPLODE EX)))
                       (T (EXPLODE EX))))
         (PROG (CHAR)
           (SETQ CHAR LST)
          LAB
           (COND ((NULL CHAR) (RETURN NIL)))
           ((LAMBDA (CHAR)
              (PROGN
               (SETQ RESULT (CONS CHAR RESULT))
               (SETQ J (PLUS J 1))
               (COND
                ((EQUAL J 5)
                 (PROGN
                  (COND
                   ((AND *NAT *BFSPACE) (SETQ RESULT (CONS BLANK RESULT))))
                  (SETQ J 0))))))
            (CAR CHAR))
           (SETQ CHAR (CDR CHAR))
           (GO LAB)))))
      (RETURN (SMALLCOMPRESS (REVERSIP RESULT))))) 
(PUT 'SMALLCOMPRESS 'NUMBER-OF-ARGS 1) 
(PUT 'SMALLCOMPRESS 'DEFINED-ON-LINE '342) 
(PUT 'SMALLCOMPRESS 'DEFINED-IN-FILE 'ARITH/SMLBFLOT.RED) 
(PUT 'SMALLCOMPRESS 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE SMALLCOMPRESS (LI)
    (PROG (LL)
      (COND
       ((GREATERP (SETQ LL (LENGTH LI)) 1000)
        (PROGN
         (SETQ LI (SMALLSPLIT LI (QUOTIENT LL 2)))
         (RETURN (CONCAT (SMALLCOMPRESS (CAR LI)) (SMALLCOMPRESS (CDR LI))))))
       (T
        (RETURN (COMPRESS (CONS '|"| (REVERSIP (CONS '|"| (REVERSIP LI)))))))))) 
(PUT 'SMALLSPLIT 'NUMBER-OF-ARGS 2) 
(PUT 'SMALLSPLIT 'DEFINED-ON-LINE '350) 
(PUT 'SMALLSPLIT 'DEFINED-IN-FILE 'ARITH/SMLBFLOT.RED) 
(PUT 'SMALLSPLIT 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE SMALLSPLIT (LI LN)
    (PROG (AA)
      (PROG (I)
        (SETQ I 1)
       LAB
        (COND ((MINUSP (DIFFERENCE LN I)) (RETURN NIL)))
        (PROGN (SETQ AA (CONS (CAR LI) AA)) (SETQ LI (REST LI)))
        (SETQ I (PLUS2 I 1))
        (GO LAB))
      (RETURN (CONS (REVERSIP AA) LI)))) 
(PUT 'SCIENTIFIC_NOTATION 'NUMBER-OF-ARGS 1) 
(PUT 'SCIENTIFIC_NOTATION 'DEFINED-ON-LINE '356) 
(PUT 'SCIENTIFIC_NOTATION 'DEFINED-IN-FILE 'ARITH/SMLBFLOT.RED) 
(PUT 'SCIENTIFIC_NOTATION 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE SCIENTIFIC_NOTATION (N)
    (PROG (OLDU OLDL)
      (SETQ OLDU |:UPPER-SCI:|)
      (SETQ OLDL (PLUS |:LOWER-SCI:| 1))
      (COND
       ((FIXP N)
        (PROGN
         (COND
          ((LESSP N 0)
           (RERROR 'ARITH 1
                   (LIST "Invalid argument to scientific_notation:" N))))
         (SETQ |:LOWER-SCI:| (DIFFERENCE N 1))
         (SETQ |:UPPER-SCI:| N)
         NIL))
       ((AND (EQCAR N 'LIST) (EQUAL (LENGTH N) 3))
        (COND
         ((NOT (AND (FIXP (CADR N)) (FIXP (CADDR N))))
          (RERROR 'ARITH 2
                  (LIST "Invalid argument to scientific_notation:" N)))
         (T
          (PROGN
           (SETQ |:UPPER-SCI:| (CADR N))
           (SETQ |:LOWER-SCI:| (DIFFERENCE (CADDR N) 1)))))))
      (RETURN (LIST 'LIST OLDU OLDL)))) 
(FLAG '(SCIENTIFIC_NOTATION) 'OPFN) 
(PUT '|ORDER:| 'NUMBER-OF-ARGS 1) 
(PUT '|ORDER:| 'DEFINED-ON-LINE '377) 
(PUT '|ORDER:| 'DEFINED-IN-FILE 'ARITH/SMLBFLOT.RED) 
(PUT '|ORDER:| 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE |ORDER:| (NMBR)
    (COND ((EQUAL (CADR NMBR) 0) 0)
          (T (PLUS (|MSD:| (ABS (CADR NMBR))) (DIFFERENCE (CDDR NMBR) 1))))) 
(DE |DECPREC:| (NMBR K)
    (CONS '|:RD:| (CONS (ASHIFT (CADR NMBR) (MINUS K)) (PLUS (CDDR NMBR) K)))) 
(PUT '|DECPREC:| 'NUMBER-OF-ARGS 2) 
(PUT '|DECPREC:| 'DEFINED-ON-LINE '385) 
(PUT '|DECPREC:| 'DEFINED-IN-FILE 'ARITH/SMLBFLOT.RED) 
(PUT '|DECPREC:| 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(PUTC '|DECPREC:| 'INLINE
      '(LAMBDA (NMBR K)
         (CONS '|:RD:|
               (CONS (ASHIFT (CADR NMBR) (MINUS K)) (PLUS (CDDR NMBR) K))))) 
(DE |INCPREC:| (NMBR K)
    (CONS '|:RD:| (CONS (ASHIFT (CADR NMBR) K) (DIFFERENCE (CDDR NMBR) K)))) 
(PUT '|INCPREC:| 'NUMBER-OF-ARGS 2) 
(PUT '|INCPREC:| 'DEFINED-ON-LINE '388) 
(PUT '|INCPREC:| 'DEFINED-IN-FILE 'ARITH/SMLBFLOT.RED) 
(PUT '|INCPREC:| 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(PUTC '|INCPREC:| 'INLINE
      '(LAMBDA (NMBR K)
         (CONS '|:RD:|
               (CONS (ASHIFT (CADR NMBR) K) (DIFFERENCE (CDDR NMBR) K))))) 
(PUT '|CONV:MT| 'NUMBER-OF-ARGS 2) 
(PUT '|CONV:MT| 'DEFINED-ON-LINE '391) 
(PUT '|CONV:MT| 'DEFINED-IN-FILE 'ARITH/SMLBFLOT.RED) 
(PUT '|CONV:MT| 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE |CONV:MT| (NMBR K)
    (COND
     ((AND (AND (EQCAR NMBR '|:RD:|) (NOT (ATOM (CDR NMBR)))) (FIXP K)
           (GREATERP K 0))
      (COND ((EQUAL (SETQ K (DIFFERENCE (|MSD:| (ABS (CADR NMBR))) K)) 0) NMBR)
            ((LESSP K 0)
             ((LAMBDA (G545)
                (CONS '|:RD:|
                      (CONS (ASHIFT (CADR NMBR) G545)
                            (DIFFERENCE (CDDR NMBR) G545))))
              (MINUS K)))
            (T
             (|ROUND:LAST|
              ((LAMBDA (G547)
                 (CONS '|:RD:|
                       (CONS (ASHIFT (CADR NMBR) (MINUS G547))
                             (PLUS (CDDR NMBR) G547))))
               (DIFFERENCE K 1))))))
     (T (BFLERRMSG '|CONV:MT|)))) 
(PUT '|ROUND:MT| 'NUMBER-OF-ARGS 2) 
(PUT '|ROUND:MT| 'DEFINED-ON-LINE '402) 
(PUT '|ROUND:MT| 'DEFINED-IN-FILE 'ARITH/SMLBFLOT.RED) 
(PUT '|ROUND:MT| 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE |ROUND:MT| (NMBR K)
    (COND
     ((AND (AND (EQCAR NMBR '|:RD:|) (NOT (ATOM (CDR NMBR)))) (FIXP K)
           (GREATERP K 0))
      (COND
       ((LESSP
         (SETQ K (DIFFERENCE (DIFFERENCE (|MSD:| (ABS (CADR NMBR))) K) 1)) 0)
        NMBR)
       ((EQUAL K 0) (|ROUND:LAST| NMBR))
       (T
        (|ROUND:LAST|
         (CONS '|:RD:|
               (CONS (ASHIFT (CADR NMBR) (MINUS K)) (PLUS (CDDR NMBR) K)))))))
     (T (BFLERRMSG '|ROUND:MT|)))) 
(PUT '|ROUND:EP| 'NUMBER-OF-ARGS 2) 
(PUT '|ROUND:EP| 'DEFINED-ON-LINE '413) 
(PUT '|ROUND:EP| 'DEFINED-IN-FILE 'ARITH/SMLBFLOT.RED) 
(PUT '|ROUND:EP| 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE |ROUND:EP| (NMBR K)
    (COND
     ((AND (AND (EQCAR NMBR '|:RD:|) (NOT (ATOM (CDR NMBR)))) (FIXP K))
      (COND ((LESSP (SETQ K (DIFFERENCE (DIFFERENCE K 1) (CDDR NMBR))) 0) NMBR)
            ((EQUAL K 0) (|ROUND:LAST| NMBR))
            (T
             (|ROUND:LAST|
              (CONS '|:RD:|
                    (CONS (ASHIFT (CADR NMBR) (MINUS K))
                          (PLUS (CDDR NMBR) K)))))))
     (T (BFLERRMSG '|ROUND:EP|)))) 
(PUT '|ROUND:LAST| 'NUMBER-OF-ARGS 1) 
(PUT '|ROUND:LAST| 'DEFINED-ON-LINE '426) 
(PUT '|ROUND:LAST| 'DEFINED-IN-FILE 'ARITH/SMLBFLOT.RED) 
(PUT '|ROUND:LAST| 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE |ROUND:LAST| (NMBR)
    ((LAMBDA (M E S)
       (PROGN
        (COND ((LESSP M 0) (PROGN (SETQ M (MINUS M)) (SETQ S T))))
        (SETQ M
                (COND ((NOT (EVENP M)) (PLUS (ASHIFT M (MINUS 1)) 1))
                      (T (ASHIFT M (MINUS 1)))))
        (COND (S (SETQ M (MINUS M))))
        (CONS '|:RD:| (CONS M E))))
     (CADR NMBR) (PLUS (CDDR NMBR) 1) NIL)) 
(PUT '|CUT:MT| 'NUMBER-OF-ARGS 2) 
(PUT '|CUT:MT| 'DEFINED-ON-LINE '436) 
(PUT '|CUT:MT| 'DEFINED-IN-FILE 'ARITH/SMLBFLOT.RED) 
(PUT '|CUT:MT| 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE |CUT:MT| (NMBR K)
    (COND
     ((AND (AND (EQCAR NMBR '|:RD:|) (NOT (ATOM (CDR NMBR)))) (FIXP K)
           (GREATERP K 0))
      (COND ((LEQ (SETQ K (DIFFERENCE (|MSD:| (ABS (CADR NMBR))) K)) 0) NMBR)
            (T
             (CONS '|:RD:|
                   (CONS (ASHIFT (CADR NMBR) (MINUS K))
                         (PLUS (CDDR NMBR) K))))))
     (T (BFLERRMSG '|CUT:MT|)))) 
(PUT '|CUT:EP| 'NUMBER-OF-ARGS 2) 
(PUT '|CUT:EP| 'DEFINED-ON-LINE '449) 
(PUT '|CUT:EP| 'DEFINED-IN-FILE 'ARITH/SMLBFLOT.RED) 
(PUT '|CUT:EP| 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE |CUT:EP| (NMBR K)
    (COND
     ((AND (AND (EQCAR NMBR '|:RD:|) (NOT (ATOM (CDR NMBR)))) (FIXP K))
      (COND ((LEQ (SETQ K (DIFFERENCE K (CDDR NMBR))) 0) NMBR)
            (T
             (CONS '|:RD:|
                   (CONS (ASHIFT (CADR NMBR) (MINUS K))
                         (PLUS (CDDR NMBR) K))))))
     (T (BFLERRMSG '|CUT:EP|)))) 
(PUT '|BFTRIM:| 'NUMBER-OF-ARGS 1) 
(PUT '|BFTRIM:| 'DEFINED-ON-LINE '462) 
(PUT '|BFTRIM:| 'DEFINED-IN-FILE 'ARITH/SMLBFLOT.RED) 
(PUT '|BFTRIM:| 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE |BFTRIM:| (V) (NORMBF (|ROUND:MT| V (DIFFERENCE |:BPREC:| 3)))) 
(PUT 'DECIMAL2INTERNAL 'NUMBER-OF-ARGS 2) 
(PUT 'DECIMAL2INTERNAL 'DEFINED-ON-LINE '465) 
(PUT 'DECIMAL2INTERNAL 'DEFINED-IN-FILE 'ARITH/SMLBFLOT.RED) 
(PUT 'DECIMAL2INTERNAL 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE DECIMAL2INTERNAL (BASE10 EXP10)
    (COND
     ((GEQ EXP10 0) (CONS '|:RD:| (CONS (TIMES BASE10 (EXPT 10 EXP10)) 0)))
     (T (DIVIDE-BY-POWER-OF-TEN (CONS '|:RD:| (CONS BASE10 0)) (MINUS EXP10))))) 
(PUT '|READ:NUM| 'NUMBER-OF-ARGS 1) 
(PUT '|READ:NUM| 'DEFINED-ON-LINE '469) 
(PUT '|READ:NUM| 'DEFINED-IN-FILE 'ARITH/SMLBFLOT.RED) 
(PUT '|READ:NUM| 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE |READ:NUM| (N)
    (COND ((FIXP N) (CONS '|:RD:| (CONS N 0)))
          ((NOT (OR (NUMBERP N) (STRINGP N))) (BFLERRMSG '|READ:NUM|))
          (T
           (PROG (J M SIGN CH U V L APPEAR. APPEAR/)
             (SETQ J 0)
             (SETQ M 0)
             (SETQ SIGN 0)
             (SETQ J (SETQ M 0))
             (SETQ SIGN 1)
             (SETQ U (SETQ V (SETQ APPEAR. (SETQ APPEAR/ NIL))))
             (SETQ L (EXPLODE N))
            LOOP
             (SETQ CH (CAR L))
             (COND
              ((DIGIT CH) (PROGN (SETQ U (CONS CH U)) (SETQ J (PLUS J 1))))
              ((EQ CH '|.|) (PROGN (SETQ APPEAR. T) (SETQ J 0)))
              ((EQ CH '/) (PROGN (SETQ APPEAR/ T) (SETQ V U) (SETQ U NIL)))
              ((EQ CH '-) (SETQ SIGN (MINUS 1)))
              ((MEMQ CH '(|e| |d| |b| E D B)) (GO JUMP)))
             (COND ((SETQ L (CDR L)) (GO LOOP)) (T (GO MAKE)))
            JUMP
             (PROG ()
              WHILELABEL
               (COND ((NOT (SETQ L (CDR L))) (RETURN NIL)))
               (PROGN
                (COND
                 ((OR (DIGIT (SETQ CH (CAR L))) (EQ CH '-))
                  (SETQ V (CONS CH V)))))
               (GO WHILELABEL))
             (SETQ L (REVERSE V))
             (COND ((EQ (CAR L) '-) (SETQ M (MINUS (COMPRESS (CDR L)))))
                   (T (SETQ M (COMPRESS L))))
            MAKE
             (SETQ U (REVERSE U))
             (SETQ V (REVERSE V))
             (COND
              (APPEAR/
               (RETURN
                (|CONV:R2BF|
                 (|MAKE:RATNUM| (TIMES SIGN (COMPRESS V)) (COMPRESS U))
                 (COND (|:BPREC:| |:BPREC:|) (T 170))))))
             (COND (APPEAR. (SETQ J (MINUS J))) (T (SETQ J 0)))
             (COND ((EQUAL SIGN 1) (SETQ U (COMPRESS U)))
                   (T (SETQ U (MINUS (COMPRESS U)))))
             (RETURN
              ((LAMBDA (|:BPREC:|)
                 (|ROUND:MT| (DECIMAL2INTERNAL U (PLUS J M)) |:BPREC:|))
               (COND (|:BPREC:| |:BPREC:|) (T (|MSD:| (ABS U)))))))))) 
(PUT '|ABS:| 'NUMBER-OF-ARGS 1) 
(PUT '|ABS:| 'DEFINED-ON-LINE '518) 
(PUT '|ABS:| 'DEFINED-IN-FILE 'ARITH/SMLBFLOT.RED) 
(PUT '|ABS:| 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE |ABS:| (NMBR)
    (COND ((GREATERP (CADR NMBR) 0) NMBR)
          (T (CONS '|:RD:| (CONS (MINUS (CADR NMBR)) (CDDR NMBR)))))) 
(PUT '|MINUS:| 'NUMBER-OF-ARGS 1) 
(PUT '|MINUS:| 'DEFINED-ON-LINE '523) 
(PUT '|MINUS:| 'DEFINED-IN-FILE 'ARITH/SMLBFLOT.RED) 
(PUT '|MINUS:| 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE |MINUS:| (NMBR) (CONS '|:RD:| (CONS (MINUS (CADR NMBR)) (CDDR NMBR)))) 
(PUT '|PLUS:| 'NUMBER-OF-ARGS 2) 
(PUT '|PLUS:| 'DEFINED-ON-LINE '528) 
(PUT '|PLUS:| 'DEFINED-IN-FILE 'ARITH/SMLBFLOT.RED) 
(PUT '|PLUS:| 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE |PLUS:| (N1 N2)
    (PROG (M1 M2 E1 E2 D)
      (RETURN
       (COND ((EQUAL (SETQ M1 (CADR N1)) 0) N2)
             ((EQUAL (SETQ M2 (CADR N2)) 0) N1)
             ((EQUAL
               (SETQ D (DIFFERENCE (SETQ E1 (CDDR N1)) (SETQ E2 (CDDR N2)))) 0)
              (CONS '|:RD:| (CONS (PLUS M1 M2) E1)))
             ((GREATERP D 0) (CONS '|:RD:| (CONS (PLUS (ASHIFT M1 D) M2) E2)))
             (T (CONS '|:RD:| (CONS (PLUS M1 (ASHIFT M2 (MINUS D))) E1))))))) 
(PUT '|DIFFERENCE:| 'NUMBER-OF-ARGS 2) 
(PUT '|DIFFERENCE:| 'DEFINED-ON-LINE '537) 
(PUT '|DIFFERENCE:| 'DEFINED-IN-FILE 'ARITH/SMLBFLOT.RED) 
(PUT '|DIFFERENCE:| 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE |DIFFERENCE:| (N1 N2)
    (PROG (M1 M2 E1 E2 D)
      (RETURN
       (COND ((EQUAL (SETQ M1 (CADR N1)) 0) (|MINUS:| N2))
             ((EQUAL (SETQ M2 (CADR N2)) 0) N1)
             ((EQUAL
               (SETQ D (DIFFERENCE (SETQ E1 (CDDR N1)) (SETQ E2 (CDDR N2)))) 0)
              (CONS '|:RD:| (CONS (DIFFERENCE M1 M2) E1)))
             ((GREATERP D 0)
              (CONS '|:RD:| (CONS (DIFFERENCE (ASHIFT M1 D) M2) E2)))
             (T
              (CONS '|:RD:|
                    (CONS (DIFFERENCE M1 (ASHIFT M2 (MINUS D))) E1))))))) 
(PUT '|TIMES:| 'NUMBER-OF-ARGS 2) 
(PUT '|TIMES:| 'DEFINED-ON-LINE '546) 
(PUT '|TIMES:| 'DEFINED-IN-FILE 'ARITH/SMLBFLOT.RED) 
(PUT '|TIMES:| 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE |TIMES:| (N1 N2)
    (CONS '|:RD:|
          (CONS (TIMES (CADR N1) (CADR N2)) (PLUS (CDDR N1) (CDDR N2))))) 
(PUT '|DIVIDE:| 'NUMBER-OF-ARGS 3) 
(PUT '|DIVIDE:| 'DEFINED-ON-LINE '551) 
(PUT '|DIVIDE:| 'DEFINED-IN-FILE 'ARITH/SMLBFLOT.RED) 
(PUT '|DIVIDE:| 'PROCEDURE_TYPE
     '(ARROW (TIMES GENERAL GENERAL GENERAL) GENERAL)) 
(DE |DIVIDE:| (N1 N2 K)
    (PROG ()
      (SETQ N1 (|CONV:MT| N1 (PLUS K (|MSD:| (ABS (CADR N2))) 1)))
      (SETQ N1
              (CONS '|:RD:|
                    (CONS (QUOTIENT (CADR N1) (CADR N2))
                          (DIFFERENCE (CDDR N1) (CDDR N2)))))
      (RETURN (|ROUND:MT| N1 K)))) 
(PUT '|MAX2:| 'NUMBER-OF-ARGS 2) 
(PUT '|MAX2:| 'DEFINED-ON-LINE '562) 
(PUT '|MAX2:| 'DEFINED-IN-FILE 'ARITH/SMLBFLOT.RED) 
(PUT '|MAX2:| 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE |MAX2:| (A B) (COND ((|GREATERP:| A B) A) (T B))) 
(PUT '|MAX:| 'DEFINED-ON-LINE '567) 
(PUT '|MAX:| 'DEFINED-IN-FILE 'ARITH/SMLBFLOT.RED) 
(PUT '|MAX:| 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DM |MAX:| (X) (EXPAND (CDR X) '|MAX2:|)) 
(PUT '|MIN2:| 'NUMBER-OF-ARGS 2) 
(PUT '|MIN2:| 'DEFINED-ON-LINE '569) 
(PUT '|MIN2:| 'DEFINED-IN-FILE 'ARITH/SMLBFLOT.RED) 
(PUT '|MIN2:| 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE |MIN2:| (A B) (COND ((|GREATERP:| A B) B) (T A))) 
(PUT '|MIN:| 'DEFINED-ON-LINE '574) 
(PUT '|MIN:| 'DEFINED-IN-FILE 'ARITH/SMLBFLOT.RED) 
(PUT '|MIN:| 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DM |MIN:| (X) (EXPAND (CDR X) '|MIN2:|)) 
(PUT '|GREATERP:| 'NUMBER-OF-ARGS 2) 
(PUT '|GREATERP:| 'DEFINED-ON-LINE '576) 
(PUT '|GREATERP:| 'DEFINED-IN-FILE 'ARITH/SMLBFLOT.RED) 
(PUT '|GREATERP:| 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE |GREATERP:| (A B)
    (COND ((EQUAL (CADR A) 0) (LESSP (CADR B) 0))
          ((EQUAL (CADR B) 0) (GREATERP (CADR A) 0))
          ((EQUAL (CDDR A) (CDDR B)) (GREATERP (CADR A) (CADR B)))
          (T
           ((LAMBDA (A B)
              ((LAMBDA (D MA MB)
                 (COND ((EQUAL D 0) (GREATERP MA MB))
                       (T
                        ((LAMBDA (P2)
                           (COND ((GREATERP D P2) (GREATERP MA 0))
                                 ((LESSP D (MINUS P2)) (LESSP MB 0))
                                 ((GREATERP D 0) (GREATERP (ASHIFT MA D) MB))
                                 (T (GREATERP MA (ASHIFT MB (MINUS D))))))
                         (TIMES 2 |:BPREC:|)))))
               (DIFFERENCE (CDDR A) (CDDR B)) (CADR A) (CADR B)))
            (NORMBF A) (NORMBF B))))) 
(PUT '|EQUAL:| 'NUMBER-OF-ARGS 2) 
(PUT '|EQUAL:| 'DEFINED-ON-LINE '590) 
(PUT '|EQUAL:| 'DEFINED-IN-FILE 'ARITH/SMLBFLOT.RED) 
(PUT '|EQUAL:| 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE |EQUAL:| (A B)
    (OR (AND (ZEROP (CADR A)) (ZEROP (CADR B)))
        (AND (EQUAL (CDDR (SETQ A (NORMBF A))) (CDDR (SETQ B (NORMBF B))))
             (EQUAL (CADR A) (CADR B))))) 
(PUT '|LESSP:| 'NUMBER-OF-ARGS 2) 
(PUT '|LESSP:| 'DEFINED-ON-LINE '595) 
(PUT '|LESSP:| 'DEFINED-IN-FILE 'ARITH/SMLBFLOT.RED) 
(PUT '|LESSP:| 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE |LESSP:| (N1 N2) (|GREATERP:| N2 N1)) 
(PUT '|LEQ:| 'NUMBER-OF-ARGS 2) 
(PUT '|LEQ:| 'DEFINED-ON-LINE '600) 
(PUT '|LEQ:| 'DEFINED-IN-FILE 'ARITH/SMLBFLOT.RED) 
(PUT '|LEQ:| 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE |LEQ:| (N1 N2) (NOT (|GREATERP:| N1 N2))) 
(PUT '|MINUSP:| 'NUMBER-OF-ARGS 1) 
(PUT '|MINUSP:| 'DEFINED-ON-LINE '605) 
(PUT '|MINUSP:| 'DEFINED-IN-FILE 'ARITH/SMLBFLOT.RED) 
(PUT '|MINUSP:| 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE |MINUSP:| (X)
    (AND (AND (EQCAR X '|:RD:|) (NOT (ATOM (CDR X)))) (LESSP (CADR X) 0))) 
(PUT '|MAKE:RATNUM| 'NUMBER-OF-ARGS 2) 
(PUT '|MAKE:RATNUM| 'DEFINED-ON-LINE '610) 
(PUT '|MAKE:RATNUM| 'DEFINED-IN-FILE 'ARITH/SMLBFLOT.RED) 
(PUT '|MAKE:RATNUM| 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE |MAKE:RATNUM| (NM DN)
    (COND ((ZEROP DN) (RERROR 'ARITH 3 "Zero divisor in make:ratnum"))
          ((GREATERP DN 0) (CONS '|:RATNUM:| (CONS NM DN)))
          (T (CONS '|:RATNUM:| (MINUS (CONS NM (MINUS DN))))))) 
(PUT '|RATNUMP:| 'NUMBER-OF-ARGS 1) 
(PUT '|RATNUMP:| 'DEFINED-ON-LINE '624) 
(PUT '|RATNUMP:| 'DEFINED-IN-FILE 'ARITH/SMLBFLOT.RED) 
(PUT '|RATNUMP:| 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE |RATNUMP:| (X) (EQCAR X '|:RATNUM:|)) 
(DE |NUMR:| (RNMBR) (CADR RNMBR)) 
(PUT '|NUMR:| 'NUMBER-OF-ARGS 1) 
(PUT '|NUMR:| 'DEFINED-ON-LINE '630) 
(PUT '|NUMR:| 'DEFINED-IN-FILE 'ARITH/SMLBFLOT.RED) 
(PUT '|NUMR:| 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(PUTC '|NUMR:| 'INLINE '(LAMBDA (RNMBR) (CADR RNMBR))) 
(DE |DENM:| (RNMBR) (CDDR RNMBR)) 
(PUT '|DENM:| 'NUMBER-OF-ARGS 1) 
(PUT '|DENM:| 'DEFINED-ON-LINE '635) 
(PUT '|DENM:| 'DEFINED-IN-FILE 'ARITH/SMLBFLOT.RED) 
(PUT '|DENM:| 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(PUTC '|DENM:| 'INLINE '(LAMBDA (RNMBR) (CDDR RNMBR))) 
(PUT '|CONV:R2BF| 'NUMBER-OF-ARGS 2) 
(PUT '|CONV:R2BF| 'DEFINED-ON-LINE '640) 
(PUT '|CONV:R2BF| 'DEFINED-IN-FILE 'ARITH/SMLBFLOT.RED) 
(PUT '|CONV:R2BF| 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE |CONV:R2BF| (RNMBR K)
    (COND
     ((AND (|RATNUMP:| RNMBR) (FIXP K) (GREATERP K 0))
      (|DIVIDE:| (CONS '|:RD:| (CONS (CADR RNMBR) 0))
                 (CONS '|:RD:| (CONS (CDDR RNMBR) 0)) K))
     (T (BFLERRMSG '|CONV:R2BF|)))) 
(ENDMODULE) 