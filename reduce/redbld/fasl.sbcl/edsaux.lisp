(cl:declaim (cl:optimize cl:debug cl:safety))
(cl:declaim (sb-ext:muffle-conditions sb-ext:compiler-note cl:style-warning))
(MODULE (LIST 'EDSAUX)) 
(FLUID '(*EDSVERBOSE *EDSDEBUG)) 
(PUT 'INDKRNS 'NUMBER-OF-ARGS 1) 
(PUT 'INDKRNS 'DEFINED-ON-LINE '39) 
(PUT 'INDKRNS 'DEFINED-IN-FILE 'EDS/EDSAUX.RED) 
(PUT 'INDKRNS 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE INDKRNS (S)
    (PROG (F FORALL-RESULT FORALL-ENDPTR)
      (SETQ F (CADDR S))
     STARTOVER
      (COND ((NULL F) (RETURN NIL)))
      (SETQ FORALL-RESULT
              ((LAMBDA (F)
                 (COND
                  ((EQUAL (CDR (SETQ F (TRTERM F))) (CONS 1 1))
                   (LIST (CAR F)))))
               (CAR F)))
      (SETQ FORALL-ENDPTR (LASTPAIR FORALL-RESULT))
      (SETQ F (CDR F))
      (COND ((ATOM FORALL-ENDPTR) (GO STARTOVER)))
     LOOPLABEL
      (COND ((NULL F) (RETURN FORALL-RESULT)))
      (RPLACD FORALL-ENDPTR
              ((LAMBDA (F)
                 (COND
                  ((EQUAL (CDR (SETQ F (TRTERM F))) (CONS 1 1))
                   (LIST (CAR F)))))
               (CAR F)))
      (SETQ FORALL-ENDPTR (LASTPAIR FORALL-ENDPTR))
      (SETQ F (CDR F))
      (GO LOOPLABEL))) 
(PUT 'DEPKRNS 'NUMBER-OF-ARGS 1) 
(PUT 'DEPKRNS 'DEFINED-ON-LINE '48) 
(PUT 'DEPKRNS 'DEFINED-IN-FILE 'EDS/EDSAUX.RED) 
(PUT 'DEPKRNS 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE DEPKRNS (S)
    (PROG (F FORALL-RESULT FORALL-ENDPTR)
      (SETQ F (CADR S))
     STARTOVER
      (COND ((NULL F) (RETURN NIL)))
      (SETQ FORALL-RESULT
              ((LAMBDA (F)
                 (COND
                  ((AND (EQUAL (CDAR F) (CONS 1 1)) (EQUAL (DEGREEPF F) 1))
                   (LIST (CAAR F)))))
               (CAR F)))
      (SETQ FORALL-ENDPTR (LASTPAIR FORALL-RESULT))
      (SETQ F (CDR F))
      (COND ((ATOM FORALL-ENDPTR) (GO STARTOVER)))
     LOOPLABEL
      (COND ((NULL F) (RETURN FORALL-RESULT)))
      (RPLACD FORALL-ENDPTR
              ((LAMBDA (F)
                 (COND
                  ((AND (EQUAL (CDAR F) (CONS 1 1)) (EQUAL (DEGREEPF F) 1))
                   (LIST (CAAR F)))))
               (CAR F)))
      (SETQ FORALL-ENDPTR (LASTPAIR FORALL-ENDPTR))
      (SETQ F (CDR F))
      (GO LOOPLABEL))) 
(PUT 'PRLKRNS 'NUMBER-OF-ARGS 1) 
(PUT 'PRLKRNS 'DEFINED-ON-LINE '58) 
(PUT 'PRLKRNS 'DEFINED-IN-FILE 'EDS/EDSAUX.RED) 
(PUT 'PRLKRNS 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE PRLKRNS (S) (SETDIFF (EDSCOB S) (APPEND (INDKRNS S) (DEPKRNS S)))) 
(PUT 'REMKRNS 'NUMBER-OF-ARGS 1) 
(PUT 'REMKRNS 'DEFINED-ON-LINE '66) 
(PUT 'REMKRNS 'DEFINED-IN-FILE 'EDS/EDSAUX.RED) 
(PUT 'REMKRNS 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE REMKRNS (S)
    (PROG (P)
      (SETQ P (LIST 'INDKRNS 'DEPKRNS 'PRLKRNS))
     LAB
      (COND ((NULL P) (RETURN NIL)))
      ((LAMBDA (P) (REMPROPEDS S P)) (CAR P))
      (SETQ P (CDR P))
      (GO LAB))) 
(PUT 'DEGREEPART 'NUMBER-OF-ARGS 2) 
(PUT 'DEGREEPART 'DEFINED-ON-LINE '74) 
(PUT 'DEGREEPART 'DEFINED-IN-FILE 'EDS/EDSAUX.RED) 
(PUT 'DEGREEPART 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE DEGREEPART (S D)
    (PROG (F FORALL-RESULT FORALL-ENDPTR)
      (SETQ F S)
     STARTOVER
      (COND ((NULL F) (RETURN NIL)))
      (SETQ FORALL-RESULT
              ((LAMBDA (F) (COND ((EQUAL (DEGREEPF F) D) (LIST F)))) (CAR F)))
      (SETQ FORALL-ENDPTR (LASTPAIR FORALL-RESULT))
      (SETQ F (CDR F))
      (COND ((ATOM FORALL-ENDPTR) (GO STARTOVER)))
     LOOPLABEL
      (COND ((NULL F) (RETURN FORALL-RESULT)))
      (RPLACD FORALL-ENDPTR
              ((LAMBDA (F) (COND ((EQUAL (DEGREEPF F) D) (LIST F)))) (CAR F)))
      (SETQ FORALL-ENDPTR (LASTPAIR FORALL-ENDPTR))
      (SETQ F (CDR F))
      (GO LOOPLABEL))) 
(PUT 'SCALARPART 'NUMBER-OF-ARGS 1) 
(PUT 'SCALARPART 'DEFINED-ON-LINE '79) 
(PUT 'SCALARPART 'DEFINED-IN-FILE 'EDS/EDSAUX.RED) 
(PUT 'SCALARPART 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE SCALARPART (S) (DEGREEPART S 0)) 
(PUT 'PFAFFPART 'NUMBER-OF-ARGS 1) 
(PUT 'PFAFFPART 'DEFINED-ON-LINE '84) 
(PUT 'PFAFFPART 'DEFINED-IN-FILE 'EDS/EDSAUX.RED) 
(PUT 'PFAFFPART 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE PFAFFPART (S) (DEGREEPART S 1)) 
(PUT 'NONPFAFFPART 'NUMBER-OF-ARGS 1) 
(PUT 'NONPFAFFPART 'DEFINED-ON-LINE '89) 
(PUT 'NONPFAFFPART 'DEFINED-IN-FILE 'EDS/EDSAUX.RED) 
(PUT 'NONPFAFFPART 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE NONPFAFFPART (S)
    (PROG (F FORALL-RESULT FORALL-ENDPTR)
      (SETQ F S)
     STARTOVER
      (COND ((NULL F) (RETURN NIL)))
      (SETQ FORALL-RESULT
              ((LAMBDA (F) (COND ((NEQ (DEGREEPF F) 1) (LIST F)))) (CAR F)))
      (SETQ FORALL-ENDPTR (LASTPAIR FORALL-RESULT))
      (SETQ F (CDR F))
      (COND ((ATOM FORALL-ENDPTR) (GO STARTOVER)))
     LOOPLABEL
      (COND ((NULL F) (RETURN FORALL-RESULT)))
      (RPLACD FORALL-ENDPTR
              ((LAMBDA (F) (COND ((NEQ (DEGREEPF F) 1) (LIST F)))) (CAR F)))
      (SETQ FORALL-ENDPTR (LASTPAIR FORALL-ENDPTR))
      (SETQ F (CDR F))
      (GO LOOPLABEL))) 
(PUT 'SOLVEDPART 'NUMBER-OF-ARGS 1) 
(PUT 'SOLVEDPART 'DEFINED-ON-LINE '94) 
(PUT 'SOLVEDPART 'DEFINED-IN-FILE 'EDS/EDSAUX.RED) 
(PUT 'SOLVEDPART 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE SOLVEDPART (S)
    (PROG (F FORALL-RESULT FORALL-ENDPTR)
      (SETQ F S)
     STARTOVER
      (COND ((NULL F) (RETURN NIL)))
      (SETQ FORALL-RESULT
              ((LAMBDA (F)
                 (COND ((AND F (EQUAL (CDAR F) (CONS 1 1))) (LIST F))))
               (CAR F)))
      (SETQ FORALL-ENDPTR (LASTPAIR FORALL-RESULT))
      (SETQ F (CDR F))
      (COND ((ATOM FORALL-ENDPTR) (GO STARTOVER)))
     LOOPLABEL
      (COND ((NULL F) (RETURN FORALL-RESULT)))
      (RPLACD FORALL-ENDPTR
              ((LAMBDA (F)
                 (COND ((AND F (EQUAL (CDAR F) (CONS 1 1))) (LIST F))))
               (CAR F)))
      (SETQ FORALL-ENDPTR (LASTPAIR FORALL-ENDPTR))
      (SETQ F (CDR F))
      (GO LOOPLABEL))) 
(PUT 'LPOWS 'NUMBER-OF-ARGS 1) 
(PUT 'LPOWS 'DEFINED-ON-LINE '99) 
(PUT 'LPOWS 'DEFINED-IN-FILE 'EDS/EDSAUX.RED) 
(PUT 'LPOWS 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE LPOWS (S)
    (PROG (F FORALL-RESULT FORALL-ENDPTR)
      (SETQ F S)
      (COND ((NULL F) (RETURN NIL)))
      (SETQ FORALL-RESULT
              (SETQ FORALL-ENDPTR (CONS ((LAMBDA (F) (CAAR F)) (CAR F)) NIL)))
     LOOPLABEL
      (SETQ F (CDR F))
      (COND ((NULL F) (RETURN FORALL-RESULT)))
      (RPLACD FORALL-ENDPTR (CONS ((LAMBDA (F) (CAAR F)) (CAR F)) NIL))
      (SETQ FORALL-ENDPTR (CDR FORALL-ENDPTR))
      (GO LOOPLABEL))) 
(PUT 'SINGLETERMS 'NUMBER-OF-ARGS 1) 
(PUT 'SINGLETERMS 'DEFINED-ON-LINE '105) 
(PUT 'SINGLETERMS 'DEFINED-IN-FILE 'EDS/EDSAUX.RED) 
(PUT 'SINGLETERMS 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE SINGLETERMS (S)
    (OR (NULL S) (AND (NULL (CDR (CAR S))) (SINGLETERMS (CDR S))))) 
(PUT '*A2SYS 'NUMBER-OF-ARGS 1) 
(PUT '*A2SYS 'DEFINED-ON-LINE '111) 
(PUT '*A2SYS 'DEFINED-IN-FILE 'EDS/EDSAUX.RED) 
(PUT '*A2SYS 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE *A2SYS (U)
    (COND
     ((EQCAR U 'LIST)
      (PROG (F FORALL-RESULT FORALL-ENDPTR)
        (SETQ F (CDR (INDEXEXPANDEVAL (LIST U))))
        (COND ((NULL F) (RETURN NIL)))
        (SETQ FORALL-RESULT
                (SETQ FORALL-ENDPTR
                        (CONS ((LAMBDA (F) (XPARTITOP F)) (CAR F)) NIL)))
       LOOPLABEL
        (SETQ F (CDR F))
        (COND ((NULL F) (RETURN FORALL-RESULT)))
        (RPLACD FORALL-ENDPTR (CONS ((LAMBDA (F) (XPARTITOP F)) (CAR F)) NIL))
        (SETQ FORALL-ENDPTR (CDR FORALL-ENDPTR))
        (GO LOOPLABEL)))
     (T (TYPERR U 'LIST)))) 
(PUT '*SYS2A 'NUMBER-OF-ARGS 1) 
(PUT '*SYS2A 'DEFINED-ON-LINE '118) 
(PUT '*SYS2A 'DEFINED-IN-FILE 'EDS/EDSAUX.RED) 
(PUT '*SYS2A 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE *SYS2A (U)
    (CONS 'LIST
          (PROG (F FORALL-RESULT FORALL-ENDPTR)
            (SETQ F U)
            (COND ((NULL F) (RETURN NIL)))
            (SETQ FORALL-RESULT
                    (SETQ FORALL-ENDPTR
                            (CONS ((LAMBDA (F) (*PF2A F)) (CAR F)) NIL)))
           LOOPLABEL
            (SETQ F (CDR F))
            (COND ((NULL F) (RETURN FORALL-RESULT)))
            (RPLACD FORALL-ENDPTR (CONS ((LAMBDA (F) (*PF2A F)) (CAR F)) NIL))
            (SETQ FORALL-ENDPTR (CDR FORALL-ENDPTR))
            (GO LOOPLABEL)))) 
(PUT '*SYS2A1 'NUMBER-OF-ARGS 2) 
(PUT '*SYS2A1 'DEFINED-ON-LINE '123) 
(PUT '*SYS2A1 'DEFINED-IN-FILE 'EDS/EDSAUX.RED) 
(PUT '*SYS2A1 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE *SYS2A1 (U V)
    (CONS 'LIST
          (PROG (F FORALL-RESULT FORALL-ENDPTR)
            (SETQ F U)
            (COND ((NULL F) (RETURN NIL)))
            (SETQ FORALL-RESULT
                    (SETQ FORALL-ENDPTR
                            (CONS ((LAMBDA (F) (*PF2A1 F V)) (CAR F)) NIL)))
           LOOPLABEL
            (SETQ F (CDR F))
            (COND ((NULL F) (RETURN FORALL-RESULT)))
            (RPLACD FORALL-ENDPTR
                    (CONS ((LAMBDA (F) (*PF2A1 F V)) (CAR F)) NIL))
            (SETQ FORALL-ENDPTR (CDR FORALL-ENDPTR))
            (GO LOOPLABEL)))) 
(PUT 'XPOWS 'NUMBER-OF-ARGS 1) 
(PUT 'XPOWS 'DEFINED-ON-LINE '132) 
(PUT 'XPOWS 'DEFINED-IN-FILE 'EDS/EDSAUX.RED) 
(PUT 'XPOWS 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE XPOWS (F) (COND (F (CONS (CAAR F) (XPOWS (CDR F)))))) 
(PUT 'XCOEFFS 'NUMBER-OF-ARGS 1) 
(PUT 'XCOEFFS 'DEFINED-ON-LINE '137) 
(PUT 'XCOEFFS 'DEFINED-IN-FILE 'EDS/EDSAUX.RED) 
(PUT 'XCOEFFS 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE XCOEFFS (F) (COND (F (CONS (CDAR F) (XCOEFFS (CDR F)))))) 
(PUT 'DEGREEPF 'NUMBER-OF-ARGS 1) 
(PUT 'DEGREEPF 'DEFINED-ON-LINE '142) 
(PUT 'DEGREEPF 'DEFINED-IN-FILE 'EDS/EDSAUX.RED) 
(PUT 'DEGREEPF 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE DEGREEPF (F)
    (COND ((NULL F) 0)
          (T
           ((LAMBDA (X)
              (COND ((NULL X) 0) ((FIXP X) X)
                    (T
                     (RERROR 'EDS 130
                             "Non-integral degree not allowed in EDS"))))
            (DEG*FORM (CAAR F)))))) 
(PUT 'XREORDER 'NUMBER-OF-ARGS 1) 
(PUT 'XREORDER 'DEFINED-ON-LINE '153) 
(PUT 'XREORDER 'DEFINED-IN-FILE 'EDS/EDSAUX.RED) 
(PUT 'XREORDER 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE XREORDER (F)
    (COND
     (F
      (ADDPF (MULTPFSQ (XPARTITOP (CAAR F)) (REORDSQ (CDAR F)))
             (XREORDER (CDR F)))))) 
(PUT 'XREORDER* 'NUMBER-OF-ARGS 1) 
(PUT 'XREORDER* 'DEFINED-ON-LINE '160) 
(PUT 'XREORDER* 'DEFINED-IN-FILE 'EDS/EDSAUX.RED) 
(PUT 'XREORDER* 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE XREORDER* (F)
    (COND ((AND F (CDR F)) (ADDPF (CONS (CAR F) NIL) (XREORDER* (CDR F))))
          (T F))) 
(PUT 'XREPARTIT 'NUMBER-OF-ARGS 1) 
(PUT 'XREPARTIT 'DEFINED-ON-LINE '169) 
(PUT 'XREPARTIT 'DEFINED-IN-FILE 'EDS/EDSAUX.RED) 
(PUT 'XREPARTIT 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE XREPARTIT (F)
    (COND
     (F
      (ADDPF
       (WEDGEPF (XPARTITSQ (SUBS2 (RESIMP (CDAR F)))) (XPARTITOP (CAAR F)))
       (XREPARTIT (CDR F)))))) 
(PUT 'XREPARTIT* 'NUMBER-OF-ARGS 1) 
(PUT 'XREPARTIT* 'DEFINED-ON-LINE '176) 
(PUT 'XREPARTIT* 'DEFINED-IN-FILE 'EDS/EDSAUX.RED) 
(PUT 'XREPARTIT* 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE XREPARTIT* (F)
    (COND
     (F
      (ADDPF (MULTPFSQ (XPARTITOP (CAAR F)) (SUBS2 (RESIMP (CDAR F))))
             (XREPARTIT* (CDR F)))))) 
(PUT 'TRTERM 'NUMBER-OF-ARGS 1) 
(PUT 'TRTERM 'DEFINED-ON-LINE '184) 
(PUT 'TRTERM 'DEFINED-IN-FILE 'EDS/EDSAUX.RED) 
(PUT 'TRTERM 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE TRTERM (F) (COND ((NULL (CDR F)) (CAR F)) (T (TRTERM (CDR F))))) 
(PUT 'LINEARPART 'NUMBER-OF-ARGS 2) 
(PUT 'LINEARPART 'DEFINED-ON-LINE '190) 
(PUT 'LINEARPART 'DEFINED-IN-FILE 'EDS/EDSAUX.RED) 
(PUT 'LINEARPART 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE LINEARPART (F P)
    (COND ((NULL F) NIL)
          ((EQUAL (LENGTH (INTERSECTION (WEDGEFAX (CAAR F)) P)) 1)
           (CONS (CAR F) (LINEARPART (CDR F) P)))
          (T (LINEARPART (CDR F) P)))) 
(PUT 'INHOMOGENEOUSPART 'NUMBER-OF-ARGS 2) 
(PUT 'INHOMOGENEOUSPART 'DEFINED-ON-LINE '199) 
(PUT 'INHOMOGENEOUSPART 'DEFINED-IN-FILE 'EDS/EDSAUX.RED) 
(PUT 'INHOMOGENEOUSPART 'PROCEDURE_TYPE
     '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE INHOMOGENEOUSPART (F P)
    (COND ((NULL F) NIL)
          ((EQUAL (LENGTH (INTERSECTION (WEDGEFAX (CAAR F)) P)) 0)
           (CONS (CAR F) (INHOMOGENEOUSPART (CDR F) P)))
          (T (INHOMOGENEOUSPART (CDR F) P)))) 
(PUT 'XCOEFF 'NUMBER-OF-ARGS 2) 
(PUT 'XCOEFF 'DEFINED-ON-LINE '208) 
(PUT 'XCOEFF 'DEFINED-IN-FILE 'EDS/EDSAUX.RED) 
(PUT 'XCOEFF 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE XCOEFF (F C)
    (COND ((NULL F) NIL)
          (T
           (PROG (Q S)
             (SETQ Q (XDIV C (WEDGEFAX (CAAR F))))
             (COND ((NULL Q) (RETURN (XCOEFF (CDR F) C))))
             (SETQ Q (MKNWEDGE Q))
             (COND ((EQUAL (APPEND Q C) (CAAR F)) (SETQ S 1))
                   (T
                    (SETQ S
                            (CAR
                             (CDAR
                              (WEDGEPF (CONS (CONS Q (CONS 1 1)) NIL)
                                       (CONS (CONS (MKNWEDGE C) (CONS 1 1))
                                             NIL)))))))
             (RETURN
              (CONS (CONS Q (COND ((EQUAL S 1) (CDAR F)) (T (NEGSQ (CDAR F)))))
                    (XCOEFF (CDR F) C))))))) 
(PUT 'XVARSPF 'NUMBER-OF-ARGS 1) 
(PUT 'XVARSPF 'DEFINED-ON-LINE '223) 
(PUT 'XVARSPF 'DEFINED-IN-FILE 'EDS/EDSAUX.RED) 
(PUT 'XVARSPF 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE XVARSPF (F)
    (COND ((NULL F) NIL)
          (T
           (UNION
            (PROG (K FORALL-RESULT FORALL-ENDPTR)
              (SETQ K
                      (APPEND (WEDGEFAX (CAAR F))
                              (APPEND (KERNELS (CAR (CDAR F)))
                                      (KERNELS (CDR (CDAR F))))))
             STARTOVER
              (COND ((NULL K) (RETURN NIL)))
              (SETQ FORALL-RESULT
                      ((LAMBDA (K) (COND ((XVARP K) (LIST K)))) (CAR K)))
              (SETQ FORALL-ENDPTR (LASTPAIR FORALL-RESULT))
              (SETQ K (CDR K))
              (COND ((ATOM FORALL-ENDPTR) (GO STARTOVER)))
             LOOPLABEL
              (COND ((NULL K) (RETURN FORALL-RESULT)))
              (RPLACD FORALL-ENDPTR
                      ((LAMBDA (K) (COND ((XVARP K) (LIST K)))) (CAR K)))
              (SETQ FORALL-ENDPTR (LASTPAIR FORALL-ENDPTR))
              (SETQ K (CDR K))
              (GO LOOPLABEL))
            (XVARSPF (CDR F)))))) 
(PUT 'KERNELSPF 'NUMBER-OF-ARGS 1) 
(PUT 'KERNELSPF 'DEFINED-ON-LINE '234) 
(PUT 'KERNELSPF 'DEFINED-IN-FILE 'EDS/EDSAUX.RED) 
(PUT 'KERNELSPF 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE KERNELSPF (F)
    (COND ((NULL F) NIL)
          (T
           (UNION
            (APPEND (WEDGEFAX (CAAR F))
                    (APPEND (KERNELS (CAR (CDAR F))) (KERNELS (CDR (CDAR F)))))
            (KERNELSPF (CDR F)))))) 
(PUT 'MKFORM* 'NUMBER-OF-ARGS 2) 
(PUT 'MKFORM* 'DEFINED-ON-LINE '245) 
(PUT 'MKFORM* 'DEFINED-IN-FILE 'EDS/EDSAUX.RED) 
(PUT 'MKFORM* 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE MKFORM* (U P) (PROG () (PUTFORM U P) (RETURN U))) 
(PUT 'PURGE 'NUMBER-OF-ARGS 1) 
(PUT 'PURGE 'DEFINED-ON-LINE '257) 
(PUT 'PURGE 'DEFINED-IN-FILE 'EDS/EDSAUX.RED) 
(PUT 'PURGE 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE PURGE (U)
    (COND ((NULL U) NIL) ((MEMBER (CAR U) (CDR U)) (PURGE (CDR U)))
          (T (CONS (CAR U) (PURGE (CDR U)))))) 
(PUT 'RIGHTUNION 'NUMBER-OF-ARGS 2) 
(PUT 'RIGHTUNION 'DEFINED-ON-LINE '265) 
(PUT 'RIGHTUNION 'DEFINED-IN-FILE 'EDS/EDSAUX.RED) 
(PUT 'RIGHTUNION 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE RIGHTUNION (U V)
    (APPEND U
            (PROG (X FORALL-RESULT FORALL-ENDPTR)
              (SETQ X V)
             STARTOVER
              (COND ((NULL X) (RETURN NIL)))
              (SETQ FORALL-RESULT
                      (COND
                       ((AND (NOT (MEMBER (CAR X) U))
                             (NOT (MEMBER (CAR X) (CDR X))))
                        (LIST (CAR X)))))
              (SETQ FORALL-ENDPTR (LASTPAIR FORALL-RESULT))
              (SETQ X (CDR X))
              (COND ((ATOM FORALL-ENDPTR) (GO STARTOVER)))
             LOOPLABEL
              (COND ((NULL X) (RETURN FORALL-RESULT)))
              (RPLACD FORALL-ENDPTR
                      (COND
                       ((AND (NOT (MEMBER (CAR X) U))
                             (NOT (MEMBER (CAR X) (CDR X))))
                        (LIST (CAR X)))))
              (SETQ FORALL-ENDPTR (LASTPAIR FORALL-ENDPTR))
              (SETQ X (CDR X))
              (GO LOOPLABEL)))) 
(PUT 'SUBLISQ 'NUMBER-OF-ARGS 2) 
(PUT 'SUBLISQ 'DEFINED-ON-LINE '273) 
(PUT 'SUBLISQ 'DEFINED-IN-FILE 'EDS/EDSAUX.RED) 
(PUT 'SUBLISQ 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE SUBLISQ (U V)
    (COND ((OR (NULL U) (NULL V)) V)
          (T
           (PROG (X Y)
             (COND ((SETQ X (ATSOC V U)) (RETURN (CDR X))))
             (COND ((ATOM V) (RETURN V)))
             (SETQ Y (CONS (SUBLISQ U (CAR V)) (SUBLISQ U (CDR V))))
             (RETURN (COND ((EQUAL Y V) V) (T Y))))))) 
(PUT 'ORDCOMB 'NUMBER-OF-ARGS 2) 
(PUT 'ORDCOMB 'DEFINED-ON-LINE '286) 
(PUT 'ORDCOMB 'DEFINED-IN-FILE 'EDS/EDSAUX.RED) 
(PUT 'ORDCOMB 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE ORDCOMB (U N)
    (PROG (V M)
      (SETQ M 0)
      (COND ((EQUAL N 0) (RETURN (LIST (LIST))))
            ((LESSP (SETQ M (DIFFERENCE (LENGTH U) N)) 0) (RETURN (LIST)))
            (T
             (PROG (I)
               (SETQ I 1)
              LAB
               (COND ((MINUSP (DIFFERENCE M I)) (RETURN NIL)))
               (PROGN
                (SETQ V
                        (NCONC* V
                                (MAPCONS (ORDCOMB (CDR U) (DIFFERENCE N 1))
                                         (CAR U))))
                (SETQ U (CDR U)))
               (SETQ I (PLUS2 I 1))
               (GO LAB))))
      (RETURN (NCONC* V (LIST U))))) 
(PUT 'UPDKORDL 'NUMBER-OF-ARGS 1) 
(PUT 'UPDKORDL 'DEFINED-ON-LINE '301) 
(PUT 'UPDKORDL 'DEFINED-IN-FILE 'EDS/EDSAUX.RED) 
(PUT 'UPDKORDL 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE UPDKORDL (U)
    (PROG (V W)
      (SETQ V KORD*)
      (SETQ W (APPEND U (SETDIFF V U)))
      (COND ((EQUAL V W) (RETURN V)))
      (SETQ KORD* W)
      (SETQ ALGLIST* (CONS NIL NIL))
      (RETURN V))) 
(PUT 'ALLEQUAL 'NUMBER-OF-ARGS 1) 
(PUT 'ALLEQUAL 'DEFINED-ON-LINE '316) 
(PUT 'ALLEQUAL 'DEFINED-IN-FILE 'EDS/EDSAUX.RED) 
(PUT 'ALLEQUAL 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE ALLEQUAL (U)
    (COND ((LESSP (LENGTH U) 2) T)
          (T (AND (EQUAL (CAR U) (CADR U)) (ALLEQUAL (CDR U)))))) 
(PUT 'ALLEXACT 'NUMBER-OF-ARGS 1) 
(PUT 'ALLEXACT 'DEFINED-ON-LINE '323) 
(PUT 'ALLEXACT 'DEFINED-IN-FILE 'EDS/EDSAUX.RED) 
(PUT 'ALLEXACT 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE ALLEXACT (U)
    (COND ((NULL U) T) (T (AND (EXACT (CAR U)) (ALLEXACT (CDR U)))))) 
(PUT 'COORDS 'NUMBER-OF-ARGS 1) 
(PUT 'COORDS 'DEFINED-ON-LINE '330) 
(PUT 'COORDS 'DEFINED-IN-FILE 'EDS/EDSAUX.RED) 
(PUT 'COORDS 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE COORDS (U)
    (PROG (K FORALL-RESULT FORALL-ENDPTR)
      (SETQ K U)
     STARTOVER
      (COND ((NULL K) (RETURN NIL)))
      (SETQ FORALL-RESULT
              ((LAMBDA (K) (COND ((EXACT K) (LIST (CADR K))))) (CAR K)))
      (SETQ FORALL-ENDPTR (LASTPAIR FORALL-RESULT))
      (SETQ K (CDR K))
      (COND ((ATOM FORALL-ENDPTR) (GO STARTOVER)))
     LOOPLABEL
      (COND ((NULL K) (RETURN FORALL-RESULT)))
      (RPLACD FORALL-ENDPTR
              ((LAMBDA (K) (COND ((EXACT K) (LIST (CADR K))))) (CAR K)))
      (SETQ FORALL-ENDPTR (LASTPAIR FORALL-ENDPTR))
      (SETQ K (CDR K))
      (GO LOOPLABEL))) 
(PUT 'ZIPPF 'NUMBER-OF-ARGS 2) 
(PUT 'ZIPPF 'DEFINED-ON-LINE '337) 
(PUT 'ZIPPF 'DEFINED-IN-FILE 'EDS/EDSAUX.RED) 
(PUT 'ZIPPF 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE ZIPPF (PFL SQL)
    (COND ((OR (NULL PFL) (NULL SQL)) NIL)
          ((AND (CAR (CAR SQL)) (CAR PFL))
           (ADDPF (MULTPFSQ (CAR PFL) (CAR SQL)) (ZIPPF (CDR PFL) (CDR SQL))))
          (T (ZIPPF (CDR PFL) (CDR SQL))))) 
(PUT 'ERRDHH 'NUMBER-OF-ARGS 1) 
(PUT 'ERRDHH 'DEFINED-ON-LINE '352) 
(PUT 'ERRDHH 'DEFINED-IN-FILE 'EDS/EDSAUX.RED) 
(PUT 'ERRDHH 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE ERRDHH (U)
    (RERROR 'EDS 999
            (CONS "Internal EDS error -- please contact David Hartley
*****"
                  (COND ((ATOM U) (LIST U)) (T U))))) 
(PUT 'EDSVERBOSE 'NUMBER-OF-ARGS 3) 
(PUT 'EDSVERBOSE 'DEFINED-ON-LINE '358) 
(PUT 'EDSVERBOSE 'DEFINED-IN-FILE 'EDS/EDSAUX.RED) 
(PUT 'EDSVERBOSE 'PROCEDURE_TYPE
     '(ARROW (TIMES GENERAL GENERAL GENERAL) GENERAL)) 
(DE EDSVERBOSE (MSG V TYPE)
    (COND
     ((OR *EDSVERBOSE *EDSDEBUG)
      (PROG ()
        (COND ((ATOM MSG) (SETQ MSG (LIST MSG))))
        (LPRI MSG)
        (TERPRI)
        (COND ((NULL TYPE) NIL)
              ((EQUAL TYPE 'SF)
               (PROG (F)
                 (SETQ F V)
                LAB
                 (COND ((NULL F) (RETURN NIL)))
                 ((LAMBDA (F) (EDSMATHPRINT (PREPF F))) (CAR F))
                 (SETQ F (CDR F))
                 (GO LAB)))
              ((EQUAL TYPE 'SQ)
               (PROG (F)
                 (SETQ F V)
                LAB
                 (COND ((NULL F) (RETURN NIL)))
                 ((LAMBDA (F) (EDSMATHPRINT (PREPSQ F))) (CAR F))
                 (SETQ F (CDR F))
                 (GO LAB)))
              ((EQUAL TYPE 'SYS)
               (PROG (F)
                 (SETQ F V)
                LAB
                 (COND ((NULL F) (RETURN NIL)))
                 ((LAMBDA (F) (EDSMATHPRINT (PREPPF F))) (CAR F))
                 (SETQ F (CDR F))
                 (GO LAB)))
              ((EQUAL TYPE 'COB) (EDSMATHPRINT (CONS 'LIST V)))
              ((EQUAL TYPE 'MAP)
               (PROG (P)
                 (SETQ P V)
                LAB
                 (COND ((NULL P) (RETURN NIL)))
                 ((LAMBDA (P) (EDSMATHPRINT (LIST 'EQUAL (CAR P) (CDR P))))
                  (CAR P))
                 (SETQ P (CDR P))
                 (GO LAB)))
              ((EQUAL TYPE 'RMAP)
               (PROGN
                (PROG (P)
                  (SETQ P (CAR V))
                 LAB
                  (COND ((NULL P) (RETURN NIL)))
                  ((LAMBDA (P) (EDSMATHPRINT (LIST 'EQUAL (CAR P) (CDR P))))
                   (CAR P))
                  (SETQ P (CDR P))
                  (GO LAB))
                (PROG (P)
                  (SETQ P (CADR V))
                 LAB
                  (COND ((NULL P) (RETURN NIL)))
                  ((LAMBDA (P) (EDSMATHPRINT (LIST 'NEQ P 0))) (CAR P))
                  (SETQ P (CDR P))
                  (GO LAB))))
              ((EQUAL TYPE 'XFORM)
               (PROG (P)
                 (SETQ P V)
                LAB
                 (COND ((NULL P) (RETURN NIL)))
                 ((LAMBDA (P)
                    (EDSMATHPRINT (LIST 'EQUAL (CAR P) (PREPPF (CDR P)))))
                  (CAR P))
                 (SETQ P (CDR P))
                 (GO LAB)))
              ((EQUAL TYPE 'PREFIX) (EDSMATHPRINT V))
              (T (ERRDHH (LIST "Unrecognised type" TYPE "in  edsverbose")))))))) 
(PUT 'EDSDEBUG 'NUMBER-OF-ARGS 3) 
(PUT 'EDSDEBUG 'DEFINED-ON-LINE '396) 
(PUT 'EDSDEBUG 'DEFINED-IN-FILE 'EDS/EDSAUX.RED) 
(PUT 'EDSDEBUG 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL GENERAL) GENERAL)) 
(DE EDSDEBUG (MSG V TYPE) (COND (*EDSDEBUG (EDSVERBOSE MSG V TYPE)))) 
(PUT 'EDSMATHPRINT 'NUMBER-OF-ARGS 1) 
(PUT 'EDSMATHPRINT 'DEFINED-ON-LINE '403) 
(PUT 'EDSMATHPRINT 'DEFINED-IN-FILE 'EDS/EDSAUX.RED) 
(PUT 'EDSMATHPRINT 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE EDSMATHPRINT (F) (PROGN (WRITEPRI (MKQUOTE F) 'ONLY) (TERPRI* T) NIL)) 
(ENDMODULE) 