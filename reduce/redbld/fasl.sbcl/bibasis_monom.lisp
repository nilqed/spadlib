(cl:declaim (cl:optimize cl:debug cl:safety))
(cl:declaim (sb-ext:muffle-conditions sb-ext:compiler-note cl:style-warning))
(MODULE (LIST 'BIBASIS_MONOM)) 
(DE BIBASIS_INSERT (Y X) (RPLACA (RPLACD Y (CONS (CAR Y) (CDR Y))) X)) 
(PUT 'BIBASIS_INSERT 'NUMBER-OF-ARGS 2) 
(PUT 'BIBASIS_INSERT 'DEFINED-ON-LINE '37) 
(PUT 'BIBASIS_INSERT 'DEFINED-IN-FILE 'BIBASIS/BIBASIS_MONOM.RED) 
(PUT 'BIBASIS_INSERT 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(PUTC 'BIBASIS_INSERT 'INLINE
      '(LAMBDA (Y X) (RPLACA (RPLACD Y (CONS (CAR Y) (CDR Y))) X))) 
(DE BIBASIS_REMOVE (Y) (RPLACD (RPLACA Y (CADR Y)) (CDDR Y))) 
(PUT 'BIBASIS_REMOVE 'NUMBER-OF-ARGS 1) 
(PUT 'BIBASIS_REMOVE 'DEFINED-ON-LINE '38) 
(PUT 'BIBASIS_REMOVE 'DEFINED-IN-FILE 'BIBASIS/BIBASIS_MONOM.RED) 
(PUT 'BIBASIS_REMOVE 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(PUTC 'BIBASIS_REMOVE 'INLINE
      '(LAMBDA (Y) (RPLACD (RPLACA Y (CADR Y)) (CDDR Y)))) 
(PUT 'PUSHBACK 'NUMBER-OF-ARGS 2) 
(PUT 'PUSHBACK 'DEFINED-ON-LINE '40) 
(PUT 'PUSHBACK 'DEFINED-IN-FILE 'BIBASIS/BIBASIS_MONOM.RED) 
(PUT 'PUSHBACK 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE PUSHBACK (LIST VALUE)
    (PROG (LISTITERATOR)
      (SETQ LISTITERATOR LIST)
      (PROG ()
       WHILELABEL
        (COND ((NOT (CAR LISTITERATOR)) (RETURN NIL)))
        (PROGN (SETQ LISTITERATOR (CDR LISTITERATOR)) NIL)
        (GO WHILELABEL))
      (RPLACA
       (RPLACD LISTITERATOR (CONS (CAR LISTITERATOR) (CDR LISTITERATOR)))
       VALUE))) 
(PUT 'INITMONOMIALS 'NUMBER-OF-ARGS 0) 
(PUT 'INITMONOMIALS 'DEFINED-ON-LINE '57) 
(PUT 'INITMONOMIALS 'DEFINED-IN-FILE 'BIBASIS/BIBASIS_MONOM.RED) 
(PUT 'INITMONOMIALS 'PROCEDURE_TYPE '(ARROW UNIT GENERAL)) 
(DE INITMONOMIALS NIL
    (PROG ()
      (SETQ FLUIDBIBASISNUMBEROFVARIABLES (LENGTH FLUIDBIBASISVARIABLES))
      (SETQ FLUIDBIBASISSINGLEVARIABLEMONOMIALSS
              (MKVECT FLUIDBIBASISNUMBEROFVARIABLES))
      (PROG (I)
        (SETQ I 1)
       LAB
        (COND
         ((MINUSP (DIFFERENCE FLUIDBIBASISNUMBEROFVARIABLES I)) (RETURN NIL)))
        (PROGN
         (PUTV FLUIDBIBASISSINGLEVARIABLEMONOMIALSS I
               (CREATESINGLEVARIABLEMONOM I))
         NIL)
        (SETQ I (PLUS2 I 1))
        (GO LAB))
      (SETQ FLUIDBIBASISTRIPLEID 0))) 
(DE GETVARIABLE (VARIABLE) (GETV FLUIDBIBASISSINGLEVARIABLEMONOMIALSS VARIABLE)) 
(PUT 'GETVARIABLE 'NUMBER-OF-ARGS 1) 
(PUT 'GETVARIABLE 'DEFINED-ON-LINE '69) 
(PUT 'GETVARIABLE 'DEFINED-IN-FILE 'BIBASIS/BIBASIS_MONOM.RED) 
(PUT 'GETVARIABLE 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(PUTC 'GETVARIABLE 'INLINE
      '(LAMBDA (VARIABLE) (GETV FLUIDBIBASISSINGLEVARIABLEMONOMIALSS VARIABLE))) 
(DE MONOMGETDEGREE (MONOM) (GETV MONOM 0)) 
(PUT 'MONOMGETDEGREE 'NUMBER-OF-ARGS 1) 
(PUT 'MONOMGETDEGREE 'DEFINED-ON-LINE '70) 
(PUT 'MONOMGETDEGREE 'DEFINED-IN-FILE 'BIBASIS/BIBASIS_MONOM.RED) 
(PUT 'MONOMGETDEGREE 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(PUTC 'MONOMGETDEGREE 'INLINE '(LAMBDA (MONOM) (GETV MONOM 0))) 
(DE MONOMSETDEGREE (MONOM DEGREE) (PUTV MONOM 0 DEGREE)) 
(PUT 'MONOMSETDEGREE 'NUMBER-OF-ARGS 2) 
(PUT 'MONOMSETDEGREE 'DEFINED-ON-LINE '71) 
(PUT 'MONOMSETDEGREE 'DEFINED-IN-FILE 'BIBASIS/BIBASIS_MONOM.RED) 
(PUT 'MONOMSETDEGREE 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(PUTC 'MONOMSETDEGREE 'INLINE '(LAMBDA (MONOM DEGREE) (PUTV MONOM 0 DEGREE))) 
(DE MONOMGETEXPONENT (MONOM) (GETV MONOM 1)) 
(PUT 'MONOMGETEXPONENT 'NUMBER-OF-ARGS 1) 
(PUT 'MONOMGETEXPONENT 'DEFINED-ON-LINE '72) 
(PUT 'MONOMGETEXPONENT 'DEFINED-IN-FILE 'BIBASIS/BIBASIS_MONOM.RED) 
(PUT 'MONOMGETEXPONENT 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(PUTC 'MONOMGETEXPONENT 'INLINE '(LAMBDA (MONOM) (GETV MONOM 1))) 
(DE MONOMSETEXPONENT (MONOM EXPONENT) (PUTV MONOM 1 EXPONENT)) 
(PUT 'MONOMSETEXPONENT 'NUMBER-OF-ARGS 2) 
(PUT 'MONOMSETEXPONENT 'DEFINED-ON-LINE '73) 
(PUT 'MONOMSETEXPONENT 'DEFINED-IN-FILE 'BIBASIS/BIBASIS_MONOM.RED) 
(PUT 'MONOMSETEXPONENT 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(PUTC 'MONOMSETEXPONENT 'INLINE
      '(LAMBDA (MONOM EXPONENT) (PUTV MONOM 1 EXPONENT))) 
(PUT 'MONOMGETVARIABLEDEGREE 'NUMBER-OF-ARGS 2) 
(PUT 'MONOMGETVARIABLEDEGREE 'DEFINED-ON-LINE '76) 
(PUT 'MONOMGETVARIABLEDEGREE 'DEFINED-IN-FILE 'BIBASIS/BIBASIS_MONOM.RED) 
(PUT 'MONOMGETVARIABLEDEGREE 'PROCEDURE_TYPE
     '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE MONOMGETVARIABLEDEGREE (MONOM VARIABLE)
    (PROG (EXPONENT)
      (SETQ EXPONENT (GETV MONOM 1))
      (PROG ()
       WHILELABEL
        (COND
         ((NOT (AND (CAR EXPONENT) (GREATERP (CAR EXPONENT) VARIABLE)))
          (RETURN NIL)))
        (PROGN (SETQ EXPONENT (CDR EXPONENT)) NIL)
        (GO WHILELABEL))
      (COND
       ((AND (CAR EXPONENT) (EQUAL (CAR EXPONENT) VARIABLE))
        (PROGN (RETURN 1) NIL))
       (T (PROGN (RETURN 0) NIL))))) 
(PUT 'CREATEMONOMUNIT 'NUMBER-OF-ARGS 0) 
(PUT 'CREATEMONOMUNIT 'DEFINED-ON-LINE '95) 
(PUT 'CREATEMONOMUNIT 'DEFINED-IN-FILE 'BIBASIS/BIBASIS_MONOM.RED) 
(PUT 'CREATEMONOMUNIT 'PROCEDURE_TYPE '(ARROW UNIT GENERAL)) 
(DE CREATEMONOMUNIT NIL
    (PROG (TMPMONOM)
      (SETQ TMPMONOM (MKVECT 1))
      (PUTV TMPMONOM 0 0)
      (PUTV TMPMONOM 1 (CONS NIL NIL))
      (RETURN TMPMONOM))) 
(PUT 'CREATESINGLEVARIABLEMONOM 'NUMBER-OF-ARGS 1) 
(PUT 'CREATESINGLEVARIABLEMONOM 'DEFINED-ON-LINE '104) 
(PUT 'CREATESINGLEVARIABLEMONOM 'DEFINED-IN-FILE 'BIBASIS/BIBASIS_MONOM.RED) 
(PUT 'CREATESINGLEVARIABLEMONOM 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE CREATESINGLEVARIABLEMONOM (VARIABLE)
    (PROG (TMPMONOM)
      (SETQ TMPMONOM (MKVECT 1))
      (PUTV TMPMONOM 0 1)
      (PUTV TMPMONOM 1 (CONS VARIABLE (CONS NIL NIL)))
      (RETURN TMPMONOM))) 
(PUT 'MONOMCLONE 'NUMBER-OF-ARGS 1) 
(PUT 'MONOMCLONE 'DEFINED-ON-LINE '113) 
(PUT 'MONOMCLONE 'DEFINED-IN-FILE 'BIBASIS/BIBASIS_MONOM.RED) 
(PUT 'MONOMCLONE 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE MONOMCLONE (MONOM)
    (COND ((NULL MONOM) NIL)
          (T
           (PROG (TMPMONOM EXPONENT TMPEXPONENT)
             (SETQ TMPMONOM (MKVECT 1))
             (PUTV TMPMONOM 0 (GETV MONOM 0))
             (SETQ EXPONENT (GETV MONOM 1))
             (PROG ()
              WHILELABEL
               (COND ((NOT EXPONENT) (RETURN NIL)))
               (PROGN
                (SETQ TMPEXPONENT (CONS (CAR EXPONENT) TMPEXPONENT))
                (SETQ EXPONENT (CDR EXPONENT))
                NIL)
               (GO WHILELABEL))
             (PUTV TMPMONOM 1 (REVERSE TMPEXPONENT))
             (RETURN TMPMONOM))))) 
(PUT 'MONOMMULTIPLYBYVARIABLE 'NUMBER-OF-ARGS 2) 
(PUT 'MONOMMULTIPLYBYVARIABLE 'DEFINED-ON-LINE '130) 
(PUT 'MONOMMULTIPLYBYVARIABLE 'DEFINED-IN-FILE 'BIBASIS/BIBASIS_MONOM.RED) 
(PUT 'MONOMMULTIPLYBYVARIABLE 'PROCEDURE_TYPE
     '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE MONOMMULTIPLYBYVARIABLE (MONOM VARIABLE)
    (PROG (EXPONENT)
      (SETQ EXPONENT (GETV MONOM 1))
      (PROG ()
       WHILELABEL
        (COND
         ((NOT (AND (CAR EXPONENT) (GREATERP (CAR EXPONENT) VARIABLE)))
          (RETURN NIL)))
        (PROGN (SETQ EXPONENT (CDR EXPONENT)) NIL)
        (GO WHILELABEL))
      (COND
       ((NOT (AND (CAR EXPONENT) (EQUAL (CAR EXPONENT) VARIABLE)))
        (PROGN
         (RPLACA (RPLACD EXPONENT (CONS (CAR EXPONENT) (CDR EXPONENT)))
                 VARIABLE)
         (PUTV MONOM 0 (PLUS (GETV MONOM 0) 1))
         NIL))))) 
(PUT 'MONOMCOMPARELEX 'NUMBER-OF-ARGS 2) 
(PUT 'MONOMCOMPARELEX 'DEFINED-ON-LINE '146) 
(PUT 'MONOMCOMPARELEX 'DEFINED-IN-FILE 'BIBASIS/BIBASIS_MONOM.RED) 
(PUT 'MONOMCOMPARELEX 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE MONOMCOMPARELEX (MONOM1 MONOM2)
    (PROG (EXPONENT1 EXPONENT2 I)
      (SETQ I 0)
      (SETQ EXPONENT1 (CDR (REVERSE (CONS NIL (GETV MONOM1 1)))))
      (SETQ EXPONENT2 (CDR (REVERSE (CONS NIL (GETV MONOM2 1)))))
      (SETQ I 0)
      (PROG ()
       WHILELABEL
        (COND ((NOT (AND (CAR EXPONENT1) (CAR EXPONENT2))) (RETURN NIL)))
        (PROGN
         (COND
          ((LESSP (CAR EXPONENT1) (CAR EXPONENT2))
           (PROGN (SETQ I 1) (SETQ EXPONENT1 (CONS NIL NIL)) NIL))
          ((GREATERP (CAR EXPONENT1) (CAR EXPONENT2))
           (PROGN (SETQ I (MINUS 1)) (SETQ EXPONENT1 (CONS NIL NIL)) NIL))
          (T
           (PROGN
            (SETQ EXPONENT1 (CDR EXPONENT1))
            (SETQ EXPONENT2 (CDR EXPONENT2)))))
         NIL)
        (GO WHILELABEL))
      (COND ((AND (EQUAL I 0) (CAR EXPONENT1)) (PROGN (SETQ I 1) NIL))
            ((AND (EQUAL I 0) (CAR EXPONENT2)) (PROGN (SETQ I (MINUS 1)) NIL)))
      (RETURN I))) 
(PUT 'MONOMCOMPAREDEGLEX 'NUMBER-OF-ARGS 2) 
(PUT 'MONOMCOMPAREDEGLEX 'DEFINED-ON-LINE '183) 
(PUT 'MONOMCOMPAREDEGLEX 'DEFINED-IN-FILE 'BIBASIS/BIBASIS_MONOM.RED) 
(PUT 'MONOMCOMPAREDEGLEX 'PROCEDURE_TYPE
     '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE MONOMCOMPAREDEGLEX (MONOM1 MONOM2)
    (PROG (EXPONENT1 EXPONENT2 I)
      (SETQ I 0)
      (SETQ I 0)
      (COND ((IGREATERP (GETV MONOM1 0) (GETV MONOM2 0)) (PROGN (SETQ I 1)))
            ((ILESSP (GETV MONOM1 0) (GETV MONOM2 0))
             (PROGN (SETQ I (MINUS 1))))
            (T
             (PROGN
              (SETQ EXPONENT1 (CDR (REVERSE (CONS NIL (GETV MONOM1 1)))))
              (SETQ EXPONENT2 (CDR (REVERSE (CONS NIL (GETV MONOM2 1)))))
              (PROG ()
               WHILELABEL
                (COND
                 ((NOT (AND (CAR EXPONENT1) (CAR EXPONENT2))) (RETURN NIL)))
                (PROGN
                 (COND
                  ((LESSP (CAR EXPONENT1) (CAR EXPONENT2))
                   (PROGN (SETQ I 1) (SETQ EXPONENT1 (CONS NIL NIL)) NIL))
                  ((GREATERP (CAR EXPONENT1) (CAR EXPONENT2))
                   (PROGN
                    (SETQ I (MINUS 1))
                    (SETQ EXPONENT1 (CONS NIL NIL))
                    NIL))
                  (T
                   (PROGN
                    (SETQ EXPONENT1 (CDR EXPONENT1))
                    (SETQ EXPONENT2 (CDR EXPONENT2)))))
                 NIL)
                (GO WHILELABEL))
              NIL)))
      (RETURN I))) 
(PUT 'MONOMCOMPAREDEGREVLEX 'NUMBER-OF-ARGS 2) 
(PUT 'MONOMCOMPAREDEGREVLEX 'DEFINED-ON-LINE '221) 
(PUT 'MONOMCOMPAREDEGREVLEX 'DEFINED-IN-FILE 'BIBASIS/BIBASIS_MONOM.RED) 
(PUT 'MONOMCOMPAREDEGREVLEX 'PROCEDURE_TYPE
     '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE MONOMCOMPAREDEGREVLEX (MONOM1 MONOM2)
    (PROG (EXPONENT1 EXPONENT2 I)
      (SETQ I 0)
      (COND ((GREATERP (GETV MONOM1 0) (GETV MONOM2 0)) (PROGN (SETQ I 1) NIL))
            ((LESSP (GETV MONOM1 0) (GETV MONOM2 0))
             (PROGN (SETQ I (MINUS 1)) NIL))
            (T
             (PROGN
              (SETQ EXPONENT1 (GETV MONOM1 1))
              (SETQ EXPONENT2 (GETV MONOM2 1))
              (PROG ()
               WHILELABEL
                (COND ((NOT (CAR EXPONENT1)) (RETURN NIL)))
                (PROGN
                 (COND
                  ((LESSP (CAR EXPONENT1) (CAR EXPONENT2))
                   (PROGN (SETQ I 1) (SETQ EXPONENT1 (CONS NIL NIL)) NIL))
                  ((GREATERP (CAR EXPONENT1) (CAR EXPONENT2))
                   (PROGN
                    (SETQ I (MINUS 1))
                    (SETQ EXPONENT1 (CONS NIL NIL))
                    NIL))
                  (T
                   (PROGN
                    (SETQ EXPONENT1 (CDR EXPONENT1))
                    (SETQ EXPONENT2 (CDR EXPONENT2))
                    NIL)))
                 NIL)
                (GO WHILELABEL))
              (COND ((NULL (CAR EXPONENT2)) (PROGN (SETQ I 0) NIL)))
              NIL)))
      (RETURN I))) 
(PUT 'MONOMCOMPARE 'NUMBER-OF-ARGS 2) 
(PUT 'MONOMCOMPARE 'DEFINED-ON-LINE '262) 
(PUT 'MONOMCOMPARE 'DEFINED-IN-FILE 'BIBASIS/BIBASIS_MONOM.RED) 
(PUT 'MONOMCOMPARE 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE MONOMCOMPARE (MONOM1 MONOM2)
    (PROG ()
      (COND
       ((EQ FLUIDBIBASISMONOMIALORDER 'LEX)
        (PROGN (RETURN (MONOMCOMPARELEX MONOM1 MONOM2)) NIL))
       ((EQ FLUIDBIBASISMONOMIALORDER 'DEGLEX)
        (PROGN (RETURN (MONOMCOMPAREDEGLEX MONOM1 MONOM2)) NIL))
       (T (PROGN (RETURN (MONOMCOMPAREDEGREVLEX MONOM1 MONOM2)) NIL))))) 
(PUT 'MONOMISDIVISIBLEBY 'NUMBER-OF-ARGS 2) 
(PUT 'MONOMISDIVISIBLEBY 'DEFINED-ON-LINE '279) 
(PUT 'MONOMISDIVISIBLEBY 'DEFINED-IN-FILE 'BIBASIS/BIBASIS_MONOM.RED) 
(PUT 'MONOMISDIVISIBLEBY 'PROCEDURE_TYPE
     '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE MONOMISDIVISIBLEBY (MONOM1 MONOM2)
    (PROG (EXPONENT1 EXPONENT2)
      (SETQ EXPONENT1 (GETV MONOM1 1))
      (SETQ EXPONENT2 (GETV MONOM2 1))
      (PROG ()
       WHILELABEL
        (COND ((NOT (AND (CAR EXPONENT1) (CAR EXPONENT2))) (RETURN NIL)))
        (PROGN
         (COND
          ((EQUAL (CAR EXPONENT1) (CAR EXPONENT2))
           (PROGN
            (SETQ EXPONENT1 (CDR EXPONENT1))
            (SETQ EXPONENT2 (CDR EXPONENT2))
            NIL))
          ((GREATERP (CAR EXPONENT1) (CAR EXPONENT2))
           (PROGN (SETQ EXPONENT1 (CDR EXPONENT1)) NIL))
          (T (PROGN (SETQ EXPONENT1 (CONS NIL NIL)) NIL)))
         NIL)
        (GO WHILELABEL))
      (RETURN (NULL (CAR EXPONENT2))))) 
(PUT 'MONOMISPOMMARETDIVISIBLEBY 'NUMBER-OF-ARGS 2) 
(PUT 'MONOMISPOMMARETDIVISIBLEBY 'DEFINED-ON-LINE '304) 
(PUT 'MONOMISPOMMARETDIVISIBLEBY 'DEFINED-IN-FILE 'BIBASIS/BIBASIS_MONOM.RED) 
(PUT 'MONOMISPOMMARETDIVISIBLEBY 'PROCEDURE_TYPE
     '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE MONOMISPOMMARETDIVISIBLEBY (MONOM1 MONOM2)
    (PROG (EXPONENT1 EXPONENT2 BREAK)
      (SETQ EXPONENT1 (GETV MONOM1 1))
      (SETQ EXPONENT2 (GETV MONOM2 1))
      (PROG ()
       WHILELABEL
        (COND
         ((NOT
           (AND (CAR EXPONENT1) (GREATERP (CAR EXPONENT1) (CAR EXPONENT2))))
          (RETURN NIL)))
        (PROGN (SETQ EXPONENT1 (CDR EXPONENT1)) NIL)
        (GO WHILELABEL))
      (PROG ()
       WHILELABEL
        (COND
         ((NOT (AND (NOT BREAK) (CAR EXPONENT1) (CAR EXPONENT2)))
          (RETURN NIL)))
        (PROGN
         (COND
          ((NEQ (CAR EXPONENT1) (CAR EXPONENT2)) (PROGN (SETQ BREAK T) NIL))
          (T
           (PROGN
            (SETQ EXPONENT1 (CDR EXPONENT1))
            (SETQ EXPONENT2 (CDR EXPONENT2))
            NIL)))
         NIL)
        (GO WHILELABEL))
      (RETURN (AND (NULL (CAR EXPONENT1)) (NULL (CAR EXPONENT2)))))) 
(PUT 'MONOMDIVIDE 'NUMBER-OF-ARGS 2) 
(PUT 'MONOMDIVIDE 'DEFINED-ON-LINE '332) 
(PUT 'MONOMDIVIDE 'DEFINED-IN-FILE 'BIBASIS/BIBASIS_MONOM.RED) 
(PUT 'MONOMDIVIDE 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE MONOMDIVIDE (MONOM1 MONOM2)
    (PROG (TMPMONOM EXPONENT1 EXPONENT2 TMPEXPONENT)
      (SETQ TMPMONOM (MKVECT 1))
      (PUTV TMPMONOM 0 (DIFFERENCE (GETV MONOM1 0) (GETV MONOM2 0)))
      (SETQ EXPONENT1 (GETV MONOM1 1))
      (SETQ EXPONENT2 (GETV MONOM2 1))
      (PROG ()
       WHILELABEL
        (COND ((NOT (CAR EXPONENT1)) (RETURN NIL)))
        (PROGN
         (COND
          ((EQUAL (CAR EXPONENT1) (CAR EXPONENT2))
           (PROGN
            (SETQ EXPONENT1 (CDR EXPONENT1))
            (SETQ EXPONENT2 (CDR EXPONENT2))
            NIL))
          (T
           (PROGN
            (SETQ TMPEXPONENT (CONS (CAR EXPONENT1) TMPEXPONENT))
            (SETQ EXPONENT1 (CDR EXPONENT1))
            NIL)))
         NIL)
        (GO WHILELABEL))
      (SETQ TMPEXPONENT (CONS NIL TMPEXPONENT))
      (PUTV TMPMONOM 1 (REVERSE TMPEXPONENT))
      (RETURN TMPMONOM))) 
(PUT 'MONOMGETFIRSTMULTIVAR 'NUMBER-OF-ARGS 1) 
(PUT 'MONOMGETFIRSTMULTIVAR 'DEFINED-ON-LINE '357) 
(PUT 'MONOMGETFIRSTMULTIVAR 'DEFINED-IN-FILE 'BIBASIS/BIBASIS_MONOM.RED) 
(PUT 'MONOMGETFIRSTMULTIVAR 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE MONOMGETFIRSTMULTIVAR (MONOM)
    (PROG () (RETURN (COND ((CAR (GETV MONOM 1)) (CAR (GETV MONOM 1))) (T 1))))) 
(PUT 'MONOMWRITE 'NUMBER-OF-ARGS 1) 
(PUT 'MONOMWRITE 'DEFINED-ON-LINE '363) 
(PUT 'MONOMWRITE 'DEFINED-IN-FILE 'BIBASIS/BIBASIS_MONOM.RED) 
(PUT 'MONOMWRITE 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE MONOMWRITE (MONOM)
    (PROG (RESULT VARIABLES EXPONENT PREVIOUSVARIABLE)
      (SETQ PREVIOUSVARIABLE 0)
      (SETQ PREVIOUSVARIABLE FLUIDBIBASISNUMBEROFVARIABLES)
      (SETQ VARIABLES FLUIDBIBASISREVERSEDVARIABLES)
      (SETQ EXPONENT (GETV MONOM 1))
      (PROG ()
       WHILELABEL
        (COND ((NOT (CAR EXPONENT)) (RETURN NIL)))
        (PROGN
         (PROG (I)
           (SETQ I 1)
          LAB
           (COND
            ((MINUSP
              (DIFFERENCE (DIFFERENCE PREVIOUSVARIABLE (CAR EXPONENT)) I))
             (RETURN NIL)))
           (PROGN (SETQ VARIABLES (CDR VARIABLES)) NIL)
           (SETQ I (PLUS2 I 1))
           (GO LAB))
         (SETQ PREVIOUSVARIABLE (CAR EXPONENT))
         (COND
          (RESULT
           (PROGN
            (SETQ RESULT (CONS (CONS (CAR VARIABLES) 1) (CONS RESULT NIL)))))
          (T (PROGN (SETQ RESULT (CONS (CONS (CAR VARIABLES) 1) 1)) NIL)))
         (SETQ EXPONENT (CDR EXPONENT))
         NIL)
        (GO WHILELABEL))
      (RETURN RESULT))) 
(PUT 'MONOMPRINT 'NUMBER-OF-ARGS 1) 
(PUT 'MONOMPRINT 'DEFINED-ON-LINE '390) 
(PUT 'MONOMPRINT 'DEFINED-IN-FILE 'BIBASIS/BIBASIS_MONOM.RED) 
(PUT 'MONOMPRINT 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE MONOMPRINT (MONOM)
    (PROG (VARIABLES EXPONENT PREVIOUSVARIABLE)
      (SETQ PREVIOUSVARIABLE 0)
      (COND ((EQUAL (GETV MONOM 0) 0) (PROGN (PRIN2 "1") NIL))
            (T
             (PROGN
              (SETQ PREVIOUSVARIABLE 1)
              (SETQ VARIABLES FLUIDBIBASISVARIABLES)
              (SETQ EXPONENT (CDR (REVERSE (CONS NIL (GETV MONOM 1)))))
              (PROG (I)
                (SETQ I 1)
               LAB
                (COND
                 ((MINUSP
                   (DIFFERENCE (DIFFERENCE (CAR EXPONENT) PREVIOUSVARIABLE) I))
                  (RETURN NIL)))
                (PROGN (SETQ VARIABLES (CDR VARIABLES)) NIL)
                (SETQ I (PLUS2 I 1))
                (GO LAB))
              (SETQ PREVIOUSVARIABLE (CAR EXPONENT))
              (PRIN2 (CAR VARIABLES))
              (SETQ EXPONENT (CDR EXPONENT))
              (PROG ()
               WHILELABEL
                (COND ((NOT (CAR EXPONENT)) (RETURN NIL)))
                (PROGN
                 (PROG (I)
                   (SETQ I 1)
                  LAB
                   (COND
                    ((MINUSP
                      (DIFFERENCE (DIFFERENCE (CAR EXPONENT) PREVIOUSVARIABLE)
                                  I))
                     (RETURN NIL)))
                   (PROGN (SETQ VARIABLES (CDR VARIABLES)) NIL)
                   (SETQ I (PLUS2 I 1))
                   (GO LAB))
                 (SETQ PREVIOUSVARIABLE (CAR EXPONENT))
                 (PRIN2 "*")
                 (PRIN2 (CAR VARIABLES))
                 (SETQ EXPONENT (CDR EXPONENT))
                 NIL)
                (GO WHILELABEL))
              NIL))))) 
(ENDMODULE) 