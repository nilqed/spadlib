(cl:declaim (cl:optimize cl:debug cl:safety))
(cl:declaim (sb-ext:muffle-conditions sb-ext:compiler-note cl:style-warning))
(MODULE (LIST 'TORDER)) 
(SETQ GLOBAL-DIPVARS* '(LIST)) 
(PUT 'TORDER 'NUMBER-OF-ARGS 1) 
(PUT 'TORDER 'DEFINED-ON-LINE '38) 
(PUT 'TORDER 'DEFINED-IN-FILE 'DIPOLY/TORDER.RED) 
(PUT 'TORDER 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE TORDER (U)
    (PROG (OLDMODE OLDEX OLDVARS W)
      (SETQ OLDMODE VDPSORTMODE*)
      (SETQ OLDEX VDPSORTEXTENSION*)
      (SETQ OLDVARS GLOBAL-DIPVARS*)
      (SETQ GLOBAL-DIPVARS* '(LIST))
     A
      (SETQ W (REVAL1 (CAR U) T))
      (SETQ U (CDR U))
      (COND ((AND (EQCAR W 'LIST) (NULL U)) (PROGN (SETQ U (CDR W)) (GO A))))
      (COND
       ((EQCAR W 'LIST)
        (PROGN
         (SETQ GLOBAL-DIPVARS* W)
         (SETQ W (REVAL1 (CAR U) T))
         (SETQ U (CDR U)))))
      (SETQ VDPSORTMODE* W)
      (SETQ VDPSORTEXTENSION*
              (PROG (X FORALL-RESULT FORALL-ENDPTR)
                (SETQ X U)
               STARTOVER
                (COND ((NULL X) (RETURN NIL)))
                (SETQ FORALL-RESULT
                        ((LAMBDA (X)
                           (COND ((EQCAR (SETQ X (REVAL1 X T)) 'LIST) (CDR X))
                                 (T (LIST X))))
                         (CAR X)))
                (SETQ FORALL-ENDPTR (LASTPAIR FORALL-RESULT))
                (SETQ X (CDR X))
                (COND ((ATOM FORALL-ENDPTR) (GO STARTOVER)))
               LOOPLABEL
                (COND ((NULL X) (RETURN FORALL-RESULT)))
                (RPLACD FORALL-ENDPTR
                        ((LAMBDA (X)
                           (COND ((EQCAR (SETQ X (REVAL1 X T)) 'LIST) (CDR X))
                                 (T (LIST X))))
                         (CAR X)))
                (SETQ FORALL-ENDPTR (LASTPAIR FORALL-ENDPTR))
                (SETQ X (CDR X))
                (GO LOOPLABEL)))
      (COND
       ((AND (FLAGP VDPSORTMODE* 'DIPSORTEXTENSION) (NULL VDPSORTEXTENSION*))
        (REDERR "term order needs additional parameter(s)")))
      (RETURN (CONS 'LIST (CONS OLDVARS (CONS OLDMODE OLDEX)))))) 
(REMPROP 'TORDER 'NUMBER-OF-ARGS) 
(PUT 'TORDER 'PSOPFN 'TORDER) 
(PUT 'DIPSORTINGMODE 'NUMBER-OF-ARGS 1) 
(PUT 'DIPSORTINGMODE 'DEFINED-ON-LINE '60) 
(PUT 'DIPSORTINGMODE 'DEFINED-IN-FILE 'DIPOLY/TORDER.RED) 
(PUT 'DIPSORTINGMODE 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE DIPSORTINGMODE (U)
    (PROG (X Z)
      (COND
       ((OR (NOT (IDP U)) (NOT (FLAGP U 'DIPSORTMODE)))
        (RETURN (TYPERR U "term ordering mode"))))
      (SETQ X DIPSORTMODE*)
      (SETQ DIPSORTMODE* U)
      (SETQ DIPSORTEVCOMP* (GET DIPSORTMODE* 'EVCOMP))
      (COND
       ((NOT (GETD DIPSORTEVCOMP*))
        (RERROR 'DIPOLY 2 "No compare routine for term order mode found")))
      (COND ((SETQ Z (GET DIPSORTMODE* 'EVCOMPINIT)) (APPLY Z NIL)))
      (COND
       ((AND (SETQ Z (GET DIPSORTMODE* 'EVLENGTH)) (NEQ Z (LENGTH DIPVARS*)))
        (REDERR "wrong variable number for fixed length term order")))
      (SETQ VDPLASTVAR* (LENGTH DIPVARS*))
      (RETURN X))) 
(FLAG '(LEX GRADLEX REVGRADLEX) 'DIPSORTMODE) 
(PUT 'LEX 'EVCOMP 'EVLEXCOMP) 
(PUT 'GRADLEX 'EVCOMP 'EVGRADLEXCOMP) 
(PUT 'REVGRADLEX 'EVCOMP 'EVREVGRADLEXCOMP) 
(PUT 'EVCOMPLESS? 'NUMBER-OF-ARGS 2) 
(PUT 'EVCOMPLESS? 'DEFINED-ON-LINE '86) 
(PUT 'EVCOMPLESS? 'DEFINED-IN-FILE 'DIPOLY/TORDER.RED) 
(PUT 'EVCOMPLESS? 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE EVCOMPLESS? (E1 E2) (EQUAL 1 (EVCOMP E2 E1))) 
(PUT 'EVCOMP 'NUMBER-OF-ARGS 2) 
(PUT 'EVCOMP 'DEFINED-ON-LINE '93) 
(PUT 'EVCOMP 'DEFINED-IN-FILE 'DIPOLY/TORDER.RED) 
(PUT 'EVCOMP 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE EVCOMP (E1 E2) (APPLY DIPSORTEVCOMP* (LIST E1 E2))) 
(PUT 'EVLEXCOMP 'NUMBER-OF-ARGS 2) 
(PUT 'EVLEXCOMP 'DEFINED-ON-LINE '102) 
(PUT 'EVLEXCOMP 'DEFINED-IN-FILE 'DIPOLY/TORDER.RED) 
(PUT 'EVLEXCOMP 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE EVLEXCOMP (E1 E2)
    (COND ((NULL E1) 0) ((NULL E2) (EVLEXCOMP E1 '(0)))
          ((IEQUAL (CAR E1) (CAR E2)) (EVLEXCOMP (CDR E1) (CDR E2)))
          ((IGREATERP (CAR E1) (CAR E2)) 1) (T (MINUS 1)))) 
(PUT 'EVINVLEXCOMP 'NUMBER-OF-ARGS 2) 
(PUT 'EVINVLEXCOMP 'DEFINED-ON-LINE '114) 
(PUT 'EVINVLEXCOMP 'DEFINED-IN-FILE 'DIPOLY/TORDER.RED) 
(PUT 'EVINVLEXCOMP 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE EVINVLEXCOMP (E1 E2)
    (COND ((NULL E1) (COND ((NULL E2) 0) (T (EVINVLEXCOMP '(0) E2))))
          ((NULL E2) (EVLEXCOMP E1 '(0)))
          ((IEQUAL (CAR E1) (CAR E2)) (EVINVLEXCOMP (CDR E1) (CDR E2)))
          (T
           ((LAMBDA (N)
              (COND ((NOT (IEQUAL N 0)) N) ((IGREATERP (CAR E2) (CAR E1)) 1)
                    (T (MINUS 1))))
            (EVINVLEXCOMP (CDR E1) (CDR E2)))))) 
(PUT 'EVGRADLEXCOMP 'NUMBER-OF-ARGS 2) 
(PUT 'EVGRADLEXCOMP 'DEFINED-ON-LINE '125) 
(PUT 'EVGRADLEXCOMP 'DEFINED-IN-FILE 'DIPOLY/TORDER.RED) 
(PUT 'EVGRADLEXCOMP 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE EVGRADLEXCOMP (E1 E2)
    (COND ((NULL E1) 0) ((NULL E2) (EVGRADLEXCOMP E1 '(0)))
          ((IEQUAL (CAR E1) (CAR E2)) (EVGRADLEXCOMP (CDR E1) (CDR E2)))
          (T
           ((LAMBDA (TE1 TE2)
              (COND
               ((IEQUAL TE1 TE2)
                (COND ((IGREATERP (CAR E1) (CAR E2)) 1) (T (MINUS 1))))
               ((IGREATERP TE1 TE2) 1) (T (MINUS 1))))
            (EVTDEG E1) (EVTDEG E2))))) 
(PUT 'EVREVGRADLEXCOMP 'NUMBER-OF-ARGS 2) 
(PUT 'EVREVGRADLEXCOMP 'DEFINED-ON-LINE '138) 
(PUT 'EVREVGRADLEXCOMP 'DEFINED-IN-FILE 'DIPOLY/TORDER.RED) 
(PUT 'EVREVGRADLEXCOMP 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE EVREVGRADLEXCOMP (E1 E2)
    (COND ((NULL E1) 0) ((NULL E2) (EVREVGRADLEXCOMP E1 '(0)))
          ((IEQUAL (CAR E1) (CAR E2)) (EVREVGRADLEXCOMP (CDR E1) (CDR E2)))
          (T
           ((LAMBDA (TE1 TE2)
              (COND ((IEQUAL TE1 TE2) (EVINVLEXCOMP E1 E2))
                    ((IGREATERP TE1 TE2) 1) (T (MINUS 1))))
            (EVTDEG E1) (EVTDEG E2))))) 
(PUT 'EVTDEG 'NUMBER-OF-ARGS 1) 
(PUT 'EVTDEG 'DEFINED-ON-LINE '151) 
(PUT 'EVTDEG 'DEFINED-IN-FILE 'DIPOLY/TORDER.RED) 
(PUT 'EVTDEG 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE EVTDEG (E1)
    ((LAMBDA (X)
       (PROGN
        (PROG ()
         WHILELABEL
          (COND ((NOT E1) (RETURN NIL)))
          (PROGN (SETQ X (IPLUS2 (CAR E1) X)) (SETQ E1 (CDR E1)))
          (GO WHILELABEL))
        X))
     0)) 
(FLAG '(GRADLEXGRADLEX) 'DIPSORTMODE) 
(FLAG '(GRADLEXGRADLEX) 'DIPSORTEXTENSION) 
(PUT 'GRADLEXGRADLEX 'EVCOMP 'EVGRADGRADCOMP) 
(PUT 'EVGRADGRADCOMP 'NUMBER-OF-ARGS 2) 
(PUT 'EVGRADGRADCOMP 'DEFINED-ON-LINE '171) 
(PUT 'EVGRADGRADCOMP 'DEFINED-IN-FILE 'DIPOLY/TORDER.RED) 
(PUT 'EVGRADGRADCOMP 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE EVGRADGRADCOMP (E1 E2)
    (EVGRADGRADCOMP1 E1 E2 (CAR VDPSORTEXTENSION*) (CDR VDPSORTEXTENSION*))) 
(PUT 'EVGRADGRADCOMP1 'NUMBER-OF-ARGS 4) 
(PUT 'EVGRADGRADCOMP1 'DEFINED-ON-LINE '175) 
(PUT 'EVGRADGRADCOMP1 'DEFINED-IN-FILE 'DIPOLY/TORDER.RED) 
(PUT 'EVGRADGRADCOMP1 'PROCEDURE_TYPE
     '(ARROW (TIMES GENERAL GENERAL GENERAL GENERAL) GENERAL)) 
(DE EVGRADGRADCOMP1 (E1 E2 N NL)
    (COND ((NULL E1) 0) ((NULL E2) (EVGRADGRADCOMP1 E1 '(0) N NL))
          ((IEQUAL N 0)
           (COND ((NULL NL) (EVGRADLEXCOMP E1 E2))
                 (T (EVGRADGRADCOMP1 E1 E2 (CAR NL) (CDR NL)))))
          ((IEQUAL (CAR E1) (CAR E2))
           (EVGRADGRADCOMP1 (CDR E1) (CDR E2) (IDIFFERENCE N 1) NL))
          (T
           ((LAMBDA (TE1 TE2)
              (COND
               ((IEQUAL TE1 TE2)
                (COND ((IGREATERP (CAR E1) (CAR E2)) 1) (T (MINUS 1))))
               ((IGREATERP TE1 TE2) 1) (T (MINUS 1))))
            (EVPARTDEG E1 N) (EVPARTDEG E2 N))))) 
(PUT 'EVPARTDEG 'NUMBER-OF-ARGS 2) 
(PUT 'EVPARTDEG 'DEFINED-ON-LINE '186) 
(PUT 'EVPARTDEG 'DEFINED-IN-FILE 'DIPOLY/TORDER.RED) 
(PUT 'EVPARTDEG 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE EVPARTDEG (E1 N) (EVPARTDEG1 E1 N 0)) 
(PUT 'EVPARTDEG1 'NUMBER-OF-ARGS 3) 
(PUT 'EVPARTDEG1 'DEFINED-ON-LINE '188) 
(PUT 'EVPARTDEG1 'DEFINED-IN-FILE 'DIPOLY/TORDER.RED) 
(PUT 'EVPARTDEG1 'PROCEDURE_TYPE
     '(ARROW (TIMES GENERAL GENERAL GENERAL) GENERAL)) 
(DE EVPARTDEG1 (E1 N SUM)
    (COND ((OR (IEQUAL N 0) (NULL E1)) SUM)
          (T (EVPARTDEG1 (CDR E1) (IDIFFERENCE N 1) (IPLUS2 (CAR E1) SUM))))) 
(FLAG '(GRADLEXREVGRADLEX) 'DIPSORTMODE) 
(FLAG '(GRADLEXREVGRADLEX) 'DIPSORTEXTENSION) 
(PUT 'GRADLEXREVGRADLEX 'EVCOMP 'EVGRADREVGRADCOMP) 
(PUT 'EVGRADREVGRADCOMP 'NUMBER-OF-ARGS 2) 
(PUT 'EVGRADREVGRADCOMP 'DEFINED-ON-LINE '202) 
(PUT 'EVGRADREVGRADCOMP 'DEFINED-IN-FILE 'DIPOLY/TORDER.RED) 
(PUT 'EVGRADREVGRADCOMP 'PROCEDURE_TYPE
     '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE EVGRADREVGRADCOMP (E1 E2)
    (EVGRADREVGRADCOMP1 E1 E2 (CAR VDPSORTEXTENSION*))) 
(PUT 'EVGRADREVGRADCOMP1 'NUMBER-OF-ARGS 3) 
(PUT 'EVGRADREVGRADCOMP1 'DEFINED-ON-LINE '205) 
(PUT 'EVGRADREVGRADCOMP1 'DEFINED-IN-FILE 'DIPOLY/TORDER.RED) 
(PUT 'EVGRADREVGRADCOMP1 'PROCEDURE_TYPE
     '(ARROW (TIMES GENERAL GENERAL GENERAL) GENERAL)) 
(DE EVGRADREVGRADCOMP1 (E1 E2 N)
    (COND ((NULL E1) 0) ((NULL E2) (EVGRADREVGRADCOMP1 E1 '(0) N))
          ((IEQUAL N 0) (EVREVGRADLEXCOMP E1 E2))
          ((IEQUAL (CAR E1) (CAR E2))
           (EVGRADREVGRADCOMP1 (CDR E1) (CDR E2) (IDIFFERENCE N 1)))
          (T
           ((LAMBDA (TE1 TE2)
              (COND
               ((IEQUAL TE1 TE2)
                (COND ((ILESSP (CAR E1) (CAR E2)) 1) (T (MINUS 1))))
               ((IGREATERP TE1 TE2) 1) (T (MINUS 1))))
            (EVPARTDEG E1 N) (EVPARTDEG E2 N))))) 
(FLAG '(LEXGRADLEX) 'DIPSORTMODE) 
(FLAG '(LEXGRADLEX) 'DIPSORTEXTENSION) 
(PUT 'LEXGRADLEX 'EVCOMP 'EVLEXGRADLEXCOMP) 
(PUT 'EVLEXGRADLEXCOMP 'NUMBER-OF-ARGS 2) 
(PUT 'EVLEXGRADLEXCOMP 'DEFINED-ON-LINE '224) 
(PUT 'EVLEXGRADLEXCOMP 'DEFINED-IN-FILE 'DIPOLY/TORDER.RED) 
(PUT 'EVLEXGRADLEXCOMP 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE EVLEXGRADLEXCOMP (E1 E2) (EVLEXGRADLEXCOMP1 E1 E2 (CAR VDPSORTEXTENSION*))) 
(PUT 'EVLEXGRADLEXCOMP1 'NUMBER-OF-ARGS 3) 
(PUT 'EVLEXGRADLEXCOMP1 'DEFINED-ON-LINE '227) 
(PUT 'EVLEXGRADLEXCOMP1 'DEFINED-IN-FILE 'DIPOLY/TORDER.RED) 
(PUT 'EVLEXGRADLEXCOMP1 'PROCEDURE_TYPE
     '(ARROW (TIMES GENERAL GENERAL GENERAL) GENERAL)) 
(DE EVLEXGRADLEXCOMP1 (E1 E2 N)
    (COND ((NULL E1) (COND ((EVZERO? E2) 0) (T (MINUS 1))))
          ((NULL E2) (EVLEXGRADLEXCOMP1 E1 '(0) N))
          ((IEQUAL N 0) (EVGRADLEXCOMP E1 E2))
          ((IEQUAL (CAR E1) (CAR E2))
           (EVLEXGRADLEXCOMP1 (CDR E1) (CDR E2) (IDIFFERENCE N 1)))
          ((IGREATERP (CAR E1) (CAR E2)) 1) (T (MINUS 1)))) 
(FLAG '(LEXREVGRADLEX) 'DIPSORTMODE) 
(FLAG '(LEXREVGRADLEX) 'DIPSORTEXTENSION) 
(PUT 'LEXREVGRADLEX 'EVCOMP 'EVLEXREVGRADLEXCOMP) 
(PUT 'EVLEXREVGRADLEXCOMP 'NUMBER-OF-ARGS 2) 
(PUT 'EVLEXREVGRADLEXCOMP 'DEFINED-ON-LINE '244) 
(PUT 'EVLEXREVGRADLEXCOMP 'DEFINED-IN-FILE 'DIPOLY/TORDER.RED) 
(PUT 'EVLEXREVGRADLEXCOMP 'PROCEDURE_TYPE
     '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE EVLEXREVGRADLEXCOMP (E1 E2)
    (EVLEXREVGRADLEXCOMP1 E1 E2 (CAR VDPSORTEXTENSION*))) 
(PUT 'EVLEXREVGRADLEXCOMP1 'NUMBER-OF-ARGS 3) 
(PUT 'EVLEXREVGRADLEXCOMP1 'DEFINED-ON-LINE '247) 
(PUT 'EVLEXREVGRADLEXCOMP1 'DEFINED-IN-FILE 'DIPOLY/TORDER.RED) 
(PUT 'EVLEXREVGRADLEXCOMP1 'PROCEDURE_TYPE
     '(ARROW (TIMES GENERAL GENERAL GENERAL) GENERAL)) 
(DE EVLEXREVGRADLEXCOMP1 (E1 E2 N)
    (COND ((NULL E1) (COND ((EVZERO? E2) 0) (T (MINUS 1))))
          ((NULL E2) (EVLEXREVGRADLEXCOMP1 E1 '(0) N))
          ((IEQUAL N 0) (EVREVGRADLEXCOMP E1 E2))
          ((IEQUAL (CAR E1) (CAR E2))
           (EVLEXREVGRADLEXCOMP1 (CDR E1) (CDR E2) (IDIFFERENCE N 1)))
          ((IGREATERP (CAR E1) (CAR E2)) 1) (T (MINUS 1)))) 
(FLAG '(WEIGHTED) 'DIPSORTMODE) 
(FLAG '(WEIGHTED) 'DIPSORTEXTENSION) 
(PUT 'WEIGHTED 'EVCOMP 'EVWEIGHTEDCOMP) 
(PUT 'EVWEIGHTEDCOMP 'NUMBER-OF-ARGS 2) 
(PUT 'EVWEIGHTEDCOMP 'DEFINED-ON-LINE '265) 
(PUT 'EVWEIGHTEDCOMP 'DEFINED-IN-FILE 'DIPOLY/TORDER.RED) 
(PUT 'EVWEIGHTEDCOMP 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE EVWEIGHTEDCOMP (E1 E2)
    ((LAMBDA (DG1 DG2)
       (COND ((IEQUAL DG1 DG2) (EVLEXCOMP E1 E2)) ((IGREATERP DG1 DG2) 1)
             (T (MINUS 1))))
     (EVWEIGHTEDCOMP2 0 E1 VDPSORTEXTENSION*)
     (EVWEIGHTEDCOMP2 0 E2 VDPSORTEXTENSION*))) 
(PUT 'EVWEIGHTEDCOMP1 'NUMBER-OF-ARGS 2) 
(PUT 'EVWEIGHTEDCOMP1 'DEFINED-ON-LINE '271) 
(PUT 'EVWEIGHTEDCOMP1 'DEFINED-IN-FILE 'DIPOLY/TORDER.RED) 
(PUT 'EVWEIGHTEDCOMP1 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE EVWEIGHTEDCOMP1 (E W) (EVWEIGHTEDCOMP2 0 E W)) 
(PUT 'EVWEIGHTEDCOMP2 'NUMBER-OF-ARGS 3) 
(PUT 'EVWEIGHTEDCOMP2 'DEFINED-ON-LINE '273) 
(PUT 'EVWEIGHTEDCOMP2 'DEFINED-IN-FILE 'DIPOLY/TORDER.RED) 
(PUT 'EVWEIGHTEDCOMP2 'PROCEDURE_TYPE
     '(ARROW (TIMES GENERAL GENERAL GENERAL) GENERAL)) 
(DE EVWEIGHTEDCOMP2 (N E W)
    (COND ((NULL E) N) ((NULL W) (EVWEIGHTEDCOMP2 N E '(1 1 1 1 1)))
          ((EQUAL (CAR W) 0) (EVWEIGHTEDCOMP2 N (CDR E) (CDR W)))
          ((EQUAL (CAR W) 1)
           (EVWEIGHTEDCOMP2 (IPLUS2 N (CAR E)) (CDR E) (CDR W)))
          (T
           (EVWEIGHTEDCOMP2 (IPLUS2 (ITIMES2 (CAR E) (CAR W)) N) (CDR E)
            (CDR W))))) 
(FLUID '(GRADEDREC*)) 
(FLAG '(GRADED) 'DIPSORTMODE) 
(FLAG '(GRADED) 'DIPSORTEXTENSION) 
(PUT 'GRADED 'EVCOMP 'EVGRADEDCOMP) 
(PUT 'GRADED 'EVCOMPINIT 'EVGRADEDINIT) 
(PUT 'EVGRADEDINIT 'NUMBER-OF-ARGS 0) 
(PUT 'EVGRADEDINIT 'DEFINED-ON-LINE '299) 
(PUT 'EVGRADEDINIT 'DEFINED-IN-FILE 'DIPOLY/TORDER.RED) 
(PUT 'EVGRADEDINIT 'PROCEDURE_TYPE '(ARROW UNIT GENERAL)) 
(DE EVGRADEDINIT NIL
    (PROG (W GVECT VSE)
      (SETQ VSE VDPSORTEXTENSION*)
      (PROG ()
       WHILELABEL
        (COND
         ((NOT
           (AND (PAIRP VDPSORTEXTENSION*) (NUMBERP (CAR VDPSORTEXTENSION*))))
          (RETURN NIL)))
        (PROGN
         (SETQ GVECT (CONS (CAR VDPSORTEXTENSION*) GVECT))
         (SETQ VDPSORTEXTENSION* (CDR VDPSORTEXTENSION*)))
        (GO WHILELABEL))
      (COND
       (VDPSORTEXTENSION*
        (PROGN
         (SETQ W (CAR VDPSORTEXTENSION*))
         (SETQ VDPSORTEXTENSION* (CDR VDPSORTEXTENSION*))))
       (T (SETQ W 'LEX)))
      (DIPSORTINGMODE W)
      (SETQ GRADEDREC*
              (LIST (REVERSIP GVECT) DIPSORTEVCOMP* VDPSORTEXTENSION*))
      (SETQ DIPSORTEVCOMP* 'EVGRADEDCOMP)
      (SETQ DIPSORTMODE* 'GRADED)
      (SETQ VDPSORTEXTENSION* VSE))) 
(PUT 'EVGRADEDCOMP 'NUMBER-OF-ARGS 2) 
(PUT 'EVGRADEDCOMP 'DEFINED-ON-LINE '315) 
(PUT 'EVGRADEDCOMP 'DEFINED-IN-FILE 'DIPOLY/TORDER.RED) 
(PUT 'EVGRADEDCOMP 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE EVGRADEDCOMP (E1 E2)
    ((LAMBDA (DG1 DG2)
       (COND
        ((IEQUAL DG1 DG2)
         ((LAMBDA (VDPSORTEXTENSION*) (APPLY (CADR GRADEDREC*) (LIST E1 E2)))
          (CADDR GRADEDREC*)))
        ((IGREATERP DG1 DG2) 1) (T (MINUS 1))))
     (EV-GAMMA E1) (EV-GAMMA E2))) 
(PUT 'EV-GAMMA 'NUMBER-OF-ARGS 1) 
(PUT 'EV-GAMMA 'DEFINED-ON-LINE '323) 
(PUT 'EV-GAMMA 'DEFINED-IN-FILE 'DIPOLY/TORDER.RED) 
(PUT 'EV-GAMMA 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE EV-GAMMA (EV)
    (EVWEIGHTEDCOMP1 EV
     (COND ((EQUAL DIPSORTMODE* 'GRADED) (CAR GRADEDREC*))
           ((EQUAL DIPSORTMODE* 'WEIGHTED) VDPSORTEXTENSION*) (T NIL)))) 
(FLAG '(MATRIX) 'DIPSORTMODE) 
(FLAG '(MATRIX) 'DIPSORTEXTENSION) 
(PUT 'MATRIX 'EVCOMP 'EVMATRIXCOMP) 
(PUT 'MATRIX 'EVCOMPINIT 'EVMATRIXINIT) 
(PUT 'EVMATRIXCOMP 'NUMBER-OF-ARGS 2) 
(PUT 'EVMATRIXCOMP 'DEFINED-ON-LINE '353) 
(PUT 'EVMATRIXCOMP 'DEFINED-IN-FILE 'DIPOLY/TORDER.RED) 
(PUT 'EVMATRIXCOMP 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE EVMATRIXCOMP (E1 E2) (EVMATRIXCOMP1 E1 E2 VDPMATRIX*)) 
(PUT 'EVMATRIXCOMP1 'NUMBER-OF-ARGS 3) 
(PUT 'EVMATRIXCOMP1 'DEFINED-ON-LINE '355) 
(PUT 'EVMATRIXCOMP1 'DEFINED-IN-FILE 'DIPOLY/TORDER.RED) 
(PUT 'EVMATRIXCOMP1 'PROCEDURE_TYPE
     '(ARROW (TIMES GENERAL GENERAL GENERAL) GENERAL)) 
(DE EVMATRIXCOMP1 (E1 E2 M)
    (COND ((NULL M) 0)
          (T
           ((LAMBDA (W1 W2)
              (COND ((IEQUAL W1 W2) (EVMATRIXCOMP1 E1 E2 (CDR M)))
                    ((IGREATERP W1 W2) 1) (T (MINUS 1))))
            (EVMATRIXCOMP2 E1 (CAR M) 0) (EVMATRIXCOMP2 E2 (CAR M) 0))))) 
(PUT 'EVMATRIXCOMP2 'NUMBER-OF-ARGS 3) 
(PUT 'EVMATRIXCOMP2 'DEFINED-ON-LINE '363) 
(PUT 'EVMATRIXCOMP2 'DEFINED-IN-FILE 'DIPOLY/TORDER.RED) 
(PUT 'EVMATRIXCOMP2 'PROCEDURE_TYPE
     '(ARROW (TIMES GENERAL GENERAL GENERAL) GENERAL)) 
(DE EVMATRIXCOMP2 (E L W)
    (COND ((OR (NULL E) (NULL L)) W)
          (T
           ((LAMBDA (L1)
              (COND ((IEQUAL L1 0) (EVMATRIXCOMP2 (CDR E) (CDR L) W))
                    ((IEQUAL L1 1)
                     (EVMATRIXCOMP2 (CDR E) (CDR L) (IPLUS2 W (CAR E))))
                    (T (EVMATRIXCOMP3 E L1 L W))))
            (CAR L))))) 
(PUT 'EVMATRIXCOMP3 'NUMBER-OF-ARGS 4) 
(PUT 'EVMATRIXCOMP3 'DEFINED-ON-LINE '371) 
(PUT 'EVMATRIXCOMP3 'DEFINED-IN-FILE 'DIPOLY/TORDER.RED) 
(PUT 'EVMATRIXCOMP3 'PROCEDURE_TYPE
     '(ARROW (TIMES GENERAL GENERAL GENERAL GENERAL) GENERAL)) 
(DE EVMATRIXCOMP3 (E L1 L W)
    (EVMATRIXCOMP2 (CDR E) (CDR L) (IPLUS2 W (ITIMES2 (CAR E) L1)))) 
(PUT 'EVMATRIXINIT1 'NUMBER-OF-ARGS 2) 
(PUT 'EVMATRIXINIT1 'DEFINED-ON-LINE '374) 
(PUT 'EVMATRIXINIT1 'DEFINED-IN-FILE 'DIPOLY/TORDER.RED) 
(PUT 'EVMATRIXINIT1 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE EVMATRIXINIT1 (W MODE)
    (PROG (M MM)
      (COND
       ((OR (NOT (EQCAR W 'MAT))
            (AND MODE (NEQ (LENGTH (CADR W)) (LENGTH DIPVARS*))))
        (TYPERR W (CONS "term order matrix for" DIPVARS*))))
      (PROG (ROW)
        (SETQ ROW (CDR W))
       LAB
        (COND ((NULL ROW) (RETURN NIL)))
        ((LAMBDA (ROW)
           (PROGN
            (SETQ ROW
                    (PROG (C FORALL-RESULT FORALL-ENDPTR)
                      (SETQ C ROW)
                      (COND ((NULL C) (RETURN NIL)))
                      (SETQ FORALL-RESULT
                              (SETQ FORALL-ENDPTR
                                      (CONS ((LAMBDA (C) (IEVAL C)) (CAR C))
                                            NIL)))
                     LOOPLABEL
                      (SETQ C (CDR C))
                      (COND ((NULL C) (RETURN FORALL-RESULT)))
                      (RPLACD FORALL-ENDPTR
                              (CONS ((LAMBDA (C) (IEVAL C)) (CAR C)) NIL))
                      (SETQ FORALL-ENDPTR (CDR FORALL-ENDPTR))
                      (GO LOOPLABEL)))
            (SETQ MM (CONS ROW MM))
            (SETQ ROW (REVERSE ROW))
            (PROG ()
             WHILELABEL
              (COND ((NOT (EQCAR ROW 0)) (RETURN NIL)))
              (SETQ ROW (CDR ROW))
              (GO WHILELABEL))
            (SETQ M (CONS (REVERSIP ROW) M))))
         (CAR ROW))
        (SETQ ROW (CDR ROW))
        (GO LAB))
      (SETQ M (REVERSIP M))
      (SETQ MM (REVERSIP MM))
      (COND
       ((NEQ M VDPMATRIX*)
        (PROGN
         (COND
          ((GREATERP (LENGTH (CADR W)) (LENGTH (CDR W)))
           (LPRIM "Warning: non-square matrix used in torder"))
          ((EQUAL 0 (REVAL1 (LIST 'DET W) T))
           (TYPERR W "term order (singular matrix)")))
         (COND
          ((NOT (EVMATRIXCHECK MM))
           (TYPERR W "term order (non admissible)"))))))
      (RETURN M))) 
(PUT 'EVMATRIXINIT 'NUMBER-OF-ARGS 0) 
(PUT 'EVMATRIXINIT 'DEFINED-ON-LINE '396) 
(PUT 'EVMATRIXINIT 'DEFINED-IN-FILE 'DIPOLY/TORDER.RED) 
(PUT 'EVMATRIXINIT 'PROCEDURE_TYPE '(ARROW UNIT GENERAL)) 
(DE EVMATRIXINIT NIL
    (PROG (C M W)
      (SETQ W (REVAL1 (CAR VDPSORTEXTENSION*) T))
      (SETQ M (EVMATRIXINIT1 W T))
      (COND ((SETQ C (ASSOC M COMPILED-ORDERS*)) (SETQ DIPSORTEVCOMP* (CDR C)))
            (*COMP (SETQ DIPSORTEVCOMP* (EVMATRIXCOMPILE M))))
      (SETQ VDPMATRIX* M))) 
(PUT 'EVMATRIXCHECK 'NUMBER-OF-ARGS 1) 
(PUT 'EVMATRIXCHECK 'DEFINED-ON-LINE '405) 
(PUT 'EVMATRIXCHECK 'DEFINED-IN-FILE 'DIPOLY/TORDER.RED) 
(PUT 'EVMATRIXCHECK 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE EVMATRIXCHECK (M)
    (PROG (BAD C W I J R)
      (SETQ I 0)
      (SETQ J 0)
      (SETQ R 0)
      (SETQ R (LENGTH M))
      (PROG (I)
        (SETQ I 1)
       LAB
        (COND ((MINUSP (DIFFERENCE (LENGTH (CAR M)) I)) (RETURN NIL)))
        (PROGN
         (SETQ C NIL)
         (PROG (J)
           (SETQ J 1)
          LAB
           (COND ((MINUSP (DIFFERENCE R J)) (RETURN NIL)))
           (COND
            ((AND (NEQ (SETQ W (NTH (NTH M J) I)) 0) (NULL C))
             (PROGN (SETQ C T) (SETQ BAD (LESSP W 0)))))
           (SETQ J (PLUS2 J 1))
           (GO LAB)))
        (SETQ I (PLUS2 I 1))
        (GO LAB))
      (RETURN (NOT BAD)))) 
(PUT 'EVMATRIXCOMPILE 'NUMBER-OF-ARGS 1) 
(PUT 'EVMATRIXCOMPILE 'DEFINED-ON-LINE '420) 
(PUT 'EVMATRIXCOMPILE 'DEFINED-IN-FILE 'DIPOLY/TORDER.RED) 
(PUT 'EVMATRIXCOMPILE 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE EVMATRIXCOMPILE (M)
    (PROG (W)
      (SETQ W (EVMATRIXCOMPILE1 M))
      (PUTD (CAR W) 'EXPR (CADDR W))
      (SETQ COMPILED-ORDERS* (CONS (CONS M (CAR W)) COMPILED-ORDERS*))
      (RETURN (CAR W)))) 
(PUT 'EVMATRIXCOMPILE1 'NUMBER-OF-ARGS 1) 
(PUT 'EVMATRIXCOMPILE1 'DEFINED-ON-LINE '427) 
(PUT 'EVMATRIXCOMPILE1 'DEFINED-IN-FILE 'DIPOLY/TORDER.RED) 
(PUT 'EVMATRIXCOMPILE1 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE EVMATRIXCOMPILE1 (M)
    (PROG (C N X W LVARS CODE LD P K)
      (SETQ LD 0)
      (SETQ P 0)
      (SETQ K 0)
      (PROG (ROW)
        (SETQ ROW M)
       LAB
        (COND ((NULL ROW) (RETURN NIL)))
        ((LAMBDA (ROW) (SETQ K (MAX K (LENGTH ROW)))) (CAR ROW))
        (SETQ ROW (CDR ROW))
        (GO LAB))
      (SETQ LVARS
              (PROG (I FORALL-RESULT FORALL-ENDPTR)
                (SETQ I 1)
                (COND ((MINUSP (DIFFERENCE K I)) (RETURN NIL)))
                (SETQ FORALL-RESULT (SETQ FORALL-ENDPTR (CONS (GENSYM) NIL)))
               LOOPLABEL
                (SETQ I (PLUS2 I 1))
                (COND ((MINUSP (DIFFERENCE K I)) (RETURN FORALL-RESULT)))
                (RPLACD FORALL-ENDPTR (CONS (GENSYM) NIL))
                (SETQ FORALL-ENDPTR (CDR FORALL-ENDPTR))
                (GO LOOPLABEL)))
      (SETQ CODE
              (LIST (LIST 'SETQ (CAR LVARS) '(IDIFFERENCE (CAR E1) (CAR E2)))))
      (SETQ LD 1)
      (PROG (ROW)
        (SETQ ROW M)
       LAB
        (COND ((NULL ROW) (RETURN NIL)))
        ((LAMBDA (ROW)
           (PROGN
            (SETQ P 0)
            (SETQ W NIL)
            (PROG ()
             WHILELABEL
              (COND ((NOT ROW) (RETURN NIL)))
              (PROGN
               (SETQ C (CAR ROW))
               (SETQ ROW (CDR ROW))
               (SETQ P (PLUS P 1))
               (COND
                ((NEQ C 0)
                 (PROGN
                  (PROG (I)
                    (SETQ I (PLUS LD 1))
                   LAB
                    (COND ((MINUSP (DIFFERENCE P I)) (RETURN NIL)))
                    (PROGN
                     (SETQ CODE
                             (APPEND CODE
                                     '((SETQ E1 (CDR E1)) (SETQ E2 (CDR E2)))))
                     (SETQ CODE
                             (APPEND CODE
                                     (LIST
                                      (LIST 'SETQ (NTH LVARS I)
                                            '(IDIFFERENCE (CAR E1)
                                                          (CAR E2))))))
                     (SETQ LD I)
                     NIL)
                    (SETQ I (PLUS2 I 1))
                    (GO LAB))
                  (SETQ X (NTH LVARS P))
                  (COND ((EQUAL C (MINUS 1)) (SETQ X (LIST 'IMINUS X)))
                        ((NEQ C 1) (SETQ X (LIST 'ITIMES C X))))
                  (SETQ W (COND (W (LIST 'IPLUS2 X W)) (T X))))))
               NIL)
              (GO WHILELABEL))
            (COND
             ((NOT (ATOM W))
              (PROGN
               (SETQ CODE (APPEND CODE (LIST (LIST 'SETQ 'W W))))
               (SETQ W 'W))))
            (SETQ CODE
                    (APPEND CODE
                            (LIST
                             (LIST 'COND (LIST (LIST 'IEQUAL W 0) T)
                                   (LIST (LIST 'IGREATERP W 0) '(RETURN 1))
                                   '(T (RETURN -1))))))
            NIL))
         (CAR ROW))
        (SETQ ROW (CDR ROW))
        (GO LAB))
      (SETQ CODE (APPEND CODE '((RETURN 0))))
      (SETQ N (GENSYM))
      (RETURN
       (LIST N K
             (EVFORM
              (LIST 'LAMBDA '(E1 E2)
                    (CONS 'PROG (CONS (CONS 'W LVARS) CODE)))))))) 
(PUT 'EVFORM 'NUMBER-OF-ARGS 1) 
(PUT 'EVFORM 'DEFINED-ON-LINE '464) 
(PUT 'EVFORM 'DEFINED-IN-FILE 'DIPOLY/TORDER.RED) 
(PUT 'EVFORM 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE EVFORM (U) (FORM1 U NIL 'SYMBOLIC)) 
(PUT 'TORDER_COMPILE_FORM 'NUMBER-OF-ARGS 3) 
(PUT 'TORDER_COMPILE_FORM 'DEFINED-ON-LINE '468) 
(PUT 'TORDER_COMPILE_FORM 'DEFINED-IN-FILE 'DIPOLY/TORDER.RED) 
(PUT 'TORDER_COMPILE_FORM 'PROCEDURE_TYPE
     '(ARROW (TIMES GENERAL GENERAL GENERAL) GENERAL)) 
(DE TORDER_COMPILE_FORM (W C M)
    (PROG (N)
      (COND ((LESSP (LENGTH W) 3) (REDERR "illegal arguments")))
      (SETQ M (EVMATRIXINIT1 (EVAL (FORM (CADDR W))) NIL))
      (SETQ C (EVMATRIXCOMPILE1 M))
      (SETQ N (EVAL (FORM (CADR W))))
      (RETURN
       (LIST 'PROGN
             (LIST 'PUTD (MKQUOTE N) (MKQUOTE 'EXPR) (MKQUOTE (CADDR C)))
             (LIST 'SETQ 'COMPILED-ORDERS*
                   (LIST 'CONS (LIST 'CONS (MKQUOTE M) (MKQUOTE N))
                         'COMPILED-ORDERS*))
             (LIST 'PUT (MKQUOTE N) ''EVCOMP (MKQUOTE N))
             (LIST 'PUT (MKQUOTE N) ''EVLENGTH (CADR C))
             (LIST 'FLAG (MKQUOTE (LIST N)) ''DIPSORTMODE) (MKQUOTE N))))) 
(PUT 'TORDER_COMPILE 'FORMFN 'TORDER_COMPILE_FORM) 
(ENDMODULE) 