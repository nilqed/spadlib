(cl:declaim (cl:optimize cl:debug cl:safety))
(cl:declaim (sb-ext:muffle-conditions sb-ext:compiler-note cl:style-warning))
(MODULE (LIST 'SORT)) 
(PUT 'STABLE-SORTIP 'NUMBER-OF-ARGS 2) 
(PUT 'STABLE-SORTIP 'DEFINED-ON-LINE '30) 
(PUT 'STABLE-SORTIP 'DEFINED-IN-FILE 'RTOOLS/SORT.RED) 
(PUT 'STABLE-SORTIP 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE STABLE-SORTIP (L PRED)
    (PROG (L1 L2 W)
      (COND ((NULL L) (RETURN L)))
      (SETQ L1 L)
      (SETQ L2 (CDR L))
      (COND ((NULL L2) (RETURN L)))
      (SETQ L L1)
      (PROG ()
       WHILELABEL
        (COND
         ((NOT (AND L2 (NOT (APPLY2 PRED (CAR L2) (CAR L))))) (RETURN NIL)))
        (PROGN (SETQ L L2) (SETQ L2 (CDR L2)))
        (GO WHILELABEL))
      (COND ((NULL L2) (RETURN L1)))
      (SETQ L2 L1)
      (SETQ L (CDDR L2))
      (PROG ()
       WHILELABEL
        (COND ((NOT (AND L (CDR L))) (RETURN NIL)))
        (PROGN (SETQ L2 (CDR L2)) (SETQ L (CDDR L)))
        (GO WHILELABEL))
      (SETQ L L2)
      (SETQ L2 (CDR L2))
      (RPLACD L NIL)
      (SETQ L1 (STABLE-SORTIP L1 PRED))
      (SETQ L2 (STABLE-SORTIP L2 PRED))
      (SETQ L (SETQ W (LIST NIL)))
      (PROG ()
       WHILELABEL
        (COND ((NOT (AND L1 L2)) (RETURN NIL)))
        (PROGN
         (COND
          ((APPLY2 PRED (CAR L2) (CAR L1))
           (PROGN (RPLACD W L2) (SETQ W L2) (SETQ L2 (CDR L2))))
          (T (PROGN (RPLACD W L1) (SETQ W L1) (SETQ L1 (CDR L1))))))
        (GO WHILELABEL))
      (COND (L1 (SETQ L2 L1)))
      (RPLACD W L2)
      (RETURN (CDR L)))) 
(PUT 'SORT 'NUMBER-OF-ARGS 2) 
(PUT 'SORT 'DEFINED-ON-LINE '81) 
(PUT 'SORT 'DEFINED-IN-FILE 'RTOOLS/SORT.RED) 
(PUT 'SORT 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE SORT (L PRED)
    (COND ((ATOM L) NIL)
          (T
           (PROG (A1)
             (SETQ A1 (CAR L))
             (COND ((ATOM (SETQ L (CDR L))) (RETURN (LIST A1)))
                   (T
                    (RETURN
                     (PROG (A2)
                       (SETQ A2 (CAR L))
                       (COND
                        ((ATOM (SETQ L (CDR L)))
                         (COND ((APPLY2 PRED A2 A1) (RETURN (LIST A2 A1)))
                               (T (RETURN (LIST A1 A2)))))
                        (T
                         (RETURN
                          (PROG (A3)
                            (SETQ A3 (CAR L))
                            (COND
                             ((ATOM (SETQ L (CDR L)))
                              (COND
                               ((APPLY2 PRED A2 A1)
                                (COND
                                 ((APPLY2 PRED A3 A2) (RETURN (LIST A3 A2 A1)))
                                 ((APPLY2 PRED A3 A1) (RETURN (LIST A2 A3 A1)))
                                 (T (RETURN (LIST A2 A1 A3)))))
                               ((APPLY2 PRED A3 A1) (RETURN (LIST A3 A1 A2)))
                               ((APPLY2 PRED A3 A2) (RETURN (LIST A1 A3 A2)))
                               (T (RETURN (LIST A1 A2 A3)))))
                             (T
                              (RETURN
                               (PROG (A4)
                                 (SETQ A4 (CAR L))
                                 (COND
                                  ((ATOM (SETQ L (CDR L)))
                                   (RETURN
                                    (PROG (W)
                                      (COND
                                       ((APPLY2 PRED A2 A1)
                                        (PROGN
                                         (SETQ W A1)
                                         (SETQ A1 A2)
                                         (SETQ A2 W))))
                                      (COND
                                       ((APPLY2 PRED A4 A3)
                                        (PROGN
                                         (SETQ W A3)
                                         (SETQ A3 A4)
                                         (SETQ A4 W))))
                                      (COND
                                       ((APPLY2 PRED A3 A1)
                                        (COND
                                         ((APPLY2 PRED A4 A1)
                                          (RETURN (LIST A3 A4 A1 A2)))
                                         ((APPLY2 PRED A4 A2)
                                          (RETURN (LIST A3 A1 A4 A2)))
                                         (T (RETURN (LIST A3 A1 A2 A4)))))
                                       ((APPLY2 PRED A4 A2)
                                        (RETURN (LIST A1 A3 A4 A2)))
                                       ((APPLY2 PRED A3 A2)
                                        (RETURN (LIST A1 A3 A2 A4)))
                                       (T (RETURN (LIST A1 A2 A3 A4)))))))
                                  (T
                                   (RETURN
                                    (STABLE-SORTIP
                                     (CONS A1
                                           (CONS A2
                                                 (CONS A3
                                                       (CONS A4
                                                             (APPEND L NIL)))))
                                     PRED)))))))))))))))))))) 
(DE STABLE-SORT (L PRED) (SORT L PRED)) 
(PUT 'STABLE-SORT 'NUMBER-OF-ARGS 2) 
(PUT 'STABLE-SORT 'DEFINED-ON-LINE '140) 
(PUT 'STABLE-SORT 'DEFINED-IN-FILE 'RTOOLS/SORT.RED) 
(PUT 'STABLE-SORT 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(PUTC 'STABLE-SORT 'INLINE '(LAMBDA (L PRED) (SORT L PRED))) 
(PUT 'IDSORT 'NUMBER-OF-ARGS 1) 
(PUT 'IDSORT 'DEFINED-ON-LINE '149) 
(PUT 'IDSORT 'DEFINED-IN-FILE 'RTOOLS/SORT.RED) 
(PUT 'IDSORT 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE IDSORT (U) (SORT U (FUNCTION IDCOMPARE))) 
(PUT 'IDCOMPARE 'NUMBER-OF-ARGS 2) 
(PUT 'IDCOMPARE 'DEFINED-ON-LINE '153) 
(PUT 'IDCOMPARE 'DEFINED-IN-FILE 'RTOOLS/SORT.RED) 
(PUT 'IDCOMPARE 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE IDCOMPARE (U V) (IDCOMP1 (EXPLODE2 U) (EXPLODE2 V))) 
(PUT 'IDCOMP1 'NUMBER-OF-ARGS 2) 
(PUT 'IDCOMP1 'DEFINED-ON-LINE '157) 
(PUT 'IDCOMP1 'DEFINED-IN-FILE 'RTOOLS/SORT.RED) 
(PUT 'IDCOMP1 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE IDCOMP1 (U V)
    (COND ((NULL U) T) ((NULL V) NIL)
          ((EQ (CAR U) (CAR V)) (IDCOMP1 (CDR U) (CDR V)))
          (T (ORDERP (CAR U) (CAR V))))) 
(PUT 'GREATERPCAR 'NUMBER-OF-ARGS 2) 
(PUT 'GREATERPCAR 'DEFINED-ON-LINE '166) 
(PUT 'GREATERPCAR 'DEFINED-IN-FILE 'RTOOLS/SORT.RED) 
(PUT 'GREATERPCAR 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE GREATERPCAR (A B) (GREATERP (CAR A) (CAR B))) 
(PUT 'GREATERPCDR 'NUMBER-OF-ARGS 2) 
(PUT 'GREATERPCDR 'DEFINED-ON-LINE '169) 
(PUT 'GREATERPCDR 'DEFINED-IN-FILE 'RTOOLS/SORT.RED) 
(PUT 'GREATERPCDR 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE GREATERPCDR (A B) (GREATERP (CDR A) (CDR B))) 
(PUT 'LESSPCADR 'NUMBER-OF-ARGS 2) 
(PUT 'LESSPCADR 'DEFINED-ON-LINE '171) 
(PUT 'LESSPCADR 'DEFINED-IN-FILE 'RTOOLS/SORT.RED) 
(PUT 'LESSPCADR 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE LESSPCADR (A B) (LESSP (CADR A) (CADR B))) 
(PUT 'GREATERPCADR 'NUMBER-OF-ARGS 2) 
(PUT 'GREATERPCADR 'DEFINED-ON-LINE '172) 
(PUT 'GREATERPCADR 'DEFINED-IN-FILE 'RTOOLS/SORT.RED) 
(PUT 'GREATERPCADR 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE GREATERPCADR (A B) (GREATERP (CADR A) (CADR B))) 
(PUT 'LESSPCADDR 'NUMBER-OF-ARGS 2) 
(PUT 'LESSPCADDR 'DEFINED-ON-LINE '174) 
(PUT 'LESSPCADDR 'DEFINED-IN-FILE 'RTOOLS/SORT.RED) 
(PUT 'LESSPCADDR 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE LESSPCADDR (A B) (LESSP (CADDR A) (CADDR B))) 
(PUT 'GREATERPCADDR 'NUMBER-OF-ARGS 2) 
(PUT 'GREATERPCADDR 'DEFINED-ON-LINE '175) 
(PUT 'GREATERPCADDR 'DEFINED-IN-FILE 'RTOOLS/SORT.RED) 
(PUT 'GREATERPCADDR 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE GREATERPCADDR (A B) (GREATERP (CADDR A) (CADDR B))) 
(PUT 'LESSPCDADR 'NUMBER-OF-ARGS 2) 
(PUT 'LESSPCDADR 'DEFINED-ON-LINE '177) 
(PUT 'LESSPCDADR 'DEFINED-IN-FILE 'RTOOLS/SORT.RED) 
(PUT 'LESSPCDADR 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE LESSPCDADR (A B) (LESSP (CDADR A) (CDADR B))) 
(PUT 'LESSPPAIR 'NUMBER-OF-ARGS 2) 
(PUT 'LESSPPAIR 'DEFINED-ON-LINE '179) 
(PUT 'LESSPPAIR 'DEFINED-IN-FILE 'RTOOLS/SORT.RED) 
(PUT 'LESSPPAIR 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE LESSPPAIR (A B)
    (COND ((EQUAL (CAR A) (CAR B)) (LESSP (CDR A) (CDR B)))
          (T (LESSP (CAR A) (CAR B))))) 
(PUT 'LESSPDEG 'NUMBER-OF-ARGS 2) 
(PUT 'LESSPDEG 'DEFINED-ON-LINE '182) 
(PUT 'LESSPDEG 'DEFINED-IN-FILE 'RTOOLS/SORT.RED) 
(PUT 'LESSPDEG 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE LESSPDEG (A B)
    (COND ((OR (ATOM B) (ATOM (CAR B))) NIL) ((OR (ATOM A) (ATOM (CAR A))) T)
          (T (LESSP (CDAAR A) (CDAAR B))))) 
(PUT 'ORDOPCAR 'NUMBER-OF-ARGS 2) 
(PUT 'ORDOPCAR 'DEFINED-ON-LINE '185) 
(PUT 'ORDOPCAR 'DEFINED-IN-FILE 'RTOOLS/SORT.RED) 
(PUT 'ORDOPCAR 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE ORDOPCAR (A B) (ORDOP (CAR A) (CAR B))) 
(PUT 'ORDERFACTORS 'NUMBER-OF-ARGS 2) 
(PUT 'ORDERFACTORS 'DEFINED-ON-LINE '187) 
(PUT 'ORDERFACTORS 'DEFINED-IN-FILE 'RTOOLS/SORT.RED) 
(PUT 'ORDERFACTORS 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE ORDERFACTORS (A B)
    (COND ((EQUAL (CDR A) (CDR B)) (ORDP (CAR A) (CAR B)))
          (T (LESSP (CDR A) (CDR B))))) 
(PUT 'SORT-FACTORS 'NUMBER-OF-ARGS 1) 
(PUT 'SORT-FACTORS 'DEFINED-ON-LINE '191) 
(PUT 'SORT-FACTORS 'DEFINED-IN-FILE 'RTOOLS/SORT.RED) 
(PUT 'SORT-FACTORS 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE SORT-FACTORS (L) (SORT L (FUNCTION ORDERFACTORS))) 
(ENDMODULE) 