(cl:declaim (cl:optimize cl:debug cl:safety))
(cl:declaim (sb-ext:muffle-conditions sb-ext:compiler-note cl:style-warning))
(MODULE (LIST 'GENPARSERPRINT)) 
(PUT 'LALR_PRINT_COMPRESSED_ACTION_TABLE 'NUMBER-OF-ARGS 1) 
(PUT 'LALR_PRINT_COMPRESSED_ACTION_TABLE 'DEFINED-ON-LINE '34) 
(PUT 'LALR_PRINT_COMPRESSED_ACTION_TABLE 'DEFINED-IN-FILE
     'LALR/GENPARSERPRINT.RED) 
(PUT 'LALR_PRINT_COMPRESSED_ACTION_TABLE 'PROCEDURE_TYPE
     '(ARROW GENERAL GENERAL)) 
(DE LALR_PRINT_COMPRESSED_ACTION_TABLE (ACTION_TABLE)
    (PROG (N_ITEMSETS ROW DEFAULT)
      (SETQ N_ITEMSETS (LENGTH ITEMSET_COLLECTION))
      (PRINC "=== ACTION TABLE ===")
      (TERPRI)
      (PRINC "STATE")
      (TTAB 6)
      (PRINC "TERMINAL")
      (TTAB 20)
      (PRINC "ACTION")
      (TERPRI)
      (PROG (STATE)
        (SETQ STATE 0)
       LAB
        (COND ((MINUSP (DIFFERENCE (SUB1 N_ITEMSETS) STATE)) (RETURN NIL)))
        (PROGN
         (SETQ ROW (CAR (GETV ACTION_TABLE STATE)))
         (SETQ DEFAULT (CDR (GETV ACTION_TABLE STATE)))
         (PRIN1 STATE)
         (PROG (ENTRY)
           (SETQ ENTRY ROW)
          LAB
           (COND ((NULL ENTRY) (RETURN NIL)))
           ((LAMBDA (ENTRY)
              (PROGN
               (TTAB 6)
               (LALR_PRIN_SYMBOL (CAR ENTRY))
               (TTAB 20)
               (LALR_PRIN_ACTION (CDR ENTRY))
               (TERPRI)))
            (CAR ENTRY))
           (SETQ ENTRY (CDR ENTRY))
           (GO LAB))
         (COND
          (DEFAULT
           (PROGN
            (TTAB 6)
            (PRINC "<any>")
            (TTAB 20)
            (LALR_PRIN_ACTION DEFAULT)
            (TERPRI)))))
        (SETQ STATE (PLUS2 STATE 1))
        (GO LAB))
      (TERPRI))) 
(PUT 'LALR_PRINT_COMPRESSED_GOTO_TABLE 'NUMBER-OF-ARGS 1) 
(PUT 'LALR_PRINT_COMPRESSED_GOTO_TABLE 'DEFINED-ON-LINE '53) 
(PUT 'LALR_PRINT_COMPRESSED_GOTO_TABLE 'DEFINED-IN-FILE
     'LALR/GENPARSERPRINT.RED) 
(PUT 'LALR_PRINT_COMPRESSED_GOTO_TABLE 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE LALR_PRINT_COMPRESSED_GOTO_TABLE (GOTO_TABLE)
    (PROG (CODE ROW DEFAULT)
      (PRINC "=== GOTO TABLE ===")
      (TERPRI)
      (PRINC "NONTERMINAL")
      (TTAB 20)
      (PRINC "SRC")
      (TTAB 28)
      (PRINC "DEST")
      (TERPRI)
      (PROG (NONTERMINAL)
        (SETQ NONTERMINAL (DELETE '|s'| NONTERMINALS))
       LAB
        (COND ((NULL NONTERMINAL) (RETURN NIL)))
        ((LAMBDA (NONTERMINAL)
           (PROGN
            (SETQ CODE (GET NONTERMINAL 'LALR_NONTERMINAL_CODE))
            (SETQ ROW (CAR (GETV GOTO_TABLE CODE)))
            (SETQ DEFAULT (CDR (GETV GOTO_TABLE CODE)))
            (LALR_PRIN_NONTERMINAL CODE)
            (PROG (ENTRY)
              (SETQ ENTRY ROW)
             LAB
              (COND ((NULL ENTRY) (RETURN NIL)))
              ((LAMBDA (ENTRY)
                 (PROGN
                  (TTAB 20)
                  (PRIN1 (CAR ENTRY))
                  (TTAB 28)
                  (PRINT (CDR ENTRY))))
               (CAR ENTRY))
              (SETQ ENTRY (CDR ENTRY))
              (GO LAB))
            (COND
             (DEFAULT
              (PROGN (TTAB 20) (PRINC "<any>") (TTAB 28) (PRINT DEFAULT))))))
         (CAR NONTERMINAL))
        (SETQ NONTERMINAL (CDR NONTERMINAL))
        (GO LAB))
      (TERPRI))) 
(PUT 'LALR_PRIN_ACTION 'NUMBER-OF-ARGS 1) 
(PUT 'LALR_PRIN_ACTION 'DEFINED-ON-LINE '70) 
(PUT 'LALR_PRIN_ACTION 'DEFINED-IN-FILE 'LALR/GENPARSERPRINT.RED) 
(PUT 'LALR_PRIN_ACTION 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE LALR_PRIN_ACTION (ACTION)
    (COND ((EQUAL ACTION NIL) (PRINC " "))
          ((GREATERP ACTION 0)
           (PROGN (PRINC "shift to state ") (PRIN1 ACTION)))
          ((EQUAL ACTION 0) (PRINC "accept"))
          (T (LALR_PRIN_REDUCTION (MINUS ACTION))))) 
(PUT 'LALR_PRIN_REDUCTION 'NUMBER-OF-ARGS 1) 
(PUT 'LALR_PRIN_REDUCTION 'DEFINED-ON-LINE '81) 
(PUT 'LALR_PRIN_REDUCTION 'DEFINED-IN-FILE 'LALR/GENPARSERPRINT.RED) 
(PUT 'LALR_PRIN_REDUCTION 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE LALR_PRIN_REDUCTION (CODE)
    (PROG (REDUCTION_FN REDUCTION_RHS_LENGTH REDUCTION_LHS FN)
      (SETQ REDUCTION_FN (FIRST REDUCTION_INFO))
      (SETQ REDUCTION_RHS_LENGTH (SECOND REDUCTION_INFO))
      (SETQ REDUCTION_LHS (THIRD REDUCTION_INFO))
      (PRINC "reduce by #")
      (PRIN1 CODE)
      (PRINC ": ")
      (LALR_PRIN_NONTERMINAL (GETV16 REDUCTION_LHS CODE))
      (PRINC " -> [")
      (PRIN1 (GETV8 REDUCTION_RHS_LENGTH CODE))
      (PRINC " symbols] ")
      (COND
       ((SETQ FN (GETV REDUCTION_FN CODE))
        (PRIN_WITH_MARGIN (CDR (GETD FN))))))) 
(PUT 'LALR_PRINT_LR0_COLLECTION 'NUMBER-OF-ARGS 0) 
(PUT 'LALR_PRINT_LR0_COLLECTION 'DEFINED-ON-LINE '96) 
(PUT 'LALR_PRINT_LR0_COLLECTION 'DEFINED-IN-FILE 'LALR/GENPARSERPRINT.RED) 
(PUT 'LALR_PRINT_LR0_COLLECTION 'PROCEDURE_TYPE '(ARROW UNIT GENERAL)) 
(DE LALR_PRINT_LR0_COLLECTION NIL
    (PROG (I_GOTO)
      (PRINC "=== LR(0) ITEMSET COLLECTION ===")
      (TERPRI)
      (PROG (I_ITEMSET)
        (SETQ I_ITEMSET (REVERSE ITEMSET_COLLECTION))
       LAB
        (COND ((NULL I_ITEMSET) (RETURN NIL)))
        ((LAMBDA (I_ITEMSET)
           (PROGN
            (PRINC "Itemset ")
            (PRIN1 (CDR I_ITEMSET))
            (TERPRI)
            (PROG (ITEM)
              (SETQ ITEM (SORT (CAR I_ITEMSET) (FUNCTION ORDP)))
             LAB
              (COND ((NULL ITEM) (RETURN NIL)))
              ((LAMBDA (ITEM)
                 (PROGN
                  (PRINC " ")
                  (LALR_PRIN_SYMBOL (CAR ITEM))
                  (PRINC " ->")
                  (PROG (X)
                    (SETQ X (CDR ITEM))
                   LAB
                    (COND ((NULL X) (RETURN NIL)))
                    ((LAMBDA (X) (PROGN (PRINC " ") (LALR_PRIN_SYMBOL X)))
                     (CAR X))
                    (SETQ X (CDR X))
                    (GO LAB))
                  (TERPRI)))
               (CAR ITEM))
              (SETQ ITEM (CDR ITEM))
              (GO LAB))
            (PROG (X)
              (SETQ X SYMBOLS)
             LAB
              (COND ((NULL X) (RETURN NIL)))
              ((LAMBDA (X)
                 (COND
                  ((SETQ I_GOTO (LALR_GOTO I_ITEMSET X))
                   (PROGN
                    (PRINC "GOTO(")
                    (LALR_PRIN_SYMBOL X)
                    (PRINC ") = state ")
                    (PRIN1 (CDR I_GOTO))
                    (TERPRI)))))
               (CAR X))
              (SETQ X (CDR X))
              (GO LAB))
            (TERPRI)))
         (CAR I_ITEMSET))
        (SETQ I_ITEMSET (CDR I_ITEMSET))
        (GO LAB)))) 
(PUT 'LALR_PRINT_COLLECTION 'NUMBER-OF-ARGS 0) 
(PUT 'LALR_PRINT_COLLECTION 'DEFINED-ON-LINE '114) 
(PUT 'LALR_PRINT_COLLECTION 'DEFINED-IN-FILE 'LALR/GENPARSERPRINT.RED) 
(PUT 'LALR_PRINT_COLLECTION 'PROCEDURE_TYPE '(ARROW UNIT GENERAL)) 
(DE LALR_PRINT_COLLECTION NIL
    (PROG (I_GOTO)
      (PRINC "=== LALR ITEMSET COLLECTION ===")
      (TERPRI)
      (PROG (I_ITEMSET)
        (SETQ I_ITEMSET (REVERSE ITEMSET_COLLECTION))
       LAB
        (COND ((NULL I_ITEMSET) (RETURN NIL)))
        ((LAMBDA (I_ITEMSET)
           (PROGN
            (PRINC "Itemset ")
            (PRIN1 (CDR I_ITEMSET))
            (TERPRI)
            (PROG (ITEM)
              (SETQ ITEM (SORT (CAR I_ITEMSET) (FUNCTION ORDP)))
             LAB
              (COND ((NULL ITEM) (RETURN NIL)))
              ((LAMBDA (ITEM)
                 (PROGN
                  (PRINC " ")
                  (LALR_PRIN_SYMBOL (CAAR ITEM))
                  (PRINC " ->")
                  (PROG (X)
                    (SETQ X (CDAR ITEM))
                   LAB
                    (COND ((NULL X) (RETURN NIL)))
                    ((LAMBDA (X) (PROGN (PRINC " ") (LALR_PRIN_SYMBOL X)))
                     (CAR X))
                    (SETQ X (CDR X))
                    (GO LAB))
                  (PRINC " [")
                  (PROG (REMAINING_LOOKAHEADS)
                    (SETQ REMAINING_LOOKAHEADS (CDR ITEM))
                   LAB
                    (COND ((NULL REMAINING_LOOKAHEADS) (RETURN NIL)))
                    (PROGN
                     (LALR_PRIN_SYMBOL (CAR REMAINING_LOOKAHEADS))
                     (COND
                      ((EQUAL (LENGTH REMAINING_LOOKAHEADS) 1) (PRINC "]"))
                      (T (PRINC "/"))))
                    (SETQ REMAINING_LOOKAHEADS (CDR REMAINING_LOOKAHEADS))
                    (GO LAB))
                  (TERPRI)))
               (CAR ITEM))
              (SETQ ITEM (CDR ITEM))
              (GO LAB))
            (PROG (X)
              (SETQ X SYMBOLS)
             LAB
              (COND ((NULL X) (RETURN NIL)))
              ((LAMBDA (X)
                 (COND
                  ((SETQ I_GOTO (LALR_GOTO I_ITEMSET X))
                   (PROGN
                    (PRINC "GOTO(")
                    (LALR_PRIN_SYMBOL X)
                    (PRINC ") = ")
                    (PRIN1 (CDR I_GOTO))
                    (TERPRI)))))
               (CAR X))
              (SETQ X (CDR X))
              (GO LAB))
            (TERPRI)))
         (CAR I_ITEMSET))
        (SETQ I_ITEMSET (CDR I_ITEMSET))
        (GO LAB)))) 
(PUT 'LALR_PRINT_FIRST_INFORMATION 'NUMBER-OF-ARGS 0) 
(PUT 'LALR_PRINT_FIRST_INFORMATION 'DEFINED-ON-LINE '138) 
(PUT 'LALR_PRINT_FIRST_INFORMATION 'DEFINED-IN-FILE 'LALR/GENPARSERPRINT.RED) 
(PUT 'LALR_PRINT_FIRST_INFORMATION 'PROCEDURE_TYPE '(ARROW UNIT GENERAL)) 
(DE LALR_PRINT_FIRST_INFORMATION NIL
    (PROGN
     (PRINC "=== FIRST sets for each nonterminal ===")
     (TERPRI)
     (PROG (NT)
       (SETQ NT NONTERMINALS)
      LAB
       (COND ((NULL NT) (RETURN NIL)))
       ((LAMBDA (NT)
          (PROGN
           (LALR_PRIN_SYMBOL NT)
           (PRINC ":")
           (TTAB 20)
           (PROG (TERMINAL)
             (SETQ TERMINAL (GET NT 'LALR_FIRST))
            LAB
             (COND ((NULL TERMINAL) (RETURN NIL)))
             ((LAMBDA (TERMINAL)
                (PROGN (LALR_PRIN_SYMBOL TERMINAL) (PRINC " ")))
              (CAR TERMINAL))
             (SETQ TERMINAL (CDR TERMINAL))
             (GO LAB))
           (TERPRI)))
        (CAR NT))
       (SETQ NT (CDR NT))
       (GO LAB))
     (TERPRI))) 
(PUT 'LALR_PRINT_TERMINALS_AND_CODES 'NUMBER-OF-ARGS 1) 
(PUT 'LALR_PRINT_TERMINALS_AND_CODES 'DEFINED-ON-LINE '149) 
(PUT 'LALR_PRINT_TERMINALS_AND_CODES 'DEFINED-IN-FILE 'LALR/GENPARSERPRINT.RED) 
(PUT 'LALR_PRINT_TERMINALS_AND_CODES 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE LALR_PRINT_TERMINALS_AND_CODES (TERMINALS)
    (PROGN
     (PRINC "=== Terminal symbols ===")
     (TERPRI)
     (PROG (TERMINAL)
       (SETQ TERMINAL TERMINALS)
      LAB
       (COND ((NULL TERMINAL) (RETURN NIL)))
       ((LAMBDA (TERMINAL)
          (PROGN
           (PRINC "   ")
           (LALR_PRIN_SYMBOL TERMINAL)
           (PRINC " [")
           (PRIN1 TERMINAL)
           (PRINC "]")
           (COND
            ((OR (LALR_PRECEDENCE TERMINAL) (LALR_ASSOCIATIVITY TERMINAL))
             (PROGN
              (PRINC " (precedence ")
              (PRIN1 (LALR_PRECEDENCE TERMINAL))
              (PRINC ", ")
              (PROG (C)
                (SETQ C (CDR (EXPLODE2 (LALR_ASSOCIATIVITY TERMINAL))))
               LAB
                (COND ((NULL C) (RETURN NIL)))
                ((LAMBDA (C) (PRINC C)) (CAR C))
                (SETQ C (CDR C))
                (GO LAB))
              (PRINC " associativity)"))))
           (TERPRI)))
        (CAR TERMINAL))
       (SETQ TERMINAL (CDR TERMINAL))
       (GO LAB))
     (TERPRI))) 
(PUT 'LALR_PRINT_NONTERMINALS_AND_PRODUCTIONS 'NUMBER-OF-ARGS 0) 
(PUT 'LALR_PRINT_NONTERMINALS_AND_PRODUCTIONS 'DEFINED-ON-LINE '163) 
(PUT 'LALR_PRINT_NONTERMINALS_AND_PRODUCTIONS 'DEFINED-IN-FILE
     'LALR/GENPARSERPRINT.RED) 
(PUT 'LALR_PRINT_NONTERMINALS_AND_PRODUCTIONS 'PROCEDURE_TYPE
     '(ARROW UNIT GENERAL)) 
(DE LALR_PRINT_NONTERMINALS_AND_PRODUCTIONS NIL
    (PROGN
     (PRINC "=== Nonterminal symbols ===")
     (TERPRI)
     (PROG (NT)
       (SETQ NT NONTERMINALS)
      LAB
       (COND ((NULL NT) (RETURN NIL)))
       ((LAMBDA (NT)
          (PROGN
           (PRINC "[")
           (PRIN1 (GET NT 'LALR_NONTERMINAL_CODE))
           (PRINC "] ")
           (LALR_PRIN_SYMBOL NT)
           (PROG (SEPARATOR)
             (SETQ SEPARATOR ":")
             (PROG (PRODUCTION)
               (SETQ PRODUCTION (LALR_PRODUCTIONS NT))
              LAB
               (COND ((NULL PRODUCTION) (RETURN NIL)))
               ((LAMBDA (PRODUCTION)
                  (PROGN
                   (TTAB 20)
                   (PRINC SEPARATOR)
                   (PRINC " ")
                   (SETQ SEPARATOR "|")
                   (LALR_PRIN_RHS (CAR PRODUCTION))
                   (COND ((GREATERP (POSN) 48) (TERPRI)))
                   (TTAB 48)
                   (PRINC "{ ")
                   (LALR_PRIN_SEMANTIC_ACTION (CDR PRODUCTION))
                   (PRINC " }")
                   (TERPRI)))
                (CAR PRODUCTION))
               (SETQ PRODUCTION (CDR PRODUCTION))
               (GO LAB)))
           (TERPRI)))
        (CAR NT))
       (SETQ NT (CDR NT))
       (GO LAB))
     (TERPRI))) 
(PUT 'LALR_PRIN_SEMANTIC_ACTION 'NUMBER-OF-ARGS 1) 
(PUT 'LALR_PRIN_SEMANTIC_ACTION 'DEFINED-ON-LINE '184) 
(PUT 'LALR_PRIN_SEMANTIC_ACTION 'DEFINED-IN-FILE 'LALR/GENPARSERPRINT.RED) 
(PUT 'LALR_PRIN_SEMANTIC_ACTION 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE LALR_PRIN_SEMANTIC_ACTION (SEMANTIC_ACTION)
    (PRIN_WITH_MARGIN SEMANTIC_ACTION)) 
(PUT 'LALR_PRIN_RHS 'NUMBER-OF-ARGS 1) 
(PUT 'LALR_PRIN_RHS 'DEFINED-ON-LINE '187) 
(PUT 'LALR_PRIN_RHS 'DEFINED-IN-FILE 'LALR/GENPARSERPRINT.RED) 
(PUT 'LALR_PRIN_RHS 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE LALR_PRIN_RHS (RHS)
    (COND ((EQUAL RHS NIL) (PRINC "<empty>"))
          (T
           (PROG (SYM)
             (SETQ SYM RHS)
            LAB
             (COND ((NULL SYM) (RETURN NIL)))
             ((LAMBDA (SYM) (PROGN (LALR_PRIN_SYMBOL SYM) (PRINC " ")))
              (CAR SYM))
             (SETQ SYM (CDR SYM))
             (GO LAB))))) 
(PUT 'LALR_PRIN_SYMBOL 'NUMBER-OF-ARGS 1) 
(PUT 'LALR_PRIN_SYMBOL 'DEFINED-ON-LINE '195) 
(PUT 'LALR_PRIN_SYMBOL 'DEFINED-IN-FILE 'LALR/GENPARSERPRINT.RED) 
(PUT 'LALR_PRIN_SYMBOL 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE LALR_PRIN_SYMBOL (SYM)
    (COND ((EQUAL SYM 0) (PRINC "$"))
          ((NUMBERP SYM)
           (PROG (C)
             (SETQ C (EXPLODE2 (CDRASSOC SYM TERMINAL_CODES)))
            LAB
             (COND ((NULL C) (RETURN NIL)))
             ((LAMBDA (C) (PRINC C)) (CAR C))
             (SETQ C (CDR C))
             (GO LAB)))
          (T
           (PROG (C)
             (SETQ C (EXPLODE2UC SYM))
            LAB
             (COND ((NULL C) (RETURN NIL)))
             ((LAMBDA (C) (PRINC C)) (CAR C))
             (SETQ C (CDR C))
             (GO LAB))))) 
(PUT 'LALR_PRIN_NONTERMINAL 'NUMBER-OF-ARGS 1) 
(PUT 'LALR_PRIN_NONTERMINAL 'DEFINED-ON-LINE '203) 
(PUT 'LALR_PRIN_NONTERMINAL 'DEFINED-IN-FILE 'LALR/GENPARSERPRINT.RED) 
(PUT 'LALR_PRIN_NONTERMINAL 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE LALR_PRIN_NONTERMINAL (CODE)
    (PROG (C)
      (SETQ C (EXPLODE2UC (CDRASSOC CODE NONTERMINAL_CODES)))
     LAB
      (COND ((NULL C) (RETURN NIL)))
      ((LAMBDA (C) (PRINC C)) (CAR C))
      (SETQ C (CDR C))
      (GO LAB))) 
(PUT 'LALR_WARN_REDUCE_REDUCE_CONFLICT 'NUMBER-OF-ARGS 3) 
(PUT 'LALR_WARN_REDUCE_REDUCE_CONFLICT 'DEFINED-ON-LINE '207) 
(PUT 'LALR_WARN_REDUCE_REDUCE_CONFLICT 'DEFINED-IN-FILE
     'LALR/GENPARSERPRINT.RED) 
(PUT 'LALR_WARN_REDUCE_REDUCE_CONFLICT 'PROCEDURE_TYPE
     '(ARROW (TIMES GENERAL GENERAL GENERAL) GENERAL)) 
(DE LALR_WARN_REDUCE_REDUCE_CONFLICT (REDUCE1 REDUCE2 STATE)
    (PROGN
     (COND ((NOT (ZEROP (POSN))) (TERPRI)))
     (PRINC "+++++ Reduce/reduce conflict in itemset #")
     (PRIN1 STATE)
     (PRINC " on lookahead ")
     (LALR_PRIN_SYMBOL (CAR REDUCE1))
     (TERPRI)
     (PRINC "Reduction #1: ")
     (LALR_PRIN_PRODUCTION (CADR (CADR REDUCE1)))
     (TERPRI)
     (PRINC "Reduction #2: ")
     (LALR_PRIN_PRODUCTION (CADR (CADR REDUCE2)))
     (TERPRI)
     (PROGN
      (PRIN2 "Resolved in favour of reduction #1")
      (TERPRI)
      "Resolved in favour of reduction #1")
     (TERPRI))) 
(PUT 'LALR_PRIN_PRODUCTION 'NUMBER-OF-ARGS 1) 
(PUT 'LALR_PRIN_PRODUCTION 'DEFINED-ON-LINE '218) 
(PUT 'LALR_PRIN_PRODUCTION 'DEFINED-IN-FILE 'LALR/GENPARSERPRINT.RED) 
(PUT 'LALR_PRIN_PRODUCTION 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE LALR_PRIN_PRODUCTION (PRODUCTION)
    (PROGN
     (LALR_PRIN_SYMBOL (CAR PRODUCTION))
     (PRINC " -> ")
     (LALR_PRIN_RHS (CDR PRODUCTION)))) 
(PUT 'LALR_WARN_SHIFT_REDUCE_CONFLICT 'NUMBER-OF-ARGS 3) 
(PUT 'LALR_WARN_SHIFT_REDUCE_CONFLICT 'DEFINED-ON-LINE '226) 
(PUT 'LALR_WARN_SHIFT_REDUCE_CONFLICT 'DEFINED-IN-FILE 'LALR/GENPARSERPRINT.RED) 
(PUT 'LALR_WARN_SHIFT_REDUCE_CONFLICT 'PROCEDURE_TYPE
     '(ARROW (TIMES GENERAL GENERAL GENERAL) GENERAL)) 
(DE LALR_WARN_SHIFT_REDUCE_CONFLICT (SHIFT REDUCE STATE)
    (PROGN
     (COND ((NOT (ZEROP (POSN))) (TERPRI)))
     (PRINC "+++ Shift/reduce conflict in itemset #")
     (PRIN1 STATE)
     (PRINC " on lookahead ")
     (LALR_PRIN_SYMBOL (CAR SHIFT))
     (TERPRI)
     (PRINC "Reduce: ")
     (LALR_PRIN_PRODUCTION (CADR (CADR REDUCE)))
     (TERPRI)
     (PRINC "Shift: to state #")
     (PRIN1 (CADR (CADR SHIFT)))
     (TERPRI)
     (PROGN
      (PRIN2 "Resolved in favour of the shift operation")
      (TERPRI)
      "Resolved in favour of the shift operation")
     (TERPRI))) 
(ENDMODULE) 