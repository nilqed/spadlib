(cl:declaim (cl:optimize cl:debug cl:safety))
(cl:declaim (sb-ext:muffle-conditions sb-ext:compiler-note cl:style-warning))
(MODULE (LIST 'GROEBSOR)) 
(PUT 'GROEBCPLISTSORTIN 'NUMBER-OF-ARGS 2) 
(PUT 'GROEBCPLISTSORTIN 'DEFINED-ON-LINE '34) 
(PUT 'GROEBCPLISTSORTIN 'DEFINED-IN-FILE 'GROEBNER/GROEBSOR.RED) 
(PUT 'GROEBCPLISTSORTIN 'PROCEDURE_TYPE
     '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE GROEBCPLISTSORTIN (P PL)
    (COND ((NULL PL) (LIST P)) (T (PROGN (GROEBCPLISTSORTIN1 P PL) PL)))) 
(PUT 'GROEBCPLISTSORTIN1 'NUMBER-OF-ARGS 2) 
(PUT 'GROEBCPLISTSORTIN1 'DEFINED-ON-LINE '41) 
(PUT 'GROEBCPLISTSORTIN1 'DEFINED-IN-FILE 'GROEBNER/GROEBSOR.RED) 
(PUT 'GROEBCPLISTSORTIN1 'PROCEDURE_TYPE
     '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE GROEBCPLISTSORTIN1 (P PL)
    (COND
     ((NOT (GROEBCPCOMPLESS? (CAR PL) P))
      (PROGN (RPLACD PL (CONS (CAR PL) (CDR PL))) (RPLACA PL P)))
     ((NULL (CDR PL)) (RPLACD PL (LIST P)))
     (T (GROEBCPLISTSORTIN1 P (CDR PL))))) 
(PUT 'GROEBCPLISTSORT 'NUMBER-OF-ARGS 1) 
(PUT 'GROEBCPLISTSORT 'DEFINED-ON-LINE '48) 
(PUT 'GROEBCPLISTSORT 'DEFINED-IN-FILE 'GROEBNER/GROEBSOR.RED) 
(PUT 'GROEBCPLISTSORT 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE GROEBCPLISTSORT (G)
    ((LAMBDA (GG)
       (PROGN
        (PROG (P)
          (SETQ P G)
         LAB
          (COND ((NULL P) (RETURN NIL)))
          ((LAMBDA (P) (SETQ GG (GROEBCPLISTSORTIN P GG))) (CAR P))
          (SETQ P (CDR P))
          (GO LAB))
        GG))
     NIL)) 
(PUT 'GROEBCPLISTMERGE 'NUMBER-OF-ARGS 2) 
(PUT 'GROEBCPLISTMERGE 'DEFINED-ON-LINE '51) 
(PUT 'GROEBCPLISTMERGE 'DEFINED-IN-FILE 'GROEBNER/GROEBSOR.RED) 
(PUT 'GROEBCPLISTMERGE 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE GROEBCPLISTMERGE (PL1 PL2)
    (PROG (CPL1 CPL2 SL)
      (COND ((NULL PL1) (RETURN PL2)))
      (COND ((NULL PL2) (RETURN PL1)))
      (SETQ CPL1 (CAR PL1))
      (SETQ CPL2 (CAR PL2))
      (SETQ SL (GROEBCPCOMPLESS? CPL1 CPL2))
      (RETURN
       (COND (SL (CONS CPL1 (GROEBCPLISTMERGE (CDR PL1) PL2)))
             (T (CONS CPL2 (GROEBCPLISTMERGE PL1 (CDR PL2)))))))) 
(PUT 'GROEBCPCOMPLESS? 'NUMBER-OF-ARGS 2) 
(PUT 'GROEBCPCOMPLESS? 'DEFINED-ON-LINE '63) 
(PUT 'GROEBCPCOMPLESS? 'DEFINED-IN-FILE 'GROEBNER/GROEBSOR.RED) 
(PUT 'GROEBCPCOMPLESS? 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE GROEBCPCOMPLESS? (P1 P2)
    (COND
     (*GSUGAR
      ((LAMBDA (D Q)
         (COND ((NOT (EQUAL D 0)) (LESSP D 0)) ((NOT (EQUAL Q 0)) (LESSP Q 0))
               (T
                (LESSP (VDPGETPROP (CADDR P1) 'NUMBER)
                       (VDPGETPROP (CADDR P2) 'NUMBER)))))
       (DIFFERENCE (CADDDR P1) (CADDDR P2)) (EVCOMP (CAR P1) (CAR P2))))
     (T (EQUAL 1 (EVCOMP (CAR P2) (CAR P1)))))) 
(ENDMODULE) 