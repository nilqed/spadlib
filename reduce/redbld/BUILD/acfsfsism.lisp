(cl:declaim (cl:optimize cl:debug cl:safety))
(cl:declaim (sb-ext:muffle-conditions sb-ext:compiler-note cl:style-warning))
(MODULE (LIST 'ACFSFSISM)) 
(REVISION 'ACFSFSISM
          "$Id: acfsfsism.red 5986 2021-08-28 13:35:27Z thomas-sturm $") 
(COPYRIGHT 'ACFSFSISM "(c) 1995-2009 A. Dolzmann, T. Sturm") 
(PUT 'ACFSF_SMRMKNOWL 'NUMBER-OF-ARGS 2) 
(PUT 'ACFSF_SMRMKNOWL 'DEFINED-ON-LINE '42) 
(PUT 'ACFSF_SMRMKNOWL 'DEFINED-IN-FILE 'REDLOG/ACFSF/ACFSFSISM.RED) 
(PUT 'ACFSF_SMRMKNOWL 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE ACFSF_SMRMKNOWL (KNOWL V)
    (COND ((NULL KNOWL) NIL)
          ((MEMBER V (KERNELS (CAAR KNOWL))) (ACFSF_SMRMKNOWL (CDR KNOWL) V))
          (T (PROGN (SETCDR KNOWL (ACFSF_SMRMKNOWL (CDR KNOWL) V)) KNOWL)))) 
(PUT 'ACFSF_SMCPKNOWL 'NUMBER-OF-ARGS 1) 
(PUT 'ACFSF_SMCPKNOWL 'DEFINED-ON-LINE '55) 
(PUT 'ACFSF_SMCPKNOWL 'DEFINED-IN-FILE 'REDLOG/ACFSF/ACFSFSISM.RED) 
(PUT 'ACFSF_SMCPKNOWL 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE ACFSF_SMCPKNOWL (KNOWL)
    (PROG (IR FORALL-RESULT FORALL-ENDPTR)
      (SETQ IR KNOWL)
      (COND ((NULL IR) (RETURN NIL)))
      (SETQ FORALL-RESULT
              (SETQ FORALL-ENDPTR
                      (CONS
                       ((LAMBDA (IR) (CONS (CAR IR) (APPEND (CDR IR) NIL)))
                        (CAR IR))
                       NIL)))
     LOOPLABEL
      (SETQ IR (CDR IR))
      (COND ((NULL IR) (RETURN FORALL-RESULT)))
      (RPLACD FORALL-ENDPTR
              (CONS
               ((LAMBDA (IR) (CONS (CAR IR) (APPEND (CDR IR) NIL))) (CAR IR))
               NIL))
      (SETQ FORALL-ENDPTR (CDR FORALL-ENDPTR))
      (GO LOOPLABEL))) 
(PUT 'ACFSF_SMUPDKNOWL 'NUMBER-OF-ARGS 4) 
(PUT 'ACFSF_SMUPDKNOWL 'DEFINED-ON-LINE '62) 
(PUT 'ACFSF_SMUPDKNOWL 'DEFINED-IN-FILE 'REDLOG/ACFSF/ACFSFSISM.RED) 
(PUT 'ACFSF_SMUPDKNOWL 'PROCEDURE_TYPE
     '(ARROW (TIMES GENERAL GENERAL GENERAL GENERAL) GENERAL)) 
(DE ACFSF_SMUPDKNOWL (OP ATL KNOWL N)
    (PROG (W IR A)
      (PROG ()
       WHILELABEL
        (COND ((NOT ATL) (RETURN NIL)))
        (PROGN
         (SETQ A
                 (COND ((EQ OP 'AND) (CAR ATL))
                       (T (ACFSF_NEGATEAT (CAR ATL)))))
         (SETQ ATL (CDR ATL))
         (SETQ IR (ACFSF_AT2IR A N))
         (COND
          ((SETQ W (ASSOC (CAR IR) KNOWL))
           (PROGN
            (SETCDR W (ACFSF_SMINSERT (CADR IR) (CDR W)))
            (COND
             ((EQ (CDR W) 'FALSE)
              (PROGN (SETQ ATL NIL) (SETQ KNOWL 'FALSE))))))
          (T (SETQ KNOWL (CONS IR KNOWL)))))
        (GO WHILELABEL))
      (RETURN KNOWL))) 
(PUT 'ACFSF_SMMKATL 'NUMBER-OF-ARGS 4) 
(PUT 'ACFSF_SMMKATL 'DEFINED-ON-LINE '85) 
(PUT 'ACFSF_SMMKATL 'DEFINED-IN-FILE 'REDLOG/ACFSF/ACFSFSISM.RED) 
(PUT 'ACFSF_SMMKATL 'PROCEDURE_TYPE
     '(ARROW (TIMES GENERAL GENERAL GENERAL GENERAL) GENERAL)) 
(DE ACFSF_SMMKATL (OP OLDKNOWL NEWKNOWL N) (ACFSF_IRL2ATL OP NEWKNOWL N)) 
(PUT 'ACFSF_SMDBGETREL 'NUMBER-OF-ARGS 2) 
(PUT 'ACFSF_SMDBGETREL 'DEFINED-ON-LINE '92) 
(PUT 'ACFSF_SMDBGETREL 'DEFINED-IN-FILE 'REDLOG/ACFSF/ACFSFSISM.RED) 
(PUT 'ACFSF_SMDBGETREL 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE ACFSF_SMDBGETREL (ABSSQ DB)
    (COND ((EQUAL ABSSQ (CDDAR DB)) (CADAR DB))
          ((CDR DB) (ACFSF_SMDBGETREL ABSSQ (CDR DB))))) 
(PUT 'ACFSF_AT2IR 'NUMBER-OF-ARGS 2) 
(PUT 'ACFSF_AT2IR 'DEFINED-ON-LINE '98) 
(PUT 'ACFSF_AT2IR 'DEFINED-IN-FILE 'REDLOG/ACFSF/ACFSFSISM.RED) 
(PUT 'ACFSF_AT2IR 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE ACFSF_AT2IR (ATF N)
    (PROG (OP PAR ABS C)
      (SETQ OP (ACFSF_OP ATF))
      (SETQ ABS (SETQ PAR (ACFSF_ARG2L ATF)))
      (PROG ()
       WHILELABEL
        (COND ((NOT (NOT (OR (ATOM ABS) (ATOM (CAR ABS))))) (RETURN NIL)))
        (SETQ ABS (CDR ABS))
        (GO WHILELABEL))
      (SETQ PAR (ADDF PAR (NEGF ABS)))
      (SETQ C (SFTO_DCONTENTF PAR))
      (SETQ PAR ((LAMBDA (*EXP) (QUOTF1 PAR C)) T))
      (SETQ ABS (MULTSQ (CONS ABS 1) (INVSQ (CONS C 1))))
      (RETURN (CONS PAR (LIST (CONS N (CONS OP ABS))))))) 
(PUT 'ACFSF_IRL2ATL 'NUMBER-OF-ARGS 3) 
(PUT 'ACFSF_IRL2ATL 'DEFINED-ON-LINE '113) 
(PUT 'ACFSF_IRL2ATL 'DEFINED-IN-FILE 'REDLOG/ACFSF/ACFSFSISM.RED) 
(PUT 'ACFSF_IRL2ATL 'PROCEDURE_TYPE
     '(ARROW (TIMES GENERAL GENERAL GENERAL) GENERAL)) 
(DE ACFSF_IRL2ATL (OP IRL N)
    (PROG (IR FORALL-RESULT FORALL-ENDPTR)
      (SETQ IR IRL)
     STARTOVER
      (COND ((NULL IR) (RETURN NIL)))
      (SETQ FORALL-RESULT ((LAMBDA (IR) (ACFSF_IR2ATL OP IR N)) (CAR IR)))
      (SETQ FORALL-ENDPTR (LASTPAIR FORALL-RESULT))
      (SETQ IR (CDR IR))
      (COND ((ATOM FORALL-ENDPTR) (GO STARTOVER)))
     LOOPLABEL
      (COND ((NULL IR) (RETURN FORALL-RESULT)))
      (RPLACD FORALL-ENDPTR ((LAMBDA (IR) (ACFSF_IR2ATL OP IR N)) (CAR IR)))
      (SETQ FORALL-ENDPTR (LASTPAIR FORALL-ENDPTR))
      (SETQ IR (CDR IR))
      (GO LOOPLABEL))) 
(PUT 'ACFSF_IR2ATL 'NUMBER-OF-ARGS 3) 
(PUT 'ACFSF_IR2ATL 'DEFINED-ON-LINE '119) 
(PUT 'ACFSF_IR2ATL 'DEFINED-IN-FILE 'REDLOG/ACFSF/ACFSFSISM.RED) 
(PUT 'ACFSF_IR2ATL 'PROCEDURE_TYPE
     '(ARROW (TIMES GENERAL GENERAL GENERAL) GENERAL)) 
(DE ACFSF_IR2ATL (OP IR N)
    ((LAMBDA (A)
       (PROG (LE FORALL-RESULT FORALL-ENDPTR)
         (SETQ LE (CDR IR))
        STARTOVER
         (COND ((NULL LE) (RETURN NIL)))
         (SETQ FORALL-RESULT
                 ((LAMBDA (LE)
                    (COND
                     ((EQUAL (CAR LE) N)
                      (LIST (ACFSF_ENTRY2AT OP (CDR LE) A)))))
                  (CAR LE)))
         (SETQ FORALL-ENDPTR (LASTPAIR FORALL-RESULT))
         (SETQ LE (CDR LE))
         (COND ((ATOM FORALL-ENDPTR) (GO STARTOVER)))
        LOOPLABEL
         (COND ((NULL LE) (RETURN FORALL-RESULT)))
         (RPLACD FORALL-ENDPTR
                 ((LAMBDA (LE)
                    (COND
                     ((EQUAL (CAR LE) N)
                      (LIST (ACFSF_ENTRY2AT OP (CDR LE) A)))))
                  (CAR LE)))
         (SETQ FORALL-ENDPTR (LASTPAIR FORALL-ENDPTR))
         (SETQ LE (CDR LE))
         (GO LOOPLABEL)))
     (CONS (CAR IR) 1))) 
(PUT 'ACFSF_ENTRY2AT 'NUMBER-OF-ARGS 3) 
(PUT 'ACFSF_ENTRY2AT 'DEFINED-ON-LINE '123) 
(PUT 'ACFSF_ENTRY2AT 'DEFINED-IN-FILE 'REDLOG/ACFSF/ACFSFSISM.RED) 
(PUT 'ACFSF_ENTRY2AT 'PROCEDURE_TYPE
     '(ARROW (TIMES GENERAL GENERAL GENERAL) GENERAL)) 
(DE ACFSF_ENTRY2AT (OP ENTRY PARASQ)
    (COND (*RLIDENTIFY (CL_IDENTIFYAT (ACFSF_ENTRY2AT1 OP ENTRY PARASQ)))
          (T (ACFSF_ENTRY2AT1 OP ENTRY PARASQ)))) 
(PUT 'ACFSF_ENTRY2AT1 'NUMBER-OF-ARGS 3) 
(PUT 'ACFSF_ENTRY2AT1 'DEFINED-ON-LINE '129) 
(PUT 'ACFSF_ENTRY2AT1 'DEFINED-IN-FILE 'REDLOG/ACFSF/ACFSFSISM.RED) 
(PUT 'ACFSF_ENTRY2AT1 'PROCEDURE_TYPE
     '(ARROW (TIMES GENERAL GENERAL GENERAL) GENERAL)) 
(DE ACFSF_ENTRY2AT1 (OP ENTRY PARASQ)
    (ACFSF_0MK2 (ACFSF_CLNEGREL (CAR ENTRY) (EQ OP 'AND))
                (CAR (ADDSQ PARASQ (CDR ENTRY))))) 
(PUT 'ACFSF_SMINSERT 'NUMBER-OF-ARGS 2) 
(PUT 'ACFSF_SMINSERT 'DEFINED-ON-LINE '133) 
(PUT 'ACFSF_SMINSERT 'DEFINED-IN-FILE 'REDLOG/ACFSF/ACFSFSISM.RED) 
(PUT 'ACFSF_SMINSERT 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE ACFSF_SMINSERT (LE DB)
    (PROG (A W SCDB OSCDB)
      (PROG ()
       REPEATLABEL
        (PROGN
         (SETQ W
                 (ACFSF_SMINSERT1 (CADR (CAR DB)) (CDDR (CAR DB)) (CADR LE)
                  (CDDR LE) (CAR LE)))
         (COND ((AND W (NOT (IDP W))) (PROGN (SETQ DB (CDR DB)) (SETQ LE W)))))
        (COND ((NOT (OR (NULL W) (IDP W) (NULL DB))) (GO REPEATLABEL))))
      (COND ((EQ W 'FALSE) (RETURN 'FALSE)))
      (COND ((EQ W 'TRUE) (RETURN DB)))
      (COND ((NULL DB) (RETURN (LIST LE))))
      (SETQ OSCDB DB)
      (SETQ SCDB (CDR DB))
      (PROG ()
       WHILELABEL
        (COND ((NOT SCDB) (RETURN NIL)))
        (PROGN
         (SETQ A (CAR SCDB))
         (SETQ SCDB (CDR SCDB))
         (SETQ W
                 (ACFSF_SMINSERT1 (CADR A) (CDDR A) (CADR LE) (CDDR LE)
                  (CAR LE)))
         (COND ((EQ W 'TRUE) (PROGN (SETQ SCDB NIL) (SETQ A 'TRUE)))
               ((EQ W 'FALSE) (PROGN (SETQ SCDB NIL) (SETQ A 'FALSE)))
               (W (PROGN (SETCDR OSCDB SCDB) (SETQ LE W)))
               (T (SETQ OSCDB (CDR OSCDB)))))
        (GO WHILELABEL))
      (COND ((EQ A 'FALSE) (RETURN 'FALSE)))
      (COND ((EQ A 'TRUE) (RETURN DB)))
      (RETURN (CONS LE DB)))) 
(PUT 'ACFSF_SMINSERT1 'NUMBER-OF-ARGS 5) 
(PUT 'ACFSF_SMINSERT1 'DEFINED-ON-LINE '171) 
(PUT 'ACFSF_SMINSERT1 'DEFINED-IN-FILE 'REDLOG/ACFSF/ACFSFSISM.RED) 
(PUT 'ACFSF_SMINSERT1 'PROCEDURE_TYPE
     '(ARROW (TIMES GENERAL GENERAL GENERAL GENERAL GENERAL) GENERAL)) 
(DE ACFSF_SMINSERT1 (R1 A R2 B N)
    (PROG (W DIFF)
      (SETQ DIFF (CAR (ADDSQ A (NEGSQ B))))
      (COND
       ((NULL DIFF)
        (PROGN
         (SETQ W (ACFSF_SMEQTABLE R1 R2))
         (COND ((EQ W 'FALSE) (RETURN 'FALSE)))
         (RETURN 'TRUE))))
      (COND
       ((MINUSF DIFF)
        (PROGN
         (SETQ W (ACFSF_SMORDTABLE R1 R2))
         (COND ((ATOM W) (RETURN W)))
         (COND ((AND (EQCAR W R1) (CDR W)) (RETURN 'TRUE)))
         (RETURN (CONS N (CONS (CAR W) (COND ((CDR W) A) (T B))))))))
      (SETQ W (ACFSF_SMORDTABLE R2 R1))
      (COND ((ATOM W) (RETURN W)))
      (COND ((AND (EQCAR W R1) (NULL (CDR W))) (RETURN 'TRUE)))
      (RETURN (CONS N (CONS (CAR W) (COND ((CDR W) B) (T A))))))) 
(PUT 'ACFSF_SMEQTABLE 'NUMBER-OF-ARGS 2) 
(PUT 'ACFSF_SMEQTABLE 'DEFINED-ON-LINE '201) 
(PUT 'ACFSF_SMEQTABLE 'DEFINED-IN-FILE 'REDLOG/ACFSF/ACFSFSISM.RED) 
(PUT 'ACFSF_SMEQTABLE 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE ACFSF_SMEQTABLE (R1 R2) (COND ((EQ R1 R2) R1) (T 'FALSE))) 
(PUT 'ACFSF_SMORDTABLE 'NUMBER-OF-ARGS 2) 
(PUT 'ACFSF_SMORDTABLE 'DEFINED-ON-LINE '208) 
(PUT 'ACFSF_SMORDTABLE 'DEFINED-IN-FILE 'REDLOG/ACFSF/ACFSFSISM.RED) 
(PUT 'ACFSF_SMORDTABLE 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE ACFSF_SMORDTABLE (R1 R2)
    (COND ((AND (EQ R1 'EQUAL) (EQ R2 'EQUAL)) 'FALSE)
          ((NEQ R1 R2) (CONS 'EQUAL (EQ R1 'EQUAL))))) 
(ENDMODULE) 