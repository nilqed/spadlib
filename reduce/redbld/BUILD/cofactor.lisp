(cl:declaim (cl:optimize cl:debug cl:safety))
(cl:declaim (sb-ext:muffle-conditions sb-ext:compiler-note cl:style-warning))
(MODULE (LIST 'COFACTOR)) 
(PUT 'COFACTORQ 'NUMBER-OF-ARGS 3) 
(PUT 'COFACTORQ 'DEFINED-ON-LINE '38) 
(PUT 'COFACTORQ 'DEFINED-IN-FILE 'MATRIX/COFACTOR.RED) 
(PUT 'COFACTORQ 'PROCEDURE_TYPE
     '(ARROW (TIMES GENERAL GENERAL GENERAL) GENERAL)) 
(DE COFACTORQ (U I J)
    (PROG (LEN)
      (SETQ LEN 0)
      (SETQ LEN (LENGTH U))
      (COND
       ((NOT (AND (GREATERP I 0) (LESSP I (PLUS LEN 1))))
        (RERROR 'MATRIX 20 "Row number out of range")))
      (COND
       ((NOT (AND (GREATERP J 0) (LESSP J (PLUS LEN 1))))
        (RERROR 'MATRIX 21 "Column number out of range")))
      (PROG (X)
        (SETQ X U)
       LAB
        (COND ((NULL X) (RETURN NIL)))
        ((LAMBDA (X)
           (COND
            ((NEQ (LENGTH X) LEN) (RERROR 'MATRIX 22 "non-square matrix"))))
         (CAR X))
        (SETQ X (CDR X))
        (GO LAB))
      (SETQ U (REMOVE U I))
      (MATRIX_CLRHASH)
      (SETQ U (DETQ1 U (DIFFERENCE LEN 1) (EXPT 2 (DIFFERENCE J 1))))
      (MATRIX_CLRHASH)
      (COND ((EQUAL (REMAINDER (PLUS I J) 2) 1) (SETQ U (NEGSQ U))))
      (RETURN U))) 
(PUT 'COFACTOR 'SIMPFN 'SIMPCOFACTOR) 
(PUT 'SIMPCOFACTOR 'NUMBER-OF-ARGS 1) 
(PUT 'SIMPCOFACTOR 'DEFINED-ON-LINE '57) 
(PUT 'SIMPCOFACTOR 'DEFINED-IN-FILE 'MATRIX/COFACTOR.RED) 
(PUT 'SIMPCOFACTOR 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE SIMPCOFACTOR (U)
    (COFACTORQ (MATSM (CAR U)) (IEVAL (CADR U))
     (IEVAL (CARX (CDDR U) 'COFACTOR)))) 
(ENDMODULE) 