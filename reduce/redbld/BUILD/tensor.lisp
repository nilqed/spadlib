(cl:declaim (cl:optimize cl:debug cl:safety))
(cl:declaim (sb-ext:muffle-conditions sb-ext:compiler-note cl:style-warning))
(MODULE (LIST 'TENSOR)) 
(FLUID '(*DEBUG)) 
(SWITCH (LIST 'DEBUG)) 
(GLOBAL '(*BASIS)) 
(PUT 'T_SIMP 'NUMBER-OF-ARGS 1) 
(PUT 'T_SIMP 'DEFINED-ON-LINE '51) 
(PUT 'T_SIMP 'DEFINED-IN-FILE 'ATENSOR/TENSOR.RED) 
(PUT 'T_SIMP 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE T_SIMP (V)
    (PROG (X)
      (COND (*DEBUG (PROGN (TERPRI) (PRINT (LIST (CONS 'T_SIMP V))))))
      (COND
       ((EQUAL (SETQ X (GET (CAR V) '|:TENSOR|)) 99)
        (PUT (CAR V) '|:TENSOR| (LENGTH (CDR V))))
       ((NULL (EQUAL X (LENGTH (CDR V))))
        (REDERR (LIST 'T_SIMP "*** Invalid number of indices:" V))))
      (SETQ V
              (CONS '|:TENSOR|
                    (LIST
                     (CONS (CONS (LIST (CAR V)) (CONS (IL_SIMP (CDR V)) 1))
                           (LIST (CONS 1 (MKUNITP (LENGTH (CDR V)))))))))
      (RETURN
       (CONS ((LAMBDA (Z) (COND ((CDR Z) Z) (T NIL))) (SIEVE_T V *BASIS)) 1)))) 
(GLOBAL '(DOMAINLIST*)) 
(SWITCH (LIST 'TENSOR)) 
(SETQ DOMAINLIST* (UNION '(|:TENSOR|) DOMAINLIST*)) 
(PUT 'TENSOR 'TAG '|:TENSOR|) 
(PUT '|:TENSOR| 'DNAME 'TENSOR) 
(PUT '|:TENSOR| 'MINUS 'T_MINUS) 
(PUT '|:TENSOR| 'MINUSP 'T_MINUSP) 
(PUT '|:TENSOR| 'PLUS 'T_PLUS) 
(PUT '|:TENSOR| 'TIMES 'T_TIMES) 
(PUT '|:TENSOR| 'DIFFERENCE 'T_DIFFERENCE) 
(PUT '|:TENSOR| 'ZEROP 'T_ZEROP) 
(PUT '|:TENSOR| 'ONEP 'T_ONEP) 
(PUT '|:TENSOR| 'PREPFN 'T_PREP) 
(PUT '|:TENSOR| 'PRIFN 'T_PRI) 
(PUT '|:TENSOR| 'INTEQUIVFN 'T_INTEQUIV) 
(PUT '|:TENSOR| 'I2D 'I2TENSOR) 
(PUT '|:TENSOR| 'EXPT 'T_EXPT) 
(PUT '|:TENSOR| 'QUOTIENT 'T_QUOTIENT) 
(PUT '|:TENSOR| 'DIVIDE 'T_DIVIDE) 
(PUT '|:TENSOR| 'GCD 'T_GCD) 
(FLAG '(|:TENSOR|) 'TMODE) 
(PUT 'T_MINUS 'NUMBER-OF-ARGS 1) 
(PUT 'T_MINUS 'DEFINED-ON-LINE '95) 
(PUT 'T_MINUS 'DEFINED-IN-FILE 'ATENSOR/TENSOR.RED) 
(PUT 'T_MINUS 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE T_MINUS (U)
    (COND ((ATOM (CDR U)) (MINUS (CDR U)))
          (T (SIEVE_T (CONS (CAR U) (T_MINUS1 (CDR U) NIL)) *BASIS)))) 
(PUT 'T_MINUS1 'NUMBER-OF-ARGS 2) 
(PUT 'T_MINUS1 'DEFINED-ON-LINE '99) 
(PUT 'T_MINUS1 'DEFINED-IN-FILE 'ATENSOR/TENSOR.RED) 
(PUT 'T_MINUS1 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE T_MINUS1 (U V)
    (COND ((NULL U) (REVERSIP V))
          (T (T_MINUS1 (CDR U) (CONS (CONS (CAAR U) (PV_NEG (CDAR U))) V))))) 
(DE T_MINUSP (U) NIL) 
(PUT 'T_MINUSP 'NUMBER-OF-ARGS 1) 
(PUT 'T_MINUSP 'DEFINED-ON-LINE '103) 
(PUT 'T_MINUSP 'DEFINED-IN-FILE 'ATENSOR/TENSOR.RED) 
(PUT 'T_MINUSP 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(PUTC 'T_MINUSP 'INLINE '(LAMBDA (U) NIL)) 
(PUT 'T_PLUS 'NUMBER-OF-ARGS 2) 
(PUT 'T_PLUS 'DEFINED-ON-LINE '105) 
(PUT 'T_PLUS 'DEFINED-IN-FILE 'ATENSOR/TENSOR.RED) 
(PUT 'T_PLUS 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE T_PLUS (U V)
    (COND
     ((ATOM (CDR U))
      (REDERR (LIST 'T_PLUS "*** Tensor can't be added to:" (CDR U))))
     ((ATOM (CDR V)) (T_PLUS V U))
     (T (SIEVE_T (CONS (CAR U) (T_PLUS1 (CDR U) (CDR V))) *BASIS)))) 
(PUT 'T_PLUS1 'NUMBER-OF-ARGS 2) 
(PUT 'T_PLUS1 'DEFINED-ON-LINE '111) 
(PUT 'T_PLUS1 'DEFINED-IN-FILE 'ATENSOR/TENSOR.RED) 
(PUT 'T_PLUS1 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE T_PLUS1 (U V)
    (COND ((NULL U) V) ((NULL V) U)
          (T (T_PLUS1 (CDR U) (T_PLUS2 (CAR U) V NIL))))) 
(PUT 'T_PLUS2 'NUMBER-OF-ARGS 3) 
(PUT 'T_PLUS2 'DEFINED-ON-LINE '116) 
(PUT 'T_PLUS2 'DEFINED-IN-FILE 'ATENSOR/TENSOR.RED) 
(PUT 'T_PLUS2 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL GENERAL) GENERAL)) 
(DE T_PLUS2 (X V W)
    (COND ((NULL V) (REVERSIP (CONS X W)))
          ((TH_MATCH (CAR X) (CAAR V))
           (APPEND (CDR V) (REVERSIP (CONS (T_ADD2 X (CAR V)) W))))
          (T (T_PLUS2 X (CDR V) (CONS (CAR V) W))))) 
(PUT 'T_TIMES 'NUMBER-OF-ARGS 2) 
(PUT 'T_TIMES 'DEFINED-ON-LINE '122) 
(PUT 'T_TIMES 'DEFINED-IN-FILE 'ATENSOR/TENSOR.RED) 
(PUT 'T_TIMES 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE T_TIMES (U V)
    (COND ((T_INTEQUIV U) (T_TIMES V U))
          ((ATOM (CDR V)) (CONS (CAR U) (T_TIMESC (CDR U) (CDR V) NIL)))
          (T
           ((LAMBDA (X) (SIEVE_T X *BASIS))
            (CONS (CAR U) (T_TIMES1 (CDR U) (CDR V) NIL)))))) 
(PUT 'T_TIMESC 'NUMBER-OF-ARGS 3) 
(PUT 'T_TIMESC 'DEFINED-ON-LINE '131) 
(PUT 'T_TIMESC 'DEFINED-IN-FILE 'ATENSOR/TENSOR.RED) 
(PUT 'T_TIMESC 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL GENERAL) GENERAL)) 
(DE T_TIMESC (TT C W)
    (COND ((NULL TT) (REVERSIP W))
          (T
           (T_TIMESC (CDR TT) C
            (CONS (CONS (CAAR TT) (PV_MULTC (CDAR TT) C)) W))))) 
(PUT 'T_TIMES1 'NUMBER-OF-ARGS 3) 
(PUT 'T_TIMES1 'DEFINED-ON-LINE '140) 
(PUT 'T_TIMES1 'DEFINED-IN-FILE 'ATENSOR/TENSOR.RED) 
(PUT 'T_TIMES1 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL GENERAL) GENERAL)) 
(DE T_TIMES1 (U V W)
    (COND ((NULL U) (REVERSIP W))
          (T (T_TIMES1 (CDR U) V (T_TIMES2 V (CAR U) W))))) 
(PUT 'T_TIMES2 'NUMBER-OF-ARGS 3) 
(PUT 'T_TIMES2 'DEFINED-ON-LINE '145) 
(PUT 'T_TIMES2 'DEFINED-IN-FILE 'ATENSOR/TENSOR.RED) 
(PUT 'T_TIMES2 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL GENERAL) GENERAL)) 
(DE T_TIMES2 (V X W)
    (COND ((NULL V) W)
          (T (T_TIMES2 (CDR V) X (T_PLUS2 (T_TIMES4 (CAR V) X) W NIL))))) 
(PUT 'T_TIMES3 'NUMBER-OF-ARGS 2) 
(PUT 'T_TIMES3 'DEFINED-ON-LINE '152) 
(PUT 'T_TIMES3 'DEFINED-IN-FILE 'ATENSOR/TENSOR.RED) 
(PUT 'T_TIMES3 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE T_TIMES3 (Y X)
    (COND ((NULL (ORDP (CAAR Y) (CAAR X))) (T_TIMES3 X Y))
          (T
           (CONS
            (CONS (APPEND (CAAR Y) (CAAR X))
                  (CONS (IL_SIMP (APPEND (CADAR Y) (CADAR X)))
                        (APPEND (CDDAR Y) (CDDAR X))))
            (CDR (PV_TIMES (CONS '|:PV| (CDR Y)) (CONS '|:PV| (CDR X)))))))) 
(PUT 'T_TIMES4 'NUMBER-OF-ARGS 2) 
(PUT 'T_TIMES4 'DEFINED-ON-LINE '160) 
(PUT 'T_TIMES4 'DEFINED-IN-FILE 'ATENSOR/TENSOR.RED) 
(PUT 'T_TIMES4 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE T_TIMES4 (X Y)
    (PROG (TF1 TF2 Z DEN)
      (SETQ DEN (TIMES (CDDAR X) (CDDAR Y)))
      (SETQ TF1 (T_SPLIT X))
      (SETQ TF2 (T_SPLIT Y))
      (SETQ Z (T_FUSE TF1 TF2))
      (RPLACD (CDAR Z) DEN)
      (RETURN Z))) 
(PUT 'T_SPLIT 'NUMBER-OF-ARGS 1) 
(PUT 'T_SPLIT 'DEFINED-ON-LINE '174) 
(PUT 'T_SPLIT 'DEFINED-IN-FILE 'ATENSOR/TENSOR.RED) 
(PUT 'T_SPLIT 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE T_SPLIT (X)
    (COND ((NULL (CDAAR X)) (LIST X))
          (T
           ((LAMBDA (P)
              (T_SPLIT1 (CAAR X) (PAPPL P (CADAR X))
               (UNPKPV (PAPPL_PV P (CDR X))) NIL))
            (PREV (CDADR X)))))) 
(PUT 'T_SPLIT1 'NUMBER-OF-ARGS 4) 
(PUT 'T_SPLIT1 'DEFINED-ON-LINE '185) 
(PUT 'T_SPLIT1 'DEFINED-IN-FILE 'ATENSOR/TENSOR.RED) 
(PUT 'T_SPLIT1 'PROCEDURE_TYPE
     '(ARROW (TIMES GENERAL GENERAL GENERAL GENERAL) GENERAL)) 
(DE T_SPLIT1 (TN IL PV TFL)
    (COND ((NULL TN) (REVERSIP TFL))
          ((CDR PV) (REDERR (LIST 'T_SPLIT1 ": too long pvector " PV)))
          (T
           ((LAMBDA (N)
              ((LAMBDA (ILS PVS)
                 (T_SPLIT1 (CDR TN) (CDR ILS) (LIST (CONS (CAAR PV) (CDR PVS)))
                  (CONS
                   (CONS (CONS (LIST (CAR TN)) (LIST (CAR ILS)))
                         (LIST (CONS 1 (P_RESCALE (CAR PVS)))))
                   TFL)))
               (L_SPLIT IL N NIL) (L_SPLIT (CDAR PV) N NIL)))
            (GET (CAR TN) '|:TENSOR|))))) 
(PUT 'PV_RESCALE 'NUMBER-OF-ARGS 1) 
(PUT 'PV_RESCALE 'DEFINED-ON-LINE '200) 
(PUT 'PV_RESCALE 'DEFINED-IN-FILE 'ATENSOR/TENSOR.RED) 
(PUT 'PV_RESCALE 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE PV_RESCALE (PV) (PV_RESCALE1 PV NIL)) 
(PUT 'PV_RESCALE1 'NUMBER-OF-ARGS 2) 
(PUT 'PV_RESCALE1 'DEFINED-ON-LINE '202) 
(PUT 'PV_RESCALE1 'DEFINED-IN-FILE 'ATENSOR/TENSOR.RED) 
(PUT 'PV_RESCALE1 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE PV_RESCALE1 (PV PV1)
    (COND ((NULL PV) (REVERSIP PV1))
          (T
           (PV_RESCALE1 (CDR PV)
            (CONS (CONS (CAAR PV) (P_RESCALE (CDAR PV))) PV1))))) 
(PUT 'P_RESCALE 'NUMBER-OF-ARGS 1) 
(PUT 'P_RESCALE 'DEFINED-ON-LINE '206) 
(PUT 'P_RESCALE 'DEFINED-IN-FILE 'ATENSOR/TENSOR.RED) 
(PUT 'P_RESCALE 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE P_RESCALE (P)
    ((LAMBDA (N)
       (PROG (X FORALL-RESULT FORALL-ENDPTR)
         (SETQ X P)
         (COND ((NULL X) (RETURN NIL)))
         (SETQ FORALL-RESULT
                 (SETQ FORALL-ENDPTR
                         (CONS ((LAMBDA (X) (DIFFERENCE X N)) (CAR X)) NIL)))
        LOOPLABEL
         (SETQ X (CDR X))
         (COND ((NULL X) (RETURN FORALL-RESULT)))
         (RPLACD FORALL-ENDPTR
                 (CONS ((LAMBDA (X) (DIFFERENCE X N)) (CAR X)) NIL))
         (SETQ FORALL-ENDPTR (CDR FORALL-ENDPTR))
         (GO LOOPLABEL)))
     (DIFFERENCE (CAR P) 1))) 
(PUT 'L_SPLIT 'NUMBER-OF-ARGS 3) 
(PUT 'L_SPLIT 'DEFINED-ON-LINE '209) 
(PUT 'L_SPLIT 'DEFINED-IN-FILE 'ATENSOR/TENSOR.RED) 
(PUT 'L_SPLIT 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL GENERAL) GENERAL)) 
(DE L_SPLIT (LST N LST1)
    (COND ((LEQ N 0) (CONS (REVERSIP LST1) LST))
          (T (L_SPLIT (CDR LST) (DIFFERENCE N 1) (CONS (CAR LST) LST1))))) 
(DE UNPKPV (PV) (UNPKPV1 PV NIL)) 
(PUT 'UNPKPV 'NUMBER-OF-ARGS 1) 
(PUT 'UNPKPV 'DEFINED-ON-LINE '215) 
(PUT 'UNPKPV 'DEFINED-IN-FILE 'ATENSOR/TENSOR.RED) 
(PUT 'UNPKPV 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(PUTC 'UNPKPV 'INLINE '(LAMBDA (PV) (UNPKPV1 PV NIL))) 
(PUT 'UNPKPV1 'NUMBER-OF-ARGS 2) 
(PUT 'UNPKPV1 'DEFINED-ON-LINE '218) 
(PUT 'UNPKPV1 'DEFINED-IN-FILE 'ATENSOR/TENSOR.RED) 
(PUT 'UNPKPV1 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE UNPKPV1 (PV UPV)
    (COND ((NULL PV) (REVERSIP UPV))
          (T (UNPKPV1 (CDR PV) (CONS (CONS (CAAR PV) (UNPKP (CDAR PV))) UPV))))) 
(PUT 'T_FUSE 'NUMBER-OF-ARGS 2) 
(PUT 'T_FUSE 'DEFINED-ON-LINE '222) 
(PUT 'T_FUSE 'DEFINED-IN-FILE 'ATENSOR/TENSOR.RED) 
(PUT 'T_FUSE 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE T_FUSE (TF1 TF2) (T_FUSE1 (REVERSIP TF1) (REVERSIP TF2) NIL)) 
(PUT 'T_FUSE1 'NUMBER-OF-ARGS 3) 
(PUT 'T_FUSE1 'DEFINED-ON-LINE '227) 
(PUT 'T_FUSE1 'DEFINED-IN-FILE 'ATENSOR/TENSOR.RED) 
(PUT 'T_FUSE1 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL GENERAL) GENERAL)) 
(DE T_FUSE1 (TF1 TF2 TF3)
    (COND ((NULL TF1) (T_FUSE2 (REVERSIP (APPEND (REVERSIP TF2) TF3)) NIL))
          ((NULL TF2) (T_FUSE2 (REVERSIP (APPEND (REVERSIP TF1) TF3)) NIL))
          ((NULL (ORDP (CAAAR TF1) (CAAAR TF2)))
           (T_FUSE1 (CDR TF1) TF2 (CONS (CAR TF1) TF3)))
          (T (T_FUSE1 TF1 (CDR TF2) (CONS (CAR TF2) TF3))))) 
(PUT 'T_FUSE2 'NUMBER-OF-ARGS 2) 
(PUT 'T_FUSE2 'DEFINED-ON-LINE '246) 
(PUT 'T_FUSE2 'DEFINED-IN-FILE 'ATENSOR/TENSOR.RED) 
(PUT 'T_FUSE2 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE T_FUSE2 (TF TE)
    (COND ((NULL TF) TE) (T (T_FUSE2 (CDR TF) (T_FUSE3 (CAR TF) TE))))) 
(PUT 'T_FUSE3 'NUMBER-OF-ARGS 2) 
(PUT 'T_FUSE3 'DEFINED-ON-LINE '250) 
(PUT 'T_FUSE3 'DEFINED-IN-FILE 'ATENSOR/TENSOR.RED) 
(PUT 'T_FUSE3 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE T_FUSE3 (T1 T2)
    (COND ((NULL T2) (PKT T1)) ((NULL (CAAR T1)) (PKT T2))
          (T
           ((LAMBDA (ZZ)
              ((LAMBDA (X)
                 (CONS
                  (CONS (CONS (CAAAR T1) (CAAR T2))
                        (CONS (IL_SIMP (APPEND (CADAR T1) (CADAR T2))) NIL))
                  (CDR
                   (PV_TIMES (CONS '|:PV| (CDR T1)) (CONS '|:PV| (CDR T2))))))
               (ADDMULTSYM T1 T2)))
            (B_EXPAND (LIST '|:TENSOR| T1) (LIST '|:TENSOR| T2)))))) 
(DE ADDMULTSYM (T1 T2) (ADDMSYM T1 T2 (CAAR T1) (CAAR T2))) 
(PUT 'ADDMULTSYM 'NUMBER-OF-ARGS 2) 
(PUT 'ADDMULTSYM 'DEFINED-ON-LINE '268) 
(PUT 'ADDMULTSYM 'DEFINED-IN-FILE 'ATENSOR/TENSOR.RED) 
(PUT 'ADDMULTSYM 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(PUTC 'ADDMULTSYM 'INLINE '(LAMBDA (T1 T2) (ADDMSYM T1 T2 (CAAR T1) (CAAR T2)))) 
(PUT 'ADDMSYM 'NUMBER-OF-ARGS 4) 
(PUT 'ADDMSYM 'DEFINED-ON-LINE '271) 
(PUT 'ADDMSYM 'DEFINED-IN-FILE 'ATENSOR/TENSOR.RED) 
(PUT 'ADDMSYM 'PROCEDURE_TYPE
     '(ARROW (TIMES GENERAL GENERAL GENERAL GENERAL) GENERAL)) 
(DE ADDMSYM (T1 T2 K1 K2)
    (COND ((NULL K2) (SETQ *BASIS (B_EXPAND1 T1 T2 *BASIS *BASIS)))
          ((NULL K1) (ADDMSYM T1 T2 (CAAR T1) (CDR K2)))
          ((NULL (EQ (CAR K1) (CAR K2))) (ADDMSYM T1 T2 (CDR K1) K2))
          (T
           ((LAMBDA (ZZ) (ADDMSYM T1 T2 (CDR K1) K2))
            (ADDMSYM0 T1 T2 (MSYMPERM0 (CAR T1) (CAR T2) K1 K2)))))) 
(PUT 'ADDMSYM0 'NUMBER-OF-ARGS 3) 
(PUT 'ADDMSYM0 'DEFINED-ON-LINE '281) 
(PUT 'ADDMSYM0 'DEFINED-IN-FILE 'ATENSOR/TENSOR.RED) 
(PUT 'ADDMSYM0 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL GENERAL) GENERAL)) 
(DE ADDMSYM0 (T1 T2 PZ)
    ((LAMBDA (TH Z)
       (ADDMULTSYM1
        (CONS TH
              (CDR
               (PV_DIFFERENCE Z (CONS '|:PV| (PAPPL_PV (CAR PZ) (CDR Z))))))))
     (CONS (CONS (CAAAR T1) (CAAR T2)) (CONS (CDR PZ) NIL))
     (PV_TIMES (CONS '|:PV| (CDR T1)) (CONS '|:PV| (CDR T2))))) 
(PUT 'MSYMPERM0 'NUMBER-OF-ARGS 4) 
(PUT 'MSYMPERM0 'DEFINED-ON-LINE '286) 
(PUT 'MSYMPERM0 'DEFINED-IN-FILE 'ATENSOR/TENSOR.RED) 
(PUT 'MSYMPERM0 'PROCEDURE_TYPE
     '(ARROW (TIMES GENERAL GENERAL GENERAL GENERAL) GENERAL)) 
(DE MSYMPERM0 (TH1 TH2 K1 K2)
    (PROG (IL1 IL2 N0 NAM1 NAM2 W1 W2 ZL)
      (SETQ NAM1 (CAR TH1))
      (SETQ NAM2 (CAR TH2))
      (SETQ IL1 (CADR TH1))
      (SETQ IL2 (CADR TH2))
      (SETQ N0 (LENGTH IL1))
      (SETQ IL2 (IL_SIMP (APPEND IL1 IL2)))
      (SETQ ZL IL2)
      (SETQ IL1 NIL)
      (PROG (I)
        (SETQ I 1)
       LAB
        (COND ((MINUSP (DIFFERENCE N0 I)) (RETURN NIL)))
        (PROGN (SETQ IL1 (CONS (CAR IL2) IL1)) (SETQ IL2 (CDR IL2)))
        (SETQ I (PLUS2 I 1))
        (GO LAB))
      (SETQ IL1 (REVERSIP IL1))
      (SETQ W1 NIL)
      (PROG ()
       WHILELABEL
        (COND ((NOT (NULL (EQ NAM1 K1))) (RETURN NIL)))
        (PROGN
         (SETQ N0 (GET (CAR NAM1) '|:TENSOR|))
         (PROG (I)
           (SETQ I 1)
          LAB
           (COND ((MINUSP (DIFFERENCE N0 I)) (RETURN NIL)))
           (PROGN (SETQ W1 (CONS (CAR IL1) W1)) (SETQ IL1 (CDR IL1)))
           (SETQ I (PLUS2 I 1))
           (GO LAB))
         (SETQ NAM1 (CDR NAM1))
         NIL)
        (GO WHILELABEL))
      (SETQ W2 NIL)
      (PROG ()
       WHILELABEL
        (COND ((NOT (NULL (EQ NAM2 K2))) (RETURN NIL)))
        (PROGN
         (SETQ N0 (GET (CAR NAM2) '|:TENSOR|))
         (PROG (I)
           (SETQ I 1)
          LAB
           (COND ((MINUSP (DIFFERENCE N0 I)) (RETURN NIL)))
           (PROGN (SETQ W2 (CONS (CAR IL2) W2)) (SETQ IL2 (CDR IL2)))
           (SETQ I (PLUS2 I 1))
           (GO LAB))
         (SETQ NAM2 (CDR NAM2))
         NIL)
        (GO WHILELABEL))
      (SETQ N0 (GET (CAR NAM1) '|:TENSOR|))
      (PROG (I)
        (SETQ I 1)
       LAB
        (COND ((MINUSP (DIFFERENCE N0 I)) (RETURN NIL)))
        (PROGN
         (SETQ W1 (CONS (CAR IL2) W1))
         (SETQ W2 (CONS (CAR IL1) W2))
         (SETQ IL1 (CDR IL1))
         (SETQ IL2 (CDR IL2))
         NIL)
        (SETQ I (PLUS2 I 1))
        (GO LAB))
      (SETQ W1 (APPEND (REVERSIP W1) IL1))
      (SETQ W2 (APPEND (REVERSIP W2) IL2))
      (RETURN (CONS (PFIND (APPEND W1 W2) ZL) ZL)))) 
(DE ADDMULTSYM_ (T1 T2) NIL) 
(PUT 'ADDMULTSYM_ 'NUMBER-OF-ARGS 2) 
(PUT 'ADDMULTSYM_ 'DEFINED-ON-LINE '322) 
(PUT 'ADDMULTSYM_ 'DEFINED-IN-FILE 'ATENSOR/TENSOR.RED) 
(PUT 'ADDMULTSYM_ 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(PUTC 'ADDMULTSYM_ 'INLINE '(LAMBDA (T1 T2) NIL)) 
(PUT 'ADDMULTSYM__ 'NUMBER-OF-ARGS 2) 
(PUT 'ADDMULTSYM__ 'DEFINED-ON-LINE '324) 
(PUT 'ADDMULTSYM__ 'DEFINED-IN-FILE 'ATENSOR/TENSOR.RED) 
(PUT 'ADDMULTSYM__ 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE ADDMULTSYM__ (T1 T2)
    (COND
     ((NEQ (CAAAR T1) (CAAAR T2))
      (SETQ *BASIS (B_EXPAND1 T1 T2 *BASIS *BASIS)))
     (T
      ((LAMBDA (PZ)
         ((LAMBDA (TH Z)
            (ADDMULTSYM1
             (CONS TH
                   (CDR
                    (PV_DIFFERENCE Z
                     (CONS '|:PV| (PAPPL_PV (CAR PZ) (CDR Z))))))))
          (CONS (CONS (CAAAR T1) (CAAR T2)) (CONS (CDR PZ) NIL))
          (PV_TIMES (CONS '|:PV| (CDR T1)) (CONS '|:PV| (CDR T2)))))
       (MSYMPERM (CADAR T1) (CADAR T2)))))) 
(PUT 'MSYMPERM 'NUMBER-OF-ARGS 2) 
(PUT 'MSYMPERM 'DEFINED-ON-LINE '335) 
(PUT 'MSYMPERM 'DEFINED-IN-FILE 'ATENSOR/TENSOR.RED) 
(PUT 'MSYMPERM 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE MSYMPERM (IL1 IL2)
    (PROG (ZL W K)
      (SETQ K (LENGTH IL1))
      (SETQ ZL (IL_SIMP (APPEND IL1 IL2)))
      (SETQ IL2 ZL)
      (PROG (I)
        (SETQ I 1)
       LAB
        (COND ((MINUSP (DIFFERENCE K I)) (RETURN NIL)))
        (PROGN (SETQ W (CONS (CAR IL2) W)) (SETQ IL2 (CDR IL2)))
        (SETQ I (PLUS2 I 1))
        (GO LAB))
      (SETQ IL1 (REVERSIP W))
      (SETQ W NIL)
      (PROG (I)
        (SETQ I 1)
       LAB
        (COND ((MINUSP (DIFFERENCE K I)) (RETURN NIL)))
        (PROGN (SETQ W (CONS (CAR IL2) W)) (SETQ IL2 (CDR IL2)))
        (SETQ I (PLUS2 I 1))
        (GO LAB))
      (SETQ W (REVERSIP W))
      (RETURN (CONS (PFIND (APPEND W (APPEND IL1 IL2)) ZL) ZL)))) 
(PUT 'ADDMULTSYM2 'NUMBER-OF-ARGS 3) 
(PUT 'ADDMULTSYM2 'DEFINED-ON-LINE '348) 
(PUT 'ADDMULTSYM2 'DEFINED-IN-FILE 'ATENSOR/TENSOR.RED) 
(PUT 'ADDMULTSYM2 'PROCEDURE_TYPE
     '(ARROW (TIMES GENERAL GENERAL GENERAL) GENERAL)) 
(DE ADDMULTSYM2 (T1 T2 BS)
    (COND ((NULL BS) NIL)
          ((NULL (TH_MATCH0 (CAR T2) (CAAR BS))) (ADDMULTSYM2 T1 T2 (CDR BS)))
          (T (REDERR (LIST "b_xpand?"))))) 
(PUT 'ADDMULTSYM1 'NUMBER-OF-ARGS 1) 
(PUT 'ADDMULTSYM1 'DEFINED-ON-LINE '354) 
(PUT 'ADDMULTSYM1 'DEFINED-IN-FILE 'ATENSOR/TENSOR.RED) 
(PUT 'ADDMULTSYM1 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE ADDMULTSYM1 (TE) (SETQ *BASIS (TSYM2 (LIST TE) *BASIS NIL))) 
(PUT 'PKT 'NUMBER-OF-ARGS 1) 
(PUT 'PKT 'DEFINED-ON-LINE '357) 
(PUT 'PKT 'DEFINED-IN-FILE 'ATENSOR/TENSOR.RED) 
(PUT 'PKT 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE PKT (T1) (CONS (CAR T1) (PKPV (CDR T1) NIL))) 
(PUT 'PKPV 'NUMBER-OF-ARGS 2) 
(PUT 'PKPV 'DEFINED-ON-LINE '359) 
(PUT 'PKPV 'DEFINED-IN-FILE 'ATENSOR/TENSOR.RED) 
(PUT 'PKPV 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE PKPV (PV PPV)
    (COND ((NULL PV) (REVERSIP PPV))
          (T (PKPV (CDR PV) (CONS (CONS (CAAR PV) (PKP (CDAR PV))) PPV))))) 
(DE T_DIFFERENCE (U V) (T_PLUS U (T_MINUS V))) 
(PUT 'T_DIFFERENCE 'NUMBER-OF-ARGS 2) 
(PUT 'T_DIFFERENCE 'DEFINED-ON-LINE '363) 
(PUT 'T_DIFFERENCE 'DEFINED-IN-FILE 'ATENSOR/TENSOR.RED) 
(PUT 'T_DIFFERENCE 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(PUTC 'T_DIFFERENCE 'INLINE '(LAMBDA (U V) (T_PLUS U (T_MINUS V)))) 
(DE T_ZEROP (U) (NULL (CDR U))) 
(PUT 'T_ZEROP 'NUMBER-OF-ARGS 1) 
(PUT 'T_ZEROP 'DEFINED-ON-LINE '366) 
(PUT 'T_ZEROP 'DEFINED-IN-FILE 'ATENSOR/TENSOR.RED) 
(PUT 'T_ZEROP 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(PUTC 'T_ZEROP 'INLINE '(LAMBDA (U) (NULL (CDR U)))) 
(DE T_ONEP (U) (EQUAL (CDR U) 1)) 
(PUT 'T_ONEP 'NUMBER-OF-ARGS 1) 
(PUT 'T_ONEP 'DEFINED-ON-LINE '368) 
(PUT 'T_ONEP 'DEFINED-IN-FILE 'ATENSOR/TENSOR.RED) 
(PUT 'T_ONEP 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(PUTC 'T_ONEP 'INLINE '(LAMBDA (U) (EQUAL (CDR U) 1))) 
(PUT 'T_PREP 'NUMBER-OF-ARGS 1) 
(PUT 'T_PREP 'DEFINED-ON-LINE '370) 
(PUT 'T_PREP 'DEFINED-IN-FILE 'ATENSOR/TENSOR.RED) 
(PUT 'T_PREP 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE T_PREP (U)
    ((LAMBDA (X)
       (COND
        ((NOT (EQUAL (CDDR (CAADR U)) 1))
         (CONS 'QUOTIENT (CONS X (LIST (CDDR (CAADR U))))))
        (T X)))
     (T_PREP1 (CDR U) NIL))) 
(PUT 'T_PREP1 'NUMBER-OF-ARGS 2) 
(PUT 'T_PREP1 'DEFINED-ON-LINE '375) 
(PUT 'T_PREP1 'DEFINED-IN-FILE 'ATENSOR/TENSOR.RED) 
(PUT 'T_PREP1 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE T_PREP1 (U V)
    (COND
     ((NULL U)
      (COND ((NULL V) NIL) ((CDR V) (CONS 'PLUS (REVERSIP V))) (T (CAR V))))
     (T (T_PREP1 (CDR U) (CONS (TH2PE (CAAR U) (CDAR U)) V))))) 
(DE T_PRI (U) (T_PRI1 U NIL)) 
(PUT 'T_PRI 'NUMBER-OF-ARGS 1) 
(PUT 'T_PRI 'DEFINED-ON-LINE '384) 
(PUT 'T_PRI 'DEFINED-IN-FILE 'ATENSOR/TENSOR.RED) 
(PUT 'T_PRI 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(PUTC 'T_PRI 'INLINE '(LAMBDA (U) (T_PRI1 U NIL))) 
(DE T_INTEQUIV (U) (ATOM (CDR U))) 
(PUT 'T_INTEQUIV 'NUMBER-OF-ARGS 1) 
(PUT 'T_INTEQUIV 'DEFINED-ON-LINE '386) 
(PUT 'T_INTEQUIV 'DEFINED-IN-FILE 'ATENSOR/TENSOR.RED) 
(PUT 'T_INTEQUIV 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(PUTC 'T_INTEQUIV 'INLINE '(LAMBDA (U) (ATOM (CDR U)))) 
(DE I2TENSOR (N) (CONS '|:TENSOR| N)) 
(PUT 'I2TENSOR 'NUMBER-OF-ARGS 1) 
(PUT 'I2TENSOR 'DEFINED-ON-LINE '389) 
(PUT 'I2TENSOR 'DEFINED-IN-FILE 'ATENSOR/TENSOR.RED) 
(PUT 'I2TENSOR 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(PUTC 'I2TENSOR 'INLINE '(LAMBDA (N) (CONS '|:TENSOR| N))) 
(PUT 'T_EXPT 'NUMBER-OF-ARGS 2) 
(PUT 'T_EXPT 'DEFINED-ON-LINE '392) 
(PUT 'T_EXPT 'DEFINED-IN-FILE 'ATENSOR/TENSOR.RED) 
(PUT 'T_EXPT 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE T_EXPT (U N)
    (COND ((EQUAL N 1) U) ((ATOM (CDR U)) (EXPT (CDR U) N))
          (T (REDERR (LIST 'T_EXPT "*** Can't powered tensor"))))) 
(PUT 'T_QUOTIENT 'NUMBER-OF-ARGS 2) 
(PUT 'T_QUOTIENT 'DEFINED-ON-LINE '397) 
(PUT 'T_QUOTIENT 'DEFINED-IN-FILE 'ATENSOR/TENSOR.RED) 
(PUT 'T_QUOTIENT 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE T_QUOTIENT (U C)
    (COND ((AND (ATOM (CDR C)) (EQUAL (CDR C) 1)) U)
          (T (REDERR (LIST 'T_QUOTIENT "*** Tensor can't be divided by: " C))))) 
(PUT 'T_DIVIDE 'NUMBER-OF-ARGS 2) 
(PUT 'T_DIVIDE 'DEFINED-ON-LINE '401) 
(PUT 'T_DIVIDE 'DEFINED-IN-FILE 'ATENSOR/TENSOR.RED) 
(PUT 'T_DIVIDE 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE T_DIVIDE (U V)
    (REDERR (LIST 'T_DIVIDE "*** Can't divide tensor by tensor"))) 
(PUT 'T_GCD 'NUMBER-OF-ARGS 2) 
(PUT 'T_GCD 'DEFINED-ON-LINE '404) 
(PUT 'T_GCD 'DEFINED-IN-FILE 'ATENSOR/TENSOR.RED) 
(PUT 'T_GCD 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE T_GCD (U V)
    (COND ((ATOM (CDR V)) 1)
          (T (REDERR (LIST 'T_GCD "*** Can't find gcd of two tensors"))))) 
(INITDMODE 'TENSOR) 
(ENDMODULE) 