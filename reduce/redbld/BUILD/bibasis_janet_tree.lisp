(cl:declaim (cl:optimize cl:debug cl:safety))
(cl:declaim (sb-ext:muffle-conditions sb-ext:compiler-note cl:style-warning))
(MODULE (LIST 'BIBASIS_JANET_TREE)) 
(DE CREATEJANETTREENODE (DEGREE TRIPLE NEXTDEGREE NEXTVARIABLE)
    (CONS (CONS DEGREE TRIPLE) (CONS NEXTDEGREE NEXTVARIABLE))) 
(PUT 'CREATEJANETTREENODE 'NUMBER-OF-ARGS 4) 
(PUT 'CREATEJANETTREENODE 'DEFINED-ON-LINE '49) 
(PUT 'CREATEJANETTREENODE 'DEFINED-IN-FILE 'BIBASIS/BIBASIS_JANET_TREE.RED) 
(PUT 'CREATEJANETTREENODE 'PROCEDURE_TYPE
     '(ARROW (TIMES GENERAL GENERAL GENERAL GENERAL) GENERAL)) 
(PUTC 'CREATEJANETTREENODE 'INLINE
      '(LAMBDA (DEGREE TRIPLE NEXTDEGREE NEXTVARIABLE)
         (CONS (CONS DEGREE TRIPLE) (CONS NEXTDEGREE NEXTVARIABLE)))) 
(PUT 'JANETTREENODEGETNEXTVARIABLE 'NUMBER-OF-ARGS 1) 
(PUTC 'JANETTREENODEGETNEXTVARIABLE 'INLINE '(LAMBDA (U) (CDDR U))) 
(DE JANETTREENODEGETNEXTVARIABLE (U) (CDDR U)) 
(PUT 'JANETTREENODEGETNEXTVARIABLE 'SETQFN '(LAMBDA (U V) (SETCDR (CDR U) V))) 
(PUT 'SET_JANETTREENODEGETNEXTVARIABLE 'NUMBER-OF-ARGS 2) 
(PUTC 'SET_JANETTREENODEGETNEXTVARIABLE 'INLINE
      '(LAMBDA (U V) (SETCDR (CDR U) V))) 
(DE SET_JANETTREENODEGETNEXTVARIABLE (U V) (SETCDR (CDR U) V)) 
(PUT 'JANETTREENODEGETNEXTDEGREE 'NUMBER-OF-ARGS 1) 
(PUTC 'JANETTREENODEGETNEXTDEGREE 'INLINE '(LAMBDA (U) (CADR U))) 
(DE JANETTREENODEGETNEXTDEGREE (U) (CADR U)) 
(PUT 'JANETTREENODEGETNEXTDEGREE 'SETQFN '(LAMBDA (U V) (SETCAR (CDR U) V))) 
(PUT 'SET_JANETTREENODEGETNEXTDEGREE 'NUMBER-OF-ARGS 2) 
(PUTC 'SET_JANETTREENODEGETNEXTDEGREE 'INLINE
      '(LAMBDA (U V) (SETCAR (CDR U) V))) 
(DE SET_JANETTREENODEGETNEXTDEGREE (U V) (SETCAR (CDR U) V)) 
(PUT 'JANETTREENODEGETTRIPLE 'NUMBER-OF-ARGS 1) 
(PUTC 'JANETTREENODEGETTRIPLE 'INLINE '(LAMBDA (U) (CDAR U))) 
(DE JANETTREENODEGETTRIPLE (U) (CDAR U)) 
(PUT 'JANETTREENODEGETTRIPLE 'SETQFN '(LAMBDA (U V) (SETCDR (CAR U) V))) 
(PUT 'SET_JANETTREENODEGETTRIPLE 'NUMBER-OF-ARGS 2) 
(PUTC 'SET_JANETTREENODEGETTRIPLE 'INLINE '(LAMBDA (U V) (SETCDR (CAR U) V))) 
(DE SET_JANETTREENODEGETTRIPLE (U V) (SETCDR (CAR U) V)) 
(PUT 'JANETTREENODEGETDEGREE 'NUMBER-OF-ARGS 1) 
(PUTC 'JANETTREENODEGETDEGREE 'INLINE '(LAMBDA (U) (CAAR U))) 
(DE JANETTREENODEGETDEGREE (U) (CAAR U)) 
(PUT 'JANETTREENODEGETDEGREE 'SETQFN '(LAMBDA (U V) (SETCAR (CAR U) V))) 
(PUT 'SET_JANETTREENODEGETDEGREE 'NUMBER-OF-ARGS 2) 
(PUTC 'SET_JANETTREENODEGETDEGREE 'INLINE '(LAMBDA (U V) (SETCAR (CAR U) V))) 
(DE SET_JANETTREENODEGETDEGREE (U V) (SETCAR (CAR U) V)) 
NIL 
(DE JANETTREERESET NIL (SETQ FLUIDBIBASISJANETTREEROOTNODE NIL)) 
(PUT 'JANETTREERESET 'NUMBER-OF-ARGS 0) 
(PUT 'JANETTREERESET 'DEFINED-ON-LINE '55) 
(PUT 'JANETTREERESET 'DEFINED-IN-FILE 'BIBASIS/BIBASIS_JANET_TREE.RED) 
(PUT 'JANETTREERESET 'PROCEDURE_TYPE '(ARROW UNIT GENERAL)) 
(PUTC 'JANETTREERESET 'INLINE
      '(LAMBDA () (SETQ FLUIDBIBASISJANETTREEROOTNODE NIL))) 
(PUT 'JANETTREENODEBUILD 'NUMBER-OF-ARGS 3) 
(PUT 'JANETTREENODEBUILD 'DEFINED-ON-LINE '58) 
(PUT 'JANETTREENODEBUILD 'DEFINED-IN-FILE 'BIBASIS/BIBASIS_JANET_TREE.RED) 
(PUT 'JANETTREENODEBUILD 'PROCEDURE_TYPE
     '(ARROW (TIMES GENERAL GENERAL GENERAL) GENERAL)) 
(DE JANETTREENODEBUILD (DEGREE VARIABLE TRIPLE)
    (PROG (TMPNODE1 TMPNODE2 MONOM)
      (SETQ MONOM (CAR (GETV TRIPLE 1)))
      (SETQ TMPNODE1
              (CONS (CONS (MONOMGETVARIABLEDEGREE MONOM VARIABLE) NIL)
                    (CONS NIL NIL)))
      (SETQ TMPNODE2 TMPNODE1)
      (PROG ()
       WHILELABEL
        (COND
         ((NOT (IGREATERP DEGREE (MONOMGETVARIABLEDEGREE MONOM VARIABLE)))
          (RETURN NIL)))
        (PROGN
         (SETQ DEGREE
                 (IDIFFERENCE DEGREE (MONOMGETVARIABLEDEGREE MONOM VARIABLE)))
         (SETQ VARIABLE (IADD1 VARIABLE))
         (SETCDR (CDR TMPNODE2)
                 (CONS (CONS (MONOMGETVARIABLEDEGREE MONOM VARIABLE) NIL)
                       (CONS NIL NIL)))
         (SETQ TMPNODE2 (CDDR TMPNODE2))
         NIL)
        (GO WHILELABEL))
      (SETCDR (CAR TMPNODE2) TRIPLE)
      (RETURN TMPNODE1))) 
(PUT 'JANETTREENODEPRINT 'NUMBER-OF-ARGS 1) 
(PUT 'JANETTREENODEPRINT 'DEFINED-ON-LINE '76) 
(PUT 'JANETTREENODEPRINT 'DEFINED-IN-FILE 'BIBASIS/BIBASIS_JANET_TREE.RED) 
(PUT 'JANETTREENODEPRINT 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE JANETTREENODEPRINT (NODE)
    (PROG ()
      (COND
       ((NULL NODE) (PROGN (PRIN2 "((nil . nil) . (nil . nil))") (TERPRI) NIL))
       (T
        (PROGN
         (PRIN2 "((")
         (PRIN2 (CAAR NODE))
         (PRIN2 ") . (")
         (PRIN2 (COND ((CDAR NODE) (CAR (GETV (CDAR NODE) 1))) (T "nil")))
         (PRIN2 ")) . ((")
         (COND ((CADR NODE) (JANETTREENODEPRINT (CADR NODE)))
               (T (PRIN2 "nil")))
         (PRIN2 ") . (")
         (COND ((CDDR NODE) (JANETTREENODEPRINT (CDDR NODE)))
               (T (PRIN2 "nil")))
         (PRIN2 "))")
         NIL))))) 
(DE JANETTREEPRINT NIL (JANETTREENODEPRINT FLUIDBIBASISJANETTREEROOTNODE)) 
(PUT 'JANETTREEPRINT 'NUMBER-OF-ARGS 0) 
(PUT 'JANETTREEPRINT 'DEFINED-ON-LINE '96) 
(PUT 'JANETTREEPRINT 'DEFINED-IN-FILE 'BIBASIS/BIBASIS_JANET_TREE.RED) 
(PUT 'JANETTREEPRINT 'PROCEDURE_TYPE '(ARROW UNIT GENERAL)) 
(PUTC 'JANETTREEPRINT 'INLINE
      '(LAMBDA () (JANETTREENODEPRINT FLUIDBIBASISJANETTREEROOTNODE))) 
(PUT 'JANETTREEINSERT 'NUMBER-OF-ARGS 1) 
(PUT 'JANETTREEINSERT 'DEFINED-ON-LINE '99) 
(PUT 'JANETTREEINSERT 'DEFINED-IN-FILE 'BIBASIS/BIBASIS_JANET_TREE.RED) 
(PUT 'JANETTREEINSERT 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE JANETTREEINSERT (TRIPLE)
    (PROG (VARIABLE DEGREE NODEITERATOR TMPNODE MONOM)
      (SETQ VARIABLE 0)
      (SETQ DEGREE 0)
      (SETQ MONOM (CAR (GETV TRIPLE 1)))
      (SETQ DEGREE (GETV MONOM 0))
      (SETQ VARIABLE 1)
      (COND
       ((NULL FLUIDBIBASISJANETTREEROOTNODE)
        (PROGN
         (SETQ FLUIDBIBASISJANETTREEROOTNODE
                 (JANETTREENODEBUILD DEGREE VARIABLE TRIPLE))
         NIL))
       (T
        (PROGN
         (SETQ NODEITERATOR FLUIDBIBASISJANETTREEROOTNODE)
         (PROG ()
          WHILELABEL
           (COND ((NOT (GREATERP DEGREE 0)) (RETURN NIL)))
           (PROGN
            (PROG ()
             WHILELABEL
              (COND
               ((NOT
                 (AND NODEITERATOR
                      (LESSP (CAAR NODEITERATOR)
                             (MONOMGETVARIABLEDEGREE MONOM VARIABLE))
                      (CADR NODEITERATOR)))
                (RETURN NIL)))
              (PROGN (SETQ NODEITERATOR (CADR NODEITERATOR)) NIL)
              (GO WHILELABEL))
            (COND
             ((AND NODEITERATOR
                   (GREATERP (CAAR NODEITERATOR)
                             (MONOMGETVARIABLEDEGREE MONOM VARIABLE)))
              (PROGN
               (SETQ TMPNODE (JANETTREENODEBUILD DEGREE VARIABLE TRIPLE))
               (SETQ DEGREE 0)
               (SETCAR (CDR NODEITERATOR)
                       (CONS (CONS (CAAR NODEITERATOR) (CDAR NODEITERATOR))
                             (CONS (CADR NODEITERATOR) (CDDR NODEITERATOR))))
               (SETCDR (CDR NODEITERATOR) (CDDR TMPNODE))
               (SETCAR (CAR NODEITERATOR) (CAAR TMPNODE))
               (SETCDR (CAR NODEITERATOR) (CDAR TMPNODE))
               NIL))
             ((AND NODEITERATOR
                   (EQUAL (CAAR NODEITERATOR)
                          (MONOMGETVARIABLEDEGREE MONOM VARIABLE))
                   (CDDR NODEITERATOR))
              (PROGN
               (SETQ DEGREE
                       (DIFFERENCE DEGREE
                                   (MONOMGETVARIABLEDEGREE MONOM VARIABLE)))
               (SETQ VARIABLE (PLUS VARIABLE 1))
               (SETQ NODEITERATOR (CDDR NODEITERATOR))
               NIL))
             ((NOT (NULL NODEITERATOR))
              (PROGN
               (SETCAR (CDR NODEITERATOR)
                       (JANETTREENODEBUILD DEGREE VARIABLE TRIPLE))
               (SETQ DEGREE 0)
               NIL)))
            NIL)
           (GO WHILELABEL))
         NIL))))) 
(PUT 'JANETTREEFIND 'NUMBER-OF-ARGS 1) 
(PUT 'JANETTREEFIND 'DEFINED-ON-LINE '153) 
(PUT 'JANETTREEFIND 'DEFINED-IN-FILE 'BIBASIS/BIBASIS_JANET_TREE.RED) 
(PUT 'JANETTREEFIND 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE JANETTREEFIND (MONOM)
    (COND ((NULL FLUIDBIBASISJANETTREEROOTNODE) NIL)
          (T
           (PROG (RESULT NODEITERATOR DEGREE VARIABLE)
             (SETQ DEGREE 0)
             (SETQ VARIABLE 0)
             (SETQ NODEITERATOR FLUIDBIBASISJANETTREEROOTNODE)
             (SETQ DEGREE (GETV MONOM 0))
             (SETQ VARIABLE 1)
             (PROG ()
              WHILELABEL
               (COND ((NOT (IGREATERP DEGREE 0)) (RETURN NIL)))
               (PROGN
                (PROG ()
                 WHILELABEL
                  (COND
                   ((NOT
                     (AND
                      (LESSP (CAAR NODEITERATOR)
                             (MONOMGETVARIABLEDEGREE MONOM VARIABLE))
                      (CADR NODEITERATOR)))
                    (RETURN NIL)))
                  (PROGN (SETQ NODEITERATOR (CADR NODEITERATOR)) NIL)
                  (GO WHILELABEL))
                (COND
                 ((NEQ (CAAR NODEITERATOR)
                       (MONOMGETVARIABLEDEGREE MONOM VARIABLE))
                  (PROGN (SETQ DEGREE 0) NIL))
                 ((CDDR NODEITERATOR)
                  (PROGN
                   (SETQ DEGREE
                           (IDIFFERENCE DEGREE
                                        (MONOMGETVARIABLEDEGREE MONOM
                                         VARIABLE)))
                   (SETQ VARIABLE (IADD1 VARIABLE))
                   (SETQ NODEITERATOR (CDDR NODEITERATOR))
                   NIL))
                 (T
                  (PROGN
                   (SETQ DEGREE 0)
                   (SETQ RESULT (CDAR NODEITERATOR))
                   NIL)))
                NIL)
               (GO WHILELABEL))
             (RETURN RESULT))))) 
(PUT 'JANETTREEDELETE 'NUMBER-OF-ARGS 1) 
(PUT 'JANETTREEDELETE 'DEFINED-ON-LINE '188) 
(PUT 'JANETTREEDELETE 'DEFINED-IN-FILE 'BIBASIS/BIBASIS_JANET_TREE.RED) 
(PUT 'JANETTREEDELETE 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE JANETTREEDELETE (MONOM)
    (COND
     ((NOT (NULL FLUIDBIBASISJANETTREEROOTNODE))
      (PROG (NODEITERATOR NODEITERATORPARENT LASTBIFURCATION
             LASTBIFURCATIONPARENT BREAK VARDIRECTION VARIABLE DEGREE)
        (SETQ VARIABLE 0)
        (SETQ DEGREE 0)
        (SETQ NODEITERATOR FLUIDBIBASISJANETTREEROOTNODE)
        (SETQ NODEITERATORPARENT NIL)
        (SETQ LASTBIFURCATION FLUIDBIBASISJANETTREEROOTNODE)
        (SETQ LASTBIFURCATIONPARENT NIL)
        (SETQ VARIABLE 1)
        (PROG ()
         WHILELABEL
          (COND ((NOT (NOT BREAK)) (RETURN NIL)))
          (PROGN
           (SETQ DEGREE (MONOMGETVARIABLEDEGREE MONOM VARIABLE))
           (PROG ()
            WHILELABEL
             (COND
              ((NOT (AND NODEITERATOR (ILESSP (CAAR NODEITERATOR) DEGREE)))
               (RETURN NIL)))
             (PROGN
              (COND
               ((EQ LASTBIFURCATION NODEITERATOR)
                (PROGN (SETQ VARDIRECTION NIL) NIL)))
              (SETQ NODEITERATORPARENT NODEITERATOR)
              (SETQ NODEITERATOR (CADR NODEITERATOR))
              (COND
               ((AND NODEITERATOR (CADR NODEITERATOR) (CDDR NODEITERATOR))
                (PROGN
                 (SETQ LASTBIFURCATION NODEITERATOR)
                 (SETQ LASTBIFURCATIONPARENT NODEITERATORPARENT)
                 NIL)))
              NIL)
             (GO WHILELABEL))
           (COND
            ((AND NODEITERATOR (CDDR NODEITERATOR))
             (PROGN
              (SETQ VARIABLE (IADD1 VARIABLE))
              (COND
               ((EQ LASTBIFURCATION NODEITERATOR)
                (PROGN (SETQ VARDIRECTION T) NIL)))
              (SETQ NODEITERATORPARENT NODEITERATOR)
              (SETQ NODEITERATOR (CDDR NODEITERATOR))
              (COND
               ((AND NODEITERATOR (CADR NODEITERATOR) (CDDR NODEITERATOR))
                (PROGN
                 (SETQ LASTBIFURCATION NODEITERATOR)
                 (SETQ LASTBIFURCATIONPARENT NODEITERATORPARENT)
                 NIL)))
              NIL))
            (T (PROGN (SETQ BREAK T) NIL)))
           NIL)
          (GO WHILELABEL))
        (COND
         (VARDIRECTION
          (PROGN
           (COND
            ((EQ LASTBIFURCATION FLUIDBIBASISJANETTREEROOTNODE)
             (PROGN
              (SETQ FLUIDBIBASISJANETTREEROOTNODE
                      (CADR FLUIDBIBASISJANETTREEROOTNODE))
              NIL))
            (T
             (PROGN
              (SETCDR (CDR LASTBIFURCATIONPARENT) (CADR LASTBIFURCATION))
              NIL)))
           NIL))
         (T (PROGN (SETCAR (CDR LASTBIFURCATION) NIL) NIL)))
        (COND
         ((NOT (OR (CADR LASTBIFURCATION) (CDDR LASTBIFURCATION)))
          (PROGN (SETQ FLUIDBIBASISJANETTREEROOTNODE NIL) NIL))))))) 
(ENDMODULE) 