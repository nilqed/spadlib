(cl:declaim (cl:optimize cl:debug cl:safety))
(cl:declaim (sb-ext:muffle-conditions sb-ext:compiler-note cl:style-warning))
(MODULE (LIST 'MPRINT)) 
(FLUID
 '(*FORT *LIST *NAT *EXPT_CARET *NOSPLIT *RATPRI *REVPRI BOOL-FUNCTIONS* OBRKP*
   OVERFLOWED* ORIG* OUTPUTHANDLER* PLINE* POSN* P** TESTING-WIDTH* YCOORD*
   YMAX* YMIN* RPRIFN* RTERFN* *UTF8 *UTF82D *UNICODE_IN_OFF_NAT)) 
(SWITCH (LIST 'EXPT_CARET)) 
(FLUID '(*TEX)) 
(GLOBAL '(*ERAISE INITL* NAT** SPARE* *ASTERISK)) 
(SWITCH
 (LIST 'LIST (LIST 'EQUAL 'RATPRI 'ON) 'REVPRI (LIST 'EQUAL 'NOSPLIT 'ON)
       (LIST 'EQUAL 'ASTERISK 'ON) 'UNICODE_IN_OFF_NAT)) 
(SETQ *ASTERISK T) 
(SETQ *ERAISE T) 
(SETQ *NAT (SETQ NAT** T)) 
(SETQ *EXPT_CARET NIL) 
(SETQ *NOSPLIT T) 
(SETQ OBRKP* T) 
(SETQ ORIG* 0) 
(SETQ POSN* 0) 
(SETQ YCOORD* 0) 
(SETQ YMAX* 0) 
(SETQ YMIN* 0) 
(SETQ INITL* (APPEND '(ORIG* PLINE*) INITL*)) 
(PUT 'ORIG* 'INITL 0) 
(FLAG '(LINELENGTH) 'OPFN) 
(PUT 'MATHPRINT 'NUMBER-OF-ARGS 1) 
(PUT 'MATHPRINT 'DEFINED-ON-LINE '88) 
(PUT 'MATHPRINT 'DEFINED-IN-FILE 'MATHPR/MPRINT.RED) 
(PUT 'MATHPRINT 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE MATHPRINT (L) (PROGN (TERPRI* T) (MAPRIN L) (TERPRI* T))) 
(PUT 'MAPRIN 'NUMBER-OF-ARGS 1) 
(PUT 'MAPRIN 'DEFINED-ON-LINE '93) 
(PUT 'MAPRIN 'DEFINED-IN-FILE 'MATHPR/MPRINT.RED) 
(PUT 'MAPRIN 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE MAPRIN (U)
    (COND (OUTPUTHANDLER* (APPLY2 OUTPUTHANDLER* 'MAPRIN U))
          ((NOT OVERFLOWED*) (MAPRINT U 0)))) 
(PUT 'PRINT_INDEXED 'NUMBER-OF-ARGS 1) 
(PUT 'PRINT_INDEXED 'DEFINED-ON-LINE '97) 
(PUT 'PRINT_INDEXED 'DEFINED-IN-FILE 'MATHPR/MPRINT.RED) 
(PUT 'PRINT_INDEXED 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE PRINT_INDEXED (U) (FLAG U 'PRINT-INDEXED)) 
(PUT 'PRINT_NOINDEXED 'NUMBER-OF-ARGS 1) 
(PUT 'PRINT_NOINDEXED 'DEFINED-ON-LINE '101) 
(PUT 'PRINT_NOINDEXED 'DEFINED-IN-FILE 'MATHPR/MPRINT.RED) 
(PUT 'PRINT_NOINDEXED 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE PRINT_NOINDEXED (U) (REMFLAG U 'PRINT-INDEXED)) 
(RLISTAT '(PRINT_INDEXED PRINT_NOINDEXED)) 
(PUT 'MAPRINT 'NUMBER-OF-ARGS 2) 
(PUT 'MAPRINT 'DEFINED-ON-LINE '107) 
(PUT 'MAPRINT 'DEFINED-IN-FILE 'MATHPR/MPRINT.RED) 
(PUT 'MAPRINT 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE MAPRINT (L P**)
    (PROG (P X Y)
      (SETQ P P**)
      (COND ((NULL L) (RETURN NIL))
            ((ATOM L)
             (PROGN
              (COND ((VECTORP L) (VEC-MAPRIN L P**))
                    ((OR (NOT (NUMBERP L)) (NOT (LESSP L 0))
                         (LEQ P (GET 'MINUS 'INFIX)))
                     (PRIN2* L))
                    (T (PROGN (PRIN2* "(") (PRIN2* L) (PRIN2* ")"))))
              (RETURN L)))
            ((NOT (ATOM (CAR L))) (MAPRINT (CAR L) P))
            ((AND (EQUAL P** 0) (EQCAR L 'MINUS) (NUMBERP (CADR L)))
             (PROGN (PRIN2* (MINUS (CADR L))) (RETURN L)))
            ((AND (EQUAL P** 0) (EQCAR L 'MINUS) (EQCAR (CADR L) '|:RD:|))
             (PROGN (|RD:PRIN| (|RD:MINUS| (CADR L))) (RETURN L)))
            ((OR
              (AND (SETQ X (GET (CAR L) 'PPRIFN))
                   (NOT (EQ (APPLY2 X L P) 'FAILED)))
              (AND (SETQ X (GET (CAR L) 'PRIFN))
                   (NOT (EQ (APPLY1 X L) 'FAILED))))
             (RETURN L))
            ((AND (FLAGP (CAR L) 'PRINT-INDEXED)
                  (NOT (EQ (INDEXPRIN L) 'FAILED)))
             (RETURN L))
            ((SETQ X (GET (CAR L) 'INFIX))
             (PROGN
              (SETQ P (NOT (GREATERP X P)))
              (COND
               (P
                (PROGN
                 (SETQ Y ORIG*)
                 (PRIN2* "(")
                 (SETQ ORIG*
                         (COND ((LESSP POSN* 18) POSN*) (T (PLUS ORIG* 3)))))))
              (INPRINT (CAR L) X (CDR L))
              (COND (P (PROGN (PRIN2* ")") (SETQ ORIG* Y))))
              (RETURN L)))
            (T (PRIN2* (CAR L))))
      (PRIN2* "(")
      (SETQ OBRKP* NIL)
      (SETQ Y ORIG*)
      (SETQ ORIG* (COND ((LESSP POSN* 18) POSN*) (T (PLUS ORIG* 3))))
      (COND ((CDR L) (INPRINT '*COMMA* 0 (CDR L))))
      (SETQ OBRKP* T)
      (SETQ ORIG* Y)
      (PRIN2* ")")
      (RETURN L))) 
(PUT 'VEC-MAPRIN 'NUMBER-OF-ARGS 2) 
(PUT 'VEC-MAPRIN 'DEFINED-ON-LINE '162) 
(PUT 'VEC-MAPRIN 'DEFINED-IN-FILE 'MATHPR/MPRINT.RED) 
(PUT 'VEC-MAPRIN 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE VEC-MAPRIN (U P**)
    (PROGN
     (PRIN2* '[)
     (PROG (J)
       (SETQ J 0)
      LAB
       (COND ((MINUSP (DIFFERENCE (DIFFERENCE (UPBV U) 1) J)) (RETURN NIL)))
       (PROGN (MAPRINT (GETV U J) P**) (OPRIN '*COMMA*))
       (SETQ J (PLUS2 J 1))
       (GO LAB))
     (MAPRINT (GETV U (UPBV U)) P**)
     (PRIN2* ']))) 
(PUT 'EXPTPRI 'NUMBER-OF-ARGS 2) 
(PUT 'EXPTPRI 'DEFINED-ON-LINE '169) 
(PUT 'EXPTPRI 'DEFINED-IN-FILE 'MATHPR/MPRINT.RED) 
(PUT 'EXPTPRI 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE EXPTPRI (L P)
    (COND (*UTF8 (UTF8_EXPTPRI L P))
          (T
           (PROG (*LIST X PP Q W1 W2)
             (COND ((OR (NOT *NAT) *FORT) (RETURN 'FAILED)))
             (SETQ PP (NOT (GREATERP (SETQ Q (GET 'EXPT 'INFIX)) P)))
             (SETQ W1 (CADR L))
             (SETQ W2 (CADDR L))
             (COND
              ((AND *ERAISE (NOT (ATOM W1)) (SETQ X (GET (CAR W1) 'PRIFN))
                    (EQUAL (GET X 'EXPT) 'INBRACKETS))
               (SETQ W1 (LAYOUT-FORMULA W1 0 'INBRACKETS)))
              ((AND (EQUAL X 'INDEXPRIN)
                    (NOT (EQUAL (INDEXPOWER W1 W2) 'FAILED)))
               (RETURN NIL))
              (T (SETQ W1 (LAYOUT-FORMULA W1 Q NIL))))
             (COND ((NULL W1) (RETURN 'FAILED)))
             (PROG (*RATPRI)
               (COND
                ((AND (EQCAR W2 'QUOTIENT) (EQCAR (CADR W2) 'MINUS))
                 (SETQ W2
                         (LIST 'MINUS (LIST (CAR W2) (CADADR W2) (CADDR W2)))))
                (T (SETQ W2 (NEGNUMBERCHK W2))))
               (SETQ W2 (LAYOUT-FORMULA W2 (COND (*ERAISE 0) (T Q)) NIL)))
             (COND ((NULL W2) (RETURN 'FAILED)))
             (SETQ L (PLUS (CDAR W1) (CDAR W2)))
             (COND (PP (SETQ L (PLUS L 2))))
             (COND
              ((GREATERP L
                         (DIFFERENCE (DIFFERENCE (LINELENGTH NIL) SPARE*)
                                     ORIG*))
               (RETURN 'FAILED)))
             (COND
              ((GREATERP L
                         (DIFFERENCE (DIFFERENCE (LINELENGTH NIL) SPARE*)
                                     POSN*))
               (TERPRI* T)))
             (COND (PP (PRIN2* "(")))
             (PUTPLINE W1)
             (COND (*ERAISE (SETQ L (DIFFERENCE 1 (CADR W2))))
                   (T (PROGN (OPRIN 'EXPT) (SETQ L 0))))
             (PUTPLINE
              (CONS (CONS (UPDATE-PLINE 0 L (CAAR W2)) (CDAR W2))
                    (CONS (PLUS (CADR W2) L) (PLUS (CDDR W2) L))))
             (COND (PP (PRIN2* ")"))))))) 
(PUT 'EXPT 'PPRIFN 'EXPTPRI) 
(PUT 'INPRINT 'NUMBER-OF-ARGS 3) 
(PUT 'INPRINT 'DEFINED-ON-LINE '214) 
(PUT 'INPRINT 'DEFINED-IN-FILE 'MATHPR/MPRINT.RED) 
(PUT 'INPRINT 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL GENERAL) GENERAL)) 
(DE INPRINT (OP P L)
    (PROG (X Y)
      (COND
       ((AND (EQUAL OP 'TIMES) *NAT (NULL *ASTERISK))
        (PROGN
         (SETQ OP 'TIMES2)
         (PUT 'TIMES2 'INFIX (GET 'TIMES 'INFIX))
         (PUT 'TIMES2 'PRTCH " "))))
      (COND ((AND (EQ OP 'PLUS) *REVPRI) (SETQ L (REVERSE L))))
      (COND
       ((NOT (GET OP 'ALT))
        (PROGN
         (COND ((EQ OP 'NOT) (OPRIN OP))
               ((AND (EQ OP 'SETQ) (NOT (ATOM (SETQ X (CAR (REVERSE L)))))
                     (IDP (CAR X)) (SETQ Y (GETRTYPE X))
                     (SETQ Y (GET (GET Y 'TAG) 'SETPRIFN)))
                (RETURN (APPLY2 Y (CAR L) X))))
         (COND
          ((AND (NULL (ATOM (CAR L))) (IDP (CAAR L)) *NAT
                (OR (SETQ X (GET (CAAR L) 'PRIFN))
                    (SETQ X (GET (CAAR L) 'PPRIFN)))
                (EQ (GET X OP) 'INBRACKETS))
           (PROGN (PRIN2* "(") (MAPRINT (CAR L) P) (PRIN2* ")")))
          ((AND *NOSPLIT (NOT TESTING-WIDTH*)) (PRINFIT (CAR L) P NIL))
          (T (MAPRINT (CAR L) P)))
         (SETQ L (CDR L)))))
      (COND
       ((AND *NOSPLIT (NOT TESTING-WIDTH*))
        (PROG (V)
          (SETQ V L)
         LAB
          (COND ((NULL V) (RETURN NIL)))
          ((LAMBDA (V)
             (COND
              ((OR (ATOM V) (NOT (EQ OP (GET (CAR V) 'ALT))))
               (PROGN
                (COND
                 ((MEMQ OP '(SETQ *COMMA*))
                  (PROGN (OPRIN OP) (PRINFIT (NEGNUMBERCHK V) P NIL)))
                 (T (PRINFIT (NEGNUMBERCHK V) P OP)))))
              (T (PRINFIT V P NIL))))
           (CAR V))
          (SETQ V (CDR V))
          (GO LAB)))
       (T
        (PROG (V)
          (SETQ V L)
         LAB
          (COND ((NULL V) (RETURN NIL)))
          ((LAMBDA (V)
             (PROGN
              (COND
               ((OR (ATOM V) (NOT (EQ OP (GET (CAR V) 'ALT))))
                (PROGN (OPRIN OP) (MAPRINT (NEGNUMBERCHK V) P)))
               (T (MAPRINT V P)))))
           (CAR V))
          (SETQ V (CDR V))
          (GO LAB)))))) 
(PUT 'FLATSIZEC 'NUMBER-OF-ARGS 1) 
(PUT 'FLATSIZEC 'DEFINED-ON-LINE '261) 
(PUT 'FLATSIZEC 'DEFINED-IN-FILE 'MATHPR/MPRINT.RED) 
(PUT 'FLATSIZEC 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE FLATSIZEC (U)
    (COND ((NULL U) 0) ((ATOM U) (WIDELENGTHC U))
          (T (PLUS (FLATSIZEC (CAR U)) (FLATSIZEC (CDR U)) 1)))) 
(PUT 'OPRIN 'NUMBER-OF-ARGS 1) 
(PUT 'OPRIN 'DEFINED-ON-LINE '266) 
(PUT 'OPRIN 'DEFINED-IN-FILE 'MATHPR/MPRINT.RED) 
(PUT 'OPRIN 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE OPRIN (OP)
    ((LAMBDA (X)
       (COND ((NULL X) (PROGN (PRIN2* " ") (PRIN2* OP) (PRIN2* " ")))
             (*FORT (PRIN2* X))
             ((AND *LIST OBRKP* (MEMQ OP '(PLUS MINUS)))
              (COND (TESTING-WIDTH* (SETQ OVERFLOWED* T))
                    (T (PROGN (TERPRI* T) (PRIN2* X)))))
             ((FLAGP OP 'SPACED) (PROGN (PRIN2* " ") (PRIN2* X) (PRIN2* " ")))
             (T (PRIN2* X))))
     (COND ((AND (EQUAL OP 'EXPT) *EXPT_CARET) '^) (T (GET OP 'PRTCH))))) 
(PUT 'PRIN2* 'NUMBER-OF-ARGS 1) 
(PUT 'PRIN2* 'DEFINED-ON-LINE '278) 
(PUT 'PRIN2* 'DEFINED-IN-FILE 'MATHPR/MPRINT.RED) 
(PUT 'PRIN2* 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE PRIN2* (U)
    (COND (*UTF8 (UTF8_PRIN2* U))
          (OUTPUTHANDLER* (APPLY2 OUTPUTHANDLER* 'PRIN2* U))
          (T
           (PROG (M N P X)
             (SETQ M 0)
             (SETQ N 0)
             (SETQ P 0)
             (COND ((SETQ X (GET U 'OLDNAM)) (SETQ U X)))
             (COND (OVERFLOWED* (RETURN 'OVERFLOWED))
                   (*FORT (RETURN (FPRIN2* U)))
                   (*NAT
                    (PROGN
                     (COND ((EQUAL U 'PI) (SETQ U (SYMBOL '.PI)))
                           ((EQUAL U 'INFINITY)
                            (SETQ U (SYMBOL 'INFINITY)))))))
             (SETQ N (WIDELENGTHC U))
             (COND
              ((AND (FIXP U) (GREATERP N 50) *ROUNDED)
               (RETURN (|RD:PRIN| (I2RD* U)))))
             (SETQ M (IPLUS2 POSN* N))
             (SETQ P (DIFFERENCE (LINELENGTH NIL) SPARE*))
             (RETURN
              (COND
               ((OR (LEQ M P)
                    (AND (NOT TESTING-WIDTH*)
                         (PROGN
                          (TERPRI* T)
                          (LEQ (SETQ M (IPLUS2 POSN* N)) P))))
                (ADD_PRIN_CHAR U M))
               (TESTING-WIDTH* (PROGN (SETQ OVERFLOWED* T) 'OVERFLOWED))
               (T (PRIN2LINT U (IPLUS2 POSN* 1) (IDIFFERENCE P 1))))))))) 
(PUT 'ADD_PRIN_CHAR 'NUMBER-OF-ARGS 2) 
(PUT 'ADD_PRIN_CHAR 'DEFINED-ON-LINE '309) 
(PUT 'ADD_PRIN_CHAR 'DEFINED-IN-FILE 'MATHPR/MPRINT.RED) 
(PUT 'ADD_PRIN_CHAR 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE ADD_PRIN_CHAR (U N)
    (COND
     ((NULL *NAT)
      (COND
       ((OR (STRINGP U) (GET U 'SWITCH*) (DIGIT U)
            (GET (CAR (EXPLODE2 U)) 'SWITCH*)
            (AND *UNICODE_IN_OFF_NAT (IDP U) (NOT (LITER U))))
        (PRIN2 U))
       (T (PRIN1 U))))
     (T
      (PROGN
       (SETQ PLINE* (CONS (CONS (CONS (CONS POSN* N) YCOORD*) U) PLINE*))
       (SETQ POSN* N))))) 
(PUT 'PRIN2LINT 'NUMBER-OF-ARGS 3) 
(PUT 'PRIN2LINT 'DEFINED-ON-LINE '318) 
(PUT 'PRIN2LINT 'DEFINED-IN-FILE 'MATHPR/MPRINT.RED) 
(PUT 'PRIN2LINT 'PROCEDURE_TYPE
     '(ARROW (TIMES GENERAL GENERAL GENERAL) GENERAL)) 
(DE PRIN2LINT (U M N)
    (PROG (V BOOL)
      (SETQ V (EXPLODE2 U))
      (COND ((NULL *NAT) (PROGN (TERPRI) (SETQ POSN* ORIG*))))
     A
      (COND ((NOT (AND (ILESSP M N) V)) (GO B))
            ((EQ (CAR V) $EOL$) (PROGN (SETQ V (CDR V)) (GO C))))
      (SETQ BOOL T)
      (ADD_PRIN_CHAR (CAR V) M)
      (SETQ V (CDR V))
      (SETQ M (IPLUS2 M 1))
      (GO A)
     B
      (COND ((NULL V) (RETURN (SETQ POSN* (IDIFFERENCE M 1))))
            (BOOL (ADD_PRIN_CHAR "\\" M)))
     C
      (COND (*NAT (TERPRI* NIL)) (T (PROGN (TERPRI) (SETQ POSN* ORIG*))))
      (SETQ M (IPLUS2 POSN* 1))
      (GO A))) 
(PUT 'TERPRI* 'NUMBER-OF-ARGS 1) 
(PUT 'TERPRI* 'DEFINED-ON-LINE '335) 
(PUT 'TERPRI* 'DEFINED-IN-FILE 'MATHPR/MPRINT.RED) 
(PUT 'TERPRI* 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE TERPRI* (U)
    (PROG (N)
      (SETQ N 0)
      (COND (OUTPUTHANDLER* (RETURN (APPLY2 OUTPUTHANDLER* 'TERPRI U)))
            (TESTING-WIDTH* (RETURN (SETQ OVERFLOWED* T)))
            (*FORT (RETURN (FTERPRI U)))
            ((AND *NAT PLINE*)
             (PROGN
              (SETQ PLINE* (REVERSE PLINE*))
              (PROG (N)
                (SETQ N YMAX*)
               LAB
                (COND
                 ((MINUSP (TIMES (MINUS 1) (DIFFERENCE YMIN* N)))
                  (RETURN NIL)))
                (PROGN (SCPRINT PLINE* N) (TERPRI))
                (SETQ N (PLUS2 N (MINUS 1)))
                (GO LAB))
              (SETQ PLINE* NIL))))
      (COND (U (TERPRI)))
      (SETQ POSN* ORIG*)
      (SETQ YCOORD* (SETQ YMAX* (SETQ YMIN* 0))))) 
(PUT 'SCPRINT 'NUMBER-OF-ARGS 2) 
(PUT 'SCPRINT 'DEFINED-ON-LINE '352) 
(PUT 'SCPRINT 'DEFINED-IN-FILE 'MATHPR/MPRINT.RED) 
(PUT 'SCPRINT 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE SCPRINT (U N)
    (PROG (M)
      (COND (*UTF8 (RETURN (UTF8_SCPRINT U N))))
      (SETQ POSN* 0)
      (PROG (V)
        (SETQ V U)
       LAB
        (COND ((NULL V) (RETURN NIL)))
        ((LAMBDA (V)
           (PROGN
            (COND
             ((EQUAL (CDAR V) N)
              (PROGN
               (COND
                ((NOT (LESSP (SETQ M (DIFFERENCE (CAAAR V) POSN*)) 0))
                 (SPACES M)))
               (PRIN2 (CDR V))
               (SETQ POSN* (CDAAR V)))))))
         (CAR V))
        (SETQ V (CDR V))
        (GO LAB)))) 
(PUT 'WRITEPRI 'NUMBER-OF-ARGS 2) 
(PUT 'WRITEPRI 'DEFINED-ON-LINE '368) 
(PUT 'WRITEPRI 'DEFINED-IN-FILE 'MATHPR/MPRINT.RED) 
(PUT 'WRITEPRI 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE WRITEPRI (U V) (ASSGNPRI (EVAL U) NIL V)) 
(PUT 'EXPPRI 'NUMBER-OF-ARGS 2) 
(PUT 'EXPPRI 'DEFINED-ON-LINE '370) 
(PUT 'EXPPRI 'DEFINED-IN-FILE 'MATHPR/MPRINT.RED) 
(PUT 'EXPPRI 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE EXPPRI (U V) (ASSGNPRI U NIL V)) 
(PUT 'WOULD-BE-HUGE 'NUMBER-OF-ARGS 1) 
(PUT 'WOULD-BE-HUGE 'DEFINED-ON-LINE '385) 
(PUT 'WOULD-BE-HUGE 'DEFINED-IN-FILE 'MATHPR/MPRINT.RED) 
(PUT 'WOULD-BE-HUGE 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE WOULD-BE-HUGE (U)
    (PROG (W N M)
      (COND
       ((EQCAR U 'MAT)
        (PROGN
         (SETQ N (SETQ M 1))
         (PROG (X)
           (SETQ X (CDR U))
          LAB
           (COND ((NULL X) (RETURN NIL)))
           ((LAMBDA (X)
              (PROGN
               (SETQ N (PLUS N 1))
               (SETQ W (LENGTH X))
               (COND ((GREATERP W M) (SETQ M W)))))
            (CAR X))
           (SETQ X (CDR X))
           (GO LAB))
         (COND
          ((OR (GREATERP N 20) (GREATERP M 20) (EQUAL (TIMES M N) 100))
           (RETURN T))
          (T (RETURN NIL))))))
      (RETURN NIL))) 
(PUT 'ASSGNPRI 'NUMBER-OF-ARGS 3) 
(PUT 'ASSGNPRI 'DEFINED-ON-LINE '399) 
(PUT 'ASSGNPRI 'DEFINED-IN-FILE 'MATHPR/MPRINT.RED) 
(PUT 'ASSGNPRI 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL GENERAL) GENERAL)) 
(DE ASSGNPRI (U V W)
    (PROG (X Y TM)
      (SETQ TESTING-WIDTH* (SETQ OVERFLOWED* NIL))
      (COND ((NULL U) (SETQ U 0)))
      (COND ((AND *NERO (EQUAL U 0)) (RETURN NIL)))
      (COND (*TEX (RETURN (TEXPRI U V W)))
            ((AND (GETD 'VECP) (VECP U)) (RETURN (VECPRI U 'MAT))))
      (COND
       ((AND (MEMQ 'CSL LISPSYSTEM*) (GETD 'MATH-DISPLAY) (MATH-DISPLAY 0)
             (EQUAL OUTPUTHANDLER* 'FANCY-OUTPUT) (WOULD-BE-HUGE U))
        (PROGN (FMP-SWITCH NIL) (SETQ TM T))))
      (COND
       ((AND (SETQ X (GETRTYPE U)) (FLAGP X 'SPRIFN))
        (PROGN
         (COND
          ((OR (NULL OUTPUTHANDLER*)
               (AND (NULL (EQ X 'MATRIX)) (EQ OUTPUTHANDLER* 'REDFRONT_OH)))
           (PROGN
            (COND
             ((SETQ Y (GET (GET X 'TAG) 'ASSGNPRI)) (APPLY1 Y (LIST U V W)))
             ((NULL V) (APPLY1 (GET (GET X 'TAG) 'PRIFN) U))
             (T (MAPRIN (CONS 'SETQ (ACONC V U)))))))
          (T (APPLY2 OUTPUTHANDLER* 'ASSGNPRI (LIST U V W))))))
       (T
        (PROGN
         (COND ((MEMQ W '(FIRST ONLY)) (TERPRI* T)))
         (SETQ V (EVALVARS V))
         (COND
          (*FORT
           (PROGN (FVARPRI U V W) (COND (TM (FMP-SWITCH T))) (RETURN NIL))))
         (MAPRIN (COND (V (CONS 'SETQ (ACONC V U))) (T U)))
         (COND
          ((OR (NULL W) (EQ W 'FIRST))
           (PROGN (COND (TM (FMP-SWITCH T))) (RETURN NIL)))
          ((NOT *NAT) (PRIN2* "$")))
         (TERPRI* (NOT *NAT)))))
      (COND (TM (FMP-SWITCH T)))
      (RETURN NIL))) 
(PUT 'EVALVARS 'NUMBER-OF-ARGS 1) 
(PUT 'EVALVARS 'DEFINED-ON-LINE '452) 
(PUT 'EVALVARS 'DEFINED-IN-FILE 'MATHPR/MPRINT.RED) 
(PUT 'EVALVARS 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE EVALVARS (U)
    (COND ((NULL U) NIL)
          ((OR (ATOM (CAR U)) (FLAGP (CAAR U) 'INTFN))
           (CONS (CAR U) (EVALVARS (CDR U))))
          ((GET (GET (CAAR U) 'RTYPE) 'SETELEMFN)
           (CONS (CONS (CAAR U) (REVLIS_WITHOUT_MODE (CDAR U)))
                 (EVALVARS (CDR U))))
          (T (CONS (CONS (CAAR U) (REVLIS (CDAR U))) (EVALVARS (CDR U)))))) 
(PUT 'REVLIS_WITHOUT_MODE 'NUMBER-OF-ARGS 1) 
(PUT 'REVLIS_WITHOUT_MODE 'DEFINED-ON-LINE '462) 
(PUT 'REVLIS_WITHOUT_MODE 'DEFINED-IN-FILE 'MATHPR/MPRINT.RED) 
(PUT 'REVLIS_WITHOUT_MODE 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE REVLIS_WITHOUT_MODE (U)
    (PROG (J FORALL-RESULT FORALL-ENDPTR)
      (SETQ J U)
      (COND ((NULL J) (RETURN NIL)))
      (SETQ FORALL-RESULT
              (SETQ FORALL-ENDPTR
                      (CONS
                       ((LAMBDA (J) ((LAMBDA (DMODE*) (REVAL1 J T)) NIL))
                        (CAR J))
                       NIL)))
     LOOPLABEL
      (SETQ J (CDR J))
      (COND ((NULL J) (RETURN FORALL-RESULT)))
      (RPLACD FORALL-ENDPTR
              (CONS ((LAMBDA (J) ((LAMBDA (DMODE*) (REVAL1 J T)) NIL)) (CAR J))
                    NIL))
      (SETQ FORALL-ENDPTR (CDR FORALL-ENDPTR))
      (GO LOOPLABEL))) 
(PUT 'SYMBOL 'NUMBER-OF-ARGS 1) 
(PUT 'SYMBOL 'DEFINED-ON-LINE '471) 
(PUT 'SYMBOL 'DEFINED-IN-FILE 'MATHPR/MPRINT.RED) 
(PUT 'SYMBOL 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE SYMBOL (S)
    (COND
     (*UTF8
      (PROGN
       (COND
        (*UTF82D
         (OR (GET S 'UTF8_2D-SYMBOL-CHARACTER) (GET S 'UTF8_SYMBOL-CHARACTER)
             (GET S 'SYMBOL-CHARACTER)))
        (T (OR (GET S 'UTF8_SYMBOL-CHARACTER) (GET S 'SYMBOL-CHARACTER))))))
     (T (GET S 'SYMBOL-CHARACTER)))) 
(PUT '.PI 'SYMBOL-CHARACTER 'PI) 
(PUT 'BAR 'SYMBOL-CHARACTER '-) 
(PUT 'INT-TOP 'SYMBOL-CHARACTER '/) 
(PUT 'INT-MID 'SYMBOL-CHARACTER '|\||) 
(PUT 'INT-LOW 'SYMBOL-CHARACTER '/) 
(PUT 'D 'SYMBOL-CHARACTER 'D) 
(PUT 'VBAR 'SYMBOL-CHARACTER '|\||) 
(PUT 'SUM-TOP 'SYMBOL-CHARACTER "---") 
(PUT 'SUM-MID 'SYMBOL-CHARACTER ">  ") 
(PUT 'SUM-LOW 'SYMBOL-CHARACTER "---") 
(PUT 'PROD-TOP 'SYMBOL-CHARACTER "---") 
(PUT 'PROD-MID 'SYMBOL-CHARACTER "| |") 
(PUT 'PROD-LOW 'SYMBOL-CHARACTER "| |") 
(PUT 'INFINITY 'SYMBOL-CHARACTER 'INFINITY) 
(PUT 'MAT-TOP-L 'SYMBOL-CHARACTER '[) 
(PUT 'MAT-TOP-R 'SYMBOL-CHARACTER ']) 
(PUT 'MAT-MID-L 'SYMBOL-CHARACTER '[) 
(PUT 'MAT-MID-R 'SYMBOL-CHARACTER ']) 
(PUT 'MAT-LOW-L 'SYMBOL-CHARACTER '[) 
(PUT 'MAT-LOW-R 'SYMBOL-CHARACTER ']) 
(SETQ BOOL-FUNCTIONS*
        (PROG (X FORALL-RESULT FORALL-ENDPTR)
          (SETQ X (LIST 'EQUAL 'GREATERP 'LESSP 'GEQ 'LEQ 'NEQ 'NUMBERP))
          (COND ((NULL X) (RETURN NIL)))
          (SETQ FORALL-RESULT
                  (SETQ FORALL-ENDPTR
                          (CONS ((LAMBDA (X) (CONS (GET X 'BOOLFN) X)) (CAR X))
                                NIL)))
         LOOPLABEL
          (SETQ X (CDR X))
          (COND ((NULL X) (RETURN FORALL-RESULT)))
          (RPLACD FORALL-ENDPTR
                  (CONS ((LAMBDA (X) (CONS (GET X 'BOOLFN) X)) (CAR X)) NIL))
          (SETQ FORALL-ENDPTR (CDR FORALL-ENDPTR))
          (GO LOOPLABEL))) 
(PUT 'CONDPRI 'NUMBER-OF-ARGS 2) 
(PUT 'CONDPRI 'DEFINED-ON-LINE '512) 
(PUT 'CONDPRI 'DEFINED-IN-FILE 'MATHPR/MPRINT.RED) 
(PUT 'CONDPRI 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE CONDPRI (U P)
    (PROGN
     (COND ((GREATERP P 0) (PRIN2* "(")))
     (PROG ()
      WHILELABEL
       (COND ((NOT (SETQ U (CDR U))) (RETURN NIL)))
       (PROGN
        (COND
         ((NOT (EQ (CAAR U) 'T))
          (PROGN
           (PRIN2* 'IF)
           (PRIN2* " ")
           (MAPRIN (SUBLIS BOOL-FUNCTIONS* (CAAR U)))
           (PRIN2* " ")
           (PRIN2* 'THEN)
           (PRIN2* " "))))
        (MAPRIN (CADAR U))
        (COND ((CDR U) (PROGN (PRIN2* " ") (PRIN2* 'ELSE) (PRIN2* " ")))))
       (GO WHILELABEL))
     (COND ((GREATERP P 0) (PRIN2* ")"))))) 
(PUT 'COND 'PPRIFN 'CONDPRI) 
(PUT 'REVALPRI 'NUMBER-OF-ARGS 1) 
(PUT 'REVALPRI 'DEFINED-ON-LINE '525) 
(PUT 'REVALPRI 'DEFINED-IN-FILE 'MATHPR/MPRINT.RED) 
(PUT 'REVALPRI 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE REVALPRI (U) (MAPRIN (EVAL (CADR U)))) 
(PUT 'AEVAL 'PRIFN 'REVALPRI) 
(PUT 'REVAL 'PRIFN 'REVALPRI) 
(PUT 'BOOLVALPRI 'NUMBER-OF-ARGS 1) 
(PUT 'BOOLVALPRI 'DEFINED-ON-LINE '532) 
(PUT 'BOOLVALPRI 'DEFINED-IN-FILE 'MATHPR/MPRINT.RED) 
(PUT 'BOOLVALPRI 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE BOOLVALPRI (U) (MAPRIN (CADR U))) 
(PUT 'BOOLVALUE* 'PRIFN 'BOOLVALPRI) 
(PUT 'BOOL-EVAL 'PRIFN 'BOOLVALPRI) 
(PUT 'PROG 'PRIFN 'PROGPRI) 
(PUT 'PROGN 'PRIFN 'PROGPRI) 
(PUT 'PROGPRI 'NUMBER-OF-ARGS 1) 
(PUT 'PROGPRI 'DEFINED-ON-LINE '543) 
(PUT 'PROGPRI 'DEFINED-IN-FILE 'MATHPR/MPRINT.RED) 
(PUT 'PROGPRI 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE PROGPRI (U)
    ((LAMBDA (RPRIFN* RTERFN*) (RPRINT U)) 'PRIN2*
     (FUNCTION (LAMBDA () (TERPRI* NIL))))) 
(PUT '*HOLD 'PRIFN 'HOLDPRI) 
(PUT 'HOLDPRI 'NUMBER-OF-ARGS 1) 
(PUT 'HOLDPRI 'DEFINED-ON-LINE '549) 
(PUT 'HOLDPRI 'DEFINED-IN-FILE 'MATHPR/MPRINT.RED) 
(PUT 'HOLDPRI 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE HOLDPRI (U)
    (PROGN
     (COND ((NOT (ATOM (CADR U))) (PRIN2* "(")))
     (MAPRIN (CADR U))
     (COND ((NOT (ATOM (CADR U))) (PRIN2* ")"))))) 
(PUT 'WHEREPRI 'NUMBER-OF-ARGS 1) 
(PUT 'WHEREPRI 'DEFINED-ON-LINE '554) 
(PUT 'WHEREPRI 'DEFINED-IN-FILE 'MATHPR/MPRINT.RED) 
(PUT 'WHEREPRI 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE WHEREPRI (U)
    (PROGN
     (PRIN2* "(")
     (PRIN2* "(")
     (MAPRIN (CADDR U))
     (PRIN2* ")")
     (PRIN2* " where ")
     (COND
      ((AND (EQCAR (CADR U) 'LIST) (NULL (CDDR (CADR U))))
       (MAPRIN (CADR (CADR U))))
      (T (MAPRIN (CADR U))))
     (PRIN2* ")"))) 
(PUT 'WHEREEXP 'PRIFN 'WHEREPRI) 
(PUT 'REVALXPRI 'NUMBER-OF-ARGS 1) 
(PUT 'REVALXPRI 'DEFINED-ON-LINE '565) 
(PUT 'REVALXPRI 'DEFINED-IN-FILE 'MATHPR/MPRINT.RED) 
(PUT 'REVALXPRI 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE REVALXPRI (U)
    (PROGN
     (SETQ U (LISPEVAL (CADR U)))
     (COND ((AND (NOT (ATOM U)) (NOT (ATOM (CAR U)))) (SETQ U (PREPF U))))
     (MAPRIN U)
     NIL)) 
(PUT 'REVALX 'PRIFN 'REVALXPRI) 
(PUT 'PLAIN-SYMBOL 'NUMBER-OF-ARGS 1) 
(PUT 'PLAIN-SYMBOL 'DEFINED-ON-LINE '573) 
(PUT 'PLAIN-SYMBOL 'DEFINED-IN-FILE 'MATHPR/MPRINT.RED) 
(PUT 'PLAIN-SYMBOL 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE PLAIN-SYMBOL (U)
    (MAPRIN (CONS (GET (CAR U) 'PLAIN-FUNCTIONSYMBOL) (CDR U)))) 
(ENDMODULE) 