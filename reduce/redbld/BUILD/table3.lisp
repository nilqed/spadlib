(cl:declaim (cl:optimize cl:debug cl:safety))
(cl:declaim (sb-ext:muffle-conditions sb-ext:compiler-note cl:style-warning))
(ADDRANK0 'GETD '(VARIABLE) '((X1) (T '(GETD_VARIABLE GENERIC)))) 
(DE GETD_VARIABLE (VARIABLE1) (MKOBJECT (GETD1 (VALUE VARIABLE1)) 'GENERIC)) 
'(NOVAL NIL) 
(ADDRANK0 'GET '(VARIABLE VARIABLE)
          '((X1 X2) (T '(GET_VARIABLE_VARIABLE GENERIC)))) 
(DE GET_VARIABLE_VARIABLE (VARIABLE1 VARIABLE2)
    (MKOBJECT (GET (VALUE VARIABLE1) (VALUE VARIABLE2)) 'GENERIC)) 
'(NOVAL NIL) 
(ADDRANK0 'PROP '(VARIABLE) '((X1) (T '(PROP_VARIABLE LIST)))) 
(DE PROP_VARIABLE (VARIABLE1) (MKOBJECT (PROP1 (VALUE VARIABLE1)) 'LIST)) 
'(NOVAL NIL) 
(ADDRANK0 'PUT '(VARIABLE VARIABLE GENERIC)
          '((X1 X2 X3) (T '(PUT_VARIABLE_VARIABLE_GENERIC GENERIC)))) 
(DE PUT_VARIABLE_VARIABLE_GENERIC (VARIABLE1 VARIABLE2 GENERIC3)
    (MKOBJECT (PUT (VALUE VARIABLE1) (VALUE VARIABLE2) (VALUE GENERIC3))
              'GENERIC)) 
'(NOVAL NIL) 
(ADDRANK0 'LTERM '(POLY KERNEL) '((X1 X2) (T '(LTERM_POLY_KERNEL POLY)))) 
(DE LTERM_POLY_KERNEL (POLY1 KERNEL2)
    (MKOBJECT (*LTERM (VALUE POLY1) (VALUE KERNEL2)) 'POLY)) 
'(NOVAL NIL) 
(ADDRANK0 'SUB '(LIST GENERIC) '((X1 X2) (T '(SUB_LIST_GENERIC GENERIC)))) 
(DE SUB_LIST_GENERIC (LIST1 GENERIC2)
    (MKOBJECT (SUB* (VALUE LIST1) (VALUE GENERIC2)) 'GENERIC)) 
'(NOVAL NIL) 
(ADDRANK0 'OPERATOR '(LIST) '((X1) (T '(OPERATOR_LIST NOVAL)))) 
(DE OPERATOR_LIST (LIST1) (MKOBJECT (OPERATOR1 (VALUE LIST1)) 'NOVAL)) 
'(NOVAL NIL) 
(PUT 'LTERM1 'DEFINED-ON-LINE '43) 
(PUT 'LTERM1 'DEFINED-IN-FILE 'REDUCE4/TABLE3.RED) 
(PUT 'LTERM1 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE LTERM1 (U V) (*Q2F (SIMP (LTERM (PREPF U) V)))) 
(PUT 'PROP1 'DEFINED-ON-LINE '45) 
(PUT 'PROP1 'DEFINED-IN-FILE 'REDUCE4/TABLE3.RED) 
(PUT 'PROP1 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE PROP1 (U)
    (PROG (J FORALL-RESULT FORALL-ENDPTR)
      (SETQ J (PROP U))
      (COND ((NULL J) (RETURN NIL)))
      (SETQ FORALL-RESULT
              (SETQ FORALL-ENDPTR
                      (CONS
                       ((LAMBDA (J)
                          (COND ((IDP J) (MKOBJECT J 'VARIABLE))
                                (T
                                 (MKOBJECT (CONS 'LIST (PAIR2LIST J))
                                           'GENERIC))))
                        (CAR J))
                       NIL)))
     LOOPLABEL
      (SETQ J (CDR J))
      (COND ((NULL J) (RETURN FORALL-RESULT)))
      (RPLACD FORALL-ENDPTR
              (CONS
               ((LAMBDA (J)
                  (COND ((IDP J) (MKOBJECT J 'VARIABLE))
                        (T (MKOBJECT (CONS 'LIST (PAIR2LIST J)) 'GENERIC))))
                (CAR J))
               NIL))
      (SETQ FORALL-ENDPTR (CDR FORALL-ENDPTR))
      (GO LOOPLABEL))) 
(PUT 'PAIR2LIST 'DEFINED-ON-LINE '49) 
(PUT 'PAIR2LIST 'DEFINED-IN-FILE 'REDUCE4/TABLE3.RED) 
(PUT 'PAIR2LIST 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE PAIR2LIST (U)
    (COND ((NULL U) NIL) ((ATOM U) (LIST U))
          (T (CONS (CAR U) (PAIR2LIST (CDR U)))))) 
(PUT 'GETD1 'DEFINED-ON-LINE '54) 
(PUT 'GETD1 'DEFINED-IN-FILE 'REDUCE4/TABLE3.RED) 
(PUT 'GETD1 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE GETD1 (U) (CONS 'LIST (PAIR2LIST (GETD U)))) 
(PUT 'OPERATOR1 'DEFINED-ON-LINE '56) 
(PUT 'OPERATOR1 'DEFINED-IN-FILE 'REDUCE4/TABLE3.RED) 
(PUT 'OPERATOR1 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE OPERATOR1 (U)
    (PROGN
     (PROG (J)
       (SETQ J U)
      LAB
       (COND ((NULL J) (RETURN NIL)))
       ((LAMBDA (J)
          (COND
           ((EQ (CAR J) 'VARIABLE)
            (PROGN
             (FLAG (LIST (CADR J)) 'OPR)
             (PUT (CADR J) 'SIMPFN 'SIMPIDEN)))
           (T (TYPERR (CADR J) "variable"))))
        (CAR J))
       (SETQ J (CDR J))
       (GO LAB))
     NIL)) 
(RLISTAT '(OPERATOR)) 