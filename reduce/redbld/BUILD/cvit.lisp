(cl:declaim (cl:optimize cl:debug cl:safety))
(cl:declaim (sb-ext:muffle-conditions sb-ext:compiler-note cl:style-warning))
(MODULE (LIST 'CVIT)) 
(CREATE-PACKAGE '(CVIT RED2CVIT MAP2STRN EVALMAPS INTFIERZ CVITMAP)
                '(CONTRIB PHYSICS)) 
(LOAD_PACKAGE (LIST 'HEPHYS)) 
(FLUID '(*MSG NDIMS* DINDICES*)) 
(GLOBAL '(WINDICES* INDICES* *CVIT GAMMA5* *G5CVIT)) 
(COND
 ((NULL WINDICES*)
  (SETQ WINDICES*
          '(NIL |_F0| |_F1| |_F2| |_F3| |_F4| |_F5| |_F6| |_F7| |_F8| |_F9|)))) 
(COND
 ((NULL GAMMA5*)
  (SETQ GAMMA5*
          '(NIL |_A0| |_A1| |_A2| |_A3| |_A4| |_A5| |_A6| |_A7| |_A8| |_A9|)))) 
(GLOBAL '(_0EDGE)) 
(FLUID '(NEW_EDGE_LIST OLD_EDGE_LIST)) 
(FLUID '(N_EDGE)) 
(DE HVECTORP (X) (EQ (GET X 'RTYPE) 'HVECTOR)) 
(PUT 'HVECTORP 'NUMBER-OF-ARGS 1) 
(PUT 'HVECTORP 'DEFINED-ON-LINE '78) 
(PUT 'HVECTORP 'DEFINED-IN-FILE 'HEPHYS/CVIT.RED) 
(PUT 'HVECTORP 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(PUTC 'HVECTORP 'INLINE '(LAMBDA (X) (EQ (GET X 'RTYPE) 'HVECTOR))) 
(DE WINDEXP (X) (MEMQ X (CAR WINDICES*))) 
(PUT 'WINDEXP 'NUMBER-OF-ARGS 1) 
(PUT 'WINDEXP 'DEFINED-ON-LINE '81) 
(PUT 'WINDEXP 'DEFINED-IN-FILE 'HEPHYS/CVIT.RED) 
(PUT 'WINDEXP 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(PUTC 'WINDEXP 'INLINE '(LAMBDA (X) (MEMQ X (CAR WINDICES*)))) 
(DE REPLACE_BY_INDEXP (V) (GET V 'REPLACE_BY_INDEX)) 
(PUT 'REPLACE_BY_INDEXP 'NUMBER-OF-ARGS 1) 
(PUT 'REPLACE_BY_INDEXP 'DEFINED-ON-LINE '84) 
(PUT 'REPLACE_BY_INDEXP 'DEFINED-IN-FILE 'HEPHYS/CVIT.RED) 
(PUT 'REPLACE_BY_INDEXP 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(PUTC 'REPLACE_BY_INDEXP 'INLINE '(LAMBDA (V) (GET V 'REPLACE_BY_INDEX))) 
(DE INDEXP (I) (MEMQ I INDICES*)) 
(PUT 'INDEXP 'NUMBER-OF-ARGS 1) 
(PUT 'INDEXP 'DEFINED-ON-LINE '87) 
(PUT 'INDEXP 'DEFINED-IN-FILE 'HEPHYS/CVIT.RED) 
(PUT 'INDEXP 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(PUTC 'INDEXP 'INLINE '(LAMBDA (I) (MEMQ I INDICES*))) 
(DE REPLACE_BY_VECTORP (I) (GET I 'REPLACE_BY_VECTOR)) 
(PUT 'REPLACE_BY_VECTORP 'NUMBER-OF-ARGS 1) 
(PUT 'REPLACE_BY_VECTORP 'DEFINED-ON-LINE '90) 
(PUT 'REPLACE_BY_VECTORP 'DEFINED-IN-FILE 'HEPHYS/CVIT.RED) 
(PUT 'REPLACE_BY_VECTORP 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(PUTC 'REPLACE_BY_VECTORP 'INLINE '(LAMBDA (I) (GET I 'REPLACE_BY_VECTOR))) 
(DE REPLACE_BY_VECTOR (I) (OR (GET I 'REPLACE_BY_VECTOR) I)) 
(PUT 'REPLACE_BY_VECTOR 'NUMBER-OF-ARGS 1) 
(PUT 'REPLACE_BY_VECTOR 'DEFINED-ON-LINE '93) 
(PUT 'REPLACE_BY_VECTOR 'DEFINED-IN-FILE 'HEPHYS/CVIT.RED) 
(PUT 'REPLACE_BY_VECTOR 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(PUTC 'REPLACE_BY_VECTOR 'INLINE
      '(LAMBDA (I) (OR (GET I 'REPLACE_BY_VECTOR) I))) 
(DE GAMMA5P (X) (MEMQ X (CAR GAMMA5*))) 
(PUT 'GAMMA5P 'NUMBER-OF-ARGS 1) 
(PUT 'GAMMA5P 'DEFINED-ON-LINE '96) 
(PUT 'GAMMA5P 'DEFINED-IN-FILE 'HEPHYS/CVIT.RED) 
(PUT 'GAMMA5P 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(PUTC 'GAMMA5P 'INLINE '(LAMBDA (X) (MEMQ X (CAR GAMMA5*)))) 
(DE NOSPURP (X) (FLAGP X 'NOSPUR)) 
(PUT 'NOSPURP 'NUMBER-OF-ARGS 1) 
(PUT 'NOSPURP 'DEFINED-ON-LINE '99) 
(PUT 'NOSPURP 'DEFINED-IN-FILE 'HEPHYS/CVIT.RED) 
(PUT 'NOSPURP 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(PUTC 'NOSPURP 'INLINE '(LAMBDA (X) (FLAGP X 'NOSPUR))) 
(DE CLEAR_GAMMA5 NIL
    (SETQ GAMMA5* (CONS NIL (APPEND (REVERSE (CAR GAMMA5*)) (CDR GAMMA5*))))) 
(PUT 'CLEAR_GAMMA5 'NUMBER-OF-ARGS 0) 
(PUT 'CLEAR_GAMMA5 'DEFINED-ON-LINE '102) 
(PUT 'CLEAR_GAMMA5 'DEFINED-IN-FILE 'HEPHYS/CVIT.RED) 
(PUT 'CLEAR_GAMMA5 'PROCEDURE_TYPE '(ARROW UNIT GENERAL)) 
(PUTC 'CLEAR_GAMMA5 'INLINE
      '(LAMBDA ()
         (SETQ GAMMA5*
                 (CONS NIL (APPEND (REVERSE (CAR GAMMA5*)) (CDR GAMMA5*)))))) 
(DE P_EMPTY_MAP_ (MAP_) (NULL MAP_)) 
(PUT 'P_EMPTY_MAP_ 'NUMBER-OF-ARGS 1) 
(PUT 'P_EMPTY_MAP_ 'DEFINED-ON-LINE '107) 
(PUT 'P_EMPTY_MAP_ 'DEFINED-IN-FILE 'HEPHYS/CVIT.RED) 
(PUT 'P_EMPTY_MAP_ 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(PUTC 'P_EMPTY_MAP_ 'INLINE '(LAMBDA (MAP_) (NULL MAP_))) 
(DE P_EMPTY_VERTEX (VERTEX) (NULL VERTEX)) 
(PUT 'P_EMPTY_VERTEX 'NUMBER-OF-ARGS 1) 
(PUT 'P_EMPTY_VERTEX 'DEFINED-ON-LINE '111) 
(PUT 'P_EMPTY_VERTEX 'DEFINED-IN-FILE 'HEPHYS/CVIT.RED) 
(PUT 'P_EMPTY_VERTEX 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(PUTC 'P_EMPTY_VERTEX 'INLINE '(LAMBDA (VERTEX) (NULL VERTEX))) 
(DE S_VERTEX_FIRST (MAP_) (CAR MAP_)) 
(PUT 'S_VERTEX_FIRST 'NUMBER-OF-ARGS 1) 
(PUT 'S_VERTEX_FIRST 'DEFINED-ON-LINE '117) 
(PUT 'S_VERTEX_FIRST 'DEFINED-IN-FILE 'HEPHYS/CVIT.RED) 
(PUT 'S_VERTEX_FIRST 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(PUTC 'S_VERTEX_FIRST 'INLINE '(LAMBDA (MAP_) (CAR MAP_))) 
(DE S_MAP__REST (MAP_) (CDR MAP_)) 
(PUT 'S_MAP__REST 'NUMBER-OF-ARGS 1) 
(PUT 'S_MAP__REST 'DEFINED-ON-LINE '121) 
(PUT 'S_MAP__REST 'DEFINED-IN-FILE 'HEPHYS/CVIT.RED) 
(PUT 'S_MAP__REST 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(PUTC 'S_MAP__REST 'INLINE '(LAMBDA (MAP_) (CDR MAP_))) 
(DE S_VERTEX_SECOND (MAP_) (CAR (CDR MAP_))) 
(PUT 'S_VERTEX_SECOND 'NUMBER-OF-ARGS 1) 
(PUT 'S_VERTEX_SECOND 'DEFINED-ON-LINE '125) 
(PUT 'S_VERTEX_SECOND 'DEFINED-IN-FILE 'HEPHYS/CVIT.RED) 
(PUT 'S_VERTEX_SECOND 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(PUTC 'S_VERTEX_SECOND 'INLINE '(LAMBDA (MAP_) (CAR (CDR MAP_)))) 
(DE FIRST_EDGE (VERTEX) (CAR VERTEX)) 
(PUT 'FIRST_EDGE 'NUMBER-OF-ARGS 1) 
(PUT 'FIRST_EDGE 'DEFINED-ON-LINE '129) 
(PUT 'FIRST_EDGE 'DEFINED-IN-FILE 'HEPHYS/CVIT.RED) 
(PUT 'FIRST_EDGE 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(PUTC 'FIRST_EDGE 'INLINE '(LAMBDA (VERTEX) (CAR VERTEX))) 
(DE S_VERTEX_REST (VERTEX) (CDR VERTEX)) 
(PUT 'S_VERTEX_REST 'NUMBER-OF-ARGS 1) 
(PUT 'S_VERTEX_REST 'DEFINED-ON-LINE '133) 
(PUT 'S_VERTEX_REST 'DEFINED-IN-FILE 'HEPHYS/CVIT.RED) 
(PUT 'S_VERTEX_REST 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(PUTC 'S_VERTEX_REST 'INLINE '(LAMBDA (VERTEX) (CDR VERTEX))) 
(DE SECOND_EDGE (VERTEX) (CAR (CDR VERTEX))) 
(PUT 'SECOND_EDGE 'NUMBER-OF-ARGS 1) 
(PUT 'SECOND_EDGE 'DEFINED-ON-LINE '137) 
(PUT 'SECOND_EDGE 'DEFINED-IN-FILE 'HEPHYS/CVIT.RED) 
(PUT 'SECOND_EDGE 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(PUTC 'SECOND_EDGE 'INLINE '(LAMBDA (VERTEX) (CAR (CDR VERTEX)))) 
(DE S_EDGE_NAME (EDGE) (CAR EDGE)) 
(PUT 'S_EDGE_NAME 'NUMBER-OF-ARGS 1) 
(PUT 'S_EDGE_NAME 'DEFINED-ON-LINE '141) 
(PUT 'S_EDGE_NAME 'DEFINED-IN-FILE 'HEPHYS/CVIT.RED) 
(PUT 'S_EDGE_NAME 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(PUTC 'S_EDGE_NAME 'INLINE '(LAMBDA (EDGE) (CAR EDGE))) 
(DE S_EDGE_PROP_ (EDGE) (CADR EDGE)) 
(PUT 'S_EDGE_PROP_ 'NUMBER-OF-ARGS 1) 
(PUT 'S_EDGE_PROP_ 'DEFINED-ON-LINE '145) 
(PUT 'S_EDGE_PROP_ 'DEFINED-IN-FILE 'HEPHYS/CVIT.RED) 
(PUT 'S_EDGE_PROP_ 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(PUTC 'S_EDGE_PROP_ 'INLINE '(LAMBDA (EDGE) (CADR EDGE))) 
(DE S_EDGE_TYPE (EDGE) (CADDR EDGE)) 
(PUT 'S_EDGE_TYPE 'NUMBER-OF-ARGS 1) 
(PUT 'S_EDGE_TYPE 'DEFINED-ON-LINE '149) 
(PUT 'S_EDGE_TYPE 'DEFINED-IN-FILE 'HEPHYS/CVIT.RED) 
(PUT 'S_EDGE_TYPE 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(PUTC 'S_EDGE_TYPE 'INLINE '(LAMBDA (EDGE) (CADDR EDGE))) 
(DE ADD_VERTEX (VERTEX MAP_) (CONS VERTEX MAP_)) 
(PUT 'ADD_VERTEX 'NUMBER-OF-ARGS 2) 
(PUT 'ADD_VERTEX 'DEFINED-ON-LINE '155) 
(PUT 'ADD_VERTEX 'DEFINED-IN-FILE 'HEPHYS/CVIT.RED) 
(PUT 'ADD_VERTEX 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(PUTC 'ADD_VERTEX 'INLINE '(LAMBDA (VERTEX MAP_) (CONS VERTEX MAP_))) 
(DE ADD_EDGE (EDGE VERTEX) (CONS EDGE VERTEX)) 
(PUT 'ADD_EDGE 'NUMBER-OF-ARGS 2) 
(PUT 'ADD_EDGE 'DEFINED-ON-LINE '159) 
(PUT 'ADD_EDGE 'DEFINED-IN-FILE 'HEPHYS/CVIT.RED) 
(PUT 'ADD_EDGE 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(PUTC 'ADD_EDGE 'INLINE '(LAMBDA (EDGE VERTEX) (CONS EDGE VERTEX))) 
(DE APPEND_MAP_S (MAP_1 MAP_2) (APPEND MAP_1 MAP_2)) 
(PUT 'APPEND_MAP_S 'NUMBER-OF-ARGS 2) 
(PUT 'APPEND_MAP_S 'DEFINED-ON-LINE '163) 
(PUT 'APPEND_MAP_S 'DEFINED-IN-FILE 'HEPHYS/CVIT.RED) 
(PUT 'APPEND_MAP_S 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(PUTC 'APPEND_MAP_S 'INLINE '(LAMBDA (MAP_1 MAP_2) (APPEND MAP_1 MAP_2))) 
(DE CONC_MAP_S (MAP_1 MAP_2) (NCONC MAP_1 MAP_2)) 
(PUT 'CONC_MAP_S 'NUMBER-OF-ARGS 2) 
(PUT 'CONC_MAP_S 'DEFINED-ON-LINE '167) 
(PUT 'CONC_MAP_S 'DEFINED-IN-FILE 'HEPHYS/CVIT.RED) 
(PUT 'CONC_MAP_S 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(PUTC 'CONC_MAP_S 'INLINE '(LAMBDA (MAP_1 MAP_2) (NCONC MAP_1 MAP_2))) 
(DE CONC_VERTEX (VERTEX1 VERTEX2) (NCONC VERTEX1 VERTEX2)) 
(PUT 'CONC_VERTEX 'NUMBER-OF-ARGS 2) 
(PUT 'CONC_VERTEX 'DEFINED-ON-LINE '171) 
(PUT 'CONC_VERTEX 'DEFINED-IN-FILE 'HEPHYS/CVIT.RED) 
(PUT 'CONC_VERTEX 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(PUTC 'CONC_VERTEX 'INLINE '(LAMBDA (VERTEX1 VERTEX2) (NCONC VERTEX1 VERTEX2))) 
(DE MK_NAME1 (NAME) (EXPLODE NAME)) 
(PUT 'MK_NAME1 'NUMBER-OF-ARGS 1) 
(PUT 'MK_NAME1 'DEFINED-ON-LINE '175) 
(PUT 'MK_NAME1 'DEFINED-IN-FILE 'HEPHYS/CVIT.RED) 
(PUT 'MK_NAME1 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(PUTC 'MK_NAME1 'INLINE '(LAMBDA (NAME) (EXPLODE NAME))) 
(DE MK_EDGE_PROP_ (PROP_1 PROP_2) (CONS PROP_1 PROP_2)) 
(PUT 'MK_EDGE_PROP_ 'NUMBER-OF-ARGS 2) 
(PUT 'MK_EDGE_PROP_ 'DEFINED-ON-LINE '178) 
(PUT 'MK_EDGE_PROP_ 'DEFINED-IN-FILE 'HEPHYS/CVIT.RED) 
(PUT 'MK_EDGE_PROP_ 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(PUTC 'MK_EDGE_PROP_ 'INLINE '(LAMBDA (PROP_1 PROP_2) (CONS PROP_1 PROP_2))) 
(DE MK_EDGE_TYPE (TYP1 TYP2) (AND TYP1 TYP2)) 
(PUT 'MK_EDGE_TYPE 'NUMBER-OF-ARGS 2) 
(PUT 'MK_EDGE_TYPE 'DEFINED-ON-LINE '181) 
(PUT 'MK_EDGE_TYPE 'DEFINED-IN-FILE 'HEPHYS/CVIT.RED) 
(PUT 'MK_EDGE_TYPE 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(PUTC 'MK_EDGE_TYPE 'INLINE '(LAMBDA (TYP1 TYP2) (AND TYP1 TYP2))) 
(DE MK_EDGE (NAME PROP_ TYPE) (LIST NAME PROP_ TYPE)) 
(PUT 'MK_EDGE 'NUMBER-OF-ARGS 3) 
(PUT 'MK_EDGE 'DEFINED-ON-LINE '186) 
(PUT 'MK_EDGE 'DEFINED-IN-FILE 'HEPHYS/CVIT.RED) 
(PUT 'MK_EDGE 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL GENERAL) GENERAL)) 
(PUTC 'MK_EDGE 'INLINE '(LAMBDA (NAME PROP_ TYPE) (LIST NAME PROP_ TYPE))) 
(DE MK_EDGE3_VERTEX (EDGE1 EDGE2 EDGE3) (LIST EDGE1 EDGE2 EDGE3)) 
(PUT 'MK_EDGE3_VERTEX 'NUMBER-OF-ARGS 3) 
(PUT 'MK_EDGE3_VERTEX 'DEFINED-ON-LINE '190) 
(PUT 'MK_EDGE3_VERTEX 'DEFINED-IN-FILE 'HEPHYS/CVIT.RED) 
(PUT 'MK_EDGE3_VERTEX 'PROCEDURE_TYPE
     '(ARROW (TIMES GENERAL GENERAL GENERAL) GENERAL)) 
(PUTC 'MK_EDGE3_VERTEX 'INLINE
      '(LAMBDA (EDGE1 EDGE2 EDGE3) (LIST EDGE1 EDGE2 EDGE3))) 
(DE MK_EMPTY_MAP_ NIL NIL) 
(PUT 'MK_EMPTY_MAP_ 'NUMBER-OF-ARGS 0) 
(PUT 'MK_EMPTY_MAP_ 'DEFINED-ON-LINE '194) 
(PUT 'MK_EMPTY_MAP_ 'DEFINED-IN-FILE 'HEPHYS/CVIT.RED) 
(PUT 'MK_EMPTY_MAP_ 'PROCEDURE_TYPE '(ARROW UNIT GENERAL)) 
(PUTC 'MK_EMPTY_MAP_ 'INLINE '(LAMBDA () NIL)) 
(DE MK_EMPTY_VERTEX NIL NIL) 
(PUT 'MK_EMPTY_VERTEX 'NUMBER-OF-ARGS 0) 
(PUT 'MK_EMPTY_VERTEX 'DEFINED-ON-LINE '198) 
(PUT 'MK_EMPTY_VERTEX 'DEFINED-IN-FILE 'HEPHYS/CVIT.RED) 
(PUT 'MK_EMPTY_VERTEX 'PROCEDURE_TYPE '(ARROW UNIT GENERAL)) 
(PUTC 'MK_EMPTY_VERTEX 'INLINE '(LAMBDA () NIL)) 
(DE MK_VERTEX1_MAP_ (VERTEX1) (LIST VERTEX1)) 
(PUT 'MK_VERTEX1_MAP_ 'NUMBER-OF-ARGS 1) 
(PUT 'MK_VERTEX1_MAP_ 'DEFINED-ON-LINE '202) 
(PUT 'MK_VERTEX1_MAP_ 'DEFINED-IN-FILE 'HEPHYS/CVIT.RED) 
(PUT 'MK_VERTEX1_MAP_ 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(PUTC 'MK_VERTEX1_MAP_ 'INLINE '(LAMBDA (VERTEX1) (LIST VERTEX1))) 
(DE MK_VERTEX2_MAP_ (VERTEX1 VERTEX2) (LIST VERTEX1 VERTEX2)) 
(PUT 'MK_VERTEX2_MAP_ 'NUMBER-OF-ARGS 2) 
(PUT 'MK_VERTEX2_MAP_ 'DEFINED-ON-LINE '206) 
(PUT 'MK_VERTEX2_MAP_ 'DEFINED-IN-FILE 'HEPHYS/CVIT.RED) 
(PUT 'MK_VERTEX2_MAP_ 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(PUTC 'MK_VERTEX2_MAP_ 'INLINE
      '(LAMBDA (VERTEX1 VERTEX2) (LIST VERTEX1 VERTEX2))) 
(DE MK_EDGE2_VERTEX (EDGE1 EDGE2) (LIST EDGE1 EDGE2)) 
(PUT 'MK_EDGE2_VERTEX 'NUMBER-OF-ARGS 2) 
(PUT 'MK_EDGE2_VERTEX 'DEFINED-ON-LINE '210) 
(PUT 'MK_EDGE2_VERTEX 'DEFINED-IN-FILE 'HEPHYS/CVIT.RED) 
(PUT 'MK_EDGE2_VERTEX 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(PUTC 'MK_EDGE2_VERTEX 'INLINE '(LAMBDA (EDGE1 EDGE2) (LIST EDGE1 EDGE2))) 
(DE CONC_VERTEX (VERTEX1 VERTEX2) (NCONC VERTEX1 VERTEX2)) 
(PUT 'CONC_VERTEX 'NUMBER-OF-ARGS 2) 
(PUT 'CONC_VERTEX 'DEFINED-ON-LINE '214) 
(PUT 'CONC_VERTEX 'DEFINED-IN-FILE 'HEPHYS/CVIT.RED) 
(PUT 'CONC_VERTEX 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(PUTC 'CONC_VERTEX 'INLINE '(LAMBDA (VERTEX1 VERTEX2) (NCONC VERTEX1 VERTEX2))) 
(DE CYCL_MAP_ (MAP_) (APPEND (CDR MAP_) (LIST (CAR MAP_)))) 
(PUT 'CYCL_MAP_ 'NUMBER-OF-ARGS 1) 
(PUT 'CYCL_MAP_ 'DEFINED-ON-LINE '217) 
(PUT 'CYCL_MAP_ 'DEFINED-IN-FILE 'HEPHYS/CVIT.RED) 
(PUT 'CYCL_MAP_ 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(PUTC 'CYCL_MAP_ 'INLINE '(LAMBDA (MAP_) (APPEND (CDR MAP_) (LIST (CAR MAP_))))) 
(DE CYCL_VERTEX (VERTEX) (APPEND (CDR VERTEX) (LIST (CAR VERTEX)))) 
(PUT 'CYCL_VERTEX 'NUMBER-OF-ARGS 1) 
(PUT 'CYCL_VERTEX 'DEFINED-ON-LINE '221) 
(PUT 'CYCL_VERTEX 'DEFINED-IN-FILE 'HEPHYS/CVIT.RED) 
(PUT 'CYCL_VERTEX 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(PUTC 'CYCL_VERTEX 'INLINE
      '(LAMBDA (VERTEX) (APPEND (CDR VERTEX) (LIST (CAR VERTEX))))) 
(DE MK_WORLD (ACTEDGES WORLD1) (LIST ACTEDGES (LIST NIL) WORLD1)) 
(PUT 'MK_WORLD 'NUMBER-OF-ARGS 2) 
(PUT 'MK_WORLD 'DEFINED-ON-LINE '225) 
(PUT 'MK_WORLD 'DEFINED-IN-FILE 'HEPHYS/CVIT.RED) 
(PUT 'MK_WORLD 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(PUTC 'MK_WORLD 'INLINE
      '(LAMBDA (ACTEDGES WORLD1) (LIST ACTEDGES (LIST NIL) WORLD1))) 
(DE P_MEMBER_EDGE (EDGE VERTEX) (ASSOC (CAR EDGE) VERTEX)) 
(PUT 'P_MEMBER_EDGE 'NUMBER-OF-ARGS 2) 
(PUT 'P_MEMBER_EDGE 'DEFINED-ON-LINE '230) 
(PUT 'P_MEMBER_EDGE 'DEFINED-IN-FILE 'HEPHYS/CVIT.RED) 
(PUT 'P_MEMBER_EDGE 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(PUTC 'P_MEMBER_EDGE 'INLINE '(LAMBDA (EDGE VERTEX) (ASSOC (CAR EDGE) VERTEX))) 
(DE EQUAL_EDGES (EDGE1 EDGE2) (EQ (CAR EDGE1) (CAR EDGE2))) 
(PUT 'EQUAL_EDGES 'NUMBER-OF-ARGS 2) 
(PUT 'EQUAL_EDGES 'DEFINED-ON-LINE '234) 
(PUT 'EQUAL_EDGES 'DEFINED-IN-FILE 'HEPHYS/CVIT.RED) 
(PUT 'EQUAL_EDGES 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(PUTC 'EQUAL_EDGES 'INLINE '(LAMBDA (EDGE1 EDGE2) (EQ (CAR EDGE1) (CAR EDGE2)))) 
(DE SINGLE_NO_PARENTS (EDGES) (EQUAL (LENGTH EDGES) 1)) 
(PUT 'SINGLE_NO_PARENTS 'NUMBER-OF-ARGS 1) 
(PUT 'SINGLE_NO_PARENTS 'DEFINED-ON-LINE '238) 
(PUT 'SINGLE_NO_PARENTS 'DEFINED-IN-FILE 'HEPHYS/CVIT.RED) 
(PUT 'SINGLE_NO_PARENTS 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(PUTC 'SINGLE_NO_PARENTS 'INLINE '(LAMBDA (EDGES) (EQUAL (LENGTH EDGES) 1))) 
(DE RESTO_MAP__ORDER (MAP_) (REVERSE MAP_)) 
(PUT 'RESTO_MAP__ORDER 'NUMBER-OF-ARGS 1) 
(PUT 'RESTO_MAP__ORDER 'DEFINED-ON-LINE '241) 
(PUT 'RESTO_MAP__ORDER 'DEFINED-IN-FILE 'HEPHYS/CVIT.RED) 
(PUT 'RESTO_MAP__ORDER 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(PUTC 'RESTO_MAP__ORDER 'INLINE '(LAMBDA (MAP_) (REVERSE MAP_))) 
(DE MAP__LENGTH (MAP_) (LENGTH MAP_)) 
(PUT 'MAP__LENGTH 'NUMBER-OF-ARGS 1) 
(PUT 'MAP__LENGTH 'DEFINED-ON-LINE '245) 
(PUT 'MAP__LENGTH 'DEFINED-IN-FILE 'HEPHYS/CVIT.RED) 
(PUT 'MAP__LENGTH 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(PUTC 'MAP__LENGTH 'INLINE '(LAMBDA (MAP_) (LENGTH MAP_))) 
(DE VERTEX_LENGTH (VERTEX) (LENGTH VERTEX)) 
(PUT 'VERTEX_LENGTH 'NUMBER-OF-ARGS 1) 
(PUT 'VERTEX_LENGTH 'DEFINED-ON-LINE '249) 
(PUT 'VERTEX_LENGTH 'DEFINED-IN-FILE 'HEPHYS/CVIT.RED) 
(PUT 'VERTEX_LENGTH 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(PUTC 'VERTEX_LENGTH 'INLINE '(LAMBDA (VERTEX) (LENGTH VERTEX))) 
(DE PREPARE_MAP_ (MAP_)
    (PROG (X FORALL-RESULT FORALL-ENDPTR)
      (SETQ X MAP_)
      (COND ((NULL X) (RETURN NIL)))
      (SETQ FORALL-RESULT
              (SETQ FORALL-ENDPTR
                      (CONS ((LAMBDA (X) (MK_OLD_EDGE X)) (CAR X)) NIL)))
     LOOPLABEL
      (SETQ X (CDR X))
      (COND ((NULL X) (RETURN FORALL-RESULT)))
      (RPLACD FORALL-ENDPTR (CONS ((LAMBDA (X) (MK_OLD_EDGE X)) (CAR X)) NIL))
      (SETQ FORALL-ENDPTR (CDR FORALL-ENDPTR))
      (GO LOOPLABEL))) 
(PUT 'PREPARE_MAP_ 'NUMBER-OF-ARGS 1) 
(PUT 'PREPARE_MAP_ 'DEFINED-ON-LINE '253) 
(PUT 'PREPARE_MAP_ 'DEFINED-IN-FILE 'HEPHYS/CVIT.RED) 
(PUT 'PREPARE_MAP_ 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(PUTC 'PREPARE_MAP_ 'INLINE
      '(LAMBDA (MAP_)
         (PROG (X FORALL-RESULT FORALL-ENDPTR)
           (SETQ X MAP_)
           (COND ((NULL X) (RETURN NIL)))
           (SETQ FORALL-RESULT
                   (SETQ FORALL-ENDPTR
                           (CONS ((LAMBDA (X) (MK_OLD_EDGE X)) (CAR X)) NIL)))
          LOOPLABEL
           (SETQ X (CDR X))
           (COND ((NULL X) (RETURN FORALL-RESULT)))
           (RPLACD FORALL-ENDPTR
                   (CONS ((LAMBDA (X) (MK_OLD_EDGE X)) (CAR X)) NIL))
           (SETQ FORALL-ENDPTR (CDR FORALL-ENDPTR))
           (GO LOOPLABEL)))) 
(DE P_VERTEX_PRIM (VERTEX) (LEQ (LENGTH VERTEX) 3)) 
(PUT 'P_VERTEX_PRIM 'NUMBER-OF-ARGS 1) 
(PUT 'P_VERTEX_PRIM 'DEFINED-ON-LINE '257) 
(PUT 'P_VERTEX_PRIM 'DEFINED-IN-FILE 'HEPHYS/CVIT.RED) 
(PUT 'P_VERTEX_PRIM 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(PUTC 'P_VERTEX_PRIM 'INLINE '(LAMBDA (VERTEX) (LEQ (LENGTH VERTEX) 3))) 
(DE S-EDGE-NAME (EDGE) (CAR EDGE)) 
(PUT 'S-EDGE-NAME 'NUMBER-OF-ARGS 1) 
(PUT 'S-EDGE-NAME 'DEFINED-ON-LINE '263) 
(PUT 'S-EDGE-NAME 'DEFINED-IN-FILE 'HEPHYS/CVIT.RED) 
(PUT 'S-EDGE-NAME 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(PUTC 'S-EDGE-NAME 'INLINE '(LAMBDA (EDGE) (CAR EDGE))) 
(DE SAPPEND (X Y) (APPEND X Y)) 
(PUT 'SAPPEND 'NUMBER-OF-ARGS 2) 
(PUT 'SAPPEND 'DEFINED-ON-LINE '265) 
(PUT 'SAPPEND 'DEFINED-IN-FILE 'HEPHYS/CVIT.RED) 
(PUT 'SAPPEND 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(PUTC 'SAPPEND 'INLINE '(LAMBDA (X Y) (APPEND X Y))) 
(DE SREVERSE (Y) (REVERSE Y)) 
(PUT 'SREVERSE 'NUMBER-OF-ARGS 1) 
(PUT 'SREVERSE 'DEFINED-ON-LINE '267) 
(PUT 'SREVERSE 'DEFINED-IN-FILE 'HEPHYS/CVIT.RED) 
(PUT 'SREVERSE 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(PUTC 'SREVERSE 'INLINE '(LAMBDA (Y) (REVERSE Y))) 
(DE GETEDGE (X Y) (CDR (ASSOC X Y))) 
(PUT 'GETEDGE 'NUMBER-OF-ARGS 2) 
(PUT 'GETEDGE 'DEFINED-ON-LINE '269) 
(PUT 'GETEDGE 'DEFINED-IN-FILE 'HEPHYS/CVIT.RED) 
(PUT 'GETEDGE 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(PUTC 'GETEDGE 'INLINE '(LAMBDA (X Y) (CDR (ASSOC X Y)))) 
(DE MK-ROAD-NAME (X Y N) (LIST (CONS (CAR X) N) (CONS (CAR Y) N))) 
(PUT 'MK-ROAD-NAME 'NUMBER-OF-ARGS 3) 
(PUT 'MK-ROAD-NAME 'DEFINED-ON-LINE '271) 
(PUT 'MK-ROAD-NAME 'DEFINED-IN-FILE 'HEPHYS/CVIT.RED) 
(PUT 'MK-ROAD-NAME 'PROCEDURE_TYPE
     '(ARROW (TIMES GENERAL GENERAL GENERAL) GENERAL)) 
(PUTC 'MK-ROAD-NAME 'INLINE
      '(LAMBDA (X Y N) (LIST (CONS (CAR X) N) (CONS (CAR Y) N)))) 
(DE MK-EXTERNAL-LEG (EDGE) (LIST (CONS EDGE 0))) 
(PUT 'MK-EXTERNAL-LEG 'NUMBER-OF-ARGS 1) 
(PUT 'MK-EXTERNAL-LEG 'DEFINED-ON-LINE '274) 
(PUT 'MK-EXTERNAL-LEG 'DEFINED-IN-FILE 'HEPHYS/CVIT.RED) 
(PUT 'MK-EXTERNAL-LEG 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(PUTC 'MK-EXTERNAL-LEG 'INLINE '(LAMBDA (EDGE) (LIST (CONS EDGE 0)))) 
(DE INDEX-IN (IND L) (COND ((ATOM IND) NIL) (T (MEMBER IND L)))) 
(PUT 'INDEX-IN 'NUMBER-OF-ARGS 2) 
(PUT 'INDEX-IN 'DEFINED-ON-LINE '278) 
(PUT 'INDEX-IN 'DEFINED-IN-FILE 'HEPHYS/CVIT.RED) 
(PUT 'INDEX-IN 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(PUTC 'INDEX-IN 'INLINE
      '(LAMBDA (IND L) (COND ((ATOM IND) NIL) (T (MEMBER IND L))))) 
(DE REVERSE_MAP_ (MAP_) (REVERSE MAP_)) 
(PUT 'REVERSE_MAP_ 'NUMBER-OF-ARGS 1) 
(PUT 'REVERSE_MAP_ 'DEFINED-ON-LINE '284) 
(PUT 'REVERSE_MAP_ 'DEFINED-IN-FILE 'HEPHYS/CVIT.RED) 
(PUT 'REVERSE_MAP_ 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(PUTC 'REVERSE_MAP_ 'INLINE '(LAMBDA (MAP_) (REVERSE MAP_))) 
(DE MK_EDGE1_VERTEX (EDGE) (LIST EDGE)) 
(PUT 'MK_EDGE1_VERTEX 'NUMBER-OF-ARGS 1) 
(PUT 'MK_EDGE1_VERTEX 'DEFINED-ON-LINE '287) 
(PUT 'MK_EDGE1_VERTEX 'DEFINED-IN-FILE 'HEPHYS/CVIT.RED) 
(PUT 'MK_EDGE1_VERTEX 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(PUTC 'MK_EDGE1_VERTEX 'INLINE '(LAMBDA (EDGE) (LIST EDGE))) 
(DE MK_EDGES_VERTEX (EDGES) EDGES) 
(PUT 'MK_EDGES_VERTEX 'NUMBER-OF-ARGS 1) 
(PUT 'MK_EDGES_VERTEX 'DEFINED-ON-LINE '290) 
(PUT 'MK_EDGES_VERTEX 'DEFINED-IN-FILE 'HEPHYS/CVIT.RED) 
(PUT 'MK_EDGES_VERTEX 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(PUTC 'MK_EDGES_VERTEX 'INLINE '(LAMBDA (EDGES) EDGES)) 
(DE REVERSIP_VERTEX (VERTEX) (REVERSIP VERTEX)) 
(PUT 'REVERSIP_VERTEX 'NUMBER-OF-ARGS 1) 
(PUT 'REVERSIP_VERTEX 'DEFINED-ON-LINE '293) 
(PUT 'REVERSIP_VERTEX 'DEFINED-IN-FILE 'HEPHYS/CVIT.RED) 
(PUT 'REVERSIP_VERTEX 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(PUTC 'REVERSIP_VERTEX 'INLINE '(LAMBDA (VERTEX) (REVERSIP VERTEX))) 
(DE APPEND_VERTEX (VERTEX1 VERTEX2) (APPEND VERTEX1 VERTEX2)) 
(PUT 'APPEND_VERTEX 'NUMBER-OF-ARGS 2) 
(PUT 'APPEND_VERTEX 'DEFINED-ON-LINE '296) 
(PUT 'APPEND_VERTEX 'DEFINED-IN-FILE 'HEPHYS/CVIT.RED) 
(PUT 'APPEND_VERTEX 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(PUTC 'APPEND_VERTEX 'INLINE
      '(LAMBDA (VERTEX1 VERTEX2) (APPEND VERTEX1 VERTEX2))) 
(DE MK_EDGE4_VERTEX (EDGE1 EDGE2 EDGE3 EDGE4) (LIST EDGE1 EDGE2 EDGE3 EDGE4)) 
(PUT 'MK_EDGE4_VERTEX 'NUMBER-OF-ARGS 4) 
(PUT 'MK_EDGE4_VERTEX 'DEFINED-ON-LINE '302) 
(PUT 'MK_EDGE4_VERTEX 'DEFINED-IN-FILE 'HEPHYS/CVIT.RED) 
(PUT 'MK_EDGE4_VERTEX 'PROCEDURE_TYPE
     '(ARROW (TIMES GENERAL GENERAL GENERAL GENERAL) GENERAL)) 
(PUTC 'MK_EDGE4_VERTEX 'INLINE
      '(LAMBDA (EDGE1 EDGE2 EDGE3 EDGE4) (LIST EDGE1 EDGE2 EDGE3 EDGE4))) 
(DE P_OLD_EDGE (EDGE) (ASSOC (CAR EDGE) OLD_EDGE_LIST)) 
(PUT 'P_OLD_EDGE 'NUMBER-OF-ARGS 1) 
(PUT 'P_OLD_EDGE 'DEFINED-ON-LINE '305) 
(PUT 'P_OLD_EDGE 'DEFINED-IN-FILE 'HEPHYS/CVIT.RED) 
(PUT 'P_OLD_EDGE 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(PUTC 'P_OLD_EDGE 'INLINE '(LAMBDA (EDGE) (ASSOC (CAR EDGE) OLD_EDGE_LIST))) 
(DE S_ATLAS_MAP_ (ATLAS) (CAR ATLAS)) 
(PUT 'S_ATLAS_MAP_ 'NUMBER-OF-ARGS 1) 
(PUT 'S_ATLAS_MAP_ 'DEFINED-ON-LINE '309) 
(PUT 'S_ATLAS_MAP_ 'DEFINED-IN-FILE 'HEPHYS/CVIT.RED) 
(PUT 'S_ATLAS_MAP_ 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(PUTC 'S_ATLAS_MAP_ 'INLINE '(LAMBDA (ATLAS) (CAR ATLAS))) 
(DE S_ATLAS_COEFF (ATLAS) (CADR ATLAS)) 
(PUT 'S_ATLAS_COEFF 'NUMBER-OF-ARGS 1) 
(PUT 'S_ATLAS_COEFF 'DEFINED-ON-LINE '312) 
(PUT 'S_ATLAS_COEFF 'DEFINED-IN-FILE 'HEPHYS/CVIT.RED) 
(PUT 'S_ATLAS_COEFF 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(PUTC 'S_ATLAS_COEFF 'INLINE '(LAMBDA (ATLAS) (CADR ATLAS))) 
(DE S_ATLAS_DEN_OM (ATLAS) (CADDR ATLAS)) 
(PUT 'S_ATLAS_DEN_OM 'NUMBER-OF-ARGS 1) 
(PUT 'S_ATLAS_DEN_OM 'DEFINED-ON-LINE '315) 
(PUT 'S_ATLAS_DEN_OM 'DEFINED-IN-FILE 'HEPHYS/CVIT.RED) 
(PUT 'S_ATLAS_DEN_OM 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(PUTC 'S_ATLAS_DEN_OM 'INLINE '(LAMBDA (ATLAS) (CADDR ATLAS))) 
(DE MK_ATLAS (MAP_ ATLASES DEN_OM) (LIST MAP_ ATLASES DEN_OM)) 
(PUT 'MK_ATLAS 'NUMBER-OF-ARGS 3) 
(PUT 'MK_ATLAS 'DEFINED-ON-LINE '318) 
(PUT 'MK_ATLAS 'DEFINED-IN-FILE 'HEPHYS/CVIT.RED) 
(PUT 'MK_ATLAS 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL GENERAL) GENERAL)) 
(PUTC 'MK_ATLAS 'INLINE
      '(LAMBDA (MAP_ ATLASES DEN_OM) (LIST MAP_ ATLASES DEN_OM))) 
(DE VERTEX_EDGES (EDGE) EDGE) 
(PUT 'VERTEX_EDGES 'NUMBER-OF-ARGS 1) 
(PUT 'VERTEX_EDGES 'DEFINED-ON-LINE '321) 
(PUT 'VERTEX_EDGES 'DEFINED-IN-FILE 'HEPHYS/CVIT.RED) 
(PUT 'VERTEX_EDGES 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(PUTC 'VERTEX_EDGES 'INLINE '(LAMBDA (EDGE) EDGE)) 
(DE S_COEFF_WORLD1 (WORLD1) (CADR WORLD1)) 
(PUT 'S_COEFF_WORLD1 'NUMBER-OF-ARGS 1) 
(PUT 'S_COEFF_WORLD1 'DEFINED-ON-LINE '324) 
(PUT 'S_COEFF_WORLD1 'DEFINED-IN-FILE 'HEPHYS/CVIT.RED) 
(PUT 'S_COEFF_WORLD1 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(PUTC 'S_COEFF_WORLD1 'INLINE '(LAMBDA (WORLD1) (CADR WORLD1))) 
(DE S_EDGELIST_WORLD (WORLD) (CAR WORLD)) 
(PUT 'S_EDGELIST_WORLD 'NUMBER-OF-ARGS 1) 
(PUT 'S_EDGELIST_WORLD 'DEFINED-ON-LINE '327) 
(PUT 'S_EDGELIST_WORLD 'DEFINED-IN-FILE 'HEPHYS/CVIT.RED) 
(PUT 'S_EDGELIST_WORLD 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(PUTC 'S_EDGELIST_WORLD 'INLINE '(LAMBDA (WORLD) (CAR WORLD))) 
(DE S_WORLD1 (WORLD) (CADDR WORLD)) 
(PUT 'S_WORLD1 'NUMBER-OF-ARGS 1) 
(PUT 'S_WORLD1 'DEFINED-ON-LINE '330) 
(PUT 'S_WORLD1 'DEFINED-IN-FILE 'HEPHYS/CVIT.RED) 
(PUT 'S_WORLD1 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(PUTC 'S_WORLD1 'INLINE '(LAMBDA (WORLD) (CADDR WORLD))) 
(DE S_WORLD_VAR (WORLD) (CADR WORLD)) 
(PUT 'S_WORLD_VAR 'NUMBER-OF-ARGS 1) 
(PUT 'S_WORLD_VAR 'DEFINED-ON-LINE '334) 
(PUT 'S_WORLD_VAR 'DEFINED-IN-FILE 'HEPHYS/CVIT.RED) 
(PUT 'S_WORLD_VAR 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(PUTC 'S_WORLD_VAR 'INLINE '(LAMBDA (WORLD) (CADR WORLD))) 
(DE S_WORLD_ATLAS (WORLD) (CADDR WORLD)) 
(PUT 'S_WORLD_ATLAS 'NUMBER-OF-ARGS 1) 
(PUT 'S_WORLD_ATLAS 'DEFINED-ON-LINE '337) 
(PUT 'S_WORLD_ATLAS 'DEFINED-IN-FILE 'HEPHYS/CVIT.RED) 
(PUT 'S_WORLD_ATLAS 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(PUTC 'S_WORLD_ATLAS 'INLINE '(LAMBDA (WORLD) (CADDR WORLD))) 
(DE S_WORLD_EDGES (WORLD) (CAR WORLD)) 
(PUT 'S_WORLD_EDGES 'NUMBER-OF-ARGS 1) 
(PUT 'S_WORLD_EDGES 'DEFINED-ON-LINE '340) 
(PUT 'S_WORLD_EDGES 'DEFINED-IN-FILE 'HEPHYS/CVIT.RED) 
(PUT 'S_WORLD_EDGES 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(PUTC 'S_WORLD_EDGES 'INLINE '(LAMBDA (WORLD) (CAR WORLD))) 
(ENDMODULE) 