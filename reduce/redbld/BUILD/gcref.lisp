(cl:declaim (cl:optimize cl:debug cl:safety))
(cl:declaim (sb-ext:muffle-conditions sb-ext:compiler-note cl:style-warning))
(FLUID '(GCREF_RCSID* GCREF_COPYRIGHT*)) 
(SETQ GCREF_RCSID* "$Id: gcref.red 6571 2023-08-02 09:22:22Z thomas-sturm $") 
(SETQ GCREF_COPYRIGHT* "(c) 2001  A. Dolzmann, T. Sturm, 2011 T. Sturm") 
(MODULE (LIST 'GCREF)) 
(LOADTIME (LOAD_PACKAGE (LIST 'ASSERT))) 
(LOADTIME (OFF1 'ASSERT)) 
(LOAD-PACKAGE 'RCREF) 
(EXPORTS (LIST 'GCREF_OFF)) 
(FLUID '(*DEFN DFPRINT* GCREF_NOLIST* GCREF_EXPORTL*)) 
(GLOBAL
 '(UNDEFG* GSEEN* BTIME* HAVEARGS* ENTPTS* SEEN* TSEEN* PFILES* *SAVEPROPS
   *ALGEBRAICS)) 
(SWITCH (LIST 'GCREF 'SAVEPROPS 'GCREFALL 'GCREFUDG)) 
(ON1 'GCREFALL) 
(OFF1 'GCREFUDG) 
(PUT 'GCREF 'SIMPFG '((T (CREFON)) (NIL (GCREF_OFF)))) 
(PUT 'EXPORTS 'DEFINED-ON-LINE '60) 
(PUT 'EXPORTS 'DEFINED-IN-FILE 'GCREF/GCREF.RED) 
(PUT 'EXPORTS 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(PUTC 'EXPORTS 'ANLFN
      '(LAMBDA (U)
         ((LAMBDA (W)
            (PROGN
             (SETQ GCREF_EXPORTL* (APPEND GCREF_EXPORTL* W))
             (FLAG W 'EXPORTED)))
          (EVAL (CAR U))))) 
(PUT 'GCREF_OFF 'NUMBER-OF-ARGS 0) 
(PUT 'GCREF_OFF 'DEFINED-ON-LINE '66) 
(PUT 'GCREF_OFF 'DEFINED-IN-FILE 'GCREF/GCREF.RED) 
(PUT 'GCREF_OFF 'PROCEDURE_TYPE '(ARROW UNIT GENERAL)) 
(DE GCREF_OFF NIL
    (PROG (TIM)
      (GCREF_OFF1)
      (SETQ TIM (DIFFERENCE (TIME) BTIME*))
      (SETQ PFILES*
              (PROG (Z FORALL-RESULT FORALL-ENDPTR)
                (SETQ Z PFILES*)
                (COND ((NULL Z) (RETURN NIL)))
                (SETQ FORALL-RESULT
                        (SETQ FORALL-ENDPTR
                                (CONS
                                 ((LAMBDA (Z)
                                    (PROGN
                                     (PUT (CDR Z) 'CREF_NAME (CAR Z))
                                     (CDR Z)))
                                  (CAR Z))
                                 NIL)))
               LOOPLABEL
                (SETQ Z (CDR Z))
                (COND ((NULL Z) (RETURN FORALL-RESULT)))
                (RPLACD FORALL-ENDPTR
                        (CONS
                         ((LAMBDA (Z)
                            (PROGN (PUT (CDR Z) 'CREF_NAME (CAR Z)) (CDR Z)))
                          (CAR Z))
                         NIL))
                (SETQ FORALL-ENDPTR (CDR FORALL-ENDPTR))
                (GO LOOPLABEL)))
      (COND (*GCREFALL (GCREF_MKGRAPH (GCREF_SELECT SEEN*)))
            (T (GCREF_MKEGRAPH (GCREF_ESELECT SEEN*))))
      (COND ((NOT *SAVEPROPS) (GCREF_REMPROPS))))) 
(PUT 'GCREF_SELECT 'NUMBER-OF-ARGS 1) 
(PUT 'GCREF_SELECT 'DEFINED-ON-LINE '83) 
(PUT 'GCREF_SELECT 'DEFINED-IN-FILE 'GCREF/GCREF.RED) 
(PUT 'GCREF_SELECT 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE GCREF_SELECT (IDL)
    (PROG (FN FORALL-RESULT FORALL-ENDPTR)
      (SETQ FN IDL)
     STARTOVER
      (COND ((NULL FN) (RETURN NIL)))
      (SETQ FORALL-RESULT
              ((LAMBDA (FN)
                 (COND
                  ((AND (FLAGP FN 'DEFD) (NOT (MEMQ FN GCREF_NOLIST*)))
                   (LIST FN))))
               (CAR FN)))
      (SETQ FORALL-ENDPTR (LASTPAIR FORALL-RESULT))
      (SETQ FN (CDR FN))
      (COND ((ATOM FORALL-ENDPTR) (GO STARTOVER)))
     LOOPLABEL
      (COND ((NULL FN) (RETURN FORALL-RESULT)))
      (RPLACD FORALL-ENDPTR
              ((LAMBDA (FN)
                 (COND
                  ((AND (FLAGP FN 'DEFD) (NOT (MEMQ FN GCREF_NOLIST*)))
                   (LIST FN))))
               (CAR FN)))
      (SETQ FORALL-ENDPTR (LASTPAIR FORALL-ENDPTR))
      (SETQ FN (CDR FN))
      (GO LOOPLABEL))) 
(PUT 'GCREF_ESELECT 'NUMBER-OF-ARGS 1) 
(PUT 'GCREF_ESELECT 'DEFINED-ON-LINE '88) 
(PUT 'GCREF_ESELECT 'DEFINED-IN-FILE 'GCREF/GCREF.RED) 
(PUT 'GCREF_ESELECT 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE GCREF_ESELECT (IDL)
    (PROG (FN FORALL-RESULT FORALL-ENDPTR)
      (SETQ FN IDL)
     STARTOVER
      (COND ((NULL FN) (RETURN NIL)))
      (SETQ FORALL-RESULT
              ((LAMBDA (FN)
                 (COND
                  ((AND (FLAGP FN 'EXPORTED) (NOT (MEMQ FN GCREF_NOLIST*)))
                   (LIST FN))))
               (CAR FN)))
      (SETQ FORALL-ENDPTR (LASTPAIR FORALL-RESULT))
      (SETQ FN (CDR FN))
      (COND ((ATOM FORALL-ENDPTR) (GO STARTOVER)))
     LOOPLABEL
      (COND ((NULL FN) (RETURN FORALL-RESULT)))
      (RPLACD FORALL-ENDPTR
              ((LAMBDA (FN)
                 (COND
                  ((AND (FLAGP FN 'EXPORTED) (NOT (MEMQ FN GCREF_NOLIST*)))
                   (LIST FN))))
               (CAR FN)))
      (SETQ FORALL-ENDPTR (LASTPAIR FORALL-ENDPTR))
      (SETQ FN (CDR FN))
      (GO LOOPLABEL))) 
(PUT 'GCREF_MKEGRAPH 'NUMBER-OF-ARGS 1) 
(PUT 'GCREF_MKEGRAPH 'DEFINED-ON-LINE '93) 
(PUT 'GCREF_MKEGRAPH 'DEFINED-IN-FILE 'GCREF/GCREF.RED) 
(PUT 'GCREF_MKEGRAPH 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE GCREF_MKEGRAPH (SEEN)
    (COND (*GCREFUDG (GCREF_MKEGRAPH-UDG SEEN)) (T (GCREF_MKEGRAPH-TGF SEEN)))) 
(PUT 'GCREF_MKEGRAPH-TGF 'NUMBER-OF-ARGS 1) 
(PUT 'GCREF_MKEGRAPH-TGF 'DEFINED-ON-LINE '99) 
(PUT 'GCREF_MKEGRAPH-TGF 'DEFINED-IN-FILE 'GCREF/GCREF.RED) 
(PUT 'GCREF_MKEGRAPH-TGF 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE GCREF_MKEGRAPH-TGF (SEEN)
    (PROG (RNODES)
      (SETQ RNODES (GCREF_RMKNODE-TGF SEEN))
      (PROG (NODE)
        (SETQ NODE RNODES)
       LAB
        (COND ((NULL NODE) (RETURN NIL)))
        ((LAMBDA (NODE) (GCREF_MKNODE-TGF NODE)) (CAR NODE))
        (SETQ NODE (CDR NODE))
        (GO LAB))
      (PRIN2T "#")
      (PROG (NODE)
        (SETQ NODE RNODES)
       LAB
        (COND ((NULL NODE) (RETURN NIL)))
        ((LAMBDA (NODE)
           (GCREF_MKEDGES-TGF NODE (GCREF_SELECT (GET NODE 'CALLS))))
         (CAR NODE))
        (SETQ NODE (CDR NODE))
        (GO LAB)))) 
(PUT 'GCREF_RMKNODE-TGF 'NUMBER-OF-ARGS 1) 
(PUT 'GCREF_RMKNODE-TGF 'DEFINED-ON-LINE '109) 
(PUT 'GCREF_RMKNODE-TGF 'DEFINED-IN-FILE 'GCREF/GCREF.RED) 
(PUT 'GCREF_RMKNODE-TGF 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE GCREF_RMKNODE-TGF (FNL)
    (PROG (RNODES)
      (PROG ()
       WHILELABEL
        (COND ((NOT FNL) (RETURN NIL)))
        (PROGN
         (SETQ FN (PROG1 (CAR FNL) (SETQ FNL (CDR FNL))))
         (COND
          ((NOT (MEMQ FN RNODES))
           (PROGN
            (PROGN (SETQ RNODES (CONS FN RNODES)) FN)
            (SETQ FNL (NCONC FNL (GCREF_SELECT (GET FN 'CALLS))))))))
        (GO WHILELABEL))
      (RETURN RNODES))) 
(PUT 'GCREF_MKEGRAPH-UDG 'NUMBER-OF-ARGS 1) 
(PUT 'GCREF_MKEGRAPH-UDG 'DEFINED-ON-LINE '125) 
(PUT 'GCREF_MKEGRAPH-UDG 'DEFINED-IN-FILE 'GCREF/GCREF.RED) 
(PUT 'GCREF_MKEGRAPH-UDG 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE GCREF_MKEGRAPH-UDG (EFNL)
    (PROG (EFN)
      (SETQ EFN EFNL)
     LAB
      (COND ((NULL EFN) (RETURN NIL)))
      ((LAMBDA (EFN)
         (PROGN (PRIN2T "[") (GCREF_RMKNODE EFN) (PRIN2T "]") (TERPRI)))
       (CAR EFN))
      (SETQ EFN (CDR EFN))
      (GO LAB))) 
(PUT 'GCREF_RMKNODE 'NUMBER-OF-ARGS 1) 
(PUT 'GCREF_RMKNODE 'DEFINED-ON-LINE '133) 
(PUT 'GCREF_RMKNODE 'DEFINED-IN-FILE 'GCREF/GCREF.RED) 
(PUT 'GCREF_RMKNODE 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE GCREF_RMKNODE (FN)
    (PROG (FNL READYL)
      (GCREF_MKNODE FN)
      (SETQ READYL (LIST FN))
      (SETQ FNL (GCREF_SELECT (GET FN 'CALLS)))
      (PROG ()
       WHILELABEL
        (COND ((NOT FNL) (RETURN NIL)))
        (PROGN
         (SETQ FN (CAR FNL))
         (SETQ FNL (CDR FNL))
         (COND
          ((NOT (MEMQ FN READYL))
           (PROGN
            (SETQ READYL (CONS FN READYL))
            (PRIN2T ",")
            (COND ((FLAGP FN 'EXPORTED) (GCREF_MKNODE1 FN NIL))
                  (T
                   (PROGN
                    (GCREF_MKNODE FN)
                    (SETQ FNL
                            (NCONC FNL (GCREF_SELECT (GET FN 'CALLS)))))))))))
        (GO WHILELABEL)))) 
(PUT 'GCREF_MKGRAPH 'NUMBER-OF-ARGS 1) 
(PUT 'GCREF_MKGRAPH 'DEFINED-ON-LINE '154) 
(PUT 'GCREF_MKGRAPH 'DEFINED-IN-FILE 'GCREF/GCREF.RED) 
(PUT 'GCREF_MKGRAPH 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE GCREF_MKGRAPH (SEEN)
    (COND (*GCREFUDG (GCREF_MKGRAPH-UDG SEEN)) (T (GCREF_MKGRAPH-TGF SEEN)))) 
(PUT 'GCREF_MKGRAPH-TGF 'NUMBER-OF-ARGS 1) 
(PUT 'GCREF_MKGRAPH-TGF 'DEFINED-ON-LINE '160) 
(PUT 'GCREF_MKGRAPH-TGF 'DEFINED-IN-FILE 'GCREF/GCREF.RED) 
(PUT 'GCREF_MKGRAPH-TGF 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE GCREF_MKGRAPH-TGF (SEEN)
    (PROGN
     (PROG (FN)
       (SETQ FN SEEN)
      LAB
       (COND ((NULL FN) (RETURN NIL)))
       ((LAMBDA (FN) (GCREF_MKNODE-TGF FN)) (CAR FN))
       (SETQ FN (CDR FN))
       (GO LAB))
     (PRIN2T "#")
     (PROG (FN)
       (SETQ FN SEEN)
      LAB
       (COND ((NULL FN) (RETURN NIL)))
       ((LAMBDA (FN) (GCREF_MKEDGES-TGF FN (GCREF_SELECT (GET FN 'CALLS))))
        (CAR FN))
       (SETQ FN (CDR FN))
       (GO LAB)))) 
(PUT 'GCREF_MKNODE-TGF 'NUMBER-OF-ARGS 1) 
(PUT 'GCREF_MKNODE-TGF 'DEFINED-ON-LINE '169) 
(PUT 'GCREF_MKNODE-TGF 'DEFINED-IN-FILE 'GCREF/GCREF.RED) 
(PUT 'GCREF_MKNODE-TGF 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE GCREF_MKNODE-TGF (FN) (PROGN (PRIN2 FN) (PRIN2 " ") (PRIN2T FN) NIL)) 
(PUT 'GCREF_MKEDGES-TGF 'NUMBER-OF-ARGS 2) 
(PUT 'GCREF_MKEDGES-TGF 'DEFINED-ON-LINE '176) 
(PUT 'GCREF_MKEDGES-TGF 'DEFINED-IN-FILE 'GCREF/GCREF.RED) 
(PUT 'GCREF_MKEDGES-TGF 'PROCEDURE_TYPE
     '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE GCREF_MKEDGES-TGF (FN CALLS)
    (PROGN
     (PROG (C)
       (SETQ C CALLS)
      LAB
       (COND ((NULL C) (RETURN NIL)))
       ((LAMBDA (C) (PROGN (PRIN2 FN) (PRIN2 " ") (PRIN2T C))) (CAR C))
       (SETQ C (CDR C))
       (GO LAB)))) 
(PUT 'GCREF_MKGRAPH-UDG 'NUMBER-OF-ARGS 1) 
(PUT 'GCREF_MKGRAPH-UDG 'DEFINED-ON-LINE '185) 
(PUT 'GCREF_MKGRAPH-UDG 'DEFINED-IN-FILE 'GCREF/GCREF.RED) 
(PUT 'GCREF_MKGRAPH-UDG 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE GCREF_MKGRAPH-UDG (SEEN)
    (PROGN
     (PRIN2T "[")
     (COND (SEEN (PROGN (GCREF_MKNODE-UDG (CAR SEEN)) (SETQ SEEN (CDR SEEN)))))
     (PROG (FN)
       (SETQ FN SEEN)
      LAB
       (COND ((NULL FN) (RETURN NIL)))
       ((LAMBDA (FN) (PROGN (PRIN2T ",") (GCREF_MKNODE-UDG FN))) (CAR FN))
       (SETQ FN (CDR FN))
       (GO LAB))
     (PRIN2T "]"))) 
(PUT 'GCREF_MKNODE-UDG 'NUMBER-OF-ARGS 1) 
(PUT 'GCREF_MKNODE-UDG 'DEFINED-ON-LINE '199) 
(PUT 'GCREF_MKNODE-UDG 'DEFINED-IN-FILE 'GCREF/GCREF.RED) 
(PUT 'GCREF_MKNODE-UDG 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE GCREF_MKNODE-UDG (FN) (GCREF_MKNODE1-UDG FN (GCREF_SELECT (GET FN 'CALLS)))) 
(PUT 'GCREF_MKNODE1-UDG 'NUMBER-OF-ARGS 2) 
(PUT 'GCREF_MKNODE1-UDG 'DEFINED-ON-LINE '202) 
(PUT 'GCREF_MKNODE1-UDG 'DEFINED-IN-FILE 'GCREF/GCREF.RED) 
(PUT 'GCREF_MKNODE1-UDG 'PROCEDURE_TYPE
     '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE GCREF_MKNODE1-UDG (FN C)
    (PROGN
     (PRIN2 "l(\"")
     (PRIN2 FN)
     (PRIN2T "\",")
     (PRIN2 "n(\"mytype\",[a(\"OBJECT\",\"")
     (PRIN2 FN)
     (PRIN2 "\")")
     (COND
      ((FLAGP FN 'EXPORTED)
       (PROGN (PRIN2T ",") (PRIN2 "a(\"BORDER\",\"double\")"))))
     (PRIN2 "],[")
     (GCREF_MKEDGES-UDG C)
     (PRIN2 "]))"))) 
(PUT 'GCREF_MKEDGES-UDG 'NUMBER-OF-ARGS 1) 
(PUT 'GCREF_MKEDGES-UDG 'DEFINED-ON-LINE '219) 
(PUT 'GCREF_MKEDGES-UDG 'DEFINED-IN-FILE 'GCREF/GCREF.RED) 
(PUT 'GCREF_MKEDGES-UDG 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE GCREF_MKEDGES-UDG (CALLS)
    (PROGN
     (COND
      (CALLS
       (PROGN
        (TERPRI)
        (GCREF_MKEDGE-UDG (CAR CALLS))
        (SETQ CALLS (CDR CALLS)))))
     (PROG (C)
       (SETQ C CALLS)
      LAB
       (COND ((NULL C) (RETURN NIL)))
       ((LAMBDA (C) (PROGN (PRIN2T ",") (GCREF_MKEDGE-UDG C))) (CAR C))
       (SETQ C (CDR C))
       (GO LAB)))) 
(PUT 'GCREF_MKEDGE-UDG 'NUMBER-OF-ARGS 1) 
(PUT 'GCREF_MKEDGE-UDG 'DEFINED-ON-LINE '232) 
(PUT 'GCREF_MKEDGE-UDG 'DEFINED-IN-FILE 'GCREF/GCREF.RED) 
(PUT 'GCREF_MKEDGE-UDG 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE GCREF_MKEDGE-UDG (C)
    (PROGN
     (PRIN2 "l(\"")
     (PRIN2 (GENSYM))
     (PRIN2 "\",e(\"mytype\",[],r(\"")
     (PRIN2 C)
     (PRIN2 "\")))"))) 
(PUT 'GCREF_REMPROPS 'NUMBER-OF-ARGS 0) 
(PUT 'GCREF_REMPROPS 'DEFINED-ON-LINE '241) 
(PUT 'GCREF_REMPROPS 'DEFINED-IN-FILE 'GCREF/GCREF.RED) 
(PUT 'GCREF_REMPROPS 'PROCEDURE_TYPE '(ARROW UNIT GENERAL)) 
(DE GCREF_REMPROPS NIL
    (PROGN
     (REMPROPSS SEEN* '(GALL CALLS GLOBS CALLEDBY ALSOIS SAMEAS))
     (REMFLAGSS SEEN* '(SEEN CINTHIS DEFD))
     (REMFLAGSS GCREF_EXPORTL* '(EXPORTED))
     (REMPROPSS GSEEN* '(USEDBY USEDUNBY BOUNDBY SETBY))
     (REMFLAGSS GSEEN* '(DCLGLB GSEEN GLB2RF GLB2BD GLB2ST))
     (PROG (Z)
       (SETQ Z TSEEN*)
      LAB
       (COND ((NULL Z) (RETURN NIL)))
       ((LAMBDA (Z) (REMPROP (CAR Z) 'FUNS)) (CAR Z))
       (SETQ Z (CDR Z))
       (GO LAB))
     (SETQ HAVEARGS* (SETQ GSEEN* (SETQ SEEN* (SETQ TSEEN* NIL)))))) 
(PUT 'GCREF_OFF1 'NUMBER-OF-ARGS 0) 
(PUT 'GCREF_OFF1 'DEFINED-ON-LINE '253) 
(PUT 'GCREF_OFF1 'DEFINED-IN-FILE 'GCREF/GCREF.RED) 
(PUT 'GCREF_OFF1 'PROCEDURE_TYPE '(ARROW UNIT GENERAL)) 
(DE GCREF_OFF1 NIL
    (PROG (X)
      (SETQ DFPRINT* NIL)
      (SETQ *DEFN NIL)
      (COND ((NOT *ALGEBRAICS) (REMPROP 'ALGEBRAIC 'NEWNAM)))
      (PROG (FN)
        (SETQ FN SEEN*)
       LAB
        (COND ((NULL FN) (RETURN NIL)))
        ((LAMBDA (FN)
           (PROGN
            (COND ((NULL (GET FN 'CALLEDBY)) (SETQ ENTPTS* (CONS FN ENTPTS*))))
            (UNDEFDCHK FN)))
         (CAR FN))
        (SETQ FN (CDR FN))
        (GO LAB))
      (SETQ TSEEN*
              (PROG (Z FORALL-RESULT FORALL-ENDPTR)
                (SETQ Z (IDSORT TSEEN*))
                (COND ((NULL Z) (RETURN NIL)))
                (SETQ FORALL-RESULT
                        (SETQ FORALL-ENDPTR
                                (CONS
                                 ((LAMBDA (Z)
                                    (PROGN
                                     (REMPROP Z 'TSEEN)
                                     (PROG (FN)
                                       (SETQ FN (SETQ X (GET Z 'FUNS)))
                                      LAB
                                       (COND ((NULL FN) (RETURN NIL)))
                                       ((LAMBDA (FN)
                                          (PROGN
                                           (UNDEFDCHK FN)
                                           (REMPROP FN 'RCCNAM)))
                                        (CAR FN))
                                       (SETQ FN (CDR FN))
                                       (GO LAB))
                                     (CONS Z X)))
                                  (CAR Z))
                                 NIL)))
               LOOPLABEL
                (SETQ Z (CDR Z))
                (COND ((NULL Z) (RETURN FORALL-RESULT)))
                (RPLACD FORALL-ENDPTR
                        (CONS
                         ((LAMBDA (Z)
                            (PROGN
                             (REMPROP Z 'TSEEN)
                             (PROG (FN)
                               (SETQ FN (SETQ X (GET Z 'FUNS)))
                              LAB
                               (COND ((NULL FN) (RETURN NIL)))
                               ((LAMBDA (FN)
                                  (PROGN (UNDEFDCHK FN) (REMPROP FN 'RCCNAM)))
                                (CAR FN))
                               (SETQ FN (CDR FN))
                               (GO LAB))
                             (CONS Z X)))
                          (CAR Z))
                         NIL))
                (SETQ FORALL-ENDPTR (CDR FORALL-ENDPTR))
                (GO LOOPLABEL)))
      (PROG (Z)
        (SETQ Z GSEEN*)
       LAB
        (COND ((NULL Z) (RETURN NIL)))
        ((LAMBDA (Z)
           (COND ((GET Z 'USEDUNBY) (SETQ UNDEFG* (CONS Z UNDEFG*)))))
         (CAR Z))
        (SETQ Z (CDR Z))
        (GO LAB)))) 
(ENDMODULE) 