(cl:declaim (cl:optimize cl:debug cl:safety))
(cl:declaim (sb-ext:muffle-conditions sb-ext:compiler-note cl:style-warning))
(MODULE (LIST 'INTTAYLR)) 
(FLUID '(CONST TAYLORASSLIST TAYLORVARIABLE)) 
(EXPORTS
 (LIST 'TAYLORFORM 'TAYLORFORMP 'TAYLOREVALUATE 'RETURN0 'TAYLORPLUS
       'INITIALTAYLORPLUS 'TAYLORMINUS 'INITIALTAYLORMINUS 'TAYLOROPTMINUS
       'TAYLOROPTPLUS 'TAYLORCTIMES 'INITIALTAYLORTIMES 'TAYLOROPTCTIMES
       'TAYLORSQRTX 'INITIALTAYLORSQRTX 'TAYLORQUOTIENT 'INITIALTAYLORQUOTIENT
       'TAYLORFORMERSQRT 'TAYLORBTIMES 'TAYLORFORMERTIMES 'TAYLORFORMEREXPT)) 
(PUT 'TAYLORFORM 'NUMBER-OF-ARGS 1) 
(PUT 'TAYLORFORM 'DEFINED-ON-LINE '39) 
(PUT 'TAYLORFORM 'DEFINED-IN-FILE 'ALGINT/INTTAYLR.RED) 
(PUT 'TAYLORFORM 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE TAYLORFORM (SQ)
    (COND
     ((INVOLVESF (CDR SQ) TAYLORVARIABLE)
      (TAYLORFORMP (LIST 'QUOTIENT (TAYPREPF (CAR SQ)) (TAYPREPF (CDR SQ)))))
     ((IEQUAL 1 (CDR SQ)) (TAYLORFORMP (TAYPREPF (CAR SQ))))
     (T
      (TAYLORFORMP
       (LIST 'CONSTANTTIMES (TAYPREPF (CAR SQ)) (MK*SQ (CONS 1 (CDR SQ)))))))) 
(PUT 'TAYLORFORMP 'NUMBER-OF-ARGS 1) 
(PUT 'TAYLORFORMP 'DEFINED-ON-LINE '50) 
(PUT 'TAYLORFORMP 'DEFINED-IN-FILE 'ALGINT/INTTAYLR.RED) 
(PUT 'TAYLORFORMP 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE TAYLORFORMP (PF)
    (COND ((NULL PF) NIL)
          ((NOT (DEPENDSP PF TAYLORVARIABLE)) (TAYLORCONST (SIMP PF)))
          (T
           (PROG (FN INITIAL ARGS N)
             (COND
              ((ATOM PF)
               (COND
                ((EQ PF TAYLORVARIABLE)
                 (RETURN (TAYLORFORMP (LIST 'EXPT PF 1))))
                (T (INTERR "False atom in taylorformp")))))
             (COND ((TAYLORP PF) (RETURN PF)))
             (COND
              ((AND (EQ (CAR PF) 'SQRT) (SETQ FN (ASSOC PF TAYLORASSLIST)))
               (GO LOOKUPOK)))
             (SETQ FN (GET (CAR PF) 'TAYLORFORMER))
             (COND ((NULL FN) (GO ORDINARY)))
             (SETQ FN (APPLY1 FN (CDR PF)))
             (COND
              ((EQ (CAR PF) 'SQRT)
               (SETQ TAYLORASSLIST (CONS (CONS PF FN) TAYLORASSLIST))))
             (RETURN FN)
            ORDINARY
             (SETQ ARGS
                     (PROG (J FORALL-RESULT FORALL-ENDPTR)
                       (SETQ J (CDR PF))
                       (COND ((NULL J) (RETURN NIL)))
                       (SETQ FORALL-RESULT
                               (SETQ FORALL-ENDPTR
                                       (CONS
                                        ((LAMBDA (J) (TAYLORFORMP J)) (CAR J))
                                        NIL)))
                      LOOPLABEL
                       (SETQ J (CDR J))
                       (COND ((NULL J) (RETURN FORALL-RESULT)))
                       (RPLACD FORALL-ENDPTR
                               (CONS ((LAMBDA (J) (TAYLORFORMP J)) (CAR J))
                                     NIL))
                       (SETQ FORALL-ENDPTR (CDR FORALL-ENDPTR))
                       (GO LOOPLABEL)))
             (SETQ FN (GET (CAR PF) 'TAYLOROPT))
             (COND ((NULL FN) (GO NOOPTIMISATION)))
             (SETQ FN (APPLY1 FN ARGS))
             (COND (FN (GO ANANSWER)))
            NOOPTIMISATION
             (SETQ FN (GET (CAR PF) 'TAYLORFUNCTION))
             (COND ((NULL FN) (INTERR "No Taylor function provided")))
             (SETQ FN (CONS FN ARGS))
             (SETQ INITIAL (GET (CAR PF) 'INITIALTAYLORFUNCTION))
             (COND ((NULL INITIAL) (INTERR "No initial Taylor function")))
             (SETQ INITIAL
                     (LISPAPPLY INITIAL
                                (LIST
                                 (PROG (U FORALL-RESULT FORALL-ENDPTR)
                                   (SETQ U (CDR FN))
                                   (COND ((NULL U) (RETURN NIL)))
                                   (SETQ FORALL-RESULT
                                           (SETQ FORALL-ENDPTR
                                                   (CONS
                                                    ((LAMBDA (U) (FIRSTTERM U))
                                                     (CAR U))
                                                    NIL)))
                                  LOOPLABEL
                                   (SETQ U (CDR U))
                                   (COND ((NULL U) (RETURN FORALL-RESULT)))
                                   (RPLACD FORALL-ENDPTR
                                           (CONS
                                            ((LAMBDA (U) (FIRSTTERM U))
                                             (CAR U))
                                            NIL))
                                   (SETQ FORALL-ENDPTR (CDR FORALL-ENDPTR))
                                   (GO LOOPLABEL)))))
             (SETQ N (CAR INITIAL))
             (SETQ FN (LIST FN (CONS N N) INITIAL))
             (PROG ()
              WHILELABEL
               (COND ((NOT (NULL (CAR (CDR INITIAL)))) (RETURN NIL)))
               (PROGN
                (SETQ N (PLUS N 1))
                (COND (*TRA (LPRIM (LIST "Increasing accuracy to" N))))
                (SETQ INITIAL (CONS N (TAYLOREVALUATE FN N)))
                (SETQ FN (LIST (CAR FN) (CONS N N) INITIAL))
                NIL)
               (GO WHILELABEL))
            ANANSWER
             (RETURN FN)
            LOOKUPOK
             (RETURN (CDR FN)))))) 
(PUT 'TAYLOREVALUATE 'NUMBER-OF-ARGS 2) 
(PUT 'TAYLOREVALUATE 'DEFINED-ON-LINE '125) 
(PUT 'TAYLOREVALUATE 'DEFINED-IN-FILE 'ALGINT/INTTAYLR.RED) 
(PUT 'TAYLOREVALUATE 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE TAYLOREVALUATE (TEXPR N)
    (COND ((LESSP N (CAADR TEXPR)) (CONS NIL 1))
          ((GREATERP N (CDADR TEXPR)) (TAYLOREVAL2 TEXPR N))
          (T
           (PROG (U)
             (SETQ U (ASSOC N (CDDR TEXPR)))
             (COND (U (RETURN (CDR U))) (T (RETURN (TAYLOREVAL2 TEXPR N)))))))) 
(PUT 'TAYLOREVAL2 'NUMBER-OF-ARGS 2) 
(PUT 'TAYLOREVAL2 'DEFINED-ON-LINE '139) 
(PUT 'TAYLOREVAL2 'DEFINED-IN-FILE 'ALGINT/INTTAYLR.RED) 
(PUT 'TAYLOREVAL2 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE TAYLOREVAL2 (TEXPR N)
    (PROG (U)
      (SETQ U (APPLY3 (CAAR TEXPR) N TEXPR (CDR (CAR TEXPR))))
      (COND ((EQ 'RETURN0 (CAAR TEXPR)) (RETURN U)))
      (RPLACD (CDR TEXPR) (CONS (CONS N U) (CDDR TEXPR)))
      (COND ((GREATERP N (CDADR TEXPR)) (RPLACD (CADR TEXPR) N)))
      (RETURN U))) 
(PUT 'TAYLORCONST 'NUMBER-OF-ARGS 1) 
(PUT 'TAYLORCONST 'DEFINED-ON-LINE '156) 
(PUT 'TAYLORCONST 'DEFINED-IN-FILE 'ALGINT/INTTAYLR.RED) 
(PUT 'TAYLORCONST 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE TAYLORCONST (SQ) (LIST (CONS 'RETURN0 NIL) (CONS 0 0) (CONS 0 SQ))) 
(PUT 'RETURN0 'NUMBER-OF-ARGS 3) 
(PUT 'RETURN0 'DEFINED-ON-LINE '160) 
(PUT 'RETURN0 'DEFINED-IN-FILE 'ALGINT/INTTAYLR.RED) 
(PUT 'RETURN0 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL GENERAL) GENERAL)) 
(DE RETURN0 (A B C) (CONS NIL 1)) 
(FLAG '(RETURN0) 'TAYLOR) 
(PUT 'FIRSTTERM 'NUMBER-OF-ARGS 1) 
(PUT 'FIRSTTERM 'DEFINED-ON-LINE '166) 
(PUT 'FIRSTTERM 'DEFINED-IN-FILE 'ALGINT/INTTAYLR.RED) 
(PUT 'FIRSTTERM 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE FIRSTTERM (TEXPR)
    (PROG (N I)
      (SETQ I (CAADR TEXPR))
     TRYNEXT
      (SETQ N (TAYLOREVALUATE TEXPR I))
      (COND ((CAR N) (RETURN (CONS I N))))
      (COND ((GREATERP I 50) (INTERR "Potentially zero Taylor series")))
      (SETQ I (IADD1 I))
      (RPLACA (CADR TEXPR) I)
      (GO TRYNEXT))) 
(PUT 'TAYLORONETERM 'NUMBER-OF-ARGS 1) 
(PUT 'TAYLORONETERM 'DEFINED-ON-LINE '182) 
(PUT 'TAYLORONETERM 'DEFINED-IN-FILE 'ALGINT/INTTAYLR.RED) 
(PUT 'TAYLORONETERM 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE TAYLORONETERM (U) (AND (EQ 'RETURN0 (CAAR U)) (EQUAL (CAADR U) (CDADR U)))) 
(PUT 'TAYPREPF 'NUMBER-OF-ARGS 1) 
(PUT 'TAYPREPF 'DEFINED-ON-LINE '205) 
(PUT 'TAYPREPF 'DEFINED-IN-FILE 'ALGINT/INTTAYLR.RED) 
(PUT 'TAYPREPF 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE TAYPREPF (SF)
    (COND ((ATOM SF) SF)
          ((ATOM (CAAAR SF)) (TAYLORPOLY (MAKEMAINVAR SF TAYLORVARIABLE)))
          ((NULL (CDR SF)) (TAYPREPT (CAR SF)))
          (T (LIST 'PLUS (TAYPREPT (CAR SF)) (TAYPREPF (CDR SF)))))) 
(PUT 'TAYPREPT 'NUMBER-OF-ARGS 1) 
(PUT 'TAYPREPT 'DEFINED-ON-LINE '215) 
(PUT 'TAYPREPT 'DEFINED-IN-FILE 'ALGINT/INTTAYLR.RED) 
(PUT 'TAYPREPT 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE TAYPREPT (TERM)
    (COND
     ((EQUAL (CDAR TERM) 1)
      (COND ((EQUAL (CDR TERM) 1) (CAAR TERM))
            (T (LIST 'TIMES (CAAR TERM) (TAYPREPF (CDR TERM))))))
     ((EQUAL (CDR TERM) 1) (LIST 'EXPT (CAAR TERM) (CDAR TERM)))
     (T
      (LIST 'TIMES (LIST 'EXPT (CAAR TERM) (CDAR TERM))
            (TAYPREPF (CDR TERM)))))) 
(PUT 'TAYLORPOLY 'NUMBER-OF-ARGS 1) 
(PUT 'TAYLORPOLY 'DEFINED-ON-LINE '226) 
(PUT 'TAYLORPOLY 'DEFINED-IN-FILE 'ALGINT/INTTAYLR.RED) 
(PUT 'TAYLORPOLY 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE TAYLORPOLY (SF)
    (PROG (TMAX TMIN U)
      (SETQ TMAX (SETQ TMIN (CDAAR SF)))
      (PROG ()
       WHILELABEL
        (COND ((NOT SF) (RETURN NIL)))
        (COND
         ((OR (ATOM SF) (NEQ (CAAAR SF) TAYLORVARIABLE))
          (PROGN
           (SETQ TMIN 0)
           (SETQ U (CONS (CONS 0 (CONS SF 1)) U))
           (SETQ SF NIL)))
         (T
          (PROGN
           (SETQ U (CONS (CONS (SETQ TMIN (CDAAR SF)) (CONS (CDAR SF) 1)) U))
           (SETQ SF (CDR SF)))))
        (GO WHILELABEL))
      (RETURN (CONS (LIST 'RETURN0) (CONS (CONS TMIN TMAX) U))))) 
(PUT 'TAYLORPLUS 'NUMBER-OF-ARGS 3) 
(PUT 'TAYLORPLUS 'DEFINED-ON-LINE '244) 
(PUT 'TAYLORPLUS 'DEFINED-IN-FILE 'ALGINT/INTTAYLR.RED) 
(PUT 'TAYLORPLUS 'PROCEDURE_TYPE
     '(ARROW (TIMES GENERAL GENERAL GENERAL) GENERAL)) 
(DE TAYLORPLUS (N TEXPR ARGS)
    (MAPPLY (FUNCTION *ADDSQ)
            (PROG (U FORALL-RESULT FORALL-ENDPTR)
              (SETQ U ARGS)
              (COND ((NULL U) (RETURN NIL)))
              (SETQ FORALL-RESULT
                      (SETQ FORALL-ENDPTR
                              (CONS ((LAMBDA (U) (TAYLOREVALUATE U N)) (CAR U))
                                    NIL)))
             LOOPLABEL
              (SETQ U (CDR U))
              (COND ((NULL U) (RETURN FORALL-RESULT)))
              (RPLACD FORALL-ENDPTR
                      (CONS ((LAMBDA (U) (TAYLOREVALUATE U N)) (CAR U)) NIL))
              (SETQ FORALL-ENDPTR (CDR FORALL-ENDPTR))
              (GO LOOPLABEL)))) 
(PUT 'INITIALTAYLORPLUS 'NUMBER-OF-ARGS 1) 
(PUT 'INITIALTAYLORPLUS 'DEFINED-ON-LINE '249) 
(PUT 'INITIALTAYLORPLUS 'DEFINED-IN-FILE 'ALGINT/INTTAYLR.RED) 
(PUT 'INITIALTAYLORPLUS 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE INITIALTAYLORPLUS (SLIST)
    (PROG (N NUMLST)
      (SETQ N (MAPPLY (FUNCTION MIN2) (MAPOVERCAR SLIST)))
      (SETQ NUMLST NIL)
      (PROG ()
       WHILELABEL
        (COND ((NOT SLIST) (RETURN NIL)))
        (PROGN
         (COND
          ((IEQUAL (CAAR SLIST) N) (SETQ NUMLST (CONS (CDAR SLIST) NUMLST))))
         (SETQ SLIST (CDR SLIST)))
        (GO WHILELABEL))
      (RETURN (CONS N (MAPPLY (FUNCTION *ADDSQ) NUMLST))))) 
(PUT 'PLUS 'TAYLORFUNCTION 'TAYLORPLUS) 
(PUT 'PLUS 'INITIALTAYLORFUNCTION 'INITIALTAYLORPLUS) 
(PUT 'TAYLORMINUS 'NUMBER-OF-ARGS 3) 
(PUT 'TAYLORMINUS 'DEFINED-ON-LINE '267) 
(PUT 'TAYLORMINUS 'DEFINED-IN-FILE 'ALGINT/INTTAYLR.RED) 
(PUT 'TAYLORMINUS 'PROCEDURE_TYPE
     '(ARROW (TIMES GENERAL GENERAL GENERAL) GENERAL)) 
(DE TAYLORMINUS (N TEXPR ARGS) (NEGSQ (TAYLOREVALUATE (CAR ARGS) N))) 
(PUT 'INITIALTAYLORMINUS 'NUMBER-OF-ARGS 1) 
(PUT 'INITIALTAYLORMINUS 'DEFINED-ON-LINE '271) 
(PUT 'INITIALTAYLORMINUS 'DEFINED-IN-FILE 'ALGINT/INTTAYLR.RED) 
(PUT 'INITIALTAYLORMINUS 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE INITIALTAYLORMINUS (SLIST) (CONS (CAAR SLIST) (NEGSQ (CDAR SLIST)))) 
(PUT 'MINUS 'TAYLORFUNCTION 'TAYLORMINUS) 
(PUT 'MINUS 'INITIALTAYLORFUNCTION 'INITIALTAYLORMINUS) 
(FLAG '(TAYLORPLUS TAYLORMINUS) 'TAYLOR) 
(PUT 'TAYLOROPTMINUS 'NUMBER-OF-ARGS 1) 
(PUT 'TAYLOROPTMINUS 'DEFINED-ON-LINE '282) 
(PUT 'TAYLOROPTMINUS 'DEFINED-IN-FILE 'ALGINT/INTTAYLR.RED) 
(PUT 'TAYLOROPTMINUS 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE TAYLOROPTMINUS (U)
    (COND
     ((EQ 'RETURN0 (CAAR (CAR U)))
      (CONS (CAR (CAR U))
            (CONS (CADR (CAR U)) (TAYLORNEGLIST (CDDR (CAR U))))))
     ((EQ 'TAYLORCTIMES (CAAR (CAR U)))
      (PROG (CONST)
        (SETQ U (CAR U))
        (SETQ CONST (CADDR (CAR U)))
        (SETQ CONST
                (CONS (CAR CONST)
                      (CONS (CADR CONST) (TAYLORNEGLIST (CDDR CONST)))))
        (RETURN
         (CONS (LIST (CAAR U) (CADR (CAR U)) CONST)
               (CONS (CADR U) (TAYLORNEGLIST (CDDR U)))))))
     (T NIL))) 
(PUT 'MINUS 'TAYLOROPT 'TAYLOROPTMINUS) 
(PUT 'TAYLORNEGLIST 'NUMBER-OF-ARGS 1) 
(PUT 'TAYLORNEGLIST 'DEFINED-ON-LINE '306) 
(PUT 'TAYLORNEGLIST 'DEFINED-IN-FILE 'ALGINT/INTTAYLR.RED) 
(PUT 'TAYLORNEGLIST 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE TAYLORNEGLIST (U)
    (PROG (V FORALL-RESULT FORALL-ENDPTR)
      (SETQ V U)
      (COND ((NULL V) (RETURN NIL)))
      (SETQ FORALL-RESULT
              (SETQ FORALL-ENDPTR
                      (CONS
                       ((LAMBDA (V) (CONS (CAR V) (NEGSQ (CDR V)))) (CAR V))
                       NIL)))
     LOOPLABEL
      (SETQ V (CDR V))
      (COND ((NULL V) (RETURN FORALL-RESULT)))
      (RPLACD FORALL-ENDPTR
              (CONS ((LAMBDA (V) (CONS (CAR V) (NEGSQ (CDR V)))) (CAR V)) NIL))
      (SETQ FORALL-ENDPTR (CDR FORALL-ENDPTR))
      (GO LOOPLABEL))) 
(PUT 'TAYLOROPTPLUS 'NUMBER-OF-ARGS 1) 
(PUT 'TAYLOROPTPLUS 'DEFINED-ON-LINE '310) 
(PUT 'TAYLOROPTPLUS 'DEFINED-IN-FILE 'ALGINT/INTTAYLR.RED) 
(PUT 'TAYLOROPTPLUS 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE TAYLOROPTPLUS (ARGS)
    (PROG (RET HARD U)
      (SETQ U ARGS)
      (PROG ()
       WHILELABEL
        (COND ((NOT U) (RETURN NIL)))
        (PROGN
         (COND ((EQ 'RETURN0 (CAAR (CAR U))) (SETQ RET (CONS (CAR U) RET)))
               (T (SETQ HARD (CONS (CAR U) HARD))))
         (SETQ U (CDR U)))
        (GO WHILELABEL))
      (COND ((OR (NULL RET) (NULL (CDR RET))) (RETURN NIL)))
      (SETQ RET (MAPPLY (FUNCTION JOINRET) RET))
      (COND ((NULL HARD) (RETURN RET)))
      (RPLACA ARGS RET)
      (RPLACD ARGS HARD)
      (RETURN NIL))) 
(PUT 'PLUS 'TAYLOROPT 'TAYLOROPTPLUS) 
(PUT 'JOINRET 'NUMBER-OF-ARGS 2) 
(PUT 'JOINRET 'DEFINED-ON-LINE '332) 
(PUT 'JOINRET 'DEFINED-IN-FILE 'ALGINT/INTTAYLR.RED) 
(PUT 'JOINRET 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE JOINRET (U V)
    (PROG (NUMS A B AL)
      (SETQ NUMS (CONS (MIN2 (CAADR U) (CAADR V)) (MAX2 (CDADR U) (CDADR V))))
      (SETQ AL NIL)
      (SETQ U (CDDR U))
      (SETQ V (CDDR V))
      (PROG (I)
        (SETQ I (CAR NUMS))
       LAB
        (COND ((MINUSP (DIFFERENCE (CDR NUMS) I)) (RETURN NIL)))
        (PROGN
         (SETQ A (ASSOC I U))
         (SETQ B (ASSOC I V))
         (COND
          (A
           (COND (B (SETQ AL (CONS (CONS I (*ADDSQ (CDR A) (CDR B))) AL)))
                 (T (SETQ AL (CONS A AL)))))
          (B (SETQ AL (CONS B AL)))))
        (SETQ I (PLUS2 I 1))
        (GO LAB))
      (RETURN (CONS (LIST 'RETURN0) (CONS NUMS AL))))) 
(PUT 'TAYLORCTIMES 'NUMBER-OF-ARGS 3) 
(PUT 'TAYLORCTIMES 'DEFINED-ON-LINE '365) 
(PUT 'TAYLORCTIMES 'DEFINED-IN-FILE 'ALGINT/INTTAYLR.RED) 
(PUT 'TAYLORCTIMES 'PROCEDURE_TYPE
     '(ARROW (TIMES GENERAL GENERAL GENERAL) GENERAL)) 
(DE TAYLORCTIMES (N TEXPR ARGS)
    (*MULTSQ (TAYLOREVALUATE (CAR ARGS) (DIFFERENCE N (CAADR (CADR ARGS))))
             (TAYLOREVALUATE (CADR ARGS) (CAADR (CADR ARGS))))) 
(PUT 'INITIALTAYLORTIMES 'NUMBER-OF-ARGS 1) 
(PUT 'INITIALTAYLORTIMES 'DEFINED-ON-LINE '370) 
(PUT 'INITIALTAYLORTIMES 'DEFINED-IN-FILE 'ALGINT/INTTAYLR.RED) 
(PUT 'INITIALTAYLORTIMES 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE INITIALTAYLORTIMES (SLIST)
    (CONS (PLUS (CAAR SLIST) (CAADR SLIST))
          (*MULTSQ (CDAR SLIST) (CDADR SLIST)))) 
(PUT 'TAYLOROPTCTIMES 'NUMBER-OF-ARGS 1) 
(PUT 'TAYLOROPTCTIMES 'DEFINED-ON-LINE '375) 
(PUT 'TAYLOROPTCTIMES 'DEFINED-IN-FILE 'ALGINT/INTTAYLR.RED) 
(PUT 'TAYLOROPTCTIMES 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE TAYLOROPTCTIMES (U)
    (COND
     ((EQ 'TAYLORCTIMES (CAAR (CAR U)))
      (PROG (REALA CONST ICONST DEGG)
        (SETQ REALA (CADR (CAR (CAR U))))
        (SETQ CONST (CAR (CDDR (CADR U))))
        (SETQ ICONST (CADDR (CAR (CAR U))))
        (SETQ DEGG (PLUS (CAADR ICONST) (CAR CONST)))
        (SETQ ICONST
                (LIST (CAR ICONST) (CONS DEGG DEGG)
                      (CONS DEGG (*MULTSQ (CDAR (CDDR ICONST)) (CDR CONST)))))
        (RETURN
         (CONS (LIST 'TAYLORCTIMES REALA ICONST)
               (CONS
                (CONS (PLUS (CAADR (CAR U)) (CAR CONST))
                      (PLUS (CDADR (CAR U)) (CAR CONST)))
                (PROG (J FORALL-RESULT FORALL-ENDPTR)
                  (SETQ J (CDDR (CAR U)))
                  (COND ((NULL J) (RETURN NIL)))
                  (SETQ FORALL-RESULT
                          (SETQ FORALL-ENDPTR
                                  (CONS ((LAMBDA (J) (MULTCONST J)) (CAR J))
                                        NIL)))
                 LOOPLABEL
                  (SETQ J (CDR J))
                  (COND ((NULL J) (RETURN FORALL-RESULT)))
                  (RPLACD FORALL-ENDPTR
                          (CONS ((LAMBDA (J) (MULTCONST J)) (CAR J)) NIL))
                  (SETQ FORALL-ENDPTR (CDR FORALL-ENDPTR))
                  (GO LOOPLABEL)))))))
     ((EQ 'RETURN0 (CAAR (CAR U)))
      (PROG (CONST)
        (SETQ CONST (CAR (CDDR (CADR U))))
        (SETQ U (CAR U))
        (RETURN
         (CONS (CAR U)
               (CONS
                (CONS (PLUS (CAADR U) (CAR CONST))
                      (PLUS (CDADR U) (CAR CONST)))
                (PROG (J FORALL-RESULT FORALL-ENDPTR)
                  (SETQ J (CDDR U))
                  (COND ((NULL J) (RETURN NIL)))
                  (SETQ FORALL-RESULT
                          (SETQ FORALL-ENDPTR
                                  (CONS ((LAMBDA (J) (MULTCONST J)) (CAR J))
                                        NIL)))
                 LOOPLABEL
                  (SETQ J (CDR J))
                  (COND ((NULL J) (RETURN FORALL-RESULT)))
                  (RPLACD FORALL-ENDPTR
                          (CONS ((LAMBDA (J) (MULTCONST J)) (CAR J)) NIL))
                  (SETQ FORALL-ENDPTR (CDR FORALL-ENDPTR))
                  (GO LOOPLABEL)))))))
     (T NIL))) 
(PUT 'MULTCONST 'NUMBER-OF-ARGS 1) 
(PUT 'MULTCONST 'DEFINED-ON-LINE '409) 
(PUT 'MULTCONST 'DEFINED-IN-FILE 'ALGINT/INTTAYLR.RED) 
(PUT 'MULTCONST 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE MULTCONST (V)
    (CONS (PLUS (CAR V) (CAR CONST)) (*MULTSQ (CDR V) (CDR CONST)))) 
(PUT 'CONSTANTTIMES 'TAYLOROPT 'TAYLOROPTCTIMES) 
(PUT 'CONSTANTTIMES 'SIMPFN 'SIMPTIMES) 
(PUT 'CONSTANTTIMES 'TAYLORFUNCTION 'TAYLORCTIMES) 
(PUT 'CONSTANTTIMES 'INITIALTAYLORFUNCTION 'INITIALTAYLORTIMES) 
(PUT 'TAYLORBTIMES 'NUMBER-OF-ARGS 3) 
(PUT 'TAYLORBTIMES 'DEFINED-ON-LINE '420) 
(PUT 'TAYLORBTIMES 'DEFINED-IN-FILE 'ALGINT/INTTAYLR.RED) 
(PUT 'TAYLORBTIMES 'PROCEDURE_TYPE
     '(ARROW (TIMES GENERAL GENERAL GENERAL) GENERAL)) 
(DE TAYLORBTIMES (N TEXPR ARGS)
    (PROG (ANSWER N1 N2)
      (SETQ ANSWER (CONS NIL 1))
      (SETQ N1 (CAR (FIRSTTERM (CAR ARGS))))
      (SETQ N2 (CAR (FIRSTTERM (CADR ARGS))))
      (PROG (I)
        (SETQ I N1)
       LAB
        (COND ((MINUSP (DIFFERENCE (DIFFERENCE N N2) I)) (RETURN NIL)))
        (SETQ ANSWER
                (*ADDSQ ANSWER
                        (*MULTSQ (TAYLOREVALUATE (CADR ARGS) (DIFFERENCE N I))
                                 (TAYLOREVALUATE (CAR ARGS) I))))
        (SETQ I (PLUS2 I 1))
        (GO LAB))
      (RETURN ANSWER))) 
(PUT 'BINARYTIMES 'TAYLORFUNCTION 'TAYLORBTIMES) 
(PUT 'BINARYTIMES 'INITIALTAYLORFUNCTION 'INITIALTAYLORTIMES) 
(PUT 'BINARYTIMES 'SIMPFN 'SIMPTIMES) 
(PUT 'TAYLORFORMERTIMES 'NUMBER-OF-ARGS 1) 
(PUT 'TAYLORFORMERTIMES 'DEFINED-ON-LINE '442) 
(PUT 'TAYLORFORMERTIMES 'DEFINED-IN-FILE 'ALGINT/INTTAYLR.RED) 
(PUT 'TAYLORFORMERTIMES 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE TAYLORFORMERTIMES (ARGLIST)
    (PROG (CONST VAR DEGG WSQRT NEGCOUNT)
      (SETQ NEGCOUNT 0)
      (SETQ DEGG 0)
      (SETQ CONST NIL)
      (SETQ VAR NIL)
      (SETQ WSQRT NIL)
      (PROG ()
       WHILELABEL
        (COND ((NOT ARGLIST) (RETURN NIL)))
        (PROGN
         (COND
          ((DEPENDSP (CAR ARGLIST) TAYLORVARIABLE)
           (COND
            ((AND (EQCAR (CAR ARGLIST) 'EXPT)
                  (EQ (CADAR ARGLIST) TAYLORVARIABLE)
                  (NUMBERP (CADDAR ARGLIST)))
             (SETQ DEGG (PLUS DEGG (CADDAR ARGLIST))))
            ((EQ (CAR ARGLIST) TAYLORVARIABLE) (SETQ DEGG (PLUS DEGG 1)))
            (T (SETQ VAR (CONS (CAR ARGLIST) VAR)))))
          (T (SETQ CONST (CONS (CAR ARGLIST) CONST))))
         (SETQ ARGLIST (CDR ARGLIST)))
        (GO WHILELABEL))
      (COND
       (WSQRT
        (COND
         ((CDR WSQRT)
          (SETQ VAR (CONS (LIST 'SQRT (PREPSQ (SIMPTIMES WSQRT))) VAR)))
         (T (SETQ VAR (CONS (CONS 'SQRT WSQRT) VAR))))))
      (COND
       (VAR
        (SETQ VAR
                (MAPPLY (FUNCTION (LAMBDA (U V) (LIST 'BINARYTIMES U V)))
                        VAR))))
      (SETQ NEGCOUNT (QUOTIENT NEGCOUNT 2))
      (COND
       ((ONEP (CDR (DIVIDE NEGCOUNT 2))) (SETQ CONST (CONS (MINUS 1) CONST))))
      (COND
       ((OR CONST (NEQ DEGG 0))
        (PROGN
         (COND (CONST (SETQ CONST (SIMPTIMES CONST)))
               (T (SETQ CONST (CONS 1 1))))
         (SETQ CONST
                 (CONS (LIST 'RETURN0)
                       (CONS (CONS DEGG DEGG) (LIST (CONS DEGG CONST)))))
         (COND ((NULL VAR) (SETQ VAR CONST))
               (T (SETQ VAR (LIST 'CONSTANTTIMES VAR CONST)))))))
      (RETURN (TAYLORFORMP VAR)))) 
(PUT 'TIMES 'TAYLORFORMER 'TAYLORFORMERTIMES) 
(FLAG '(TAYLORBTIMES TAYLORCTIMES TAYLORQUOTIENT) 'TAYLOR) 
(PUT 'TAYLORFORMEREXPT 'NUMBER-OF-ARGS 1) 
(PUT 'TAYLORFORMEREXPT 'DEFINED-ON-LINE '500) 
(PUT 'TAYLORFORMEREXPT 'DEFINED-IN-FILE 'ALGINT/INTTAYLR.RED) 
(PUT 'TAYLORFORMEREXPT 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE TAYLORFORMEREXPT (ARGLIST)
    (PROG (BASE EXPON)
      (SETQ BASE (CAR ARGLIST))
      (SETQ EXPON (SIMP (CAR (CDR ARGLIST))))
      (COND
       ((OR (NEQ (CDR EXPON) 1) (NOT (NUMBERP (CAR EXPON))))
        (INTERR "Hard exponent")))
      (SETQ EXPON (CAR EXPON))
      (COND ((NEQ BASE TAYLORVARIABLE) (INTERR "Hard base")))
      (RETURN
       (LIST (CONS 'RETURN0 NIL) (CONS EXPON EXPON) (CONS EXPON (CONS 1 1)))))) 
(PUT 'EXPT 'TAYLORFORMER 'TAYLORFORMEREXPT) 
(PUT 'INITIALTAYLORQUOTIENT 'NUMBER-OF-ARGS 1) 
(PUT 'INITIALTAYLORQUOTIENT 'DEFINED-ON-LINE '516) 
(PUT 'INITIALTAYLORQUOTIENT 'DEFINED-IN-FILE 'ALGINT/INTTAYLR.RED) 
(PUT 'INITIALTAYLORQUOTIENT 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE INITIALTAYLORQUOTIENT (SLIST)
    (CONS (DIFFERENCE (CAAR SLIST) (CAADR SLIST))
          (*MULTSQ (CDAR SLIST) (*INVSQ (CDADR SLIST))))) 
(PUT 'TAYLORQUOTIENT 'NUMBER-OF-ARGS 3) 
(PUT 'TAYLORQUOTIENT 'DEFINED-ON-LINE '520) 
(PUT 'TAYLORQUOTIENT 'DEFINED-IN-FILE 'ALGINT/INTTAYLR.RED) 
(PUT 'TAYLORQUOTIENT 'PROCEDURE_TYPE
     '(ARROW (TIMES GENERAL GENERAL GENERAL) GENERAL)) 
(DE TAYLORQUOTIENT (N TEXPR ARGS)
    (PROG (SOFAR B C CFIRST)
      (SETQ B (CAR ARGS))
      (SETQ C (CADR ARGS))
      (SETQ CFIRST (CAADR C))
      (SETQ SOFAR (TAYLOREVALUATE B (PLUS N CFIRST)))
      (PROG (I)
        (SETQ I (CAADR TEXPR))
       LAB
        (COND ((MINUSP (DIFFERENCE (DIFFERENCE N 1) I)) (RETURN NIL)))
        (SETQ SOFAR
                (*ADDSQ SOFAR
                        (*MULTSQ (TAYLOREVALUATE TEXPR I)
                                 (NEGSQ
                                  (TAYLOREVALUATE C
                                   (PLUS N (DIFFERENCE CFIRST I)))))))
        (SETQ I (PLUS2 I 1))
        (GO LAB))
      (RETURN (*MULTSQ SOFAR (*INVSQ (TAYLOREVALUATE C CFIRST)))))) 
(PUT 'QUOTIENT 'TAYLORFUNCTION 'TAYLORQUOTIENT) 
(PUT 'QUOTIENT 'INITIALTAYLORFUNCTION 'INITIALTAYLORQUOTIENT) 
(PUT 'TAYLORFORMERSQRT 'NUMBER-OF-ARGS 1) 
(PUT 'TAYLORFORMERSQRT 'DEFINED-ON-LINE '548) 
(PUT 'TAYLORFORMERSQRT 'DEFINED-IN-FILE 'ALGINT/INTTAYLR.RED) 
(PUT 'TAYLORFORMERSQRT 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE TAYLORFORMERSQRT (ARGLIST)
    (PROG (F REALARGS FF REALSQRT)
      (SETQ REALARGS (TAYLORFORMP (CARX ARGLIST 'TAYLORFORMERSQRT2)))
      (SETQ F (FIRSTTERM REALARGS))
      (COND ((NOT (EVENP (CAR F))) (INTERR "Extra sqrt substitution needed")))
      (COND
       ((AND (IEQUAL 0 (CAR F)) (IEQUAL 1 (CAR (CDR F)))
             (IEQUAL 1 (CDR (CDR F))))
        (RETURN (TAYLORFORMP (LIST 'SQRTX REALARGS)))))
      (SETQ FF (MINUS (CAR F)))
      (SETQ FF (LIST (LIST 'RETURN0) (CONS FF FF) (CONS FF (*INVSQ (CDR F)))))
      (SETQ REALSQRT (LIST 'SQRTX (LIST 'CONSTANTTIMES REALARGS FF)))
      (SETQ FF (QUOTIENT (CAR F) 2))
      (RETURN
       (TAYLORFORMP
        (LIST 'CONSTANTTIMES REALSQRT
              (LIST (LIST 'RETURN0) (CONS FF FF)
                    (CONS FF (SIMPSQRTSQ (CDR F))))))))) 
(PUT 'SQRT 'TAYLORFORMER 'TAYLORFORMERSQRT) 
(PUT 'INITIALTAYLORSQRTX 'NUMBER-OF-ARGS 1) 
(PUT 'INITIALTAYLORSQRTX 'DEFINED-ON-LINE '590) 
(PUT 'INITIALTAYLORSQRTX 'DEFINED-IN-FILE 'ALGINT/INTTAYLR.RED) 
(PUT 'INITIALTAYLORSQRTX 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE INITIALTAYLORSQRTX (SLIST) (CONS 0 (CONS 1 1))) 
(PUT 'TAYLORSQRTX 'NUMBER-OF-ARGS 3) 
(PUT 'TAYLORSQRTX 'DEFINED-ON-LINE '595) 
(PUT 'TAYLORSQRTX 'DEFINED-IN-FILE 'ALGINT/INTTAYLR.RED) 
(PUT 'TAYLORSQRTX 'PROCEDURE_TYPE
     '(ARROW (TIMES GENERAL GENERAL GENERAL) GENERAL)) 
(DE TAYLORSQRTX (N TEXPR ARGS)
    (PROG (SOFAR)
      (SETQ SOFAR (TAYLOREVALUATE (CAR ARGS) N))
      (PROG (I)
        (SETQ I 1)
       LAB
        (COND ((MINUSP (DIFFERENCE (DIFFERENCE N 1) I)) (RETURN NIL)))
        (SETQ SOFAR
                (*ADDSQ SOFAR
                        (NEGSQ
                         (*MULTSQ (TAYLOREVALUATE TEXPR I)
                                  (TAYLOREVALUATE TEXPR (DIFFERENCE N I))))))
        (SETQ I (PLUS2 I 1))
        (GO LAB))
      (RETURN (MULTSQ SOFAR (CONS 1 2))))) 
(FLAG '(TAYLORSQRTX) 'TAYLOR) 
(PUT 'SQRTX 'TAYLORFUNCTION 'TAYLORSQRTX) 
(PUT 'SQRTX 'INITIALTAYLORFUNCTION 'INITIALTAYLORSQRTX) 
(ENDMODULE) 