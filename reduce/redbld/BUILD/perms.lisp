(cl:declaim (cl:optimize cl:debug cl:safety))
(cl:declaim (sb-ext:muffle-conditions sb-ext:compiler-note cl:style-warning))
(MODULE (LIST 'PERMS)) 
(PUT 'PE_MULT 'NUMBER-OF-ARGS 2) 
(PUT 'PE_MULT 'DEFINED-ON-LINE '30) 
(PUT 'PE_MULT 'DEFINED-IN-FILE 'ASSIST/PERMS.RED) 
(PUT 'PE_MULT 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE PE_MULT (P1 P2)
    (PROG (PROD COUNT)
      (SETQ COUNT 0)
      (SETQ PROD (MKVECT (DIFFERENCE (UPBVE P1) 1)))
      (PROG (COUNT)
        (SETQ COUNT 1)
       LAB
        (COND ((MINUSP (DIFFERENCE (UPBVE P1) COUNT)) (RETURN NIL)))
        (PUTV PROD (DIFFERENCE COUNT 1)
              (GETV P2 (DIFFERENCE (GETV P1 (DIFFERENCE COUNT 1)) 1)))
        (SETQ COUNT (PLUS2 COUNT 1))
        (GO LAB))
      (RETURN PROD))) 
(PUT 'PE_INV 'NUMBER-OF-ARGS 1) 
(PUT 'PE_INV 'DEFINED-ON-LINE '40) 
(PUT 'PE_INV 'DEFINED-IN-FILE 'ASSIST/PERMS.RED) 
(PUT 'PE_INV 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE PE_INV (PE)
    (PROG (INV COUNT)
      (SETQ COUNT 0)
      (SETQ INV (MKVECT (DIFFERENCE (UPBVE PE) 1)))
      (PROG (COUNT)
        (SETQ COUNT 1)
       LAB
        (COND ((MINUSP (DIFFERENCE (UPBVE PE) COUNT)) (RETURN NIL)))
        (PUTV INV (DIFFERENCE (GETV PE (DIFFERENCE COUNT 1)) 1) COUNT)
        (SETQ COUNT (PLUS2 COUNT 1))
        (GO LAB))
      (RETURN INV))) 
(DE PE_APPLY (PE ELT) (GETV PE (DIFFERENCE ELT 1))) 
(PUT 'PE_APPLY 'NUMBER-OF-ARGS 2) 
(PUT 'PE_APPLY 'DEFINED-ON-LINE '51) 
(PUT 'PE_APPLY 'DEFINED-IN-FILE 'ASSIST/PERMS.RED) 
(PUT 'PE_APPLY 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(PUTC 'PE_APPLY 'INLINE '(LAMBDA (PE ELT) (GETV PE (DIFFERENCE ELT 1)))) 
(DE SC_ORBITS (SC K) (GETV (GETV (CDR SC) (DIFFERENCE K 1)) (DIFFERENCE 1 1))) 
(PUT 'SC_ORBITS 'NUMBER-OF-ARGS 2) 
(PUT 'SC_ORBITS 'DEFINED-ON-LINE '59) 
(PUT 'SC_ORBITS 'DEFINED-IN-FILE 'ASSIST/PERMS.RED) 
(PUT 'SC_ORBITS 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(PUTC 'SC_ORBITS 'INLINE
      '(LAMBDA (SC K) (GETV (GETV (CDR SC) (DIFFERENCE K 1)) (DIFFERENCE 1 1)))) 
(DE SC_TRANSVERSAL (SC K)
    (GETV (GETV (CDR SC) (DIFFERENCE K 1)) (DIFFERENCE 2 1))) 
(PUT 'SC_TRANSVERSAL 'NUMBER-OF-ARGS 2) 
(PUT 'SC_TRANSVERSAL 'DEFINED-ON-LINE '62) 
(PUT 'SC_TRANSVERSAL 'DEFINED-IN-FILE 'ASSIST/PERMS.RED) 
(PUT 'SC_TRANSVERSAL 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(PUTC 'SC_TRANSVERSAL 'INLINE
      '(LAMBDA (SC K) (GETV (GETV (CDR SC) (DIFFERENCE K 1)) (DIFFERENCE 2 1)))) 
(DE SC_GENERATORS (SC K)
    (GETV (GETV (CDR SC) (DIFFERENCE K 1)) (DIFFERENCE 3 1))) 
(PUT 'SC_GENERATORS 'NUMBER-OF-ARGS 2) 
(PUT 'SC_GENERATORS 'DEFINED-ON-LINE '65) 
(PUT 'SC_GENERATORS 'DEFINED-IN-FILE 'ASSIST/PERMS.RED) 
(PUT 'SC_GENERATORS 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(PUTC 'SC_GENERATORS 'INLINE
      '(LAMBDA (SC K) (GETV (GETV (CDR SC) (DIFFERENCE K 1)) (DIFFERENCE 3 1)))) 
(DE SC_INV_GENERATORS (SC K)
    (GETV (GETV (CDR SC) (DIFFERENCE K 1)) (DIFFERENCE 4 1))) 
(PUT 'SC_INV_GENERATORS 'NUMBER-OF-ARGS 2) 
(PUT 'SC_INV_GENERATORS 'DEFINED-ON-LINE '68) 
(PUT 'SC_INV_GENERATORS 'DEFINED-IN-FILE 'ASSIST/PERMS.RED) 
(PUT 'SC_INV_GENERATORS 'PROCEDURE_TYPE
     '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(PUTC 'SC_INV_GENERATORS 'INLINE
      '(LAMBDA (SC K) (GETV (GETV (CDR SC) (DIFFERENCE K 1)) (DIFFERENCE 4 1)))) 
(DE SC_STABDESC (SC K) (GETV (CDR SC) (DIFFERENCE K 1))) 
(PUT 'SC_STABDESC 'NUMBER-OF-ARGS 2) 
(PUT 'SC_STABDESC 'DEFINED-ON-LINE '71) 
(PUT 'SC_STABDESC 'DEFINED-IN-FILE 'ASSIST/PERMS.RED) 
(PUT 'SC_STABDESC 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(PUTC 'SC_STABDESC 'INLINE '(LAMBDA (SC K) (GETV (CDR SC) (DIFFERENCE K 1)))) 
(DE SD_ORBREP (SD ELT) (GETV (GETV SD (DIFFERENCE 1 1)) (DIFFERENCE ELT 1))) 
(PUT 'SD_ORBREP 'NUMBER-OF-ARGS 2) 
(PUT 'SD_ORBREP 'DEFINED-ON-LINE '74) 
(PUT 'SD_ORBREP 'DEFINED-IN-FILE 'ASSIST/PERMS.RED) 
(PUT 'SD_ORBREP 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(PUTC 'SD_ORBREP 'INLINE
      '(LAMBDA (SD ELT) (GETV (GETV SD (DIFFERENCE 1 1)) (DIFFERENCE ELT 1)))) 
(DE SD_ORBREPS (SD) (GETV SD (DIFFERENCE 5 1))) 
(PUT 'SD_ORBREPS 'NUMBER-OF-ARGS 1) 
(PUT 'SD_ORBREPS 'DEFINED-ON-LINE '77) 
(PUT 'SD_ORBREPS 'DEFINED-IN-FILE 'ASSIST/PERMS.RED) 
(PUT 'SD_ORBREPS 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(PUTC 'SD_ORBREPS 'INLINE '(LAMBDA (SD) (GETV SD (DIFFERENCE 5 1)))) 
(PUT 'COPY_VECT 'NUMBER-OF-ARGS 2) 
(PUT 'COPY_VECT 'DEFINED-ON-LINE '82) 
(PUT 'COPY_VECT 'DEFINED-IN-FILE 'ASSIST/PERMS.RED) 
(PUT 'COPY_VECT 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE COPY_VECT (V1 V2)
    (PROG (COUNT TOP)
      (SETQ COUNT 0)
      (SETQ TOP 0)
      (SETQ TOP (UPBV V2))
      (PROG (COUNT)
        (SETQ COUNT 0)
       LAB
        (COND ((MINUSP (DIFFERENCE TOP COUNT)) (RETURN NIL)))
        (PUTV V1 COUNT (GETV V2 COUNT))
        (SETQ COUNT (PLUS2 COUNT 1))
        (GO LAB)))) 
(PUT 'SD_ADDGEN 'NUMBER-OF-ARGS 3) 
(PUT 'SD_ADDGEN 'DEFINED-ON-LINE '90) 
(PUT 'SD_ADDGEN 'DEFINED-IN-FILE 'ASSIST/PERMS.RED) 
(PUT 'SD_ADDGEN 'PROCEDURE_TYPE
     '(ARROW (TIMES GENERAL GENERAL GENERAL) GENERAL)) 
(DE SD_ADDGEN (SD PE INV)
    (PROG (T1 T2 ORBITS ORBREPS TRANSVERSAL GENERATORS INV_GENERATORS NEW_ELEMS
           NEXT_ELEM COUNT IMG)
      (SETQ COUNT 0)
      (SETQ IMG 0)
      (SETQ ORBITS (GETV SD (DIFFERENCE 1 1)))
      (SETQ TRANSVERSAL (GETV SD (DIFFERENCE 2 1)))
      (SETQ GENERATORS (VECTAPPEND1 (GETV SD (DIFFERENCE 3 1)) PE))
      (SETQ INV_GENERATORS (VECTAPPEND1 (GETV SD (DIFFERENCE 4 1)) INV))
      (PROG (COUNT)
        (SETQ COUNT 1)
       LAB
        (COND ((MINUSP (DIFFERENCE (UPBVE ORBITS) COUNT)) (RETURN NIL)))
        (PROGN
         (SETQ T1 (GETV ORBITS (DIFFERENCE COUNT 1)))
         (PROG ()
          WHILELABEL
           (COND ((NOT (NEQ T1 (GETV ORBITS (DIFFERENCE T1 1)))) (RETURN NIL)))
           (SETQ T1 (GETV ORBITS (DIFFERENCE T1 1)))
           (GO WHILELABEL))
         (SETQ T2 (GETV ORBITS (DIFFERENCE (GETV PE (DIFFERENCE COUNT 1)) 1)))
         (PROG ()
          WHILELABEL
           (COND ((NOT (NEQ T2 (GETV ORBITS (DIFFERENCE T2 1)))) (RETURN NIL)))
           (SETQ T2 (GETV ORBITS (DIFFERENCE T2 1)))
           (GO WHILELABEL))
         (COND ((LESSP T1 T2) (PUTV ORBITS (DIFFERENCE T2 1) T1))
               (T (PUTV ORBITS (DIFFERENCE T1 1) T2))))
        (SETQ COUNT (PLUS2 COUNT 1))
        (GO LAB))
      (PROG (COUNT)
        (SETQ COUNT 1)
       LAB
        (COND ((MINUSP (DIFFERENCE (UPBVE ORBITS) COUNT)) (RETURN NIL)))
        (PROGN
         (PUTV ORBITS (DIFFERENCE COUNT 1)
               (GETV ORBITS (DIFFERENCE (GETV ORBITS (DIFFERENCE COUNT 1)) 1)))
         (COND
          ((EQUAL (GETV ORBITS (DIFFERENCE COUNT 1)) COUNT)
           (SETQ ORBREPS (CONS COUNT ORBREPS)))))
        (SETQ COUNT (PLUS2 COUNT 1))
        (GO LAB))
      (PROG (COUNT)
        (SETQ COUNT 1)
       LAB
        (COND ((MINUSP (DIFFERENCE (UPBVE TRANSVERSAL) COUNT)) (RETURN NIL)))
        (PROGN
         (COND
          ((GETV TRANSVERSAL (DIFFERENCE COUNT 1))
           (PROGN
            (SETQ IMG (GETV PE (DIFFERENCE COUNT 1)))
            (COND
             ((NULL (GETV TRANSVERSAL (DIFFERENCE IMG 1)))
              (PROGN
               (PUTV TRANSVERSAL (DIFFERENCE IMG 1) INV)
               (SETQ NEW_ELEMS (CONS IMG NEW_ELEMS)))))))))
        (SETQ COUNT (PLUS2 COUNT 1))
        (GO LAB))
      (PROG ()
       WHILELABEL
        (COND ((NOT NEW_ELEMS) (RETURN NIL)))
        (PROGN
         (SETQ NEXT_ELEM (CAR NEW_ELEMS))
         (SETQ NEW_ELEMS (CDR NEW_ELEMS))
         (PROG (COUNT)
           (SETQ COUNT 1)
          LAB
           (COND ((MINUSP (DIFFERENCE (UPBVE GENERATORS) COUNT)) (RETURN NIL)))
           (PROGN
            (SETQ IMG
                    (GETV (GETV GENERATORS (DIFFERENCE COUNT 1))
                          (DIFFERENCE NEXT_ELEM 1)))
            (COND
             ((NULL (GETV TRANSVERSAL (DIFFERENCE IMG 1)))
              (PROGN
               (PUTV TRANSVERSAL (DIFFERENCE IMG 1)
                     (GETV INV_GENERATORS (DIFFERENCE COUNT 1)))
               (SETQ NEW_ELEMS (CONS IMG NEW_ELEMS))
               NIL))))
           (SETQ COUNT (PLUS2 COUNT 1))
           (GO LAB)))
        (GO WHILELABEL))
      (PUTV SD (DIFFERENCE 1 1) ORBITS)
      (PUTV SD (DIFFERENCE 2 1) TRANSVERSAL)
      (PUTV SD (DIFFERENCE 3 1) GENERATORS)
      (PUTV SD (DIFFERENCE 4 1) INV_GENERATORS)
      (PUTV SD (DIFFERENCE 5 1) ORBREPS)
      (RETURN SD))) 
(PUT 'SD_CREATE 'NUMBER-OF-ARGS 2) 
(PUT 'SD_CREATE 'DEFINED-ON-LINE '163) 
(PUT 'SD_CREATE 'DEFINED-IN-FILE 'ASSIST/PERMS.RED) 
(PUT 'SD_CREATE 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE SD_CREATE (N BETA)
    (PROG (SD ORBITS TRANSVERSAL COUNT)
      (SETQ COUNT 0)
      (SETQ SD (MKVECT (DIFFERENCE 5 1)))
      (SETQ ORBITS (MKVECT (DIFFERENCE N 1)))
      (PROG (COUNT)
        (SETQ COUNT 1)
       LAB
        (COND ((MINUSP (DIFFERENCE N COUNT)) (RETURN NIL)))
        (PUTV ORBITS (DIFFERENCE COUNT 1) COUNT)
        (SETQ COUNT (PLUS2 COUNT 1))
        (GO LAB))
      (SETQ TRANSVERSAL (MKVECT (DIFFERENCE N 1)))
      (PUTV TRANSVERSAL (DIFFERENCE BETA 1) 0)
      (PUTV SD (DIFFERENCE 1 1) ORBITS)
      (PUTV SD (DIFFERENCE 2 1) TRANSVERSAL)
      (PUTV SD (DIFFERENCE 3 1) (MKVECT (DIFFERENCE 0 1)))
      (PUTV SD (DIFFERENCE 4 1) (MKVECT (DIFFERENCE 0 1)))
      (PUTV SD (DIFFERENCE 5 1)
            (PROG (COUNT FORALL-RESULT FORALL-ENDPTR)
              (SETQ COUNT 1)
              (COND ((MINUSP (DIFFERENCE N COUNT)) (RETURN NIL)))
              (SETQ FORALL-RESULT (SETQ FORALL-ENDPTR (CONS COUNT NIL)))
             LOOPLABEL
              (SETQ COUNT (PLUS2 COUNT 1))
              (COND ((MINUSP (DIFFERENCE N COUNT)) (RETURN FORALL-RESULT)))
              (RPLACD FORALL-ENDPTR (CONS COUNT NIL))
              (SETQ FORALL-ENDPTR (CDR FORALL-ENDPTR))
              (GO LOOPLABEL)))
      (RETURN SD))) 
(PUT 'SC_CREATE 'NUMBER-OF-ARGS 1) 
(PUT 'SC_CREATE 'DEFINED-ON-LINE '182) 
(PUT 'SC_CREATE 'DEFINED-IN-FILE 'ASSIST/PERMS.RED) 
(PUT 'SC_CREATE 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE SC_CREATE (N)
    (PROG (BASE COUNT)
      (SETQ COUNT 0)
      (PROG (COUNT)
        (SETQ COUNT N)
       LAB
        (COND ((MINUSP (TIMES (MINUS 1) (DIFFERENCE 1 COUNT))) (RETURN NIL)))
        (SETQ BASE (CONS COUNT BASE))
        (SETQ COUNT (PLUS2 COUNT (MINUS 1)))
        (GO LAB))
      (RETURN (CONS (LIST2VECT* BASE 'SYMBOLIC) (MKVECT (DIFFERENCE N 1)))))) 
(PUT 'SD_RECOMP_TRANSVERSAL 'NUMBER-OF-ARGS 2) 
(PUT 'SD_RECOMP_TRANSVERSAL 'DEFINED-ON-LINE '191) 
(PUT 'SD_RECOMP_TRANSVERSAL 'DEFINED-IN-FILE 'ASSIST/PERMS.RED) 
(PUT 'SD_RECOMP_TRANSVERSAL 'PROCEDURE_TYPE
     '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE SD_RECOMP_TRANSVERSAL (SD BETA)
    (PROG (NEW_TRANS NEW_ELEMS NEXT_ELEM GENERATORS INV_GENERATORS IMG COUNT)
      (SETQ COUNT 0)
      (SETQ NEW_TRANS
              (MKVECT (DIFFERENCE (UPBVE (GETV SD (DIFFERENCE 1 1))) 1)))
      (SETQ NEW_ELEMS (CONS BETA NIL))
      (PUTV NEW_TRANS (DIFFERENCE BETA 1) 0)
      (SETQ GENERATORS (GETV SD (DIFFERENCE 3 1)))
      (SETQ INV_GENERATORS (GETV SD (DIFFERENCE 4 1)))
      (PROG ()
       WHILELABEL
        (COND ((NOT NEW_ELEMS) (RETURN NIL)))
        (PROGN
         (SETQ NEXT_ELEM (CAR NEW_ELEMS))
         (SETQ NEW_ELEMS (CDR NEW_ELEMS))
         (PROG (COUNT)
           (SETQ COUNT 1)
          LAB
           (COND ((MINUSP (DIFFERENCE (UPBVE GENERATORS) COUNT)) (RETURN NIL)))
           (PROGN
            (SETQ IMG
                    (GETV (GETV GENERATORS (DIFFERENCE COUNT 1))
                          (DIFFERENCE NEXT_ELEM 1)))
            (COND
             ((NULL (GETV NEW_TRANS (DIFFERENCE IMG 1)))
              (PROGN
               (PUTV NEW_TRANS (DIFFERENCE IMG 1)
                     (GETV INV_GENERATORS (DIFFERENCE COUNT 1)))
               (SETQ NEW_ELEMS (CONS IMG NEW_ELEMS))
               NIL))))
           (SETQ COUNT (PLUS2 COUNT 1))
           (GO LAB)))
        (GO WHILELABEL))
      (PUTV SD (DIFFERENCE 2 1) NEW_TRANS)
      (RETURN SD))) 
(PUT 'SC_SWAPBASE 'NUMBER-OF-ARGS 2) 
(PUT 'SC_SWAPBASE 'DEFINED-ON-LINE '224) 
(PUT 'SC_SWAPBASE 'DEFINED-IN-FILE 'ASSIST/PERMS.RED) 
(PUT 'SC_SWAPBASE 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE SC_SWAPBASE (SC K)
    (PROG (SD PE INV_PE NU_1 NU_2 SD_REPS_ORB1 B_ORB2 B_1 B_2 IMG SIGMA SWAP
           COUNT NGENS ELT)
      (SETQ B_1 0)
      (SETQ B_2 0)
      (SETQ IMG 0)
      (SETQ SIGMA 0)
      (SETQ SWAP 0)
      (SETQ COUNT 0)
      (SETQ NGENS 0)
      (SETQ ELT 0)
      (COND
       ((NULL (GETV (CDR SC) (DIFFERENCE K 1)))
        (PROGN
         (SETQ SWAP (GETV (CAR SC) (DIFFERENCE K 1)))
         (PUTV (CAR SC) (DIFFERENCE K 1)
               (GETV (CAR SC) (DIFFERENCE (PLUS K 1) 1)))
         (PUTV (CAR SC) (DIFFERENCE (PLUS K 1) 1) SWAP)
         (RETURN SC))))
      (COND
       ((NULL (GETV (CDR SC) (DIFFERENCE (PLUS K 1) 1)))
        (PUTV (CDR SC) (DIFFERENCE (PLUS K 1) 1)
              (SD_CREATE (UPBVE (CAR SC))
               (GETV (CAR SC) (DIFFERENCE (PLUS K 1) 1))))))
      (COND
       ((OR (GREATERP (PLUS K 2) (UPBVE (CAR SC)))
            (NULL (GETV (CDR SC) (DIFFERENCE (PLUS K 2) 1))))
        (SETQ SD
                (SD_CREATE (UPBVE (CAR SC)) (GETV (CAR SC) (DIFFERENCE K 1)))))
       (T
        (PROGN
         (SETQ SD (MKVECT (DIFFERENCE 5 1)))
         (PUTV SD (DIFFERENCE 1 1)
               (FULLCOPY
                (GETV (GETV (CDR SC) (DIFFERENCE (PLUS K 2) 1))
                      (DIFFERENCE 1 1))))
         (SETQ NGENS
                 (UPBVE
                  (GETV (GETV (CDR SC) (DIFFERENCE (PLUS K 2) 1))
                        (DIFFERENCE 3 1))))
         (PUTV SD (DIFFERENCE 3 1) (MKVECT (DIFFERENCE NGENS 1)))
         (PUTV SD (DIFFERENCE 4 1) (MKVECT (DIFFERENCE NGENS 1)))
         (PROG (COUNT)
           (SETQ COUNT 1)
          LAB
           (COND ((MINUSP (DIFFERENCE NGENS COUNT)) (RETURN NIL)))
           (PROGN
            (PUTV (GETV SD (DIFFERENCE 3 1)) (DIFFERENCE COUNT 1)
                  (GETV
                   (GETV (GETV (CDR SC) (DIFFERENCE (PLUS K 2) 1))
                         (DIFFERENCE 3 1))
                   (DIFFERENCE COUNT 1)))
            (PUTV (GETV SD (DIFFERENCE 4 1)) (DIFFERENCE COUNT 1)
                  (GETV
                   (GETV (GETV (CDR SC) (DIFFERENCE (PLUS K 2) 1))
                         (DIFFERENCE 4 1))
                   (DIFFERENCE COUNT 1))))
           (SETQ COUNT (PLUS2 COUNT 1))
           (GO LAB))
         (PUTV SD (DIFFERENCE 5 1)
               (GETV (GETV (CDR SC) (DIFFERENCE (PLUS K 2) 1))
                     (DIFFERENCE 5 1)))
         (SD_RECOMP_TRANSVERSAL SD (GETV (CAR SC) (DIFFERENCE K 1)))
         NIL)))
      (PROG (COUNT)
        (SETQ COUNT 1)
       LAB
        (COND ((MINUSP (DIFFERENCE (UPBVE (CAR SC)) COUNT)) (RETURN NIL)))
        (PROGN
         (COND
          ((GETV
            (GETV (GETV (CDR SC) (DIFFERENCE (PLUS K 1) 1)) (DIFFERENCE 2 1))
            (DIFFERENCE COUNT 1))
           (SETQ B_ORB2 (CONS COUNT B_ORB2))))
         (COND
          ((GETV (GETV (GETV (CDR SC) (DIFFERENCE K 1)) (DIFFERENCE 2 1))
                 (DIFFERENCE COUNT 1))
           (SETQ SD_REPS_ORB1 (CONS COUNT SD_REPS_ORB1)))))
        (SETQ COUNT (PLUS2 COUNT 1))
        (GO LAB))
      (SETQ SD_REPS_ORB1
              (INTERSECTION SD_REPS_ORB1 (GETV SD (DIFFERENCE 5 1))))
      (SETQ B_1 (GETV (CAR SC) (DIFFERENCE K 1)))
      (SETQ B_2 (GETV (CAR SC) (DIFFERENCE (PLUS K 1) 1)))
      (SETQ SD_REPS_ORB1
              (DELETE (GETV (CAR SC) (DIFFERENCE K 1)) SD_REPS_ORB1))
      (PROG ()
       WHILELABEL
        (COND ((NOT SD_REPS_ORB1) (RETURN NIL)))
        (PROGN
         (SETQ ELT (CAR SD_REPS_ORB1))
         (SETQ SD_REPS_ORB1 (CDR SD_REPS_ORB1))
         (SETQ NU_1 (SETQ NU_2 NIL))
         (SETQ IMG ELT)
         (PROG ()
          WHILELABEL
           (COND ((NOT (NEQ IMG B_1)) (RETURN NIL)))
           (PROGN
            (SETQ NU_1
                    (COND
                     (NU_1
                      (PE_MULT NU_1
                       (GETV
                        (GETV (GETV (CDR SC) (DIFFERENCE K 1))
                              (DIFFERENCE 2 1))
                        (DIFFERENCE IMG 1))))
                     (T
                      (GETV
                       (GETV (GETV (CDR SC) (DIFFERENCE K 1)) (DIFFERENCE 2 1))
                       (DIFFERENCE IMG 1)))))
            (SETQ IMG (GETV NU_1 (DIFFERENCE ELT 1)))
            NIL)
           (GO WHILELABEL))
         (SETQ SIGMA (GETV NU_1 (DIFFERENCE B_2 1)))
         (COND
          ((MEMBER SIGMA B_ORB2)
           (PROGN
            (SETQ IMG SIGMA)
            (PROG ()
             WHILELABEL
              (COND ((NOT (NEQ IMG B_2)) (RETURN NIL)))
              (PROGN
               (SETQ NU_2
                       (COND
                        (NU_2
                         (PE_MULT NU_1
                          (GETV
                           (GETV (GETV (CDR SC) (DIFFERENCE (PLUS K 1) 1))
                                 (DIFFERENCE 2 1))
                           (DIFFERENCE IMG 1))))
                        (T
                         (GETV
                          (GETV (GETV (CDR SC) (DIFFERENCE (PLUS K 1) 1))
                                (DIFFERENCE 2 1))
                          (DIFFERENCE IMG 1)))))
               (SETQ IMG (GETV NU_2 (DIFFERENCE SIGMA 1)))
               NIL)
              (GO WHILELABEL))
            (COND (NU_2 (SETQ PE (PE_MULT NU_1 NU_2))) (T (SETQ PE NU_1)))
            (SETQ INV_PE (PE_INV PE))
            (SD_ADDGEN SD PE INV_PE)
            (SETQ NU_1 NIL)
            (PROG (IMG)
              (SETQ IMG SD_REPS_ORB1)
             LAB
              (COND ((NULL IMG) (RETURN NIL)))
              ((LAMBDA (IMG)
                 (COND
                  ((EQUAL (GETV (GETV SD (DIFFERENCE 1 1)) (DIFFERENCE IMG 1))
                          IMG)
                   (SETQ NU_1 (CONS IMG NU_1)))))
               (CAR IMG))
              (SETQ IMG (CDR IMG))
              (GO LAB))
            (SETQ SD_REPS_ORB1 NU_1)
            NIL))))
        (GO WHILELABEL))
      (SETQ SWAP (GETV (CAR SC) (DIFFERENCE K 1)))
      (PUTV (CAR SC) (DIFFERENCE K 1)
            (GETV (CAR SC) (DIFFERENCE (PLUS K 1) 1)))
      (PUTV (CAR SC) (DIFFERENCE (PLUS K 1) 1) SWAP)
      (PUTV (CDR SC) (DIFFERENCE (PLUS K 1) 1) SD)
      (SD_RECOMP_TRANSVERSAL (GETV (CDR SC) (DIFFERENCE K 1))
       (GETV (CAR SC) (DIFFERENCE K 1)))
      (RETURN SC))) 
(PUT 'SC_SETBASE 'NUMBER-OF-ARGS 2) 
(PUT 'SC_SETBASE 'DEFINED-ON-LINE '348) 
(PUT 'SC_SETBASE 'DEFINED-IN-FILE 'ASSIST/PERMS.RED) 
(PUT 'SC_SETBASE 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE SC_SETBASE (SC BASE_VECT)
    (PROG (COUNT K)
      (SETQ COUNT 0)
      (SETQ K 0)
      (PROG (COUNT)
        (SETQ COUNT 1)
       LAB
        (COND ((MINUSP (DIFFERENCE (UPBVE BASE_VECT) COUNT)) (RETURN NIL)))
        (PROGN
         (COND
          ((NEQ (GETV BASE_VECT (DIFFERENCE COUNT 1))
                (GETV (CAR SC) (DIFFERENCE COUNT 1)))
           (PROG (K)
             (SETQ K
                     (DIFFERENCE
                      (INDEX_ELT (GETV BASE_VECT (DIFFERENCE COUNT 1))
                                 (CAR SC))
                      1))
            LAB
             (COND
              ((MINUSP (TIMES (MINUS 1) (DIFFERENCE COUNT K))) (RETURN NIL)))
             (SC_SWAPBASE SC K)
             (SETQ K (PLUS2 K (MINUS 1)))
             (GO LAB)))))
        (SETQ COUNT (PLUS2 COUNT 1))
        (GO LAB)))) 
(ENDMODULE) 