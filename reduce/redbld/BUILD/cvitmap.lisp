(cl:declaim (cl:optimize cl:debug cl:safety))
(cl:declaim (sb-ext:muffle-conditions sb-ext:compiler-note cl:style-warning))
(MODULE (LIST 'CVITMAP)) 
(EXPORTS (LIST 'CALC_SPUR)) 
(IMPORTS (LIST 'SIMP* 'REVAL 'CALC_MAP_TAR 'CALC_DEN_TAR 'SPACES)) 
(NULL (SETQ *MODE 'SYMBOLIC)) 
(PUT 'IS_INDEXP 'NUMBER-OF-ARGS 1) 
(PUT 'IS_INDEXP 'DEFINED-ON-LINE '73) 
(PUT 'IS_INDEXP 'DEFINED-IN-FILE 'HEPHYS/CVITMAP.RED) 
(PUT 'IS_INDEXP 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE IS_INDEXP (X) ((LAMBDA (Z) (AND Z (CDR Z))) (ASSOC (CAR X) DINDICES*))) 
(PUT 'MK_EDGE_NAME 'NUMBER-OF-ARGS 2) 
(PUT 'MK_EDGE_NAME 'DEFINED-ON-LINE '78) 
(PUT 'MK_EDGE_NAME 'DEFINED-IN-FILE 'HEPHYS/CVITMAP.RED) 
(PUT 'MK_EDGE_NAME 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE MK_EDGE_NAME (NAME1 NAME2)
    (PROGN
     (SETQ N_EDGE (PLUS N_EDGE 1))
     (COMPRESS
      (APPEND (EXPLODE NAME1) (APPEND (EXPLODE N_EDGE) (EXPLODE NAME2)))))) 
(PUT 'NEW_EDGE 'NUMBER-OF-ARGS 2) 
(PUT 'NEW_EDGE 'DEFINED-ON-LINE '86) 
(PUT 'NEW_EDGE 'DEFINED-IN-FILE 'HEPHYS/CVITMAP.RED) 
(PUT 'NEW_EDGE 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE NEW_EDGE (FEDGE SEDGE)
    (PROG (S)
      (SETQ S
              (LIST (MK_EDGE_NAME (CAR FEDGE) (CAR SEDGE))
                    (CONS (CAR FEDGE) (CAR SEDGE)) (AND NIL NIL)))
      (SETQ NEW_EDGE_LIST (CONS S NEW_EDGE_LIST))
      (RETURN S))) 
(PUT 'DELETE_VERTEX 'NUMBER-OF-ARGS 2) 
(PUT 'DELETE_VERTEX 'DEFINED-ON-LINE '103) 
(PUT 'DELETE_VERTEX 'DEFINED-IN-FILE 'HEPHYS/CVITMAP.RED) 
(PUT 'DELETE_VERTEX 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE DELETE_VERTEX (VERTEX MAP_)
    (COND ((NULL MAP_) NIL) ((P_EQ_VERTEX VERTEX (CAR MAP_)) (CDR MAP_))
          (T (CONS (CAR MAP_) (DELETE_VERTEX VERTEX (CDR MAP_)))))) 
(PUT 'P_EQ_VERTEX 'NUMBER-OF-ARGS 2) 
(PUT 'P_EQ_VERTEX 'DEFINED-ON-LINE '115) 
(PUT 'P_EQ_VERTEX 'DEFINED-IN-FILE 'HEPHYS/CVITMAP.RED) 
(PUT 'P_EQ_VERTEX 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE P_EQ_VERTEX (VERTEX1 VERTEX2)
    (COND ((NULL VERTEX1) (NULL VERTEX2)) ((NULL VERTEX2) NIL)
          ((EQ (CAR (CAR VERTEX1)) (CAR (CAR VERTEX2)))
           (P_EQ_VERTEX (CDR VERTEX1) (CDR VERTEX2)))
          (T NIL))) 
(PUT 'MK_OLD_EDGE 'NUMBER-OF-ARGS 1) 
(PUT 'MK_OLD_EDGE 'DEFINED-ON-LINE '130) 
(PUT 'MK_OLD_EDGE 'DEFINED-IN-FILE 'HEPHYS/CVITMAP.RED) 
(PUT 'MK_OLD_EDGE 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE MK_OLD_EDGE (X)
    (PROG (S)
      (SETQ S (ASSOC X OLD_EDGE_LIST))
      (COND (S (RETURN S)))
      (SETQ S
              (LIST X
                    (COND ((NOT (MEMQ X (CAR GAMMA5*))) (CONS 1 1))
                          (T (CONS NDIM* NDIM*)))
                    (AND T T)))
      (SETQ OLD_EDGE_LIST (CONS S OLD_EDGE_LIST))
      (RETURN S))) 
(PUT 'CHANGE_NAME 'NUMBER-OF-ARGS 2) 
(PUT 'CHANGE_NAME 'DEFINED-ON-LINE '144) 
(PUT 'CHANGE_NAME 'DEFINED-IN-FILE 'HEPHYS/CVITMAP.RED) 
(PUT 'CHANGE_NAME 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE CHANGE_NAME (NAME EDGE) (LIST NAME (CADR EDGE) (CADDR EDGE))) 
(PUT 'IS_TADPOLE 'NUMBER-OF-ARGS 1) 
(PUT 'IS_TADPOLE 'DEFINED-ON-LINE '152) 
(PUT 'IS_TADPOLE 'DEFINED-IN-FILE 'HEPHYS/CVITMAP.RED) 
(PUT 'IS_TADPOLE 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE IS_TADPOLE (VERTEX) (LESSP (IS_TADPOLEN VERTEX) 2)) 
(PUT 'IS_TADPOLEN 'NUMBER-OF-ARGS 1) 
(PUT 'IS_TADPOLEN 'DEFINED-ON-LINE '156) 
(PUT 'IS_TADPOLEN 'DEFINED-IN-FILE 'HEPHYS/CVITMAP.RED) 
(PUT 'IS_TADPOLEN 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE IS_TADPOLEN (VERTEX) (LENGTH (DIFF_LEGS VERTEX NIL))) 
(PUT 'DIFF_LEGS 'NUMBER-OF-ARGS 2) 
(PUT 'DIFF_LEGS 'DEFINED-ON-LINE '160) 
(PUT 'DIFF_LEGS 'DEFINED-IN-FILE 'HEPHYS/CVITMAP.RED) 
(PUT 'DIFF_LEGS 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE DIFF_LEGS (VERTEX VERTEX1)
    (COND ((NULL VERTEX) VERTEX1)
          ((OR (ASSOC (CAR (CAR VERTEX)) (CDR VERTEX))
               (ASSOC (CAR (CAR VERTEX)) VERTEX1))
           (DIFF_LEGS (CDR VERTEX) VERTEX1))
          (T (DIFF_LEGS (CDR VERTEX) (CONS (CAR VERTEX) VERTEX1))))) 
(PUT 'IS_BUBLE 'NUMBER-OF-ARGS 2) 
(PUT 'IS_BUBLE 'DEFINED-ON-LINE '173) 
(PUT 'IS_BUBLE 'DEFINED-IN-FILE 'HEPHYS/CVITMAP.RED) 
(PUT 'IS_BUBLE 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE IS_BUBLE (VERTEX1 VERTEX2)
    ((LAMBDA (Z)
       (COND ((GEQ Z 2) NIL) (T (CONS (TIMES 2 Z) (LIST VERTEX1 VERTEX2)))))
     (LENGTH (DIFF_VERTEX VERTEX1 VERTEX2)))) 
(PUT 'TRANSFORM_MAP_ 'NUMBER-OF-ARGS 1) 
(PUT 'TRANSFORM_MAP_ 'DEFINED-ON-LINE '184) 
(PUT 'TRANSFORM_MAP_ 'DEFINED-IN-FILE 'HEPHYS/CVITMAP.RED) 
(PUT 'TRANSFORM_MAP_ 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE TRANSFORM_MAP_ (MAP_)
    (PROG (N_EDGE)
      (SETQ N_EDGE 0)
      (SETQ NEW_EDGE_LIST NIL)
      (SETQ OLD_EDGE_LIST NIL)
      (RETURN
       (MK_SIMPLE_MAP_
        (PROG (VERTEX FORALL-RESULT FORALL-ENDPTR)
          (SETQ VERTEX MAP_)
          (COND ((NULL VERTEX) (RETURN NIL)))
          (SETQ FORALL-RESULT
                  (SETQ FORALL-ENDPTR
                          (CONS
                           ((LAMBDA (VERTEX)
                              (PROG (X FORALL-RESULT FORALL-ENDPTR)
                                (SETQ X VERTEX)
                                (COND ((NULL X) (RETURN NIL)))
                                (SETQ FORALL-RESULT
                                        (SETQ FORALL-ENDPTR
                                                (CONS
                                                 ((LAMBDA (X) (MK_OLD_EDGE X))
                                                  (CAR X))
                                                 NIL)))
                               LOOPLABEL
                                (SETQ X (CDR X))
                                (COND ((NULL X) (RETURN FORALL-RESULT)))
                                (RPLACD FORALL-ENDPTR
                                        (CONS
                                         ((LAMBDA (X) (MK_OLD_EDGE X)) (CAR X))
                                         NIL))
                                (SETQ FORALL-ENDPTR (CDR FORALL-ENDPTR))
                                (GO LOOPLABEL)))
                            (CAR VERTEX))
                           NIL)))
         LOOPLABEL
          (SETQ VERTEX (CDR VERTEX))
          (COND ((NULL VERTEX) (RETURN FORALL-RESULT)))
          (RPLACD FORALL-ENDPTR
                  (CONS
                   ((LAMBDA (VERTEX)
                      (PROG (X FORALL-RESULT FORALL-ENDPTR)
                        (SETQ X VERTEX)
                        (COND ((NULL X) (RETURN NIL)))
                        (SETQ FORALL-RESULT
                                (SETQ FORALL-ENDPTR
                                        (CONS
                                         ((LAMBDA (X) (MK_OLD_EDGE X)) (CAR X))
                                         NIL)))
                       LOOPLABEL
                        (SETQ X (CDR X))
                        (COND ((NULL X) (RETURN FORALL-RESULT)))
                        (RPLACD FORALL-ENDPTR
                                (CONS ((LAMBDA (X) (MK_OLD_EDGE X)) (CAR X))
                                      NIL))
                        (SETQ FORALL-ENDPTR (CDR FORALL-ENDPTR))
                        (GO LOOPLABEL)))
                    (CAR VERTEX))
                   NIL))
          (SETQ FORALL-ENDPTR (CDR FORALL-ENDPTR))
          (GO LOOPLABEL)))))) 
(GLOBAL '(BUBLTR FREEMAP_)) 
(PUT 'TO_TARANOV 'NUMBER-OF-ARGS 1) 
(PUT 'TO_TARANOV 'DEFINED-ON-LINE '202) 
(PUT 'TO_TARANOV 'DEFINED-IN-FILE 'HEPHYS/CVITMAP.RED) 
(PUT 'TO_TARANOV 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE TO_TARANOV (MAP_)
    (PROG (NEW_EDGE_LIST OLD_EDGE_LIST FULL_EDGE_LIST NEW_MAP_ FREE_MAP_ MARKS
           VARIANTS ALST BUBLES)
      (SETQ NEW_MAP_ (TRANSFORM_MAP_ MAP_))
      (SETQ FREE_MAP_ (FIND_BUBLTR NEW_MAP_))
      (SETQ BUBLES (CAR FREE_MAP_))
      (SETQ BUBLTR BUBLES)
      (SETQ FREE_MAP_ (CDR FREE_MAP_))
      (SETQ FREEMAP_ FREE_MAP_)
      (SETQ FULL_EDGE_LIST
              (PROG (EDGE FORALL-RESULT FORALL-ENDPTR)
                (SETQ EDGE OLD_EDGE_LIST)
                (COND ((NULL EDGE) (RETURN NIL)))
                (SETQ FORALL-RESULT
                        (SETQ FORALL-ENDPTR
                                (CONS ((LAMBDA (EDGE) (CAR EDGE)) (CAR EDGE))
                                      NIL)))
               LOOPLABEL
                (SETQ EDGE (CDR EDGE))
                (COND ((NULL EDGE) (RETURN FORALL-RESULT)))
                (RPLACD FORALL-ENDPTR
                        (CONS ((LAMBDA (EDGE) (CAR EDGE)) (CAR EDGE)) NIL))
                (SETQ FORALL-ENDPTR (CDR FORALL-ENDPTR))
                (GO LOOPLABEL)))
      (SETQ ALST
              (NCONC
               (PROG (X FORALL-RESULT FORALL-ENDPTR)
                 (SETQ X FULL_EDGE_LIST)
                 (COND ((NULL X) (RETURN NIL)))
                 (SETQ FORALL-RESULT
                         (SETQ FORALL-ENDPTR
                                 (CONS ((LAMBDA (X) (CONS X 1)) (CAR X)) NIL)))
                LOOPLABEL
                 (SETQ X (CDR X))
                 (COND ((NULL X) (RETURN FORALL-RESULT)))
                 (RPLACD FORALL-ENDPTR
                         (CONS ((LAMBDA (X) (CONS X 1)) (CAR X)) NIL))
                 (SETQ FORALL-ENDPTR (CDR FORALL-ENDPTR))
                 (GO LOOPLABEL))
               (LIST (CONS '|_0| 0))))
      (SETQ MARKS
              (SET_MARK NEW_EDGE_LIST NIL (BUBLE_PROVES BUBLES) NEW_MAP_
               (ADD_TADPOLES BUBLES ALST)))
      (SETQ VARIANTS (EDGE_BIND MARKS ALST))
      (SETQ FULL_EDGE_LIST
              (NCONC
               (PROG (EDGE FORALL-RESULT FORALL-ENDPTR)
                 (SETQ EDGE NEW_EDGE_LIST)
                 (COND ((NULL EDGE) (RETURN NIL)))
                 (SETQ FORALL-RESULT
                         (SETQ FORALL-ENDPTR
                                 (CONS ((LAMBDA (EDGE) (CAR EDGE)) (CAR EDGE))
                                       NIL)))
                LOOPLABEL
                 (SETQ EDGE (CDR EDGE))
                 (COND ((NULL EDGE) (RETURN FORALL-RESULT)))
                 (RPLACD FORALL-ENDPTR
                         (CONS ((LAMBDA (EDGE) (CAR EDGE)) (CAR EDGE)) NIL))
                 (SETQ FORALL-ENDPTR (CDR FORALL-ENDPTR))
                 (GO LOOPLABEL))
               FULL_EDGE_LIST))
      (RETURN (CONS FULL_EDGE_LIST (CONS NEW_MAP_ VARIANTS))))) 
(NULL (SETQ *MODE 'SYMBOLIC)) 
(GLOBAL '(NDIM*)) 
(GLOBAL '(*CVITERROR)) 
(FLAG '(CVITERROR) 'SWITCH) 
(SETQ *CVITERROR T) 
(PUT 'SET_ERROR 'DEFINED-ON-LINE '262) 
(PUT 'SET_ERROR 'DEFINED-IN-FILE 'HEPHYS/CVITMAP.RED) 
(PUT 'SET_ERROR 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DM SET_ERROR (U)
    (LIST 'SET_ERROR_REAL (MKQUOTE (CADR U)) (CONS 'LIST (CDDR U)))) 
(PUT 'SET_ERROR_REAL 'NUMBER-OF-ARGS 2) 
(PUT 'SET_ERROR_REAL 'DEFINED-ON-LINE '265) 
(PUT 'SET_ERROR_REAL 'DEFINED-IN-FILE 'HEPHYS/CVITMAP.RED) 
(PUT 'SET_ERROR_REAL 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE SET_ERROR_REAL (U V)
    (PROGN
     (COND
      (*CVITERROR
       (PROGN
        (PRIN2 "Function: ")
        (PRIN2 (CAR U))
        (PRIN2 " Arguments: ")
        (COND
         (V
          (PROG (X)
            (SETQ X V)
           LAB
            (COND ((NULL X) (RETURN NIL)))
            ((LAMBDA (X) (PROGN (PRIN2 X) (PRIN2 " IS ") (PRIN2 X) (TERPRI)))
             (CAR X))
            (SETQ X (CDR X))
            (GO LAB))))
        NIL)))
     (ERROR 55 "Error in MAP_ creating routines"))) 
(PUT 'MARK_EDGES 'NUMBER-OF-ARGS 3) 
(PUT 'MARK_EDGES 'DEFINED-ON-LINE '281) 
(PUT 'MARK_EDGES 'DEFINED-IN-FILE 'HEPHYS/CVITMAP.RED) 
(PUT 'MARK_EDGES 'PROCEDURE_TYPE
     '(ARROW (TIMES GENERAL GENERAL GENERAL) GENERAL)) 
(DE MARK_EDGES (NEWEDGES OLDEDGES MAP_)
    (CONS (MK_PROVES MAP_ OLDEDGES)
          (SET_MARK NEWEDGES NIL NIL MAP_
           (PROG (X FORALL-RESULT FORALL-ENDPTR)
             (SETQ X OLDEDGES)
             (COND ((NULL X) (RETURN NIL)))
             (SETQ FORALL-RESULT
                     (SETQ FORALL-ENDPTR
                             (CONS
                              ((LAMBDA (X) (CONS (CAR X) (CAR (CADR X))))
                               (CAR X))
                              NIL)))
            LOOPLABEL
             (SETQ X (CDR X))
             (COND ((NULL X) (RETURN FORALL-RESULT)))
             (RPLACD FORALL-ENDPTR
                     (CONS ((LAMBDA (X) (CONS (CAR X) (CAR (CADR X)))) (CAR X))
                           NIL))
             (SETQ FORALL-ENDPTR (CDR FORALL-ENDPTR))
             (GO LOOPLABEL))))) 
(PUT 'MK_PROVES 'NUMBER-OF-ARGS 2) 
(PUT 'MK_PROVES 'DEFINED-ON-LINE '287) 
(PUT 'MK_PROVES 'DEFINED-IN-FILE 'HEPHYS/CVITMAP.RED) 
(PUT 'MK_PROVES 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE MK_PROVES (MAP_ OLDEDGES)
    (COND ((NULL MAP_) NIL)
          ((DEFINED_VERTEX (CAR MAP_) OLDEDGES)
           (CONS (CAR MAP_) (MK_PROVES (CDR MAP_) OLDEDGES)))
          (T (MK_PROVES (CDR MAP_) OLDEDGES)))) 
(PUT 'DEFINED_VERTEX 'NUMBER-OF-ARGS 2) 
(PUT 'DEFINED_VERTEX 'DEFINED-ON-LINE '296) 
(PUT 'DEFINED_VERTEX 'DEFINED-IN-FILE 'HEPHYS/CVITMAP.RED) 
(PUT 'DEFINED_VERTEX 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE DEFINED_VERTEX (VERTEX OLDEDGES)
    (COND ((NULL VERTEX) T)
          (T
           (AND (MEMQ_EDGELIST (CAR VERTEX) OLDEDGES)
                (DEFINED_VERTEX (CDR VERTEX) OLDEDGES))))) 
(PUT 'SET_MARK 'NUMBER-OF-ARGS 5) 
(PUT 'SET_MARK 'DEFINED-ON-LINE '303) 
(PUT 'SET_MARK 'DEFINED-IN-FILE 'HEPHYS/CVITMAP.RED) 
(PUT 'SET_MARK 'PROCEDURE_TYPE
     '(ARROW (TIMES GENERAL GENERAL GENERAL GENERAL GENERAL) GENERAL)) 
(DE SET_MARK (EDGES NOTDEF TOPROVE MAP_ BLST)
    (COND
     ((NULL EDGES)
      (COND
       ((OR NOTDEF TOPROVE)
        (SET_ERROR_REAL 'SET_MARK (LIST EDGES NOTDEF TOPROVE MAP_ BLST)))
       (T NIL)))
     (T
      ((LAMBDA (Z)
         (COND
          (Z
           (SET_PROVE (APPEND NOTDEF (CDR EDGES)) (CAR EDGES)
            (APPEND (NEW_PROVE (CAR EDGES) MAP_) TOPROVE) MAP_
            (CONS (CONS (CAR (CAR EDGES)) 0) BLST)))
          (T
           (SET_MARK (CDR EDGES) (CONS (CAR EDGES) NOTDEF) TOPROVE MAP_
            BLST))))
       (AND (ASSOC (CAADAR EDGES) BLST) (ASSOC (CDADAR EDGES) BLST)))))) 
(PUT 'NEW_PROVE 'NUMBER-OF-ARGS 2) 
(PUT 'NEW_PROVE 'DEFINED-ON-LINE '336) 
(PUT 'NEW_PROVE 'DEFINED-IN-FILE 'HEPHYS/CVITMAP.RED) 
(PUT 'NEW_PROVE 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE NEW_PROVE (EDGE MAP_)
    (COND ((NULL MAP_) NIL)
          (T
           ((LAMBDA (Z) (COND (Z (LIST Z)) (T (NEW_PROVE EDGE (CDR MAP_)))))
            (NEW_PROVEV EDGE (CAR MAP_)))))) 
(PUT 'NEW_PROVEV 'NUMBER-OF-ARGS 2) 
(PUT 'NEW_PROVEV 'DEFINED-ON-LINE '344) 
(PUT 'NEW_PROVEV 'DEFINED-IN-FILE 'HEPHYS/CVITMAP.RED) 
(PUT 'NEW_PROVEV 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE NEW_PROVEV (EDGE VERTEX)
    (COND ((NOT (MEMBER EDGE VERTEX)) NIL)
          ((AND (ASSOC (CAADR EDGE) VERTEX) (ASSOC (CDADR EDGE) VERTEX)) NIL)
          (T VERTEX))) 
(PUT 'IS_SON 'NUMBER-OF-ARGS 2) 
(PUT 'IS_SON 'DEFINED-ON-LINE '354) 
(PUT 'IS_SON 'DEFINED-IN-FILE 'HEPHYS/CVITMAP.RED) 
(PUT 'IS_SON 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE IS_SON (EDGE VERTEX) (ASSOC (CAR (CADR EDGE)) VERTEX)) 
(PUT 'NOT_PARENTS 'NUMBER-OF-ARGS 2) 
(PUT 'NOT_PARENTS 'DEFINED-ON-LINE '357) 
(PUT 'NOT_PARENTS 'DEFINED-IN-FILE 'HEPHYS/CVITMAP.RED) 
(PUT 'NOT_PARENTS 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE NOT_PARENTS (EDGE PROVES)
    (COND ((NULL PROVES) NIL) ((IS_SON EDGE (CAR PROVES)) (CDR PROVES))
          (T (CONS (CAR PROVES) (NOT_PARENTS EDGE (CDR PROVES)))))) 
(PUT 'SET_PROVE 'NUMBER-OF-ARGS 5) 
(PUT 'SET_PROVE 'DEFINED-ON-LINE '364) 
(PUT 'SET_PROVE 'DEFINED-IN-FILE 'HEPHYS/CVITMAP.RED) 
(PUT 'SET_PROVE 'PROCEDURE_TYPE
     '(ARROW (TIMES GENERAL GENERAL GENERAL GENERAL GENERAL) GENERAL)) 
(DE SET_PROVE (EDGES EDGE TOPROVE MAP_ BLST)
    ((LAMBDA (Z)
       (CONS (CONS EDGE (NOT_PARENTS EDGE (CAR Z)))
             (SET_MARK EDGES NIL (CDR Z) MAP_ BLST)))
     (FIND_PROVED TOPROVE NIL NIL BLST))) 
(PUT 'FIND_PROVED 'NUMBER-OF-ARGS 4) 
(PUT 'FIND_PROVED 'DEFINED-ON-LINE '371) 
(PUT 'FIND_PROVED 'DEFINED-IN-FILE 'HEPHYS/CVITMAP.RED) 
(PUT 'FIND_PROVED 'PROCEDURE_TYPE
     '(ARROW (TIMES GENERAL GENERAL GENERAL GENERAL) GENERAL)) 
(DE FIND_PROVED (TOPROVE PROVED UNPROVED BLST)
    (COND ((NULL TOPROVE) (CONS PROVED UNPROVED))
          ((IS_PROVED (CAR TOPROVE) BLST)
           (FIND_PROVED (CDR TOPROVE) (CONS (CAR TOPROVE) PROVED) UNPROVED
            BLST))
          (T
           (FIND_PROVED (CDR TOPROVE) PROVED (CONS (CAR TOPROVE) UNPROVED)
            BLST)))) 
(PUT 'IS_PROVED 'NUMBER-OF-ARGS 2) 
(PUT 'IS_PROVED 'DEFINED-ON-LINE '386) 
(PUT 'IS_PROVED 'DEFINED-IN-FILE 'HEPHYS/CVITMAP.RED) 
(PUT 'IS_PROVED 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE IS_PROVED (VERTEX BLST)
    (COND ((NULL VERTEX) T)
          ((ASSOC (CAAR VERTEX) BLST) (IS_PROVED (CDR VERTEX) BLST)) (T NIL))) 
(PUT 'MK_BINDING 'NUMBER-OF-ARGS 2) 
(PUT 'MK_BINDING 'DEFINED-ON-LINE '393) 
(PUT 'MK_BINDING 'DEFINED-IN-FILE 'HEPHYS/CVITMAP.RED) 
(PUT 'MK_BINDING 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE MK_BINDING (PROVEDGE BLST)
    (AND (CAN_BE_PROVED (CAR PROVEDGE) BLST) (EDGE_BIND (CDR PROVEDGE) BLST))) 
(PUT 'EDGE_BIND 'NUMBER-OF-ARGS 2) 
(PUT 'EDGE_BIND 'DEFINED-ON-LINE '398) 
(PUT 'EDGE_BIND 'DEFINED-IN-FILE 'HEPHYS/CVITMAP.RED) 
(PUT 'EDGE_BIND 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE EDGE_BIND (EDGELIST BLST)
    (COND ((NULL EDGELIST) (LIST BLST))
          (T
           (PROG (DEFEDGE PROP_ P EMIN EMAX S PROVES I)
             (SETQ DEFEDGE (CAR EDGELIST))
             (SETQ PROVES (CDR DEFEDGE))
             (SETQ DEFEDGE (CAR DEFEDGE))
             (SETQ EDGELIST (CDR EDGELIST))
             (SETQ P (CAR DEFEDGE))
             (SETQ PROP_ (CADR DEFEDGE))
             (SETQ EMIN (ASSOC (CAR PROP_) BLST))
             (SETQ EMAX (ASSOC (CDR PROP_) BLST))
             (COND
              ((OR (NULL EMIN) (NULL EMAX))
               (SET_ERROR_REAL 'EDGE_BIND (LIST PROP_ BLST))))
             (SETQ PROP_ (CONS (CDR EMIN) (CDR EMAX)))
             (SETQ EMIN (ABS (DIFFERENCE (CAR PROP_) (CDR PROP_))))
             (SETQ EMAX (PLUS (CAR PROP_) (CDR PROP_)))
             (COND
              ((NUMBERP NDIM*)
               (PROGN
                (SETQ EMAX (MIN EMAX NDIM*))
                (COND ((GREATERP EMIN NDIM*) (RETURN NIL))))))
             (SETQ I EMIN)
            LOOP
             (COND ((GREATERP I EMAX) (RETURN S)))
             (COND
              ((CAN_BE_PROVED PROVES (CONS (CONS P I) BLST))
               (SETQ S
                       (APPEND (EDGE_BIND EDGELIST (CONS (CONS P I) BLST))
                               S))))
             (SETQ I (PLUS I 2))
             (GO LOOP))))) 
(PUT 'CAN_BE_PROVED 'NUMBER-OF-ARGS 2) 
(PUT 'CAN_BE_PROVED 'DEFINED-ON-LINE '436) 
(PUT 'CAN_BE_PROVED 'DEFINED-IN-FILE 'HEPHYS/CVITMAP.RED) 
(PUT 'CAN_BE_PROVED 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE CAN_BE_PROVED (PROVES BLST)
    (COND ((NULL PROVES) T)
          ((CAN_BE_P (CAR PROVES) BLST) (CAN_BE_PROVED (CDR PROVES) BLST))
          (T NIL))) 
(PUT 'CAN_BE_P 'NUMBER-OF-ARGS 2) 
(PUT 'CAN_BE_P 'DEFINED-ON-LINE '442) 
(PUT 'CAN_BE_P 'DEFINED-IN-FILE 'HEPHYS/CVITMAP.RED) 
(PUT 'CAN_BE_P 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE CAN_BE_P (VERTEX BLST)
    (PROG (I J K)
      (SETQ I (ASSOC (CAR (CAR VERTEX)) BLST))
      (SETQ J (ASSOC (CAR (CADR VERTEX)) BLST))
      (SETQ K (ASSOC (CAR (CADDR VERTEX)) BLST))
      (COND
       ((OR (NULL I) (NULL J) (NULL K))
        (SET_ERROR_REAL 'CAN_BE_PROVED (LIST VERTEX BLST))))
      (SETQ I (CDR I))
      (SETQ J (CDR J))
      (SETQ K (CDR K))
      (COND
       ((AND (NUMBERP NDIM*) (GREATERP (PLUS I J K) (TIMES 2 NDIM*)))
        (RETURN NIL)))
      (RETURN
       (COND
        ((OR (NOT (EVENP (PLUS I J K))) (LESSP K (ABS (DIFFERENCE I J)))
             (GREATERP K (PLUS I J)))
         NIL)
        (T T))))) 
(NULL (SETQ *MODE 'SYMBOLIC)) 
(PUT 'FIND_BUBLES 'NUMBER-OF-ARGS 1) 
(PUT 'FIND_BUBLES 'DEFINED-ON-LINE '471) 
(PUT 'FIND_BUBLES 'DEFINED-IN-FILE 'HEPHYS/CVITMAP.RED) 
(PUT 'FIND_BUBLES 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE FIND_BUBLES (ATLAS) (FIND_BUBLES1 ATLAS OLD_EDGE_LIST)) 
(PUT 'FIND_BUBLES_COEFF 'NUMBER-OF-ARGS 3) 
(PUT 'FIND_BUBLES_COEFF 'DEFINED-ON-LINE '474) 
(PUT 'FIND_BUBLES_COEFF 'DEFINED-IN-FILE 'HEPHYS/CVITMAP.RED) 
(PUT 'FIND_BUBLES_COEFF 'PROCEDURE_TYPE
     '(ARROW (TIMES GENERAL GENERAL GENERAL) GENERAL)) 
(DE FIND_BUBLES_COEFF (ATLASLIST EDGELIST BUBLES)
    (FIND_BUBLES1_COEFF ATLASLIST NIL EDGELIST BUBLES)) 
(PUT 'FIND_BUBLES1_COEFF 'NUMBER-OF-ARGS 4) 
(PUT 'FIND_BUBLES1_COEFF 'DEFINED-ON-LINE '479) 
(PUT 'FIND_BUBLES1_COEFF 'DEFINED-IN-FILE 'HEPHYS/CVITMAP.RED) 
(PUT 'FIND_BUBLES1_COEFF 'PROCEDURE_TYPE
     '(ARROW (TIMES GENERAL GENERAL GENERAL GENERAL) GENERAL)) 
(DE FIND_BUBLES1_COEFF (ATLASLIST PASSED EDGELIST BUBLES)
    (COND ((NULL ATLASLIST) (CONS BUBLES PASSED))
          (T
           ((LAMBDA (Z)
              (FIND_BUBLES1_COEFF (CDR ATLASLIST) (CONS (CDR Z) PASSED)
               EDGELIST
               (COND ((NULL (CAR Z)) BUBLES) (T (CONS (CAR Z) BUBLES)))))
            (FIND_BUBLES1 (CAR ATLASLIST) EDGELIST))))) 
(PUT 'MK_ATLASLIST 'NUMBER-OF-ARGS 3) 
(PUT 'MK_ATLASLIST 'DEFINED-ON-LINE '491) 
(PUT 'MK_ATLASLIST 'DEFINED-IN-FILE 'HEPHYS/CVITMAP.RED) 
(PUT 'MK_ATLASLIST 'PROCEDURE_TYPE
     '(ARROW (TIMES GENERAL GENERAL GENERAL) GENERAL)) 
(DE MK_ATLASLIST (MAP_ COEFF DEN_OM) (LIST (LIST MAP_ COEFF DEN_OM))) 
(PUT 'FIND_BUBLES1 'NUMBER-OF-ARGS 2) 
(PUT 'FIND_BUBLES1 'DEFINED-ON-LINE '494) 
(PUT 'FIND_BUBLES1 'DEFINED-IN-FILE 'HEPHYS/CVITMAP.RED) 
(PUT 'FIND_BUBLES1 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE FIND_BUBLES1 (ATLAS EDGELIST)
    (SELECT_BUBLES NIL (CAR ATLAS) NIL (CADR ATLAS) (CADDR ATLAS) EDGELIST)) 
(PUT 'SELECT_BUBLES 'NUMBER-OF-ARGS 6) 
(PUT 'SELECT_BUBLES 'DEFINED-ON-LINE '502) 
(PUT 'SELECT_BUBLES 'DEFINED-IN-FILE 'HEPHYS/CVITMAP.RED) 
(PUT 'SELECT_BUBLES 'PROCEDURE_TYPE
     '(ARROW (TIMES GENERAL GENERAL GENERAL GENERAL GENERAL GENERAL) GENERAL)) 
(DE SELECT_BUBLES (BUBLES MAP_ PASSED COEFF DEN_OM AL)
    (COND
     ((NULL MAP_)
      ((LAMBDA (X) (CONS (CAR X) (LIST PASSED (CDR X) DEN_OM)))
       (FIND_BUBLES_COEFF COEFF (UNION_EDGES (MAP__EDGES PASSED) AL) BUBLES)))
     ((LESSP (PLUS (LENGTH MAP_) (LENGTH PASSED)) 3)
      (SELECT_BUBLES BUBLES NIL (APPEND MAP_ PASSED) COEFF DEN_OM AL))
     (T
      ((LAMBDA (Z)
         (COND
          (Z
           ((LAMBDA (D)
              ((LAMBDA (BOOL)
                 (COND
                  ((EQUAL (CAR Z) 0)
                   (COND
                    (BOOL
                     (SELECT_BUBLES (CONS Z BUBLES) NIL (CDR Z)
                      (MK_ATLASLIST
                       (NCONC PASSED
                              (DELETE_VERTEX (CAR (CDR (CDR Z))) (CDR MAP_)))
                       COEFF DEN_OM)
                      NIL AL))
                    (T
                     (SELECT_BUBLES (CONS Z BUBLES)
                      (DELETE_VERTEX (CAR (CDR (CDR Z))) (CDR MAP_)) PASSED
                      (TRY_SUB_ATLAS (LIST (CDR Z) NIL NIL) COEFF) DEN_OM
                      AL))))
                  ((NOT (P_OLD_VERTEX D))
                   (COND
                    (BOOL
                     (SELECT_BUBLES (CONS Z BUBLES) NIL (CDR Z)
                      (MK_ATLASLIST
                       (NCONC PASSED
                              (BUBLE_VERTEX (CDR Z)
                               (DELETE_VERTEX (CAR (CDR (CDR Z))) (CDR MAP_))
                               AL))
                       COEFF DEN_OM)
                      (LIST D) AL))
                    (T
                     (SELECT_BUBLES (CONS Z BUBLES)
                      (BUBLE_VERTEX (CDR Z)
                       (NCONC PASSED
                              (DELETE_VERTEX (CAR (CDR (CDR Z))) (CDR MAP_)))
                       AL)
                      NIL (TRY_SUB_ATLAS (LIST (CDR Z) NIL (LIST D)) COEFF)
                      DEN_OM AL))))
                  (BOOL
                   (SELECT_BUBLES (CONS Z BUBLES) NIL (REN_VERTMAP_ D (CDR Z))
                    (MK_ATLASLIST
                     (NCONC PASSED
                            (CONS (CONS _0EDGE D)
                                  (DELETE_VERTEX (CAR (CDR (CDR Z)))
                                   (CDR MAP_))))
                     COEFF DEN_OM)
                    (LIST (REN_VERTICES D D)) AL))
                  (T
                   (SELECT_BUBLES (CONS Z BUBLES)
                    (CONS (CONS _0EDGE D)
                          (DELETE_VERTEX (CAR (CDR (CDR Z))) (CDR MAP_)))
                    PASSED
                    (TRY_SUB_ATLAS
                     (LIST (REN_VERTMAP_ D (CDR Z)) NIL
                           (LIST (REN_VERTICES D D)))
                     COEFF)
                    DEN_OM AL))))
               T))
            (DELTA_EDGES (CDR Z))))
          (T
           (SELECT_BUBLES BUBLES (CDR MAP_) (CONS (CAR MAP_) PASSED) COEFF
            DEN_OM AL))))
       (FIND_BUBLE (CAR MAP_) (CDR MAP_)))))) 
(PUT 'P_OLD_VERTEX 'NUMBER-OF-ARGS 1) 
(PUT 'P_OLD_VERTEX 'DEFINED-ON-LINE '633) 
(PUT 'P_OLD_VERTEX 'DEFINED-IN-FILE 'HEPHYS/CVITMAP.RED) 
(PUT 'P_OLD_VERTEX 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE P_OLD_VERTEX (VERTEX)
    (COND ((NULL VERTEX) T)
          (T
           (AND (ASSOC (CAR (CAR VERTEX)) OLD_EDGE_LIST)
                (P_OLD_VERTEX (CDR VERTEX)))))) 
(PUT 'RENAMES_EDGES 'NUMBER-OF-ARGS 2) 
(PUT 'RENAMES_EDGES 'DEFINED-ON-LINE '640) 
(PUT 'RENAMES_EDGES 'DEFINED-IN-FILE 'HEPHYS/CVITMAP.RED) 
(PUT 'RENAMES_EDGES 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE RENAMES_EDGES (VERTEX AL)
    (RENAME_EDGES_PAR (CAR VERTEX) (CAR (CDR VERTEX)) AL)) 
(PUT 'RENAME_EDGES_PAR 'NUMBER-OF-ARGS 3) 
(PUT 'RENAME_EDGES_PAR 'DEFINED-ON-LINE '645) 
(PUT 'RENAME_EDGES_PAR 'DEFINED-IN-FILE 'HEPHYS/CVITMAP.RED) 
(PUT 'RENAME_EDGES_PAR 'PROCEDURE_TYPE
     '(ARROW (TIMES GENERAL GENERAL GENERAL) GENERAL)) 
(DE RENAME_EDGES_PAR (VERTEX1 VERTEX2 AL)
    (COND
     ((AND (DEFINED_EDGE VERTEX1 AL) (NOT (ASSOC (CAR VERTEX2) OLD_EDGE_LIST)))
      (REPLACE_EDGE VERTEX2 VERTEX1 NEW_EDGE_LIST))
     ((AND (DEFINED_EDGE VERTEX2 AL) (NOT (ASSOC (CAR VERTEX1) OLD_EDGE_LIST)))
      (REPLACE_EDGE VERTEX1 VERTEX2 NEW_EDGE_LIST))
     ((AND (ASSOC (CAR VERTEX1) OLD_EDGE_LIST)
           (NOT (ASSOC (CAR VERTEX2) OLD_EDGE_LIST)))
      (REPLACE_EDGE VERTEX2 VERTEX1 NEW_EDGE_LIST))
     ((AND (ASSOC (CAR VERTEX2) OLD_EDGE_LIST)
           (NOT (ASSOC (CAR VERTEX1) OLD_EDGE_LIST)))
      (REPLACE_EDGE VERTEX1 VERTEX2 NEW_EDGE_LIST))
     (T (RENAME_EDGES VERTEX1 VERTEX2)))) 
(PUT 'BUBLE_VERTEX 'NUMBER-OF-ARGS 3) 
(PUT 'BUBLE_VERTEX 'DEFINED-ON-LINE '664) 
(PUT 'BUBLE_VERTEX 'DEFINED-IN-FILE 'HEPHYS/CVITMAP.RED) 
(PUT 'BUBLE_VERTEX 'PROCEDURE_TYPE
     '(ARROW (TIMES GENERAL GENERAL GENERAL) GENERAL)) 
(DE BUBLE_VERTEX (MAP_2 MAP_ AL)
    (COND ((NULL MAP_2) NIL)
          (T (PROGN (RENAMES_EDGES (DELTA_EDGES MAP_2) AL) MAP_)))) 
(PUT 'DELTA_EDGES 'NUMBER-OF-ARGS 1) 
(PUT 'DELTA_EDGES 'DEFINED-ON-LINE '670) 
(PUT 'DELTA_EDGES 'DEFINED-IN-FILE 'HEPHYS/CVITMAP.RED) 
(PUT 'DELTA_EDGES 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE DELTA_EDGES (MAP_2)
    (LIST (CAR (DIFF_VERTEX (CAR MAP_2) (CAR (CDR MAP_2))))
          (CAR (DIFF_VERTEX (CAR (CDR MAP_2)) (CAR MAP_2))))) 
(PUT 'DELTA_NAMES 'NUMBER-OF-ARGS 1) 
(PUT 'DELTA_NAMES 'DEFINED-ON-LINE '681) 
(PUT 'DELTA_NAMES 'DEFINED-IN-FILE 'HEPHYS/CVITMAP.RED) 
(PUT 'DELTA_NAMES 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE DELTA_NAMES (MAP_2)
    ((LAMBDA (Z) (CONS (CAR (CAR (CAR Z))) (CAR (CAR (CDR Z)))))
     (CONS (DIFF_VERTEX (CAR MAP_2) (CAR (CDR MAP_2)))
           (DIFF_VERTEX (CAR (CDR MAP_2)) (CAR MAP_2))))) 
(PUT 'OLD_RENAME_EDGES 'NUMBER-OF-ARGS 2) 
(PUT 'OLD_RENAME_EDGES 'DEFINED-ON-LINE '691) 
(PUT 'OLD_RENAME_EDGES 'DEFINED-IN-FILE 'HEPHYS/CVITMAP.RED) 
(PUT 'OLD_RENAME_EDGES 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE OLD_RENAME_EDGES (NAMES MAP_)
    (COND ((NULL MAP_) NIL)
          (T
           (CONS (REN_EDGE NAMES (CAR MAP_))
                 (OLD_RENAME_EDGES NAMES (CDR MAP_)))))) 
(PUT 'REN_VERTMAP_ 'NUMBER-OF-ARGS 2) 
(PUT 'REN_VERTMAP_ 'DEFINED-ON-LINE '697) 
(PUT 'REN_VERTMAP_ 'DEFINED-IN-FILE 'HEPHYS/CVITMAP.RED) 
(PUT 'REN_VERTMAP_ 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE REN_VERTMAP_ (VERTEX1 MAP_)
    (COND
     ((NEQ (LENGTH VERTEX1) 2)
      (SET_ERROR_REAL 'REN_VERTMAP_ (LIST VERTEX1 MAP_)))
     (T
      (OLD_RENAME_EDGES (CONS (CAR (CAR VERTEX1)) (CAR (CAR (CDR VERTEX1))))
       MAP_)))) 
(PUT 'REN_VERTICES 'NUMBER-OF-ARGS 2) 
(PUT 'REN_VERTICES 'DEFINED-ON-LINE '706) 
(PUT 'REN_VERTICES 'DEFINED-IN-FILE 'HEPHYS/CVITMAP.RED) 
(PUT 'REN_VERTICES 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE REN_VERTICES (VERTEX1 VERTEX2)
    (COND
     ((NEQ (LENGTH VERTEX1) 2)
      (SET_ERROR_REAL 'REN_VERTICES (LIST VERTEX1 VERTEX2)))
     (T
      (REN_EDGE (CONS (CAR (CAR VERTEX1)) (CAR (CAR (CDR VERTEX1)))) VERTEX2)))) 
(PUT 'REN_EDGE 'NUMBER-OF-ARGS 2) 
(PUT 'REN_EDGE 'DEFINED-ON-LINE '715) 
(PUT 'REN_EDGE 'DEFINED-IN-FILE 'HEPHYS/CVITMAP.RED) 
(PUT 'REN_EDGE 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE REN_EDGE (NAMES VERTEX)
    (COND ((NULL (ASSOC (CAR NAMES) VERTEX)) VERTEX)
          (T (REN_EDGE1 NAMES VERTEX)))) 
(PUT 'REN_EDGE1 'NUMBER-OF-ARGS 2) 
(PUT 'REN_EDGE1 'DEFINED-ON-LINE '721) 
(PUT 'REN_EDGE1 'DEFINED-IN-FILE 'HEPHYS/CVITMAP.RED) 
(PUT 'REN_EDGE1 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE REN_EDGE1 (NAMES VERTEX)
    (COND ((NULL VERTEX) NIL)
          ((EQUAL (CAR NAMES) (CAR (CAR VERTEX)))
           (CONS (CHANGE_NAME (CDR NAMES) (CAR VERTEX))
                 (REN_EDGE1 NAMES (CDR VERTEX))))
          (T (CONS (CAR VERTEX) (REN_EDGE1 NAMES (CDR VERTEX)))))) 
(PUT 'FIND_BUBLE 'NUMBER-OF-ARGS 2) 
(PUT 'FIND_BUBLE 'DEFINED-ON-LINE '730) 
(PUT 'FIND_BUBLE 'DEFINED-IN-FILE 'HEPHYS/CVITMAP.RED) 
(PUT 'FIND_BUBLE 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE FIND_BUBLE (VERTEX MAP_)
    (COND ((NULL MAP_) NIL)
          (T (OR (IS_BUBLE VERTEX (CAR MAP_)) (FIND_BUBLE VERTEX (CDR MAP_)))))) 
(PUT 'DIFF_VERTEX 'NUMBER-OF-ARGS 2) 
(PUT 'DIFF_VERTEX 'DEFINED-ON-LINE '737) 
(PUT 'DIFF_VERTEX 'DEFINED-IN-FILE 'HEPHYS/CVITMAP.RED) 
(PUT 'DIFF_VERTEX 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE DIFF_VERTEX (VERTEX1 VERTEX2)
    (COND ((NULL VERTEX1) NIL)
          ((AND (ASSOC (CAR (CAR VERTEX1)) VERTEX2)
                (NOT (EQ (CAR (CAR VERTEX1)) (CAR _0EDGE))))
           (DIFF_VERTEX (CDR VERTEX1) VERTEX2))
          (T (CONS (CAR VERTEX1) (DIFF_VERTEX (CDR VERTEX1) VERTEX2))))) 
(GLOBAL '(_0EDGE)) 
(SETQ _0EDGE (LIST '|_0| (CONS 0 0) (AND T T))) 
(PUT 'BUBLE_PROVES 'NUMBER-OF-ARGS 1) 
(PUT 'BUBLE_PROVES 'DEFINED-ON-LINE '756) 
(PUT 'BUBLE_PROVES 'DEFINED-IN-FILE 'HEPHYS/CVITMAP.RED) 
(PUT 'BUBLE_PROVES 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE BUBLE_PROVES (BUBLES)
    (COND ((NULL BUBLES) NIL)
          ((EQUAL (CAAR BUBLES) 0) (BUBLE_PROVES (CDR BUBLES)))
          ((EQUAL (CAAR BUBLES) 2)
           (CONS
            (LIST
             (CAR (DIFF_VERTEX (CAR (CDAR BUBLES)) (CAR (CDR (CDAR BUBLES)))))
             (CAR (DIFF_VERTEX (CAR (CDR (CDAR BUBLES))) (CAR (CDAR BUBLES))))
             _0EDGE)
            (BUBLE_PROVES (CDR BUBLES))))
          ((EQUAL (CAAR BUBLES) 3)
           (CONS (CAR (CDAR BUBLES)) (BUBLE_PROVES (CDR BUBLES))))
          (T (BUBLE_PROVES (CDR BUBLES))))) 
(PUT 'TRY_SUB_ATLAS 'NUMBER-OF-ARGS 2) 
(PUT 'TRY_SUB_ATLAS 'DEFINED-ON-LINE '778) 
(PUT 'TRY_SUB_ATLAS 'DEFINED-IN-FILE 'HEPHYS/CVITMAP.RED) 
(PUT 'TRY_SUB_ATLAS 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE TRY_SUB_ATLAS (ATLAS ATLASLIST)
    (COND ((NULL ATLASLIST) (LIST ATLAS))
          ((SUB_MAP__P (CAR ATLAS) (CADDR (CAR ATLASLIST)))
           (TRY_SUB_ATLAS (MK_SUB_ATLAS ATLAS (CAR ATLASLIST))
            (CDR ATLASLIST)))
          (T (CONS (CAR ATLASLIST) (TRY_SUB_ATLAS ATLAS (CDR ATLASLIST)))))) 
(PUT 'SUB_MAP__P 'NUMBER-OF-ARGS 2) 
(PUT 'SUB_MAP__P 'DEFINED-ON-LINE '790) 
(PUT 'SUB_MAP__P 'DEFINED-IN-FILE 'HEPHYS/CVITMAP.RED) 
(PUT 'SUB_MAP__P 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE SUB_MAP__P (MAP_1 DEN_)
    (COND ((NULL MAP_1) NIL)
          (T
           (OR (SUB_VERTEX_MAP_ (CAR MAP_1) DEN_)
               (SUB_MAP__P (CDR MAP_1) DEN_))))) 
(PUT 'SUB_VERTEX_MAP_ 'NUMBER-OF-ARGS 2) 
(PUT 'SUB_VERTEX_MAP_ 'DEFINED-ON-LINE '797) 
(PUT 'SUB_VERTEX_MAP_ 'DEFINED-IN-FILE 'HEPHYS/CVITMAP.RED) 
(PUT 'SUB_VERTEX_MAP_ 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE SUB_VERTEX_MAP_ (VERTEX DEN_)
    (COND ((NULL DEN_) NIL)
          (T
           (OR (P_COMMON_DEN_ VERTEX (CAR DEN_))
               (SUB_VERTEX_MAP_ VERTEX (CDR DEN_)))))) 
(PUT 'P_COMMON_DEN_ 'NUMBER-OF-ARGS 2) 
(PUT 'P_COMMON_DEN_ 'DEFINED-ON-LINE '803) 
(PUT 'P_COMMON_DEN_ 'DEFINED-IN-FILE 'HEPHYS/CVITMAP.RED) 
(PUT 'P_COMMON_DEN_ 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE P_COMMON_DEN_ (VERTEX VERTEXD)
    ((LAMBDA (N)
       (COND ((EQUAL N 3) (P_EQ_VERTEX VERTEX VERTEXD))
             ((EQUAL N 2) (ASSOC (CAR (CAR VERTEXD)) VERTEX)) (T NIL)))
     (LENGTH VERTEXD))) 
(PUT 'MK_SUB_ATLAS 'NUMBER-OF-ARGS 2) 
(PUT 'MK_SUB_ATLAS 'DEFINED-ON-LINE '814) 
(PUT 'MK_SUB_ATLAS 'DEFINED-IN-FILE 'HEPHYS/CVITMAP.RED) 
(PUT 'MK_SUB_ATLAS 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE MK_SUB_ATLAS (ATLAS1 ATLAS2)
    (LIST (CAR ATLAS1) (CONS ATLAS2 (CADR ATLAS1)) (CADDR ATLAS1))) 
(PUT 'ALL_DEFINED 'NUMBER-OF-ARGS 2) 
(PUT 'ALL_DEFINED 'DEFINED-ON-LINE '819) 
(PUT 'ALL_DEFINED 'DEFINED-IN-FILE 'HEPHYS/CVITMAP.RED) 
(PUT 'ALL_DEFINED 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE ALL_DEFINED (MAP_ AL)
    (ALL_DEFINED_MAP_ MAP_ (DEFINED_APPEND (MAP__EDGES MAP_) AL))) 
(PUT 'ALL_DEFINED_MAP_ 'NUMBER-OF-ARGS 2) 
(PUT 'ALL_DEFINED_MAP_ 'DEFINED-ON-LINE '823) 
(PUT 'ALL_DEFINED_MAP_ 'DEFINED-IN-FILE 'HEPHYS/CVITMAP.RED) 
(PUT 'ALL_DEFINED_MAP_ 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE ALL_DEFINED_MAP_ (MAP_ AL) (AL1_DEFINED_MAP_ MAP_ NIL AL)) 
(PUT 'AL1_DEFINED_MAP_ 'NUMBER-OF-ARGS 3) 
(PUT 'AL1_DEFINED_MAP_ 'DEFINED-ON-LINE '826) 
(PUT 'AL1_DEFINED_MAP_ 'DEFINED-IN-FILE 'HEPHYS/CVITMAP.RED) 
(PUT 'AL1_DEFINED_MAP_ 'PROCEDURE_TYPE
     '(ARROW (TIMES GENERAL GENERAL GENERAL) GENERAL)) 
(DE AL1_DEFINED_MAP_ (MAP_ PASSED AL)
    (COND ((NULL MAP_) (COND ((NULL PASSED) T) (T NIL)))
          ((ALL_DEFINED_VERTEX (CAR MAP_) AL)
           (AL1_DEFINED_MAP_ (NCONC PASSED (CDR MAP_)) NIL
            (APPEND (CAR MAP_) AL)))
          (T (AL1_DEFINED_MAP_ (CDR MAP_) (CONS (CAR MAP_) PASSED) AL)))) 
(PUT 'ALL_DEFINED_VERTEX 'NUMBER-OF-ARGS 2) 
(PUT 'ALL_DEFINED_VERTEX 'DEFINED-ON-LINE '841) 
(PUT 'ALL_DEFINED_VERTEX 'DEFINED-IN-FILE 'HEPHYS/CVITMAP.RED) 
(PUT 'ALL_DEFINED_VERTEX 'PROCEDURE_TYPE
     '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE ALL_DEFINED_VERTEX (VERTEX AL) (AL1_DEFINED_VERTEX VERTEX NIL NIL AL)) 
(PUT 'AL1_DEFINED_VERTEX 'NUMBER-OF-ARGS 4) 
(PUT 'AL1_DEFINED_VERTEX 'DEFINED-ON-LINE '845) 
(PUT 'AL1_DEFINED_VERTEX 'DEFINED-IN-FILE 'HEPHYS/CVITMAP.RED) 
(PUT 'AL1_DEFINED_VERTEX 'PROCEDURE_TYPE
     '(ARROW (TIMES GENERAL GENERAL GENERAL GENERAL) GENERAL)) 
(DE AL1_DEFINED_VERTEX (VERTEX PASSED DEFINED AL)
    (COND
     ((NULL VERTEX) (COND ((NULL PASSED) T) (T (RE_PARENTS PASSED DEFINED))))
     ((DEFINED_EDGE (CAR VERTEX) AL)
      (AL1_DEFINED_VERTEX (NCONC PASSED (CDR VERTEX)) NIL
       (CONS (CAR VERTEX) DEFINED) (CONS (CAR VERTEX) AL)))
     (T
      (AL1_DEFINED_VERTEX (CDR VERTEX) (CONS (CAR VERTEX) PASSED) DEFINED AL)))) 
(PUT 'RE_PARENTS 'NUMBER-OF-ARGS 2) 
(PUT 'RE_PARENTS 'DEFINED-ON-LINE '863) 
(PUT 'RE_PARENTS 'DEFINED-IN-FILE 'HEPHYS/CVITMAP.RED) 
(PUT 'RE_PARENTS 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE RE_PARENTS (PASSED DEFINED)
    (COND
     ((AND (EQUAL (LENGTH PASSED) 1) (EQUAL (LENGTH DEFINED) 2))
      (MAKE_NEW_PARENTS (CAR PASSED) DEFINED))
     (T NIL))) 
(PUT 'MAKE_NEW_PARENTS 'NUMBER-OF-ARGS 2) 
(PUT 'MAKE_NEW_PARENTS 'DEFINED-ON-LINE '869) 
(PUT 'MAKE_NEW_PARENTS 'DEFINED-IN-FILE 'HEPHYS/CVITMAP.RED) 
(PUT 'MAKE_NEW_PARENTS 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE MAKE_NEW_PARENTS (EDGE VERTEX)
    (ADD_PARENTS0 EDGE (CONS (CAR (CAR VERTEX)) (CAR (CAR (CDR VERTEX)))) T)) 
(PUT 'P_DEF_EDGE 'NUMBER-OF-ARGS 1) 
(PUT 'P_DEF_EDGE 'DEFINED-ON-LINE '881) 
(PUT 'P_DEF_EDGE 'DEFINED-IN-FILE 'HEPHYS/CVITMAP.RED) 
(PUT 'P_DEF_EDGE 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE P_DEF_EDGE (EDGE) (CADDR EDGE)) 
(PUT 'DEFINED_EDGE 'NUMBER-OF-ARGS 2) 
(PUT 'DEFINED_EDGE 'DEFINED-ON-LINE '885) 
(PUT 'DEFINED_EDGE 'DEFINED-IN-FILE 'HEPHYS/CVITMAP.RED) 
(PUT 'DEFINED_EDGE 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE DEFINED_EDGE (EDGE AL)
    (OR (ASSOC (CAR EDGE) OLD_EDGE_LIST)
        (DEFINED_ALL_EDGE (ALL_EDGE (CAR EDGE) NEW_EDGE_LIST) NIL AL))) 
(PUT 'ALL_EDGE 'NUMBER-OF-ARGS 2) 
(PUT 'ALL_EDGE 'DEFINED-ON-LINE '892) 
(PUT 'ALL_EDGE 'DEFINED-IN-FILE 'HEPHYS/CVITMAP.RED) 
(PUT 'ALL_EDGE 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE ALL_EDGE (EDGENAME EDGELIST)
    (COND ((NULL EDGELIST) NIL)
          ((EQ EDGENAME (CAR (CAR EDGELIST)))
           (CONS (CAR EDGELIST) (ALL_EDGE EDGENAME (CDR EDGELIST))))
          (T (ALL_EDGE EDGENAME (CDR EDGELIST))))) 
(PUT 'DEF_EDGE 'NUMBER-OF-ARGS 2) 
(PUT 'DEF_EDGE 'DEFINED-ON-LINE '899) 
(PUT 'DEF_EDGE 'DEFINED-IN-FILE 'HEPHYS/CVITMAP.RED) 
(PUT 'DEF_EDGE 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE DEF_EDGE (EDGE AL)
    ((LAMBDA (Z) (AND (ASSOC (CAR Z) AL) (ASSOC (CDR Z) AL))) (CADR EDGE))) 
(PUT 'DEFINED_ALL_EDGE 'NUMBER-OF-ARGS 3) 
(PUT 'DEFINED_ALL_EDGE 'DEFINED-ON-LINE '904) 
(PUT 'DEFINED_ALL_EDGE 'DEFINED-IN-FILE 'HEPHYS/CVITMAP.RED) 
(PUT 'DEFINED_ALL_EDGE 'PROCEDURE_TYPE
     '(ARROW (TIMES GENERAL GENERAL GENERAL) GENERAL)) 
(DE DEFINED_ALL_EDGE (EDGELIST PASSED AL)
    (COND ((NULL EDGELIST) NIL)
          ((DEF_EDGE (CAR EDGELIST) AL)
           (COND ((P_DEF_EDGE (CAR EDGELIST)) T)
                 (T
                  (REP_EDGE_PROP_ (NCONC PASSED EDGELIST)
                   (CONS (CADR (CAR EDGELIST)) (LIST T))))))
          (T
           (DEFINED_ALL_EDGE (CDR EDGELIST) (CONS (CAR EDGELIST) PASSED) AL)))) 
(PUT 'REP_EDGE_PROP_ 'NUMBER-OF-ARGS 2) 
(PUT 'REP_EDGE_PROP_ 'DEFINED-ON-LINE '915) 
(PUT 'REP_EDGE_PROP_ 'DEFINED-IN-FILE 'HEPHYS/CVITMAP.RED) 
(PUT 'REP_EDGE_PROP_ 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE REP_EDGE_PROP_ (EDGELIST PROP_)
    (COND ((NULL EDGELIST) T)
          (T
           (PROGN
            (RPLACD (CAR EDGELIST) PROP_)
            (REP_EDGE_PROP_ (CDR EDGELIST) PROP_))))) 
(GLOBAL '(*CVITBTR *CVITERROR)) 
(FLAG '(CVITBTR) 'SWITCH) 
(SETQ *CVITBTR T) 
(SETQ *CVITERROR T) 
(PUT 'FIND_TRIANGLES 'NUMBER-OF-ARGS 1) 
(PUT 'FIND_TRIANGLES 'DEFINED-ON-LINE '935) 
(PUT 'FIND_TRIANGLES 'DEFINED-IN-FILE 'HEPHYS/CVITMAP.RED) 
(PUT 'FIND_TRIANGLES 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE FIND_TRIANGLES (ATLAS) (FIND_TRIANGLES1 ATLAS OLD_EDGE_LIST)) 
(PUT 'FIND_TRIANGLES1 'NUMBER-OF-ARGS 2) 
(PUT 'FIND_TRIANGLES1 'DEFINED-ON-LINE '938) 
(PUT 'FIND_TRIANGLES1 'DEFINED-IN-FILE 'HEPHYS/CVITMAP.RED) 
(PUT 'FIND_TRIANGLES1 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE FIND_TRIANGLES1 (ATLAS AL)
    (SELECT_TRIANGLES NIL (CAR ATLAS) NIL (CADR ATLAS) (CADDR ATLAS) AL)) 
(PUT 'FIND_TRIANGL_COEFF 'NUMBER-OF-ARGS 3) 
(PUT 'FIND_TRIANGL_COEFF 'DEFINED-ON-LINE '946) 
(PUT 'FIND_TRIANGL_COEFF 'DEFINED-IN-FILE 'HEPHYS/CVITMAP.RED) 
(PUT 'FIND_TRIANGL_COEFF 'PROCEDURE_TYPE
     '(ARROW (TIMES GENERAL GENERAL GENERAL) GENERAL)) 
(DE FIND_TRIANGL_COEFF (ATLASLIST EDGELIST TRIANGLES)
    (FIND_TRIANGLE_COEFF ATLASLIST NIL EDGELIST TRIANGLES)) 
(PUT 'FIND_TRIANGLE_COEFF 'NUMBER-OF-ARGS 4) 
(PUT 'FIND_TRIANGLE_COEFF 'DEFINED-ON-LINE '949) 
(PUT 'FIND_TRIANGLE_COEFF 'DEFINED-IN-FILE 'HEPHYS/CVITMAP.RED) 
(PUT 'FIND_TRIANGLE_COEFF 'PROCEDURE_TYPE
     '(ARROW (TIMES GENERAL GENERAL GENERAL GENERAL) GENERAL)) 
(DE FIND_TRIANGLE_COEFF (ATLASLIST PASSED EDGELIST TRIANGLES)
    (COND ((NULL ATLASLIST) (CONS TRIANGLES PASSED))
          (T
           ((LAMBDA (Z)
              (FIND_TRIANGLE_COEFF (CDR ATLASLIST) (CONS (CDR Z) PASSED)
               EDGELIST
               (COND ((NULL (CAR Z)) TRIANGLES) (T (CONS (CAR Z) TRIANGLES)))))
            (FIND_TRIANGLES1 (CAR ATLASLIST) EDGELIST))))) 
(PUT 'SELECT_TRIANGLES 'NUMBER-OF-ARGS 6) 
(PUT 'SELECT_TRIANGLES 'DEFINED-ON-LINE '961) 
(PUT 'SELECT_TRIANGLES 'DEFINED-IN-FILE 'HEPHYS/CVITMAP.RED) 
(PUT 'SELECT_TRIANGLES 'PROCEDURE_TYPE
     '(ARROW (TIMES GENERAL GENERAL GENERAL GENERAL GENERAL GENERAL) GENERAL)) 
(DE SELECT_TRIANGLES (TRIANGLES MAP_ PASSED COEFF DEN_OM AL)
    (COND
     ((NULL MAP_)
      ((LAMBDA (X) (CONS (CAR X) (LIST PASSED (CDR X) DEN_OM)))
       (FIND_TRIANGL_COEFF COEFF (UNION_EDGES (MAP__EDGES PASSED) AL)
        TRIANGLES)))
     ((LESSP (PLUS (LENGTH MAP_) (LENGTH PASSED)) 4)
      (SELECT_TRIANGLES TRIANGLES NIL (APPEND MAP_ PASSED) COEFF DEN_OM AL))
     (T
      ((LAMBDA (Z)
         (COND
          (Z
           ((LAMBDA (TRN)
              (COND
               (T
                (SELECT_TRIANGLES (CONS Z TRIANGLES) NIL (CONS TRN (CDDR Z))
                 (MK_ATLASLIST
                  (NCONC (LIST TRN)
                         (NCONC PASSED (DELETE_MAP_S (CDDR Z) MAP_)))
                  COEFF DEN_OM)
                 (LIST TRN) AL))
               (T
                (SELECT_TRIANGLES (CONS Z TRIANGLES)
                 (NCONC (LIST TRN) (NCONC PASSED (DELETE_MAP_S (CDDR Z) MAP_)))
                 NIL
                 (TRY_SUB_ATLAS (LIST (CONS TRN (CDDR Z)) NIL (LIST TRN))
                  COEFF)
                 DEN_OM AL))))
            (SK_VERTEXTR Z)))
          (T
           (SELECT_TRIANGLES TRIANGLES (CDR MAP_) (CONS (CAR MAP_) PASSED)
            COEFF DEN_OM AL))))
       (REDUCE_TRIANGLE (FIND_TRIANGLE (CAR MAP_) (CDR MAP_))))))) 
(PUT 'VERTEX_NEIGHBOUR 'NUMBER-OF-ARGS 2) 
(PUT 'VERTEX_NEIGHBOUR 'DEFINED-ON-LINE '1033) 
(PUT 'VERTEX_NEIGHBOUR 'DEFINED-IN-FILE 'HEPHYS/CVITMAP.RED) 
(PUT 'VERTEX_NEIGHBOUR 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE VERTEX_NEIGHBOUR (VERTEX MAP_)
    (COND ((OR (NULL VERTEX) (NULL MAP_)) NIL)
          (T
           ((LAMBDA (Z)
              (COND
               (Z
                (CONS (CDR Z)
                      (VERTEX_NEIGHBOUR (DELETE_EDGE (CAR Z) VERTEX)
                       (DELETE_VERTEX (CDR Z) MAP_))))
               (T (VERTEX_NEIGHBOUR VERTEX (CDR MAP_)))))
            (IS_NEIGHBOUR VERTEX (CAR MAP_)))))) 
(PUT 'DELETE_MAP_S 'NUMBER-OF-ARGS 2) 
(PUT 'DELETE_MAP_S 'DEFINED-ON-LINE '1049) 
(PUT 'DELETE_MAP_S 'DEFINED-IN-FILE 'HEPHYS/CVITMAP.RED) 
(PUT 'DELETE_MAP_S 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE DELETE_MAP_S (MAP_1 MAP_2)
    (COND ((NULL MAP_1) MAP_2)
          (T (DELETE_MAP_S (CDR MAP_1) (DELETE_VERTEX (CAR MAP_1) MAP_2))))) 
(PUT 'DELETE_EDGE 'NUMBER-OF-ARGS 2) 
(PUT 'DELETE_EDGE 'DEFINED-ON-LINE '1054) 
(PUT 'DELETE_EDGE 'DEFINED-IN-FILE 'HEPHYS/CVITMAP.RED) 
(PUT 'DELETE_EDGE 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE DELETE_EDGE (EDGE VERTEX)
    (COND ((NULL VERTEX) NIL) ((EQ (CAR EDGE) (CAR (CAR VERTEX))) (CDR VERTEX))
          (T (CONS (CAR VERTEX) (DELETE_EDGE EDGE (CDR VERTEX)))))) 
(PUT 'IS_NEIGHBOURP 'NUMBER-OF-ARGS 2) 
(PUT 'IS_NEIGHBOURP 'DEFINED-ON-LINE '1065) 
(PUT 'IS_NEIGHBOURP 'DEFINED-IN-FILE 'HEPHYS/CVITMAP.RED) 
(PUT 'IS_NEIGHBOURP 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE IS_NEIGHBOURP (VERTEX1 VERTEX2)
    (COND ((NULL VERTEX1) NIL)
          (T
           (OR (ASSOC (CAR (CAR VERTEX1)) VERTEX2)
               (IS_NEIGHBOURP (CDR VERTEX1) VERTEX2))))) 
(PUT 'IS_NEIGHBOUR 'NUMBER-OF-ARGS 2) 
(PUT 'IS_NEIGHBOUR 'DEFINED-ON-LINE '1073) 
(PUT 'IS_NEIGHBOUR 'DEFINED-IN-FILE 'HEPHYS/CVITMAP.RED) 
(PUT 'IS_NEIGHBOUR 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE IS_NEIGHBOUR (VERTEX1 VERTEX2)
    (COND ((NULL VERTEX1) NIL)
          (T
           ((LAMBDA (Z)
              (COND (Z (CONS (CAR VERTEX1) VERTEX2))
                    (T (IS_NEIGHBOUR (CDR VERTEX1) VERTEX2))))
            (ASSOC (CAR (CAR VERTEX1)) VERTEX2))))) 
(PUT 'FIND_TRIANGLE 'NUMBER-OF-ARGS 2) 
(PUT 'FIND_TRIANGLE 'DEFINED-ON-LINE '1086) 
(PUT 'FIND_TRIANGLE 'DEFINED-IN-FILE 'HEPHYS/CVITMAP.RED) 
(PUT 'FIND_TRIANGLE 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE FIND_TRIANGLE (VERTEX MAP_)
    ((LAMBDA (Z) (COND ((NEQ (LENGTH Z) 2) NIL) (T (CONS VERTEX Z))))
     (IS_CLOSED (VERTEX_NEIGHBOUR VERTEX MAP_)))) 
(PUT 'IS_CLOSED 'NUMBER-OF-ARGS 1) 
(PUT 'IS_CLOSED 'DEFINED-ON-LINE '1095) 
(PUT 'IS_CLOSED 'DEFINED-IN-FILE 'HEPHYS/CVITMAP.RED) 
(PUT 'IS_CLOSED 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE IS_CLOSED (MAP_)
    (COND ((OR (NULL MAP_) (NULL (CDR MAP_))) NIL)
          (T
           (OR (TWO_NEIGHBOUR (CAR MAP_) (CDR MAP_)) (IS_CLOSED (CDR MAP_)))))) 
(PUT 'TWO_NEIGHBOUR 'NUMBER-OF-ARGS 2) 
(PUT 'TWO_NEIGHBOUR 'DEFINED-ON-LINE '1104) 
(PUT 'TWO_NEIGHBOUR 'DEFINED-IN-FILE 'HEPHYS/CVITMAP.RED) 
(PUT 'TWO_NEIGHBOUR 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE TWO_NEIGHBOUR (VERTEX MAP_)
    (COND ((NULL MAP_) NIL)
          ((IS_NEIGHBOURP VERTEX (CAR MAP_)) (LIST VERTEX (CAR MAP_)))
          (T (TWO_NEIGHBOUR VERTEX (CDR MAP_))))) 
(PUT 'MK_VERTEXTR 'NUMBER-OF-ARGS 1) 
(PUT 'MK_VERTEXTR 'DEFINED-ON-LINE '1112) 
(PUT 'MK_VERTEXTR 'DEFINED-IN-FILE 'HEPHYS/CVITMAP.RED) 
(PUT 'MK_VERTEXTR 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE MK_VERTEXTR (MAP_)
    (COND ((NEQ (LENGTH MAP_) 3) (SET_ERROR_REAL 'MK_VERTEXTR (LIST MAP_)))
          (T (MK_VERTEXTR3 MAP_ 3)))) 
(PUT 'ADD_EDGE1 'NUMBER-OF-ARGS 2) 
(PUT 'ADD_EDGE1 'DEFINED-ON-LINE '1118) 
(PUT 'ADD_EDGE1 'DEFINED-IN-FILE 'HEPHYS/CVITMAP.RED) 
(PUT 'ADD_EDGE1 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE ADD_EDGE1 (EDGE VERTEX) (COND ((NULL EDGE) VERTEX) (T (CONS EDGE VERTEX)))) 
(PUT 'MK_VERTEXTR3 'NUMBER-OF-ARGS 2) 
(PUT 'MK_VERTEXTR3 'DEFINED-ON-LINE '1122) 
(PUT 'MK_VERTEXTR3 'DEFINED-IN-FILE 'HEPHYS/CVITMAP.RED) 
(PUT 'MK_VERTEXTR3 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE MK_VERTEXTR3 (MAP_ N)
    (COND ((LEQ N 0) NIL)
          (T
           (ADD_EDGE1 (TAKE_EDGE (CAR MAP_) (CDR MAP_))
            (MK_VERTEXTR3 (APPEND (CDR MAP_) (LIST (CAR MAP_)))
             (DIFFERENCE N 1)))))) 
(PUT 'TAKE_EDGE 'NUMBER-OF-ARGS 2) 
(PUT 'TAKE_EDGE 'DEFINED-ON-LINE '1129) 
(PUT 'TAKE_EDGE 'DEFINED-IN-FILE 'HEPHYS/CVITMAP.RED) 
(PUT 'TAKE_EDGE 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE TAKE_EDGE (VERTEX MAP_)
    (COND ((NULL VERTEX) NIL)
          ((AND (CONTAIN_EDGE (CAR VERTEX) MAP_)
                (NOT (EQ (CAR (CAR VERTEX)) (CAR _0EDGE))))
           (TAKE_EDGE (CDR VERTEX) MAP_))
          (T (CAR VERTEX)))) 
(PUT 'CONTAIN_EDGE 'NUMBER-OF-ARGS 2) 
(PUT 'CONTAIN_EDGE 'DEFINED-ON-LINE '1141) 
(PUT 'CONTAIN_EDGE 'DEFINED-IN-FILE 'HEPHYS/CVITMAP.RED) 
(PUT 'CONTAIN_EDGE 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE CONTAIN_EDGE (EDGE MAP_)
    (COND ((NULL MAP_) NIL)
          (T
           (OR (ASSOC (CAR EDGE) (CAR MAP_)) (CONTAIN_EDGE EDGE (CDR MAP_)))))) 
(PUT 'FIND_BUBLTR 'NUMBER-OF-ARGS 1) 
(PUT 'FIND_BUBLTR 'DEFINED-ON-LINE '1152) 
(PUT 'FIND_BUBLTR 'DEFINED-IN-FILE 'HEPHYS/CVITMAP.RED) 
(PUT 'FIND_BUBLTR 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE FIND_BUBLTR (ATLAS)
    (COND ((NULL *CVITBTR) ATLAS)
          (T
           (PROG (S)
             (SETQ S
                     (ERRORSET (LIST 'FIND_BUBLTR0 (MKQUOTE ATLAS)) *CVITERROR
                               *BACKTRACE))
             (RETURN (COND ((ATOM S) ATLAS) (T (CAR S)))))))) 
(PUT 'FIND_BUBLTR0 'NUMBER-OF-ARGS 1) 
(PUT 'FIND_BUBLTR0 'DEFINED-ON-LINE '1164) 
(PUT 'FIND_BUBLTR0 'DEFINED-IN-FILE 'HEPHYS/CVITMAP.RED) 
(PUT 'FIND_BUBLTR0 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE FIND_BUBLTR0 (ATLAS) (SORT_ATLAS (CDR (FIND_BUBLTR1 ATLAS OLD_EDGE_LIST)))) 
(PUT 'FIND_BUBLTR1 'NUMBER-OF-ARGS 2) 
(PUT 'FIND_BUBLTR1 'DEFINED-ON-LINE '1173) 
(PUT 'FIND_BUBLTR1 'DEFINED-IN-FILE 'HEPHYS/CVITMAP.RED) 
(PUT 'FIND_BUBLTR1 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE FIND_BUBLTR1 (ATLAS AL)
    (PROG (S C BUBLES)
      (SETQ S (FIND_BUBLES1 ATLAS AL))
      (SETQ C (CAR S))
      (SETQ ATLAS (CDR S))
      (SETQ BUBLES (APPEND C BUBLES))
     LOOP
      (SETQ S (FIND_TRIANGLES1 ATLAS AL))
      (SETQ C (CAR S))
      (SETQ ATLAS (CDR S))
      (SETQ BUBLES (APPEND C BUBLES))
      (COND ((NULL C) (RETURN (CONS BUBLES ATLAS))))
      (SETQ S (FIND_BUBLES1 ATLAS AL))
      (SETQ C (CAR S))
      (SETQ ATLAS (CDR S))
      (SETQ BUBLES (APPEND C BUBLES))
      (COND ((NULL C) (RETURN (CONS BUBLES ATLAS))))
      (GO LOOP))) 
(PUT 'REDUCE_TRIANGLE 'NUMBER-OF-ARGS 1) 
(PUT 'REDUCE_TRIANGLE 'DEFINED-ON-LINE '1195) 
(PUT 'REDUCE_TRIANGLE 'DEFINED-IN-FILE 'HEPHYS/CVITMAP.RED) 
(PUT 'REDUCE_TRIANGLE 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE REDUCE_TRIANGLE (TRIANGLE)
    (COND ((NULL TRIANGLE) NIL)
          (T
           (PROG (EXTEDGES VERTEX N)
             (SETQ VERTEX (MK_VERTEXTR TRIANGLE))
             (SETQ EXTEDGES (EXT_EDGES VERTEX))
             (SETQ N (LENGTH EXTEDGES))
             (RETURN
              (COND ((EQUAL N 1) NIL) (T (CONS N (CONS VERTEX TRIANGLE))))))))) 
(PUT 'SK_VERTEXTR 'NUMBER-OF-ARGS 1) 
(PUT 'SK_VERTEXTR 'DEFINED-ON-LINE '1214) 
(PUT 'SK_VERTEXTR 'DEFINED-IN-FILE 'HEPHYS/CVITMAP.RED) 
(PUT 'SK_VERTEXTR 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE SK_VERTEXTR (Z)
    (COND ((EQUAL (CAR Z) 1) NIL) ((EQUAL (CAR Z) 3) (CADR Z))
          (T (SET_ERROR_REAL 'SK_VERTEXTR (LIST Z))))) 
(PUT 'EXT_EDGES 'NUMBER-OF-ARGS 1) 
(PUT 'EXT_EDGES 'DEFINED-ON-LINE '1221) 
(PUT 'EXT_EDGES 'DEFINED-IN-FILE 'HEPHYS/CVITMAP.RED) 
(PUT 'EXT_EDGES 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE EXT_EDGES (VERTEX)
    (COND ((NULL VERTEX) NIL)
          ((OR (ASSOC (CAR (CAR VERTEX)) (CDR VERTEX))
               (EQ (CAR (CAR VERTEX)) (CAR _0EDGE)))
           (EXT_EDGES (DELETE_EDGE (CAR VERTEX) (CDR VERTEX))))
          (T (CONS (CAR VERTEX) (EXT_EDGES (CDR VERTEX)))))) 
(PUT 'EXT_EDGES_MAP_ 'NUMBER-OF-ARGS 1) 
(PUT 'EXT_EDGES_MAP_ 'DEFINED-ON-LINE '1233) 
(PUT 'EXT_EDGES_MAP_ 'DEFINED-IN-FILE 'HEPHYS/CVITMAP.RED) 
(PUT 'EXT_EDGES_MAP_ 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE EXT_EDGES_MAP_ (MAP_)
    (COND ((NULL MAP_) NIL)
          (T
           (EXT_MAP__VER (EXT_EDGES (CAR MAP_)) (EXT_EDGES_MAP_ (CDR MAP_)))))) 
(PUT 'EXT_MAP__VER 'NUMBER-OF-ARGS 2) 
(PUT 'EXT_MAP__VER 'DEFINED-ON-LINE '1240) 
(PUT 'EXT_MAP__VER 'DEFINED-IN-FILE 'HEPHYS/CVITMAP.RED) 
(PUT 'EXT_MAP__VER 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE EXT_MAP__VER (VLIST MLIST)
    (COND ((NULL VLIST) MLIST)
          ((MEMQ (CAR VLIST) MLIST)
           (EXT_MAP__VER (CDR VLIST) (DELETE (CAR VLIST) MLIST)))
          (T (EXT_MAP__VER (CDR VLIST) (CONS (CAR VLIST) MLIST))))) 
(PUT 'ADD_TADPOLES 'NUMBER-OF-ARGS 2) 
(PUT 'ADD_TADPOLES 'DEFINED-ON-LINE '1248) 
(PUT 'ADD_TADPOLES 'DEFINED-IN-FILE 'HEPHYS/CVITMAP.RED) 
(PUT 'ADD_TADPOLES 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE ADD_TADPOLES (BUBLES ALST)
    (COND ((NULL BUBLES) ALST)
          ((EQUAL (CAAR BUBLES) 1)
           (ADD_TADPOLES (CDR BUBLES)
            (CONS (CONS (CAR (MK_VERTEXTR (CADR (CAR BUBLES)))) 0) ALST)))
          (T (ADD_TADPOLES (CDR BUBLES) ALST)))) 
(NULL (SETQ *MODE 'SYMBOLIC)) 
(GLOBAL '(*CVITRACE)) 
(SETQ *CVITRACE NIL) 
(FLAG '(CVITRACE) 'SWITCH) 
(PUT 'SORT_ATLAS 'NUMBER-OF-ARGS 1) 
(PUT 'SORT_ATLAS 'DEFINED-ON-LINE '1271) 
(PUT 'SORT_ATLAS 'DEFINED-IN-FILE 'HEPHYS/CVITMAP.RED) 
(PUT 'SORT_ATLAS 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE SORT_ATLAS (ATLAS)
    (COND ((NULL ATLAS) ATLAS)
          (T
           ((LAMBDA (Z)
              (COND (Z Z) (T (SET_ERROR_REAL 'SORT_ATLAS (LIST ATLAS)))))
            (SORT_ATLAS1 ATLAS))))) 
(PUT 'SORT_ATLAS1 'NUMBER-OF-ARGS 1) 
(PUT 'SORT_ATLAS1 'DEFINED-ON-LINE '1280) 
(PUT 'SORT_ATLAS1 'DEFINED-IN-FILE 'HEPHYS/CVITMAP.RED) 
(PUT 'SORT_ATLAS1 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE SORT_ATLAS1 (ATLAS)
    ((LAMBDA (Z)
       (COND (Z Z) (*CVITERROR (PRINT_ATLAS_SORT ATLAS NIL)) (T NIL)))
     (ATLAS_SORT ATLAS OLD_EDGE_LIST))) 
(PUT 'PRINT_ATLAS_SORT 'NUMBER-OF-ARGS 2) 
(PUT 'PRINT_ATLAS_SORT 'DEFINED-ON-LINE '1288) 
(PUT 'PRINT_ATLAS_SORT 'DEFINED-IN-FILE 'HEPHYS/CVITMAP.RED) 
(PUT 'PRINT_ATLAS_SORT 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE PRINT_ATLAS_SORT (ATLAS EDGELIST)
    (PROGN
     (PRINT "Atlas not sorted ")
     (PRINT_ATLAS ATLAS)
     (COND
      (EDGELIST
       (PROGN
        (PRINT "Defined edges: ")
        (PROG (EDGE)
          (SETQ EDGE EDGELIST)
         LAB
          (COND ((NULL EDGE) (RETURN NIL)))
          ((LAMBDA (EDGE) (PRINT EDGE)) (CAR EDGE))
          (SETQ EDGE (CDR EDGE))
          (GO LAB)))))
     NIL)) 
(PUT 'ATLAS_SORT 'NUMBER-OF-ARGS 2) 
(PUT 'ATLAS_SORT 'DEFINED-ON-LINE '1296) 
(PUT 'ATLAS_SORT 'DEFINED-IN-FILE 'HEPHYS/CVITMAP.RED) 
(PUT 'ATLAS_SORT 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE ATLAS_SORT (ATLAS EDGELIST)
    (PROG (Z NEWEDGES)
      (SETQ NEWEDGES (STORE_EDGES NEW_EDGE_LIST))
      (SETQ Z
              (ERRORSET (LIST 'ATLAS_SORT1 (MKQUOTE ATLAS) (MKQUOTE EDGELIST))
                        *CVITRACE *BACKTRACE))
      (RETURN
       (COND
        ((ATOM Z)
         (PROGN
          (RESTOR_EDGES NEWEDGES NEW_EDGE_LIST)
          (COND (*CVITRACE (PRINT_ATLAS_SORT ATLAS EDGELIST)) (T NIL))))
        (T (CAR Z)))))) 
(PUT 'STORE_EDGES 'NUMBER-OF-ARGS 1) 
(PUT 'STORE_EDGES 'DEFINED-ON-LINE '1312) 
(PUT 'STORE_EDGES 'DEFINED-IN-FILE 'HEPHYS/CVITMAP.RED) 
(PUT 'STORE_EDGES 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE STORE_EDGES (EDGELIST)
    (PROG (EDGE FORALL-RESULT FORALL-ENDPTR)
      (SETQ EDGE EDGELIST)
      (COND ((NULL EDGE) (RETURN NIL)))
      (SETQ FORALL-RESULT
              (SETQ FORALL-ENDPTR
                      (CONS
                       ((LAMBDA (EDGE) (CONS (CAR EDGE) (CDR EDGE)))
                        (CAR EDGE))
                       NIL)))
     LOOPLABEL
      (SETQ EDGE (CDR EDGE))
      (COND ((NULL EDGE) (RETURN FORALL-RESULT)))
      (RPLACD FORALL-ENDPTR
              (CONS ((LAMBDA (EDGE) (CONS (CAR EDGE) (CDR EDGE))) (CAR EDGE))
                    NIL))
      (SETQ FORALL-ENDPTR (CDR FORALL-ENDPTR))
      (GO LOOPLABEL))) 
(PUT 'RESTOR_EDGES 'NUMBER-OF-ARGS 2) 
(PUT 'RESTOR_EDGES 'DEFINED-ON-LINE '1316) 
(PUT 'RESTOR_EDGES 'DEFINED-IN-FILE 'HEPHYS/CVITMAP.RED) 
(PUT 'RESTOR_EDGES 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE RESTOR_EDGES (EDGELIST NEWEDGELIST)
    (COND
     ((NULL EDGELIST)
      (COND
       (NEWEDGELIST (SET_ERROR_REAL 'RESTOR_EDGES (LIST EDGELIST NEWEDGELIST)))
       (T NIL)))
     ((NULL NEWEDGELIST)
      (SET_ERROR_REAL 'RESTOR_EDGES (LIST EDGELIST NEWEDGELIST)))
     ((EQUAL (CAR (CAR EDGELIST)) (CAR (CAR NEWEDGELIST)))
      (PROGN
       (RPLACD (CAR NEWEDGELIST) (CDAR EDGELIST))
       (CONS (CAR NEWEDGELIST)
             (RESTOR_EDGES (CDR EDGELIST) (CDR NEWEDGELIST)))))
     (T (SET_ERROR_REAL 'RESTOR_EDGES (LIST EDGELIST NEWEDGELIST))))) 
(PUT 'DEFINED_ATLAS 'NUMBER-OF-ARGS 2) 
(PUT 'DEFINED_ATLAS 'DEFINED-ON-LINE '1332) 
(PUT 'DEFINED_ATLAS 'DEFINED-IN-FILE 'HEPHYS/CVITMAP.RED) 
(PUT 'DEFINED_ATLAS 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE DEFINED_ATLAS (ATLAS EDGELIST)
    ((LAMBDA (EDGES) (DEFINED_EDGES EDGES EDGELIST)) (ATLAS_EDGES ATLAS))) 
(PUT 'DEFINED_APPEND 'NUMBER-OF-ARGS 2) 
(PUT 'DEFINED_APPEND 'DEFINED-ON-LINE '1339) 
(PUT 'DEFINED_APPEND 'DEFINED-IN-FILE 'HEPHYS/CVITMAP.RED) 
(PUT 'DEFINED_APPEND 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE DEFINED_APPEND (EDGES EDGELIST)
    (COND ((NULL EDGES) EDGELIST)
          ((DEFINED_EDGE (CAR EDGES) EDGELIST)
           (CONS (CAR EDGES) (DEFINED_APPEND (CDR EDGES) EDGELIST)))
          (T (DEFINED_APPEND (CDR EDGES) EDGELIST)))) 
(PUT 'DEFINED_EDGES 'NUMBER-OF-ARGS 2) 
(PUT 'DEFINED_EDGES 'DEFINED-ON-LINE '1345) 
(PUT 'DEFINED_EDGES 'DEFINED-IN-FILE 'HEPHYS/CVITMAP.RED) 
(PUT 'DEFINED_EDGES 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE DEFINED_EDGES (EDGES EDGELIST)
    (COND ((NULL EDGES) T)
          ((DEFINED_EDGE (CAR EDGES) EDGELIST)
           (DEFINED_EDGES (CDR EDGES) (CONS (CAR EDGES) EDGELIST)))
          (T (DEFINEDL_EDGES (CDR EDGES) (LIST (CAR EDGES)) EDGELIST)))) 
(PUT 'DEFINEDL_EDGES 'NUMBER-OF-ARGS 3) 
(PUT 'DEFINEDL_EDGES 'DEFINED-ON-LINE '1353) 
(PUT 'DEFINEDL_EDGES 'DEFINED-IN-FILE 'HEPHYS/CVITMAP.RED) 
(PUT 'DEFINEDL_EDGES 'PROCEDURE_TYPE
     '(ARROW (TIMES GENERAL GENERAL GENERAL) GENERAL)) 
(DE DEFINEDL_EDGES (EDGES PASSED EDGELIST)
    (COND ((NULL EDGES) (NULL PASSED))
          ((DEFINED_EDGE (CAR EDGES) EDGELIST)
           (DEFINED_EDGES (NCONC PASSED (CDR EDGES))
            (CONS (CAR EDGES) EDGELIST)))
          (T (DEFINEDL_EDGES (CDR EDGES) (CONS (CAR EDGES) PASSED) EDGELIST)))) 
(PUT 'ATLAS_SORT1 'NUMBER-OF-ARGS 2) 
(PUT 'ATLAS_SORT1 'DEFINED-ON-LINE '1360) 
(PUT 'ATLAS_SORT1 'DEFINED-IN-FILE 'HEPHYS/CVITMAP.RED) 
(PUT 'ATLAS_SORT1 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE ATLAS_SORT1 (ATLAS EDGELIST)
    (COND
     ((ALL_DEFINED (CAR ATLAS) EDGELIST)
      (LIST (CAR ATLAS)
            (COEFF_SORTL (CADR ATLAS) NIL
             (NCONC (MAP__EDGES (CAR ATLAS)) EDGELIST))
            (CADDR ATLAS)))
     (T
      (COEFF_SORT (COEFF_ORDN (CADR ATLAS) EDGELIST)
       (MK_ATLASLIST (CAR ATLAS) NIL (CADDR ATLAS)) EDGELIST)))) 
(PUT 'COEFF_SORTL 'NUMBER-OF-ARGS 3) 
(PUT 'COEFF_SORTL 'DEFINED-ON-LINE '1375) 
(PUT 'COEFF_SORTL 'DEFINED-IN-FILE 'HEPHYS/CVITMAP.RED) 
(PUT 'COEFF_SORTL 'PROCEDURE_TYPE
     '(ARROW (TIMES GENERAL GENERAL GENERAL) GENERAL)) 
(DE COEFF_SORTL (ATLASLIST PASSED EDGELIST)
    (COEFF_SORTL1 (COEFF_ORDN ATLASLIST EDGELIST) PASSED EDGELIST)) 
(PUT 'COEFF_SORT 'NUMBER-OF-ARGS 3) 
(PUT 'COEFF_SORT 'DEFINED-ON-LINE '1378) 
(PUT 'COEFF_SORT 'DEFINED-IN-FILE 'HEPHYS/CVITMAP.RED) 
(PUT 'COEFF_SORT 'PROCEDURE_TYPE
     '(ARROW (TIMES GENERAL GENERAL GENERAL) GENERAL)) 
(DE COEFF_SORT (ATLASLIST PASSED EDGELIST)
    (COND
     (ATLASLIST
      ((LAMBDA (Z)
         (COND
          (Z
           (LIST (CAR Z)
                 (COEFF_SORTL (APPEND (CADR Z) (APPEND (CDR ATLASLIST) PASSED))
                  NIL (NCONC (MAP__EDGES (CAR Z)) EDGELIST))
                 (CADDR Z)))
          (T
           (COEFF_SORT (CDR ATLASLIST) (CONS (CAR ATLASLIST) PASSED)
            EDGELIST))))
       (ATLAS_SORT (CAR ATLASLIST) EDGELIST)))
     (T (COEFF_SORT_F PASSED NIL EDGELIST)))) 
(PUT 'COEFF_SORT_F 'NUMBER-OF-ARGS 3) 
(PUT 'COEFF_SORT_F 'DEFINED-ON-LINE '1396) 
(PUT 'COEFF_SORT_F 'DEFINED-IN-FILE 'HEPHYS/CVITMAP.RED) 
(PUT 'COEFF_SORT_F 'PROCEDURE_TYPE
     '(ARROW (TIMES GENERAL GENERAL GENERAL) GENERAL)) 
(DE COEFF_SORT_F (PASSED FAREWELL EDGELIST)
    (COND ((NULL PASSED) (COND ((NULL FAREWELL) NIL) (T (ERROR 51 NIL))))
          ((CADR (CAR PASSED))
           (COEFF_SORT
            (APPEND (CADR (CAR PASSED))
                    (CONS (LIST (CAR (CAR PASSED)) NIL (CADDR (CAR PASSED)))
                          (APPEND (CDR PASSED) FAREWELL)))
            NIL EDGELIST))
          (T
           (COEFF_SORT_F (CDR PASSED) (CONS (CAR PASSED) FAREWELL) EDGELIST)))) 
(PUT 'COEFF_ORDN 'NUMBER-OF-ARGS 2) 
(PUT 'COEFF_ORDN 'DEFINED-ON-LINE '1416) 
(PUT 'COEFF_ORDN 'DEFINED-IN-FILE 'HEPHYS/CVITMAP.RED) 
(PUT 'COEFF_ORDN 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE COEFF_ORDN (ATLASLIST EDGELIST)
    (PROG (SATLAS FORALL-RESULT FORALL-ENDPTR)
      (SETQ SATLAS (COEFF_ORDN1 (MK_SPEC_ATLASLIST ATLASLIST EDGELIST) NIL))
      (COND ((NULL SATLAS) (RETURN NIL)))
      (SETQ FORALL-RESULT
              (SETQ FORALL-ENDPTR
                      (CONS ((LAMBDA (SATLAS) (CDR SATLAS)) (CAR SATLAS))
                            NIL)))
     LOOPLABEL
      (SETQ SATLAS (CDR SATLAS))
      (COND ((NULL SATLAS) (RETURN FORALL-RESULT)))
      (RPLACD FORALL-ENDPTR
              (CONS ((LAMBDA (SATLAS) (CDR SATLAS)) (CAR SATLAS)) NIL))
      (SETQ FORALL-ENDPTR (CDR FORALL-ENDPTR))
      (GO LOOPLABEL))) 
(PUT 'MK_SPEC_ATLASLIST 'NUMBER-OF-ARGS 2) 
(PUT 'MK_SPEC_ATLASLIST 'DEFINED-ON-LINE '1421) 
(PUT 'MK_SPEC_ATLASLIST 'DEFINED-IN-FILE 'HEPHYS/CVITMAP.RED) 
(PUT 'MK_SPEC_ATLASLIST 'PROCEDURE_TYPE
     '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE MK_SPEC_ATLASLIST (ATLASLIST EDGELIST)
    (PROG (ATLAS FORALL-RESULT FORALL-ENDPTR)
      (SETQ ATLAS ATLASLIST)
      (COND ((NULL ATLAS) (RETURN NIL)))
      (SETQ FORALL-RESULT
              (SETQ FORALL-ENDPTR
                      (CONS
                       ((LAMBDA (ATLAS) (MK_SPEC_ATLAS ATLAS EDGELIST))
                        (CAR ATLAS))
                       NIL)))
     LOOPLABEL
      (SETQ ATLAS (CDR ATLAS))
      (COND ((NULL ATLAS) (RETURN FORALL-RESULT)))
      (RPLACD FORALL-ENDPTR
              (CONS
               ((LAMBDA (ATLAS) (MK_SPEC_ATLAS ATLAS EDGELIST)) (CAR ATLAS))
               NIL))
      (SETQ FORALL-ENDPTR (CDR FORALL-ENDPTR))
      (GO LOOPLABEL))) 
(PUT 'MK_SPEC_ATLAS 'NUMBER-OF-ARGS 2) 
(PUT 'MK_SPEC_ATLAS 'DEFINED-ON-LINE '1424) 
(PUT 'MK_SPEC_ATLAS 'DEFINED-IN-FILE 'HEPHYS/CVITMAP.RED) 
(PUT 'MK_SPEC_ATLAS 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE MK_SPEC_ATLAS (ATLAS EDGELIST)
    ((LAMBDA (EDGES)
       (CONS (CONS EDGES (DIFF_EDGES (EDGES_PARENTS EDGES) EDGELIST)) ATLAS))
     (ATLAS_EDGES ATLAS))) 
(PUT 'EDGES_PARENTS 'NUMBER-OF-ARGS 1) 
(PUT 'EDGES_PARENTS 'DEFINED-ON-LINE '1433) 
(PUT 'EDGES_PARENTS 'DEFINED-IN-FILE 'HEPHYS/CVITMAP.RED) 
(PUT 'EDGES_PARENTS 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE EDGES_PARENTS (EDGELIST)
    (COND ((NULL EDGELIST) NIL)
          (T
           ((LAMBDA (Z) (APPEND Z (EDGES_PARENTS (CDR EDGELIST))))
            (EDGE_NEW_PARENTS (CAR EDGELIST)))))) 
(PUT 'EDGE_NEW_PARENTS 'NUMBER-OF-ARGS 1) 
(PUT 'EDGE_NEW_PARENTS 'DEFINED-ON-LINE '1440) 
(PUT 'EDGE_NEW_PARENTS 'DEFINED-IN-FILE 'HEPHYS/CVITMAP.RED) 
(PUT 'EDGE_NEW_PARENTS 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE EDGE_NEW_PARENTS (EDGE)
    (COND ((ASSOC (CAR EDGE) OLD_EDGE_LIST) NIL)
          (T
           ((LAMBDA (NAMES) (EDGE_NEW_PARENT (LIST (CAR NAMES) (CDR NAMES))))
            (CADR EDGE))))) 
(PUT 'EDGE_NEW_PARENT 'NUMBER-OF-ARGS 1) 
(PUT 'EDGE_NEW_PARENT 'DEFINED-ON-LINE '1447) 
(PUT 'EDGE_NEW_PARENT 'DEFINED-IN-FILE 'HEPHYS/CVITMAP.RED) 
(PUT 'EDGE_NEW_PARENT 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE EDGE_NEW_PARENT (NAMELIST)
    (COND ((NULL NAMELIST) NIL)
          (T
           ((LAMBDA (Z)
              (COND (Z (CONS Z (EDGE_NEW_PARENT (CDR NAMELIST))))
                    (T (EDGE_NEW_PARENT (CDR NAMELIST)))))
            (ASSOC (CAR NAMELIST) NEW_EDGE_LIST))))) 
(PUT 'DIFF_EDGES 'NUMBER-OF-ARGS 2) 
(PUT 'DIFF_EDGES 'DEFINED-ON-LINE '1455) 
(PUT 'DIFF_EDGES 'DEFINED-IN-FILE 'HEPHYS/CVITMAP.RED) 
(PUT 'DIFF_EDGES 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE DIFF_EDGES (EDGELIST1 EDGELIST2)
    (COND ((NULL EDGELIST1) NIL)
          ((ASSOC (CAR (CAR EDGELIST1)) EDGELIST2)
           (DIFF_EDGES (CDR EDGELIST1) EDGELIST2))
          (T (CONS (CAR EDGELIST1) (DIFF_EDGES (CDR EDGELIST1) EDGELIST2))))) 
(PUT 'COEFF_ORDN1 'NUMBER-OF-ARGS 2) 
(PUT 'COEFF_ORDN1 'DEFINED-ON-LINE '1463) 
(PUT 'COEFF_ORDN1 'DEFINED-IN-FILE 'HEPHYS/CVITMAP.RED) 
(PUT 'COEFF_ORDN1 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE COEFF_ORDN1 (SATLASLIST PASSED)
    (COND ((NULL SATLASLIST) PASSED)
          (T
           ((LAMBDA (Z)
              (COND (Z (COEFF_ORDN1 Z PASSED))
                    (T
                     (COEFF_ORDN1 (CDR SATLASLIST)
                      (CONS (CAR SATLASLIST) PASSED)))))
            (P_SUBSATLASLIST (CAR SATLASLIST) (CDR SATLASLIST) NIL))))) 
(PUT 'P_SUBSATLASLIST 'NUMBER-OF-ARGS 3) 
(PUT 'P_SUBSATLASLIST 'DEFINED-ON-LINE '1475) 
(PUT 'P_SUBSATLASLIST 'DEFINED-IN-FILE 'HEPHYS/CVITMAP.RED) 
(PUT 'P_SUBSATLASLIST 'PROCEDURE_TYPE
     '(ARROW (TIMES GENERAL GENERAL GENERAL) GENERAL)) 
(DE P_SUBSATLASLIST (SATLAS SATLASLIST PASSED)
    (COND ((NULL SATLASLIST) NIL)
          ((OR_SUBSATLAS SATLAS (CAR SATLASLIST))
           (CONS (EMBED_SATLASES SATLAS (CAR SATLASLIST))
                 (NCONC PASSED (CDR SATLASLIST))))
          (T
           (P_SUBSATLASLIST SATLAS (CDR SATLASLIST)
            (CONS (CAR SATLASLIST) PASSED))))) 
(PUT 'OR_SUBSATLAS 'NUMBER-OF-ARGS 2) 
(PUT 'OR_SUBSATLAS 'DEFINED-ON-LINE '1485) 
(PUT 'OR_SUBSATLAS 'DEFINED-IN-FILE 'HEPHYS/CVITMAP.RED) 
(PUT 'OR_SUBSATLAS 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE OR_SUBSATLAS (SATLAS1 SATLAS2)
    (OR (P_SUBSATLAS SATLAS1 SATLAS2) (P_SUBSATLAS SATLAS2 SATLAS1))) 
(PUT 'P_SUBSATLAS 'NUMBER-OF-ARGS 2) 
(PUT 'P_SUBSATLAS 'DEFINED-ON-LINE '1490) 
(PUT 'P_SUBSATLAS 'DEFINED-IN-FILE 'HEPHYS/CVITMAP.RED) 
(PUT 'P_SUBSATLAS 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE P_SUBSATLAS (SATLAS1 SATLAS2)
    (OR (P_SUBEDGELIST (CAAR SATLAS1) (CAAR SATLAS2))
        (P_INBOTHLISTS (CDAR SATLAS1) (CAAR SATLAS2)))) 
(PUT 'P_INBOTHLISTS 'NUMBER-OF-ARGS 2) 
(PUT 'P_INBOTHLISTS 'DEFINED-ON-LINE '1495) 
(PUT 'P_INBOTHLISTS 'DEFINED-IN-FILE 'HEPHYS/CVITMAP.RED) 
(PUT 'P_INBOTHLISTS 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE P_INBOTHLISTS (EDGELIST1 EDGELIST2)
    (COND ((NULL EDGELIST1) NIL)
          (T
           (OR (ASSOC (CAR (CAR EDGELIST1)) EDGELIST2)
               (P_INBOTHLISTS (CDR EDGELIST1) EDGELIST2))))) 
(PUT 'P_SUBEDGELIST 'NUMBER-OF-ARGS 2) 
(PUT 'P_SUBEDGELIST 'DEFINED-ON-LINE '1501) 
(PUT 'P_SUBEDGELIST 'DEFINED-IN-FILE 'HEPHYS/CVITMAP.RED) 
(PUT 'P_SUBEDGELIST 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE P_SUBEDGELIST (EDGELIST1 EDGELIST2)
    (COND ((NULL EDGELIST1) T)
          (T
           (AND (ASSOC (CAR (CAR EDGELIST1)) EDGELIST2)
                (P_SUBEDGELIST (CDR EDGELIST1) EDGELIST2))))) 
(PUT 'EMBED_SATLASES 'NUMBER-OF-ARGS 2) 
(PUT 'EMBED_SATLASES 'DEFINED-ON-LINE '1508) 
(PUT 'EMBED_SATLASES 'DEFINED-IN-FILE 'HEPHYS/CVITMAP.RED) 
(PUT 'EMBED_SATLASES 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE EMBED_SATLASES (SATLAS1 SATLAS2)
    (COND ((P_SUBSATLAS SATLAS1 SATLAS2) (EMBED_SATLAS SATLAS1 SATLAS2))
          ((P_SUBSATLAS SATLAS2 SATLAS1) (EMBED_SATLAS SATLAS2 SATLAS1))
          (T (SET_ERROR_REAL 'EMBED_SATLASES (LIST SATLAS1 SATLAS2))))) 
(PUT 'EMBED_SATLAS 'NUMBER-OF-ARGS 2) 
(PUT 'EMBED_SATLAS 'DEFINED-ON-LINE '1514) 
(PUT 'EMBED_SATLAS 'DEFINED-IN-FILE 'HEPHYS/CVITMAP.RED) 
(PUT 'EMBED_SATLAS 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE EMBED_SATLAS (SATLAS1 SATLAS2)
    (CONS (CAR SATLAS2) (EMBED_ATLAS (CDR SATLAS1) (CDR SATLAS2)))) 
(PUT 'EMBED_ATLAS 'NUMBER-OF-ARGS 2) 
(PUT 'EMBED_ATLAS 'DEFINED-ON-LINE '1517) 
(PUT 'EMBED_ATLAS 'DEFINED-IN-FILE 'HEPHYS/CVITMAP.RED) 
(PUT 'EMBED_ATLAS 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE EMBED_ATLAS (ATLAS1 ATLAS2)
    (LIST (CAR ATLAS2) (CONS ATLAS1 (CADR ATLAS2)) (CADDR ATLAS2))) 
(PUT 'COEFF_SORTL1 'NUMBER-OF-ARGS 3) 
(PUT 'COEFF_SORTL1 'DEFINED-ON-LINE '1523) 
(PUT 'COEFF_SORTL1 'DEFINED-IN-FILE 'HEPHYS/CVITMAP.RED) 
(PUT 'COEFF_SORTL1 'PROCEDURE_TYPE
     '(ARROW (TIMES GENERAL GENERAL GENERAL) GENERAL)) 
(DE COEFF_SORTL1 (ATLASLIST PASSED EDGELIST)
    (COND
     ((NULL ATLASLIST)
      (COND ((NULL PASSED) NIL) (T (LIST (COEFF_SORT_F PASSED NIL EDGELIST)))))
     (T
      ((LAMBDA (Z)
         (COND (Z (CONS Z (COEFF_SORTL1 (CDR ATLASLIST) PASSED EDGELIST)))
               (T
                (COEFF_SORTL1 (CDR ATLASLIST) (CONS (CAR ATLASLIST) PASSED)
                 EDGELIST))))
       (ATLAS_SORT (CAR ATLASLIST) EDGELIST))))) 
(NULL (SETQ *MODE 'SYMBOLIC)) 
(PUT 'RENAMEL_EDGES 'NUMBER-OF-ARGS 1) 
(PUT 'RENAMEL_EDGES 'DEFINED-ON-LINE '1542) 
(PUT 'RENAMEL_EDGES 'DEFINED-IN-FILE 'HEPHYS/CVITMAP.RED) 
(PUT 'RENAMEL_EDGES 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE RENAMEL_EDGES (EDGES)
    (COND
     ((NOT (EQ (CAR (CAR EDGES)) (CAR (CADR EDGES))))
      (RENAME_EDGES (CAR EDGES) (CADR EDGES))))) 
(PUT 'MAP__VERTEX_FIRST 'NUMBER-OF-ARGS 1) 
(PUT 'MAP__VERTEX_FIRST 'DEFINED-ON-LINE '1546) 
(PUT 'MAP__VERTEX_FIRST 'DEFINED-IN-FILE 'HEPHYS/CVITMAP.RED) 
(PUT 'MAP__VERTEX_FIRST 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE MAP__VERTEX_FIRST (MAP_) (LIST (CAR MAP_))) 
(PUT 'BOTH_EMPTY_MAP_S 'NUMBER-OF-ARGS 2) 
(PUT 'BOTH_EMPTY_MAP_S 'DEFINED-ON-LINE '1550) 
(PUT 'BOTH_EMPTY_MAP_S 'DEFINED-IN-FILE 'HEPHYS/CVITMAP.RED) 
(PUT 'BOTH_EMPTY_MAP_S 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE BOTH_EMPTY_MAP_S (MAP_1 MAP_2) (AND (NULL MAP_1) (NULL MAP_2))) 
(PUT 'HAS_PARENTS 'NUMBER-OF-ARGS 1) 
(PUT 'HAS_PARENTS 'DEFINED-ON-LINE '1555) 
(PUT 'HAS_PARENTS 'DEFINED-IN-FILE 'HEPHYS/CVITMAP.RED) 
(PUT 'HAS_PARENTS 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE HAS_PARENTS (EDGE)
    ((LAMBDA (Z) (AND (NEQ (CAR Z) '?) (NEQ (CDR Z) '?))) (CADR EDGE))) 
(PUT 'LESS_EDGE 'NUMBER-OF-ARGS 3) 
(PUT 'LESS_EDGE 'DEFINED-ON-LINE '1561) 
(PUT 'LESS_EDGE 'DEFINED-IN-FILE 'HEPHYS/CVITMAP.RED) 
(PUT 'LESS_EDGE 'PROCEDURE_TYPE
     '(ARROW (TIMES GENERAL GENERAL GENERAL) GENERAL)) 
(DE LESS_EDGE (EDGE1 EDGE2 EDGELIST)
    (LESS_EDGE_NAME (CAR EDGE1) (CAR EDGE2) EDGELIST)) 
(PUT 'LESS_EDGE_NAME 'NUMBER-OF-ARGS 3) 
(PUT 'LESS_EDGE_NAME 'DEFINED-ON-LINE '1567) 
(PUT 'LESS_EDGE_NAME 'DEFINED-IN-FILE 'HEPHYS/CVITMAP.RED) 
(PUT 'LESS_EDGE_NAME 'PROCEDURE_TYPE
     '(ARROW (TIMES GENERAL GENERAL GENERAL) GENERAL)) 
(DE LESS_EDGE_NAME (NAME1 NAME2 EDGELIST)
    (COND
     ((NULL EDGELIST)
      (SET_ERROR_REAL 'LESS_EDGE_NAME (LIST NAME1 NAME2 EDGELIST)))
     ((EQ NAME1 (CAR (CAR EDGELIST))) NIL) ((EQ NAME2 (CAR (CAR EDGELIST))) T)
     (T (LESS_EDGE_NAME NAME1 NAME2 (CDR EDGELIST))))) 
(PUT 'RENAME_EDGES 'NUMBER-OF-ARGS 2) 
(PUT 'RENAME_EDGES 'DEFINED-ON-LINE '1576) 
(PUT 'RENAME_EDGES 'DEFINED-IN-FILE 'HEPHYS/CVITMAP.RED) 
(PUT 'RENAME_EDGES 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE RENAME_EDGES (EDGE1 EDGE2)
    (COND
     ((ASSOC (CAR EDGE1) OLD_EDGE_LIST)
      (COND ((ASSOC (CAR EDGE2) OLD_EDGE_LIST) (REPLACE_OLD_EDGE EDGE1 EDGE2))
            (T (REPLACE_EDGE EDGE2 EDGE1 NEW_EDGE_LIST))))
     ((ASSOC (CAR EDGE2) OLD_EDGE_LIST)
      (REPLACE_EDGE EDGE1 EDGE2 NEW_EDGE_LIST))
     ((HAS_PARENTS EDGE1)
      (COND ((HAS_PARENTS EDGE2) (REPLACE_NEW_EDGE EDGE1 EDGE2))
            (T (REPLACE_EDGE EDGE2 EDGE1 NEW_EDGE_LIST))))
     ((HAS_PARENTS EDGE2) (REPLACE_EDGE EDGE1 EDGE2 NEW_EDGE_LIST))
     (T (REPLACE_NEW_EDGE EDGE1 EDGE2)))) 
(PUT 'REPLACE_NEW_EDGE 'NUMBER-OF-ARGS 2) 
(PUT 'REPLACE_NEW_EDGE 'DEFINED-ON-LINE '1593) 
(PUT 'REPLACE_NEW_EDGE 'DEFINED-IN-FILE 'HEPHYS/CVITMAP.RED) 
(PUT 'REPLACE_NEW_EDGE 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE REPLACE_NEW_EDGE (EDGE1 EDGE2) (REPLACE_O_EDGE EDGE1 EDGE2 NEW_EDGE_LIST)) 
(PUT 'REPLACE_OLD_EDGE 'NUMBER-OF-ARGS 2) 
(PUT 'REPLACE_OLD_EDGE 'DEFINED-ON-LINE '1596) 
(PUT 'REPLACE_OLD_EDGE 'DEFINED-IN-FILE 'HEPHYS/CVITMAP.RED) 
(PUT 'REPLACE_OLD_EDGE 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE REPLACE_OLD_EDGE (EDGE1 EDGE2)
    (COND
     ((IS_INDEXP EDGE1)
      (COND ((IS_INDEXP EDGE2) (REPLACE_O_EDGE EDGE1 EDGE2 OLD_EDGE_LIST))
            (T (REPLACE_EDGE EDGE1 EDGE2 OLD_EDGE_LIST))))
     ((IS_INDEXP EDGE2) (REPLACE_EDGE EDGE2 EDGE1 OLD_EDGE_LIST))
     (T (REPLACE_O_EDGE EDGE1 EDGE2 OLD_EDGE_LIST)))) 
(PUT 'REPLACE_O_EDGE 'NUMBER-OF-ARGS 3) 
(PUT 'REPLACE_O_EDGE 'DEFINED-ON-LINE '1608) 
(PUT 'REPLACE_O_EDGE 'DEFINED-IN-FILE 'HEPHYS/CVITMAP.RED) 
(PUT 'REPLACE_O_EDGE 'PROCEDURE_TYPE
     '(ARROW (TIMES GENERAL GENERAL GENERAL) GENERAL)) 
(DE REPLACE_O_EDGE (EDGE1 EDGE2 EDGELIST)
    (COND
     ((LESS_EDGE EDGE1 EDGE2 EDGELIST) (REPLACE_EDGE EDGE2 EDGE1 EDGELIST))
     (T (REPLACE_EDGE EDGE1 EDGE2 EDGELIST)))) 
(PUT 'COPY_EDGE 'NUMBER-OF-ARGS 1) 
(PUT 'COPY_EDGE 'DEFINED-ON-LINE '1613) 
(PUT 'COPY_EDGE 'DEFINED-IN-FILE 'HEPHYS/CVITMAP.RED) 
(PUT 'COPY_EDGE 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE COPY_EDGE (EDGE)
    (CONS (CAR EDGE) (CONS (CADR EDGE) (CONS (CADDR EDGE) NIL)))) 
(PUT 'REPLACE_EDGE2 'NUMBER-OF-ARGS 2) 
(PUT 'REPLACE_EDGE2 'DEFINED-ON-LINE '1617) 
(PUT 'REPLACE_EDGE2 'DEFINED-IN-FILE 'HEPHYS/CVITMAP.RED) 
(PUT 'REPLACE_EDGE2 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE REPLACE_EDGE2 (OLDEDGE NEWEDGE)
    (PROGN (RPLACA OLDEDGE (CAR NEWEDGE)) (RPLACD OLDEDGE (CDR NEWEDGE)))) 
(PUT 'REPLACE_EDGE 'NUMBER-OF-ARGS 3) 
(PUT 'REPLACE_EDGE 'DEFINED-ON-LINE '1621) 
(PUT 'REPLACE_EDGE 'DEFINED-IN-FILE 'HEPHYS/CVITMAP.RED) 
(PUT 'REPLACE_EDGE 'PROCEDURE_TYPE
     '(ARROW (TIMES GENERAL GENERAL GENERAL) GENERAL)) 
(DE REPLACE_EDGE (OLDEDGE NEWEDGE EDGELIST)
    (REPLACE1_EDGE (COPY_EDGE OLDEDGE) NEWEDGE EDGELIST)) 
(PUT 'REPLACE1_EDGE 'NUMBER-OF-ARGS 3) 
(PUT 'REPLACE1_EDGE 'DEFINED-ON-LINE '1624) 
(PUT 'REPLACE1_EDGE 'DEFINED-IN-FILE 'HEPHYS/CVITMAP.RED) 
(PUT 'REPLACE1_EDGE 'PROCEDURE_TYPE
     '(ARROW (TIMES GENERAL GENERAL GENERAL) GENERAL)) 
(DE REPLACE1_EDGE (OLDEDGE NEWEDGE EDGELIST)
    (COND ((NULL EDGELIST) NIL)
          (T
           (PROGN
            (COND
             ((EQ (CAR OLDEDGE) (CAR (CAR EDGELIST)))
              (REPLACE_EDGE2 (CAR EDGELIST) NEWEDGE)))
            (REPLACE1_PARENTS OLDEDGE NEWEDGE (CAR EDGELIST))
            (REPLACE1_EDGE OLDEDGE NEWEDGE (CDR EDGELIST)))))) 
(PUT 'REPLACE1_PARENTS 'NUMBER-OF-ARGS 3) 
(PUT 'REPLACE1_PARENTS 'DEFINED-ON-LINE '1632) 
(PUT 'REPLACE1_PARENTS 'DEFINED-IN-FILE 'HEPHYS/CVITMAP.RED) 
(PUT 'REPLACE1_PARENTS 'PROCEDURE_TYPE
     '(ARROW (TIMES GENERAL GENERAL GENERAL) GENERAL)) 
(DE REPLACE1_PARENTS (OLDEDGE NEWEDGE EDGE)
    (REPLACE2_PARENTS (CAR OLDEDGE) (CAR NEWEDGE) (CADR EDGE))) 
(PUT 'REPLACE2_PARENTS 'NUMBER-OF-ARGS 3) 
(PUT 'REPLACE2_PARENTS 'DEFINED-ON-LINE '1637) 
(PUT 'REPLACE2_PARENTS 'DEFINED-IN-FILE 'HEPHYS/CVITMAP.RED) 
(PUT 'REPLACE2_PARENTS 'PROCEDURE_TYPE
     '(ARROW (TIMES GENERAL GENERAL GENERAL) GENERAL)) 
(DE REPLACE2_PARENTS (OLDNAME NEWNAME EDGEPROP_)
    (PROGN
     (COND ((EQUAL OLDNAME (CAR EDGEPROP_)) (RPLACA EDGEPROP_ NEWNAME)))
     (COND ((EQUAL OLDNAME (CDR EDGEPROP_)) (RPLACD EDGEPROP_ NEWNAME))))) 
(PUT 'MK_SIMPLE_MAP_ 'NUMBER-OF-ARGS 1) 
(PUT 'MK_SIMPLE_MAP_ 'DEFINED-ON-LINE '1641) 
(PUT 'MK_SIMPLE_MAP_ 'DEFINED-IN-FILE 'HEPHYS/CVITMAP.RED) 
(PUT 'MK_SIMPLE_MAP_ 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE MK_SIMPLE_MAP_ (INMAP_) (MK_SIMPLE_MAP_1 INMAP_ NIL NIL NIL)) 
(PUT 'BOTH_OLD 'NUMBER-OF-ARGS 1) 
(PUT 'BOTH_OLD 'DEFINED-ON-LINE '1644) 
(PUT 'BOTH_OLD 'DEFINED-IN-FILE 'HEPHYS/CVITMAP.RED) 
(PUT 'BOTH_OLD 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE BOTH_OLD (EDGES)
    (AND (ASSOC (CAR (CAR EDGES)) OLD_EDGE_LIST)
         (ASSOC (CAR (CADR EDGES)) OLD_EDGE_LIST))) 
(PUT 'BOTH_VECTORS 'NUMBER-OF-ARGS 1) 
(PUT 'BOTH_VECTORS 'DEFINED-ON-LINE '1649) 
(PUT 'BOTH_VECTORS 'DEFINED-IN-FILE 'HEPHYS/CVITMAP.RED) 
(PUT 'BOTH_VECTORS 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE BOTH_VECTORS (EDGES)
    (AND (NOT (IS_INDEXP (CAR EDGES))) (NOT (IS_INDEXP (CADR EDGES))))) 
(PUT 'OLD_RENAMEL_EDV 'NUMBER-OF-ARGS 2) 
(PUT 'OLD_RENAMEL_EDV 'DEFINED-ON-LINE '1654) 
(PUT 'OLD_RENAMEL_EDV 'DEFINED-IN-FILE 'HEPHYS/CVITMAP.RED) 
(PUT 'OLD_RENAMEL_EDV 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE OLD_RENAMEL_EDV (VERTEX EDGES)
    (REN_EDGE (CONS (CAR (CAR EDGES)) (CAR (CADR EDGES))) VERTEX)) 
(PUT 'MK1_SIMPLE_MAP_ 'NUMBER-OF-ARGS 1) 
(PUT 'MK1_SIMPLE_MAP_ 'DEFINED-ON-LINE '1659) 
(PUT 'MK1_SIMPLE_MAP_ 'DEFINED-IN-FILE 'HEPHYS/CVITMAP.RED) 
(PUT 'MK1_SIMPLE_MAP_ 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE MK1_SIMPLE_MAP_ (MAP_D)
    (MK_SIMPLE_MAP_1 (CAR MAP_D) NIL (LIST (CDR MAP_D)) NIL)) 
(PUT 'MK_SIMPLE_MAP_1 'NUMBER-OF-ARGS 4) 
(PUT 'MK_SIMPLE_MAP_1 'DEFINED-ON-LINE '1663) 
(PUT 'MK_SIMPLE_MAP_1 'DEFINED-IN-FILE 'HEPHYS/CVITMAP.RED) 
(PUT 'MK_SIMPLE_MAP_1 'PROCEDURE_TYPE
     '(ARROW (TIMES GENERAL GENERAL GENERAL GENERAL) GENERAL)) 
(DE MK_SIMPLE_MAP_1 (INMAP_ OUTMAP_ DEN_OM COEFF)
    (COND
     ((NULL INMAP_)
      (PROGN
       (SETQ OUTMAP_ (MK_PARENTS_MAP_ OUTMAP_))
       (LIST OUTMAP_
             (COND ((NULL COEFF) NIL)
                   (T
                    (PROG (MAP_ FORALL-RESULT FORALL-ENDPTR)
                      (SETQ MAP_ COEFF)
                      (COND ((NULL MAP_) (RETURN NIL)))
                      (SETQ FORALL-RESULT
                              (SETQ FORALL-ENDPTR
                                      (CONS
                                       ((LAMBDA (MAP_) (MK1_SIMPLE_MAP_ MAP_))
                                        (CAR MAP_))
                                       NIL)))
                     LOOPLABEL
                      (SETQ MAP_ (CDR MAP_))
                      (COND ((NULL MAP_) (RETURN FORALL-RESULT)))
                      (RPLACD FORALL-ENDPTR
                              (CONS
                               ((LAMBDA (MAP_) (MK1_SIMPLE_MAP_ MAP_))
                                (CAR MAP_))
                               NIL))
                      (SETQ FORALL-ENDPTR (CDR FORALL-ENDPTR))
                      (GO LOOPLABEL))))
             DEN_OM)))
     (T
      ((LAMBDA (EDGES)
         ((LAMBDA (N)
            (COND
             ((LEQ (LENGTH (CAR INMAP_)) 3)
              (COND
               ((EQUAL N 2)
                (COND
                 ((AND (BOTH_OLD EDGES) (BOTH_VECTORS EDGES))
                  (MK_SIMPLE_MAP_1 (CDR INMAP_) (CONS (CAR INMAP_) OUTMAP_)
                   DEN_OM COEFF))
                 (T
                  (PROGN
                   (RENAMEL_EDGES EDGES)
                   (COND
                    ((BOTH_EMPTY_MAP_S (CDR INMAP_) OUTMAP_)
                     (MK_SIMPLE_MAP_1 (CDR INMAP_) (CONS (CAR INMAP_) OUTMAP_)
                      DEN_OM COEFF))
                    (T
                     (MK_SIMPLE_MAP_1 (CDR INMAP_) OUTMAP_ DEN_OM COEFF)))))))
               (T
                (MK_SIMPLE_MAP_1 (CDR INMAP_) (CONS (CAR INMAP_) OUTMAP_)
                 DEN_OM COEFF))))
             ((EQUAL N 2)
              (COND
               ((AND (BOTH_OLD EDGES) (BOTH_VECTORS EDGES))
                (MK_SIMPLE_MAP_1 (CONS EDGES (CDR INMAP_)) OUTMAP_ DEN_OM
                 (CONS
                  (CONS (LIST (OLD_RENAMEL_EDV (CAR INMAP_) EDGES))
                        (OLD_RENAMEL_EDV EDGES EDGES))
                  COEFF)))
               (T
                (PROGN
                 (RENAMEL_EDGES EDGES)
                 (MK_SIMPLE_MAP_1 (CDR INMAP_) OUTMAP_ DEN_OM
                  (CONS (CONS (MAP__VERTEX_FIRST INMAP_) EDGES) COEFF))))))
             ((AND (EQUAL N 3)
                   (GREATERP (PLUS (LENGTH INMAP_) (LENGTH OUTMAP_)) 2))
              ((LAMBDA (V)
                 (MK_SIMPLE_MAP_1 (CONS V (CDR INMAP_)) OUTMAP_ DEN_OM
                  (CONS (CONS (CONS V (MAP__VERTEX_FIRST INMAP_)) V) COEFF)))
               EDGES))
             (((LAMBDA (K) (AND (GREATERP K 4) (LESSP N K)))
               (LENGTH (CAR INMAP_)))
              ((LAMBDA (FIRZ)
                 (MK_SIMPLE_MAP_1 (APPEND FIRZ (CDR INMAP_)) OUTMAP_ DEN_OM
                  COEFF))
               (MK_FIRZ_OP (CAR INMAP_))))
             (T
              (MK_SIMPLE_MAP_1 (CDR INMAP_) (CONS (CAR INMAP_) OUTMAP_) DEN_OM
               COEFF))
             (T
              (MK_SIMPLE_MAP_1
               (APPEND (MK_SIMPLE_VERTEX (CAR INMAP_)) (CDR INMAP_)) OUTMAP_
               DEN_OM COEFF))))
          (LENGTH EDGES)))
       (EXT_EDGES (CAR INMAP_)))))) 
(GLOBAL '(*CVITOP)) 
(FLAG '(CVITOP) 'SWITCH) 
(PUT 'MK_FIRZ_OP 'NUMBER-OF-ARGS 1) 
(PUT 'MK_FIRZ_OP 'DEFINED-ON-LINE '1766) 
(PUT 'MK_FIRZ_OP 'DEFINED-IN-FILE 'HEPHYS/CVITMAP.RED) 
(PUT 'MK_FIRZ_OP 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE MK_FIRZ_OP (VERTEX)
    (COND ((NULL *CVITOP) (MK_FIRZ VERTEX)) (T (FIRZ_OP VERTEX)))) 
(PUT 'FIRZ_OP 'NUMBER-OF-ARGS 1) 
(PUT 'FIRZ_OP 'DEFINED-ON-LINE '1770) 
(PUT 'FIRZ_OP 'DEFINED-IN-FILE 'HEPHYS/CVITMAP.RED) 
(PUT 'FIRZ_OP 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE FIRZ_OP (VERTEX) (MK_FIRZ (FIND_CYCLE (OPTIMAL_EDGE VERTEX) VERTEX NIL))) 
(PUT 'FIND_CYCLE 'NUMBER-OF-ARGS 3) 
(PUT 'FIND_CYCLE 'DEFINED-ON-LINE '1775) 
(PUT 'FIND_CYCLE 'DEFINED-IN-FILE 'HEPHYS/CVITMAP.RED) 
(PUT 'FIND_CYCLE 'PROCEDURE_TYPE
     '(ARROW (TIMES GENERAL GENERAL GENERAL) GENERAL)) 
(DE FIND_CYCLE (EDGE VERTEX PASSED)
    (COND
     ((EQ (CAR EDGE) (CAR (CAR VERTEX))) (APPEND VERTEX (REVERSIP PASSED)))
     (T (FIND_CYCLE EDGE (CDR VERTEX) (CONS (CAR VERTEX) PASSED))))) 
(PUT 'OPTIMAL_EDGE 'NUMBER-OF-ARGS 1) 
(PUT 'OPTIMAL_EDGE 'DEFINED-ON-LINE '1782) 
(PUT 'OPTIMAL_EDGE 'DEFINED-IN-FILE 'HEPHYS/CVITMAP.RED) 
(PUT 'OPTIMAL_EDGE 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE OPTIMAL_EDGE (VERTEX) (OPTIMAL1_EDGE (INTERNAL_EDGES VERTEX NIL))) 
(PUT 'INTERNAL_EDGES 'NUMBER-OF-ARGS 2) 
(PUT 'INTERNAL_EDGES 'DEFINED-ON-LINE '1786) 
(PUT 'INTERNAL_EDGES 'DEFINED-IN-FILE 'HEPHYS/CVITMAP.RED) 
(PUT 'INTERNAL_EDGES 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE INTERNAL_EDGES (VERTEX1 VERTEX2)
    (COND ((NULL VERTEX1) VERTEX2)
          ((OR (ASSOC (CAR (CAR VERTEX1)) (CDR VERTEX1))
               (ASSOC (CAR (CAR VERTEX1)) VERTEX2))
           (INTERNAL_EDGES (CDR VERTEX1) (CONS (CAR VERTEX1) VERTEX2)))
          (T (INTERNAL_EDGES (CDR VERTEX1) VERTEX2)))) 
(PUT 'OPTIMAL1_EDGE 'NUMBER-OF-ARGS 1) 
(PUT 'OPTIMAL1_EDGE 'DEFINED-ON-LINE '1796) 
(PUT 'OPTIMAL1_EDGE 'DEFINED-IN-FILE 'HEPHYS/CVITMAP.RED) 
(PUT 'OPTIMAL1_EDGE 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE OPTIMAL1_EDGE (VERTEX)
    ((LAMBDA (L Z)
       (OPT_EDGE Z (EDGE_DISTANCE Z VERTEX L) (CDR VERTEX) (CONS Z NIL) L))
     (LENGTH VERTEX) (CAR VERTEX))) 
(PUT 'EDGE_DISTANCE 'NUMBER-OF-ARGS 3) 
(PUT 'EDGE_DISTANCE 'DEFINED-ON-LINE '1807) 
(PUT 'EDGE_DISTANCE 'DEFINED-IN-FILE 'HEPHYS/CVITMAP.RED) 
(PUT 'EDGE_DISTANCE 'PROCEDURE_TYPE
     '(ARROW (TIMES GENERAL GENERAL GENERAL) GENERAL)) 
(DE EDGE_DISTANCE (EDGE VERTEX L)
    ((LAMBDA (N) (MIN N (DIFFERENCE (DIFFERENCE L N) 2)))
     (EDGE_DIST EDGE (CDR VERTEX)))) 
(PUT 'EDGE_DIST 'NUMBER-OF-ARGS 2) 
(PUT 'EDGE_DIST 'DEFINED-ON-LINE '1813) 
(PUT 'EDGE_DIST 'DEFINED-IN-FILE 'HEPHYS/CVITMAP.RED) 
(PUT 'EDGE_DIST 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE EDGE_DIST (EDGE VERTEX)
    (COND ((EQ (CAR EDGE) (CAR (CAR VERTEX))) 0)
          (T (ADD1 (EDGE_DIST EDGE (CDR VERTEX)))))) 
(PUT 'OPT_EDGE 'NUMBER-OF-ARGS 5) 
(PUT 'OPT_EDGE 'DEFINED-ON-LINE '1817) 
(PUT 'OPT_EDGE 'DEFINED-IN-FILE 'HEPHYS/CVITMAP.RED) 
(PUT 'OPT_EDGE 'PROCEDURE_TYPE
     '(ARROW (TIMES GENERAL GENERAL GENERAL GENERAL GENERAL) GENERAL)) 
(DE OPT_EDGE (EDGE DISTANCE VERTEX PASSED N)
    (COND ((OR (EQUAL DISTANCE 0) (NULL VERTEX)) EDGE)
          (T
           ((LAMBDA (FIRSTEDGE)
              (COND
               ((ASSOC (CAR FIRSTEDGE) PASSED)
                (OPT_EDGE EDGE DISTANCE (CDR VERTEX) PASSED N))
               (T
                ((LAMBDA (DIST)
                   (COND
                    ((LESSP DIST DISTANCE)
                     (OPT_EDGE FIRSTEDGE DIST (CDR VERTEX)
                      (CONS FIRSTEDGE PASSED) N))
                    (T
                     (OPT_EDGE EDGE DISTANCE (CDR VERTEX)
                      (CONS FIRSTEDGE PASSED) N))))
                 (EDGE_DISTANCE FIRSTEDGE VERTEX N)))))
            (CAR VERTEX))))) 
(PUT 'MK_FIRZ 'NUMBER-OF-ARGS 1) 
(PUT 'MK_FIRZ 'DEFINED-ON-LINE '1848) 
(PUT 'MK_FIRZ 'DEFINED-IN-FILE 'HEPHYS/CVITMAP.RED) 
(PUT 'MK_FIRZ 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE MK_FIRZ (VERTEX) (MK_FIRZ1 VERTEX NIL)) 
(PUT 'MK_FIRZ1 'NUMBER-OF-ARGS 2) 
(PUT 'MK_FIRZ1 'DEFINED-ON-LINE '1856) 
(PUT 'MK_FIRZ1 'DEFINED-IN-FILE 'HEPHYS/CVITMAP.RED) 
(PUT 'MK_FIRZ1 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE MK_FIRZ1 (VERTEX1 VERTEX2)
    (COND ((NULL VERTEX1) (REVERSIP VERTEX2))
          (T
           ((LAMBDA (Z)
              (COND
               (Z
                (MK_FIRZ2 (CAR VERTEX1) (CAR Z)
                 (APPEND (CDR Z) (REVERSIP VERTEX2))))
               (T (MK_FIRZ1 (CDR VERTEX1) (CONS (CAR VERTEX1) VERTEX2)))))
            (MP_MEMBER_EDGE (CAR VERTEX1) (CDR VERTEX1)))))) 
(PUT 'MK_FIRZ2 'NUMBER-OF-ARGS 3) 
(PUT 'MK_FIRZ2 'DEFINED-ON-LINE '1870) 
(PUT 'MK_FIRZ2 'DEFINED-IN-FILE 'HEPHYS/CVITMAP.RED) 
(PUT 'MK_FIRZ2 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL GENERAL) GENERAL)) 
(DE MK_FIRZ2 (EDGE VERTEX1 VERTEX2)
    ((LAMBDA (NEDGE NEDG1)
       (APPEND (MK_COEFF2 EDGE NEDGE NEDG1)
               (LIST (NCONC VERTEX1 (LIST NEDGE)) (CONS NEDG1 VERTEX2))))
     (MK_NEDGE) (MK_NEDGE))) 
(PUT 'MK_COEFF2 'NUMBER-OF-ARGS 3) 
(PUT 'MK_COEFF2 'DEFINED-ON-LINE '1883) 
(PUT 'MK_COEFF2 'DEFINED-IN-FILE 'HEPHYS/CVITMAP.RED) 
(PUT 'MK_COEFF2 'PROCEDURE_TYPE
     '(ARROW (TIMES GENERAL GENERAL GENERAL) GENERAL)) 
(DE MK_COEFF2 (EDGE NEDGE NEDG1) (LIST (LIST EDGE NEDGE EDGE NEDG1))) 
(PUT 'MK_NEDGE 'NUMBER-OF-ARGS 0) 
(PUT 'MK_NEDGE 'DEFINED-ON-LINE '1886) 
(PUT 'MK_NEDGE 'DEFINED-IN-FILE 'HEPHYS/CVITMAP.RED) 
(PUT 'MK_NEDGE 'PROCEDURE_TYPE '(ARROW UNIT GENERAL)) 
(DE MK_NEDGE NIL
    ((LAMBDA (EDGE) (NEW_EDGE EDGE EDGE)) (LIST '? (CONS '? '?) NIL))) 
(PUT 'MP_MEMBER_EDGE 'NUMBER-OF-ARGS 2) 
(PUT 'MP_MEMBER_EDGE 'DEFINED-ON-LINE '1891) 
(PUT 'MP_MEMBER_EDGE 'DEFINED-IN-FILE 'HEPHYS/CVITMAP.RED) 
(PUT 'MP_MEMBER_EDGE 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE MP_MEMBER_EDGE (EDGE VERTEX) (MP_MEMBER1_EDGE EDGE VERTEX NIL)) 
(PUT 'MP_MEMBER1_EDGE 'NUMBER-OF-ARGS 3) 
(PUT 'MP_MEMBER1_EDGE 'DEFINED-ON-LINE '1897) 
(PUT 'MP_MEMBER1_EDGE 'DEFINED-IN-FILE 'HEPHYS/CVITMAP.RED) 
(PUT 'MP_MEMBER1_EDGE 'PROCEDURE_TYPE
     '(ARROW (TIMES GENERAL GENERAL GENERAL) GENERAL)) 
(DE MP_MEMBER1_EDGE (EDGE VERTEX TAIL)
    (COND ((NULL VERTEX) NIL)
          ((EQ (CAR EDGE) (CAR (CAR VERTEX)))
           (CONS (REVERSIP TAIL) (CDR VERTEX)))
          (T (MP_MEMBER1_EDGE EDGE (CDR VERTEX) (CONS (CAR VERTEX) TAIL))))) 
(NULL (SETQ *MODE 'SYMBOLIC)) 
(FLUID '(NTAB*)) 
(PUT 'PRINT_ATLAS 'NUMBER-OF-ARGS 1) 
(PUT 'PRINT_ATLAS 'DEFINED-ON-LINE '1915) 
(PUT 'PRINT_ATLAS 'DEFINED-IN-FILE 'HEPHYS/CVITMAP.RED) 
(PUT 'PRINT_ATLAS 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE PRINT_ATLAS (ATLAS) (PROG (NTAB*) (SETQ NTAB* 0) (PRIN2_ATLAS ATLAS))) 
(PUT 'PRIN2_ATLAS 'NUMBER-OF-ARGS 1) 
(PUT 'PRIN2_ATLAS 'DEFINED-ON-LINE '1922) 
(PUT 'PRIN2_ATLAS 'DEFINED-IN-FILE 'HEPHYS/CVITMAP.RED) 
(PUT 'PRIN2_ATLAS 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE PRIN2_ATLAS (ATLAS)
    (COND ((NULL ATLAS) NIL)
          (T
           (PROGN
            (PRINT_MAP_ (CAR ATLAS))
            (PRINT_DEN_OM (CADDR ATLAS))
            (PRINT_COEFF (CADR ATLAS)))))) 
(PUT 'PRINT_MAP_ 'NUMBER-OF-ARGS 1) 
(PUT 'PRINT_MAP_ 'DEFINED-ON-LINE '1930) 
(PUT 'PRINT_MAP_ 'DEFINED-IN-FILE 'HEPHYS/CVITMAP.RED) 
(PUT 'PRINT_MAP_ 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE PRINT_MAP_ (MAP_)
    (PROGN
     (PTTAB NTAB*)
     (PRIN2 "Map_ is: (")
     (PRIN2_MAP_ MAP_)
     (PRIN2 " )")
     (TERPRI))) 
(PUT 'PRIN2_MAP_ 'NUMBER-OF-ARGS 1) 
(PUT 'PRIN2_MAP_ 'DEFINED-ON-LINE '1937) 
(PUT 'PRIN2_MAP_ 'DEFINED-IN-FILE 'HEPHYS/CVITMAP.RED) 
(PUT 'PRIN2_MAP_ 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE PRIN2_MAP_ (MAP_)
    (COND ((NULL MAP_) NIL)
          (T (PROGN (PRINT_VERTEX (CAR MAP_)) (PRIN2_MAP_ (CDR MAP_)))))) 
(PUT 'PRINT_VERTEX 'NUMBER-OF-ARGS 1) 
(PUT 'PRINT_VERTEX 'DEFINED-ON-LINE '1943) 
(PUT 'PRINT_VERTEX 'DEFINED-IN-FILE 'HEPHYS/CVITMAP.RED) 
(PUT 'PRINT_VERTEX 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE PRINT_VERTEX (VERTEX)
    (PROGN (PRIN2 "( ") (PRIN2_VERTEX VERTEX) (PRIN2 ")"))) 
(PUT 'PRIN2_VERTEX 'NUMBER-OF-ARGS 1) 
(PUT 'PRIN2_VERTEX 'DEFINED-ON-LINE '1949) 
(PUT 'PRIN2_VERTEX 'DEFINED-IN-FILE 'HEPHYS/CVITMAP.RED) 
(PUT 'PRIN2_VERTEX 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE PRIN2_VERTEX (VERTEX)
    (COND ((NULL VERTEX) NIL)
          (T (PROGN (PRINT_EDGE (CAR VERTEX)) (PRIN2_VERTEX (CDR VERTEX)))))) 
(PUT 'PRINT_EDGE 'NUMBER-OF-ARGS 1) 
(PUT 'PRINT_EDGE 'DEFINED-ON-LINE '1955) 
(PUT 'PRINT_EDGE 'DEFINED-IN-FILE 'HEPHYS/CVITMAP.RED) 
(PUT 'PRINT_EDGE 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE PRINT_EDGE (EDGE) (PROGN (PRIN2_EDGE EDGE) (PRIN2 " "))) 
(PUT 'PRIN2_EDGE 'NUMBER-OF-ARGS 1) 
(PUT 'PRIN2_EDGE 'DEFINED-ON-LINE '1959) 
(PUT 'PRIN2_EDGE 'DEFINED-IN-FILE 'HEPHYS/CVITMAP.RED) 
(PUT 'PRIN2_EDGE 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE PRIN2_EDGE (EDGE) (PRIN2 (CAR EDGE))) 
(PUT 'PTTAB 'NUMBER-OF-ARGS 1) 
(PUT 'PTTAB 'DEFINED-ON-LINE '1962) 
(PUT 'PTTAB 'DEFINED-IN-FILE 'HEPHYS/CVITMAP.RED) 
(PUT 'PTTAB 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE PTTAB (N) (PROGN (SPACES N) (PRIN2 N) (PRIN2 ":"))) 
(PUT 'PRINT_COEFF 'NUMBER-OF-ARGS 1) 
(PUT 'PRINT_COEFF 'DEFINED-ON-LINE '1967) 
(PUT 'PRINT_COEFF 'DEFINED-IN-FILE 'HEPHYS/CVITMAP.RED) 
(PUT 'PRINT_COEFF 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE PRINT_COEFF (COEFF)
    (PROGN
     (SETQ NTAB* (PLUS NTAB* 1))
     (PRIN2_COEFF COEFF)
     (SETQ NTAB* (DIFFERENCE NTAB* 1)))) 
(PUT 'PRIN2_COEFF 'NUMBER-OF-ARGS 1) 
(PUT 'PRIN2_COEFF 'DEFINED-ON-LINE '1972) 
(PUT 'PRIN2_COEFF 'DEFINED-IN-FILE 'HEPHYS/CVITMAP.RED) 
(PUT 'PRIN2_COEFF 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE PRIN2_COEFF (ATLASES)
    (COND ((NULL ATLASES) NIL)
          (T (PROGN (PRIN2_ATLAS (CAR ATLASES)) (PRIN2_COEFF (CDR ATLASES)))))) 
(PUT 'PRINT_DEN_OM 'NUMBER-OF-ARGS 1) 
(PUT 'PRINT_DEN_OM 'DEFINED-ON-LINE '1977) 
(PUT 'PRINT_DEN_OM 'DEFINED-IN-FILE 'HEPHYS/CVITMAP.RED) 
(PUT 'PRINT_DEN_OM 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE PRINT_DEN_OM (DEN_LIST)
    (PROGN
     (PTTAB NTAB*)
     (PRIN2 "DEN_OM is: ")
     (COND ((NULL DEN_LIST) (PRIN2 NIL)) (T (PRIN2_MAP_ DEN_LIST)))
     (TERPRI))) 
(UNFLUID '(NTAB*)) 
(PUT 'PRINT_OLD_EDGES 'NUMBER-OF-ARGS 0) 
(PUT 'PRINT_OLD_EDGES 'DEFINED-ON-LINE '1986) 
(PUT 'PRINT_OLD_EDGES 'DEFINED-IN-FILE 'HEPHYS/CVITMAP.RED) 
(PUT 'PRINT_OLD_EDGES 'PROCEDURE_TYPE '(ARROW UNIT GENERAL)) 
(DE PRINT_OLD_EDGES NIL (PRINT_EDGE_LIST OLD_EDGE_LIST)) 
(PUT 'PRINT_NEW_EDGES 'NUMBER-OF-ARGS 0) 
(PUT 'PRINT_NEW_EDGES 'DEFINED-ON-LINE '1989) 
(PUT 'PRINT_NEW_EDGES 'DEFINED-IN-FILE 'HEPHYS/CVITMAP.RED) 
(PUT 'PRINT_NEW_EDGES 'PROCEDURE_TYPE '(ARROW UNIT GENERAL)) 
(DE PRINT_NEW_EDGES NIL (PRINT_EDGE_LIST NEW_EDGE_LIST)) 
(PUT 'PRINT_EDGE_LIST 'NUMBER-OF-ARGS 1) 
(PUT 'PRINT_EDGE_LIST 'DEFINED-ON-LINE '1992) 
(PUT 'PRINT_EDGE_LIST 'DEFINED-IN-FILE 'HEPHYS/CVITMAP.RED) 
(PUT 'PRINT_EDGE_LIST 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE PRINT_EDGE_LIST (EDGELIST)
    (COND ((NULL EDGELIST) NIL)
          (T (PROGN (PRINT (CAR EDGELIST)) (PRINT_EDGE_LIST (CDR EDGELIST)))))) 
(NULL (SETQ *MODE 'SYMBOLIC)) 
(PUT 'MK_SIMPL_MAP_ 'NUMBER-OF-ARGS 1) 
(PUT 'MK_SIMPL_MAP_ 'DEFINED-ON-LINE '2005) 
(PUT 'MK_SIMPL_MAP_ 'DEFINED-IN-FILE 'HEPHYS/CVITMAP.RED) 
(PUT 'MK_SIMPL_MAP_ 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE MK_SIMPL_MAP_ (MAP_) (MK_SIMPL_MAP_1 MAP_ NIL)) 
(PUT 'MK_SIMPL_MAP_1 'NUMBER-OF-ARGS 2) 
(PUT 'MK_SIMPL_MAP_1 'DEFINED-ON-LINE '2008) 
(PUT 'MK_SIMPL_MAP_1 'DEFINED-IN-FILE 'HEPHYS/CVITMAP.RED) 
(PUT 'MK_SIMPL_MAP_1 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE MK_SIMPL_MAP_1 (INMAP_ OUTMAP_)
    (COND ((NULL INMAP_) (REVERSE OUTMAP_))
          ((LEQ (LENGTH (CAR INMAP_)) 3)
           (MK_SIMPL_MAP_1 (CDR INMAP_)
            (CONS (MK_PARENTS_PRIM (CAR INMAP_)) OUTMAP_)))
          (T
           (MK_SIMPL_MAP_1
            (APPEND (MK_SIMPLE_VERTEX (CAR INMAP_)) (CDR INMAP_)) OUTMAP_)))) 
(PUT 'MK_SIMPLE_VERTEX 'NUMBER-OF-ARGS 1) 
(PUT 'MK_SIMPLE_VERTEX 'DEFINED-ON-LINE '2020) 
(PUT 'MK_SIMPLE_VERTEX 'DEFINED-IN-FILE 'HEPHYS/CVITMAP.RED) 
(PUT 'MK_SIMPLE_VERTEX 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE MK_SIMPLE_VERTEX (VERTEX)
    (PROG (NEDGE FEDGE SEDGE)
      (SETQ FEDGE (CAR VERTEX))
      (SETQ SEDGE (CAR (CDR VERTEX)))
      (COND
       ((OR (NOT (HAS_PARENTS FEDGE)) (NOT (HAS_PARENTS SEDGE)))
        (RETURN (MK_SIMPLE_VERTEX (APPEND (CDR VERTEX) (LIST (CAR VERTEX)))))))
      (SETQ NEDGE (NEW_EDGE FEDGE SEDGE))
      (SETQ VERTEX (CDR (CDR VERTEX)))
      (RETURN (LIST (LIST NEDGE FEDGE SEDGE) (CONS NEDGE VERTEX))))) 
(PUT 'MK_PARENTS_MAP_ 'NUMBER-OF-ARGS 1) 
(PUT 'MK_PARENTS_MAP_ 'DEFINED-ON-LINE '2036) 
(PUT 'MK_PARENTS_MAP_ 'DEFINED-IN-FILE 'HEPHYS/CVITMAP.RED) 
(PUT 'MK_PARENTS_MAP_ 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE MK_PARENTS_MAP_ (MAP_)
    (STANDARD_MAP_ (MK_SIMPL_MAP_ (MK_PARENTS1_MAP_ MAP_ NIL NIL)))) 
(PUT 'STANDARD_MAP_ 'NUMBER-OF-ARGS 1) 
(PUT 'STANDARD_MAP_ 'DEFINED-ON-LINE '2043) 
(PUT 'STANDARD_MAP_ 'DEFINED-IN-FILE 'HEPHYS/CVITMAP.RED) 
(PUT 'STANDARD_MAP_ 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE STANDARD_MAP_ (MAP_)
    (COND ((NULL MAP_) NIL)
          ((GREATERP (LENGTH (CAR MAP_)) 2)
           (CONS (CAR MAP_) (STANDARD_MAP_ (CDR MAP_))))
          (T (STANDARD_MAP_ (CONS (ADD_0_EDGE (CAR MAP_)) (CDR MAP_)))))) 
(PUT 'ADD_0_EDGE 'NUMBER-OF-ARGS 1) 
(PUT 'ADD_0_EDGE 'DEFINED-ON-LINE '2052) 
(PUT 'ADD_0_EDGE 'DEFINED-IN-FILE 'HEPHYS/CVITMAP.RED) 
(PUT 'ADD_0_EDGE 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE ADD_0_EDGE (VERTEX) (CONS _0EDGE VERTEX)) 
(PUT 'MK_PARENTS1_MAP_ 'NUMBER-OF-ARGS 3) 
(PUT 'MK_PARENTS1_MAP_ 'DEFINED-ON-LINE '2056) 
(PUT 'MK_PARENTS1_MAP_ 'DEFINED-IN-FILE 'HEPHYS/CVITMAP.RED) 
(PUT 'MK_PARENTS1_MAP_ 'PROCEDURE_TYPE
     '(ARROW (TIMES GENERAL GENERAL GENERAL) GENERAL)) 
(DE MK_PARENTS1_MAP_ (INMAP_ OUTMAP_ PASSED)
    (COND
     ((NULL INMAP_)
      (COND ((NULL PASSED) OUTMAP_) (T (MK_PARENTS1_MAP_ PASSED OUTMAP_ NIL))))
     (T
      ((LAMBDA (EDGES)
         (COND
          ((NULL EDGES)
           (MK_PARENTS1_MAP_ (CDR INMAP_) (CONS (CAR INMAP_) OUTMAP_) PASSED))
          ((EQUAL (LENGTH EDGES) 1)
           (MK_PARENTS1_MAP_ (CDR INMAP_)
            (APPEND (MK_PARENTS_VERTEX (CAR INMAP_)) OUTMAP_) PASSED))
          (T
           (MK_PARENTS1_MAP_ (CDR INMAP_) OUTMAP_
            (CONS (CAR INMAP_) PASSED)))))
       (S_NOPARENTS (CAR INMAP_)))))) 
(PUT 'S_NOPARENTS 'NUMBER-OF-ARGS 1) 
(PUT 'S_NOPARENTS 'DEFINED-ON-LINE '2080) 
(PUT 'S_NOPARENTS 'DEFINED-IN-FILE 'HEPHYS/CVITMAP.RED) 
(PUT 'S_NOPARENTS 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE S_NOPARENTS (VERTEX)
    (COND ((NULL VERTEX) NIL)
          ((HAS_PARENTS (CAR VERTEX)) (S_NOPARENTS (CDR VERTEX)))
          (T (CONS (CAR VERTEX) (S_NOPARENTS (CDR VERTEX)))))) 
(PUT 'MK_PARENTS_VERTEX 'NUMBER-OF-ARGS 1) 
(PUT 'MK_PARENTS_VERTEX 'DEFINED-ON-LINE '2090) 
(PUT 'MK_PARENTS_VERTEX 'DEFINED-IN-FILE 'HEPHYS/CVITMAP.RED) 
(PUT 'MK_PARENTS_VERTEX 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE MK_PARENTS_VERTEX (VERTEX) (MK_SIMPL_MAP_ (LIST VERTEX))) 
(PUT 'MK_PARENTS_PRIM 'NUMBER-OF-ARGS 1) 
(PUT 'MK_PARENTS_PRIM 'DEFINED-ON-LINE '2095) 
(PUT 'MK_PARENTS_PRIM 'DEFINED-IN-FILE 'HEPHYS/CVITMAP.RED) 
(PUT 'MK_PARENTS_PRIM 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE MK_PARENTS_PRIM (PVERTEX)
    (COND ((NEQ (LENGTH PVERTEX) 3) PVERTEX)
          (T
           ((LAMBDA (EDGES)
              (COND ((NULL EDGES) PVERTEX)
                    (T (PROGN (MK_EDGE_PARENTS PVERTEX (CAR EDGES)) PVERTEX))))
            (S_NOPARENTS PVERTEX))))) 
(PUT 'MK_EDGE_PARENTS 'NUMBER-OF-ARGS 2) 
(PUT 'MK_EDGE_PARENTS 'DEFINED-ON-LINE '2107) 
(PUT 'MK_EDGE_PARENTS 'DEFINED-IN-FILE 'HEPHYS/CVITMAP.RED) 
(PUT 'MK_EDGE_PARENTS 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE MK_EDGE_PARENTS (VERTEX EDGE)
    (MK_EDGE1_PARENTS (DELETE_EDGE EDGE VERTEX) EDGE)) 
(PUT 'MK_EDGE1_PARENTS 'NUMBER-OF-ARGS 2) 
(PUT 'MK_EDGE1_PARENTS 'DEFINED-ON-LINE '2110) 
(PUT 'MK_EDGE1_PARENTS 'DEFINED-IN-FILE 'HEPHYS/CVITMAP.RED) 
(PUT 'MK_EDGE1_PARENTS 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE MK_EDGE1_PARENTS (VERTEX2 EDGE)
    (ADD_PARENTS EDGE (CONS (CAR (CAR VERTEX2)) (CAR (CAR (CDR VERTEX2)))))) 
(PUT 'ADD_PARENTS 'NUMBER-OF-ARGS 2) 
(PUT 'ADD_PARENTS 'DEFINED-ON-LINE '2116) 
(PUT 'ADD_PARENTS 'DEFINED-IN-FILE 'HEPHYS/CVITMAP.RED) 
(PUT 'ADD_PARENTS 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE ADD_PARENTS (EDGE NAMES) (ADD_PARENTS0 EDGE NAMES NIL)) 
(PUT 'ADD_PARENTS0 'NUMBER-OF-ARGS 3) 
(PUT 'ADD_PARENTS0 'DEFINED-ON-LINE '2119) 
(PUT 'ADD_PARENTS0 'DEFINED-IN-FILE 'HEPHYS/CVITMAP.RED) 
(PUT 'ADD_PARENTS0 'PROCEDURE_TYPE
     '(ARROW (TIMES GENERAL GENERAL GENERAL) GENERAL)) 
(DE ADD_PARENTS0 (EDGE NAMES BOOL)
    (ADDL_PARENTS NEW_EDGE_LIST EDGE (CONS NAMES (LIST BOOL)))) 
(PUT 'ADDL_PARENTS 'NUMBER-OF-ARGS 3) 
(PUT 'ADDL_PARENTS 'DEFINED-ON-LINE '2122) 
(PUT 'ADDL_PARENTS 'DEFINED-IN-FILE 'HEPHYS/CVITMAP.RED) 
(PUT 'ADDL_PARENTS 'PROCEDURE_TYPE
     '(ARROW (TIMES GENERAL GENERAL GENERAL) GENERAL)) 
(DE ADDL_PARENTS (EDGELIST EDGE NAMES)
    (COND ((NULL EDGELIST) NIL)
          (T
           (CONS
            (COND
             ((EQ (CAR (CAR EDGELIST)) (CAR EDGE))
              (REP_PARENTS (CAR EDGELIST) NAMES))
             (T (CAR EDGELIST)))
            (ADDL_PARENTS (CDR EDGELIST) EDGE NAMES))))) 
(PUT 'REP_PARENTS 'NUMBER-OF-ARGS 2) 
(PUT 'REP_PARENTS 'DEFINED-ON-LINE '2131) 
(PUT 'REP_PARENTS 'DEFINED-IN-FILE 'HEPHYS/CVITMAP.RED) 
(PUT 'REP_PARENTS 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE REP_PARENTS (EDGE NAMES) (PROGN (RPLACD EDGE NAMES) EDGE)) 
(NULL (SETQ *MODE 'SYMBOLIC)) 
(PUT 'ATLAS_EDGES 'NUMBER-OF-ARGS 1) 
(PUT 'ATLAS_EDGES 'DEFINED-ON-LINE '2142) 
(PUT 'ATLAS_EDGES 'DEFINED-IN-FILE 'HEPHYS/CVITMAP.RED) 
(PUT 'ATLAS_EDGES 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE ATLAS_EDGES (ATLAS)
    (UNION_EDGES
     (UNION_EDGES (MAP__EDGES (CAR ATLAS)) (DEN__EDGES (CADDR ATLAS)))
     (COEFF_EDGES (CADR ATLAS)))) 
(PUT 'DEN__EDGES 'NUMBER-OF-ARGS 1) 
(PUT 'DEN__EDGES 'DEFINED-ON-LINE '2148) 
(PUT 'DEN__EDGES 'DEFINED-IN-FILE 'HEPHYS/CVITMAP.RED) 
(PUT 'DEN__EDGES 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE DEN__EDGES (DEN_OM) (MAP__EDGES DEN_OM)) 
(PUT 'COEFF_EDGES 'NUMBER-OF-ARGS 1) 
(PUT 'COEFF_EDGES 'DEFINED-ON-LINE '2151) 
(PUT 'COEFF_EDGES 'DEFINED-IN-FILE 'HEPHYS/CVITMAP.RED) 
(PUT 'COEFF_EDGES 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE COEFF_EDGES (ATLASLIST)
    (COND ((NULL ATLASLIST) NIL)
          (T
           (UNION_EDGES (ATLAS_EDGES (CAR ATLASLIST))
            (COEFF_EDGES (CDR ATLASLIST)))))) 
(PUT 'MAP__EDGES 'NUMBER-OF-ARGS 1) 
(PUT 'MAP__EDGES 'DEFINED-ON-LINE '2156) 
(PUT 'MAP__EDGES 'DEFINED-IN-FILE 'HEPHYS/CVITMAP.RED) 
(PUT 'MAP__EDGES 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE MAP__EDGES (MAP_)
    (COND ((NULL MAP_) NIL)
          (T (UNION_EDGES (CAR MAP_) (MAP__EDGES (CDR MAP_)))))) 
(PUT 'UNION_EDGES 'NUMBER-OF-ARGS 2) 
(PUT 'UNION_EDGES 'DEFINED-ON-LINE '2161) 
(PUT 'UNION_EDGES 'DEFINED-IN-FILE 'HEPHYS/CVITMAP.RED) 
(PUT 'UNION_EDGES 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE UNION_EDGES (NEWLIST OLDLIST)
    (COND ((NULL NEWLIST) OLDLIST)
          (T (UNION_EDGES (CDR NEWLIST) (UNION_EDGE (CAR NEWLIST) OLDLIST))))) 
(PUT 'UNION_EDGE 'NUMBER-OF-ARGS 2) 
(PUT 'UNION_EDGE 'DEFINED-ON-LINE '2166) 
(PUT 'UNION_EDGE 'DEFINED-IN-FILE 'HEPHYS/CVITMAP.RED) 
(PUT 'UNION_EDGE 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE UNION_EDGE (EDGE EDGELIST)
    (COND ((MEMQ_EDGELIST EDGE EDGELIST) EDGELIST) (T (CONS EDGE EDGELIST)))) 
(PUT 'MEMQ_EDGELIST 'NUMBER-OF-ARGS 2) 
(PUT 'MEMQ_EDGELIST 'DEFINED-ON-LINE '2170) 
(PUT 'MEMQ_EDGELIST 'DEFINED-IN-FILE 'HEPHYS/CVITMAP.RED) 
(PUT 'MEMQ_EDGELIST 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE MEMQ_EDGELIST (EDGE EDGELIST) (ASSOC (CAR EDGE) EDGELIST)) 
(PUT 'EXCLUDE_EDGES 'NUMBER-OF-ARGS 2) 
(PUT 'EXCLUDE_EDGES 'DEFINED-ON-LINE '2174) 
(PUT 'EXCLUDE_EDGES 'DEFINED-IN-FILE 'HEPHYS/CVITMAP.RED) 
(PUT 'EXCLUDE_EDGES 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE EXCLUDE_EDGES (EDGELIST EXCLUDE)
    (COND ((NULL EDGELIST) NIL)
          ((MEMQ_EDGELIST (CAR EDGELIST) EXCLUDE)
           (EXCLUDE_EDGES (CDR EDGELIST) EXCLUDE))
          (T (CONS (CAR EDGELIST) (EXCLUDE_EDGES (CDR EDGELIST) EXCLUDE))))) 
(PUT 'CONSTR_WORLDS 'NUMBER-OF-ARGS 2) 
(PUT 'CONSTR_WORLDS 'DEFINED-ON-LINE '2184) 
(PUT 'CONSTR_WORLDS 'DEFINED-IN-FILE 'HEPHYS/CVITMAP.RED) 
(PUT 'CONSTR_WORLDS 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE CONSTR_WORLDS (ATLAS EDGELIST)
    ((LAMBDA (EDGES)
       (ACTUAL_EDGES_WORLD
        (MK_WORLD1 (ACTUAL_EDGES_MAP_ EDGES EDGELIST (CAR ATLAS))
         (CONSTR_COEFF (CADR ATLAS) (UNION_EDGES EDGES EDGELIST))
         (CADDR ATLAS))))
     (UNION_EDGES (DEN__EDGES (CADDR ATLAS)) (MAP__EDGES (CAR ATLAS))))) 
(PUT 'CONSTR_COEFF 'NUMBER-OF-ARGS 2) 
(PUT 'CONSTR_COEFF 'DEFINED-ON-LINE '2199) 
(PUT 'CONSTR_COEFF 'DEFINED-IN-FILE 'HEPHYS/CVITMAP.RED) 
(PUT 'CONSTR_COEFF 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE CONSTR_COEFF (ATLASES EDGELIST)
    (COND ((NULL ATLASES) NIL)
          (T
           (CONS (CONSTR_WORLDS (CAR ATLASES) EDGELIST)
                 (CONSTR_COEFF (CDR ATLASES) EDGELIST))))) 
(PUT 'ACTUAL_EDGES_MAP_ 'NUMBER-OF-ARGS 3) 
(PUT 'ACTUAL_EDGES_MAP_ 'DEFINED-ON-LINE '2205) 
(PUT 'ACTUAL_EDGES_MAP_ 'DEFINED-IN-FILE 'HEPHYS/CVITMAP.RED) 
(PUT 'ACTUAL_EDGES_MAP_ 'PROCEDURE_TYPE
     '(ARROW (TIMES GENERAL GENERAL GENERAL) GENERAL)) 
(DE ACTUAL_EDGES_MAP_ (EDGES EDGELIST MAP_)
    (CONS (ACTEDGE_MAP_ EDGES EDGELIST (LIST_OF_PARENTS EDGES EDGELIST) NIL)
          MAP_)) 
(PUT 'LIST_OF_PARENTS 'NUMBER-OF-ARGS 2) 
(PUT 'LIST_OF_PARENTS 'DEFINED-ON-LINE '2210) 
(PUT 'LIST_OF_PARENTS 'DEFINED-IN-FILE 'HEPHYS/CVITMAP.RED) 
(PUT 'LIST_OF_PARENTS 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE LIST_OF_PARENTS (EDGES EDGELIST)
    (COND ((NULL EDGES) NIL)
          (T
           (APPEND (LIST_OF_PARENT (CAR EDGES) EDGELIST)
                   (LIST_OF_PARENTS (CDR EDGES) EDGELIST))))) 
(PUT 'LIST_OF_PARENT 'NUMBER-OF-ARGS 2) 
(PUT 'LIST_OF_PARENT 'DEFINED-ON-LINE '2215) 
(PUT 'LIST_OF_PARENT 'DEFINED-IN-FILE 'HEPHYS/CVITMAP.RED) 
(PUT 'LIST_OF_PARENT 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE LIST_OF_PARENT (EDGE EDGELIST)
    (COND
     ((OR (ASSOC (CAR EDGE) OLD_EDGE_LIST) (MEMQ_EDGELIST EDGE EDGELIST)) NIL)
     (T
      (PROG (PR1 PR2 P S)
        (SETQ P (CADR EDGE))
        (SETQ PR1 (ASSOC (CAR P) EDGELIST))
        (COND (PR1 (SETQ S (CONS PR1 S))))
        (SETQ PR2 (ASSOC (CDR P) EDGELIST))
        (COND (PR2 (SETQ S (CONS PR2 S))))
        (RETURN S))))) 
(PUT 'ACTEDGE_MAP_ 'NUMBER-OF-ARGS 4) 
(PUT 'ACTEDGE_MAP_ 'DEFINED-ON-LINE '2231) 
(PUT 'ACTEDGE_MAP_ 'DEFINED-IN-FILE 'HEPHYS/CVITMAP.RED) 
(PUT 'ACTEDGE_MAP_ 'PROCEDURE_TYPE
     '(ARROW (TIMES GENERAL GENERAL GENERAL GENERAL) GENERAL)) 
(DE ACTEDGE_MAP_ (EDGES EDGELIST OLD NEW)
    (COND ((NULL EDGES) (CONS OLD NEW))
          ((MEMQ_EDGELIST (CAR EDGES) EDGELIST)
           (ACTEDGE_MAP_ (CDR EDGES) EDGELIST (CONS (CAR EDGES) OLD) NEW))
          (T (ACTEDGE_MAP_ (CDR EDGES) EDGELIST OLD (CONS (CAR EDGES) NEW))))) 
(PUT 'ACTUAL_EDGES_WORLD 'NUMBER-OF-ARGS 1) 
(PUT 'ACTUAL_EDGES_WORLD 'DEFINED-ON-LINE '2238) 
(PUT 'ACTUAL_EDGES_WORLD 'DEFINED-IN-FILE 'HEPHYS/CVITMAP.RED) 
(PUT 'ACTUAL_EDGES_WORLD 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE ACTUAL_EDGES_WORLD (WORLD1)
    (LIST
     (ACTUAL_WORLD (S_ACTUAL_WORLD1 WORLD1) (S_ACTUAL_COEFF (CADR WORLD1)))
     (LIST NIL) WORLD1)) 
(PUT 'MK_WORLD1 'NUMBER-OF-ARGS 3) 
(PUT 'MK_WORLD1 'DEFINED-ON-LINE '2243) 
(PUT 'MK_WORLD1 'DEFINED-IN-FILE 'HEPHYS/CVITMAP.RED) 
(PUT 'MK_WORLD1 'PROCEDURE_TYPE
     '(ARROW (TIMES GENERAL GENERAL GENERAL) GENERAL)) 
(DE MK_WORLD1 (EDGES-MAP_ COEFF DEN_OM)
    (LIST (MAP_2_FROM_MAP_1 EDGES-MAP_) COEFF DEN_OM)) 
(PUT 'MAP_2_FROM_MAP_1 'NUMBER-OF-ARGS 1) 
(PUT 'MAP_2_FROM_MAP_1 'DEFINED-ON-LINE '2246) 
(PUT 'MAP_2_FROM_MAP_1 'DEFINED-IN-FILE 'HEPHYS/CVITMAP.RED) 
(PUT 'MAP_2_FROM_MAP_1 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE MAP_2_FROM_MAP_1 (MAP_1)
    (LIST (MAP_1_TO_STRAND1 MAP_1) (LIST NIL)
          (MARK_EDGES (CDAR MAP_1) (CAAR MAP_1) (CDR MAP_1)))) 
(PUT 'MAP_1_TO_STRAND1 'NUMBER-OF-ARGS 1) 
(PUT 'MAP_1_TO_STRAND1 'DEFINED-ON-LINE '2254) 
(PUT 'MAP_1_TO_STRAND1 'DEFINED-IN-FILE 'HEPHYS/CVITMAP.RED) 
(PUT 'MAP_1_TO_STRAND1 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE MAP_1_TO_STRAND1 (MAP_1)
    (CONS (CAR MAP_1)
          (PRE-CALC-MAP_ (CDR MAP_1)
           (NAMES_EDGEPAIR (MAP__EDGES (CDR MAP_1)))))) 
(PUT 'NAMES_EDGEPAIR 'NUMBER-OF-ARGS 1) 
(PUT 'NAMES_EDGEPAIR 'DEFINED-ON-LINE '2259) 
(PUT 'NAMES_EDGEPAIR 'DEFINED-IN-FILE 'HEPHYS/CVITMAP.RED) 
(PUT 'NAMES_EDGEPAIR 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE NAMES_EDGEPAIR (EDGEPAIR)
    (PROG (EDGE FORALL-RESULT FORALL-ENDPTR)
      (SETQ EDGE EDGEPAIR)
      (COND ((NULL EDGE) (RETURN NIL)))
      (SETQ FORALL-RESULT
              (SETQ FORALL-ENDPTR
                      (CONS ((LAMBDA (EDGE) (CAR EDGE)) (CAR EDGE)) NIL)))
     LOOPLABEL
      (SETQ EDGE (CDR EDGE))
      (COND ((NULL EDGE) (RETURN FORALL-RESULT)))
      (RPLACD FORALL-ENDPTR (CONS ((LAMBDA (EDGE) (CAR EDGE)) (CAR EDGE)) NIL))
      (SETQ FORALL-ENDPTR (CDR FORALL-ENDPTR))
      (GO LOOPLABEL))) 
(PUT 'S_ACTUAL_WORLD1 'NUMBER-OF-ARGS 1) 
(PUT 'S_ACTUAL_WORLD1 'DEFINED-ON-LINE '2264) 
(PUT 'S_ACTUAL_WORLD1 'DEFINED-IN-FILE 'HEPHYS/CVITMAP.RED) 
(PUT 'S_ACTUAL_WORLD1 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE S_ACTUAL_WORLD1 (WORLD1) (CAAR (CAR WORLD1))) 
(PUT 'ACTUAL_WORLD 'NUMBER-OF-ARGS 2) 
(PUT 'ACTUAL_WORLD 'DEFINED-ON-LINE '2268) 
(PUT 'ACTUAL_WORLD 'DEFINED-IN-FILE 'HEPHYS/CVITMAP.RED) 
(PUT 'ACTUAL_WORLD 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE ACTUAL_WORLD (MAP_EDGES COEFFEDGES)
    (UNION_EDGES (CAR MAP_EDGES) (EXCLUDE_EDGES COEFFEDGES (CDR MAP_EDGES)))) 
(PUT 'S_ACTUAL_COEFF 'NUMBER-OF-ARGS 1) 
(PUT 'S_ACTUAL_COEFF 'DEFINED-ON-LINE '2274) 
(PUT 'S_ACTUAL_COEFF 'DEFINED-IN-FILE 'HEPHYS/CVITMAP.RED) 
(PUT 'S_ACTUAL_COEFF 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE S_ACTUAL_COEFF (WORLDLIST)
    (COND ((NULL WORLDLIST) NIL)
          (T
           (UNION_EDGES (CAR (CAR WORLDLIST))
            (S_ACTUAL_COEFF (CDR WORLDLIST)))))) 
(PUT 'WORLD_FROM_ATLAS 'NUMBER-OF-ARGS 1) 
(PUT 'WORLD_FROM_ATLAS 'DEFINED-ON-LINE '2279) 
(PUT 'WORLD_FROM_ATLAS 'DEFINED-IN-FILE 'HEPHYS/CVITMAP.RED) 
(PUT 'WORLD_FROM_ATLAS 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE WORLD_FROM_ATLAS (ATLAS) (CONSTR_WORLDS ATLAS OLD_EDGE_LIST)) 
(NULL (SETQ *MODE 'SYMBOLIC)) 
(PUT 'S_WORLD_NAMES 'NUMBER-OF-ARGS 1) 
(PUT 'S_WORLD_NAMES 'DEFINED-ON-LINE '2289) 
(PUT 'S_WORLD_NAMES 'DEFINED-IN-FILE 'HEPHYS/CVITMAP.RED) 
(PUT 'S_WORLD_NAMES 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE S_WORLD_NAMES (WORLD)
    (PROG (EDGE FORALL-RESULT FORALL-ENDPTR)
      (SETQ EDGE (CAR WORLD))
      (COND ((NULL EDGE) (RETURN NIL)))
      (SETQ FORALL-RESULT
              (SETQ FORALL-ENDPTR
                      (CONS ((LAMBDA (EDGE) (CAR EDGE)) (CAR EDGE)) NIL)))
     LOOPLABEL
      (SETQ EDGE (CDR EDGE))
      (COND ((NULL EDGE) (RETURN FORALL-RESULT)))
      (RPLACD FORALL-ENDPTR (CONS ((LAMBDA (EDGE) (CAR EDGE)) (CAR EDGE)) NIL))
      (SETQ FORALL-ENDPTR (CDR FORALL-ENDPTR))
      (GO LOOPLABEL))) 
(PUT 'CALC_WORLD 'NUMBER-OF-ARGS 2) 
(PUT 'CALC_WORLD 'DEFINED-ON-LINE '2293) 
(PUT 'CALC_WORLD 'DEFINED-IN-FILE 'HEPHYS/CVITMAP.RED) 
(PUT 'CALC_WORLD 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE CALC_WORLD (WORLD ALST)
    (PROG (S V)
      (SETQ ALST (ACTUAL_ALST ALST (S_WORLD_NAMES WORLD)))
      (SETQ V (CADR WORLD))
      (SETQ S (ASSOC ALST (CDR V)))
      (COND (S (RETURN (CDR S))))
      (SETQ S (REVAL1 (CALC_ATLAS (CADDR WORLD) ALST) T))
      (NCONC V (LIST (CONS ALST S)))
      (RETURN S))) 
(PUT 'ACTUAL_ALST 'NUMBER-OF-ARGS 2) 
(PUT 'ACTUAL_ALST 'DEFINED-ON-LINE '2308) 
(PUT 'ACTUAL_ALST 'DEFINED-IN-FILE 'HEPHYS/CVITMAP.RED) 
(PUT 'ACTUAL_ALST 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE ACTUAL_ALST (ALST NAMELIST)
    (COND ((NULL ALST) NIL)
          ((MEMQ (CAAR ALST) NAMELIST)
           (CONS (CAR ALST) (ACTUAL_ALST (CDR ALST) NAMELIST)))
          (T (ACTUAL_ALST (CDR ALST) NAMELIST)))) 
(PUT 'CALC_ATLAS 'NUMBER-OF-ARGS 2) 
(PUT 'CALC_ATLAS 'DEFINED-ON-LINE '2315) 
(PUT 'CALC_ATLAS 'DEFINED-IN-FILE 'HEPHYS/CVITMAP.RED) 
(PUT 'CALC_ATLAS 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE CALC_ATLAS (ATLAS ALST)
    (CALC_MAP_2D (CAR ATLAS) (CADDR ATLAS) (CADR ATLAS) ALST)) 
(PUT 'CALC_COEFF 'NUMBER-OF-ARGS 2) 
(PUT 'CALC_COEFF 'DEFINED-ON-LINE '2321) 
(PUT 'CALC_COEFF 'DEFINED-IN-FILE 'HEPHYS/CVITMAP.RED) 
(PUT 'CALC_COEFF 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE CALC_COEFF (WORLDLIST ALST)
    (COND ((NULL WORLDLIST) (LIST 1))
          (T
           ((LAMBDA (X)
              (COND ((EQUAL X 0) (LIST 0))
                    (T (CONS X (CALC_COEFF (CDR WORLDLIST) ALST)))))
            (CALC_WORLD (CAR WORLDLIST) ALST))))) 
(PUT 'CALC_MAP_2D 'NUMBER-OF-ARGS 4) 
(PUT 'CALC_MAP_2D 'DEFINED-ON-LINE '2329) 
(PUT 'CALC_MAP_2D 'DEFINED-IN-FILE 'HEPHYS/CVITMAP.RED) 
(PUT 'CALC_MAP_2D 'PROCEDURE_TYPE
     '(ARROW (TIMES GENERAL GENERAL GENERAL GENERAL) GENERAL)) 
(DE CALC_MAP_2D (MAP_2 DEN_OM COEFF ALST)
    (COEFF_CALC
     (CONS (MK_NAMES_MAP_2 (CAAR MAP_2))
           (CONS (CDAR MAP_2) (CONS (CADR MAP_2) DEN_OM)))
     COEFF (MK_BINDING (CADDR MAP_2) ALST))) 
(PUT 'MK_NAMES_MAP_2 'NUMBER-OF-ARGS 1) 
(PUT 'MK_NAMES_MAP_2 'DEFINED-ON-LINE '2337) 
(PUT 'MK_NAMES_MAP_2 'DEFINED-IN-FILE 'HEPHYS/CVITMAP.RED) 
(PUT 'MK_NAMES_MAP_2 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE MK_NAMES_MAP_2 (EDGESPAIR)
    (PROG (EDGE FORALL-RESULT FORALL-ENDPTR)
      (SETQ EDGE (APPEND (CAR EDGESPAIR) (CDR EDGESPAIR)))
      (COND ((NULL EDGE) (RETURN NIL)))
      (SETQ FORALL-RESULT
              (SETQ FORALL-ENDPTR
                      (CONS ((LAMBDA (EDGE) (CAR EDGE)) (CAR EDGE)) NIL)))
     LOOPLABEL
      (SETQ EDGE (CDR EDGE))
      (COND ((NULL EDGE) (RETURN FORALL-RESULT)))
      (RPLACD FORALL-ENDPTR (CONS ((LAMBDA (EDGE) (CAR EDGE)) (CAR EDGE)) NIL))
      (SETQ FORALL-ENDPTR (CDR FORALL-ENDPTR))
      (GO LOOPLABEL))) 
(PUT 'CALC_COEFFMAP_ 'NUMBER-OF-ARGS 3) 
(PUT 'CALC_COEFFMAP_ 'DEFINED-ON-LINE '2343) 
(PUT 'CALC_COEFFMAP_ 'DEFINED-IN-FILE 'HEPHYS/CVITMAP.RED) 
(PUT 'CALC_COEFFMAP_ 'PROCEDURE_TYPE
     '(ARROW (TIMES GENERAL GENERAL GENERAL) GENERAL)) 
(DE CALC_COEFFMAP_ (S COEFF ALST)
    ((LAMBDA (Z)
       (COND ((EQUAL Z 0) 0)
             (T (CONS 'TIMES (CONS Z (CALC_COEFF COEFF ALST))))))
     (CALC_MAP_ S ALST))) 
(PUT 'CALC_MAP_ 'NUMBER-OF-ARGS 2) 
(PUT 'CALC_MAP_ 'DEFINED-ON-LINE '2349) 
(PUT 'CALC_MAP_ 'DEFINED-IN-FILE 'HEPHYS/CVITMAP.RED) 
(PUT 'CALC_MAP_ 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE CALC_MAP_ (MVD ALST)
    (PROG (MAP_ V NAMES S DEN_OM AL D)
      (SETQ NAMES (CAR MVD))
      (SETQ MAP_ (CADR MVD))
      (SETQ V (CADDR MVD))
      (SETQ DEN_OM (CDDDR MVD))
      (SETQ AL (ACTUAL_ALST ALST NAMES))
      (COND ((AND (NULL AL) NAMES) (RETURN 0)))
      (SETQ S (ASSOC AL (CDR V)))
      (COND (S (SETQ S (CDR S)))
            (T
             (PROGN
              (SETQ S (REVAL1 (CALC_MAP_TAR MAP_ AL) T))
              (NCONC V (LIST (CONS AL S))))))
      (SETQ D (CALC_DEN_TAR DEN_OM ALST))
      (RETURN (COND ((EQUAL D 1) S) (T (LIST 'QUOTIENT S D)))))) 
(PUT 'COEFF_CALC 'NUMBER-OF-ARGS 3) 
(PUT 'COEFF_CALC 'DEFINED-ON-LINE '2377) 
(PUT 'COEFF_CALC 'DEFINED-IN-FILE 'HEPHYS/CVITMAP.RED) 
(PUT 'COEFF_CALC 'PROCEDURE_TYPE
     '(ARROW (TIMES GENERAL GENERAL GENERAL) GENERAL)) 
(DE COEFF_CALC (S COEFF BINDING)
    (REVAL1 (CONS 'PLUS (COEFF1_CALC S COEFF BINDING)) T)) 
(PUT 'COEFF1_CALC 'NUMBER-OF-ARGS 3) 
(PUT 'COEFF1_CALC 'DEFINED-ON-LINE '2382) 
(PUT 'COEFF1_CALC 'DEFINED-IN-FILE 'HEPHYS/CVITMAP.RED) 
(PUT 'COEFF1_CALC 'PROCEDURE_TYPE
     '(ARROW (TIMES GENERAL GENERAL GENERAL) GENERAL)) 
(DE COEFF1_CALC (S COEFF BINDING)
    (COND ((NULL BINDING) (LIST 0))
          (T
           (CONS (CALC_COEFFMAP_ S COEFF (CAR BINDING))
                 (COEFF1_CALC S COEFF (CDR BINDING)))))) 
(PUT 'CALC_SPUR0 'NUMBER-OF-ARGS 1) 
(PUT 'CALC_SPUR0 'DEFINED-ON-LINE '2389) 
(PUT 'CALC_SPUR0 'DEFINED-IN-FILE 'HEPHYS/CVITMAP.RED) 
(PUT 'CALC_SPUR0 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE CALC_SPUR0 (U)
    (PROG (S)
      (COND ((NULL U) (RETURN U)))
      (SETQ S (TRANSFORM_MAP_ U))
      (SETQ OLD_EDGE_LIST (CONS _0EDGE OLD_EDGE_LIST))
      (SETQ S (FIND_BUBLTR S))
      (RETURN
       (CALC_WORLD (WORLD_FROM_ATLAS S)
        (PROG (EDGE FORALL-RESULT FORALL-ENDPTR)
          (SETQ EDGE OLD_EDGE_LIST)
          (COND ((NULL EDGE) (RETURN NIL)))
          (SETQ FORALL-RESULT
                  (SETQ FORALL-ENDPTR
                          (CONS
                           ((LAMBDA (EDGE) (CONS (CAR EDGE) (CAR (CADR EDGE))))
                            (CAR EDGE))
                           NIL)))
         LOOPLABEL
          (SETQ EDGE (CDR EDGE))
          (COND ((NULL EDGE) (RETURN FORALL-RESULT)))
          (RPLACD FORALL-ENDPTR
                  (CONS
                   ((LAMBDA (EDGE) (CONS (CAR EDGE) (CAR (CADR EDGE))))
                    (CAR EDGE))
                   NIL))
          (SETQ FORALL-ENDPTR (CDR FORALL-ENDPTR))
          (GO LOOPLABEL)))))) 
(PUT 'CALC_SPUR 'NUMBER-OF-ARGS 1) 
(PUT 'CALC_SPUR 'DEFINED-ON-LINE '2403) 
(PUT 'CALC_SPUR 'DEFINED-IN-FILE 'HEPHYS/CVITMAP.RED) 
(PUT 'CALC_SPUR 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE CALC_SPUR (U) (SIMP* (CALC_SPUR0 U))) 
(ENDMODULE) 