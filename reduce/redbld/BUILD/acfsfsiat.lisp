(cl:declaim (cl:optimize cl:debug cl:safety))
(cl:declaim (sb-ext:muffle-conditions sb-ext:compiler-note cl:style-warning))
(MODULE (LIST 'ACFSFSIAT)) 
(REVISION 'ACFSFSIAT
          "$Id: acfsfsiat.red 6080 2021-10-05 12:07:36Z thomas-sturm $") 
(COPYRIGHT 'ACFSFSIAT "(c) 1995-2009 A. Dolzmann, T. Sturm") 
(PUT 'ACFSF_SIMPLAT1 'NUMBER-OF-ARGS 2) 
(PUT 'ACFSF_SIMPLAT1 'DEFINED-ON-LINE '35) 
(PUT 'ACFSF_SIMPLAT1 'DEFINED-IN-FILE 'REDLOG/ACFSF/ACFSFSIAT.RED) 
(PUT 'ACFSF_SIMPLAT1 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE ACFSF_SIMPLAT1 (F SOP)
    (PROG (REL LHS)
      (SETQ REL (ACFSF_OP F))
      (COND ((NOT (MEMQ REL '(EQUAL NEQ))) (RETURN NIL)))
      (SETQ LHS (ACFSF_ARG2L F))
      (COND
       ((OR (ATOM LHS) (ATOM (CAR LHS)))
        (RETURN (COND ((ACFSF_EVALATP REL LHS) 'TRUE) (T 'FALSE)))))
      (SETQ LHS ((LAMBDA (*EXP) (QUOTF1 LHS (SFTO_DCONTENTF LHS))) T))
      (COND ((MINUSF LHS) (SETQ LHS (NEGF LHS))))
      (COND ((NULL *RLSIATADV) (RETURN (ACFSF_0MK2 REL LHS))))
      (COND ((EQ REL 'EQUAL) (RETURN (ACFSF_SIMPLEQUAL LHS SOP))))
      (COND ((EQ REL 'NEQ) (RETURN (ACFSF_SIMPLNEQ LHS SOP)))))) 
(PUT 'ACFSF_SIMPLEQUAL 'NUMBER-OF-ARGS 2) 
(PUT 'ACFSF_SIMPLEQUAL 'DEFINED-ON-LINE '56) 
(PUT 'ACFSF_SIMPLEQUAL 'DEFINED-IN-FILE 'REDLOG/ACFSF/ACFSFSIAT.RED) 
(PUT 'ACFSF_SIMPLEQUAL 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE ACFSF_SIMPLEQUAL (LHS SOP)
    (PROG (FF)
      (SETQ FF (SFTO_SQFPARTF LHS))
      (COND
       ((AND *RLSIFAC (OR *RLSIEXPLA (AND *RLSIEXPL (EQUAL SOP 'OR))))
        (RETURN (ACFSF_FACEQUAL FF))))
      (RETURN (ACFSF_0MK2 'EQUAL FF)))) 
(PUT 'ACFSF_FACEQUAL 'NUMBER-OF-ARGS 1) 
(PUT 'ACFSF_FACEQUAL 'DEFINED-ON-LINE '66) 
(PUT 'ACFSF_FACEQUAL 'DEFINED-IN-FILE 'REDLOG/ACFSF/ACFSFSIAT.RED) 
(PUT 'ACFSF_FACEQUAL 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE ACFSF_FACEQUAL (F)
    ((LAMBDA (G126)
       (COND ((AND G126 (CDR G126)) (CONS 'OR G126))
             ((NULL G126) (COND ((EQ 'OR 'AND) 'TRUE) (T 'FALSE)))
             (T (CAR G126))))
     (PROG (X FORALL-RESULT FORALL-ENDPTR)
       (SETQ X (CDR (SFTO_FCTRF F)))
       (COND ((NULL X) (RETURN NIL)))
       (SETQ FORALL-RESULT
               (SETQ FORALL-ENDPTR
                       (CONS ((LAMBDA (X) (ACFSF_0MK2 'EQUAL (CAR X))) (CAR X))
                             NIL)))
      LOOPLABEL
       (SETQ X (CDR X))
       (COND ((NULL X) (RETURN FORALL-RESULT)))
       (RPLACD FORALL-ENDPTR
               (CONS ((LAMBDA (X) (ACFSF_0MK2 'EQUAL (CAR X))) (CAR X)) NIL))
       (SETQ FORALL-ENDPTR (CDR FORALL-ENDPTR))
       (GO LOOPLABEL)))) 
(PUT 'ACFSF_SIMPLNEQ 'NUMBER-OF-ARGS 2) 
(PUT 'ACFSF_SIMPLNEQ 'DEFINED-ON-LINE '70) 
(PUT 'ACFSF_SIMPLNEQ 'DEFINED-IN-FILE 'REDLOG/ACFSF/ACFSFSIAT.RED) 
(PUT 'ACFSF_SIMPLNEQ 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE ACFSF_SIMPLNEQ (LHS SOP)
    (PROG (FF)
      (SETQ FF (SFTO_SQFPARTF LHS))
      (COND
       ((AND *RLSIFAC (OR *RLSIEXPLA (AND *RLSIEXPL (EQUAL SOP 'AND))))
        (RETURN (ACFSF_FACNEQ FF))))
      (RETURN (ACFSF_0MK2 'NEQ FF)))) 
(PUT 'ACFSF_FACNEQ 'NUMBER-OF-ARGS 1) 
(PUT 'ACFSF_FACNEQ 'DEFINED-ON-LINE '80) 
(PUT 'ACFSF_FACNEQ 'DEFINED-IN-FILE 'REDLOG/ACFSF/ACFSFSIAT.RED) 
(PUT 'ACFSF_FACNEQ 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE ACFSF_FACNEQ (F)
    ((LAMBDA (G128)
       (COND ((AND G128 (CDR G128)) (CONS 'AND G128))
             ((NULL G128) (COND ((EQ 'AND 'AND) 'TRUE) (T 'FALSE)))
             (T (CAR G128))))
     (PROG (X FORALL-RESULT FORALL-ENDPTR)
       (SETQ X (CDR (SFTO_FCTRF F)))
       (COND ((NULL X) (RETURN NIL)))
       (SETQ FORALL-RESULT
               (SETQ FORALL-ENDPTR
                       (CONS ((LAMBDA (X) (ACFSF_0MK2 'NEQ (CAR X))) (CAR X))
                             NIL)))
      LOOPLABEL
       (SETQ X (CDR X))
       (COND ((NULL X) (RETURN FORALL-RESULT)))
       (RPLACD FORALL-ENDPTR
               (CONS ((LAMBDA (X) (ACFSF_0MK2 'NEQ (CAR X))) (CAR X)) NIL))
       (SETQ FORALL-ENDPTR (CDR FORALL-ENDPTR))
       (GO LOOPLABEL)))) 
(PUT 'ACFSF_EVALATP 'NUMBER-OF-ARGS 2) 
(PUT 'ACFSF_EVALATP 'DEFINED-ON-LINE '84) 
(PUT 'ACFSF_EVALATP 'DEFINED-IN-FILE 'REDLOG/ACFSF/ACFSFSIAT.RED) 
(PUT 'ACFSF_EVALATP 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE ACFSF_EVALATP (REL LHS)
    (COND ((EQ REL 'EQUAL) (NULL LHS)) ((EQ REL 'NEQ) (NOT (NULL LHS)))
          (T (REDERR (LIST "acfsf_evalatp: unknown operator " REL))))) 
(ENDMODULE) 