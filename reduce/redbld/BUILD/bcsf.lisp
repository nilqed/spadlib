(cl:declaim (cl:optimize cl:debug cl:safety))
(cl:declaim (sb-ext:muffle-conditions sb-ext:compiler-note cl:style-warning))
(MODULE (LIST 'BCSF)) 
(SETQ *HARDZEROTEST NIL) 
(FLAG '(SETRULES) 'OPFN) 
(PUT 'SETRULES 'NUMBER-OF-ARGS 1) 
(PUT 'SETRULES 'DEFINED-ON-LINE '52) 
(PUT 'SETRULES 'DEFINED-IN-FILE 'CALI/BCSF.RED) 
(PUT 'SETRULES 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE SETRULES (M) (SETRULES* (CDR (REVAL1 M T)))) 
(PUT 'SETRULES* 'NUMBER-OF-ARGS 1) 
(PUT 'SETRULES* 'DEFINED-ON-LINE '54) 
(PUT 'SETRULES* 'DEFINED-IN-FILE 'CALI/BCSF.RED) 
(PUT 'SETRULES* 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE SETRULES* (M)
    (PROG (R)
      (SETQ R (RING_NAMES CALI=BASERING))
      (SETQ M
              (PROG (X FORALL-RESULT FORALL-ENDPTR)
                (SETQ X M)
                (COND ((NULL X) (RETURN NIL)))
                (SETQ FORALL-RESULT
                        (SETQ FORALL-ENDPTR
                                (CONS
                                 ((LAMBDA (X)
                                    (COND
                                     ((NOT (EQCAR X 'REPLACEBY))
                                      (TYPERR (CONS 'LIST M) "rules list"))
                                     (T
                                      (CONS (CAR (SIMP (SECOND X)))
                                            (CAR (SIMP (THIRD X)))))))
                                  (CAR X))
                                 NIL)))
               LOOPLABEL
                (SETQ X (CDR X))
                (COND ((NULL X) (RETURN FORALL-RESULT)))
                (RPLACD FORALL-ENDPTR
                        (CONS
                         ((LAMBDA (X)
                            (COND
                             ((NOT (EQCAR X 'REPLACEBY))
                              (TYPERR (CONS 'LIST M) "rules list"))
                             (T
                              (CONS (CAR (SIMP (SECOND X)))
                                    (CAR (SIMP (THIRD X)))))))
                          (CAR X))
                         NIL))
                (SETQ FORALL-ENDPTR (CDR FORALL-ENDPTR))
                (GO LOOPLABEL)))
      (PROG (X)
        (SETQ X M)
       LAB
        (COND ((NULL X) (RETURN NIL)))
        ((LAMBDA (X)
           (COND
            ((OR (OR (ATOM (CAR X)) (ATOM (CAR (CAR X))))
                 (MEMBER (CAAAR (CAR X)) R))
             (REDERR "no substitution for ring variables allowed"))))
         (CAR X))
        (SETQ X (CDR X))
        (GO LAB))
      (PUT 'CALI 'RULES M)
      (RETURN (GETRULES)))) 
(FLAG '(GETRULES) 'OPFN) 
(PUT 'GETRULES 'NUMBER-OF-ARGS 0) 
(PUT 'GETRULES 'DEFINED-ON-LINE '68) 
(PUT 'GETRULES 'DEFINED-IN-FILE 'CALI/BCSF.RED) 
(PUT 'GETRULES 'PROCEDURE_TYPE '(ARROW UNIT GENERAL)) 
(DE GETRULES NIL
    (CONS 'LIST
          (PROG (X FORALL-RESULT FORALL-ENDPTR)
            (SETQ X (GET 'CALI 'RULES))
            (COND ((NULL X) (RETURN NIL)))
            (SETQ FORALL-RESULT
                    (SETQ FORALL-ENDPTR
                            (CONS
                             ((LAMBDA (X)
                                (LIST 'REPLACEBY (PREPF (CAR X))
                                      (PREPF (CDR X))))
                              (CAR X))
                             NIL)))
           LOOPLABEL
            (SETQ X (CDR X))
            (COND ((NULL X) (RETURN FORALL-RESULT)))
            (RPLACD FORALL-ENDPTR
                    (CONS
                     ((LAMBDA (X)
                        (LIST 'REPLACEBY (PREPF (CAR X)) (PREPF (CDR X))))
                      (CAR X))
                     NIL))
            (SETQ FORALL-ENDPTR (CDR FORALL-ENDPTR))
            (GO LOOPLABEL)))) 
(PUT 'BC=SIMP 'NUMBER-OF-ARGS 1) 
(PUT 'BC=SIMP 'DEFINED-ON-LINE '72) 
(PUT 'BC=SIMP 'DEFINED-IN-FILE 'CALI/BCSF.RED) 
(PUT 'BC=SIMP 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE BC=SIMP (U)
    ((LAMBDA (R0)
       (COND
        (R0
         (PROG (R C I)
           (SETQ I 0)
           (SETQ I 0)
           (SETQ R R0)
           (PROG ()
            WHILELABEL
             (COND ((NOT (AND R (LESSP I 1000))) (RETURN NIL)))
             (PROGN
              (SETQ C (QREMF U (CAAR R)))
              (COND ((NULL (CAR C)) (SETQ R (CDR R)))
                    (T
                     (PROGN
                      (SETQ U
                              (ADDF
                               (COND
                                (*PHYSOP-LOADED
                                 (PHYSOP-MULTF (CAR C) (CDAR R)))
                                (T (POLY-MULTF (CAR C) (CDAR R))))
                               (CDR C)))
                      (SETQ I (PLUS I 1))
                      (SETQ R R0)
                      NIL)))
              NIL)
             (GO WHILELABEL))
           (COND ((LESSP I 1000) (RETURN U))
                 (T (REDERR "recursion depth of bc!=simp too high")))))
        (T U)))
     (GET 'CALI 'RULES))) 
(PUT 'CALI_BC_MINUS? 'NUMBER-OF-ARGS 1) 
(PUT 'CALI_BC_MINUS? 'DEFINED-ON-LINE '89) 
(PUT 'CALI_BC_MINUS? 'DEFINED-IN-FILE 'CALI/BCSF.RED) 
(PUT 'CALI_BC_MINUS? 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE CALI_BC_MINUS? (U) (MINUSF U)) 
(PUT 'CALI_BC_ZERO? 'NUMBER-OF-ARGS 1) 
(PUT 'CALI_BC_ZERO? 'DEFINED-ON-LINE '91) 
(PUT 'CALI_BC_ZERO? 'DEFINED-IN-FILE 'CALI/BCSF.RED) 
(PUT 'CALI_BC_ZERO? 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE CALI_BC_ZERO? (U)
    (COND ((OR (NULL U) (EQUAL U 0)) T)
          ((AND *HARDZEROTEST (PAIRP U))
           (NULL (BC=SIMP (CAR (SIMP (PREPF U))))))
          (T NIL))) 
(PUT 'CALI_BC_FI 'NUMBER-OF-ARGS 1) 
(PUT 'CALI_BC_FI 'DEFINED-ON-LINE '97) 
(PUT 'CALI_BC_FI 'DEFINED-IN-FILE 'CALI/BCSF.RED) 
(PUT 'CALI_BC_FI 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE CALI_BC_FI (A) (COND ((EQUAL A 0) NIL) (T A))) 
(PUT 'CALI_BC_ONE? 'NUMBER-OF-ARGS 1) 
(PUT 'CALI_BC_ONE? 'DEFINED-ON-LINE '99) 
(PUT 'CALI_BC_ONE? 'DEFINED-IN-FILE 'CALI/BCSF.RED) 
(PUT 'CALI_BC_ONE? 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE CALI_BC_ONE? (U) (EQUAL U 1)) 
(PUT 'CALI_BC_INV 'NUMBER-OF-ARGS 1) 
(PUT 'CALI_BC_INV 'DEFINED-ON-LINE '101) 
(PUT 'CALI_BC_INV 'DEFINED-IN-FILE 'CALI/BCSF.RED) 
(PUT 'CALI_BC_INV 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE CALI_BC_INV (U)
    (COND ((OR (EQUAL U 1) (EQUAL U (MINUS 1))) U)
          (T
           (PROG (V)
             (SETQ V (QREMF 1 U))
             (COND ((CDR V) (RETURN NIL)) (T (RETURN (CAR V)))))))) 
(PUT 'CALI_BC_NEG 'NUMBER-OF-ARGS 1) 
(PUT 'CALI_BC_NEG 'DEFINED-ON-LINE '108) 
(PUT 'CALI_BC_NEG 'DEFINED-IN-FILE 'CALI/BCSF.RED) 
(PUT 'CALI_BC_NEG 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE CALI_BC_NEG (U) (NEGF U)) 
(PUT 'CALI_BC_PROD 'NUMBER-OF-ARGS 2) 
(PUT 'CALI_BC_PROD 'DEFINED-ON-LINE '110) 
(PUT 'CALI_BC_PROD 'DEFINED-IN-FILE 'CALI/BCSF.RED) 
(PUT 'CALI_BC_PROD 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE CALI_BC_PROD (U V)
    (BC=SIMP (COND (*PHYSOP-LOADED (PHYSOP-MULTF U V)) (T (POLY-MULTF U V))))) 
(PUT 'CALI_BC_QUOT 'NUMBER-OF-ARGS 2) 
(PUT 'CALI_BC_QUOT 'DEFINED-ON-LINE '112) 
(PUT 'CALI_BC_QUOT 'DEFINED-IN-FILE 'CALI/BCSF.RED) 
(PUT 'CALI_BC_QUOT 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE CALI_BC_QUOT (U V)
    ((LAMBDA (W)
       (COND ((NULL (CDR W)) (BC=SIMP (CAR W))) (T (TYPERR V "denominator"))))
     (QREMF U V))) 
(PUT 'CALI_BC_SUM 'NUMBER-OF-ARGS 2) 
(PUT 'CALI_BC_SUM 'DEFINED-ON-LINE '116) 
(PUT 'CALI_BC_SUM 'DEFINED-IN-FILE 'CALI/BCSF.RED) 
(PUT 'CALI_BC_SUM 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE CALI_BC_SUM (U V) (ADDF U V)) 
(PUT 'CALI_BC_DIFF 'NUMBER-OF-ARGS 2) 
(PUT 'CALI_BC_DIFF 'DEFINED-ON-LINE '118) 
(PUT 'CALI_BC_DIFF 'DEFINED-IN-FILE 'CALI/BCSF.RED) 
(PUT 'CALI_BC_DIFF 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE CALI_BC_DIFF (U V) (ADDF U (NEGF V))) 
(PUT 'CALI_BC_POWER 'NUMBER-OF-ARGS 2) 
(PUT 'CALI_BC_POWER 'DEFINED-ON-LINE '120) 
(PUT 'CALI_BC_POWER 'DEFINED-IN-FILE 'CALI/BCSF.RED) 
(PUT 'CALI_BC_POWER 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE CALI_BC_POWER (U N) (BC=SIMP (EXPTF U N))) 
(PUT 'CALI_BC_FROM_A 'NUMBER-OF-ARGS 1) 
(PUT 'CALI_BC_FROM_A 'DEFINED-ON-LINE '122) 
(PUT 'CALI_BC_FROM_A 'DEFINED-IN-FILE 'CALI/BCSF.RED) 
(PUT 'CALI_BC_FROM_A 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE CALI_BC_FROM_A (U) (BC=SIMP (CAR (SIMP* U)))) 
(PUT 'CALI_BC_2A 'NUMBER-OF-ARGS 1) 
(PUT 'CALI_BC_2A 'DEFINED-ON-LINE '124) 
(PUT 'CALI_BC_2A 'DEFINED-IN-FILE 'CALI/BCSF.RED) 
(PUT 'CALI_BC_2A 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE CALI_BC_2A (U) (PREPF U)) 
(PUT 'CALI_BC_PRIN 'NUMBER-OF-ARGS 1) 
(PUT 'CALI_BC_PRIN 'DEFINED-ON-LINE '126) 
(PUT 'CALI_BC_PRIN 'DEFINED-IN-FILE 'CALI/BCSF.RED) 
(PUT 'CALI_BC_PRIN 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE CALI_BC_PRIN (U)
    ((LAMBDA (*NAT)
       (COND
        ((OR (ATOM U) (ATOM (CAR U)))
         (COND ((EQUAL DMODE* '|:MOD:|) (PRIN2 (PREPF U))) (T (PRINTSF U))))
        (T
         (PROGN (PROGN (PRIN2 "(") NIL) (PRINTSF U) (PROGN (PRIN2 ")") NIL)))))
     NIL)) 
(PUT 'CALI_BC_DIVMOD 'NUMBER-OF-ARGS 2) 
(PUT 'CALI_BC_DIVMOD 'DEFINED-ON-LINE '133) 
(PUT 'CALI_BC_DIVMOD 'DEFINED-IN-FILE 'CALI/BCSF.RED) 
(PUT 'CALI_BC_DIVMOD 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE CALI_BC_DIVMOD (U V) (QREMF U V)) 
(PUT 'CALI_BC_GCD 'NUMBER-OF-ARGS 2) 
(PUT 'CALI_BC_GCD 'DEFINED-ON-LINE '136) 
(PUT 'CALI_BC_GCD 'DEFINED-IN-FILE 'CALI/BCSF.RED) 
(PUT 'CALI_BC_GCD 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE CALI_BC_GCD (U V) (GCDF* U V)) 
(PUT 'CALI_BC_LCM 'NUMBER-OF-ARGS 2) 
(PUT 'CALI_BC_LCM 'DEFINED-ON-LINE '138) 
(PUT 'CALI_BC_LCM 'DEFINED-IN-FILE 'CALI/BCSF.RED) 
(PUT 'CALI_BC_LCM 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE CALI_BC_LCM (U V)
    (CAR (CALI_BC_DIVMOD (CALI_BC_PROD U V) (CALI_BC_GCD U V)))) 
(ENDMODULE) 