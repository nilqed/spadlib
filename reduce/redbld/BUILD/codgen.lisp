(cl:declaim (cl:optimize cl:debug cl:safety))
(cl:declaim (sb-ext:muffle-conditions sb-ext:compiler-note cl:style-warning))
(MODULE (LIST 'CODGEN)) 
(NULL (SETQ *MODE 'SYMBOLIC)) 
(GLOBAL '(*FOR* *DO*)) 
(GLOBAL '(*CURROUT*)) 
(FLUID '(*GENTRANSEG)) 
(PUT 'C 'PREPROC 'PREPROC) 
(PUT 'RATFOR 'PREPROC 'PREPROC) 
(PUT 'FORTRAN 'PREPROC 'PREPROC) 
(PUT 'PASCAL 'PREPROC 'PREPROC) 
(PUT 'C 'PARSER 'GENTRANPARSE) 
(PUT 'RATFOR 'PARSER 'GENTRANPARSE) 
(PUT 'FORTRAN 'PARSER 'GENTRANPARSE) 
(PUT 'PASCAL 'PARSER 'GENTRANPARSE) 
(PUT 'C 'LISPCODE 'LISPCODE) 
(PUT 'RATFOR 'LISPCODE 'LISPCODE) 
(PUT 'FORTRAN 'LISPCODE 'LISPCODE) 
(PUT 'PASCAL 'LISPCODE 'LISPCODE) 
(GLOBAL '(*WRAPPERS*)) 
(SETQ *WRAPPERS* '(OPTIMIZATION SEGMENTATION)) 
(PUT 'OPTIMIZATION 'NUMBER-OF-ARGS 1) 
(PUT 'OPTIMIZATION 'DEFINED-ON-LINE '60) 
(PUT 'OPTIMIZATION 'DEFINED-IN-FILE 'SCOPE/CODGEN.RED) 
(PUT 'OPTIMIZATION 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE OPTIMIZATION (FORMS) (COND (*GENTRANOPT (OPT FORMS)) (T FORMS))) 
(PUT 'SEGMENTATION 'NUMBER-OF-ARGS 1) 
(PUT 'SEGMENTATION 'DEFINED-ON-LINE '63) 
(PUT 'SEGMENTATION 'DEFINED-IN-FILE 'SCOPE/CODGEN.RED) 
(PUT 'SEGMENTATION 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE SEGMENTATION (FORMS) (COND (*GENTRANSEG (SEG FORMS)) (T FORMS))) 
(PUT 'GENTRAN-WRAPPERS* 'NUMBER-OF-ARGS 1) 
(PUT 'GENTRAN-WRAPPERS* 'DEFINED-ON-LINE '66) 
(PUT 'GENTRAN-WRAPPERS* 'DEFINED-IN-FILE 'SCOPE/CODGEN.RED) 
(PUT 'GENTRAN-WRAPPERS* 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE GENTRAN-WRAPPERS* (FORMS)
    (PROG ()
      (COND
       (*WRAPPERS*
        (PROG (PROC_NAME)
          (SETQ PROC_NAME *WRAPPERS*)
         LAB
          (COND ((NULL PROC_NAME) (RETURN NIL)))
          ((LAMBDA (PROC_NAME) (SETQ FORMS (APPLY1 PROC_NAME FORMS)))
           (CAR PROC_NAME))
          (SETQ PROC_NAME (CDR PROC_NAME))
          (GO LAB))))
      (RETURN FORMS))) 
(PUT 'GENTRAN 'NUMBER-OF-ARGS 2) 
(PUT 'GENTRAN 'DEFINED-ON-LINE '84) 
(PUT 'GENTRAN 'DEFINED-IN-FILE 'SCOPE/CODGEN.RED) 
(PUT 'GENTRAN 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE GENTRAN (FORMS FLIST)
    (PROG (|:PRINT-PREC:|)
      (COND (FLIST (LISPEVAL (LIST 'GENTRANOUTPUSH (LIST 'QUOTE FLIST)))))
      (SETQ FORMS
              (APPLY1 (OR (GET GENTRANLANG* 'PREPROC) (GET 'FORTRAN 'PREPROC))
                      (LIST FORMS)))
      (APPLY1 (OR (GET GENTRANLANG* 'PARSER) (GET 'FORTRAN 'PARSER)) FORMS)
      (SETQ FORMS
              (APPLY1
               (OR (GET GENTRANLANG* 'LISPCODE) (GET 'FORTRAN 'LISPCODE))
               FORMS))
      (SETQ FORMS (GENTRAN-WRAPPERS* FORMS))
      (APPLY1 (OR (GET GENTRANLANG* 'FORMATTER) (GET 'FORTRAN 'FORMATTER))
              (APPLY1 (OR (GET GENTRANLANG* 'CODEGEN) (GET 'FORTRAN 'CODEGEN))
                      FORMS))
      (COND
       (FLIST
        (PROGN
         (SETQ FLIST (OR (CAR *CURROUT*) (CONS 'LIST (CDR *CURROUT*))))
         (LISPEVAL '(GENTRANPOP '(NIL)))
         (RETURN FLIST)))
       (T (RETURN (OR (CAR *CURROUT*) (CONS 'LIST (CDR *CURROUT*)))))))) 
(PUT 'INTERCHANGE_DEFS 'NUMBER-OF-ARGS 2) 
(PUT 'INTERCHANGE_DEFS 'DEFINED-ON-LINE '115) 
(PUT 'INTERCHANGE_DEFS 'DEFINED-IN-FILE 'SCOPE/CODGEN.RED) 
(PUT 'INTERCHANGE_DEFS 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE INTERCHANGE_DEFS (DEF1 DEF2)
    (PROG (TEMP1 TEMP2)
      (SETQ TEMP1 (GETD DEF1))
      (REMD DEF1)
      (SETQ TEMP2 (GETD DEF2))
      (REMD DEF2)
      (PUTD DEF1 (CAR TEMP2) (CDR TEMP2))
      (PUTD DEF2 (CAR TEMP1) (CDR TEMP1)))) 
(PUT 'STRIP_PROGN 'NUMBER-OF-ARGS 1) 
(PUT 'STRIP_PROGN 'DEFINED-ON-LINE '123) 
(PUT 'STRIP_PROGN 'DEFINED-IN-FILE 'SCOPE/CODGEN.RED) 
(PUT 'STRIP_PROGN 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE STRIP_PROGN (LST)
    (COND
     ((PAIRP LST)
      (COND ((AND (PAIRP (CAR LST)) (EQUAL (CAAR LST) 'PROGN)) (CDAR LST))
            ((AND (PAIRP (CAR LST)) (EQUAL (CAAR LST) 'PROG)
                  (EQUAL (CADAR LST) 'NIL))
             (CDDAR LST))
            (T LST))))) 
(PUT 'ADD_PROGN 'NUMBER-OF-ARGS 1) 
(PUT 'ADD_PROGN 'DEFINED-ON-LINE '133) 
(PUT 'ADD_PROGN 'DEFINED-IN-FILE 'SCOPE/CODGEN.RED) 
(PUT 'ADD_PROGN 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE ADD_PROGN (LST) (COND ((PAIRP LST) (APPEND (LIST 'PROGN) LST)) (T LST))) 
(SWITCH (LIST 'GENTRANOPT)) 
(SETQ *GENTRANOPT NIL) 
(FLUID '(DELAYLIST* DELAYOPTLIST* DELAYDECS* *GENDECS *PERIOD*)) 
(PUT 'DELAYDECS 'NUMBER-OF-ARGS 0) 
(PUT 'DELAYDECS 'DEFINED-ON-LINE '140) 
(PUT 'DELAYDECS 'DEFINED-IN-FILE 'SCOPE/CODGEN.RED) 
(PUT 'DELAYDECS 'PROCEDURE_TYPE '(ARROW UNIT GENERAL)) 
(DE DELAYDECS NIL
    (PROG ()
      (SETQ *PERIOD* *PERIOD)
      (SETQ *PERIOD NIL)
      (SETQ DELAYDECS* T)
      (SETQ DELAYLIST* NIL)
      (SYMTABREM '*MAIN* '*DECS*)
      (SYMTABREM '*MAIN* '*PARAMS*)
      (SYMTABREM '*MAIN* '*TYPE*)
      (SETQ *WRAPPERS*
              (DELETE 'OPTIMIZATION (DELETE 'SEGMENTATION *WRAPPERS*)))
      (INTERCHANGE_DEFS 'GENTRAN 'GENTRAN_DELAYDECS))) 
(PUT 'DELAYDECS 'STAT 'ENDSTAT) 
(PUT 'GENTRAN_DELAYDECS 'NUMBER-OF-ARGS 2) 
(PUT 'GENTRAN_DELAYDECS 'DEFINED-ON-LINE '157) 
(PUT 'GENTRAN_DELAYDECS 'DEFINED-IN-FILE 'SCOPE/CODGEN.RED) 
(PUT 'GENTRAN_DELAYDECS 'PROCEDURE_TYPE
     '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE GENTRAN_DELAYDECS (FORMS FLIST)
    (PROG ()
      (SETQ FORMS
              (APPLY1 (OR (GET GENTRANLANG* 'PREPROC) (GET 'FORTRAN 'PREPROC))
                      (LIST FORMS)))
      (APPLY1 (OR (GET GENTRANLANG* 'PARSER) (GET 'FORTRAN 'PARSER)) FORMS)
      (SETQ FORMS
              (APPLY1
               (OR (GET GENTRANLANG* 'LISPCODE) (GET 'FORTRAN 'LISPCODE))
               FORMS))
      (SETQ FORMS (GENTRAN-WRAPPERS* FORMS))
      (COND (*GENTRANOPT (SETQ FORMS (OPT (STRIP_PROGN FORMS)))))
      (COND (*GENTRANSEG (SETQ FORMS (SEG FORMS))))
      (SETQ FORMS (STRIP_PROGN FORMS))
      (COND (DELAYLIST* (SETQ DELAYLIST* (APPEND DELAYLIST* FORMS)))
            (T (SETQ DELAYLIST* FORMS))))) 
(PUT 'MAKEDECS 'NUMBER-OF-ARGS 0) 
(PUT 'MAKEDECS 'DEFINED-ON-LINE '181) 
(PUT 'MAKEDECS 'DEFINED-IN-FILE 'SCOPE/CODGEN.RED) 
(PUT 'MAKEDECS 'PROCEDURE_TYPE '(ARROW UNIT GENERAL)) 
(DE MAKEDECS NIL
    (PROG (GENTRANOPT GENTRANSEG)
      (COND (DELAYOPTLIST* (GENTRANERR NIL NIL "DELAYOPT ACTIVE" NIL))
            (T
             (PROGN
              (SETQ *PERIOD *PERIOD*)
              (SETQ *GENDECS T)
              (SETQ DELAYDECS* NIL)
              (SETQ GENTRANOPT *GENTRANOPT)
              (SETQ *GENTRANOPT NIL)
              (SETQ GENTRANSEG *GENTRANSEG)
              (SETQ *GENTRANSEG NIL)
              (INTERCHANGE_DEFS 'GENTRAN 'GENTRAN_DELAYDECS)
              (SETQ DELAYLIST* (SUBST 'FOR *FOR* DELAYLIST*))
              (SETQ DELAYLIST* (SUBST 'DO *DO* DELAYLIST*))
              (APPLY 'GENTRAN (LIST (ADD_PROGN DELAYLIST*) NIL))
              (SETQ DELAYLIST* NIL)
              (SETQ *WRAPPERS*
                      (APPEND *WRAPPERS* (LIST 'OPTIMIZATION 'SEGMENTATION)))
              (SETQ *GENTRANOPT GENTRANOPT)
              (SETQ *GENTRANSEG GENTRANSEG)
              NIL))))) 
(PUT 'MAKEDECS 'STAT 'ENDSTAT) 
(PUT 'DELAYOPTS 'NUMBER-OF-ARGS 0) 
(PUT 'DELAYOPTS 'DEFINED-ON-LINE '207) 
(PUT 'DELAYOPTS 'DEFINED-IN-FILE 'SCOPE/CODGEN.RED) 
(PUT 'DELAYOPTS 'PROCEDURE_TYPE '(ARROW UNIT GENERAL)) 
(DE DELAYOPTS NIL
    (PROG ()
      (COND
       ((NOT DELAYDECS*)
        (SETQ *WRAPPERS*
                (DELETE 'OPTIMIZATION (DELETE 'SEGMENTATION *WRAPPERS*)))))
      (INTERCHANGE_DEFS 'GENTRAN 'GENTRAN_DELAYOPT)
      (SETQ DELAYOPTLIST* NIL))) 
(PUT 'DELAYOPTS 'STAT 'ENDSTAT) 
(PUT 'GENTRAN_DELAYOPT 'NUMBER-OF-ARGS 2) 
(PUT 'GENTRAN_DELAYOPT 'DEFINED-ON-LINE '224) 
(PUT 'GENTRAN_DELAYOPT 'DEFINED-IN-FILE 'SCOPE/CODGEN.RED) 
(PUT 'GENTRAN_DELAYOPT 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE GENTRAN_DELAYOPT (FORMS FLIST)
    (PROG ()
      (SETQ FORMS
              (APPLY1 (OR (GET GENTRANLANG* 'PREPROC) (GET 'FORTRAN 'PREPROC))
                      (LIST FORMS)))
      (APPLY1 (OR (GET GENTRANLANG* 'PARSER) (GET 'FORTRAN 'PARSER)) FORMS)
      (COND
       (DELAYOPTLIST*
        (SETQ DELAYOPTLIST*
                (APPEND DELAYOPTLIST*
                        (STRIP_PROGN (GENTRAN-WRAPPERS* (LISPCODE FORMS))))))
       (T
        (SETQ DELAYOPTLIST*
                (STRIP_PROGN (GENTRAN-WRAPPERS* (LISPCODE FORMS)))))))) 
(PUT 'MAKEOPTS 'NUMBER-OF-ARGS 0) 
(PUT 'MAKEOPTS 'DEFINED-ON-LINE '244) 
(PUT 'MAKEOPTS 'DEFINED-IN-FILE 'SCOPE/CODGEN.RED) 
(PUT 'MAKEOPTS 'PROCEDURE_TYPE '(ARROW UNIT GENERAL)) 
(DE MAKEOPTS NIL
    (PROG (GENDECS GENTRANOPT)
      (INTERCHANGE_DEFS 'GENTRAN 'GENTRAN_DELAYOPT)
      (SETQ GENTRANOPT *GENTRANOPT)
      (SETQ *GENTRANOPT T)
      (SETQ GENDECS *GENDECS)
      (SETQ *GENDECS NIL)
      (COND
       (DELAYDECS*
        (COND
         (DELAYLIST*
          (SETQ DELAYLIST*
                  (APPEND DELAYLIST* (STRIP_PROGN (OPT DELAYOPTLIST*)))))
         (T (SETQ DELAYLIST* (STRIP_PROGN (OPT DELAYOPTLIST*))))))
       (T
        (PROGN
         (SETQ *WRAPPERS*
                 (APPEND *WRAPPERS* (LIST 'OPTIMIZATION 'SEGMENTATION)))
         (APPLY 'GENTRAN (LIST (ADD_PROGN DELAYOPTLIST*) NIL)))))
      (SETQ DELAYOPTLIST* NIL)
      (SETQ *GENTRANOPT GENTRANOPT)
      (SETQ *GENDECS GENDECS))) 
(PUT 'MAKEOPTS 'STAT 'ENDSTAT) 
(ENDMODULE) 