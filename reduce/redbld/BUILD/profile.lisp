(cl:declaim (cl:optimize cl:debug cl:safety))
(cl:declaim (sb-ext:muffle-conditions sb-ext:compiler-note cl:style-warning))
(MODULE (LIST 'PROFILE)) 
(REVISION 'PROFILE "$Id: profile.red 3961 2017-03-19 08:24:03Z thomas-sturm $") 
(COPYRIGHT 'PROFILE "(c) 2012-2017 T. Sturm") 
(FLUID '(*COMP)) 
(FLUID '(*UTF8)) 
(FLUID
 '(PROFILE_ALIST* PROFILE_LIST* PROFILE_TIME* PROFILE_GCTIME* PROFILE_STACK*
   PROFILE_RECURSION1L* PROFILE_RECURSION2L*)) 
(FLAG '(PROUSAGE) 'OPFN) 
(PUT 'PROUSAGE 'NUMBER-OF-ARGS 0) 
(PUT 'PROUSAGE 'DEFINED-ON-LINE '40) 
(PUT 'PROUSAGE 'DEFINED-IN-FILE 'PROFILE/PROFILE.RED) 
(PUT 'PROUSAGE 'PROCEDURE_TYPE '(ARROW UNIT GENERAL)) 
(DE PROUSAGE NIL
    (PROGN
     (PRIN2T
      "Usage: profile p_1, ..., p_n;           profile expr procedures p_1, ..., p_n")
     (PRIN2T
      "       unprofile p_1, ..., p_n;         stop profiling p_1, ..., p_n")
     (PRIN2T
      "       proprint([p_1,..., p_n | all]);  print collected data in tables")
     (PRIN2T
      "       proall();                        list all profiled procedures")
     (PRIN2T
      "       pronested();                     list procedures with nested calls")
     (PRIN2T
      "       proreset();                      delete all collected data")
     (PRIN2T "       prousage();                      this information")
     NIL)) 
(LOADTIME (PROUSAGE)) 
(PUT 'PROFILE 'STAT 'RLIS) 
(PUT 'PROFILE 'NUMBER-OF-ARGS 1) 
(PUT 'PROFILE 'DEFINED-ON-LINE '55) 
(PUT 'PROFILE 'DEFINED-IN-FILE 'PROFILE/PROFILE.RED) 
(PUT 'PROFILE 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE PROFILE (FNL)
    (PROG (FN)
      (SETQ FN FNL)
     LAB
      (COND ((NULL FN) (RETURN NIL)))
      ((LAMBDA (FN) (PROFILE_PROFILE FN)) (CAR FN))
      (SETQ FN (CDR FN))
      (GO LAB))) 
(PUT 'UNPROFILE 'STAT 'RLIS) 
(PUT 'UNPROFILE 'NUMBER-OF-ARGS 1) 
(PUT 'UNPROFILE 'DEFINED-ON-LINE '59) 
(PUT 'UNPROFILE 'DEFINED-IN-FILE 'PROFILE/PROFILE.RED) 
(PUT 'UNPROFILE 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE UNPROFILE (FNL)
    (PROG (FN)
      (SETQ FN FNL)
     LAB
      (COND ((NULL FN) (RETURN NIL)))
      ((LAMBDA (FN) (PROFILE_UNPROFILE FN)) (CAR FN))
      (SETQ FN (CDR FN))
      (GO LAB))) 
(PUT 'PROPRINT 'PSOPFN 'PROPRINT) 
(PUT 'PROPRINT 'NUMBER-OF-ARGS 1) 
(PUT 'PROPRINT 'DEFINED-ON-LINE '63) 
(PUT 'PROPRINT 'DEFINED-IN-FILE 'PROFILE/PROFILE.RED) 
(PUT 'PROPRINT 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE PROPRINT (ARGL)
    (COND ((NOT ARGL) (PROFILE_PRINT NIL))
          ((AND (EQCAR (CAR ARGL) 'LIST) (NOT (CDR ARGL)))
           (PROFILE_PRINT (CDAR ARGL)))
          (T (PROFILE_PRINT ARGL)))) 
(FLAG '(PRORESET) 'OPFN) 
(PUT 'PRORESET 'NUMBER-OF-ARGS 0) 
(PUT 'PRORESET 'DEFINED-ON-LINE '72) 
(PUT 'PRORESET 'DEFINED-IN-FILE 'PROFILE/PROFILE.RED) 
(PUT 'PRORESET 'PROCEDURE_TYPE '(ARROW UNIT GENERAL)) 
(DE PRORESET NIL (PROFILE_RESET)) 
(FLAG '(PROREFRESH) 'OPFN) 
(PUT 'PROREFRESH 'NUMBER-OF-ARGS 0) 
(PUT 'PROREFRESH 'DEFINED-ON-LINE '76) 
(PUT 'PROREFRESH 'DEFINED-IN-FILE 'PROFILE/PROFILE.RED) 
(PUT 'PROREFRESH 'PROCEDURE_TYPE '(ARROW UNIT GENERAL)) 
(DE PROREFRESH NIL (PROFILE_REFRESH)) 
(FLAG '(PROALL) 'OPFN) 
(PUT 'PROALL 'NUMBER-OF-ARGS 0) 
(PUT 'PROALL 'DEFINED-ON-LINE '80) 
(PUT 'PROALL 'DEFINED-IN-FILE 'PROFILE/PROFILE.RED) 
(PUT 'PROALL 'PROCEDURE_TYPE '(ARROW UNIT GENERAL)) 
(DE PROALL NIL (CONS 'LIST (SORT PROFILE_LIST* 'ORDP))) 
(FLAG '(PRONESTED) 'OPFN) 
(PUT 'PRONESTED 'NUMBER-OF-ARGS 0) 
(PUT 'PRONESTED 'DEFINED-ON-LINE '84) 
(PUT 'PRONESTED 'DEFINED-IN-FILE 'PROFILE/PROFILE.RED) 
(PUT 'PRONESTED 'PROCEDURE_TYPE '(ARROW UNIT GENERAL)) 
(DE PRONESTED NIL
    (CONS 'LIST
          (SORT
           (PROG (FN FORALL-RESULT FORALL-ENDPTR)
             (SETQ FN PROFILE_LIST*)
            STARTOVER
             (COND ((NULL FN) (RETURN NIL)))
             (SETQ FORALL-RESULT
                     ((LAMBDA (FN) (COND ((PROFILE_NESTEDP FN) (LIST FN))))
                      (CAR FN)))
             (SETQ FORALL-ENDPTR (LASTPAIR FORALL-RESULT))
             (SETQ FN (CDR FN))
             (COND ((ATOM FORALL-ENDPTR) (GO STARTOVER)))
            LOOPLABEL
             (COND ((NULL FN) (RETURN FORALL-RESULT)))
             (RPLACD FORALL-ENDPTR
                     ((LAMBDA (FN) (COND ((PROFILE_NESTEDP FN) (LIST FN))))
                      (CAR FN)))
             (SETQ FORALL-ENDPTR (LASTPAIR FORALL-ENDPTR))
             (SETQ FN (CDR FN))
             (GO LOOPLABEL))
           'ORDP))) 
(PUT 'PROFILE_PROFILE 'NUMBER-OF-ARGS 1) 
(PUT 'PROFILE_PROFILE 'DEFINED-ON-LINE '88) 
(PUT 'PROFILE_PROFILE 'DEFINED-IN-FILE 'PROFILE/PROFILE.RED) 
(PUT 'PROFILE_PROFILE 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE PROFILE_PROFILE (FN)
    (PROG (D ARGS SVCOMP)
      (COND
       ((GET FN 'PROFILE_ORIGFN)
        (PROGN (LPRIM (LIST FN "is already profiled")) (RETURN NIL))))
      (SETQ D (GETD FN))
      (COND
       ((OR (NOT D) (NEQ (CAR D) 'EXPR))
        (REDERR (LIST FN "is not an expr procedure"))))
      (SETQ PROFILE_LIST* (CONS FN PROFILE_LIST*))
      (PROFILE_UPDALIST)
      (SETQ D (CDR D))
      (SETQ ARGS
              (PROG (I FORALL-RESULT FORALL-ENDPTR)
                (SETQ I 1)
                (COND
                 ((MINUSP (DIFFERENCE (GET FN 'NUMBER-OF-ARGS) I))
                  (RETURN NIL)))
                (SETQ FORALL-RESULT
                        (SETQ FORALL-ENDPTR (CONS (MKID 'A I) NIL)))
               LOOPLABEL
                (SETQ I (PLUS2 I 1))
                (COND
                 ((MINUSP (DIFFERENCE (GET FN 'NUMBER-OF-ARGS) I))
                  (RETURN FORALL-RESULT)))
                (RPLACD FORALL-ENDPTR (CONS (MKID 'A I) NIL))
                (SETQ FORALL-ENDPTR (CDR FORALL-ENDPTR))
                (GO LOOPLABEL)))
      (PUT FN 'PROFILE_ORIGFN D)
      (SETQ SVCOMP *COMP)
      (SETQ *COMP T)
      (ERRORSET
       (LIST 'DE FN ARGS
             (LIST 'APPLY ''PROFILE_EXEC
                   (LIST 'LIST (MKQUOTE FN) (MKQUOTE D) (CONS 'LIST ARGS))))
       T NIL)
      (SETQ *COMP SVCOMP)
      (PROFILE_RESET))) 
(PUT 'PROFILE_UPDALIST 'NUMBER-OF-ARGS 0) 
(PUT 'PROFILE_UPDALIST 'DEFINED-ON-LINE '110) 
(PUT 'PROFILE_UPDALIST 'DEFINED-IN-FILE 'PROFILE/PROFILE.RED) 
(PUT 'PROFILE_UPDALIST 'PROCEDURE_TYPE '(ARROW UNIT GENERAL)) 
(DE PROFILE_UPDALIST NIL
    (PROG (FN)
      (SETQ FN PROFILE_LIST*)
     LAB
      (COND ((NULL FN) (RETURN NIL)))
      ((LAMBDA (FN)
         (COND
          ((NOT (ASSOC (LIST FN) PROFILE_ALIST*))
           (SETQ PROFILE_ALIST*
                   (CONS (CONS (LIST FN) (LIST 0 0 0)) PROFILE_ALIST*)))))
       (CAR FN))
      (SETQ FN (CDR FN))
      (GO LAB))) 
(PUT 'PROFILE_REFRESH 'NUMBER-OF-ARGS 0) 
(PUT 'PROFILE_REFRESH 'DEFINED-ON-LINE '115) 
(PUT 'PROFILE_REFRESH 'DEFINED-IN-FILE 'PROFILE/PROFILE.RED) 
(PUT 'PROFILE_REFRESH 'PROCEDURE_TYPE '(ARROW UNIT GENERAL)) 
(DE PROFILE_REFRESH NIL
    (PROGN
     (SETQ PROFILE_STACK* NIL)
     (SETQ PROFILE_TIME* (TIME))
     (SETQ PROFILE_GCTIME* (GCTIME))
     NIL)) 
(PUT 'PROFILE_UNPROFILE 'NUMBER-OF-ARGS 1) 
(PUT 'PROFILE_UNPROFILE 'DEFINED-ON-LINE '123) 
(PUT 'PROFILE_UNPROFILE 'DEFINED-IN-FILE 'PROFILE/PROFILE.RED) 
(PUT 'PROFILE_UNPROFILE 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE PROFILE_UNPROFILE (FN)
    (PROGN
     (COND ((NOT (GET FN 'PROFILE_ORIGFN)) (LPRIM (LIST FN "is not profiled")))
           (T
            (PROGN
             (PUTD FN 'EXPR (REMPROP FN 'PROFILE_ORIGFN))
             (SETQ PROFILE_LIST* (LTO_DELQIP FN PROFILE_LIST*))
             (PROFILE_RESET)))))) 
(PUT 'PROFILE_RESET 'NUMBER-OF-ARGS 0) 
(PUT 'PROFILE_RESET 'DEFINED-ON-LINE '134) 
(PUT 'PROFILE_RESET 'DEFINED-IN-FILE 'PROFILE/PROFILE.RED) 
(PUT 'PROFILE_RESET 'PROCEDURE_TYPE '(ARROW UNIT GENERAL)) 
(DE PROFILE_RESET NIL
    (PROGN
     (SETQ PROFILE_RECURSION1L* NIL)
     (SETQ PROFILE_RECURSION2L* NIL)
     (SETQ PROFILE_ALIST* NIL)
     (PROFILE_UPDALIST)
     (PROFILE_REFRESH))) 
(PUT 'PROFILE_EXEC 'NUMBER-OF-ARGS 3) 
(PUT 'PROFILE_EXEC 'DEFINED-ON-LINE '143) 
(PUT 'PROFILE_EXEC 'DEFINED-IN-FILE 'PROFILE/PROFILE.RED) 
(PUT 'PROFILE_EXEC 'PROCEDURE_TYPE
     '(ARROW (TIMES GENERAL GENERAL GENERAL) GENERAL)) 
(DE PROFILE_EXEC (FN FVALUE ARGS)
    (PROG (W OTIME OGCTIME NTIME NGCTIME RES KEY)
      (COND
       ((EQCAR PROFILE_STACK* FN)
        (PROGN
         (SETQ PROFILE_RECURSION1L* (LTO_INSERTQ FN PROFILE_RECURSION1L*))
         (RETURN (APPLY FVALUE ARGS)))))
      (COND
       ((MEMQ FN PROFILE_STACK*)
        (PROGN
         (SETQ PROFILE_RECURSION2L*
                 (LTO_INSERTQ (CONS FN PROFILE_STACK*) PROFILE_RECURSION2L*))
         (RETURN (APPLY FVALUE ARGS)))))
      (SETQ PROFILE_STACK* (LTO_INSERTQ FN PROFILE_STACK*))
      (SETQ OTIME (TIME))
      (SETQ OGCTIME (GCTIME))
      (COND ((MEMQ 'PSL LISPSYSTEM*) (SETQ OTIME (DIFFERENCE OTIME OGCTIME))))
      (SETQ RES (APPLY FVALUE ARGS))
      (SETQ NTIME (TIME))
      (SETQ NGCTIME (GCTIME))
      (COND ((MEMQ 'PSL LISPSYSTEM*) (SETQ NTIME (DIFFERENCE NTIME NGCTIME))))
      (COND
       ((EQCAR PROFILE_STACK* FN) (SETQ PROFILE_STACK* (CDR PROFILE_STACK*))))
      (SETQ KEY (CONS FN PROFILE_STACK*))
      (SETQ W (ASSOC KEY PROFILE_ALIST*))
      (COND
       ((NOT W)
        (PROGN
         (SETQ W (CONS KEY (LIST 0 0 0)))
         (SETQ PROFILE_ALIST* (CONS W PROFILE_ALIST*)))))
      (SETQ W (CDR W))
      (SETCAR W (PLUS (CAR W) 1))
      (SETCAR (CDR W) (PLUS (CADR W) (DIFFERENCE NTIME OTIME)))
      (SETCAR (CDDR W) (PLUS (CADDR W) (DIFFERENCE NGCTIME OGCTIME)))
      (RETURN RES))) 
(PUT 'PROFILE_PRINT 'NUMBER-OF-ARGS 1) 
(PUT 'PROFILE_PRINT 'DEFINED-ON-LINE '184) 
(PUT 'PROFILE_PRINT 'DEFINED-IN-FILE 'PROFILE/PROFILE.RED) 
(PUT 'PROFILE_PRINT 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE PROFILE_PRINT (ARGL)
    (PROG (ALIST D P2 P3 TS2 TS3)
      (SETQ TS2 0)
      (SETQ TS3 0)
      (SETQ TS2 (DIFFERENCE (TIME) PROFILE_TIME*))
      (SETQ TS3 (DIFFERENCE (GCTIME) PROFILE_GCTIME*))
      (COND ((MEMQ 'PSL LISPSYSTEM*) (SETQ TS2 (DIFFERENCE TS2 TS3))))
      (SETQ ALIST (COPY PROFILE_ALIST*))
      (PROG (PR)
        (SETQ PR ALIST)
       LAB
        (COND ((NULL PR) (RETURN NIL)))
        ((LAMBDA (PR)
           (PROGN
            (SETQ D (CDR PR))
            (SETQ P2 (PROFILE_PERCENT (CADR D) TS2))
            (SETQ P3 (PROFILE_PERCENT (CADDR D) TS3))
            (SETCDR PR (LIST (CAR D) (CADR D) P2 (CADDR D) P3))))
         (CAR PR))
        (SETQ PR (CDR PR))
        (GO LAB))
      (COND
       ((OR (NOT ARGL) (EQUAL ARGL '(ALL)))
        (PROGN (PROFILE_TOPLEVEL-TABLE ALIST TS2 TS3) (TERPRI))))
      (COND
       ((EQUAL ARGL '(ALL))
        (PROGN
         (PROG (PR)
           (SETQ PR ALIST)
          LAB
           (COND ((NULL PR) (RETURN NIL)))
           ((LAMBDA (PR)
              (COND
               ((NOT (CDR (CAR PR)))
                (PROFILE_SPECIAL-TABLE ALIST (CAAR PR) TS2 TS3))))
            (CAR PR))
           (SETQ PR (CDR PR))
           (GO LAB))
         (RETURN NIL))))
      (PROG (ARG)
        (SETQ ARG ARGL)
       LAB
        (COND ((NULL ARG) (RETURN NIL)))
        ((LAMBDA (ARG)
           (COND
            ((PROFILE_NESTEDP ARG) (PROFILE_SPECIAL-TABLE ALIST ARG TS2 TS3))))
         (CAR ARG))
        (SETQ ARG (CDR ARG))
        (GO LAB)))) 
(PUT 'PROFILE_NESTEDP 'NUMBER-OF-ARGS 1) 
(PUT 'PROFILE_NESTEDP 'DEFINED-ON-LINE '218) 
(PUT 'PROFILE_NESTEDP 'DEFINED-IN-FILE 'PROFILE/PROFILE.RED) 
(PUT 'PROFILE_NESTEDP 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE PROFILE_NESTEDP (FN) (PROFILE_NESTEDP1 FN PROFILE_ALIST*)) 
(PUT 'PROFILE_NESTEDP1 'NUMBER-OF-ARGS 2) 
(PUT 'PROFILE_NESTEDP1 'DEFINED-ON-LINE '221) 
(PUT 'PROFILE_NESTEDP1 'DEFINED-IN-FILE 'PROFILE/PROFILE.RED) 
(PUT 'PROFILE_NESTEDP1 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE PROFILE_NESTEDP1 (FN ALIST)
    (AND ALIST
         (OR (AND (EQ (CAAAR ALIST) FN) (CDAAR ALIST))
             (PROFILE_NESTEDP1 FN (CDR ALIST))))) 
(PUT 'PROFILE_PERCENT 'NUMBER-OF-ARGS 2) 
(PUT 'PROFILE_PERCENT 'DEFINED-ON-LINE '225) 
(PUT 'PROFILE_PERCENT 'DEFINED-IN-FILE 'PROFILE/PROFILE.RED) 
(PUT 'PROFILE_PERCENT 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE PROFILE_PERCENT (PART ALL)
    (COND ((EQN PART 0) 0.0)
          (T
           (PROFILE_TRUNCATE (TIMES (FLOAT PART) (QUOTIENT 100 (FLOAT ALL)))
            1)))) 
(PUT 'PROFILE_TOPLEVEL-TABLE 'NUMBER-OF-ARGS 3) 
(PUT 'PROFILE_TOPLEVEL-TABLE 'DEFINED-ON-LINE '231) 
(PUT 'PROFILE_TOPLEVEL-TABLE 'DEFINED-IN-FILE 'PROFILE/PROFILE.RED) 
(PUT 'PROFILE_TOPLEVEL-TABLE 'PROCEDURE_TYPE
     '(ARROW (TIMES GENERAL GENERAL GENERAL) GENERAL)) 
(DE PROFILE_TOPLEVEL-TABLE (ALIST TS2 TS3)
    (PROG (TLALIST)
      (TERPRI)
      (IOTO_TPRIN2T
       "Analysis of all relative toplevel calls to the specified functions.")
      (IOTO_TPRIN2T "Note that relatively nested calls are not counted here:")
      (SETQ TLALIST
              (PROG (PR FORALL-RESULT FORALL-ENDPTR)
                (SETQ PR ALIST)
               STARTOVER
                (COND ((NULL PR) (RETURN NIL)))
                (SETQ FORALL-RESULT
                        ((LAMBDA (PR) (COND ((NOT (CDR (CAR PR))) (LIST PR))))
                         (CAR PR)))
                (SETQ FORALL-ENDPTR (LASTPAIR FORALL-RESULT))
                (SETQ PR (CDR PR))
                (COND ((ATOM FORALL-ENDPTR) (GO STARTOVER)))
               LOOPLABEL
                (COND ((NULL PR) (RETURN FORALL-RESULT)))
                (RPLACD FORALL-ENDPTR
                        ((LAMBDA (PR) (COND ((NOT (CDR (CAR PR))) (LIST PR))))
                         (CAR PR)))
                (SETQ FORALL-ENDPTR (LASTPAIR FORALL-ENDPTR))
                (SETQ PR (CDR PR))
                (GO LOOPLABEL)))
      (SETQ TLALIST
              (SORT TLALIST
                    (FUNCTION (LAMBDA (X Y) (GREATERP (CADDR X) (CADDR Y))))))
      (SETQ TLALIST
              (LTO_NCONCN
               (LIST (LIST NIL) (LIST (PROFILE_QTHEADLINE "Toplevel Calls"))
                     (LIST NIL) TLALIST (COND ((CDR TLALIST) (LIST NIL)))
                     (COND ((CDR TLALIST) (LIST (PROFILE_QTSUM TLALIST))))
                     (LIST NIL) (LIST (PROFILE_QTTOTAL TS2 TS3)) (LIST NIL))))
      (PROFILE_PRINT1 TLALIST 10))) 
(PUT 'PROFILE_QTHEADLINE 'NUMBER-OF-ARGS 1) 
(PUT 'PROFILE_QTHEADLINE 'DEFINED-ON-LINE '252) 
(PUT 'PROFILE_QTHEADLINE 'DEFINED-IN-FILE 'PROFILE/PROFILE.RED) 
(PUT 'PROFILE_QTHEADLINE 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE PROFILE_QTHEADLINE (TITLE)
    (CONS TITLE '("calls" "time(ms)" "time(%)" "gc(ms)" "gc(%)"))) 
(PUT 'PROFILE_QTSUM 'NUMBER-OF-ARGS 1) 
(PUT 'PROFILE_QTSUM 'DEFINED-ON-LINE '255) 
(PUT 'PROFILE_QTSUM 'DEFINED-IN-FILE 'PROFILE/PROFILE.RED) 
(PUT 'PROFILE_QTSUM 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE PROFILE_QTSUM (AL)
    (PROG (D S1 S2 S3 S4 S5)
      (SETQ D 0)
      (SETQ S1 0)
      (SETQ S2 0)
      (SETQ S3 0)
      (SETQ S4 0)
      (SETQ S5 0)
      (PROG (PR)
        (SETQ PR AL)
       LAB
        (COND ((NULL PR) (RETURN NIL)))
        ((LAMBDA (PR)
           (PROGN
            (SETQ D (CDR PR))
            (SETQ S1 (PLUS S1 (NTH D 1)))
            (SETQ S2 (PLUS S2 (NTH D 2)))
            (SETQ S3 (PLUS S3 (NTH D 3)))
            (SETQ S4 (PLUS S4 (NTH D 4)))
            (SETQ S5 (PLUS S5 (NTH D 5)))))
         (CAR PR))
        (SETQ PR (CDR PR))
        (GO LAB))
      (RETURN (LIST "sum" S1 S2 S3 S4 S5)))) 
(PUT 'PROFILE_QTTOTAL 'NUMBER-OF-ARGS 2) 
(PUT 'PROFILE_QTTOTAL 'DEFINED-ON-LINE '269) 
(PUT 'PROFILE_QTTOTAL 'DEFINED-IN-FILE 'PROFILE/PROFILE.RED) 
(PUT 'PROFILE_QTTOTAL 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE PROFILE_QTTOTAL (TS2 TS3) (LIST "total" " " TS2 100.0 TS3 100.0)) 
(PUT 'PROFILE_TRUNCATE 'NUMBER-OF-ARGS 2) 
(PUT 'PROFILE_TRUNCATE 'DEFINED-ON-LINE '272) 
(PUT 'PROFILE_TRUNCATE 'DEFINED-IN-FILE 'PROFILE/PROFILE.RED) 
(PUT 'PROFILE_TRUNCATE 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE PROFILE_TRUNCATE (X D)
    (QUOTIENT (FLOAT (FIX (TIMES (EXPT 10 D) X))) (EXPT 10 D))) 
(PUT 'PROFILE_SPECIAL-TABLE 'NUMBER-OF-ARGS 4) 
(PUT 'PROFILE_SPECIAL-TABLE 'DEFINED-ON-LINE '275) 
(PUT 'PROFILE_SPECIAL-TABLE 'DEFINED-IN-FILE 'PROFILE/PROFILE.RED) 
(PUT 'PROFILE_SPECIAL-TABLE 'PROCEDURE_TYPE
     '(ARROW (TIMES GENERAL GENERAL GENERAL GENERAL) GENERAL)) 
(DE PROFILE_SPECIAL-TABLE (ALIST FN TS2 TS3)
    (PROG (SPALIST)
      (SETQ SPALIST
              (PROG (PR FORALL-RESULT FORALL-ENDPTR)
                (SETQ PR ALIST)
               STARTOVER
                (COND ((NULL PR) (RETURN NIL)))
                (SETQ FORALL-RESULT
                        ((LAMBDA (PR)
                           (COND ((EQ (CAR (CAR PR)) FN) (LIST PR))))
                         (CAR PR)))
                (SETQ FORALL-ENDPTR (LASTPAIR FORALL-RESULT))
                (SETQ PR (CDR PR))
                (COND ((ATOM FORALL-ENDPTR) (GO STARTOVER)))
               LOOPLABEL
                (COND ((NULL PR) (RETURN FORALL-RESULT)))
                (RPLACD FORALL-ENDPTR
                        ((LAMBDA (PR)
                           (COND ((EQ (CAR (CAR PR)) FN) (LIST PR))))
                         (CAR PR)))
                (SETQ FORALL-ENDPTR (LASTPAIR FORALL-ENDPTR))
                (SETQ PR (CDR PR))
                (GO LOOPLABEL)))
      (COND ((NOT (CDR SPALIST)) (RETURN NIL)))
      (TERPRI)
      (IOTO_TPRIN2 (LIST "Analysis of all calls to " FN))
      (COND
       ((MEMQ FN PROFILE_RECURSION1L*)
        (IOTO_PRIN2 (LIST " (relatively direct recursion)"))))
      (COND
       ((MEMQ FN PROFILE_RECURSION2L*)
        (IOTO_PRIN2 (LIST " (relatively indirect recursion)"))))
      (IOTO_PRIN2T ":")
      (SETQ SPALIST
              (SORT SPALIST
                    (FUNCTION
                     (LAMBDA (X Y)
                       (LESSP (LENGTH (CAR X)) (LENGTH (CAR Y)))))))
      (SETQ SPALIST
              (LTO_NCONCN
               (LIST (LIST NIL) (LIST (PROFILE_QTHEADLINE FN)) (LIST NIL)
                     SPALIST (COND ((CDR SPALIST) (LIST NIL)))
                     (COND ((CDR SPALIST) (LIST (PROFILE_QTSUM SPALIST))))
                     (LIST NIL) (LIST (PROFILE_QTTOTAL TS2 TS3)) (LIST NIL))))
      (PROFILE_PRINT1 SPALIST 10)
      (TERPRI))) 
(PUT 'PROFILE_PRINT1 'NUMBER-OF-ARGS 2) 
(PUT 'PROFILE_PRINT1 'DEFINED-ON-LINE '300) 
(PUT 'PROFILE_PRINT1 'DEFINED-IN-FILE 'PROFILE/PROFILE.RED) 
(PUT 'PROFILE_PRINT1 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE PROFILE_PRINT1 (AL CW)
    (PROG (N CW1)
      (SETQ N 0)
      (SETQ CW1 0)
      (SETQ CW1
              (DIFFERENCE
               (DIFFERENCE (MAX (LINELENGTH NIL) (PLUS (TIMES 5 CW) 20))
                           (TIMES 5 CW))
               1))
      (PROG (PR)
        (SETQ PR AL)
       LAB
        (COND ((NULL PR) (RETURN NIL)))
        ((LAMBDA (PR)
           (COND
            (PR
             (PROGN
              (SETQ N (PROFILE_PRINT-IDL (CAR PR)))
              (COND
               ((GEQ N CW1)
                (PROGN
                 (TERPRI)
                 (PROG (I)
                   (SETQ I 1)
                  LAB
                   (COND ((MINUSP (DIFFERENCE CW1 I)) (RETURN NIL)))
                   (PRIN2 " ")
                   (SETQ I (PLUS2 I 1))
                   (GO LAB)))))
              (PROG (I)
                (SETQ I (PLUS N 1))
               LAB
                (COND ((MINUSP (DIFFERENCE CW1 I)) (RETURN NIL)))
                (PRIN2 " ")
                (SETQ I (PLUS2 I 1))
                (GO LAB))
              (PROG (X)
                (SETQ X (CDR PR))
               LAB
                (COND ((NULL X) (RETURN NIL)))
                ((LAMBDA (X)
                   (PROGN
                    (PROG (I)
                      (SETQ I (PLUS (LENGTH (EXPLODE2 X)) 1))
                     LAB
                      (COND ((MINUSP (DIFFERENCE CW I)) (RETURN NIL)))
                      (PRIN2 " ")
                      (SETQ I (PLUS2 I 1))
                      (GO LAB))
                    (PRIN2 X)))
                 (CAR X))
                (SETQ X (CDR X))
                (GO LAB))
              (TERPRI)))
            (T
             (PROGN
              (PROFILE_PRINT-LINE (LENGTH (CDR (CADR AL))) CW1 CW)
              (TERPRI)))))
         (CAR PR))
        (SETQ PR (CDR PR))
        (GO LAB)))) 
(PUT 'PROFILE_PRINT-LINE 'NUMBER-OF-ARGS 3) 
(PUT 'PROFILE_PRINT-LINE 'DEFINED-ON-LINE '322) 
(PUT 'PROFILE_PRINT-LINE 'DEFINED-IN-FILE 'PROFILE/PROFILE.RED) 
(PUT 'PROFILE_PRINT-LINE 'PROCEDURE_TYPE
     '(ARROW (TIMES GENERAL GENERAL GENERAL) GENERAL)) 
(DE PROFILE_PRINT-LINE (N CW1 CW)
    (PROG (I)
      (SETQ I 1)
     LAB
      (COND ((MINUSP (DIFFERENCE (PLUS CW1 (TIMES CW N)) I)) (RETURN NIL)))
      (COND
       (*UTF8
        (UTF8_TYO
         (LIST 1 (PLUS (TIMES 14 16) 2) (TIMES 8 16) (PLUS (TIMES 9 16) 4))))
       (T (PRIN2 "-")))
      (SETQ I (PLUS2 I 1))
      (GO LAB))) 
(PUT 'PROFILE_PRINT-IDL 'NUMBER-OF-ARGS 1) 
(PUT 'PROFILE_PRINT-IDL 'DEFINED-ON-LINE '326) 
(PUT 'PROFILE_PRINT-IDL 'DEFINED-IN-FILE 'PROFILE/PROFILE.RED) 
(PUT 'PROFILE_PRINT-IDL 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE PROFILE_PRINT-IDL (IDL)
    (PROG (N)
      (SETQ N 0)
      (COND
       ((PAIRP IDL)
        (PROGN
         (SETQ IDL (REVERSE IDL))
         (PRIN2 (CAR IDL))
         (SETQ N (PLUS N (LENGTH (EXPLODE2 (CAR IDL)))))
         (PROG (ID)
           (SETQ ID (CDR IDL))
          LAB
           (COND ((NULL ID) (RETURN NIL)))
           ((LAMBDA (ID)
              (PROGN
               (PRIN2 " ")
               (COND
                (*UTF8
                 (UTF8_TYO
                  (LIST 1 (PLUS (TIMES 14 16) 2) (PLUS (TIMES 8 16) 6)
                        (PLUS (TIMES 9 16) 2))))
                (T (PRIN2 ">")))
               (PRIN2 " ")
               (SETQ N (PLUS N 3))
               (PRIN2 ID)
               (SETQ N (PLUS N (LENGTH (EXPLODE2 ID))))))
            (CAR ID))
           (SETQ ID (CDR ID))
           (GO LAB))))
       (T (PROGN (PRIN2 IDL) (SETQ N (LENGTH (EXPLODE2 IDL))))))
      (RETURN N))) 
(ENDMODULE) 