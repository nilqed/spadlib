(cl:declaim (cl:optimize cl:debug cl:safety))
(cl:declaim (sb-ext:muffle-conditions sb-ext:compiler-note cl:style-warning))
(MODULE (LIST 'CLQESTATE)) 
(REVISION 'CLQESTATE
          "$Id: clqestate.red 6072 2021-09-28 13:07:18Z thomas-sturm $") 
(COPYRIGHT 'CLQESTATE "(c) 2021 A. Dolzmann, T. Sturm") 
(PUT 'QESTATE_NEW 'NUMBER-OF-ARGS 0) 
(DE QESTATE_NEW NIL
    (PROG (STATE)
      (SETQ STATE (QEENV_NEW))
      (COND (NIL NIL))
      (PUTV STATE 0 'QESTATE)
      (PUTV STATE 31 'UNDEFINED)
      (PUTV STATE 32 'UNDEFINED)
      (PUTV STATE 33 'UNDEFINED)
      (PUTV STATE 34 'UNDEFINED)
      (PUTV STATE 35 'UNDEFINED)
      (PUTV STATE 36 'UNDEFINED)
      (PUTV STATE 37 'UNDEFINED)
      (PUTV STATE 38 'UNDEFINED)
      (PUTV STATE 39 'UNDEFINED)
      (PUTV STATE 40 'UNDEFINED)
      (PUTV STATE 41 'UNDEFINED)
      (PUTV STATE 42 'UNDEFINED)
      (PUTV STATE 43 'UNDEFINED)
      (PUTV STATE 44 'UNDEFINED)
      (PUTV STATE 45 'UNDEFINED)
      (PUTV STATE 46 'UNDEFINED)
      (RETURN STATE))) 
(PUT 'QESTATE_PRINT 'NUMBER-OF-ARGS 1) 
(DE QESTATE_PRINT (STATE)
    (PROG (*NAT INDENT INPUTTHEORY INPUTFORMULA THEORY FORMULA CONTAINER)
      (SETQ INDENT "  ")
      (IOTO_TPRIN2T (LIST "{"))
      (IOTO_TPRIN2T (LIST INDENT "Class:         " (GETV STATE 0)))
      (SETQ INPUTTHEORY (GETV STATE 31))
      (COND
       ((NEQ INPUTTHEORY 'UNDEFINED)
        (SETQ INPUTTHEORY
                (IOTO_SMAPRIN
                 (CONS 'LIST
                       (PROG (F FORALL-RESULT FORALL-ENDPTR)
                         (SETQ F INPUTTHEORY)
                         (COND ((NULL F) (RETURN NIL)))
                         (SETQ FORALL-RESULT
                                 (SETQ FORALL-ENDPTR
                                         (CONS
                                          ((LAMBDA (F) (RL_PREPFOF F)) (CAR F))
                                          NIL)))
                        LOOPLABEL
                         (SETQ F (CDR F))
                         (COND ((NULL F) (RETURN FORALL-RESULT)))
                         (RPLACD FORALL-ENDPTR
                                 (CONS ((LAMBDA (F) (RL_PREPFOF F)) (CAR F))
                                       NIL))
                         (SETQ FORALL-ENDPTR (CDR FORALL-ENDPTR))
                         (GO LOOPLABEL)))))))
      (IOTO_TPRIN2T (LIST INDENT "InputTheory:   " INPUTTHEORY))
      (SETQ INPUTFORMULA (GETV STATE 32))
      (COND
       ((NEQ INPUTFORMULA 'UNDEFINED)
        (SETQ INPUTFORMULA (IOTO_SMAPRIN (RL_PREPFOF INPUTFORMULA)))))
      (IOTO_TPRIN2T (LIST INDENT "InputFormula:  " INPUTFORMULA))
      (IOTO_TPRIN2T (LIST INDENT "AnswerMode:    " (GETV STATE 33)))
      (IOTO_TPRIN2T (LIST INDENT "AssumeMode:    " (GETV STATE 34)))
      (IOTO_TPRIN2T (LIST INDENT "NoAssumeVars:  " (GETV STATE 35)))
      (SETQ THEORY (GETV STATE 36))
      (COND
       ((NEQ THEORY 'UNDEFINED)
        (SETQ THEORY
                (IOTO_SMAPRIN
                 (CONS 'LIST
                       (PROG (F FORALL-RESULT FORALL-ENDPTR)
                         (SETQ F THEORY)
                         (COND ((NULL F) (RETURN NIL)))
                         (SETQ FORALL-RESULT
                                 (SETQ FORALL-ENDPTR
                                         (CONS
                                          ((LAMBDA (F) (RL_PREPFOF F)) (CAR F))
                                          NIL)))
                        LOOPLABEL
                         (SETQ F (CDR F))
                         (COND ((NULL F) (RETURN FORALL-RESULT)))
                         (RPLACD FORALL-ENDPTR
                                 (CONS ((LAMBDA (F) (RL_PREPFOF F)) (CAR F))
                                       NIL))
                         (SETQ FORALL-ENDPTR (CDR FORALL-ENDPTR))
                         (GO LOOPLABEL)))))))
      (IOTO_TPRIN2T (LIST INDENT "Theory:        " THEORY))
      (SETQ FORMULA (GETV STATE 37))
      (COND
       ((NEQ FORMULA 'UNDEFINED)
        (SETQ FORMULA (IOTO_SMAPRIN (RL_PREPFOF FORMULA)))))
      (IOTO_TPRIN2 (LIST INDENT "Formula:       " FORMULA))
      (IOTO_TPRIN2T (LIST INDENT "Answer:        " (GETV STATE 38)))
      (IOTO_TPRIN2T (LIST INDENT "Blocks:        " (GETV STATE 39)))
      (IOTO_TPRIN2T (LIST INDENT "Variables:     " (GETV STATE 40)))
      (IOTO_TPRIN2T (LIST INDENT "ProduceAnswer: " (GETV STATE 41)))
      (IOTO_TPRIN2 (LIST INDENT "WorkingNodes:  "))
      (SETQ CONTAINER (GETV STATE 42))
      (COND ((NEQ CONTAINER 'UNDEFINED) (QECONT_PRINT CONTAINER "  "))
            (T (IOTO_PRIN2 (LIST 'UNDEFINED))))
      (IOTO_TPRIN2 (LIST INDENT "SuccessNodes:  "))
      (QENODE_PRINTLIST (GETV STATE 43) INDENT)
      (IOTO_TPRIN2 (LIST INDENT "FailureNodes:  "))
      (QENODE_PRINTLIST (GETV STATE 44) INDENT)
      (IOTO_TPRIN2T (LIST INDENT "CurrentNode:   " (GETV STATE 45)))
      (IOTO_TPRIN2T (LIST "}"))
      (RETURN STATE))) 
(PUT 'QESTATE_FETCHBLOCK 'NUMBER-OF-ARGS 1) 
(DE QESTATE_FETCHBLOCK (STATE)
    (PROG (BLOCKS NEXTBLOCK QUANTIFIER VARIABLES)
      (SETQ BLOCKS (GETV STATE 39))
      (SETQ NEXTBLOCK (PROG1 (CAR BLOCKS) (SETQ BLOCKS (CDR BLOCKS))))
      (PUTV STATE 39 BLOCKS)
      (COND
       ((AND *RLVERBOSE (QEENV_GETVB STATE))
        (PROGN
         (PROG (G184)
           (SETQ G184 NEXTBLOCK)
           (SETQ QUANTIFIER (CAR G184))
           (SETQ VARIABLES (CDR G184))
           (RETURN G184))
         (IOTO_TPRIN2 (LIST "---- " (CONS QUANTIFIER (REVERSE VARIABLES)))))))
      (RETURN NEXTBLOCK))) 
(PUT 'QESTATE_ADDBLOCK 'NUMBER-OF-ARGS 2) 
(DE QESTATE_ADDBLOCK (STATE BLOCK) (PUTV STATE 39 (CONS BLOCK (GETV STATE 39)))) 
(PUT 'QESTATE_ISEMPTYBLOCKS 'NUMBER-OF-ARGS 1) 
(DE QESTATE_ISEMPTYBLOCKS (STATE) (NULL (GETV STATE 39))) 
(PUT 'QESTATE_FETCHVARIABLES 'NUMBER-OF-ARGS 1) 
(DE QESTATE_FETCHVARIABLES (STATE)
    (PROG (VARIABLES)
      (SETQ VARIABLES (GETV STATE 40))
      (PUTV STATE 40 NIL)
      (COND
       ((AND *RLVERBOSE (QEENV_GETVB STATE) (QEENV_GETDFS STATE))
        (PROGN
         (IOTO_PRIN2 (LIST " [DFS"))
         (COND ((QEENV_GETDYN STATE) (IOTO_PRIN2 (LIST " DYN"))))
         (IOTO_PRIN2 (LIST "] ")))))
      (COND
       ((AND *RLVERBOSE (QEENV_GETVB STATE) (NOT (QEENV_GETDFS STATE)))
        (PROGN (IOTO_PRIN2 (LIST " [BFS: depth " (LENGTH VARIABLES) "] ")))))
      (RETURN VARIABLES))) 
(PUT 'QESTATE_INITIALIZEWORKINGNODES 'NUMBER-OF-ARGS 1) 
(DE QESTATE_INITIALIZEWORKINGNODES (STATE)
    (PROG (TRAVERSALMODE DYNAMICPROGRAMMING)
      (SETQ TRAVERSALMODE (COND ((QEENV_GETDFS STATE) 'DFS) (T 'BFS)))
      (SETQ DYNAMICPROGRAMMING (QEENV_GETDYN STATE))
      (PUTV STATE 42 (QECONT_NEW TRAVERSALMODE DYNAMICPROGRAMMING))
      (COND ((AND *RLVERBOSE (QEENV_GETVB STATE)) (PUTV STATE 46 0)))
      (RETURN STATE))) 
(PUT 'QESTATE_FETCHWORKINGNODE 'NUMBER-OF-ARGS 1) 
(DE QESTATE_FETCHWORKINGNODE (STATE)
    (PROG (NODE BFSLEVELCOUNT)
      (SETQ BFSLEVELCOUNT 0)
      (COND
       ((AND *RLVERBOSE (QEENV_GETVB STATE) (QEENV_GETDFS STATE))
        (PROGN
         (IOTO_PRIN2
          (IOTO_PRINTLISTTOSTRING
           (LIST (QESTATE_WORKINGNODESSTATISTICS STATE))))
         NIL)))
      (COND
       ((AND *RLVERBOSE (QEENV_GETVB STATE) (NOT (QEENV_GETDFS STATE)))
        (PROGN
         (SETQ BFSLEVELCOUNT (GETV STATE 46))
         (COND
          ((EQUAL BFSLEVELCOUNT 0)
           (PROGN
            (IOTO_TPRIN2
             (LIST "-- left: "
                   (LENGTH (QESTATE_FIRSTWORKINGNODEVARIABLES STATE))))
            (IOTO_PRIN2T (LIST " " (QESTATE_FIRSTWORKINGNODEVARIABLES STATE)))
            (SETQ BFSLEVELCOUNT (QESTATE_NUMBEROFWORKINGNODES STATE)))))
         (IOTO_PRIN2 (LIST BFSLEVELCOUNT))
         (SETQ BFSLEVELCOUNT (DIFFERENCE BFSLEVELCOUNT 1))
         (PUTV STATE 46 BFSLEVELCOUNT))))
      (SETQ NODE (QECONT_FETCH (GETV STATE 42)))
      (RETURN NODE))) 
(PUT 'QESTATE_FIRSTWORKINGNODE 'NUMBER-OF-ARGS 1) 
(DE QESTATE_FIRSTWORKINGNODE (STATE) (QECONT_FIRSTNODE (GETV STATE 42))) 
(PUT 'QESTATE_ADDWORKINGNODES 'NUMBER-OF-ARGS 2) 
(DE QESTATE_ADDWORKINGNODES (STATE NODES)
    (PROGN (QECONT_ADD (GETV STATE 42) NODES) STATE)) 
(PUT 'QESTATE_ISEMPTYWORKINGNODES 'NUMBER-OF-ARGS 1) 
(DE QESTATE_ISEMPTYWORKINGNODES (STATE) (QECONT_ISEMPTY (GETV STATE 42))) 
(PUT 'QESTATE_FETCHSUCCESSNODES 'NUMBER-OF-ARGS 1) 
(DE QESTATE_FETCHSUCCESSNODES (STATE)
    (PROG (SUCCESSNODES)
      (SETQ SUCCESSNODES (GETV STATE 43))
      (PUTV STATE 43 NIL)
      (RETURN SUCCESSNODES))) 
(PUT 'QESTATE_FETCHFAILURENODES 'NUMBER-OF-ARGS 1) 
(DE QESTATE_FETCHFAILURENODES (STATE)
    (PROG (FAILURENODES)
      (SETQ FAILURENODES (GETV STATE 44))
      (PUTV STATE 44 NIL)
      (RETURN FAILURENODES))) 
(PUT 'QESTATE_NUMBEROFWORKINGNODES 'NUMBER-OF-ARGS 1) 
(DE QESTATE_NUMBEROFWORKINGNODES (STATE) (QECONT_LENGTH (GETV STATE 42))) 
(PUT 'QESTATE_FETCHWORKINGNODEDELETIONS 'NUMBER-OF-ARGS 1) 
(DE QESTATE_FETCHWORKINGNODEDELETIONS (STATE)
    (PROG (CONTAINER REQUESTED DELETED P)
      (SETQ REQUESTED 0)
      (SETQ DELETED 0)
      (SETQ P 0)
      (SETQ CONTAINER (GETV STATE 42))
      (SETQ REQUESTED (QECONT_GETREQUESTEDADDITIONS CONTAINER))
      (SETQ DELETED
              (DIFFERENCE REQUESTED (QECONT_GETEFFECTIVEADDITIONS CONTAINER)))
      (COND
       ((AND *RLVERBOSE (QEENV_GETVB STATE))
        (PROGN
         (SETQ P (QUOTIENT (TIMES 100.0 DELETED) REQUESTED))
         (IOTO_PRIN2
          (IOTO_PRINTLISTTOSTRING
           (LIST "[DEL " DELETED "/" REQUESTED " = " P "%]"))))))
      (QECONT_SETREQUESTEDADDITIONS CONTAINER 0)
      (QECONT_SETEFFECTIVEADDITIONS CONTAINER 0)
      (RETURN (CONS DELETED REQUESTED)))) 
(PUT 'QESTATE_WORKINGNODESSTATISTICS 'NUMBER-OF-ARGS 1) 
(DE QESTATE_WORKINGNODESSTATISTICS (STATE) (QECONT_STATISTICS (GETV STATE 42))) 
(PUT 'QESTATE_FIRSTWORKINGNODEVARIABLES 'NUMBER-OF-ARGS 1) 
(DE QESTATE_FIRSTWORKINGNODEVARIABLES (STATE)
    (QENODE_GETVARIABLES (QECONT_FIRSTNODE (GETV STATE 42)))) 
(PUT 'QESTATE_GETINPUTTHEORY 'NUMBER-OF-ARGS 1) 
(DE QESTATE_GETINPUTTHEORY (STATE) (GETV STATE 31)) 
(PUT 'QESTATE_SETINPUTTHEORY 'NUMBER-OF-ARGS 2) 
(DE QESTATE_SETINPUTTHEORY (STATE THEORY) (PROGN (PUTV STATE 31 THEORY) STATE)) 
(PUT 'QESTATE_GETINPUTFORMULA 'NUMBER-OF-ARGS 1) 
(DE QESTATE_GETINPUTFORMULA (STATE) (GETV STATE 32)) 
(PUT 'QESTATE_SETINPUTFORMULA 'NUMBER-OF-ARGS 2) 
(DE QESTATE_SETINPUTFORMULA (STATE THEORY) (PROGN (PUTV STATE 32 THEORY) STATE)) 
(PUT 'QESTATE_GETANSWERMODE 'NUMBER-OF-ARGS 1) 
(DE QESTATE_GETANSWERMODE (STATE) (GETV STATE 33)) 
(PUT 'QESTATE_SETANSWERMODE 'NUMBER-OF-ARGS 2) 
(DE QESTATE_SETANSWERMODE (STATE MODE) (PROGN (PUTV STATE 33 MODE) STATE)) 
(PUT 'QESTATE_GETASSUMEMODE 'NUMBER-OF-ARGS 1) 
(DE QESTATE_GETASSUMEMODE (STATE) (GETV STATE 34)) 
(PUT 'QESTATE_SETASSUMEMODE 'NUMBER-OF-ARGS 2) 
(DE QESTATE_SETASSUMEMODE (STATE MODE) (PROGN (PUTV STATE 34 MODE) STATE)) 
(PUT 'QESTATE_GETNOASSUMEVARS 'NUMBER-OF-ARGS 1) 
(DE QESTATE_GETNOASSUMEVARS (STATE) (GETV STATE 35)) 
(PUT 'QESTATE_SETNOASSUMEVARS 'NUMBER-OF-ARGS 2) 
(DE QESTATE_SETNOASSUMEVARS (STATE VARS) (PROGN (PUTV STATE 35 VARS) STATE)) 
(PUT 'QESTATE_GETTHEORY 'NUMBER-OF-ARGS 1) 
(DE QESTATE_GETTHEORY (STATE) (GETV STATE 36)) 
(PUT 'QESTATE_SETTHEORY 'NUMBER-OF-ARGS 2) 
(DE QESTATE_SETTHEORY (STATE THEORY) (PROGN (PUTV STATE 36 THEORY) STATE)) 
(PUT 'QESTATE_GETFORMULA 'NUMBER-OF-ARGS 1) 
(DE QESTATE_GETFORMULA (STATE) (GETV STATE 37)) 
(PUT 'QESTATE_SETFORMULA 'NUMBER-OF-ARGS 2) 
(DE QESTATE_SETFORMULA (STATE F) (PROGN (PUTV STATE 37 F) STATE)) 
(PUT 'QESTATE_GETANSWER 'NUMBER-OF-ARGS 1) 
(DE QESTATE_GETANSWER (STATE) (GETV STATE 38)) 
(PUT 'QESTATE_SETANSWER 'NUMBER-OF-ARGS 2) 
(DE QESTATE_SETANSWER (STATE ANSWER) (PROGN (PUTV STATE 38 ANSWER) STATE)) 
(PUT 'QESTATE_GETBLOCKS 'NUMBER-OF-ARGS 1) 
(DE QESTATE_GETBLOCKS (STATE) (GETV STATE 39)) 
(PUT 'QESTATE_SETBLOCKS 'NUMBER-OF-ARGS 2) 
(DE QESTATE_SETBLOCKS (STATE BLOCKS) (PROGN (PUTV STATE 39 BLOCKS) STATE)) 
(PUT 'QESTATE_GETVARIABLES 'NUMBER-OF-ARGS 1) 
(DE QESTATE_GETVARIABLES (STATE) (GETV STATE 40)) 
(PUT 'QESTATE_SETVARIABLES 'NUMBER-OF-ARGS 2) 
(DE QESTATE_SETVARIABLES (STATE VARS) (PROGN (PUTV STATE 40 VARS) STATE)) 
(PUT 'QESTATE_GETPRODUCEANWER 'NUMBER-OF-ARGS 1) 
(DE QESTATE_GETPRODUCEANWER (STATE) (GETV STATE 41)) 
(PUT 'QESTATE_SETPRODUCEANSWER 'NUMBER-OF-ARGS 2) 
(DE QESTATE_SETPRODUCEANSWER (STATE ANS) (PROGN (PUTV STATE 41 ANS) STATE)) 
(PUT 'QESTATE_GETSUCCESSNODES 'NUMBER-OF-ARGS 1) 
(DE QESTATE_GETSUCCESSNODES (STATE) (GETV STATE 43)) 
(PUT 'QESTATE_SETSUCCESSNODES 'NUMBER-OF-ARGS 2) 
(DE QESTATE_SETSUCCESSNODES (STATE NODES) (PROGN (PUTV STATE 43 NODES) STATE)) 
(PUT 'QESTATE_GETFAILURENODES 'NUMBER-OF-ARGS 1) 
(DE QESTATE_GETFAILURENODES (STATE) (GETV STATE 44)) 
(PUT 'QESTATE_SETFAILURENODES 'NUMBER-OF-ARGS 2) 
(DE QESTATE_SETFAILURENODES (STATE NODES) (PROGN (PUTV STATE 44 NODES) STATE)) 
(PUT 'QESTATE_GETCURRENTNODE 'NUMBER-OF-ARGS 1) 
(DE QESTATE_GETCURRENTNODE (STATE) (GETV STATE 45)) 
(PUT 'QESTATE_SETCURRENTNODE 'NUMBER-OF-ARGS 2) 
(DE QESTATE_SETCURRENTNODE (STATE NODE) (PROGN (PUTV STATE 45 NODE) STATE)) 
(ENDMODULE) 