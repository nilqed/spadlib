(cl:declaim (cl:optimize cl:debug cl:safety))
(cl:declaim (sb-ext:muffle-conditions sb-ext:compiler-note cl:style-warning))
(MODULE (LIST 'LINREL)) 
(PUT 'FIRSTLINEARRELATION 'NUMBER-OF-ARGS 2) 
(PUT 'FIRSTLINEARRELATION 'DEFINED-ON-LINE '30) 
(PUT 'FIRSTLINEARRELATION 'DEFINED-IN-FILE 'ALGINT/LINREL.RED) 
(PUT 'FIRSTLINEARRELATION 'PROCEDURE_TYPE
     '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE FIRSTLINEARRELATION (M N)
    (PROG (M1 U UU V W X XX I J ISUB1N ANS)
      (SETQ ISUB1N (ISUB1 N))
      (SETQ M1 (MKVECT ISUB1N))
      (PROG (I)
        (SETQ I 0)
       LAB
        (COND ((MINUSP (DIFFERENCE ISUB1N I)) (RETURN NIL)))
        (PUTV M1 I (COPYVEC (GETV M I) ISUB1N))
        (SETQ I (PLUS2 I 1))
        (GO LAB))
      (SETQ ANS (MKIDENM ISUB1N))
      (SETQ I 0)
     OUTERLOOP
      (SETQ U (GETV M1 I))
      (SETQ UU (GETV ANS I))
      (SETQ J 0)
     PIVOTSEARCH
      (COND ((IEQUAL J N) (GO ZEROROW)))
      (SETQ V (GETV U J))
      (COND ((NULL (CAR V)) (PROGN (SETQ J (IADD1 J)) (GO PIVOTSEARCH))))
      (COND ((IEQUAL I ISUB1N) (RETURN NIL)))
      (SETQ V (*INVSQ (NEGSQ V)))
      (PROG (K)
        (SETQ K (IADD1 I))
       LAB
        (COND ((MINUSP (DIFFERENCE ISUB1N K)) (RETURN NIL)))
        (PROGN
         (SETQ XX (GETV ANS K))
         (SETQ X (GETV M1 K))
         (SETQ W (*MULTSQ V (GETV X J)))
         (PROG (L)
           (SETQ L 0)
          LAB
           (COND ((MINUSP (DIFFERENCE ISUB1N L)) (RETURN NIL)))
           (PROGN
            (PUTV X L (*ADDSQ (GETV X L) (*MULTSQ W (GETV U L))))
            (PUTV XX L (*ADDSQ (GETV XX L) (*MULTSQ W (GETV UU L)))))
           (SETQ L (PLUS2 L 1))
           (GO LAB)))
        (SETQ K (PLUS2 K 1))
        (GO LAB))
      (SETQ I (IADD1 I))
      (COND ((LESSP I N) (GO OUTERLOOP)))
      (RETURN NIL)
     ZEROROW
      (RETURN (GETV ANS I)))) 
(ENDMODULE) 