(cl:declaim (cl:optimize cl:debug cl:safety))
(cl:declaim (sb-ext:muffle-conditions sb-ext:compiler-note cl:style-warning))
(MODULE (LIST 'BIBASIS_INTERFACE)) 
(DE MK_SQ (A) (LIST '*SQ A T)) 
(PUT 'MK_SQ 'NUMBER-OF-ARGS 1) 
(PUT 'MK_SQ 'DEFINED-ON-LINE '37) 
(PUT 'MK_SQ 'DEFINED-IN-FILE 'BIBASIS/BIBASIS_INTERFACE.RED) 
(PUT 'MK_SQ 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(PUTC 'MK_SQ 'INLINE '(LAMBDA (A) (LIST '*SQ A T))) 
(PUT 'BIBASIS 'NUMBER-OF-ARGS 4) 
(PUT 'BIBASIS 'DEFINED-ON-LINE '40) 
(PUT 'BIBASIS 'DEFINED-IN-FILE 'BIBASIS/BIBASIS_INTERFACE.RED) 
(PUT 'BIBASIS 'PROCEDURE_TYPE
     '(ARROW (TIMES GENERAL GENERAL GENERAL GENERAL) GENERAL)) 
(DE BIBASIS (INITIALSET VARIABLESLIST MONOMIALORDER TOGROEBNER)
    (PROG (RESULT POLYNOMLIST)
      (COND
       ((AND INITIALSET (NEQ (CAR INITIALSET) 'LIST))
        (PROGN
         (MATHPRINT INITIALSET)
         (REDERR "is not a polynomial list")
         NIL)))
      (COND
       ((NULL (CDR INITIALSET))
        (PROGN
         (MATHPRINT INITIALSET)
         (REDERR "polynomial list is empty")
         NIL)))
      (COND
       ((AND VARIABLESLIST (NEQ (CAR VARIABLESLIST) 'LIST))
        (PROGN
         (MATHPRINT VARIABLESLIST)
         (REDERR "is not a variable list")
         NIL)))
      (COND
       ((NULL (CDR VARIABLESLIST))
        (PROGN
         (MATHPRINT VARIABLESLIST)
         (REDERR "variable list is empty")
         NIL)))
      (COND
       ((AND (NEQ MONOMIALORDER 'LEX) (NEQ MONOMIALORDER 'DEGLEX)
             (NEQ MONOMIALORDER 'DEGREVLEX))
        (PROGN
         (MATHPRINT MONOMIALORDER)
         (REDERR " is unsupported monomial ordering")
         NIL)))
      (SETQ FLUIDBIBASISVARIABLES (CDR VARIABLESLIST))
      (SETQ FLUIDBIBASISMONOMIALORDER MONOMIALORDER)
      (INIT)
      (SETQ POLYNOMLIST (CONS NIL NIL))
      (COND
       (INITIALSET
        (PROGN
         (PROG (POLYNOM)
           (SETQ POLYNOM (CDR INITIALSET))
          LAB
           (COND ((NULL POLYNOM) (RETURN NIL)))
           ((LAMBDA (POLYNOM)
              (PROGN
               (SORTEDPOLYNOMLISTINSERT POLYNOMLIST
                (POLYNOMREAD (CAR (SIMP (REVAL1 POLYNOM T)))))
               NIL))
            (CAR POLYNOM))
           (SETQ POLYNOM (CDR POLYNOM))
           (GO LAB))
         NIL)))
      (SETQ FLUIDBIBASISRUNNINGTIME (TIME))
      (SETQ FLUIDBIBASISGCTIME (GCTIME))
      (SETQ POLYNOMLIST (CONSTRUCTINVOLUTIVEBASIS POLYNOMLIST TOGROEBNER))
      (SETQ FLUIDBIBASISGCTIME (DIFFERENCE (GCTIME) FLUIDBIBASISGCTIME))
      (SETQ FLUIDBIBASISRUNNINGTIME
              (DIFFERENCE (DIFFERENCE (TIME) FLUIDBIBASISRUNNINGTIME)
                          FLUIDBIBASISGCTIME))
      (PROG ()
       WHILELABEL
        (COND ((NOT (CAR POLYNOMLIST)) (RETURN NIL)))
        (PROGN
         (SETQ RESULT
                 (CONS (LIST '*SQ (CONS (POLYNOMWRITE (CAR POLYNOMLIST)) 1) T)
                       RESULT))
         (SETQ POLYNOMLIST (CDR POLYNOMLIST))
         NIL)
        (GO WHILELABEL))
      (RETURN (CONS 'LIST (REVERSE RESULT))))) 
(PUT 'BIBASIS_PRINT_STATISTICS 'NUMBER-OF-ARGS 0) 
(PUT 'BIBASIS_PRINT_STATISTICS 'DEFINED-ON-LINE '101) 
(PUT 'BIBASIS_PRINT_STATISTICS 'DEFINED-IN-FILE 'BIBASIS/BIBASIS_INTERFACE.RED) 
(PUT 'BIBASIS_PRINT_STATISTICS 'PROCEDURE_TYPE '(ARROW UNIT GENERAL)) 
(DE BIBASIS_PRINT_STATISTICS NIL
    (COND
     ((EQUAL (CAR FLUIDBIBASISSETQ) NIL)
      (PROG ()
        (TERPRI)
        (PROGN
         (PRIN2 "        Variables order = ")
         (PRIN2 (CAR FLUIDBIBASISVARIABLES))
         NIL)
        (PROG (X)
          (SETQ X (CDR FLUIDBIBASISVARIABLES))
         LAB
          (COND ((NULL X) (RETURN NIL)))
          ((LAMBDA (X) (PROGN (PROGN (PRIN2 " > ") (PRIN2 X) NIL) NIL))
           (CAR X))
          (SETQ X (CDR X))
          (GO LAB))
        (TERPRI)
        (PROGN
         (PRIN2 "Normal forms calculated = ")
         (PRIN2 FLUIDBIBASISNORMALFORMS)
         NIL)
        (TERPRI)
        (PROGN
         (PRIN2 "  Non-zero normal forms = ")
         (PRIN2 FLUIDBIBASISNONZERONORMALFORMS)
         NIL)
        (TERPRI)
        (PROGN
         (PRIN2 "        Reductions made = ")
         (PRIN2 FLUIDBIBASISREDUCTIONSMADE)
         NIL)
        (TERPRI)
        (PROGN
         (PRIN2 "Time: ")
         (PRIN2 FLUIDBIBASISRUNNINGTIME)
         (PRIN2 " ms")
         NIL)
        (TERPRI)
        (PROGN
         (PRIN2 "GC time: ")
         (PRIN2 FLUIDBIBASISGCTIME)
         (PRIN2 " ms")
         NIL)
        (TERPRI))))) 
(FLAG '(BIBASIS BIBASIS_PRINT_STATISTICS) 'OPFN) 
(ENDMODULE) 