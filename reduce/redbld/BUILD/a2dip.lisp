(cl:declaim (cl:optimize cl:debug cl:safety))
(cl:declaim (sb-ext:muffle-conditions sb-ext:compiler-note cl:style-warning))
(MODULE (LIST 'A2DIP)) 
(DE DIPFMON (A E) (CONS E (CONS A NIL))) 
(PUT 'DIPFMON 'NUMBER-OF-ARGS 2) 
(PUT 'DIPFMON 'DEFINED-ON-LINE '32) 
(PUT 'DIPFMON 'DEFINED-IN-FILE 'DIPOLY/A2DIP.RED) 
(PUT 'DIPFMON 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(PUTC 'DIPFMON 'INLINE '(LAMBDA (A E) (CONS E (CONS A NIL)))) 
(DE VEVZERO? (U) (OR (NULL U) (AND (EQUAL (CAR U) 0) (VEVZERO?1 (CDR U))))) 
(PUT 'VEVZERO? 'NUMBER-OF-ARGS 1) 
(PUT 'VEVZERO? 'DEFINED-ON-LINE '35) 
(PUT 'VEVZERO? 'DEFINED-IN-FILE 'DIPOLY/A2DIP.RED) 
(PUT 'VEVZERO? 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(PUTC 'VEVZERO? 'INLINE
      '(LAMBDA (U) (OR (NULL U) (AND (EQUAL (CAR U) 0) (VEVZERO?1 (CDR U)))))) 
(PUT 'A2DIP 'NUMBER-OF-ARGS 1) 
(PUT 'A2DIP 'DEFINED-ON-LINE '38) 
(PUT 'A2DIP 'DEFINED-IN-FILE 'DIPOLY/A2DIP.RED) 
(PUT 'A2DIP 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE A2DIP (U)
    (COND ((ATOM U) (A2DIPATOM U))
          ((OR (NOT (ATOM (CAR U))) (NOT (IDP (CAR U))))
           (TYPERR (CAR U) "dipoly operator"))
          ((EQUAL (CAR U) 'EXPT)
           (COND
            ((AND
              ((LAMBDA (U)
                 (OR (NULL U) (AND (EQUAL (CAR U) 0) (VEVZERO?1 (CDR U)))))
               (CAR (A2DIP (CADR U))))
              ((LAMBDA (U)
                 (OR (NULL U) (AND (EQUAL (CAR U) 0) (VEVZERO?1 (CDR U)))))
               (CAR (A2DIP (CADDR U)))))
             (CONS (EVZERO) (CONS (SIMP* U) NIL)))
            (T (DIPFNPOW (A2DIP (CADR U)) (CADDR U)))))
          (T
           ((LAMBDA (X)
              (COND
               (X
                (APPLY X
                       (LIST
                        (PROG (Y FORALL-RESULT FORALL-ENDPTR)
                          (SETQ Y (CDR U))
                          (COND ((NULL Y) (RETURN NIL)))
                          (SETQ FORALL-RESULT
                                  (SETQ FORALL-ENDPTR
                                          (CONS
                                           ((LAMBDA (Y) (A2DIP Y)) (CAR Y))
                                           NIL)))
                         LOOPLABEL
                          (SETQ Y (CDR Y))
                          (COND ((NULL Y) (RETURN FORALL-RESULT)))
                          (RPLACD FORALL-ENDPTR
                                  (CONS ((LAMBDA (Y) (A2DIP Y)) (CAR Y)) NIL))
                          (SETQ FORALL-ENDPTR (CDR FORALL-ENDPTR))
                          (GO LOOPLABEL)))))
               (T (A2DIPATOM U))))
            (GET (CAR U) 'DIPFN))))) 
(PUT 'A2DIPATOM 'NUMBER-OF-ARGS 1) 
(PUT 'A2DIPATOM 'DEFINED-ON-LINE '55) 
(PUT 'A2DIPATOM 'DEFINED-IN-FILE 'DIPOLY/A2DIP.RED) 
(PUT 'A2DIPATOM 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE A2DIPATOM (U)
    (COND ((EQUAL U 0) DIPZERO)
          ((OR (NUMBERP U) (NOT (MEMBER U DIPVARS*)))
           (CONS (EVZERO) (CONS (A2BC U) NIL)))
          (T (CONS (MKEXPVEC U) (CONS (A2BC 1) NIL))))) 
(PUT 'DIPFNSUM 'NUMBER-OF-ARGS 1) 
(PUT 'DIPFNSUM 'DEFINED-ON-LINE '62) 
(PUT 'DIPFNSUM 'DEFINED-IN-FILE 'DIPOLY/A2DIP.RED) 
(PUT 'DIPFNSUM 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE DIPFNSUM (U)
    ((LAMBDA (X)
       (PROGN
        (PROG (Y)
          (SETQ Y (CDR U))
         LAB
          (COND ((NULL Y) (RETURN NIL)))
          ((LAMBDA (Y) (SETQ X (DIPSUM X Y))) (CAR Y))
          (SETQ Y (CDR Y))
          (GO LAB))
        X))
     (CAR U))) 
(PUT 'PLUS 'DIPFN 'DIPFNSUM) 
(PUT 'DIPFNPROD 'NUMBER-OF-ARGS 1) 
(PUT 'DIPFNPROD 'DEFINED-ON-LINE '69) 
(PUT 'DIPFNPROD 'DEFINED-IN-FILE 'DIPOLY/A2DIP.RED) 
(PUT 'DIPFNPROD 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE DIPFNPROD (U)
    ((LAMBDA (X)
       (PROGN
        (PROG (Y)
          (SETQ Y (CDR U))
         LAB
          (COND ((NULL Y) (RETURN NIL)))
          ((LAMBDA (Y) (SETQ X (DIPPROD X Y))) (CAR Y))
          (SETQ Y (CDR Y))
          (GO LAB))
        X))
     (CAR U))) 
(PUT 'TIMES 'DIPFN 'DIPFNPROD) 
(PUT 'DIPFNDIF 'NUMBER-OF-ARGS 1) 
(PUT 'DIPFNDIF 'DEFINED-ON-LINE '77) 
(PUT 'DIPFNDIF 'DEFINED-IN-FILE 'DIPOLY/A2DIP.RED) 
(PUT 'DIPFNDIF 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE DIPFNDIF (U) (DIPSUM (CAR U) (DIPNEG (CADR U)))) 
(PUT 'DIFFERENCE 'DIPFN 'DIPFNDIF) 
(PUT 'DIPFNPOW 'NUMBER-OF-ARGS 2) 
(PUT 'DIPFNPOW 'DEFINED-ON-LINE '84) 
(PUT 'DIPFNPOW 'DEFINED-IN-FILE 'DIPOLY/A2DIP.RED) 
(PUT 'DIPFNPOW 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE DIPFNPOW (V N)
    ((LAMBDA (W)
       (COND
        ((OR (NOT (FIXP N)) (LESSP N 0))
         (TYPERR N "distributive polynomial exponent"))
        ((EQUAL N 0) (COND ((NULL V) (RERROR 'DIPOLY 1 "0**0 invalid")) (T W)))
        ((OR (NULL V) (EQUAL N 1)) V)
        ((NULL (CDDR V))
         (CONS (INTEVPROD N (CAR V)) (CONS (BCPOW (CADR V) N) NIL)))
        (T
         (PROGN
          (PROG ()
           WHILELABEL
            (COND ((NOT (GREATERP N 0)) (RETURN NIL)))
            (PROGN
             (COND ((NOT (EVENP N)) (SETQ W (DIPPROD W V))))
             (SETQ N (QUOTIENT N 2))
             (COND ((GREATERP N 0) (SETQ V (DIPPROD V V)))))
            (GO WHILELABEL))
          W))))
     (CONS (EVZERO) (CONS (A2BC 1) NIL)))) 
(PUT 'DIPFNNEG 'NUMBER-OF-ARGS 1) 
(PUT 'DIPFNNEG 'DEFINED-ON-LINE '102) 
(PUT 'DIPFNNEG 'DEFINED-IN-FILE 'DIPOLY/A2DIP.RED) 
(PUT 'DIPFNNEG 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE DIPFNNEG (U)
    ((LAMBDA (V)
       (COND ((NULL V) V) (T (CONS (CAR V) (CONS (BCNEG (CADR V)) (CDDR V))))))
     (CAR U))) 
(PUT 'MINUS 'DIPFN 'DIPFNNEG) 
(PUT 'DIPFNQUOT 'NUMBER-OF-ARGS 1) 
(PUT 'DIPFNQUOT 'DEFINED-ON-LINE '111) 
(PUT 'DIPFNQUOT 'DEFINED-IN-FILE 'DIPOLY/A2DIP.RED) 
(PUT 'DIPFNQUOT 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE DIPFNQUOT (U)
    (COND
     ((OR (NULL (CADR U)) (NOT (NULL (CDDR (CADR U))))
          (NOT (EVZERO? (CAR (CADR U))))
          (AND *VDPINTEGER (NOT (BCONE? (CADR (CADR U))))))
      (TYPERR (DIP2A (CADR U)) "distributive polynomial denominator"))
     (T (DIPFNQUOT1 (CAR U) (CADR (CADR U)))))) 
(PUT 'DIPFNQUOT1 'NUMBER-OF-ARGS 2) 
(PUT 'DIPFNQUOT1 'DEFINED-ON-LINE '120) 
(PUT 'DIPFNQUOT1 'DEFINED-IN-FILE 'DIPOLY/A2DIP.RED) 
(PUT 'DIPFNQUOT1 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE DIPFNQUOT1 (U V)
    (COND ((NULL U) U)
          (T
           (CONS (CAR U) (CONS (BCQUOT (CADR U) V) (DIPFNQUOT1 (CDDR U) V)))))) 
(PUT 'QUOTIENT 'DIPFN 'DIPFNQUOT) 
(ENDMODULE) 