(cl:declaim (cl:optimize cl:debug cl:safety))
(cl:declaim (sb-ext:muffle-conditions sb-ext:compiler-note cl:style-warning))
(MODULE (LIST 'DCFSFQE)) 
(REVISION 'DCFSFQE "$Id: dcfsfqe.red 5986 2021-08-28 13:35:27Z thomas-sturm $") 
(COPYRIGHT 'DCFSFQE "(c) 2004-2009 A. Dolzmann, 2004-2017 T. Sturm") 
(PUT 'DCFSF_ORDDEGF 'NUMBER-OF-ARGS 2) 
(PUT 'DCFSF_ORDDEGF 'DEFINED-ON-LINE '32) 
(PUT 'DCFSF_ORDDEGF 'DEFINED-IN-FILE 'REDLOG/DCFSF/DCFSFQE.RED) 
(PUT 'DCFSF_ORDDEGF 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE DCFSF_ORDDEGF (F V) (DCFSF_ORDDEGF1 F V (CONS (MINUS 1) (MINUS 1)))) 
(PUT 'DCFSF_ORDDEGF1 'NUMBER-OF-ARGS 3) 
(PUT 'DCFSF_ORDDEGF1 'DEFINED-ON-LINE '38) 
(PUT 'DCFSF_ORDDEGF1 'DEFINED-IN-FILE 'REDLOG/DCFSF/DCFSFQE.RED) 
(PUT 'DCFSF_ORDDEGF1 'PROCEDURE_TYPE
     '(ARROW (TIMES GENERAL GENERAL GENERAL) GENERAL)) 
(DE DCFSF_ORDDEGF1 (F V OD)
    (PROG (MV R LORD)
      (SETQ LORD 0)
      (COND ((OR (ATOM F) (ATOM (CAR F))) (RETURN OD)))
      (SETQ MV (CAAAR F))
      (SETQ LORD
              (COND ((EQ MV V) 0)
                    ((AND (PAIRP MV) (EQ (CADR MV) V)) (CADDR MV))
                    (T (MINUS 2))))
      (COND ((GREATERP LORD (CAR OD)) (SETQ OD (CONS LORD (CDAAR F))))
            ((EQUAL LORD (CAR OD))
             (SETQ OD (CONS LORD (MAX (CDR OD) (CDAAR F))))))
      (SETQ R F)
      (PROG ()
       WHILELABEL
        (COND
         ((NOT (AND (NOT (OR (ATOM R) (ATOM (CAR R)))) (EQ (CAAAR R) MV)))
          (RETURN NIL)))
        (SETQ R (CDR R))
        (GO WHILELABEL))
      (RETURN (DCFSF_ORDDEGF1 (CDAR F) V (DCFSF_ORDDEGF1 R V OD))))) 
(PUT 'DCFSF_ORDF 'NUMBER-OF-ARGS 2) 
(PUT 'DCFSF_ORDF 'DEFINED-ON-LINE '63) 
(PUT 'DCFSF_ORDF 'DEFINED-IN-FILE 'REDLOG/DCFSF/DCFSFQE.RED) 
(PUT 'DCFSF_ORDF 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE DCFSF_ORDF (F V)
    (COND ((OR (ATOM F) (ATOM (CAR F))) (MINUS 1)) ((EQ (CAAAR F) V) 0)
          ((AND (PAIRP (CAAAR F)) (EQ (CADR (CAAAR F)) V)) (CADDR (CAAAR F)))
          (T (MINUS 1)))) 
(PUT 'DCFSF_DEGF 'NUMBER-OF-ARGS 2) 
(PUT 'DCFSF_DEGF 'DEFINED-ON-LINE '76) 
(PUT 'DCFSF_DEGF 'DEFINED-IN-FILE 'REDLOG/DCFSF/DCFSFQE.RED) 
(PUT 'DCFSF_DEGF 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE DCFSF_DEGF (F V)
    (COND ((OR (ATOM F) (ATOM (CAR F))) 0)
          ((OR (EQ (CAAAR F) V)
               (AND (PAIRP (CAAAR F)) (EQ (CADR (CAAAR F)) V)))
           (CDAAR F))
          (T 0))) 
(PUT 'DCFSF_DF 'NUMBER-OF-ARGS 2) 
(PUT 'DCFSF_DF 'DEFINED-ON-LINE '87) 
(PUT 'DCFSF_DF 'DEFINED-IN-FILE 'REDLOG/DCFSF/DCFSFQE.RED) 
(PUT 'DCFSF_DF 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE DCFSF_DF (F X)
    (PROG (OLDORDER W)
      (SETQ OLDORDER (SETKORDER (LIST X)))
      (SETQ W (DCFSF_DF1 (REORDER F) X))
      (SETKORDER OLDORDER)
      (RETURN (REORDER W)))) 
(PUT 'DCFSF_DF1 'NUMBER-OF-ARGS 2) 
(PUT 'DCFSF_DF1 'DEFINED-ON-LINE '99) 
(PUT 'DCFSF_DF1 'DEFINED-IN-FILE 'REDLOG/DCFSF/DCFSFQE.RED) 
(PUT 'DCFSF_DF1 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE DCFSF_DF1 (F X)
    (COND ((OR (OR (ATOM F) (ATOM (CAR F))) (NEQ (CAAAR F) X)) NIL)
          ((EQN (CDAAR F) 1) (CDAR F))
          (T
           (CONS
            (CONS (CONS X (DIFFERENCE (CDAAR F) 1))
                  ((LAMBDA (G125)
                     (COND (*PHYSOP-LOADED (PHYSOP-MULTF G125 (CDAR F)))
                           (T (POLY-MULTF G125 (CDAR F)))))
                   (CDAAR F)))
            (DCFSF_DF1 (CDR F) X))))) 
(PUT 'DCFSF_DERIVATIONF 'NUMBER-OF-ARGS 3) 
(PUT 'DCFSF_DERIVATIONF 'DEFINED-ON-LINE '111) 
(PUT 'DCFSF_DERIVATIONF 'DEFINED-IN-FILE 'REDLOG/DCFSF/DCFSFQE.RED) 
(PUT 'DCFSF_DERIVATIONF 'PROCEDURE_TYPE
     '(ARROW (TIMES GENERAL GENERAL GENERAL) GENERAL)) 
(DE DCFSF_DERIVATIONF (F N THEO)
    (PROG (R)
      (SETQ R F)
      (PROG (I)
        (SETQ I 1)
       LAB
        (COND ((MINUSP (DIFFERENCE N I)) (RETURN NIL)))
        (SETQ R (DCFSF_DERIVATION1F R THEO))
        (SETQ I (PLUS2 I 1))
        (GO LAB))
      (RETURN R))) 
(PUT 'DCFSF_DERIVATION1F 'NUMBER-OF-ARGS 2) 
(PUT 'DCFSF_DERIVATION1F 'DEFINED-ON-LINE '122) 
(PUT 'DCFSF_DERIVATION1F 'DEFINED-IN-FILE 'REDLOG/DCFSF/DCFSFQE.RED) 
(PUT 'DCFSF_DERIVATION1F 'PROCEDURE_TYPE
     '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE DCFSF_DERIVATION1F (F THEO)
    (PROG (RES)
      (PROG (V)
        (SETQ V (KERNELS F))
       LAB
        (COND ((NULL V) (RETURN NIL)))
        ((LAMBDA (V)
           (SETQ RES
                   (ADDF RES
                         ((LAMBDA (G127 G128)
                            (COND (*PHYSOP-LOADED (PHYSOP-MULTF G127 G128))
                                  (T (POLY-MULTF G127 G128))))
                          (DCFSF_DF F V) (DCFSF_DERIVATIONK V THEO)))))
         (CAR V))
        (SETQ V (CDR V))
        (GO LAB))
      (RETURN RES))) 
(PUT 'DCFSF_DERIVATIONK 'NUMBER-OF-ARGS 2) 
(PUT 'DCFSF_DERIVATIONK 'DEFINED-ON-LINE '132) 
(PUT 'DCFSF_DERIVATIONK 'DEFINED-IN-FILE 'REDLOG/DCFSF/DCFSFQE.RED) 
(PUT 'DCFSF_DERIVATIONK 'PROCEDURE_TYPE
     '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE DCFSF_DERIVATIONK (K THEO)
    (PROG (OLDORDER KPF KP A CNT)
      (SETQ KP (DCFSF_DERIVATIONK1 K))
      (SETQ KPF (CONS (CONS (CONS KP 1) 1) NIL))
      (SETQ OLDORDER (SETKORDER (LIST KP)))
      (SETQ CNT T)
      (PROG ()
       WHILELABEL
        (COND ((NOT (AND CNT THEO)) (RETURN NIL)))
        (PROGN
         (SETQ A (PROG1 (CAR THEO) (SETQ THEO (CDR THEO))))
         (COND
          ((EQ (DCFSF_OP A) 'EQUAL)
           (PROGN
            (SETQ A (REORDER (DCFSF_ARG2L A)))
            (COND
             ((AND (EQ (CAAAR A) KP) (EQUAL (CDAR A) 1))
              (PROGN (SETQ CNT NIL) (SETQ KPF (NEGF (CDR A))))))))))
        (GO WHILELABEL))
      (SETKORDER OLDORDER)
      (RETURN (REORDER KPF)))) 
(PUT 'DCFSF_DERIVATIONK1 'NUMBER-OF-ARGS 1) 
(PUT 'DCFSF_DERIVATIONK1 'DEFINED-ON-LINE '155) 
(PUT 'DCFSF_DERIVATIONK1 'DEFINED-IN-FILE 'REDLOG/DCFSF/DCFSFQE.RED) 
(PUT 'DCFSF_DERIVATIONK1 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE DCFSF_DERIVATIONK1 (K)
    (COND ((ATOM K) (*A2K (LIST 'D K 1)))
          (T (*A2K (LIST 'D (CADR K) (PLUS (CADDR K) 1)))))) 
(SWITCH (LIST 'KACEM)) 
(SWITCH (LIST 'DCFSFOLD)) 
(PUT 'DCFSF_QE 'NUMBER-OF-ARGS 2) 
(PUT 'DCFSF_QE 'DEFINED-ON-LINE '167) 
(PUT 'DCFSF_QE 'DEFINED-IN-FILE 'REDLOG/DCFSF/DCFSFQE.RED) 
(PUT 'DCFSF_QE 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE DCFSF_QE (F THEO)
    (COND (*KACEM (DCFSF_QE-KACEM F THEO)) (T (DCFSF_QE0 F THEO)))) 
(PUT 'DCFSF_QE-KACEM 'NUMBER-OF-ARGS 2) 
(PUT 'DCFSF_QE-KACEM 'DEFINED-ON-LINE '176) 
(PUT 'DCFSF_QE-KACEM 'DEFINED-IN-FILE 'REDLOG/DCFSF/DCFSFQE.RED) 
(PUT 'DCFSF_QE-KACEM 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE DCFSF_QE-KACEM (F THEO)
    (PROG (W)
      (SETQ F (RL_PREPFOF F))
      (SETQ F (CL_PNF F))
      (SETQ W (DQE_START1 F))
      (COND ((EQ W T) (SETQ W 'TRUE)) ((NULL W) (SETQ W 'FALSE)))
      (SETQ W (RL_SIMP W))
      (RETURN W))) 
(PUT 'DCFSF_QE0 'NUMBER-OF-ARGS 2) 
(PUT 'DCFSF_QE0 'DEFINED-ON-LINE '190) 
(PUT 'DCFSF_QE0 'DEFINED-IN-FILE 'REDLOG/DCFSF/DCFSFQE.RED) 
(PUT 'DCFSF_QE0 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE DCFSF_QE0 (F THEO)
    (PROG (W BL)
      (SETQ F (CL_SIMPL (CL_PNF (CL_NNF F)) THEO (MINUS 1)))
      (SETQ W (CL_SPLT F))
      (SETQ BL (CAR W))
      (SETQ F (CADR W))
      (PROG (BLK)
        (SETQ BLK BL)
       LAB
        (COND ((NULL BLK) (RETURN NIL)))
        ((LAMBDA (BLK)
           (SETQ F (CL_SIMPL (DCFSF_QEBLK F BLK THEO) THEO (MINUS 1))))
         (CAR BLK))
        (SETQ BLK (CDR BLK))
        (GO LAB))
      (RETURN F))) 
(PUT 'DCFSF_QEBLK 'NUMBER-OF-ARGS 3) 
(PUT 'DCFSF_QEBLK 'DEFINED-ON-LINE '204) 
(PUT 'DCFSF_QEBLK 'DEFINED-IN-FILE 'REDLOG/DCFSF/DCFSFQE.RED) 
(PUT 'DCFSF_QEBLK 'PROCEDURE_TYPE
     '(ARROW (TIMES GENERAL GENERAL GENERAL) GENERAL)) 
(DE DCFSF_QEBLK (F BLK THEO)
    (COND
     ((EQ (CAR BLK) 'ALL) (RL_NNFNOT (DCFSF_QEBLK1 (RL_NNFNOT F) BLK THEO)))
     (T (DCFSF_QEBLK1 F BLK THEO)))) 
(PUT 'DCFSF_QEBLK1 'NUMBER-OF-ARGS 3) 
(PUT 'DCFSF_QEBLK1 'DEFINED-ON-LINE '213) 
(PUT 'DCFSF_QEBLK1 'DEFINED-IN-FILE 'REDLOG/DCFSF/DCFSFQE.RED) 
(PUT 'DCFSF_QEBLK1 'PROCEDURE_TYPE
     '(ARROW (TIMES GENERAL GENERAL GENERAL) GENERAL)) 
(DE DCFSF_QEBLK1 (F BLK THEO)
    (PROGN
     (COND (*RLVERBOSE (IOTO_TPRIN2T (LIST "Eliminating " BLK))))
     (PROG (V)
       (SETQ V (CDR BLK))
      LAB
       (COND ((NULL V) (RETURN NIL)))
       ((LAMBDA (V)
          (SETQ F
                  (COND (*DCFSFOLD (DCFSF_QEVAROLD F V THEO))
                        (T (DCFSF_QEVAR F V THEO)))))
        (CAR V))
       (SETQ V (CDR V))
       (GO LAB))
     F)) 
(PUT 'DCFSF_QEVAR 'NUMBER-OF-ARGS 3) 
(PUT 'DCFSF_QEVAR 'DEFINED-ON-LINE '229) 
(PUT 'DCFSF_QEVAR 'DEFINED-IN-FILE 'REDLOG/DCFSF/DCFSFQE.RED) 
(PUT 'DCFSF_QEVAR 'PROCEDURE_TYPE
     '(ARROW (TIMES GENERAL GENERAL GENERAL) GENERAL)) 
(DE DCFSF_QEVAR (PHI V THEO)
    (PROG (KL OO PLL *RLSIFACNE)
      (COND (*RLVERBOSE (IOTO_TPRIN2T (LIST "Eliminating " V))))
      (SETQ PHI (CL_DNF (CL_SIMPL PHI THEO (MINUS 1))))
      (COND ((OR (EQ PHI 'TRUE) (EQ PHI 'FALSE)) (RETURN PHI)))
      (SETQ KL (DCFSF_MKKL V (DCFSF_MAXORDER (CL_TERML PHI) V)))
      (SETQ OO (SETKORDER KL))
      (SETQ PHI (CL_APPLY2ATS PHI (FUNCTION DCFSF_REORDERAT)))
      (SETQ PLL (DCFSF_DNF2PLL PHI V THEO))
      (COND (*RLVERBOSE (IOTO_TPRIN2T "Computing ENF")))
      (SETQ PLL (DCFSF_ENF1 PLL V THEO))
      (COND (*RLVERBOSE (IOTO_TPRIN2T "Eliminating base cases")))
      (SETQ PHI (DCFSF_ELIM PLL V THEO))
      (COND (*RLVERBOSE (IOTO_TPRIN2T "Final simplification")))
      (SETKORDER OO)
      (SETQ PHI (CL_APPLY2ATS PHI (FUNCTION DCFSF_REORDERAT)))
      (SETQ PHI (RL_SIMPL PHI THEO (MINUS 1)))
      (RETURN PHI))) 
(PUT 'DCFSF_ELIM 'NUMBER-OF-ARGS 3) 
(PUT 'DCFSF_ELIM 'DEFINED-ON-LINE '258) 
(PUT 'DCFSF_ELIM 'DEFINED-IN-FILE 'REDLOG/DCFSF/DCFSFQE.RED) 
(PUT 'DCFSF_ELIM 'PROCEDURE_TYPE
     '(ARROW (TIMES GENERAL GENERAL GENERAL) GENERAL)) 
(DE DCFSF_ELIM (PLL V THEO)
    (PROG (ENF1LEN)
      (SETQ ENF1LEN 0)
      (COND (*RLVERBOSE (SETQ ENF1LEN (PLUS (PLL_LENGTH PLL) 1))))
      (RETURN
       ((LAMBDA (G130)
          (COND ((AND G130 (CDR G130)) (CONS 'OR G130))
                ((NULL G130) (COND ((EQ 'OR 'AND) 'TRUE) (T 'FALSE)))
                (T (CAR G130))))
        (PROG (PL FORALL-RESULT FORALL-ENDPTR)
          (SETQ PL (PLL_2L PLL))
          (COND ((NULL PL) (RETURN NIL)))
          (SETQ FORALL-RESULT
                  (SETQ FORALL-ENDPTR
                          (CONS
                           ((LAMBDA (PL)
                              (PROGN
                               (SETQ ENF1LEN (DIFFERENCE ENF1LEN 1))
                               (DCFSF_ELIM1 PL V THEO ENF1LEN)))
                            (CAR PL))
                           NIL)))
         LOOPLABEL
          (SETQ PL (CDR PL))
          (COND ((NULL PL) (RETURN FORALL-RESULT)))
          (RPLACD FORALL-ENDPTR
                  (CONS
                   ((LAMBDA (PL)
                      (PROGN
                       (SETQ ENF1LEN (DIFFERENCE ENF1LEN 1))
                       (DCFSF_ELIM1 PL V THEO ENF1LEN)))
                    (CAR PL))
                   NIL))
          (SETQ FORALL-ENDPTR (CDR FORALL-ENDPTR))
          (GO LOOPLABEL)))))) 
(PUT 'DCFSF_ELIM1 'NUMBER-OF-ARGS 4) 
(PUT 'DCFSF_ELIM1 'DEFINED-ON-LINE '267) 
(PUT 'DCFSF_ELIM1 'DEFINED-IN-FILE 'REDLOG/DCFSF/DCFSFQE.RED) 
(PUT 'DCFSF_ELIM1 'PROCEDURE_TYPE
     '(ARROW (TIMES GENERAL GENERAL GENERAL GENERAL) GENERAL)) 
(DE DCFSF_ELIM1 (PL V THEO LEFT)
    (PROG (VEQL VNEL OEQL ONEL ARGL F I G RMD OF OG DF DG R)
      (PROG (G131 G132)
        (SETQ G131 (PL_2L PL))
        (SETQ G132 G131)
        (SETQ VEQL (CAR G131))
        (SETQ G131 (CDR G131))
        (SETQ VNEL (CAR G131))
        (SETQ G131 (CDR G131))
        (SETQ OEQL (CAR G131))
        (SETQ G131 (CDR G131))
        (SETQ ONEL (CAR G131))
        (SETQ G131 (CDR G131))
        (RETURN G132))
      (COND
       ((AND VEQL (CDR VEQL))
        (REDERR (LIST "dcfsf_elim1: more than one equation in " V))))
      (COND
       ((AND VNEL (CDR VNEL))
        (REDERR (LIST "dcfsf_elim1: more than one inequality in " V))))
      (COND ((NULL VNEL) (REDERR (LIST "dcfsf_elim1: no inequality in " V))))
      (SETQ ARGL (DCFSF_OATL OEQL ONEL))
      (COND
       ((NOT VEQL)
        (PROGN
         (COND (*RLVERBOSE (IOTO_PRIN2 (LIST "[" LEFT ":C1] "))))
         (RETURN
          ((LAMBDA (G134)
             (COND ((AND G134 (CDR G134)) (CONS 'AND G134))
                   ((NULL G134) (COND ((EQ 'AND 'AND) 'TRUE) (T 'FALSE)))
                   (T (CAR G134))))
           (CONS (DCFSF_BC1 (CAR VNEL) V THEO) ARGL))))))
      (COND
       ((AND (OR (ATOM (CAR VNEL)) (ATOM (CAR (CAR VNEL))))
             (NOT (NULL (CAR VNEL))))
        (PROGN
         (COND (*RLVERBOSE (IOTO_PRIN2 (LIST "[" LEFT ":C2] "))))
         (SETQ I (CDAR (CAR VEQL)))
         (COND
          ((NOT
            (OR (AND (OR (ATOM I) (ATOM (CAR I))) (NOT (NULL I)))
                (MEMBER (SFTO_SQFPARTF I) ONEL)))
           (REDERR (LIST "dcfsf_elim1: no initial inequality for equation"))))
         (RETURN
          (COND ((AND ARGL (CDR ARGL)) (CONS 'AND ARGL))
                ((NULL ARGL) (COND ((EQ 'AND 'AND) 'TRUE) (T 'FALSE)))
                (T (CAR ARGL)))))))
      (SETQ F (CAR VEQL))
      (SETQ I (CDAR F))
      (PROG (G135)
        (SETQ G135 (QREMF (CAR VNEL) I))
        (SETQ G (CAR G135))
        (SETQ RMD (CDR G135))
        (RETURN G135))
      (COND
       (RMD
        (REDERR
         (LIST "dcfsf_elim1: lhs of inequality is not divisible by I_f"))))
      (PROG (G136)
        (SETQ G136 (DCFSF_ORDDEGF F V))
        (SETQ OF (CAR G136))
        (SETQ DF (CDR G136))
        (RETURN G136))
      (PROG (G137)
        (SETQ G137 (DCFSF_ORDDEGF G V))
        (SETQ OG (CAR G137))
        (SETQ DG (CDR G137))
        (RETURN G137))
      (COND
       ((LESSP OG OF)
        (PROGN
         (COND (*RLVERBOSE (IOTO_PRIN2 (LIST "[" LEFT ":C3] "))))
         (RETURN
          ((LAMBDA (G139)
             (COND ((AND G139 (CDR G139)) (CONS 'AND G139))
                   ((NULL G139) (COND ((EQ 'AND 'AND) 'TRUE) (T 'FALSE)))
                   (T (CAR G139))))
           (CONS (DCFSF_BC3 I G V THEO) ARGL))))))
      (COND
       ((AND (EQUAL OG OF) (LESSP DG DF))
        (PROGN
         (COND (*RLVERBOSE (IOTO_PRIN2 (LIST "[" LEFT ":C4] "))))
         (SETQ R (CAR (DCFSF_REDUCE (LIST (EXPTF G DF)) F V)))
         (RETURN
          ((LAMBDA (G141)
             (COND ((AND G141 (CDR G141)) (CONS 'AND G141))
                   ((NULL G141) (COND ((EQ 'AND 'AND) 'TRUE) (T 'FALSE)))
                   (T (CAR G141))))
           (CONS (DCFSF_BC3 I R V THEO) ARGL))))))
      (REDERR (LIST "dcfsf_elim1: ord(g) = ord(f) and deg(g) >= deg(f)")))) 
(PUT 'DCFSF_OATL 'NUMBER-OF-ARGS 2) 
(PUT 'DCFSF_OATL 'DEFINED-ON-LINE '317) 
(PUT 'DCFSF_OATL 'DEFINED-IN-FILE 'REDLOG/DCFSF/DCFSFQE.RED) 
(PUT 'DCFSF_OATL 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE DCFSF_OATL (OEQL ONEL)
    (PROG (ATL)
      (PROG (ONE)
        (SETQ ONE ONEL)
       LAB
        (COND ((NULL ONE) (RETURN NIL)))
        ((LAMBDA (ONE) (SETQ ATL (CONS (DCFSF_0MK2 'NEQ ONE) ATL))) (CAR ONE))
        (SETQ ONE (CDR ONE))
        (GO LAB))
      (PROG (OEQ)
        (SETQ OEQ OEQL)
       LAB
        (COND ((NULL OEQ) (RETURN NIL)))
        ((LAMBDA (OEQ) (SETQ ATL (CONS (DCFSF_0MK2 'EQUAL OEQ) ATL)))
         (CAR OEQ))
        (SETQ OEQ (CDR OEQ))
        (GO LAB))
      (RETURN ATL))) 
(PUT 'DCFSF_BC1 'NUMBER-OF-ARGS 3) 
(PUT 'DCFSF_BC1 'DEFINED-ON-LINE '326) 
(PUT 'DCFSF_BC1 'DEFINED-IN-FILE 'REDLOG/DCFSF/DCFSFQE.RED) 
(PUT 'DCFSF_BC1 'PROCEDURE_TYPE
     '(ARROW (TIMES GENERAL GENERAL GENERAL) GENERAL)) 
(DE DCFSF_BC1 (G V THEO)
    ((LAMBDA (G143)
       (COND ((AND G143 (CDR G143)) (CONS 'OR G143))
             ((NULL G143) (COND ((EQ 'OR 'AND) 'TRUE) (T 'FALSE)))
             (T (CAR G143))))
     (PROG (GT FORALL-RESULT FORALL-ENDPTR)
       (SETQ GT (DCFSF_CL G V))
       (COND ((NULL GT) (RETURN NIL)))
       (SETQ FORALL-RESULT
               (SETQ FORALL-ENDPTR
                       (CONS ((LAMBDA (GT) (DCFSF_0MK2 'NEQ GT)) (CAR GT))
                             NIL)))
      LOOPLABEL
       (SETQ GT (CDR GT))
       (COND ((NULL GT) (RETURN FORALL-RESULT)))
       (RPLACD FORALL-ENDPTR
               (CONS ((LAMBDA (GT) (DCFSF_0MK2 'NEQ GT)) (CAR GT)) NIL))
       (SETQ FORALL-ENDPTR (CDR FORALL-ENDPTR))
       (GO LOOPLABEL)))) 
(PUT 'DCFSF_BC2 'NUMBER-OF-ARGS 3) 
(PUT 'DCFSF_BC2 'DEFINED-ON-LINE '330) 
(PUT 'DCFSF_BC2 'DEFINED-IN-FILE 'REDLOG/DCFSF/DCFSFQE.RED) 
(PUT 'DCFSF_BC2 'PROCEDURE_TYPE
     '(ARROW (TIMES GENERAL GENERAL GENERAL) GENERAL)) 
(DE DCFSF_BC2 (F V THEO)
    (PROG (FTL F1)
      (PROG (G144)
        (SETQ G144 (DCFSF_CL1 F V))
        (SETQ FTL (CAR G144))
        (SETQ F1 (CDR G144))
        (RETURN G144))
      (RETURN
       ((LAMBDA (G146)
          (COND ((AND G146 (CDR G146)) (CONS 'OR G146))
                ((NULL G146) (COND ((EQ 'OR 'AND) 'TRUE) (T 'FALSE)))
                (T (CAR G146))))
        (CONS (DCFSF_0MK2 'EQUAL F1)
              (PROG (GT FORALL-RESULT FORALL-ENDPTR)
                (SETQ GT FTL)
                (COND ((NULL GT) (RETURN NIL)))
                (SETQ FORALL-RESULT
                        (SETQ FORALL-ENDPTR
                                (CONS
                                 ((LAMBDA (GT) (DCFSF_0MK2 'NEQ GT)) (CAR GT))
                                 NIL)))
               LOOPLABEL
                (SETQ GT (CDR GT))
                (COND ((NULL GT) (RETURN FORALL-RESULT)))
                (RPLACD FORALL-ENDPTR
                        (CONS ((LAMBDA (GT) (DCFSF_0MK2 'NEQ GT)) (CAR GT))
                              NIL))
                (SETQ FORALL-ENDPTR (CDR FORALL-ENDPTR))
                (GO LOOPLABEL))))))) 
(PUT 'DCFSF_BC3 'NUMBER-OF-ARGS 4) 
(PUT 'DCFSF_BC3 'DEFINED-ON-LINE '338) 
(PUT 'DCFSF_BC3 'DEFINED-IN-FILE 'REDLOG/DCFSF/DCFSFQE.RED) 
(PUT 'DCFSF_BC3 'PROCEDURE_TYPE
     '(ARROW (TIMES GENERAL GENERAL GENERAL GENERAL) GENERAL)) 
(DE DCFSF_BC3 (I G V THEO)
    (PROG (IFF W1 W2)
      (SETQ W1
              (PROG (GT FORALL-RESULT FORALL-ENDPTR)
                (SETQ GT (DCFSF_CL G V))
                (COND ((NULL GT) (RETURN NIL)))
                (SETQ FORALL-RESULT
                        (SETQ FORALL-ENDPTR
                                (CONS
                                 ((LAMBDA (GT) (DCFSF_0MK2 'NEQ GT)) (CAR GT))
                                 NIL)))
               LOOPLABEL
                (SETQ GT (CDR GT))
                (COND ((NULL GT) (RETURN FORALL-RESULT)))
                (RPLACD FORALL-ENDPTR
                        (CONS ((LAMBDA (GT) (DCFSF_0MK2 'NEQ GT)) (CAR GT))
                              NIL))
                (SETQ FORALL-ENDPTR (CDR FORALL-ENDPTR))
                (GO LOOPLABEL)))
      (SETQ W2
              (PROG (CT FORALL-RESULT FORALL-ENDPTR)
                (SETQ CT (DCFSF_CL I V))
                (COND ((NULL CT) (RETURN NIL)))
                (SETQ FORALL-RESULT
                        (SETQ FORALL-ENDPTR
                                (CONS
                                 ((LAMBDA (CT) (DCFSF_0MK2 'NEQ CT)) (CAR CT))
                                 NIL)))
               LOOPLABEL
                (SETQ CT (CDR CT))
                (COND ((NULL CT) (RETURN FORALL-RESULT)))
                (RPLACD FORALL-ENDPTR
                        (CONS ((LAMBDA (CT) (DCFSF_0MK2 'NEQ CT)) (CAR CT))
                              NIL))
                (SETQ FORALL-ENDPTR (CDR FORALL-ENDPTR))
                (GO LOOPLABEL)))
      (RETURN
       (CONS 'AND
             (LIST
              (COND ((AND W1 (CDR W1)) (CONS 'OR W1))
                    ((NULL W1) (COND ((EQ 'OR 'AND) 'TRUE) (T 'FALSE)))
                    (T (CAR W1)))
              (COND ((AND W2 (CDR W2)) (CONS 'OR W2))
                    ((NULL W2) (COND ((EQ 'OR 'AND) 'TRUE) (T 'FALSE)))
                    (T (CAR W2)))))))) 
(PUT 'DCFSF_QEVAROLD 'NUMBER-OF-ARGS 3) 
(PUT 'DCFSF_QEVAROLD 'DEFINED-ON-LINE '348) 
(PUT 'DCFSF_QEVAROLD 'DEFINED-IN-FILE 'REDLOG/DCFSF/DCFSFQE.RED) 
(PUT 'DCFSF_QEVAROLD 'PROCEDURE_TYPE
     '(ARROW (TIMES GENERAL GENERAL GENERAL) GENERAL)) 
(DE DCFSF_QEVAROLD (F V THEO)
    (PROG (RL)
      (COND (*RLVERBOSE (IOTO_TPRIN2T (LIST "Eliminating " V))))
      (SETQ F (CL_DNF F))
      (SETQ RL
              (COND
               ((EQ (COND ((ATOM F) F) (T (CAR F))) 'OR)
                (PROG (FF FORALL-RESULT FORALL-ENDPTR)
                  (SETQ FF (CDR F))
                  (COND ((NULL FF) (RETURN NIL)))
                  (SETQ FORALL-RESULT
                          (SETQ FORALL-ENDPTR
                                  (CONS
                                   ((LAMBDA (FF) (DCFSF_QEVAR1 FF V THEO))
                                    (CAR FF))
                                   NIL)))
                 LOOPLABEL
                  (SETQ FF (CDR FF))
                  (COND ((NULL FF) (RETURN FORALL-RESULT)))
                  (RPLACD FORALL-ENDPTR
                          (CONS
                           ((LAMBDA (FF) (DCFSF_QEVAR1 FF V THEO)) (CAR FF))
                           NIL))
                  (SETQ FORALL-ENDPTR (CDR FORALL-ENDPTR))
                  (GO LOOPLABEL)))
               (T (LIST (DCFSF_QEVAR1 F V THEO)))))
      (RETURN
       (COND ((AND RL (CDR RL)) (CONS 'OR RL))
             ((NULL RL) (COND ((EQ 'OR 'AND) 'TRUE) (T 'FALSE)))
             (T (CAR RL)))))) 
(PUT 'DCFSF_QEVAR1 'NUMBER-OF-ARGS 3) 
(PUT 'DCFSF_QEVAR1 'DEFINED-ON-LINE '365) 
(PUT 'DCFSF_QEVAR1 'DEFINED-IN-FILE 'REDLOG/DCFSF/DCFSFQE.RED) 
(PUT 'DCFSF_QEVAR1 'PROCEDURE_TYPE
     '(ARROW (TIMES GENERAL GENERAL GENERAL) GENERAL)) 
(DE DCFSF_QEVAR1 (F V THEO)
    (PROG (R W)
      (COND ((OR (EQ F 'TRUE) (EQ F 'FALSE)) (RETURN F)))
      (SETQ W (DCFSF_NF F V))
      (SETQ R (DCFSF_QEVAR2 (CAR W) (CADR W) V THEO))
      (SETQ R
              (CONS 'AND
                    (LIST
                     ((LAMBDA (G148)
                        (COND ((AND G148 (CDR G148)) (CONS 'AND G148))
                              ((NULL G148)
                               (COND ((EQ 'AND 'AND) 'TRUE) (T 'FALSE)))
                              (T (CAR G148))))
                      (CADDR W))
                     R)))
      (RETURN R))) 
(PUT 'DCFSF_NF 'NUMBER-OF-ARGS 2) 
(PUT 'DCFSF_NF 'DEFINED-ON-LINE '380) 
(PUT 'DCFSF_NF 'DEFINED-IN-FILE 'REDLOG/DCFSF/DCFSFQE.RED) 
(PUT 'DCFSF_NF 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE DCFSF_NF (F V)
    (COND ((EQ (COND ((ATOM F) F) (T (CAR F))) 'AND) (DCFSF_NF1 (CDR F) V))
          (T (DCFSF_NF1 (LIST F) V)))) 
(PUT 'DCFSF_NF1 'NUMBER-OF-ARGS 2) 
(PUT 'DCFSF_NF1 'DEFINED-ON-LINE '393) 
(PUT 'DCFSF_NF1 'DEFINED-IN-FILE 'REDLOG/DCFSF/DCFSFQE.RED) 
(PUT 'DCFSF_NF1 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE DCFSF_NF1 (F V)
    (PROG (E N S)
      (SETQ N (CAR (SIMP 1)))
      (PROG (AT)
        (SETQ AT F)
       LAB
        (COND ((NULL AT) (RETURN NIL)))
        ((LAMBDA (AT)
           (COND ((NOT (MEMQ V (DCFSF_VARLAT AT))) (SETQ S (CONS AT S)))
                 ((EQ (DCFSF_OP AT) 'EQUAL) (SETQ E (CONS (DCFSF_ARG2L AT) E)))
                 (T
                  (SETQ N
                          ((LAMBDA (G149)
                             (COND (*PHYSOP-LOADED (PHYSOP-MULTF G149 N))
                                   (T (POLY-MULTF G149 N))))
                           (DCFSF_ARG2L AT))))))
         (CAR AT))
        (SETQ AT (CDR AT))
        (GO LAB))
      (RETURN (LIST E N S)))) 
(PUT 'DCFSF_QEVAR2 'NUMBER-OF-ARGS 4) 
(PUT 'DCFSF_QEVAR2 'DEFINED-ON-LINE '414) 
(PUT 'DCFSF_QEVAR2 'DEFINED-IN-FILE 'REDLOG/DCFSF/DCFSFQE.RED) 
(PUT 'DCFSF_QEVAR2 'PROCEDURE_TYPE
     '(ARROW (TIMES GENERAL GENERAL GENERAL GENERAL) GENERAL)) 
(DE DCFSF_QEVAR2 (FL G V THEO)
    (PROG (OO KL R)
      (SETQ KL (DCFSF_MKKL V (DCFSF_MAXORDER (CONS G FL) V)))
      (SETQ OO (SETKORDER KL))
      (SETQ FL
              (PROG (F FORALL-RESULT FORALL-ENDPTR)
                (SETQ F FL)
                (COND ((NULL F) (RETURN NIL)))
                (SETQ FORALL-RESULT
                        (SETQ FORALL-ENDPTR
                                (CONS ((LAMBDA (F) (REORDER F)) (CAR F)) NIL)))
               LOOPLABEL
                (SETQ F (CDR F))
                (COND ((NULL F) (RETURN FORALL-RESULT)))
                (RPLACD FORALL-ENDPTR
                        (CONS ((LAMBDA (F) (REORDER F)) (CAR F)) NIL))
                (SETQ FORALL-ENDPTR (CDR FORALL-ENDPTR))
                (GO LOOPLABEL)))
      (SETQ G (REORDER G))
      (SETQ R (DCFSF_QESC5 FL G V THEO T))
      (SETKORDER OO)
      (RETURN (CL_APPLY2ATS R 'DCFSF_REORDERAT)))) 
(PUT 'DCFSF_REORDERAT 'NUMBER-OF-ARGS 1) 
(PUT 'DCFSF_REORDERAT 'DEFINED-ON-LINE '430) 
(PUT 'DCFSF_REORDERAT 'DEFINED-IN-FILE 'REDLOG/DCFSF/DCFSFQE.RED) 
(PUT 'DCFSF_REORDERAT 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE DCFSF_REORDERAT (A)
    (COND ((OR (EQ A 'TRUE) (EQ A 'FALSE)) A)
          (T (DCFSF_0MK2 (DCFSF_OP A) (REORDER (DCFSF_ARG2L A)))))) 
(PUT 'DCFSF_MAXORDER 'NUMBER-OF-ARGS 2) 
(PUT 'DCFSF_MAXORDER 'DEFINED-ON-LINE '439) 
(PUT 'DCFSF_MAXORDER 'DEFINED-IN-FILE 'REDLOG/DCFSF/DCFSFQE.RED) 
(PUT 'DCFSF_MAXORDER 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE DCFSF_MAXORDER (FL V)
    (PROG (W M)
      (SETQ M 0)
      (PROG (F)
        (SETQ F FL)
       LAB
        (COND ((NULL F) (RETURN NIL)))
        ((LAMBDA (F)
           (PROGN
            (SETQ W (DCFSF_ORDDEGF F V))
            (COND ((GREATERP (CAR W) M) (SETQ M (CAR W))))))
         (CAR F))
        (SETQ F (CDR F))
        (GO LAB))
      (RETURN M))) 
(PUT 'DCFSF_MKKL 'NUMBER-OF-ARGS 2) 
(PUT 'DCFSF_MKKL 'DEFINED-ON-LINE '452) 
(PUT 'DCFSF_MKKL 'DEFINED-IN-FILE 'REDLOG/DCFSF/DCFSFQE.RED) 
(PUT 'DCFSF_MKKL 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE DCFSF_MKKL (V M)
    (REVERSIP
     (CONS V
           (PROG (I FORALL-RESULT FORALL-ENDPTR)
             (SETQ I 1)
             (COND ((MINUSP (DIFFERENCE M I)) (RETURN NIL)))
             (SETQ FORALL-RESULT
                     (SETQ FORALL-ENDPTR (CONS (*A2K (LIST 'D V I)) NIL)))
            LOOPLABEL
             (SETQ I (PLUS2 I 1))
             (COND ((MINUSP (DIFFERENCE M I)) (RETURN FORALL-RESULT)))
             (RPLACD FORALL-ENDPTR (CONS (*A2K (LIST 'D V I)) NIL))
             (SETQ FORALL-ENDPTR (CDR FORALL-ENDPTR))
             (GO LOOPLABEL))))) 
(PUT 'DCFSF_QESC5 'NUMBER-OF-ARGS 5) 
(PUT 'DCFSF_QESC5 'DEFINED-ON-LINE '458) 
(PUT 'DCFSF_QESC5 'DEFINED-IN-FILE 'REDLOG/DCFSF/DCFSFQE.RED) 
(PUT 'DCFSF_QESC5 'PROCEDURE_TYPE
     '(ARROW (TIMES GENERAL GENERAL GENERAL GENERAL GENERAL) GENERAL)) 
(DE DCFSF_QESC5 (FL G V THEO ELIM)
    (COND (ELIM (DCFSF_QESC5-ELIM FL G V THEO))
          (T (DCFSF_QESC5-NOELIM FL G V THEO)))) 
(PUT 'DCFSF_QESC5-ELIM 'NUMBER-OF-ARGS 4) 
(PUT 'DCFSF_QESC5-ELIM 'DEFINED-ON-LINE '464) 
(PUT 'DCFSF_QESC5-ELIM 'DEFINED-IN-FILE 'REDLOG/DCFSF/DCFSFQE.RED) 
(PUT 'DCFSF_QESC5-ELIM 'PROCEDURE_TYPE
     '(ARROW (TIMES GENERAL GENERAL GENERAL GENERAL) GENERAL)) 
(DE DCFSF_QESC5-ELIM (FL G V THEO)
    (PROGN
     (SETQ FL (SORT FL 'DCFSF_QEORDP-DESC))
     (COND
      (*RLVERBOSE
       (IOTO_PRIN2
        (LIST "[" (LENGTH FL) (DCFSF_ORDDEGF (LASTCAR FL) V) "] "))))
     (COND ((NULL FL) (DCFSF_QESC1 G V THEO))
           ((NULL (CDR FL)) (DCFSF_QEBASIS (CAR FL) G V THEO))
           (T (DCFSF_QESC5R FL G V THEO T))))) 
(PUT 'DCFSF_QESC5-NOELIM 'NUMBER-OF-ARGS 4) 
(PUT 'DCFSF_QESC5-NOELIM 'DEFINED-ON-LINE '481) 
(PUT 'DCFSF_QESC5-NOELIM 'DEFINED-IN-FILE 'REDLOG/DCFSF/DCFSFQE.RED) 
(PUT 'DCFSF_QESC5-NOELIM 'PROCEDURE_TYPE
     '(ARROW (TIMES GENERAL GENERAL GENERAL GENERAL) GENERAL)) 
(DE DCFSF_QESC5-NOELIM (FL G V THEO)
    (PROGN
     (SETQ FL (SORT FL 'DCFSF_QEORDP-DESC))
     (COND
      (*RLVERBOSE
       (IOTO_PRIN2
        (LIST "[" (LENGTH FL) (DCFSF_ORDDEGF (LASTCAR FL) V) "] "))))
     (COND ((NULL FL) (DCFSF_0MK2 'NEQ G))
           ((NULL (CDR FL))
            (CONS 'AND
                  (LIST (DCFSF_0MK2 'EQUAL (CAR FL)) (DCFSF_0MK2 'NEQ G))))
           (T (DCFSF_QESC5R FL G V THEO NIL))))) 
(PUT 'DCFSF_QESC50 'NUMBER-OF-ARGS 5) 
(PUT 'DCFSF_QESC50 'DEFINED-ON-LINE '495) 
(PUT 'DCFSF_QESC50 'DEFINED-IN-FILE 'REDLOG/DCFSF/DCFSFQE.RED) 
(PUT 'DCFSF_QESC50 'PROCEDURE_TYPE
     '(ARROW (TIMES GENERAL GENERAL GENERAL GENERAL GENERAL) GENERAL)) 
(DE DCFSF_QESC50 (FL G V THEO ELIM)
    (PROG (NFL R F PL)
      (COND ((NULL G) (RETURN 'FALSE)))
      (COND ((OR (ATOM G) (ATOM (CAR G))) (SETQ G 1)))
      (PROG ()
       WHILELABEL
        (COND ((NOT FL) (RETURN NIL)))
        (PROGN
         (SETQ F (PROG1 (CAR FL) (SETQ FL (CDR FL))))
         (COND
          ((OR (ATOM F) (ATOM (CAR F)))
           (PROGN (COND (F (PROGN (SETQ R 'FALSE) (SETQ FL NIL))))))
          ((NOT (MEMQ V (DCFSF_VARLAT1 (KERNELS F))))
           (SETQ PL (CONS (DCFSF_0MK2 'EQUAL F) PL)))
          (T (SETQ NFL (CONS F NFL))))
         NIL)
        (GO WHILELABEL))
      (COND ((EQ R 'FALSE) (RETURN 'FALSE)))
      (SETQ R (DCFSF_QESC5 NFL G V THEO ELIM))
      (SETQ R
              (CONS 'AND
                    (LIST
                     (COND ((AND PL (CDR PL)) (CONS 'AND PL))
                           ((NULL PL) (COND ((EQ 'AND 'AND) 'TRUE) (T 'FALSE)))
                           (T (CAR PL)))
                     R)))
      (RETURN R))) 
(PUT 'DCFSF_QEORDP-DESC 'NUMBER-OF-ARGS 2) 
(PUT 'DCFSF_QEORDP-DESC 'DEFINED-ON-LINE '521) 
(PUT 'DCFSF_QEORDP-DESC 'DEFINED-IN-FILE 'REDLOG/DCFSF/DCFSFQE.RED) 
(PUT 'DCFSF_QEORDP-DESC 'PROCEDURE_TYPE
     '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE DCFSF_QEORDP-DESC (F1 F2)
    (PROG (P1 P2 V)
      (SETQ V (DCFSF_MVAR F1))
      (SETQ P1 (DCFSF_ORDDEGF F1 V))
      (SETQ P2 (DCFSF_ORDDEGF F2 V))
      (RETURN
       (OR (GREATERP (CAR P1) (CAR P2))
           (AND (EQUAL (CAR P1) (CAR P2)) (GREATERP (CDR P1) (CDR P2))))))) 
(PUT 'DCFSF_QEBASIS 'NUMBER-OF-ARGS 4) 
(PUT 'DCFSF_QEBASIS 'DEFINED-ON-LINE '532) 
(PUT 'DCFSF_QEBASIS 'DEFINED-IN-FILE 'REDLOG/DCFSF/DCFSFQE.RED) 
(PUT 'DCFSF_QEBASIS 'PROCEDURE_TYPE
     '(ARROW (TIMES GENERAL GENERAL GENERAL GENERAL) GENERAL)) 
(DE DCFSF_QEBASIS (F1 G V THEO)
    (COND ((NULL G) 'FALSE)
          ((OR (ATOM G) (ATOM (CAR G))) (DCFSF_QESC2 F1 V THEO))
          ((LEQ (DCFSF_ORDF G V) (DCFSF_ORDF F1 V))
           (DCFSF_QEBASIS1 F1 G V THEO))
          (T (DCFSF_QEBASIS2 F1 G V THEO)))) 
(SWITCH (LIST 'DZOPT)) 
(PUT 'DCFSF_QEBASIS1 'NUMBER-OF-ARGS 4) 
(PUT 'DCFSF_QEBASIS1 'DEFINED-ON-LINE '548) 
(PUT 'DCFSF_QEBASIS1 'DEFINED-IN-FILE 'REDLOG/DCFSF/DCFSFQE.RED) 
(PUT 'DCFSF_QEBASIS1 'PROCEDURE_TYPE
     '(ARROW (TIMES GENERAL GENERAL GENERAL GENERAL) GENERAL)) 
(DE DCFSF_QEBASIS1 (F1 G V THEO)
    (PROG (PHI1P PHI2P)
      (COND
       ((AND *DZOPT (NULL (CDR (QREMF G (CDAR F1)))))
        (PROGN
         (SETQ PHI1P 'FALSE)
         (SETQ PHI2P (DCFSF_QESC F1 (CDAR F1) G V THEO))
         NIL))
       (T
        (PROGN
         (SETQ PHI1P (DCFSF_QESC50 (LIST (CDR F1) (CDAR F1)) G V THEO T))
         (SETQ PHI1P (CL_SIMPL PHI1P THEO (MINUS 1)))
         (COND ((EQ PHI1P 'TRUE) (RETURN 'TRUE)))
         (SETQ PHI2P (DCFSF_QESC F1 (CDAR F1) G V THEO))
         NIL)))
      (RETURN (CL_SIMPL (CONS 'OR (LIST PHI1P PHI2P)) THEO (MINUS 1))))) 
(PUT 'DCFSF_QEBASIS2 'NUMBER-OF-ARGS 4) 
(PUT 'DCFSF_QEBASIS2 'DEFINED-ON-LINE '564) 
(PUT 'DCFSF_QEBASIS2 'DEFINED-IN-FILE 'REDLOG/DCFSF/DCFSFQE.RED) 
(PUT 'DCFSF_QEBASIS2 'PROCEDURE_TYPE
     '(ARROW (TIMES GENERAL GENERAL GENERAL GENERAL) GENERAL)) 
(DE DCFSF_QEBASIS2 (F1 G V THEO)
    (PROG (PSI SP S1 SF1 IF1 QR R DP PHI1P PHI3P)
      (SETQ IF1 (CDAR F1))
      (SETQ SP (DCFSF_ORDF G V))
      (SETQ S1 (DCFSF_ORDF F1 V))
      (SETQ SF1 (DCFSF_SEPARANT F1))
      (SETQ DP (DCFSF_DEGF G V))
      (SETQ QR
              (QREMF
               ((LAMBDA (G151)
                  (COND (*PHYSOP-LOADED (PHYSOP-MULTF G151 G))
                        (T (POLY-MULTF G151 G))))
                (EXPTF SF1 DP))
               (DCFSF_DN F1 (DIFFERENCE SP S1) V THEO)))
      (SETQ R (CDR QR))
      (COND
       ((AND *DZOPT (NULL (CDR (QREMF G (CDAR F1)))))
        (PROGN (SETQ IF1 1) (SETQ PHI1P 'FALSE) NIL))
       (T (SETQ PHI1P (DCFSF_QESC50 (LIST (CDR F1) (CDAR F1)) G V THEO T))))
      (SETQ PHI1P (CL_SIMPL PHI1P THEO (MINUS 1)))
      (COND ((EQ PHI1P 'TRUE) (RETURN 'TRUE)))
      (COND
       ((GREATERP (DCFSF_DEGF F1 V) 1)
        (PROGN
         (SETQ PSI
                 (DCFSF_QEBASIS F1
                  ((LAMBDA (G153)
                     (COND (*PHYSOP-LOADED (PHYSOP-MULTF G153 R))
                           (T (POLY-MULTF G153 R))))
                   (COND (*PHYSOP-LOADED (PHYSOP-MULTF SF1 IF1))
                         (T (POLY-MULTF SF1 IF1))))
                  V THEO))
         (SETQ PHI3P (DCFSF_QESC50 (LIST F1 SF1) G V THEO T))
         (SETQ R (CONS 'OR (LIST PHI1P PSI PHI3P)))
         NIL))
       (T
        (PROGN
         (SETQ PSI
                 (DCFSF_QEBASIS F1
                  (COND (*PHYSOP-LOADED (PHYSOP-MULTF IF1 R))
                        (T (POLY-MULTF IF1 R)))
                  V THEO))
         (SETQ R (CONS 'OR (LIST PHI1P PSI))))))
      (RETURN R))) 
(PUT 'DCFSF_MVAR 'NUMBER-OF-ARGS 1) 
(PUT 'DCFSF_MVAR 'DEFINED-ON-LINE '593) 
(PUT 'DCFSF_MVAR 'DEFINED-IN-FILE 'REDLOG/DCFSF/DCFSFQE.RED) 
(PUT 'DCFSF_MVAR 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE DCFSF_MVAR (F)
    (COND ((OR (ATOM F) (ATOM (CAR F))) NIL)
          ((EQCAR (CAAAR F) 'D) (CADR (CAAAR F))) (T (CAAAR F)))) 
(PUT 'DCFSF_SEPARANT 'NUMBER-OF-ARGS 1) 
(PUT 'DCFSF_SEPARANT 'DEFINED-ON-LINE '604) 
(PUT 'DCFSF_SEPARANT 'DEFINED-IN-FILE 'REDLOG/DCFSF/DCFSFQE.RED) 
(PUT 'DCFSF_SEPARANT 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE DCFSF_SEPARANT (F) (DCFSF_DF F (CAAAR F))) 
(PUT 'DCFSF_QESC5R 'NUMBER-OF-ARGS 5) 
(PUT 'DCFSF_QESC5R 'DEFINED-ON-LINE '609) 
(PUT 'DCFSF_QESC5R 'DEFINED-IN-FILE 'REDLOG/DCFSF/DCFSFQE.RED) 
(PUT 'DCFSF_QESC5R 'PROCEDURE_TYPE
     '(ARROW (TIMES GENERAL GENERAL GENERAL GENERAL GENERAL) GENERAL)) 
(DE DCFSF_QESC5R (FL G V THEO ELIM)
    (PROG (PHI1P PHI2P FM FFL)
      (SETQ FFL (REVERSE FL))
      (SETQ FM (CAR FFL))
      (COND ((AND *DZOPT (NULL (CDR (QREMF G (CDAR FM))))) (SETQ PHI1P 'FALSE))
            (T
             (SETQ PHI1P
                     (DCFSF_QESC50 (CONS (CDR FM) (CONS (CDAR FM) (CDR FFL))) G
                      V THEO ELIM))))
      (SETQ PHI2P (DCFSF_QESC5R2 FL G V THEO ELIM))
      (IOTO_TPRIN2T "fl:")
      (MATHPRINT
       (CONS 'LIST
             (PROG (F FORALL-RESULT FORALL-ENDPTR)
               (SETQ F FL)
               (COND ((NULL F) (RETURN NIL)))
               (SETQ FORALL-RESULT
                       (SETQ FORALL-ENDPTR
                               (CONS ((LAMBDA (F) (PREPF F)) (CAR F)) NIL)))
              LOOPLABEL
               (SETQ F (CDR F))
               (COND ((NULL F) (RETURN FORALL-RESULT)))
               (RPLACD FORALL-ENDPTR
                       (CONS ((LAMBDA (F) (PREPF F)) (CAR F)) NIL))
               (SETQ FORALL-ENDPTR (CDR FORALL-ENDPTR))
               (GO LOOPLABEL))))
      (IOTO_TPRIN2T "phi1':")
      (MATHPRINT (RL_PREPFOF (CL_SIMPL PHI1P NIL (MINUS 1))))
      (IOTO_TPRIN2T "phi2':")
      (MATHPRINT (RL_PREPFOF (CL_SIMPL PHI2P NIL (MINUS 1))))
      (IOTO_TPRIN2T "----------------------------------------")
      (RETURN (CONS 'OR (LIST PHI1P PHI2P))))) 
(PUT 'DCFSF_QESC5R2 'NUMBER-OF-ARGS 5) 
(PUT 'DCFSF_QESC5R2 'DEFINED-ON-LINE '629) 
(PUT 'DCFSF_QESC5R2 'DEFINED-IN-FILE 'REDLOG/DCFSF/DCFSFQE.RED) 
(PUT 'DCFSF_QESC5R2 'PROCEDURE_TYPE
     '(ARROW (TIMES GENERAL GENERAL GENERAL GENERAL GENERAL) GENERAL)) 
(DE DCFSF_QESC5R2 (FL G V THEO ELIM)
    (PROG (FFL FM FM1)
      (SETQ FFL (REVERSE FL))
      (SETQ FM (PROG1 (CAR FFL) (SETQ FFL (CDR FFL))))
      (SETQ FM1 (PROG1 (CAR FFL) (SETQ FFL (CDR FFL))))
      (COND
       ((EQUAL (DCFSF_ORDF FM V) (DCFSF_ORDF FM1 V))
        (RETURN (DCFSF_QESC5R2U1 FM FM1 FFL G V THEO ELIM))))
      (RETURN (DCFSF_QESC5R2U2 FM FM1 FFL G V THEO ELIM)))) 
(PUT 'DCFSF_QESC5R2U1 'NUMBER-OF-ARGS 7) 
(PUT 'DCFSF_QESC5R2U1 'DEFINED-ON-LINE '640) 
(PUT 'DCFSF_QESC5R2U1 'DEFINED-IN-FILE 'REDLOG/DCFSF/DCFSFQE.RED) 
(PUT 'DCFSF_QESC5R2U1 'PROCEDURE_TYPE
     '(ARROW (TIMES GENERAL GENERAL GENERAL GENERAL GENERAL GENERAL GENERAL)
       GENERAL)) 
(DE DCFSF_QESC5R2U1 (FM FM1 FFL G V THEO ELIM)
    (PROG (DM1 IFM QR R PSIP)
      (SETQ DM1 (DCFSF_DEGF FM1 V))
      (SETQ IFM (CDAR FM))
      (SETQ QR
              (QREMF
               ((LAMBDA (G155)
                  (COND (*PHYSOP-LOADED (PHYSOP-MULTF G155 FM1))
                        (T (POLY-MULTF G155 FM1))))
                (EXPTF IFM DM1))
               FM))
      (SETQ R (CDR QR))
      (COND
       ((AND *DZOPT (NULL (CDR (QREMF G (CDAR FM)))))
        (SETQ PSIP (DCFSF_QESC50 (CONS FM (CONS R FFL)) G V THEO ELIM)))
       (T
        (SETQ PSIP
                (DCFSF_QESC50 (CONS FM (CONS R FFL))
                 (COND (*PHYSOP-LOADED (PHYSOP-MULTF IFM G))
                       (T (POLY-MULTF IFM G)))
                 V THEO ELIM))))
      (RETURN PSIP))) 
(PUT 'DCFSF_QESC5R2U2 'NUMBER-OF-ARGS 7) 
(PUT 'DCFSF_QESC5R2U2 'DEFINED-ON-LINE '653) 
(PUT 'DCFSF_QESC5R2U2 'DEFINED-IN-FILE 'REDLOG/DCFSF/DCFSFQE.RED) 
(PUT 'DCFSF_QESC5R2U2 'PROCEDURE_TYPE
     '(ARROW (TIMES GENERAL GENERAL GENERAL GENERAL GENERAL GENERAL GENERAL)
       GENERAL)) 
(DE DCFSF_QESC5R2U2 (FM FM1 FFL G V THEO ELIM)
    (PROG (SFM DM1 QR R SM SM1 PSIP IFM)
      (SETQ SFM (DCFSF_SEPARANT FM))
      (SETQ DM1 (DCFSF_DEGF FM1 V))
      (SETQ SM (DCFSF_ORDF FM V))
      (SETQ SM1 (DCFSF_ORDF FM1 V))
      (SETQ IFM (CDAR FM))
      (SETQ QR
              (QREMF
               ((LAMBDA (G157)
                  (COND (*PHYSOP-LOADED (PHYSOP-MULTF G157 FM1))
                        (T (POLY-MULTF G157 FM1))))
                (EXPTF SFM DM1))
               (DCFSF_DN FM (DIFFERENCE SM1 SM) V THEO)))
      (SETQ R (CDR QR))
      (COND
       ((AND *DZOPT (NULL (CDR (QREMF G (CDAR FM)))))
        (SETQ PSIP (DCFSF_QESC50 (CONS FM (CONS R FFL)) G V THEO ELIM)))
       (T
        (SETQ PSIP
                (DCFSF_QESC50 (CONS FM (CONS R FFL))
                 (COND (*PHYSOP-LOADED (PHYSOP-MULTF SFM G))
                       (T (POLY-MULTF SFM G)))
                 V THEO ELIM))))
      (RETURN PSIP))) 
(PUT 'DCFSF_DN 'NUMBER-OF-ARGS 4) 
(PUT 'DCFSF_DN 'DEFINED-ON-LINE '671) 
(PUT 'DCFSF_DN 'DEFINED-IN-FILE 'REDLOG/DCFSF/DCFSFQE.RED) 
(PUT 'DCFSF_DN 'PROCEDURE_TYPE
     '(ARROW (TIMES GENERAL GENERAL GENERAL GENERAL) GENERAL)) 
(DE DCFSF_DN (F N V THEO)
    (PROG (R S M)
      (SETQ M
              (COND
               ((AND KORD* (PAIRP (CAR KORD*)) (EQ (CAR (CAR KORD*)) 'D))
                (CADDR (CAR KORD*)))
               (T 0)))
      (SETQ S (CAR (DCFSF_ORDDEGF F V)))
      (SETQ M (MAX M (PLUS S N)))
      (SETKORDER (DCFSF_MKKL V M))
      (SETQ R (REORDER F))
      (SETQ R (DCFSF_DERIVATIONF R N THEO))
      (RETURN (REORDER R)))) 
(PUT 'DCFSF_QESC1 'NUMBER-OF-ARGS 3) 
(PUT 'DCFSF_QESC1 'DEFINED-ON-LINE '688) 
(PUT 'DCFSF_QESC1 'DEFINED-IN-FILE 'REDLOG/DCFSF/DCFSFQE.RED) 
(PUT 'DCFSF_QESC1 'PROCEDURE_TYPE
     '(ARROW (TIMES GENERAL GENERAL GENERAL) GENERAL)) 
(DE DCFSF_QESC1 (G V THEO)
    ((LAMBDA (G160)
       (COND ((AND G160 (CDR G160)) (CONS 'OR G160))
             ((NULL G160) (COND ((EQ 'OR 'AND) 'TRUE) (T 'FALSE)))
             (T (CAR G160))))
     (PROG (GT FORALL-RESULT FORALL-ENDPTR)
       (SETQ GT (DCFSF_CL G V))
       (COND ((NULL GT) (RETURN NIL)))
       (SETQ FORALL-RESULT
               (SETQ FORALL-ENDPTR
                       (CONS ((LAMBDA (GT) (DCFSF_0MK2 'NEQ GT)) (CAR GT))
                             NIL)))
      LOOPLABEL
       (SETQ GT (CDR GT))
       (COND ((NULL GT) (RETURN FORALL-RESULT)))
       (RPLACD FORALL-ENDPTR
               (CONS ((LAMBDA (GT) (DCFSF_0MK2 'NEQ GT)) (CAR GT)) NIL))
       (SETQ FORALL-ENDPTR (CDR FORALL-ENDPTR))
       (GO LOOPLABEL)))) 
(PUT 'DCFSF_CL 'NUMBER-OF-ARGS 2) 
(PUT 'DCFSF_CL 'DEFINED-ON-LINE '692) 
(PUT 'DCFSF_CL 'DEFINED-IN-FILE 'REDLOG/DCFSF/DCFSFQE.RED) 
(PUT 'DCFSF_CL 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE DCFSF_CL (F V)
    (COND
     ((OR (OR (ATOM F) (ATOM (CAR F)))
          (NOT (MEMQ V (DCFSF_VARLAT1 (KERNELS F)))))
      (LIST F))
     (T (NCONC (DCFSF_CL (CDAR F) V) (DCFSF_CL (CDR F) V))))) 
(PUT 'DCFSF_CL1 'NUMBER-OF-ARGS 2) 
(PUT 'DCFSF_CL1 'DEFINED-ON-LINE '701) 
(PUT 'DCFSF_CL1 'DEFINED-IN-FILE 'REDLOG/DCFSF/DCFSFQE.RED) 
(PUT 'DCFSF_CL1 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE DCFSF_CL1 (F V) (DCFSF_CL2 F V T)) 
(PUT 'DCFSF_CL2 'NUMBER-OF-ARGS 3) 
(PUT 'DCFSF_CL2 'DEFINED-ON-LINE '708) 
(PUT 'DCFSF_CL2 'DEFINED-IN-FILE 'REDLOG/DCFSF/DCFSFQE.RED) 
(PUT 'DCFSF_CL2 'PROCEDURE_TYPE
     '(ARROW (TIMES GENERAL GENERAL GENERAL) GENERAL)) 
(DE DCFSF_CL2 (F V FLG)
    (PROG (W)
      (COND
       ((OR (OR (ATOM F) (ATOM (CAR F)))
            (NOT (MEMQ V (DCFSF_VARLAT1 (KERNELS F)))))
        (RETURN (COND (FLG (CONS NIL F)) (T (CONS (LIST F) NIL)))))
       (T
        (PROGN
         (SETQ W (DCFSF_CL2 (CDR F) V T))
         (RETURN
          (CONS (NCONC (CAR (DCFSF_CL2 (CDAR F) V NIL)) (CAR W)) (CDR W)))))))) 
(PUT 'DCFSF_QESC 'NUMBER-OF-ARGS 5) 
(PUT 'DCFSF_QESC 'DEFINED-ON-LINE '721) 
(PUT 'DCFSF_QESC 'DEFINED-IN-FILE 'REDLOG/DCFSF/DCFSFQE.RED) 
(PUT 'DCFSF_QESC 'PROCEDURE_TYPE
     '(ARROW (TIMES GENERAL GENERAL GENERAL GENERAL GENERAL) GENERAL)) 
(DE DCFSF_QESC (F1 IF1 G V THEO)
    (PROG ()
      (COND ((OR (NULL G) (NULL IF1)) (RETURN 'FALSE)))
      (COND ((OR (ATOM IF1) (ATOM (CAR IF1))) (SETQ IF1 1)))
      (COND
       ((AND (EQUAL G 1) (NOT (MEMQ V (DCFSF_VARLAT1 (KERNELS IF1)))))
        (RETURN
         (CONS 'AND (LIST (DCFSF_0MK2 'NEQ IF1) (DCFSF_QESC2 F1 V THEO))))))
      (COND
       ((LESSP (DCFSF_ORDF G V) (DCFSF_ORDF F1 V))
        (RETURN (DCFSF_QESC3 F1 G IF1 V THEO))))
      (RETURN (DCFSF_QESC4 F1 G IF1 V THEO)))) 
(PUT 'DCFSF_QESC2 'NUMBER-OF-ARGS 3) 
(PUT 'DCFSF_QESC2 'DEFINED-ON-LINE '734) 
(PUT 'DCFSF_QESC2 'DEFINED-IN-FILE 'REDLOG/DCFSF/DCFSFQE.RED) 
(PUT 'DCFSF_QESC2 'PROCEDURE_TYPE
     '(ARROW (TIMES GENERAL GENERAL GENERAL) GENERAL)) 
(DE DCFSF_QESC2 (F V THEO)
    (PROG (FTL F1)
      (PROG (G161)
        (SETQ G161 (DCFSF_CL1 F V))
        (SETQ FTL (CAR G161))
        (SETQ F1 (CDR G161))
        (RETURN G161))
      (RETURN
       ((LAMBDA (G163)
          (COND ((AND G163 (CDR G163)) (CONS 'OR G163))
                ((NULL G163) (COND ((EQ 'OR 'AND) 'TRUE) (T 'FALSE)))
                (T (CAR G163))))
        (CONS (DCFSF_0MK2 'EQUAL F1)
              (PROG (GT FORALL-RESULT FORALL-ENDPTR)
                (SETQ GT FTL)
                (COND ((NULL GT) (RETURN NIL)))
                (SETQ FORALL-RESULT
                        (SETQ FORALL-ENDPTR
                                (CONS
                                 ((LAMBDA (GT) (DCFSF_0MK2 'NEQ GT)) (CAR GT))
                                 NIL)))
               LOOPLABEL
                (SETQ GT (CDR GT))
                (COND ((NULL GT) (RETURN FORALL-RESULT)))
                (RPLACD FORALL-ENDPTR
                        (CONS ((LAMBDA (GT) (DCFSF_0MK2 'NEQ GT)) (CAR GT))
                              NIL))
                (SETQ FORALL-ENDPTR (CDR FORALL-ENDPTR))
                (GO LOOPLABEL))))))) 
(PUT 'DCFSF_QESC3 'NUMBER-OF-ARGS 5) 
(PUT 'DCFSF_QESC3 'DEFINED-ON-LINE '742) 
(PUT 'DCFSF_QESC3 'DEFINED-IN-FILE 'REDLOG/DCFSF/DCFSFQE.RED) 
(PUT 'DCFSF_QESC3 'PROCEDURE_TYPE
     '(ARROW (TIMES GENERAL GENERAL GENERAL GENERAL GENERAL) GENERAL)) 
(DE DCFSF_QESC3 (F G IFF V THEO)
    (PROG (W1 W2)
      (SETQ W1
              (PROG (GT FORALL-RESULT FORALL-ENDPTR)
                (SETQ GT (DCFSF_CL G V))
                (COND ((NULL GT) (RETURN NIL)))
                (SETQ FORALL-RESULT
                        (SETQ FORALL-ENDPTR
                                (CONS
                                 ((LAMBDA (GT) (DCFSF_0MK2 'NEQ GT)) (CAR GT))
                                 NIL)))
               LOOPLABEL
                (SETQ GT (CDR GT))
                (COND ((NULL GT) (RETURN FORALL-RESULT)))
                (RPLACD FORALL-ENDPTR
                        (CONS ((LAMBDA (GT) (DCFSF_0MK2 'NEQ GT)) (CAR GT))
                              NIL))
                (SETQ FORALL-ENDPTR (CDR FORALL-ENDPTR))
                (GO LOOPLABEL)))
      (SETQ W2
              (PROG (CT FORALL-RESULT FORALL-ENDPTR)
                (SETQ CT (DCFSF_CL (CDAR F) V))
                (COND ((NULL CT) (RETURN NIL)))
                (SETQ FORALL-RESULT
                        (SETQ FORALL-ENDPTR
                                (CONS
                                 ((LAMBDA (CT) (DCFSF_0MK2 'NEQ CT)) (CAR CT))
                                 NIL)))
               LOOPLABEL
                (SETQ CT (CDR CT))
                (COND ((NULL CT) (RETURN FORALL-RESULT)))
                (RPLACD FORALL-ENDPTR
                        (CONS ((LAMBDA (CT) (DCFSF_0MK2 'NEQ CT)) (CAR CT))
                              NIL))
                (SETQ FORALL-ENDPTR (CDR FORALL-ENDPTR))
                (GO LOOPLABEL)))
      (RETURN
       (CONS 'AND
             (LIST
              (COND ((AND W1 (CDR W1)) (CONS 'OR W1))
                    ((NULL W1) (COND ((EQ 'OR 'AND) 'TRUE) (T 'FALSE)))
                    (T (CAR W1)))
              (COND ((AND W2 (CDR W2)) (CONS 'OR W2))
                    ((NULL W2) (COND ((EQ 'OR 'AND) 'TRUE) (T 'FALSE)))
                    (T (CAR W2)))))))) 
(PUT 'DCFSF_QESC4 'NUMBER-OF-ARGS 5) 
(PUT 'DCFSF_QESC4 'DEFINED-ON-LINE '751) 
(PUT 'DCFSF_QESC4 'DEFINED-IN-FILE 'REDLOG/DCFSF/DCFSFQE.RED) 
(PUT 'DCFSF_QESC4 'PROCEDURE_TYPE
     '(ARROW (TIMES GENERAL GENERAL GENERAL GENERAL GENERAL) GENERAL)) 
(DE DCFSF_QESC4 (F G IFF V THEO)
    (PROG (QR DD DP W1 W2 R S)
      (SETQ DD (DCFSF_DEGF F V))
      (SETQ DP (DCFSF_DEGF G V))
      (SETQ S (DCFSF_ORDF F V))
      (SETQ QR
              (QREMF
               ((LAMBDA (G164 G165)
                  (COND (*PHYSOP-LOADED (PHYSOP-MULTF G164 G165))
                        (T (POLY-MULTF G164 G165))))
                (EXPTF (CDAR F) (TIMES DD DP)) (EXPTF G DD))
               F))
      (SETQ R (CDR QR))
      (SETQ W1
              (PROG (CT FORALL-RESULT FORALL-ENDPTR)
                (SETQ CT (DCFSF_CL (CDAR F) V))
                (COND ((NULL CT) (RETURN NIL)))
                (SETQ FORALL-RESULT
                        (SETQ FORALL-ENDPTR
                                (CONS
                                 ((LAMBDA (CT) (DCFSF_0MK2 'NEQ CT)) (CAR CT))
                                 NIL)))
               LOOPLABEL
                (SETQ CT (CDR CT))
                (COND ((NULL CT) (RETURN FORALL-RESULT)))
                (RPLACD FORALL-ENDPTR
                        (CONS ((LAMBDA (CT) (DCFSF_0MK2 'NEQ CT)) (CAR CT))
                              NIL))
                (SETQ FORALL-ENDPTR (CDR FORALL-ENDPTR))
                (GO LOOPLABEL)))
      (SETQ W2
              (PROG (RT FORALL-RESULT FORALL-ENDPTR)
                (SETQ RT (DCFSF_CL R V))
                (COND ((NULL RT) (RETURN NIL)))
                (SETQ FORALL-RESULT
                        (SETQ FORALL-ENDPTR
                                (CONS
                                 ((LAMBDA (RT) (DCFSF_0MK2 'NEQ RT)) (CAR RT))
                                 NIL)))
               LOOPLABEL
                (SETQ RT (CDR RT))
                (COND ((NULL RT) (RETURN FORALL-RESULT)))
                (RPLACD FORALL-ENDPTR
                        (CONS ((LAMBDA (RT) (DCFSF_0MK2 'NEQ RT)) (CAR RT))
                              NIL))
                (SETQ FORALL-ENDPTR (CDR FORALL-ENDPTR))
                (GO LOOPLABEL)))
      (RETURN
       (CONS 'AND
             (LIST
              (COND ((AND W1 (CDR W1)) (CONS 'OR W1))
                    ((NULL W1) (COND ((EQ 'OR 'AND) 'TRUE) (T 'FALSE)))
                    (T (CAR W1)))
              (COND ((AND W2 (CDR W2)) (CONS 'OR W2))
                    ((NULL W2) (COND ((EQ 'OR 'AND) 'TRUE) (T 'FALSE)))
                    (T (CAR W2)))))))) 
(PUT 'DCFSF_1EQUATION 'NUMBER-OF-ARGS 3) 
(PUT 'DCFSF_1EQUATION 'DEFINED-ON-LINE '765) 
(PUT 'DCFSF_1EQUATION 'DEFINED-IN-FILE 'REDLOG/DCFSF/DCFSFQE.RED) 
(PUT 'DCFSF_1EQUATION 'PROCEDURE_TYPE
     '(ARROW (TIMES GENERAL GENERAL GENERAL) GENERAL)) 
(DE DCFSF_1EQUATION (F V THEO)
    (PROG (FL GL G OO KL R *RLSIEXPLA)
      (SETQ F (CL_SIMPL F THEO (MINUS 1)))
      (COND
       ((NEQ (COND ((ATOM F) F) (T (CAR F))) 'AND)
        (REDERR (LIST "dcfsf_1equation:" F "is not a conjunction"))))
      (SETQ G 1)
      (PROG (AT)
        (SETQ AT (CDR F))
       LAB
        (COND ((NULL AT) (RETURN NIL)))
        ((LAMBDA (AT)
           (COND
            ((EQ (COND ((ATOM AT) AT) (T (CAR AT))) 'EQUAL)
             (SETQ FL (CONS (DCFSF_ARG2L AT) FL)))
            ((EQ (COND ((ATOM AT) AT) (T (CAR AT))) 'NEQ)
             (SETQ G
                     ((LAMBDA (G167)
                        (COND (*PHYSOP-LOADED (PHYSOP-MULTF G G167))
                              (T (POLY-MULTF G G167))))
                      (DCFSF_ARG2L AT))))
            (T
             (REDERR
              (LIST "dcfsf_1equation:" AT "is not an atomic formula")))))
         (CAR AT))
        (SETQ AT (CDR AT))
        (GO LAB))
      (SETQ KL (DCFSF_MKKL V (DCFSF_MAXORDER (CONS G FL) V)))
      (SETQ OO (SETKORDER KL))
      (SETQ FL
              (PROG (F FORALL-RESULT FORALL-ENDPTR)
                (SETQ F FL)
                (COND ((NULL F) (RETURN NIL)))
                (SETQ FORALL-RESULT
                        (SETQ FORALL-ENDPTR
                                (CONS ((LAMBDA (F) (REORDER F)) (CAR F)) NIL)))
               LOOPLABEL
                (SETQ F (CDR F))
                (COND ((NULL F) (RETURN FORALL-RESULT)))
                (RPLACD FORALL-ENDPTR
                        (CONS ((LAMBDA (F) (REORDER F)) (CAR F)) NIL))
                (SETQ FORALL-ENDPTR (CDR FORALL-ENDPTR))
                (GO LOOPLABEL)))
      (SETQ G (REORDER G))
      (SETQ R (DCFSF_QESC5 FL G V NIL NIL))
      (SETKORDER OO)
      (SETQ R (CL_APPLY2ATS R 'DCFSF_REORDERAT))
      (SETQ R (CL_SIMPL (CL_DNF R) THEO (MINUS 1)))
      (RETURN R))) 
(PUT '*RL_PL 'PRIFN 'PL_PRIFN) 
(PUT '*RL_PLL 'PRIFN 'PLL_PRIFN) 
(PUT 'PLL_NEW 'NUMBER-OF-ARGS 0) 
(PUT 'PLL_NEW 'DEFINED-ON-LINE '801) 
(PUT 'PLL_NEW 'DEFINED-IN-FILE 'REDLOG/DCFSF/DCFSFQE.RED) 
(PUT 'PLL_NEW 'PROCEDURE_TYPE '(ARROW UNIT GENERAL)) 
(DE PLL_NEW NIL (LIST '*RL_PLL)) 
(PUT 'PLL_EMPTYP 'NUMBER-OF-ARGS 1) 
(PUT 'PLL_EMPTYP 'DEFINED-ON-LINE '804) 
(PUT 'PLL_EMPTYP 'DEFINED-IN-FILE 'REDLOG/DCFSF/DCFSFQE.RED) 
(PUT 'PLL_EMPTYP 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE PLL_EMPTYP (PLL) (NOT (CDR PLL))) 
(PUT 'PLL_LENGTH 'NUMBER-OF-ARGS 1) 
(PUT 'PLL_LENGTH 'DEFINED-ON-LINE '807) 
(PUT 'PLL_LENGTH 'DEFINED-IN-FILE 'REDLOG/DCFSF/DCFSFQE.RED) 
(PUT 'PLL_LENGTH 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE PLL_LENGTH (PLL) (LENGTH (PLL_2L PLL))) 
(PUT 'PLL_POP 'DEFINED-ON-LINE '810) 
(PUT 'PLL_POP 'DEFINED-IN-FILE 'REDLOG/DCFSF/DCFSFQE.RED) 
(PUT 'PLL_POP 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DM PLL_POP (L)
    (PROG (LL)
      (COND
       ((OR (NULL (CDR L)) (CDDR L))
        (REDERR
         (LIST "pop called with" (LENGTH (CDR L)) "arguments instead of 1"))))
      (SETQ LL (CADR L))
      (COND ((NOT (IDP LL)) (TYPERR LL "identifier")))
      (RETURN
       (LIST 'PROG (LIST 'A) (LIST 'SETQ 'A (LIST 'CADR LL))
             (LIST 'RPLACD LL (LIST 'CDDR LL)) (LIST 'RETURN 'A))))) 
(PUT 'PLL_CONS 'NUMBER-OF-ARGS 2) 
(PUT 'PLL_CONS 'DEFINED-ON-LINE '826) 
(PUT 'PLL_CONS 'DEFINED-IN-FILE 'REDLOG/DCFSF/DCFSFQE.RED) 
(PUT 'PLL_CONS 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE PLL_CONS (PL PLL) (RPLACD PLL (LTO_INSERT PL (CDR PLL)))) 
(PUT 'PLL_FL 'NUMBER-OF-ARGS 1) 
(PUT 'PLL_FL 'DEFINED-ON-LINE '829) 
(PUT 'PLL_FL 'DEFINED-IN-FILE 'REDLOG/DCFSF/DCFSFQE.RED) 
(PUT 'PLL_FL 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE PLL_FL (L)
    (PROG (PLL)
      (SETQ PLL (PLL_NEW))
      (PROG (PL)
        (SETQ PL L)
       LAB
        (COND ((NULL PL) (RETURN NIL)))
        ((LAMBDA (PL) (SETQ PLL (PLL_CONS PL PLL))) (CAR PL))
        (SETQ PL (CDR PL))
        (GO LAB))
      (RETURN PLL))) 
(PUT 'PLL_PRIFN 'NUMBER-OF-ARGS 1) 
(PUT 'PLL_PRIFN 'DEFINED-ON-LINE '837) 
(PUT 'PLL_PRIFN 'DEFINED-IN-FILE 'REDLOG/DCFSF/DCFSFQE.RED) 
(PUT 'PLL_PRIFN 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE PLL_PRIFN (PLL)
    (PROGN
     (IOTO_PRIN2 "<pll>")
     (PROG (PL)
       (SETQ PL (PL_2L PLL))
      LAB
       (COND ((NULL PL) (RETURN NIL)))
       ((LAMBDA (PL) (PL_PRIFN PL)) (CAR PL))
       (SETQ PL (CDR PL))
       (GO LAB))
     (IOTO_PRIN2 "<pll>")
     NIL)) 
(PUT 'PLL_2L 'NUMBER-OF-ARGS 1) 
(PUT 'PLL_2L 'DEFINED-ON-LINE '845) 
(PUT 'PLL_2L 'DEFINED-IN-FILE 'REDLOG/DCFSF/DCFSFQE.RED) 
(PUT 'PLL_2L 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE PLL_2L (PLL) (CDR PLL)) 
(PUT 'PL_FACTORIZE 'NUMBER-OF-ARGS 1) 
(PUT 'PL_FACTORIZE 'DEFINED-ON-LINE '848) 
(PUT 'PL_FACTORIZE 'DEFINED-IN-FILE 'REDLOG/DCFSF/DCFSFQE.RED) 
(PUT 'PL_FACTORIZE 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE PL_FACTORIZE (PL)
    (PROG (VEQL VNEL OEQL ONEL FVEQL APLL)
      (SETQ PL (PL_SQFPART PL))
      (SETQ PL (PL_SIMPL PL))
      (COND ((PL_FALSEP PL) (RETURN (PLL_NEW))))
      (COND ((NOT *RLENFFAC) (RETURN (PLL_FL (LIST PL)))))
      (PROG (G168 G169)
        (SETQ G168 (PL_2L PL))
        (SETQ G169 G168)
        (SETQ VEQL (CAR G168))
        (SETQ G168 (CDR G168))
        (SETQ VNEL (CAR G168))
        (SETQ G168 (CDR G168))
        (SETQ OEQL (CAR G168))
        (SETQ G168 (CDR G168))
        (SETQ ONEL (CAR G168))
        (SETQ G168 (CDR G168))
        (RETURN G169))
      (SETQ FVEQL
              (PROG (VEQ FORALL-RESULT FORALL-ENDPTR)
                (SETQ VEQ VEQL)
                (COND ((NULL VEQ) (RETURN NIL)))
                (SETQ FORALL-RESULT
                        (SETQ FORALL-ENDPTR
                                (CONS
                                 ((LAMBDA (VEQ)
                                    (PROG (PR FORALL-RESULT FORALL-ENDPTR)
                                      (SETQ PR (CDR (FCTRF VEQ)))
                                      (COND ((NULL PR) (RETURN NIL)))
                                      (SETQ FORALL-RESULT
                                              (SETQ FORALL-ENDPTR
                                                      (CONS
                                                       ((LAMBDA (PR) (CAR PR))
                                                        (CAR PR))
                                                       NIL)))
                                     LOOPLABEL
                                      (SETQ PR (CDR PR))
                                      (COND ((NULL PR) (RETURN FORALL-RESULT)))
                                      (RPLACD FORALL-ENDPTR
                                              (CONS
                                               ((LAMBDA (PR) (CAR PR))
                                                (CAR PR))
                                               NIL))
                                      (SETQ FORALL-ENDPTR (CDR FORALL-ENDPTR))
                                      (GO LOOPLABEL)))
                                  (CAR VEQ))
                                 NIL)))
               LOOPLABEL
                (SETQ VEQ (CDR VEQ))
                (COND ((NULL VEQ) (RETURN FORALL-RESULT)))
                (RPLACD FORALL-ENDPTR
                        (CONS
                         ((LAMBDA (VEQ)
                            (PROG (PR FORALL-RESULT FORALL-ENDPTR)
                              (SETQ PR (CDR (FCTRF VEQ)))
                              (COND ((NULL PR) (RETURN NIL)))
                              (SETQ FORALL-RESULT
                                      (SETQ FORALL-ENDPTR
                                              (CONS
                                               ((LAMBDA (PR) (CAR PR))
                                                (CAR PR))
                                               NIL)))
                             LOOPLABEL
                              (SETQ PR (CDR PR))
                              (COND ((NULL PR) (RETURN FORALL-RESULT)))
                              (RPLACD FORALL-ENDPTR
                                      (CONS ((LAMBDA (PR) (CAR PR)) (CAR PR))
                                            NIL))
                              (SETQ FORALL-ENDPTR (CDR FORALL-ENDPTR))
                              (GO LOOPLABEL)))
                          (CAR VEQ))
                         NIL))
                (SETQ FORALL-ENDPTR (CDR FORALL-ENDPTR))
                (GO LOOPLABEL)))
      (SETQ APLL (PLL_NEW))
      (PROG (PVEQL)
        (SETQ PVEQL (LTO_CARTPROD FVEQL))
       LAB
        (COND ((NULL PVEQL) (RETURN NIL)))
        ((LAMBDA (PVEQL)
           (SETQ APLL
                   (PLL_CONS (PL_NEW (LTO_LIST2SET PVEQL) VNEL OEQL ONEL)
                    APLL)))
         (CAR PVEQL))
        (SETQ PVEQL (CDR PVEQL))
        (GO LAB))
      (RETURN APLL))) 
(PUT 'PLL_INS 'NUMBER-OF-ARGS 2) 
(PUT 'PLL_INS 'DEFINED-ON-LINE '867) 
(PUT 'PLL_INS 'DEFINED-IN-FILE 'REDLOG/DCFSF/DCFSFQE.RED) 
(PUT 'PLL_INS 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE PLL_INS (APLL PLL)
    (PROGN
     (PROG (PL)
       (SETQ PL (PLL_2L APLL))
      LAB
       (COND ((NULL PL) (RETURN NIL)))
       ((LAMBDA (PL) (SETQ PLL (PLL_CONS PL PLL))) (CAR PL))
       (SETQ PL (CDR PL))
       (GO LAB))
     PLL)) 
(PUT 'PL_SQFPART 'NUMBER-OF-ARGS 1) 
(PUT 'PL_SQFPART 'DEFINED-ON-LINE '874) 
(PUT 'PL_SQFPART 'DEFINED-IN-FILE 'REDLOG/DCFSF/DCFSFQE.RED) 
(PUT 'PL_SQFPART 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE PL_SQFPART (PL)
    (PROG (L W)
      (SETQ L
              (PROG (LL FORALL-RESULT FORALL-ENDPTR)
                (SETQ LL (PL_2L PL))
                (COND ((NULL LL) (RETURN NIL)))
                (SETQ FORALL-RESULT
                        (SETQ FORALL-ENDPTR
                                (CONS
                                 ((LAMBDA (LL)
                                    (PROG (F FORALL-RESULT FORALL-ENDPTR)
                                      (SETQ F LL)
                                      (COND ((NULL F) (RETURN NIL)))
                                      (SETQ FORALL-RESULT
                                              (SETQ FORALL-ENDPTR
                                                      (CONS
                                                       ((LAMBDA (F)
                                                          (COND
                                                           ((OR (ATOM F)
                                                                (ATOM (CAR F)))
                                                            F)
                                                           (T
                                                            (PROGN
                                                             (SETQ W
                                                                     (SFTO_SQFPARTF
                                                                      F))
                                                             (COND
                                                              ((MINUSF W)
                                                               (SETQ W
                                                                       (NEGF
                                                                        W))))
                                                             W))))
                                                        (CAR F))
                                                       NIL)))
                                     LOOPLABEL
                                      (SETQ F (CDR F))
                                      (COND ((NULL F) (RETURN FORALL-RESULT)))
                                      (RPLACD FORALL-ENDPTR
                                              (CONS
                                               ((LAMBDA (F)
                                                  (COND
                                                   ((OR (ATOM F)
                                                        (ATOM (CAR F)))
                                                    F)
                                                   (T
                                                    (PROGN
                                                     (SETQ W (SFTO_SQFPARTF F))
                                                     (COND
                                                      ((MINUSF W)
                                                       (SETQ W (NEGF W))))
                                                     W))))
                                                (CAR F))
                                               NIL))
                                      (SETQ FORALL-ENDPTR (CDR FORALL-ENDPTR))
                                      (GO LOOPLABEL)))
                                  (CAR LL))
                                 NIL)))
               LOOPLABEL
                (SETQ LL (CDR LL))
                (COND ((NULL LL) (RETURN FORALL-RESULT)))
                (RPLACD FORALL-ENDPTR
                        (CONS
                         ((LAMBDA (LL)
                            (PROG (F FORALL-RESULT FORALL-ENDPTR)
                              (SETQ F LL)
                              (COND ((NULL F) (RETURN NIL)))
                              (SETQ FORALL-RESULT
                                      (SETQ FORALL-ENDPTR
                                              (CONS
                                               ((LAMBDA (F)
                                                  (COND
                                                   ((OR (ATOM F)
                                                        (ATOM (CAR F)))
                                                    F)
                                                   (T
                                                    (PROGN
                                                     (SETQ W (SFTO_SQFPARTF F))
                                                     (COND
                                                      ((MINUSF W)
                                                       (SETQ W (NEGF W))))
                                                     W))))
                                                (CAR F))
                                               NIL)))
                             LOOPLABEL
                              (SETQ F (CDR F))
                              (COND ((NULL F) (RETURN FORALL-RESULT)))
                              (RPLACD FORALL-ENDPTR
                                      (CONS
                                       ((LAMBDA (F)
                                          (COND
                                           ((OR (ATOM F) (ATOM (CAR F))) F)
                                           (T
                                            (PROGN
                                             (SETQ W (SFTO_SQFPARTF F))
                                             (COND
                                              ((MINUSF W) (SETQ W (NEGF W))))
                                             W))))
                                        (CAR F))
                                       NIL))
                              (SETQ FORALL-ENDPTR (CDR FORALL-ENDPTR))
                              (GO LOOPLABEL)))
                          (CAR LL))
                         NIL))
                (SETQ FORALL-ENDPTR (CDR FORALL-ENDPTR))
                (GO LOOPLABEL)))
      (RETURN (PL_FL L)))) 
(PUT 'PL_NEW 'NUMBER-OF-ARGS 4) 
(PUT 'PL_NEW 'DEFINED-ON-LINE '888) 
(PUT 'PL_NEW 'DEFINED-IN-FILE 'REDLOG/DCFSF/DCFSFQE.RED) 
(PUT 'PL_NEW 'PROCEDURE_TYPE
     '(ARROW (TIMES GENERAL GENERAL GENERAL GENERAL) GENERAL)) 
(DE PL_NEW (VEQL VNEL OEQL ONEL) (PL_FL (LIST VEQL VNEL OEQL ONEL))) 
(PUT 'PL_2L 'NUMBER-OF-ARGS 1) 
(PUT 'PL_2L 'DEFINED-ON-LINE '891) 
(PUT 'PL_2L 'DEFINED-IN-FILE 'REDLOG/DCFSF/DCFSFQE.RED) 
(PUT 'PL_2L 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE PL_2L (PL) (CDR PL)) 
(PUT 'PL_FL 'NUMBER-OF-ARGS 1) 
(PUT 'PL_FL 'DEFINED-ON-LINE '894) 
(PUT 'PL_FL 'DEFINED-IN-FILE 'REDLOG/DCFSF/DCFSFQE.RED) 
(PUT 'PL_FL 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE PL_FL (L) (CONS '*RL_PL L)) 
(PUT 'PL_PRIFN 'NUMBER-OF-ARGS 1) 
(PUT 'PL_PRIFN 'DEFINED-ON-LINE '897) 
(PUT 'PL_PRIFN 'DEFINED-IN-FILE 'REDLOG/DCFSF/DCFSFQE.RED) 
(PUT 'PL_PRIFN 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE PL_PRIFN (PL)
    (PROGN
     (PROG1 (CAR PL) (SETQ PL (CDR PL)))
     (IOTO_PRIN2 "<pl>")
     (PL_MAPRIL (PROG1 (CAR PL) (SETQ PL (CDR PL))))
     (PROG (I)
       (SETQ I 1)
      LAB
       (COND ((MINUSP (DIFFERENCE 3 I)) (RETURN NIL)))
       (PROGN (IOTO_PRIN2 ",") (PL_MAPRIL (PROG1 (CAR PL) (SETQ PL (CDR PL)))))
       (SETQ I (PLUS2 I 1))
       (GO LAB))
     (IOTO_PRIN2 "</pl>"))) 
(PUT 'PL_MAPRIL 'NUMBER-OF-ARGS 1) 
(PUT 'PL_MAPRIL 'DEFINED-ON-LINE '909) 
(PUT 'PL_MAPRIL 'DEFINED-IN-FILE 'REDLOG/DCFSF/DCFSFQE.RED) 
(PUT 'PL_MAPRIL 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE PL_MAPRIL (L)
    (PROGN
     (IOTO_PRIN2 "{")
     (COND
      (L
       (PROGN
        (MAPRIN (PREPF (PROG1 (CAR L) (SETQ L (CDR L)))))
        (PROG (F)
          (SETQ F L)
         LAB
          (COND ((NULL F) (RETURN NIL)))
          ((LAMBDA (F) (PROGN (IOTO_PRIN2 ",") (MAPRIN (PREPF F)))) (CAR F))
          (SETQ F (CDR F))
          (GO LAB)))))
     (IOTO_PRIN2 "}"))) 
(SWITCH (LIST 'RLENFSIMPL)) 
(SWITCH (LIST 'RLENF1TWICE)) 
(PUT 'DCFSF_ENF 'NUMBER-OF-ARGS 3) 
(PUT 'DCFSF_ENF 'DEFINED-ON-LINE '925) 
(PUT 'DCFSF_ENF 'DEFINED-IN-FILE 'REDLOG/DCFSF/DCFSFQE.RED) 
(PUT 'DCFSF_ENF 'PROCEDURE_TYPE
     '(ARROW (TIMES GENERAL GENERAL GENERAL) GENERAL)) 
(DE DCFSF_ENF (PHI V THEO)
    (PROG (KL OO PLL *RLSIEXPLA *RLSIFAC PLL2 *NAT)
      (COND (*RLVERBOSE (IOTO_TPRIN2T "Computing ENF")))
      (SETQ PHI (CL_DNF (CL_SIMPL PHI THEO (MINUS 1))))
      (COND
       ((OR (OR (EQ PHI 'TRUE) (EQ PHI 'FALSE)) (CL_ATFP PHI)) (RETURN PHI)))
      (SETQ KL (DCFSF_MKKL V (DCFSF_MAXORDER (CL_TERML PHI) V)))
      (SETQ OO (SETKORDER KL))
      (SETQ PHI (CL_APPLY2ATS PHI (FUNCTION DCFSF_REORDERAT)))
      (SETQ PLL (DCFSF_DNF2PLL PHI V THEO))
      (COND
       (*RLENF1TWICE
        (PROGN
         (SETQ PLL (DCFSF_ENF1 PLL V THEO))
         (SETQ PLL2 (CONS 'RL_PLL* (REVERSE (CDR PLL))))
         (SETQ PLL2 (DCFSF_ENF1 PLL2 V THEO))
         (COND
          ((NEQ PLL2 PLL)
           (PROGN
            (LPRIM (LIST "enf1 not idempotent here"))
            (TERPRI* T)
            (MATHPRINT PLL)
            (MATHPRINT PLL2)
            (SETQ PLL PLL2))))))
       (T (SETQ PLL (DCFSF_ENF1 PLL V THEO))))
      (SETQ PHI (PLL_2DNF PLL))
      (SETKORDER OO)
      (SETQ PHI (CL_APPLY2ATS PHI (FUNCTION DCFSF_REORDERAT)))
      (COND (*RLENFSIMPL (SETQ PHI (RL_SIMPL PHI THEO (MINUS 1)))))
      (COND (*RLVERBOSE (IOTO_TPRIN2T "")))
      (RETURN PHI))) 
(PUT 'DCFSF_DNF2PLL 'NUMBER-OF-ARGS 3) 
(PUT 'DCFSF_DNF2PLL 'DEFINED-ON-LINE '962) 
(PUT 'DCFSF_DNF2PLL 'DEFINED-IN-FILE 'REDLOG/DCFSF/DCFSFQE.RED) 
(PUT 'DCFSF_DNF2PLL 'PROCEDURE_TYPE
     '(ARROW (TIMES GENERAL GENERAL GENERAL) GENERAL)) 
(DE DCFSF_DNF2PLL (PHI V THEO)
    (PROG (PLL APLL)
      (SETQ PHI (CL_MKSTRICT PHI 'OR))
      (SETQ PLL (PLL_NEW))
      (PROG (CONJ)
        (SETQ CONJ (CDR PHI))
       LAB
        (COND ((NULL CONJ) (RETURN NIL)))
        ((LAMBDA (CONJ)
           (PROGN
            (SETQ APLL (PL_FACTORIZE (DCFSF_ATL2PL (CDR CONJ) V)))
            (SETQ PLL (PLL_INS APLL PLL))))
         (CAR CONJ))
        (SETQ CONJ (CDR CONJ))
        (GO LAB))
      (RETURN PLL))) 
(PUT 'DCFSF_ATL2PL 'NUMBER-OF-ARGS 2) 
(PUT 'DCFSF_ATL2PL 'DEFINED-ON-LINE '975) 
(PUT 'DCFSF_ATL2PL 'DEFINED-IN-FILE 'REDLOG/DCFSF/DCFSFQE.RED) 
(PUT 'DCFSF_ATL2PL 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE DCFSF_ATL2PL (ATL V)
    (PROG (OP LHS VEQL VNE OEQL ONEL)
      (SETQ VNE 1)
      (PROG (AT)
        (SETQ AT ATL)
       LAB
        (COND ((NULL AT) (RETURN NIL)))
        ((LAMBDA (AT)
           (PROGN
            (SETQ OP (COND ((ATOM AT) AT) (T (CAR AT))))
            (SETQ LHS (CADR AT))
            (COND
             ((EQ OP 'EQUAL)
              (COND ((EQ (DCFSF_MVAR LHS) V) (SETQ VEQL (CONS LHS VEQL)))
                    (T (SETQ OEQL (CONS LHS OEQL)))))
             ((EQ (COND ((ATOM AT) AT) (T (CAR AT))) 'NEQ)
              (COND
               ((EQ (DCFSF_MVAR LHS) V)
                (SETQ VNE
                        (SFTO_SQFPARTF
                         (COND (*PHYSOP-LOADED (PHYSOP-MULTF LHS VNE))
                               (T (POLY-MULTF LHS VNE))))))
               (T (SETQ ONEL (CONS LHS ONEL)))))
             (T (REDERR (LIST "dcfsf_atl2pll: unexpected operator " OP))))))
         (CAR AT))
        (SETQ AT (CDR AT))
        (GO LAB))
      (RETURN (PL_NEW VEQL (LIST VNE) OEQL ONEL)))) 
(PUT 'PLL_2DNF 'NUMBER-OF-ARGS 1) 
(PUT 'PLL_2DNF 'DEFINED-ON-LINE '999) 
(PUT 'PLL_2DNF 'DEFINED-IN-FILE 'REDLOG/DCFSF/DCFSFQE.RED) 
(PUT 'PLL_2DNF 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE PLL_2DNF (PLL)
    ((LAMBDA (G173)
       (COND ((AND G173 (CDR G173)) (CONS 'OR G173))
             ((NULL G173) (COND ((EQ 'OR 'AND) 'TRUE) (T 'FALSE)))
             (T (CAR G173))))
     (REVERSIP
      (PROG (PL FORALL-RESULT FORALL-ENDPTR)
        (SETQ PL (PLL_2L PLL))
        (COND ((NULL PL) (RETURN NIL)))
        (SETQ FORALL-RESULT
                (SETQ FORALL-ENDPTR
                        (CONS
                         ((LAMBDA (PL)
                            ((LAMBDA (G171)
                               (COND ((AND G171 (CDR G171)) (CONS 'AND G171))
                                     ((NULL G171)
                                      (COND ((EQ 'AND 'AND) 'TRUE) (T 'FALSE)))
                                     (T (CAR G171))))
                             (PL_2ATL PL)))
                          (CAR PL))
                         NIL)))
       LOOPLABEL
        (SETQ PL (CDR PL))
        (COND ((NULL PL) (RETURN FORALL-RESULT)))
        (RPLACD FORALL-ENDPTR
                (CONS
                 ((LAMBDA (PL)
                    ((LAMBDA (G171)
                       (COND ((AND G171 (CDR G171)) (CONS 'AND G171))
                             ((NULL G171)
                              (COND ((EQ 'AND 'AND) 'TRUE) (T 'FALSE)))
                             (T (CAR G171))))
                     (PL_2ATL PL)))
                  (CAR PL))
                 NIL))
        (SETQ FORALL-ENDPTR (CDR FORALL-ENDPTR))
        (GO LOOPLABEL))))) 
(PUT 'PL_2ATL 'NUMBER-OF-ARGS 1) 
(PUT 'PL_2ATL 'DEFINED-ON-LINE '1004) 
(PUT 'PL_2ATL 'DEFINED-IN-FILE 'REDLOG/DCFSF/DCFSFQE.RED) 
(PUT 'PL_2ATL 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE PL_2ATL (PL)
    (PROG (VEQL VNEL OEQL ONEL)
      (PROG1 (CAR PL) (SETQ PL (CDR PL)))
      (SETQ VEQL (PROG1 (CAR PL) (SETQ PL (CDR PL))))
      (SETQ VEQL
              (PROG (F FORALL-RESULT FORALL-ENDPTR)
                (SETQ F VEQL)
                (COND ((NULL F) (RETURN NIL)))
                (SETQ FORALL-RESULT
                        (SETQ FORALL-ENDPTR
                                (CONS
                                 ((LAMBDA (F) (DCFSF_0MK2 'EQUAL F)) (CAR F))
                                 NIL)))
               LOOPLABEL
                (SETQ F (CDR F))
                (COND ((NULL F) (RETURN FORALL-RESULT)))
                (RPLACD FORALL-ENDPTR
                        (CONS ((LAMBDA (F) (DCFSF_0MK2 'EQUAL F)) (CAR F))
                              NIL))
                (SETQ FORALL-ENDPTR (CDR FORALL-ENDPTR))
                (GO LOOPLABEL)))
      (SETQ VNEL (PROG1 (CAR PL) (SETQ PL (CDR PL))))
      (SETQ VNEL
              (COND
               (*RLENFFACNE
                (PROG (F FORALL-RESULT FORALL-ENDPTR)
                  (SETQ F (CDR (FCTRF (CAR VNEL))))
                  (COND ((NULL F) (RETURN NIL)))
                  (SETQ FORALL-RESULT
                          (SETQ FORALL-ENDPTR
                                  (CONS
                                   ((LAMBDA (F) (DCFSF_0MK2 'NEQ (CAR F)))
                                    (CAR F))
                                   NIL)))
                 LOOPLABEL
                  (SETQ F (CDR F))
                  (COND ((NULL F) (RETURN FORALL-RESULT)))
                  (RPLACD FORALL-ENDPTR
                          (CONS
                           ((LAMBDA (F) (DCFSF_0MK2 'NEQ (CAR F))) (CAR F))
                           NIL))
                  (SETQ FORALL-ENDPTR (CDR FORALL-ENDPTR))
                  (GO LOOPLABEL)))
               (T (LIST (DCFSF_0MK2 'NEQ (CAR VNEL))))))
      (SETQ OEQL (PROG1 (CAR PL) (SETQ PL (CDR PL))))
      (SETQ OEQL
              (PROG (F FORALL-RESULT FORALL-ENDPTR)
                (SETQ F OEQL)
                (COND ((NULL F) (RETURN NIL)))
                (SETQ FORALL-RESULT
                        (SETQ FORALL-ENDPTR
                                (CONS
                                 ((LAMBDA (F) (DCFSF_0MK2 'EQUAL F)) (CAR F))
                                 NIL)))
               LOOPLABEL
                (SETQ F (CDR F))
                (COND ((NULL F) (RETURN FORALL-RESULT)))
                (RPLACD FORALL-ENDPTR
                        (CONS ((LAMBDA (F) (DCFSF_0MK2 'EQUAL F)) (CAR F))
                              NIL))
                (SETQ FORALL-ENDPTR (CDR FORALL-ENDPTR))
                (GO LOOPLABEL)))
      (SETQ ONEL (PROG1 (CAR PL) (SETQ PL (CDR PL))))
      (SETQ ONEL
              (PROG (F FORALL-RESULT FORALL-ENDPTR)
                (SETQ F ONEL)
                (COND ((NULL F) (RETURN NIL)))
                (SETQ FORALL-RESULT
                        (SETQ FORALL-ENDPTR
                                (CONS
                                 ((LAMBDA (F) (DCFSF_0MK2 'NEQ F)) (CAR F))
                                 NIL)))
               LOOPLABEL
                (SETQ F (CDR F))
                (COND ((NULL F) (RETURN FORALL-RESULT)))
                (RPLACD FORALL-ENDPTR
                        (CONS ((LAMBDA (F) (DCFSF_0MK2 'NEQ F)) (CAR F)) NIL))
                (SETQ FORALL-ENDPTR (CDR FORALL-ENDPTR))
                (GO LOOPLABEL)))
      (RETURN (LTO_NCONCN (LIST VEQL VNEL OEQL ONEL))))) 
(PUT 'PL_SIMPL 'NUMBER-OF-ARGS 1) 
(PUT 'PL_SIMPL 'DEFINED-ON-LINE '1023) 
(PUT 'PL_SIMPL 'DEFINED-IN-FILE 'REDLOG/DCFSF/DCFSFQE.RED) 
(PUT 'PL_SIMPL 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE PL_SIMPL (PL)
    (PROG (VEQL VNEL OEQL ONEL A BRK NVEQL NVNEL NOEQL NONEL W)
      (COND ((NOT *RLPLSIMPL) (RETURN PL)))
      (PROG (G174 G175)
        (SETQ G174 (PL_2L PL))
        (SETQ G175 G174)
        (SETQ VEQL (CAR G174))
        (SETQ G174 (CDR G174))
        (SETQ VNEL (CAR G174))
        (SETQ G174 (CDR G174))
        (SETQ OEQL (CAR G174))
        (SETQ G174 (CDR G174))
        (SETQ ONEL (CAR G174))
        (SETQ G174 (CDR G174))
        (RETURN G175))
      (SETQ NVEQL VEQL)
      (SETQ NVNEL VNEL)
      (SETQ BRK NIL)
      (PROG ()
       WHILELABEL
        (COND ((NOT (AND OEQL (NOT BRK))) (RETURN NIL)))
        (PROGN
         (SETQ A (PROG1 (CAR OEQL) (SETQ OEQL (CDR OEQL))))
         (COND
          ((OR (ATOM A) (ATOM (CAR A))) (COND ((NOT (NULL A)) (SETQ BRK T))))
          (T (SETQ NOEQL (LTO_INSERT A NOEQL)))))
        (GO WHILELABEL))
      (COND (BRK (RETURN (PL_FALSE))))
      (SETQ NOEQL (REVERSIP NOEQL))
      (SETQ BRK NIL)
      (PROG ()
       WHILELABEL
        (COND ((NOT (AND ONEL (NOT BRK))) (RETURN NIL)))
        (PROGN
         (SETQ A (PROG1 (CAR ONEL) (SETQ ONEL (CDR ONEL))))
         (COND ((OR (ATOM A) (ATOM (CAR A))) (COND ((NULL A) (SETQ BRK T))))
               (T (SETQ NONEL (LTO_INSERT A NONEL)))))
        (GO WHILELABEL))
      (COND (BRK (RETURN (PL_FALSE))))
      (SETQ NONEL (REVERSIP NONEL))
      (SETQ PL (PL_NEW NVEQL NVNEL NOEQL NONEL))
      (COND
       ((EQ
         (CL_SIMPL
          ((LAMBDA (G177)
             (COND ((AND G177 (CDR G177)) (CONS 'AND G177))
                   ((NULL G177) (COND ((EQ 'AND 'AND) 'TRUE) (T 'FALSE)))
                   (T (CAR G177))))
           (PL_2ATL PL))
          NIL (MINUS 1))
         'FALSE)
        (RETURN (PL_FALSE))))
      (RETURN PL))) 
(PUT 'PL_FALSE 'NUMBER-OF-ARGS 0) 
(PUT 'PL_FALSE 'DEFINED-ON-LINE '1056) 
(PUT 'PL_FALSE 'DEFINED-IN-FILE 'REDLOG/DCFSF/DCFSFQE.RED) 
(PUT 'PL_FALSE 'PROCEDURE_TYPE '(ARROW UNIT GENERAL)) 
(DE PL_FALSE NIL '(*RL_PL NIL (1) (1) NIL)) 
(PUT 'PL_FALSEP 'NUMBER-OF-ARGS 1) 
(PUT 'PL_FALSEP 'DEFINED-ON-LINE '1059) 
(PUT 'PL_FALSEP 'DEFINED-IN-FILE 'REDLOG/DCFSF/DCFSFQE.RED) 
(PUT 'PL_FALSEP 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE PL_FALSEP (PL) (EQUAL PL (PL_FALSE))) 
(PUT 'DCFSF_ENF1 'NUMBER-OF-ARGS 3) 
(PUT 'DCFSF_ENF1 'DEFINED-ON-LINE '1062) 
(PUT 'DCFSF_ENF1 'DEFINED-IN-FILE 'REDLOG/DCFSF/DCFSFQE.RED) 
(PUT 'DCFSF_ENF1 'PROCEDURE_TYPE
     '(ARROW (TIMES GENERAL GENERAL GENERAL) GENERAL)) 
(DE DCFSF_ENF1 (PLL V THEO)
    (PROG (PL VEQL VNEL OEQL ONEL NPLL VEQ1 VEQL1_ I R S O D APLL W)
      (SETQ NPLL (PLL_NEW))
      (PROG ()
       WHILELABEL
        (COND ((NOT (NOT (PLL_EMPTYP PLL))) (RETURN NIL)))
        (PROGN
         (COND (*RLVERBOSE (IOTO_PRIN2 (LIST "[" (PLL_LENGTH PLL)))))
         (SETQ PL
                 (PROG (A)
                   (SETQ A (CADR PLL))
                   (RPLACD PLL (CDDR PLL))
                   (RETURN A)))
         (PROG (G178 G179)
           (SETQ G178 (PL_2L PL))
           (SETQ G179 G178)
           (SETQ VEQL (CAR G178))
           (SETQ G178 (CDR G178))
           (SETQ VNEL (CAR G178))
           (SETQ G178 (CDR G178))
           (SETQ OEQL (CAR G178))
           (SETQ G178 (CDR G178))
           (SETQ ONEL (CAR G178))
           (SETQ G178 (CDR G178))
           (RETURN G179))
         (SETQ VEQL (SORT VEQL (FUNCTION DCFSF_QEORDP)))
         (COND
          ((NOT VEQL)
           (PROGN
            (COND (*RLVERBOSE (IOTO_PRIN2 "] ")))
            (SETQ NPLL (PLL_INS (LIST PL) NPLL))))
          (T
           (PROGN
            (SETQ VEQ1 (CAR VEQL))
            (SETQ VEQL1_ (CDR VEQL))
            (COND
             (*RLVERBOSE
              (PROGN
               (PROG (G180)
                 (SETQ G180 (DCFSF_ORDDEGF VEQ1 V))
                 (SETQ O (CAR G180))
                 (SETQ D (CDR G180))
                 (RETURN G180))
               (IOTO_PRIN2 (LIST ":(" O "," D ")] ")))))
            (SETQ I (CDAR VEQ1))
            (SETQ R (CDR VEQ1))
            (SETQ S (DCFSF_SEPARANT VEQ1))
            (SETQ APLL
                    (PL_FACTORIZE (DCFSF_ENF1C1 I R VEQL1_ VNEL OEQL ONEL V)))
            (SETQ PLL (PLL_INS APLL PLL))
            (COND
             ((NEQ (CDAAR VEQ1) 1)
              (PROGN
               (SETQ APLL
                       (PL_FACTORIZE
                        (DCFSF_ENF1C2 I R S VEQL VNEL OEQL ONEL V)))
               (SETQ PLL (PLL_INS APLL PLL)))))
            (COND
             (VEQL1_
              (PROGN
               (SETQ APLL
                       (PL_FACTORIZE
                        (DCFSF_ENF1C3 I S VEQ1 VEQL1_ VNEL OEQL ONEL V)))
               (SETQ PLL (PLL_INS APLL PLL))))
             (T
              (PROGN
               (SETQ APLL
                       (PL_FACTORIZE
                        (DCFSF_ENF1C3B I S VEQ1 VEQL VNEL OEQL ONEL V)))
               (COND
                ((AND (SETQ W (PLL_2L APLL)) (CDR W))
                 (SETQ PLL (PLL_INS APLL PLL)))
                (T (SETQ NPLL (PLL_INS APLL NPLL)))))))))))
        (GO WHILELABEL))
      (RETURN NPLL))) 
(PUT 'DCFSF_QEORDP 'NUMBER-OF-ARGS 2) 
(PUT 'DCFSF_QEORDP 'DEFINED-ON-LINE '1113) 
(PUT 'DCFSF_QEORDP 'DEFINED-IN-FILE 'REDLOG/DCFSF/DCFSFQE.RED) 
(PUT 'DCFSF_QEORDP 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE DCFSF_QEORDP (F1 F2)
    (PROG (P1 P2 V)
      (SETQ V (DCFSF_MVAR F1))
      (SETQ P1 (DCFSF_ORDDEGF F1 V))
      (SETQ P2 (DCFSF_ORDDEGF F2 V))
      (RETURN
       (OR (LESSP (CAR P1) (CAR P2))
           (AND (EQUAL (CAR P1) (CAR P2)) (LESSP (CDR P1) (CDR P2))))))) 
(PUT 'DCFSF_ENF1C1 'NUMBER-OF-ARGS 7) 
(PUT 'DCFSF_ENF1C1 'DEFINED-ON-LINE '1124) 
(PUT 'DCFSF_ENF1C1 'DEFINED-IN-FILE 'REDLOG/DCFSF/DCFSFQE.RED) 
(PUT 'DCFSF_ENF1C1 'PROCEDURE_TYPE
     '(ARROW (TIMES GENERAL GENERAL GENERAL GENERAL GENERAL GENERAL GENERAL)
       GENERAL)) 
(DE DCFSF_ENF1C1 (I R VEQL1_ VNEL OEQL ONEL V)
    (PROG (VEQL1 OEQL1)
      (PROG (G181)
        (SETQ G181 (DCFSF_INSERTEQ VEQL1_ OEQL R V))
        (SETQ VEQL1 (CAR G181))
        (SETQ OEQL1 (CDR G181))
        (RETURN G181))
      (PROG (G182)
        (SETQ G182 (DCFSF_INSERTEQ VEQL1 OEQL1 I V))
        (SETQ VEQL1 (CAR G182))
        (SETQ OEQL1 (CDR G182))
        (RETURN G182))
      (RETURN (PL_NEW VEQL1 VNEL OEQL1 ONEL)))) 
(PUT 'DCFSF_ENF1C2 'NUMBER-OF-ARGS 8) 
(PUT 'DCFSF_ENF1C2 'DEFINED-ON-LINE '1134) 
(PUT 'DCFSF_ENF1C2 'DEFINED-IN-FILE 'REDLOG/DCFSF/DCFSFQE.RED) 
(PUT 'DCFSF_ENF1C2 'PROCEDURE_TYPE
     '(ARROW
       (TIMES GENERAL GENERAL GENERAL GENERAL GENERAL GENERAL GENERAL GENERAL)
       GENERAL)) 
(DE DCFSF_ENF1C2 (I R S VEQL VNEL OEQL ONEL V)
    (PROG (VEQL1 VNEL1 OEQL1 ONEL1)
      (PROG (G183)
        (SETQ G183 (DCFSF_INSERTNE VNEL ONEL I V))
        (SETQ VNEL1 (CAR G183))
        (SETQ ONEL1 (CDR G183))
        (RETURN G183))
      (PROG (G184)
        (SETQ G184 (DCFSF_REDUCEEQ VEQL OEQL S V))
        (SETQ VEQL1 (CAR G184))
        (SETQ OEQL1 (CDR G184))
        (RETURN G184))
      (SETQ VEQL1 (LTO_INSERT S VEQL1))
      (PROG (G185)
        (SETQ G185 (DCFSF_REDUCENE VNEL1 ONEL1 S V))
        (SETQ VNEL1 (CAR G185))
        (SETQ ONEL1 (CDR G185))
        (RETURN G185))
      (RETURN (PL_NEW VEQL1 VNEL1 OEQL1 ONEL1)))) 
(PUT 'DCFSF_ENF1C3 'NUMBER-OF-ARGS 8) 
(PUT 'DCFSF_ENF1C3 'DEFINED-ON-LINE '1146) 
(PUT 'DCFSF_ENF1C3 'DEFINED-IN-FILE 'REDLOG/DCFSF/DCFSFQE.RED) 
(PUT 'DCFSF_ENF1C3 'PROCEDURE_TYPE
     '(ARROW
       (TIMES GENERAL GENERAL GENERAL GENERAL GENERAL GENERAL GENERAL GENERAL)
       GENERAL)) 
(DE DCFSF_ENF1C3 (I S VEQ1 VEQL1_ VNEL OEQL ONEL V)
    (PROG (VEQL1 VNEL1 OEQL1 ONEL1)
      (PROG (G186)
        (SETQ G186 (DCFSF_INSERTNE VNEL ONEL I V))
        (SETQ VNEL1 (CAR G186))
        (SETQ ONEL1 (CDR G186))
        (RETURN G186))
      (PROG (G187)
        (SETQ G187 (DCFSF_INSERTNE VNEL1 ONEL1 S V))
        (SETQ VNEL1 (CAR G187))
        (SETQ ONEL1 (CDR G187))
        (RETURN G187))
      (PROG (G188)
        (SETQ G188 (DCFSF_REDUCENE VNEL1 ONEL1 VEQ1 V))
        (SETQ VNEL1 (CAR G188))
        (SETQ ONEL1 (CDR G188))
        (RETURN G188))
      (PROG (G189)
        (SETQ G189 (DCFSF_REDUCEEQ VEQL1_ OEQL VEQ1 V))
        (SETQ VEQL1 (CAR G189))
        (SETQ OEQL1 (CDR G189))
        (RETURN G189))
      (SETQ VEQL1 (LTO_INSERT VEQ1 VEQL1))
      (RETURN (PL_NEW VEQL1 VNEL1 OEQL1 ONEL1)))) 
(PUT 'DCFSF_ENF1C3B 'NUMBER-OF-ARGS 8) 
(PUT 'DCFSF_ENF1C3B 'DEFINED-ON-LINE '1159) 
(PUT 'DCFSF_ENF1C3B 'DEFINED-IN-FILE 'REDLOG/DCFSF/DCFSFQE.RED) 
(PUT 'DCFSF_ENF1C3B 'PROCEDURE_TYPE
     '(ARROW
       (TIMES GENERAL GENERAL GENERAL GENERAL GENERAL GENERAL GENERAL GENERAL)
       GENERAL)) 
(DE DCFSF_ENF1C3B (I S VEQ1 VEQL VNEL OEQL ONEL V)
    (PROG (VNEL1 ONEL1)
      (PROG (G190)
        (SETQ G190 (DCFSF_INSERTNE VNEL ONEL I V))
        (SETQ VNEL1 (CAR G190))
        (SETQ ONEL1 (CDR G190))
        (RETURN G190))
      (PROG (G191)
        (SETQ G191 (DCFSF_INSERTNE VNEL1 ONEL1 S V))
        (SETQ VNEL1 (CAR G191))
        (SETQ ONEL1 (CDR G191))
        (RETURN G191))
      (PROG (G192)
        (SETQ G192 (DCFSF_REDUCENE VNEL1 ONEL1 VEQ1 V))
        (SETQ VNEL1 (CAR G192))
        (SETQ ONEL1 (CDR G192))
        (RETURN G192))
      (RETURN (PL_NEW VEQL VNEL1 OEQL ONEL1)))) 
(PUT 'DCFSF_REDUCEEQ 'NUMBER-OF-ARGS 4) 
(PUT 'DCFSF_REDUCEEQ 'DEFINED-ON-LINE '1171) 
(PUT 'DCFSF_REDUCEEQ 'DEFINED-IN-FILE 'REDLOG/DCFSF/DCFSFQE.RED) 
(PUT 'DCFSF_REDUCEEQ 'PROCEDURE_TYPE
     '(ARROW (TIMES GENERAL GENERAL GENERAL GENERAL) GENERAL)) 
(DE DCFSF_REDUCEEQ (FL OFL G V)
    (PROG (W VFL)
      (SETQ W (DCFSF_REDUCE FL G V))
      (PROG (F)
        (SETQ F W)
       LAB
        (COND ((NULL F) (RETURN NIL)))
        ((LAMBDA (F)
           (PROG (G193)
             (SETQ G193 (DCFSF_INSERTEQ VFL OFL F V))
             (SETQ VFL (CAR G193))
             (SETQ OFL (CDR G193))
             (RETURN G193)))
         (CAR F))
        (SETQ F (CDR F))
        (GO LAB))
      (RETURN (CONS VFL OFL)))) 
(PUT 'DCFSF_REDUCENE 'NUMBER-OF-ARGS 4) 
(PUT 'DCFSF_REDUCENE 'DEFINED-ON-LINE '1179) 
(PUT 'DCFSF_REDUCENE 'DEFINED-IN-FILE 'REDLOG/DCFSF/DCFSFQE.RED) 
(PUT 'DCFSF_REDUCENE 'PROCEDURE_TYPE
     '(ARROW (TIMES GENERAL GENERAL GENERAL GENERAL) GENERAL)) 
(DE DCFSF_REDUCENE (FL OFL G V)
    (PROG (W VFL)
      (SETQ W (DCFSF_REDUCE FL G V))
      (SETQ VFL (LIST 1))
      (PROG (F)
        (SETQ F W)
       LAB
        (COND ((NULL F) (RETURN NIL)))
        ((LAMBDA (F)
           (PROG (G194)
             (SETQ G194 (DCFSF_INSERTNE VFL OFL F V))
             (SETQ VFL (CAR G194))
             (SETQ OFL (CDR G194))
             (RETURN G194)))
         (CAR F))
        (SETQ F (CDR F))
        (GO LAB))
      (RETURN (CONS VFL OFL)))) 
(PUT 'DCFSF_REDUCE_OLD 'NUMBER-OF-ARGS 3) 
(PUT 'DCFSF_REDUCE_OLD 'DEFINED-ON-LINE '1188) 
(PUT 'DCFSF_REDUCE_OLD 'DEFINED-IN-FILE 'REDLOG/DCFSF/DCFSFQE.RED) 
(PUT 'DCFSF_REDUCE_OLD 'PROCEDURE_TYPE
     '(ARROW (TIMES GENERAL GENERAL GENERAL) GENERAL)) 
(DE DCFSF_REDUCE_OLD (FL G V)
    (PROG (OF DF OG DG G1 W VFL OFL)
      (PROG (G195)
        (SETQ G195 (DCFSF_ORDDEGF G V))
        (SETQ OG (CAR G195))
        (SETQ DG (CDR G195))
        (RETURN G195))
      (SETQ W
              (PROG (F FORALL-RESULT FORALL-ENDPTR)
                (SETQ F FL)
                (COND ((NULL F) (RETURN NIL)))
                (SETQ FORALL-RESULT
                        (SETQ FORALL-ENDPTR
                                (CONS
                                 ((LAMBDA (F)
                                    (PROGN
                                     (PROG (G196)
                                       (SETQ G196 (DCFSF_ORDDEGF F V))
                                       (SETQ OF (CAR G196))
                                       (SETQ DF (CDR G196))
                                       (RETURN G196))
                                     (COND
                                      ((OR (LESSP OF OG)
                                           (AND (EQUAL OF OG) (LESSP DF DG)))
                                       F)
                                      ((EQN OF OG)
                                       (CDR
                                        (QREMF
                                         ((LAMBDA (G198)
                                            (COND
                                             (*PHYSOP-LOADED
                                              (PHYSOP-MULTF F G198))
                                             (T (POLY-MULTF F G198))))
                                          (EXPTF (CDAR G)
                                                 (PLUS (DIFFERENCE DF DG) 1)))
                                         G)))
                                      (T
                                       (PROGN
                                        (SETQ G1
                                                (DCFSF_DERIVATIONF G
                                                 (DIFFERENCE OF OG) NIL))
                                        (CDR
                                         (QREMF
                                          ((LAMBDA (G200)
                                             (COND
                                              (*PHYSOP-LOADED
                                               (PHYSOP-MULTF F G200))
                                              (T (POLY-MULTF F G200))))
                                           (EXPTF (CDAR G1) DF))
                                          G1)))))))
                                  (CAR F))
                                 NIL)))
               LOOPLABEL
                (SETQ F (CDR F))
                (COND ((NULL F) (RETURN FORALL-RESULT)))
                (RPLACD FORALL-ENDPTR
                        (CONS
                         ((LAMBDA (F)
                            (PROGN
                             (PROG (G196)
                               (SETQ G196 (DCFSF_ORDDEGF F V))
                               (SETQ OF (CAR G196))
                               (SETQ DF (CDR G196))
                               (RETURN G196))
                             (COND
                              ((OR (LESSP OF OG)
                                   (AND (EQUAL OF OG) (LESSP DF DG)))
                               F)
                              ((EQN OF OG)
                               (CDR
                                (QREMF
                                 ((LAMBDA (G198)
                                    (COND
                                     (*PHYSOP-LOADED (PHYSOP-MULTF F G198))
                                     (T (POLY-MULTF F G198))))
                                  (EXPTF (CDAR G) (PLUS (DIFFERENCE DF DG) 1)))
                                 G)))
                              (T
                               (PROGN
                                (SETQ G1
                                        (DCFSF_DERIVATIONF G (DIFFERENCE OF OG)
                                         NIL))
                                (CDR
                                 (QREMF
                                  ((LAMBDA (G200)
                                     (COND
                                      (*PHYSOP-LOADED (PHYSOP-MULTF F G200))
                                      (T (POLY-MULTF F G200))))
                                   (EXPTF (CDAR G1) DF))
                                  G1)))))))
                          (CAR F))
                         NIL))
                (SETQ FORALL-ENDPTR (CDR FORALL-ENDPTR))
                (GO LOOPLABEL)))
      (RETURN W))) 
(PUT 'DCFSF_REDUCE 'NUMBER-OF-ARGS 3) 
(PUT 'DCFSF_REDUCE 'DEFINED-ON-LINE '1206) 
(PUT 'DCFSF_REDUCE 'DEFINED-IN-FILE 'REDLOG/DCFSF/DCFSFQE.RED) 
(PUT 'DCFSF_REDUCE 'PROCEDURE_TYPE
     '(ARROW (TIMES GENERAL GENERAL GENERAL) GENERAL)) 
(DE DCFSF_REDUCE (FL G V)
    (PROG (OF DF OG DG G1 W VFL OFL)
      (PROG (G201)
        (SETQ G201 (DCFSF_ORDDEGF G V))
        (SETQ OG (CAR G201))
        (SETQ DG (CDR G201))
        (RETURN G201))
      (SETQ W
              (PROG (F FORALL-RESULT FORALL-ENDPTR)
                (SETQ F FL)
                (COND ((NULL F) (RETURN NIL)))
                (SETQ FORALL-RESULT
                        (SETQ FORALL-ENDPTR
                                (CONS
                                 ((LAMBDA (F)
                                    (PROGN
                                     (PROG (G202)
                                       (SETQ G202 (DCFSF_ORDDEGF F V))
                                       (SETQ OF (CAR G202))
                                       (SETQ DF (CDR G202))
                                       (RETURN G202))
                                     (PROG ()
                                      WHILELABEL
                                       (COND
                                        ((NOT
                                          (OR (GREATERP OF OG)
                                              (AND (EQUAL OF OG) (GEQ DF DG))))
                                         (RETURN NIL)))
                                       (PROGN
                                        (COND
                                         ((EQN OF OG)
                                          (SETQ F
                                                  (CDR
                                                   (QREMF
                                                    ((LAMBDA (G204)
                                                       (COND
                                                        (*PHYSOP-LOADED
                                                         (PHYSOP-MULTF F G204))
                                                        (T
                                                         (POLY-MULTF F G204))))
                                                     (EXPTF (CDAR G)
                                                            (PLUS
                                                             (DIFFERENCE DF DG)
                                                             1)))
                                                    G))))
                                         (T
                                          (PROGN
                                           (SETQ G1
                                                   (DCFSF_DERIVATIONF G
                                                    (DIFFERENCE OF OG) NIL))
                                           (SETQ F
                                                   (CDR
                                                    (QREMF
                                                     ((LAMBDA (G206)
                                                        (COND
                                                         (*PHYSOP-LOADED
                                                          (PHYSOP-MULTF F
                                                           G206))
                                                         (T
                                                          (POLY-MULTF F
                                                                      G206))))
                                                      (EXPTF (CDAR G1) DF))
                                                     G1))))))
                                        (PROG (G207)
                                          (SETQ G207 (DCFSF_ORDDEGF F V))
                                          (SETQ OF (CAR G207))
                                          (SETQ DF (CDR G207))
                                          (RETURN G207)))
                                       (GO WHILELABEL))
                                     F))
                                  (CAR F))
                                 NIL)))
               LOOPLABEL
                (SETQ F (CDR F))
                (COND ((NULL F) (RETURN FORALL-RESULT)))
                (RPLACD FORALL-ENDPTR
                        (CONS
                         ((LAMBDA (F)
                            (PROGN
                             (PROG (G202)
                               (SETQ G202 (DCFSF_ORDDEGF F V))
                               (SETQ OF (CAR G202))
                               (SETQ DF (CDR G202))
                               (RETURN G202))
                             (PROG ()
                              WHILELABEL
                               (COND
                                ((NOT
                                  (OR (GREATERP OF OG)
                                      (AND (EQUAL OF OG) (GEQ DF DG))))
                                 (RETURN NIL)))
                               (PROGN
                                (COND
                                 ((EQN OF OG)
                                  (SETQ F
                                          (CDR
                                           (QREMF
                                            ((LAMBDA (G204)
                                               (COND
                                                (*PHYSOP-LOADED
                                                 (PHYSOP-MULTF F G204))
                                                (T (POLY-MULTF F G204))))
                                             (EXPTF (CDAR G)
                                                    (PLUS (DIFFERENCE DF DG)
                                                          1)))
                                            G))))
                                 (T
                                  (PROGN
                                   (SETQ G1
                                           (DCFSF_DERIVATIONF G
                                            (DIFFERENCE OF OG) NIL))
                                   (SETQ F
                                           (CDR
                                            (QREMF
                                             ((LAMBDA (G206)
                                                (COND
                                                 (*PHYSOP-LOADED
                                                  (PHYSOP-MULTF F G206))
                                                 (T (POLY-MULTF F G206))))
                                              (EXPTF (CDAR G1) DF))
                                             G1))))))
                                (PROG (G207)
                                  (SETQ G207 (DCFSF_ORDDEGF F V))
                                  (SETQ OF (CAR G207))
                                  (SETQ DF (CDR G207))
                                  (RETURN G207)))
                               (GO WHILELABEL))
                             F))
                          (CAR F))
                         NIL))
                (SETQ FORALL-ENDPTR (CDR FORALL-ENDPTR))
                (GO LOOPLABEL)))
      (RETURN W))) 
(PUT 'DCFSF_INSERTEQ 'NUMBER-OF-ARGS 4) 
(PUT 'DCFSF_INSERTEQ 'DEFINED-ON-LINE '1226) 
(PUT 'DCFSF_INSERTEQ 'DEFINED-IN-FILE 'REDLOG/DCFSF/DCFSFQE.RED) 
(PUT 'DCFSF_INSERTEQ 'PROCEDURE_TYPE
     '(ARROW (TIMES GENERAL GENERAL GENERAL GENERAL) GENERAL)) 
(DE DCFSF_INSERTEQ (VL OL F V)
    (COND ((EQ (DCFSF_MVAR F) V) (CONS (LTO_INSERT F VL) OL))
          (T (CONS VL (LTO_INSERT F OL))))) 
(PUT 'DCFSF_INSERTNE 'NUMBER-OF-ARGS 4) 
(PUT 'DCFSF_INSERTNE 'DEFINED-ON-LINE '1232) 
(PUT 'DCFSF_INSERTNE 'DEFINED-IN-FILE 'REDLOG/DCFSF/DCFSFQE.RED) 
(PUT 'DCFSF_INSERTNE 'PROCEDURE_TYPE
     '(ARROW (TIMES GENERAL GENERAL GENERAL GENERAL) GENERAL)) 
(DE DCFSF_INSERTNE (VL OL F V)
    (COND
     ((EQ (DCFSF_MVAR F) V)
      (CONS
       (LIST
        (SFTO_SQFPARTF
         (COND (*PHYSOP-LOADED (PHYSOP-MULTF F (CAR VL)))
               (T (POLY-MULTF F (CAR VL))))))
       OL))
     (T (CONS VL (LTO_INSERT F OL))))) 
(ENDMODULE) 