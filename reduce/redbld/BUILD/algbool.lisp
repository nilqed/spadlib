(cl:declaim (cl:optimize cl:debug cl:safety))
(cl:declaim (sb-ext:muffle-conditions sb-ext:compiler-note cl:style-warning))
(MODULE (LIST 'ALGBOOL)) 
(PUT 'EVALEQUAL 'NUMBER-OF-ARGS 2) 
(PUT 'EVALEQUAL 'DEFINED-ON-LINE '32) 
(PUT 'EVALEQUAL 'DEFINED-IN-FILE 'ALG/ALGBOOL.RED) 
(PUT 'EVALEQUAL 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE EVALEQUAL (U V)
    (PROG (X)
      (RETURN
       (COND ((NEQ (SETQ X (GETRTYPE U)) (GETRTYPE V)) NIL)
             ((NULL X)
              (AND (NUMBERP (SETQ X (REVAL1 (LIST 'DIFFERENCE U V) T)))
                   (ZEROP X)))
             (T (EQUAL U V)))))) 
(PUT 'EQUAL 'BOOLFN 'EVALEQUAL) 
(PUT 'EQUAL 'RTYPEFN 'QUOTEEQUATION) 
(DE QUOTEEQUATION (U) 'EQUATION) 
(PUT 'QUOTEEQUATION 'NUMBER-OF-ARGS 1) 
(PUT 'QUOTEEQUATION 'DEFINED-ON-LINE '49) 
(PUT 'QUOTEEQUATION 'DEFINED-IN-FILE 'ALG/ALGBOOL.RED) 
(PUT 'QUOTEEQUATION 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(PUTC 'QUOTEEQUATION 'INLINE '(LAMBDA (U) 'EQUATION)) 
(PUT 'EVALGREATERP 'NUMBER-OF-ARGS 2) 
(PUT 'EVALGREATERP 'DEFINED-ON-LINE '51) 
(PUT 'EVALGREATERP 'DEFINED-IN-FILE 'ALG/ALGBOOL.RED) 
(PUT 'EVALGREATERP 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE EVALGREATERP (U V)
    ((LAMBDA (X)
       (COND
        ((OR (NOT (ATOM (CDR X)))
             (NOT (OR (ATOM (CAR X)) (ATOM (CAR (CAR X))))))
         (TYPERR (MK*SQ (COND ((MINUSF (CAR X)) (NEGSQ X)) (T X))) "number"))
        (T (AND (CAR X) (|:MINUSP| (CAR X))))))
     (SIMP* (LIST 'DIFFERENCE V U)))) 
(PUT 'GREATERP 'BOOLFN 'EVALGREATERP) 
(DE EVALGEQ (U V) (NOT (EVALGREATERP V U))) 
(PUT 'EVALGEQ 'NUMBER-OF-ARGS 2) 
(PUT 'EVALGEQ 'DEFINED-ON-LINE '60) 
(PUT 'EVALGEQ 'DEFINED-IN-FILE 'ALG/ALGBOOL.RED) 
(PUT 'EVALGEQ 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(PUTC 'EVALGEQ 'INLINE '(LAMBDA (U V) (NOT (EVALGREATERP V U)))) 
(PUT 'GEQ 'BOOLFN 'EVALGEQ) 
(DE EVALLESSP (U V) (EVALGREATERP V U)) 
(PUT 'EVALLESSP 'NUMBER-OF-ARGS 2) 
(PUT 'EVALLESSP 'DEFINED-ON-LINE '64) 
(PUT 'EVALLESSP 'DEFINED-IN-FILE 'ALG/ALGBOOL.RED) 
(PUT 'EVALLESSP 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(PUTC 'EVALLESSP 'INLINE '(LAMBDA (U V) (EVALGREATERP V U))) 
(PUT 'LESSP 'BOOLFN 'EVALLESSP) 
(DE EVALLEQ (U V) (NOT (EVALGREATERP U V))) 
(PUT 'EVALLEQ 'NUMBER-OF-ARGS 2) 
(PUT 'EVALLEQ 'DEFINED-ON-LINE '68) 
(PUT 'EVALLEQ 'DEFINED-IN-FILE 'ALG/ALGBOOL.RED) 
(PUT 'EVALLEQ 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(PUTC 'EVALLEQ 'INLINE '(LAMBDA (U V) (NOT (EVALGREATERP U V)))) 
(PUT 'LEQ 'BOOLFN 'EVALLEQ) 
(DE EVALNEQ (U V) (NOT (EVALEQUAL U V))) 
(PUT 'EVALNEQ 'NUMBER-OF-ARGS 2) 
(PUT 'EVALNEQ 'DEFINED-ON-LINE '72) 
(PUT 'EVALNEQ 'DEFINED-IN-FILE 'ALG/ALGBOOL.RED) 
(PUT 'EVALNEQ 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(PUTC 'EVALNEQ 'INLINE '(LAMBDA (U V) (NOT (EVALEQUAL U V)))) 
(PUT 'NEQ 'BOOLFN 'EVALNEQ) 
(PUT 'EVALNUMBERP 'NUMBER-OF-ARGS 1) 
(PUT 'EVALNUMBERP 'DEFINED-ON-LINE '76) 
(PUT 'EVALNUMBERP 'DEFINED-IN-FILE 'ALG/ALGBOOL.RED) 
(PUT 'EVALNUMBERP 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE EVALNUMBERP (U)
    ((LAMBDA (X)
       (COND ((ATOM X) (NUMBERP X))
             ((OR (NOT (EQ (CAR X) '*SQ)) (NOT (ATOM (CDR (CADR X))))) NIL)
             (T
              ((LAMBDA (Y) (OR (ATOM Y) (FLAGP (CAR Y) 'NUMBERTAG)))
               (CAR (CADR X))))))
     (REVAL1 U NIL))) 
(PUT 'NUMBERP 'BOOLFN 'EVALNUMBERP) 
(FLAG '(|:RD:| |:CR:| |:RN:| |:CRN:| |:MOD:| |:GI:|) 'NUMBERTAG) 
(PUT 'RATNUMP 'NUMBER-OF-ARGS 1) 
(PUT 'RATNUMP 'DEFINED-ON-LINE '88) 
(PUT 'RATNUMP 'DEFINED-IN-FILE 'ALG/ALGBOOL.RED) 
(PUT 'RATNUMP 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE RATNUMP (X)
    (AND (OR (ATOM (CAR (SETQ X (SIMP* X)))) (EQ (CAR (CAR X)) '|:RN:|))
         (ATOM (CDR X)))) 
(FLAG '(RATNUMP) 'BOOLEAN) 
(ENDMODULE) 