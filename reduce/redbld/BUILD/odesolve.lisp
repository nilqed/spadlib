(cl:declaim (cl:optimize cl:debug cl:safety))
(cl:declaim (sb-ext:muffle-conditions sb-ext:compiler-note cl:style-warning))
(MODULE (LIST 'ODESOLVE)) 
(SETK 'ODESOLVE_VERSION "ODESolve 1.065") 
(GLOBAL '(ODESOLVE-SUBPACKAGES*)) 
(SETQ ODESOLVE-SUBPACKAGES*
        '(ODEINTFC ODETOP ODELIN ODESPCFN ODENON1 ODENONN ODEPATCH)) 
(CREATE-PACKAGE (CONS 'ODESOLVE ODESOLVE-SUBPACKAGES*) NIL) 
(PUT 'DEG 'NUMBER-OF-ARGS 2) 
(PUT 'DEG 'DEFINED-ON-LINE '51) 
(PUT 'DEG 'DEFINED-IN-FILE 'ODESOLVE/ODESOLVE.RED) 
(PUT 'DEG 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE DEG (U KERN)
    ((LAMBDA (DMODE*)
       (PROGN
        (SETQ U (SIMP* U))
        (TSTPOLYARG (CDR U) KERN)
        (NUMRDEG (CAR U) KERN)))
     GDMODE*)) 
(SWITCH (LIST 'ODESOLVE_EXPLICIT)) 
(SWITCH (LIST 'ODESOLVE_EXPAND)) 
(SWITCH (LIST 'ODESOLVE_FULL)) 
(SWITCH (LIST 'ODESOLVE_IMPLICIT)) 
(SWITCH (LIST 'ODESOLVE_NOINT)) 
(SWITCH (LIST 'NOINT)) 
(SWITCH (LIST 'ODESOLVE_VERBOSE)) 
(SWITCH (LIST 'ODESOLVE_BASIS)) 
(SWITCH (LIST 'ODESOLVE_NOSWAP)) 
(SWITCH (LIST 'ODESOLVE_NORECURSE)) 
(SWITCH (LIST 'ODESOLVE_FAST)) 
(SWITCH (LIST 'ODESOLVE_CHECK)) 
(FLUID
 '(*EVALLHSEQP *MULTIPLICITIES *DIV *INTSTR *EXP *MCD *FACTOR *IFACTOR *PRECISE
   *FULLROOTS *TRIGFORM)) 
(FLUID '(KORD* DEPL*)) 
(FLUID '(*ODESOLVE-SOLVABLE-XY *DF_PARTIAL)) 
(FLAG '(MEMBER DELETE *EQN2A DEPENDS SMEMBER GENSYM) 'OPFN) 
(DE EQNP (U) (EQCAR U 'EQUAL)) 
(PUT 'EQNP 'NUMBER-OF-ARGS 1) 
(PUT 'EQNP 'DEFINED-ON-LINE '99) 
(PUT 'EQNP 'DEFINED-IN-FILE 'ODESOLVE/ODESOLVE.RED) 
(PUT 'EQNP 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(PUTC 'EQNP 'INLINE '(LAMBDA (U) (EQCAR U 'EQUAL))) 
(DE ODESOLVE-BASISP (SOLN)
    (AND (EQCAR (CADR SOLN) 'LIST) (NOT (EQCAR (CADADR SOLN) 'EQUAL)))) 
(PUT 'ODESOLVE-BASISP 'NUMBER-OF-ARGS 1) 
(PUT 'ODESOLVE-BASISP 'DEFINED-ON-LINE '102) 
(PUT 'ODESOLVE-BASISP 'DEFINED-IN-FILE 'ODESOLVE/ODESOLVE.RED) 
(PUT 'ODESOLVE-BASISP 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(PUTC 'ODESOLVE-BASISP 'INLINE
      '(LAMBDA (SOLN)
         (AND (EQCAR (CADR SOLN) 'LIST) (NOT (EQCAR (CADADR SOLN) 'EQUAL))))) 
(GLOBAL '(MULTIPLICITIES*)) 
(SHARE (LIST 'MULTIPLICITIES*)) 
(SWITCH (LIST 'TRODE)) 
(SHARE (LIST '*TRODE)) 
(DEFLIST '((TRACEODE RLIS) (TRACEODE* RLIS) (TRACEODE1 RLIS)) 'STAT) 
(GLOBAL '(TRACEODE-INPUTLIST)) 
(PUT 'TRACEODE-PRINT 'NUMBER-OF-ARGS 1) 
(PUT 'TRACEODE-PRINT 'DEFINED-ON-LINE '123) 
(PUT 'TRACEODE-PRINT 'DEFINED-IN-FILE 'ODESOLVE/ODESOLVE.RED) 
(PUT 'TRACEODE-PRINT 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE TRACEODE-PRINT (U)
    (PROG (ALG)
      (SETQ ALG (SETQ U (REVLIS (NCONC TRACEODE-INPUTLIST U))))
      (SETQ TRACEODE-INPUTLIST NIL)
      (PROG ()
       WHILELABEL
        (COND ((NOT (AND ALG (ATOM (CAR ALG)))) (RETURN NIL)))
        (SETQ ALG (CDR ALG))
        (GO WHILELABEL))
      (COND
       (ALG
        (PROGN
         (TERPRI* T)
         (PROG (EL)
           (SETQ EL U)
          LAB
           (COND ((NULL EL) (RETURN NIL)))
           ((LAMBDA (EL) (MAPRIN EL)) (CAR EL))
           (SETQ EL (CDR EL))
           (GO LAB))
         (TERPRI* T)))
       (T
        (PROGN
         (PROG (EL)
           (SETQ EL U)
          LAB
           (COND ((NULL EL) (RETURN NIL)))
           ((LAMBDA (EL) (PRIN2 EL)) (CAR EL))
           (SETQ EL (CDR EL))
           (GO LAB))
         (TERPRI)))))) 
(PUT 'TRACEODE 'NUMBER-OF-ARGS 1) 
(PUT 'TRACEODE 'DEFINED-ON-LINE '140) 
(PUT 'TRACEODE 'DEFINED-IN-FILE 'ODESOLVE/ODESOLVE.RED) 
(PUT 'TRACEODE 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE TRACEODE (U) (COND (*TRODE (TRACEODE-PRINT U)))) 
(PUT 'TRACEODE* 'NUMBER-OF-ARGS 1) 
(PUT 'TRACEODE* 'DEFINED-ON-LINE '145) 
(PUT 'TRACEODE* 'DEFINED-IN-FILE 'ODESOLVE/ODESOLVE.RED) 
(PUT 'TRACEODE* 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE TRACEODE* (U)
    (COND
     (*TRODE (PROG () (SETQ TRACEODE-INPUTLIST (NCONC TRACEODE-INPUTLIST U)))))) 
(PUT 'TRACEODE1 'NUMBER-OF-ARGS 1) 
(PUT 'TRACEODE1 'DEFINED-ON-LINE '152) 
(PUT 'TRACEODE1 'DEFINED-IN-FILE 'ODESOLVE/ODESOLVE.RED) 
(PUT 'TRACEODE1 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE TRACEODE1 (U) (COND ((EQUAL *TRODE 1) (TRACEODE-PRINT U)))) 
(AEVAL (OPERATOR (LIST 'ARBCONST))) 
(SETK '!ARBCONST (AEVAL 0)) 
(PUT 'NEWARBCONST 'NUMBER-OF-ARGS 0) 
(FLAG '(NEWARBCONST) 'OPFN) 
(PUT 'NEWARBCONST 'DEFINED-ON-LINE '164) 
(PUT 'NEWARBCONST 'DEFINED-IN-FILE 'ODESOLVE/ODESOLVE.RED) 
(PUT 'NEWARBCONST 'PROCEDURE_TYPE '(ARROW UNIT GENERAL)) 
(DE NEWARBCONST NIL
    (LIST 'ARBCONST (SETK '!ARBCONST (AEVAL (LIST 'PLUS '!ARBCONST 1))))) 
(PUT 'ODE-INT 'NUMBER-OF-ARGS 2) 
(FLAG '(ODE-INT) 'OPFN) 
(PUT 'ODE-INT 'DEFINED-ON-LINE '170) 
(PUT 'ODE-INT 'DEFINED-IN-FILE 'ODESOLVE/ODESOLVE.RED) 
(PUT 'ODE-INT 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE ODE-INT (Y X) (LIST 'INT (LIST 'TRIGSIMP Y) X)) 
(PUT 'ODESOLVE-MULTI-INT 'NUMBER-OF-ARGS 3) 
(FLAG '(ODESOLVE-MULTI-INT) 'OPFN) 
(PUT 'ODESOLVE-MULTI-INT 'DEFINED-ON-LINE '175) 
(PUT 'ODESOLVE-MULTI-INT 'DEFINED-IN-FILE 'ODESOLVE/ODESOLVE.RED) 
(PUT 'ODESOLVE-MULTI-INT 'PROCEDURE_TYPE
     '(ARROW (TIMES GENERAL GENERAL GENERAL) GENERAL)) 
(DE ODESOLVE-MULTI-INT (Y X M)
    (COND
     ((EVALGREATERP (AEVAL M) 0)
      (AEVAL
       (LIST 'ODESOLVE-MULTI-INT (LIST 'INT Y X) X (LIST 'DIFFERENCE M 1))))
     (T (AEVAL Y)))) 
(AEVAL (OPERATOR (LIST 'ODESOLVE-DF))) 
(ENDMODULE) 