(cl:declaim (cl:optimize cl:debug cl:safety))
(cl:declaim (sb-ext:muffle-conditions sb-ext:compiler-note cl:style-warning))
(MODULE (LIST 'GPARSER)) 
(NULL (SETQ *MODE 'SYMBOLIC)) 
(GLOBAL '(*RESERVEDOPS*)) 
(SETQ *RESERVEDOPS*
        '(AND RBLOCK COND DIFFERENCE EQUAL EXPT FOR GEQ GO GREATERP LEQ LESSP
              MAT MINUS NEQ NOT OR PLUS PROCEDURE PROGN QUOTIENT READ RECIP
              REPEAT RETURN SETQ TIMES WHILE WRITE)) 
(PUT 'GENTRANPARSE 'NUMBER-OF-ARGS 1) 
(PUT 'GENTRANPARSE 'DEFINED-ON-LINE '44) 
(PUT 'GENTRANPARSE 'DEFINED-IN-FILE 'GENTRAN/GPARSER.RED) 
(PUT 'GENTRANPARSE 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE GENTRANPARSE (FORMS)
    (PROG (FOUND_ERROR)
      (PROG (F)
        (SETQ F FORMS)
       LAB
        (COND ((NULL F) (RETURN NIL)))
        ((LAMBDA (F)
           (COND
            ((NOT (OR (GPSTMTP F) (GPEXPP F) (GPDEFNP F)))
             (PROGN
              (GENTRANERR 'E F "CANNOT BE TRANSLATED" NIL)
              (SETQ FOUND_ERROR 'T)
              NIL))))
         (CAR F))
        (SETQ F (CDR F))
        (GO LAB))
      (RETURN (NOT FOUND_ERROR)))) 
(PUT 'GPEXPP 'NUMBER-OF-ARGS 1) 
(PUT 'GPEXPP 'DEFINED-ON-LINE '58) 
(PUT 'GPEXPP 'DEFINED-IN-FILE 'GENTRAN/GPARSER.RED) 
(PUT 'GPEXPP 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE GPEXPP (EXP)
    (COND ((ATOM EXP) (OR (IDP EXP) (NUMBERP EXP)))
          ((MEMQ (CAR EXP) '(|:RD:| |:CR:| |:CRN:| |:GI:|)) T)
          ((EQ (CAR EXP) 'PLUS)
           (AND (GEQ (LENGTH EXP) 2) (GPEXPP (CADR EXP)) (GPEXP1P (CDDR EXP))))
          ((MEMQ (CAR EXP) '(MINUS RECIP))
           (AND (EQUAL (LENGTH EXP) 2) (GPEXPP (CADR EXP))))
          ((MEMQ (CAR EXP) '(DIFFERENCE QUOTIENT EXPT))
           (AND (EQUAL (LENGTH EXP) 3) (GPEXPP (CADR EXP))
                (GPEXPP (CADDR EXP))))
          ((EQ (CAR EXP) 'TIMES)
           (AND (GEQ (LENGTH EXP) 3) (GPEXPP (CADR EXP)) (GPEXPP (CADDR EXP))
                (GPEXP1P (CDDDR EXP))))
          ((EQ (CAR EXP) '|:RD:|) T)
          ((MEMQ (CAR EXP) '(|:CR:| |:CRN:| |:GI:|)) T)
          ((UNRESIDP (CAR EXP)) (GPARG1P (CDR EXP))))) 
(PUT 'GPEXP1P 'NUMBER-OF-ARGS 1) 
(PUT 'GPEXP1P 'DEFINED-ON-LINE '81) 
(PUT 'GPEXP1P 'DEFINED-IN-FILE 'GENTRAN/GPARSER.RED) 
(PUT 'GPEXP1P 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE GPEXP1P (EXP) (OR (NULL EXP) (AND (GPEXPP (CAR EXP)) (GPEXP1P (CDR EXP))))) 
(PUT 'GPLOGEXPP 'NUMBER-OF-ARGS 1) 
(PUT 'GPLOGEXPP 'DEFINED-ON-LINE '85) 
(PUT 'GPLOGEXPP 'DEFINED-IN-FILE 'GENTRAN/GPARSER.RED) 
(PUT 'GPLOGEXPP 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE GPLOGEXPP (EXP)
    (COND ((ATOM EXP) (IDP EXP))
          ((MEMQ (CAR EXP) '(EQUAL NEQ GREATERP GEQ LESSP LEQ))
           (AND (EQUAL (LENGTH EXP) 3) (GPEXPP (CADR EXP))
                (GPEXPP (CADDR EXP))))
          ((EQ (CAR EXP) 'NOT)
           (AND (EQUAL (LENGTH EXP) 2) (GPLOGEXPP (CADR EXP))))
          ((MEMQ (CAR EXP) '(AND OR))
           (AND (GEQ (LENGTH EXP) 3) (GPLOGEXPP (CADR EXP))
                (GPLOGEXPP (CADDR EXP)) (GPLOGEXP1P (CDDDR EXP))))
          ((UNRESIDP (CAR EXP)) (GPARG1P (CDR EXP))))) 
(PUT 'GPLOGEXP1P 'NUMBER-OF-ARGS 1) 
(PUT 'GPLOGEXP1P 'DEFINED-ON-LINE '103) 
(PUT 'GPLOGEXP1P 'DEFINED-IN-FILE 'GENTRAN/GPARSER.RED) 
(PUT 'GPLOGEXP1P 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE GPLOGEXP1P (EXP)
    (OR (NULL EXP) (AND (GPLOGEXPP (CAR EXP)) (GPLOGEXP1P (CDR EXP))))) 
(PUT 'GPARGP 'NUMBER-OF-ARGS 1) 
(PUT 'GPARGP 'DEFINED-ON-LINE '107) 
(PUT 'GPARGP 'DEFINED-IN-FILE 'GENTRAN/GPARSER.RED) 
(PUT 'GPARGP 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE GPARGP (EXP) (OR (STRINGP EXP) (GPEXPP EXP) (GPLOGEXPP EXP))) 
(PUT 'GPARG1P 'NUMBER-OF-ARGS 1) 
(PUT 'GPARG1P 'DEFINED-ON-LINE '111) 
(PUT 'GPARG1P 'DEFINED-IN-FILE 'GENTRAN/GPARSER.RED) 
(PUT 'GPARG1P 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE GPARG1P (EXP) (OR (NULL EXP) (AND (GPARGP (CAR EXP)) (GPARG1P (CDR EXP))))) 
(PUT 'GPVARP 'NUMBER-OF-ARGS 1) 
(PUT 'GPVARP 'DEFINED-ON-LINE '115) 
(PUT 'GPVARP 'DEFINED-IN-FILE 'GENTRAN/GPARSER.RED) 
(PUT 'GPVARP 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE GPVARP (EXP)
    (COND ((ATOM EXP) (IDP EXP))
          ((UNRESIDP (CAR EXP))
           (AND (GEQ (LENGTH EXP) 2) (GPEXPP (CADR EXP))
                (GPEXP1P (CDDR EXP)))))) 
(PUT 'GPLISTP 'NUMBER-OF-ARGS 1) 
(PUT 'GPLISTP 'DEFINED-ON-LINE '123) 
(PUT 'GPLISTP 'DEFINED-IN-FILE 'GENTRAN/GPARSER.RED) 
(PUT 'GPLISTP 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE GPLISTP (EXP)
    (COND
     ((PAIRP EXP)
      (AND (GEQ (LENGTH EXP) 1) (GPEXPP (CAR EXP)) (GPEXP1P (CDR EXP)))))) 
(PUT 'GPLIST1P 'NUMBER-OF-ARGS 1) 
(PUT 'GPLIST1P 'DEFINED-ON-LINE '128) 
(PUT 'GPLIST1P 'DEFINED-IN-FILE 'GENTRAN/GPARSER.RED) 
(PUT 'GPLIST1P 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE GPLIST1P (EXP)
    (OR (NULL EXP) (AND (GPLISTP (CAR EXP)) (GPLIST1P (CDR EXP))))) 
(PUT 'GPID1P 'NUMBER-OF-ARGS 1) 
(PUT 'GPID1P 'DEFINED-ON-LINE '132) 
(PUT 'GPID1P 'DEFINED-IN-FILE 'GENTRAN/GPARSER.RED) 
(PUT 'GPID1P 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE GPID1P (EXP) (OR (NULL EXP) (AND (IDP (CAR EXP)) (GPID1P (CDR EXP))))) 
(PUT 'GPSTMTP 'NUMBER-OF-ARGS 1) 
(PUT 'GPSTMTP 'DEFINED-ON-LINE '136) 
(PUT 'GPSTMTP 'DEFINED-IN-FILE 'GENTRAN/GPARSER.RED) 
(PUT 'GPSTMTP 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE GPSTMTP (EXP)
    (COND ((ATOM EXP) (IDP EXP))
          ((MEMQ (CAR EXP) '(|:RD:| |:CR:| |:CRN:| |:GI:|)) NIL)
          ((EQ (CAR EXP) 'SETQ) (GPSETQ1P (CDR EXP)))
          ((EQ (CAR EXP) 'COND) (GPCOND1P (CDR EXP)))
          ((EQ (CAR EXP) 'WHILE)
           (AND (EQUAL (LENGTH EXP) 3) (GPLOGEXPP (CADR EXP))
                (GPSTMTP (CADDR EXP))))
          ((EQ (CAR EXP) 'REPEAT)
           (AND (EQUAL (LENGTH EXP) 3) (GPSTMTP (CADR EXP))
                (GPLOGEXPP (CADDR EXP))))
          ((EQ (CAR EXP) 'FOR)
           (AND (EQUAL (LENGTH EXP) 5) (GPVARP (CADR EXP)) (PAIRP (CADDR EXP))
                (AND (EQUAL (LENGTH (CADDR EXP)) 3) (GPEXPP (CAR (CADDR EXP)))
                     (GPEXPP (CADR (CADDR EXP))) (GPEXPP (CADDR (CADDR EXP))))
                (EQ (CADDDR EXP) 'DO) (GPSTMTP (CAR (CDDDDR EXP)))))
          ((EQ (CAR EXP) 'GO) (AND (EQUAL (LENGTH EXP) 2) (IDP (CADR EXP))))
          ((EQ (CAR EXP) 'RETURN)
           (AND (EQUAL (LENGTH EXP) 2) (GPARGP (CADR EXP))))
          ((EQ (CAR EXP) 'WRITE)
           (AND (GEQ (LENGTH EXP) 2) (GPARGP (CADR EXP)) (GPARG1P (CDDR EXP))))
          ((EQ (CAR EXP) 'PROGN)
           (AND (GEQ (LENGTH EXP) 2) (GPSTMTP (CADR EXP))
                (GPSTMT1P (CDDR EXP))))
          ((EQ (CAR EXP) 'RBLOCK)
           (AND (GEQ (LENGTH EXP) 2) (GPID1P (CADR EXP))
                (GPSTMT1P (CDDR EXP))))
          ((UNRESIDP (CAR EXP)) (GPARG1P (CDR EXP))))) 
(PUT 'GPSETQ1P 'NUMBER-OF-ARGS 1) 
(PUT 'GPSETQ1P 'DEFINED-ON-LINE '172) 
(PUT 'GPSETQ1P 'DEFINED-IN-FILE 'GENTRAN/GPARSER.RED) 
(PUT 'GPSETQ1P 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE GPSETQ1P (EXP)
    (COND
     ((AND EXP (EQUAL (LENGTH EXP) 2))
      (COND ((ATOM (CAR EXP)) (AND (IDP (CAR EXP)) (GPSETQ2P (CDR EXP))))
            (T
             (AND
              (AND (GEQ (LENGTH (CAR EXP)) 2) (IDP (CAR (CAR EXP)))
                   (UNRESIDP (CAR (CAR EXP))) (GPEXPP (CADR (CAR EXP)))
                   (GPEXP1P (CDDR (CAR EXP))))
              (GPSETQ3P (CDR EXP)))))))) 
(PUT 'GPSETQ2P 'NUMBER-OF-ARGS 1) 
(PUT 'GPSETQ2P 'DEFINED-ON-LINE '182) 
(PUT 'GPSETQ2P 'DEFINED-IN-FILE 'GENTRAN/GPARSER.RED) 
(PUT 'GPSETQ2P 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE GPSETQ2P (EXP)
    (COND
     (EXP
      (COND
       ((EQCAR (CAR EXP) 'MAT)
        (AND (ONEP (LENGTH EXP)) (GPLISTP (CADAR EXP)) (GPLIST1P (CDDAR EXP))))
       (T (GPSETQ3P EXP)))))) 
(PUT 'GPSETQ3P 'NUMBER-OF-ARGS 1) 
(PUT 'GPSETQ3P 'DEFINED-ON-LINE '190) 
(PUT 'GPSETQ3P 'DEFINED-IN-FILE 'GENTRAN/GPARSER.RED) 
(PUT 'GPSETQ3P 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE GPSETQ3P (EXP)
    (COND
     ((AND EXP (ONEP (LENGTH EXP)))
      (OR (GPEXPP (CAR EXP)) (GPLOGEXPP (CAR EXP))
          (COND
           ((EQ (CAAR EXP) 'FOR)
            (AND (EQUAL (LENGTH (CAR EXP)) 5) (GPVARP (CADAR EXP))
                 (AND (PAIRP (CADDAR EXP)) (EQUAL (LENGTH (CADDAR EXP)) 3)
                      (GPEXPP (CAR (CADDAR EXP))) (GPEXPP (CADR (CADDAR EXP)))
                      (GPEXPP (CADDR (CADDAR EXP))))
                 (GPFOROPP (CAR (CDDDAR EXP))) (GPEXPP (CADR (CDDDAR EXP)))))
           ((EQ (CAAR EXP) 'READ) (ONEP (LENGTH (CAR EXP))))))))) 
(PUT 'GPFOROPP 'NUMBER-OF-ARGS 1) 
(PUT 'GPFOROPP 'DEFINED-ON-LINE '204) 
(PUT 'GPFOROPP 'DEFINED-IN-FILE 'GENTRAN/GPARSER.RED) 
(PUT 'GPFOROPP 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE GPFOROPP (EXP) (MEMQ EXP '(SUM PRODUCT))) 
(PUT 'GPCOND1P 'NUMBER-OF-ARGS 1) 
(PUT 'GPCOND1P 'DEFINED-ON-LINE '208) 
(PUT 'GPCOND1P 'DEFINED-IN-FILE 'GENTRAN/GPARSER.RED) 
(PUT 'GPCOND1P 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE GPCOND1P (EXP)
    (OR (NULL EXP)
        (AND (PAIRP (CAR EXP)) (EQUAL (LENGTH (CAR EXP)) 2)
             (GPLOGEXPP (CAAR EXP)) (GPSTMTP (CADAR EXP))
             (GPCOND1P (CDR EXP))))) 
(PUT 'GPSTMT1P 'NUMBER-OF-ARGS 1) 
(PUT 'GPSTMT1P 'DEFINED-ON-LINE '214) 
(PUT 'GPSTMT1P 'DEFINED-IN-FILE 'GENTRAN/GPARSER.RED) 
(PUT 'GPSTMT1P 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE GPSTMT1P (EXP)
    (OR (NULL EXP) (AND (GPSTMTP (CAR EXP)) (GPSTMT1P (CDR EXP))))) 
(PUT 'GPDEFNP 'NUMBER-OF-ARGS 1) 
(PUT 'GPDEFNP 'DEFINED-ON-LINE '218) 
(PUT 'GPDEFNP 'DEFINED-IN-FILE 'GENTRAN/GPARSER.RED) 
(PUT 'GPDEFNP 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE GPDEFNP (EXP)
    (AND (EQCAR EXP 'PROCEDURE) (EQUAL (LENGTH EXP) 6) (IDP (CADR EXP))
         (NULL (CADDR EXP)) (ATOM (CADDDR EXP)) (GPID1P (CAR (CDDDDR EXP)))
         (GPSTMTP (CADR (CDDDDR EXP))) (NOT (IDP (CADR (CDDDDR EXP)))))) 
(PUT 'UNRESIDP 'NUMBER-OF-ARGS 1) 
(PUT 'UNRESIDP 'DEFINED-ON-LINE '230) 
(PUT 'UNRESIDP 'DEFINED-IN-FILE 'GENTRAN/GPARSER.RED) 
(PUT 'UNRESIDP 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE UNRESIDP (ID) (NOT (MEMQ ID *RESERVEDOPS*))) 
(ENDMODULE) 