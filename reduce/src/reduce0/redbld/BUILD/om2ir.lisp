(cl:declaim (cl:optimize cl:debug cl:safety))
(cl:declaim (sb-ext:muffle-conditions sb-ext:compiler-note cl:style-warning))
(SETQ OMFUNCS*
        '((OMA OMAIR) (OMS OMSIR) (OMI OMIIR) (OMV OMVIR) (OMF OMFIR)
          (OMSTR OMSTRIR) (OMBIND OMBINDIR) (OMATTR OMATTRIR))) 
(PUT 'OM2IR 'NUMBER-OF-ARGS 0) 
(PUT 'OM2IR 'DEFINED-ON-LINE '36) 
(PUT 'OM2IR 'DEFINED-IN-FILE 'MATHML/OM2IR.RED) 
(PUT 'OM2IR 'PROCEDURE_TYPE '(ARROW UNIT GENERAL)) 
(DE OM2IR NIL
    (PROG (RES)
      (SETQ RES NIL)
      (FLUID '(SAFE_ATTS CHAR CH ATTS COUNT TEMP SPACE TEMP2))
      (SETQ SPACE BLANK)
      (SETQ COUNT 0)
      (SETQ CH (READCH))
      (SETQ TEMP2 NIL)
      (LEX)
      (COND ((EQUAL CHAR '(O M O B J)) (PROGN (LEX) (SETQ RES (OMOBJ)) NIL))
            (T (ERRORML "<omobj>" 2)))
      (LEX)
      (COND ((EQUAL CHAR '(/ O M O B J)) (TERPRI)) (T (ERRORML "</omobj>" 19)))
      (RETURN RES))) 
(PUT 'OMOBJ 'NUMBER-OF-ARGS 0) 
(PUT 'OMOBJ 'DEFINED-ON-LINE '65) 
(PUT 'OMOBJ 'DEFINED-IN-FILE 'MATHML/OM2IR.RED) 
(PUT 'OMOBJ 'PROCEDURE_TYPE '(ARROW UNIT GENERAL)) 
(DE OMOBJ NIL
    (PROG (AA RES)
      (COND
       ((SETQ AA (ASSOC (COMPRESS* CHAR) OMFUNCS*))
        (RETURN (APPLY (CADR AA) NIL)))))) 
(PUT 'OMOBJS 'NUMBER-OF-ARGS 0) 
(PUT 'OMOBJS 'DEFINED-ON-LINE '75) 
(PUT 'OMOBJS 'DEFINED-IN-FILE 'MATHML/OM2IR.RED) 
(PUT 'OMOBJS 'PROCEDURE_TYPE '(ARROW UNIT GENERAL)) 
(DE OMOBJS NIL
    (PROG (OBJ OBJS)
      (COND
       ((NEQ CHAR '(/ O M A))
        (PROGN
         (SETQ OBJ (OMOBJ))
         (LEX)
         (SETQ OBJS (OMOBJS))
         (COND ((EQ OBJ NIL) (RETURN (APPEND OBJ OBJS)))
               (T (RETURN (CONS OBJ OBJS))))
         NIL))))) 
(PUT 'CHECKTAG 'NUMBER-OF-ARGS 1) 
(PUT 'CHECKTAG 'DEFINED-ON-LINE '90) 
(PUT 'CHECKTAG 'DEFINED-IN-FILE 'MATHML/OM2IR.RED) 
(PUT 'CHECKTAG 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE CHECKTAG (TAG)
    (PROG () (COND ((NEQ CHAR TAG) (ERRORML "Problem" "problem"))))) 
(PUT 'OMSIR 'NUMBER-OF-ARGS 0) 
(PUT 'OMSIR 'DEFINED-ON-LINE '100) 
(PUT 'OMSIR 'DEFINED-IN-FILE 'MATHML/OM2IR.RED) 
(PUT 'OMSIR 'PROCEDURE_TYPE '(ARROW UNIT GENERAL)) 
(DE OMSIR NIL
    (PROG (CD NAME SEM AA BB ATTR SYMB VALIDCD)
      (SETQ ATTR NIL)
      (SETQ NAME (INTERN (FIND ATTS 'NAME)))
      (SETQ CD (INTERN (FIND ATTS 'CD)))
      (COND
       ((EQUAL (EXPLODE NAME) '(V E C T O R)) (SETQ AA '(VECTORML LINALG1)))
       (T (SETQ AA (MEMBER (INTERN NAME) MMLEQ*))))
      (COND
       ((EQUAL AA NIL)
        (PROGN
         (COND
          ((SETQ AA (ASSOC NAME SPECIAL_CASES*))
           (PROGN
            (SETQ ATTR (CAR (REVERSE AA)))
            (COND ((NEQ ATTR NIL) (SETQ ATTR (LIST ATTR))))
            (SETQ AA
                    (CONS (CADR (REVERSE AA))
                          (REVERSE (CDDR (REVERSE (CDR AA))))))))
          ((NEQ (SETQ BB (ASSOC NAME SPECIAL_CASES2*)) NIL)
           (PROGN (RETURN (APPLY (CADR BB) (CDDR BB))))))
         NIL)))
      (COND ((NEQ AA NIL) (SETQ VALIDCD (ASSOC (CAR AA) VALID_OM*))))
      (COND ((NEQ VALIDCD NIL) (SETQ VALIDCD (CADR VALIDCD))))
      (COND
       ((OR (EQ AA NIL) (EQUAL CD (EQ VALIDCD NIL)))
        (PROGN (SETQ SEM (ENCODEIR NAME)) (RETURN SEM) NIL)))
      (RETURN (LIST (CAR AA) ATTR)))) 
(PUT 'ENCODEIR 'NUMBER-OF-ARGS 1) 
(PUT 'ENCODEIR 'DEFINED-ON-LINE '166) 
(PUT 'ENCODEIR 'DEFINED-IN-FILE 'MATHML/OM2IR.RED) 
(PUT 'ENCODEIR 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE ENCODEIR (NAME)
    (PROG (SEM)
      (SETQ SEM (APPEND CHAR (CONS BLANK ATTS)))
      (SETQ SEM (DELALL '$ SEM))
      (RETURN (CONS 'SEMANTIC (LIST (CONS NAME (LIST SEM))))))) 
(FLAG '(OM2MML) 'OPFN) 
(PUT 'OMIIR 'NUMBER-OF-ARGS 0) 
(PUT 'OMIIR 'DEFINED-ON-LINE '175) 
(PUT 'OMIIR 'DEFINED-IN-FILE 'MATHML/OM2IR.RED) 
(PUT 'OMIIR 'PROCEDURE_TYPE '(ARROW UNIT GENERAL)) 
(DE OMIIR NIL (PROG (INT) (LEX) (SETQ INT (COMPRESS CHAR)) (LEX) (RETURN INT))) 
(PUT 'OMVIR 'NUMBER-OF-ARGS 0) 
(PUT 'OMVIR 'DEFINED-ON-LINE '183) 
(PUT 'OMVIR 'DEFINED-IN-FILE 'MATHML/OM2IR.RED) 
(PUT 'OMVIR 'PROCEDURE_TYPE '(ARROW UNIT GENERAL)) 
(DE OMVIR NIL
    (PROG (NAME)
      (SETQ NAME (FIND ATTS 'NAME))
      (COND ((NEQ (FIND ATTS 'HEX) NIL) (ERRORML "wrong att" 2)))
      (COND ((NEQ (FIND ATTS 'DEC) NIL) (ERRORML "wrong att" 2)))
      (RETURN NAME))) 
(PUT 'VARIABLESIR 'NUMBER-OF-ARGS 0) 
(PUT 'VARIABLESIR 'DEFINED-ON-LINE '191) 
(PUT 'VARIABLESIR 'DEFINED-IN-FILE 'MATHML/OM2IR.RED) 
(PUT 'VARIABLESIR 'PROCEDURE_TYPE '(ARROW UNIT GENERAL)) 
(DE VARIABLESIR NIL
    (PROG (VAR VARS)
      (COND
       ((NEQ CHAR '(/ O M B V A R))
        (PROGN
         (SETQ VAR (OMVIR))
         (LEX)
         (SETQ VARS (VARIABLESIR))
         (COND ((EQ VAR NIL) (RETURN (APPEND VAR VARS)))
               (T (RETURN (CONS VAR VARS))))
         NIL))))) 
(PUT 'OMFIR 'NUMBER-OF-ARGS 0) 
(PUT 'OMFIR 'DEFINED-ON-LINE '204) 
(PUT 'OMFIR 'DEFINED-IN-FILE 'MATHML/OM2IR.RED) 
(PUT 'OMFIR 'PROCEDURE_TYPE '(ARROW UNIT GENERAL)) 
(DE OMFIR NIL
    (PROG (FLOAT)
      (SETQ FLOAT (FIND ATTS 'DEC))
      (COND ((NEQ (FIND ATTS 'NAME) NIL) (ERRORML "wrong att" 2)))
      (RETURN FLOAT))) 
(PUT 'OMSTRIR 'NUMBER-OF-ARGS 0) 
(PUT 'OMSTRIR 'DEFINED-ON-LINE '211) 
(PUT 'OMSTRIR 'DEFINED-IN-FILE 'MATHML/OM2IR.RED) 
(PUT 'OMSTRIR 'PROCEDURE_TYPE '(ARROW UNIT GENERAL)) 
(DE OMSTRIR NIL
    (PROG (STR)
      (LEX)
      (SETQ STR (COMPRESS CHAR))
      (LEX)
      (RETURN (CONS 'STRING (LIST STR))))) 
(PUT 'OMAIR 'NUMBER-OF-ARGS 0) 
(PUT 'OMAIR 'DEFINED-ON-LINE '219) 
(PUT 'OMAIR 'DEFINED-IN-FILE 'MATHML/OM2IR.RED) 
(PUT 'OMAIR 'PROCEDURE_TYPE '(ARROW UNIT GENERAL)) 
(DE OMAIR NIL
    (PROG (OBJ ELEMS)
      (LEX)
      (SETQ OBJ (OMOBJ))
      (COND
       ((NEQ (CAR OBJ) 'MATRIX)
        (PROGN (LEX) (SETQ ELEMS (OMOBJS)) (CHECKTAG '(/ O M A)) NIL)))
      (RETURN (APPEND OBJ ELEMS)))) 
(PUT 'OMBINDIR 'NUMBER-OF-ARGS 0) 
(PUT 'OMBINDIR 'DEFINED-ON-LINE '238) 
(PUT 'OMBINDIR 'DEFINED-IN-FILE 'MATHML/OM2IR.RED) 
(PUT 'OMBINDIR 'PROCEDURE_TYPE '(ARROW UNIT GENERAL)) 
(DE OMBINDIR NIL
    (PROG (SYMB VARS OBJ)
      (LEX)
      (SETQ SYMB (OMOBJ))
      (LEX)
      (SETQ VARS (TOBVARIR (VARIABLESIR)))
      (LEX)
      (SETQ OBJ (OMOBJ))
      (LEX)
      (CHECKTAG '(/ O M B I N D))
      (RETURN (APPEND SYMB (APPEND VARS (LIST OBJ)))))) 
(PUT 'OMATTRIR 'NUMBER-OF-ARGS 0) 
(PUT 'OMATTRIR 'DEFINED-ON-LINE '251) 
(PUT 'OMATTRIR 'DEFINED-IN-FILE 'MATHML/OM2IR.RED) 
(PUT 'OMATTRIR 'PROCEDURE_TYPE '(ARROW UNIT GENERAL)) 
(DE OMATTRIR NIL
    (PROG (OMATP VAR)
      (LEX)
      (SETQ OMATP (OMATPIR))
      (LEX)
      (SETQ VAR (OMOBJ))
      (LEX)
      (CHECKTAG '(/ O M A T T R))
      (COND
       ((PAIRP OMATP)
        (COND
         ((EQUAL (CADAR OMATP) 'CSYMBOL) (RETURN (CONS VAR (LIST NIL)))))))
      (COND ((NUMBERP VAR) (RETURN (LIST 'CN OMATP VAR))))
      (RETURN (LIST 'CI OMATP VAR)))) 
(PUT 'OMATPIR 'NUMBER-OF-ARGS 0) 
(PUT 'OMATPIR 'DEFINED-ON-LINE '264) 
(PUT 'OMATPIR 'DEFINED-IN-FILE 'MATHML/OM2IR.RED) 
(PUT 'OMATPIR 'PROCEDURE_TYPE '(ARROW UNIT GENERAL)) 
(DE OMATPIR NIL
    (PROG (SYMB OBJ)
      (LEX)
      (SETQ SYMB (CAR (OMSIR)))
      (LEX)
      (SETQ OBJ (CAR (OMOBJ)))
      (LEX)
      (CHECKTAG '(/ O M A T P))
      (RETURN (LIST (CONS SYMB (LIST OBJ)))))) 
(PUT 'TOBVARIR 'NUMBER-OF-ARGS 1) 
(PUT 'TOBVARIR 'DEFINED-ON-LINE '281) 
(PUT 'TOBVARIR 'DEFINED-IN-FILE 'MATHML/OM2IR.RED) 
(PUT 'TOBVARIR 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE TOBVARIR (BV)
    (PROG ()
      (COND
       ((NEQ BV NIL)
        (RETURN (CONS (CONS 'BVAR (LIST (CAR BV) 1)) (TOBVARIR (CDR BV)))))))) 
(PUT 'MATRIXIR 'NUMBER-OF-ARGS 0) 
(PUT 'MATRIXIR 'DEFINED-ON-LINE '291) 
(PUT 'MATRIXIR 'DEFINED-IN-FILE 'MATHML/OM2IR.RED) 
(PUT 'MATRIXIR 'PROCEDURE_TYPE '(ARROW UNIT GENERAL)) 
(DE MATRIXIR NIL
    (PROG (RES)
      (LEX)
      (SETQ RES (OMOBJS))
      (COND
       ((EQUAL (CAADR (CADR RES)) 'MATRIXCOLUMN)
        (SETQ RES (CONS 'MATRIXCOLUMN (LIST (MATRIXELEMS RES)))))
       (T (SETQ RES (CONS 'MATRIXROW (LIST (MATRIXELEMS RES))))))
      (RETURN (CONS 'MATRIX (CONS NIL RES))))) 
(PUT 'MATRIXELEMS 'NUMBER-OF-ARGS 1) 
(PUT 'MATRIXELEMS 'DEFINED-ON-LINE '300) 
(PUT 'MATRIXELEMS 'DEFINED-IN-FILE 'MATHML/OM2IR.RED) 
(PUT 'MATRIXELEMS 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE MATRIXELEMS (ELEM)
    (COND ((NEQ ELEM NIL) (CONS (CDDR (CAR ELEM)) (MATRIXELEMS (CDR ELEM)))))) 
(PUT 'SUM_PRODIR 'NUMBER-OF-ARGS 0) 
(PUT 'SUM_PRODIR 'DEFINED-ON-LINE '303) 
(PUT 'SUM_PRODIR 'DEFINED-IN-FILE 'MATHML/OM2IR.RED) 
(PUT 'SUM_PRODIR 'PROCEDURE_TYPE '(ARROW UNIT GENERAL)) 
(DE SUM_PRODIR NIL
    (PROG (VAR FUN INT NAME)
      (SETQ NAME (INTERN (FIND ATTS 'NAME)))
      (LEX)
      (SETQ INT (OMOBJ))
      (SETQ INT (CONS 'LOWUPPERLIMIT (CDR INT)))
      (LEX)
      (SETQ FUN (OMOBJ))
      (SETQ VAR (LAMBDAVAR FUN))
      (SETQ FUN (LAMBDAFUN FUN))
      (RETURN (APPEND (LIST NAME NIL) (APPEND VAR (CONS INT (LIST FUN)))))
      (RETURN (CONS NAME (CONS NIL (CONS VAR (CONS INT (LIST FUN)))))))) 
(PUT 'INTEGRALIR 'NUMBER-OF-ARGS 0) 
(PUT 'INTEGRALIR 'DEFINED-ON-LINE '317) 
(PUT 'INTEGRALIR 'DEFINED-IN-FILE 'MATHML/OM2IR.RED) 
(PUT 'INTEGRALIR 'PROCEDURE_TYPE '(ARROW UNIT GENERAL)) 
(DE INTEGRALIR NIL
    (PROG (INT FUN VAR TAG)
      (SETQ TAG (INTERN (FIND ATTS 'NAME)))
      (SETQ VAR (LIST '(BVAR X 1)))
      (SETQ INT NIL)
      (COND ((EQUAL TAG 'DEFINT) (PROGN (LEX) (SETQ INT (OMOBJ)) NIL)))
      (LEX)
      (SETQ FUN (OMOBJ))
      (COND
       ((PAIRP FUN)
        (COND
         ((EQUAL (CAR FUN) 'LAMBDA)
          (PROGN (SETQ VAR (LAMBDAVAR FUN)) (SETQ FUN (LAMBDAFUN FUN)) NIL)))))
      (RETURN (APPEND (LIST TAG NIL) (APPEND VAR (LIST FUN)))))) 
(PUT 'PARTIALDIFFIR 'NUMBER-OF-ARGS 0) 
(PUT 'PARTIALDIFFIR 'DEFINED-ON-LINE '342) 
(PUT 'PARTIALDIFFIR 'DEFINED-IN-FILE 'MATHML/OM2IR.RED) 
(PUT 'PARTIALDIFFIR 'PROCEDURE_TYPE '(ARROW UNIT GENERAL)) 
(DE PARTIALDIFFIR NIL
    (PROG (LIS FUN VAR TAG VARS)
      (SETQ TAG (INTERN (FIND ATTS 'NAME)))
      (LEX)
      (SETQ LIS (OMOBJ))
      (COND ((EQUAL (CAR LIS) 'LIST) (SETQ LIS (CDDR LIS))) (T (ERRORML "" 3)))
      (LEX)
      (SETQ FUN (OMOBJ))
      (COND
       ((PAIRP FUN)
        (COND
         ((EQUAL (CAR FUN) 'LAMBDA)
          (PROGN
           (SETQ VAR (LAMBDAVAR FUN))
           (SETQ FUN (LAMBDAFUN FUN))
           (SETQ VARS (PDIFFVARS LIS VAR))
           NIL)))))
      (RETURN (APPEND (LIST 'PARTIALDIFF NIL) (APPEND VARS (LIST FUN)))))) 
(PUT 'PDIFFVARS 'NUMBER-OF-ARGS 2) 
(PUT 'PDIFFVARS 'DEFINED-ON-LINE '365) 
(PUT 'PDIFFVARS 'DEFINED-IN-FILE 'MATHML/OM2IR.RED) 
(PUT 'PDIFFVARS 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE PDIFFVARS (IND V)
    (PROG ()
      (RETURN
       (COND
        ((NEQ IND NIL) (CONS (NTH V (CAR IND)) (PDIFFVARS (CDR IND) V))))))) 
(PUT 'SELECTIR 'NUMBER-OF-ARGS 0) 
(PUT 'SELECTIR 'DEFINED-ON-LINE '370) 
(PUT 'SELECTIR 'DEFINED-IN-FILE 'MATHML/OM2IR.RED) 
(PUT 'SELECTIR 'PROCEDURE_TYPE '(ARROW UNIT GENERAL)) 
(DE SELECTIR NIL
    (PROG (NAME CD A B C TAG)
      (SETQ NAME (INTERN (FIND ATTS 'NAME)))
      (SETQ CD (INTERN (FIND ATTS 'CD)))
      (SETQ TAG (LIST 'SELECTOR))
      (COND ((EQ (MEMBER CD '(LINALG3)) NIL) (SETQ TAG (ENCODEIR NAME))))
      (LEX)
      (SETQ A (OMOBJ))
      (COND ((EQUAL NAME 'MATRIX_SELECTOR) (PROGN (LEX) (SETQ B (OMOBJ)) NIL)))
      (LEX)
      (SETQ C (OMOBJ))
      (COND
       ((EQUAL NAME 'MATRIX_SELECTOR)
        (PROGN
         (RETURN (APPEND TAG (CONS NIL (CONS C (CONS A (LIST B))))))
         NIL)))
      (RETURN (APPEND TAG (CONS NIL (CONS C (LIST A))))))) 
(PUT 'LIMITIR 'NUMBER-OF-ARGS 0) 
(PUT 'LIMITIR 'DEFINED-ON-LINE '391) 
(PUT 'LIMITIR 'DEFINED-IN-FILE 'MATHML/OM2IR.RED) 
(PUT 'LIMITIR 'PROCEDURE_TYPE '(ARROW UNIT GENERAL)) 
(DE LIMITIR NIL
    (PROG (VAL TYPE CD FUN VAR RES TAG)
      (SETQ CD (INTERN (FIND ATTS 'CD)))
      (SETQ TAG (LIST 'LIMIT))
      (COND ((EQ (MEMBER CD '(LIMIT1)) NIL) (SETQ TAG (ENCODEIR 'LIMIT))))
      (LEX)
      (SETQ VAL (OMOBJ))
      (LEX)
      (SETQ TYPE (OMOBJ))
      (LEX)
      (SETQ FUN (OMOBJ))
      (SETQ TYPE (CAADR TYPE))
      (COND
       ((EQ (MEMBER TYPE '(BELOW ABOVE BOTH_SIDES NULL)) NIL)
        (ERRORML "wrong method of approach" 2)))
      (COND ((EQUAL TYPE 'NULL) (SETQ TYPE 'BOTH_SIDES)))
      (SETQ VAR (LAMBDAVAR FUN))
      (SETQ FUN (LAMBDAFUN FUN))
      (SETQ RES (APPEND TAG (CONS NIL VAR)))
      (COND
       ((NEQ TYPE 'BOTH_SIDES)
        (SETQ RES
                (APPEND RES
                        (LIST
                         (CONS 'CONDITION
                               (LIST
                                (CONS 'TENDSTO
                                      (CONS (LIST (CONS 'TYPE (LIST TYPE)))
                                            (CONS (CADR (CAR VAR))
                                                  (LIST VAL))))))))))
       (T
        (SETQ RES
                (APPEND RES
                        (LIST
                         (CONS 'CONDITION
                               (LIST
                                (CONS 'TENDSTO
                                      (CONS NIL
                                            (CONS (CADR (CAR VAR))
                                                  (LIST VAL)))))))))))
      (SETQ RES (APPEND RES (LIST FUN)))
      (RETURN RES))) 
(PUT 'NUMIR 'NUMBER-OF-ARGS 0) 
(PUT 'NUMIR 'DEFINED-ON-LINE '426) 
(PUT 'NUMIR 'DEFINED-IN-FILE 'MATHML/OM2IR.RED) 
(PUT 'NUMIR 'PROCEDURE_TYPE '(ARROW UNIT GENERAL)) 
(DE NUMIR NIL
    (PROG (BASE A1 A2 TAG)
      (SETQ TAG (INTERN (FIND ATTS 'NAME)))
      (LEX)
      (SETQ A1 (OMOBJ))
      (LEX)
      (SETQ A2 (OMOBJ))
      (COND
       ((EQUAL TAG 'COMPLEX_CARTESIAN)
        (PROGN
         (COND
          ((OR (IDP A1) (IDP A2))
           (RETURN
            (CONS 'PLUS
                  (CONS NIL
                        (CONS A1
                              (LIST
                               (CONS 'TIMES
                                     (CONS NIL
                                           (CONS A2
                                                 (LIST
                                                  '|&IMAGINARYI;|))))))))))))))
      (COND
       ((EQUAL TAG 'COMPLEX_POLAR)
        (PROGN
         (COND
          ((OR (IDP A1) (IDP A2))
           (RETURN
            (CONS 'TIMES
                  (CONS NIL
                        (CONS A1
                              (LIST
                               (CONS 'EXP
                                     (CONS NIL
                                           (LIST
                                            (CONS 'TIMES
                                                  (CONS NIL
                                                        (CONS A2
                                                              (LIST
                                                               '|&IMAGINARYI;|)))))))))))))))))
      (COND
       ((EQUAL TAG 'RATIONAL)
        (PROGN
         (COND
          ((OR (IDP A1) (IDP A2))
           (RETURN (CONS 'DIVIDE (CONS NIL (CONS A1 (LIST A2)))))))
         NIL)))
      (RETURN (CONS TAG (CONS NIL (CONS A1 (LIST A2))))))) 
(PUT 'UNARYIR 'NUMBER-OF-ARGS 2) 
(PUT 'UNARYIR 'DEFINED-ON-LINE '453) 
(PUT 'UNARYIR 'DEFINED-IN-FILE 'MATHML/OM2IR.RED) 
(PUT 'UNARYIR 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE UNARYIR (VALIDCD TAG)
    (PROG (NAME CD)
      (SETQ NAME (INTERN (FIND ATTS 'NAME)))
      (SETQ CD (INTERN (FIND ATTS 'CD)))
      (COND ((NEQ CD VALIDCD) (RETURN (ENCODEIR NAME))))
      (RETURN TAG))) 
(PUT 'LAMBDAVAR 'NUMBER-OF-ARGS 1) 
(PUT 'LAMBDAVAR 'DEFINED-ON-LINE '463) 
(PUT 'LAMBDAVAR 'DEFINED-IN-FILE 'MATHML/OM2IR.RED) 
(PUT 'LAMBDAVAR 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE LAMBDAVAR (L) (PROG () (RETURN (CDR (REVERSE (CDDR L)))))) 
(PUT 'LAMBDAVAR2 'NUMBER-OF-ARGS 1) 
(PUT 'LAMBDAVAR2 'DEFINED-ON-LINE '468) 
(PUT 'LAMBDAVAR2 'DEFINED-IN-FILE 'MATHML/OM2IR.RED) 
(PUT 'LAMBDAVAR2 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE LAMBDAVAR2 (L) (PROG () (RETURN (CADR (CADDR L))))) 
(PUT 'LAMBDAFUN 'NUMBER-OF-ARGS 1) 
(PUT 'LAMBDAFUN 'DEFINED-ON-LINE '475) 
(PUT 'LAMBDAFUN 'DEFINED-IN-FILE 'MATHML/OM2IR.RED) 
(PUT 'LAMBDAFUN 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE LAMBDAFUN (L) (PROG () (RETURN (CAR (REVERSE L))))) 
(PUT 'OM2MML 'NUMBER-OF-ARGS 0) 
(PUT 'OM2MML 'DEFINED-ON-LINE '485) 
(PUT 'OM2MML 'DEFINED-IN-FILE 'MATHML/OM2IR.RED) 
(PUT 'OM2MML 'PROCEDURE_TYPE '(ARROW UNIT GENERAL)) 
(DE OM2MML NIL
    (PROG (IR)
      (SETQ IR (OM2IR))
      (TERPRI* T)
      (PRINC "Intermediate representation:")
      (TERPRI* T)
      (PRINC IR)
      (TERPRI* T)
      (IR2MML IR))) 