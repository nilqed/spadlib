(cl:declaim (cl:optimize cl:debug cl:safety))
(cl:declaim (sb-ext:muffle-conditions sb-ext:compiler-note cl:style-warning))
(MODULE (LIST 'SIMPLEX)) 
(FLUID '(SIMPLEX_ID* SIMPLEX_COPYRIGHT*)) 
(SETQ SIMPLEX_ID* "$Id: fsimplex.red 5872 2021-07-29 14:53:49Z arthurcnorman $") 
(SETQ SIMPLEX_COPYRIGHT* "(c) 2001 Dolzmann, Gilch, Sturm, Tsirou, 2013 Sturm") 
(COND
 ((NOT (GET 'LEQ 'SIMPFN))
  (PROGN (AEVAL (OPERATOR (LIST 'LEQ))) (AEVAL (OPERATOR (LIST 'GEQ))) NIL))) 
(FLAG '(EQUAL LEQ GEQ) 'SPACED) 
(PUT 'FS_SIMPLEX1 'NUMBER-OF-ARGS 1) 
(PUT 'FS_SIMPLEX1 'DEFINED-ON-LINE '152) 
(PUT 'FS_SIMPLEX1 'DEFINED-IN-FILE 'LINALG/FSIMPLEX.RED) 
(PUT 'FS_SIMPLEX1 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE FS_SIMPLEX1 (INPUT)
    (PROG (MAX-OR-MIN OBJECTIVE EQUATION-LIST BOUNDL W)
      (PROG (G126 G127)
        (SETQ G126 (FS_A2S-SIMPLEX INPUT))
        (SETQ G127 G126)
        (SETQ MAX-OR-MIN (CAR G126))
        (SETQ G126 (CDR G126))
        (SETQ OBJECTIVE (CAR G126))
        (SETQ G126 (CDR G126))
        (SETQ EQUATION-LIST (CAR G126))
        (SETQ G126 (CDR G126))
        (SETQ BOUNDL (CAR G126))
        (SETQ G126 (CDR G126))
        (RETURN G127))
      (SETQ W (FS_SIMPLEX2 MAX-OR-MIN OBJECTIVE EQUATION-LIST BOUNDL))
      (COND
       ((EQ W 'INFEASIBLE)
        (REDERR "Error in simplex: Problem has no feasible solution.")))
      (RETURN (FS_S2A-SIMPLEX W)))) 
(PUT 'FS_A2S-SIMPLEX 'NUMBER-OF-ARGS 1) 
(PUT 'FS_A2S-SIMPLEX 'DEFINED-ON-LINE '223) 
(PUT 'FS_A2S-SIMPLEX 'DEFINED-IN-FILE 'LINALG/FSIMPLEX.RED) 
(PUT 'FS_A2S-SIMPLEX 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE FS_A2S-SIMPLEX (INPUT)
    (PROG (MAX-OR-MIN OBJECTIVE EQUATION-LIST BOUNDAL)
      (COND
       ((NULL INPUT)
        (REDERR "simplex called with 0 arguments instead of 3-4")))
      (SETQ MAX-OR-MIN (FS_A2S-MAXMIN (CAR INPUT)))
      (SETQ INPUT (CDR INPUT))
      (COND
       ((NULL INPUT)
        (REDERR "simplex called with 1 arguments instead of 3-4")))
      (SETQ OBJECTIVE (FS_A2S-OBJ (CAR INPUT)))
      (SETQ INPUT (CDR INPUT))
      (COND
       ((NULL INPUT)
        (REDERR "simplex called with 2 arguments instead of 3-4")))
      (SETQ EQUATION-LIST (FS_A2S-CL (CAR INPUT)))
      (SETQ INPUT (CDR INPUT))
      (COND
       ((NULL INPUT)
        (RETURN (LIST MAX-OR-MIN OBJECTIVE EQUATION-LIST BOUNDAL))))
      (SETQ BOUNDAL (FS_A2S-BOUNDL (CAR INPUT)))
      (SETQ INPUT (CDR INPUT))
      (COND (INPUT (REDERR "simplex called with more than 4 arguments")))
      (RETURN (LIST MAX-OR-MIN OBJECTIVE EQUATION-LIST BOUNDAL)))) 
(PUT 'FS_A2S-MAXMIN 'NUMBER-OF-ARGS 1) 
(PUT 'FS_A2S-MAXMIN 'DEFINED-ON-LINE '246) 
(PUT 'FS_A2S-MAXMIN 'DEFINED-IN-FILE 'LINALG/FSIMPLEX.RED) 
(PUT 'FS_A2S-MAXMIN 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE FS_A2S-MAXMIN (A)
    (PROG (W)
      (SETQ W (REVAL1 A T))
      (COND
       ((AND (NEQ W 'MAX) (NEQ W 'MIN))
        (REDERR
         "Error in simplex(first argument): must be either max or min")))
      (RETURN W))) 
(PUT 'FS_A2S-OBJ 'NUMBER-OF-ARGS 1) 
(PUT 'FS_A2S-OBJ 'DEFINED-ON-LINE '255) 
(PUT 'FS_A2S-OBJ 'DEFINED-IN-FILE 'LINALG/FSIMPLEX.RED) 
(PUT 'FS_A2S-OBJ 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE FS_A2S-OBJ (A) (SC_SIMP (REVAL1 A T))) 
(PUT 'FS_A2S-CL 'NUMBER-OF-ARGS 1) 
(PUT 'FS_A2S-CL 'DEFINED-ON-LINE '259) 
(PUT 'FS_A2S-CL 'DEFINED-IN-FILE 'LINALG/FSIMPLEX.RED) 
(PUT 'FS_A2S-CL 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE FS_A2S-CL (A)
    (PROG (W)
      (SETQ W (REVAL1 A T))
      (COND ((AND (PAIRP W) (EQUAL (CAR W) 'LIST)) (SETQ W (CDR W)))
            (T (REDERR "Error in simplex(third argument): must be a list")))
      (RETURN W))) 
(PUT 'FS_A2S-BOUNDL 'NUMBER-OF-ARGS 1) 
(PUT 'FS_A2S-BOUNDL 'DEFINED-ON-LINE '270) 
(PUT 'FS_A2S-BOUNDL 'DEFINED-IN-FILE 'LINALG/FSIMPLEX.RED) 
(PUT 'FS_A2S-BOUNDL 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE FS_A2S-BOUNDL (A)
    (PROG (W)
      (SETQ W (REVAL1 A T))
      (COND ((AND (PAIRP W) (EQUAL (CAR W) 'LIST)) (SETQ W (CDR W)))
            (T (REDERR "simplex: Fourth argument must be a list")))
      (RETURN (FS_READ-BOUNDS W)))) 
(PUT 'FS_READ-BOUNDS 'NUMBER-OF-ARGS 1) 
(PUT 'FS_READ-BOUNDS 'DEFINED-ON-LINE '280) 
(PUT 'FS_READ-BOUNDS 'DEFINED-IN-FILE 'LINALG/FSIMPLEX.RED) 
(PUT 'FS_READ-BOUNDS 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE FS_READ-BOUNDS (BOUNDL)
    (PROG (W BOUNDAL UB LB V)
      (PROG (ITEM)
        (SETQ ITEM BOUNDL)
       LAB
        (COND ((NULL ITEM) (RETURN NIL)))
        ((LAMBDA (ITEM)
           (PROGN
            (COND
             ((EQCAR ITEM 'AND)
              (PROGN (REDERR "simplex: not yet compatible with Redlog") NIL))
             ((NOT (EQCAR ITEM 'LEQ))
              (REDERR (LIST "simplex: bad bound" ITEM)))
             (T
              (PROGN
               (SETQ W (CADR ITEM))
               (COND
                ((EQCAR W 'LEQ)
                 (PROGN
                  (SETQ LB (CADR W))
                  (SETQ V (CADDR W))
                  (SETQ UB (CADDR ITEM))
                  (COND
                   ((NOT (AND (FS_LBOUNDP LB) (IDP V) (FS_UBOUNDP UB)))
                    (REDERR (LIST "simplex: bad bound" ITEM))))
                  (SETQ BOUNDAL (FS_SETLB BOUNDAL V LB))
                  (SETQ BOUNDAL (FS_SETUB BOUNDAL V UB))))
                (T
                 (PROGN
                  (COND
                   ((IDP (CADR ITEM))
                    (PROGN
                     (SETQ V (CADR ITEM))
                     (SETQ UB (CADDR ITEM))
                     (COND
                      ((NOT (AND (IDP V) (FS_UBOUNDP UB)))
                       (REDERR (LIST "simplex: bad bound" ITEM))))
                     (SETQ BOUNDAL (FS_SETUB BOUNDAL V UB))))
                   (T
                    (PROGN
                     (SETQ LB (CADR ITEM))
                     (SETQ V (CADDR ITEM))
                     (COND
                      ((NOT (AND (FS_LBOUNDP LB) (IDP V)))
                       (REDERR (LIST "simplex: bad bound" ITEM))))
                     (SETQ BOUNDAL (FS_SETLB BOUNDAL V LB)))))))))))))
         (CAR ITEM))
        (SETQ ITEM (CDR ITEM))
        (GO LAB))
      (PROG (PR)
        (SETQ PR BOUNDAL)
       LAB
        (COND ((NULL PR) (RETURN NIL)))
        ((LAMBDA (PR) (COND ((EQ (CADR PR) 'DEFAULT) (SETCAR (CDR PR) 0))))
         (CAR PR))
        (SETQ PR (CDR PR))
        (GO LAB))
      (RETURN BOUNDAL))) 
(PUT 'FS_LBOUNDP 'NUMBER-OF-ARGS 1) 
(PUT 'FS_LBOUNDP 'DEFINED-ON-LINE '319) 
(PUT 'FS_LBOUNDP 'DEFINED-IN-FILE 'LINALG/FSIMPLEX.RED) 
(PUT 'FS_LBOUNDP 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE FS_LBOUNDP (X) (OR (NUMBERP X) (EQUAL X '(MINUS INFINITY)))) 
(PUT 'FS_UBOUNDP 'NUMBER-OF-ARGS 1) 
(PUT 'FS_UBOUNDP 'DEFINED-ON-LINE '322) 
(PUT 'FS_UBOUNDP 'DEFINED-IN-FILE 'LINALG/FSIMPLEX.RED) 
(PUT 'FS_UBOUNDP 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE FS_UBOUNDP (X) (OR (NUMBERP X) (EQ X 'INFINITY))) 
(PUT 'FS_SETLB 'NUMBER-OF-ARGS 3) 
(PUT 'FS_SETLB 'DEFINED-ON-LINE '325) 
(PUT 'FS_SETLB 'DEFINED-IN-FILE 'LINALG/FSIMPLEX.RED) 
(PUT 'FS_SETLB 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL GENERAL) GENERAL)) 
(DE FS_SETLB (BOUNDAL V LB)
    (PROG (W)
      (SETQ W (ATSOC V BOUNDAL))
      (COND ((NULL W) (RETURN (CONS (CONS V (LIST LB 'INFINITY)) BOUNDAL))))
      (COND
       ((OR (EQ (CADR W) 'DEFAULT) (EQUAL (CADR W) '(MINUS INFINITY))
            (AND (OR (ATOM LB) (ATOM (CAR LB))) (LESSP (CADR W) LB)))
        (SETCAR (CDR W) LB)))
      (RETURN BOUNDAL))) 
(PUT 'FS_SETUB 'NUMBER-OF-ARGS 3) 
(PUT 'FS_SETUB 'DEFINED-ON-LINE '335) 
(PUT 'FS_SETUB 'DEFINED-IN-FILE 'LINALG/FSIMPLEX.RED) 
(PUT 'FS_SETUB 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL GENERAL) GENERAL)) 
(DE FS_SETUB (BOUNDAL V UB)
    (PROG (W)
      (SETQ W (ATSOC V BOUNDAL))
      (COND ((NULL W) (RETURN (CONS (CONS V (LIST 'DEFAULT UB)) BOUNDAL))))
      (COND
       ((OR (EQ (CADDR W) 'INFINITY)
            (AND (OR (ATOM UB) (ATOM (CAR UB))) (LESSP UB (CADDR W))))
        (SETCAR (CDDR W) UB)))
      (RETURN BOUNDAL))) 
(PUT 'FS_S2A-SIMPLEX 'NUMBER-OF-ARGS 1) 
(PUT 'FS_S2A-SIMPLEX 'DEFINED-ON-LINE '345) 
(PUT 'FS_S2A-SIMPLEX 'DEFINED-IN-FILE 'LINALG/FSIMPLEX.RED) 
(PUT 'FS_S2A-SIMPLEX 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE FS_S2A-SIMPLEX (W) (LIST 'LIST (SC_PREPSQ (CAR W)) (CONS 'LIST (CDR W)))) 
(PUT 'FS_SIMPLEX2 'NUMBER-OF-ARGS 4) 
(PUT 'FS_SIMPLEX2 'DEFINED-ON-LINE '348) 
(PUT 'FS_SIMPLEX2 'DEFINED-IN-FILE 'LINALG/FSIMPLEX.RED) 
(PUT 'FS_SIMPLEX2 'PROCEDURE_TYPE
     '(ARROW (TIMES GENERAL GENERAL GENERAL GENERAL) GENERAL)) 
(DE FS_SIMPLEX2 (MAX-OR-MIN OBJECTIVE EQUATION-LIST BOUNDAL)
    (PROG (A B OBJ-MAT X IB XB BINV PH1OPTVAL ANSL OPTVAL SUBAL ADDCL SPLAL
           GENSYML NO-COEFFS NO-VARIABLES)
      (SETQ NO-COEFFS 0)
      (SETQ NO-VARIABLES 0)
      (PROG (G128 G129)
        (SETQ G128 (FS_ANALYZE-BOUNDS BOUNDAL))
        (SETQ G129 G128)
        (SETQ ADDCL (CAR G128))
        (SETQ G128 (CDR G128))
        (SETQ SUBAL (CAR G128))
        (SETQ G128 (CDR G128))
        (SETQ SPLAL (CAR G128))
        (SETQ G128 (CDR G128))
        (SETQ GENSYML (CAR G128))
        (SETQ G128 (CDR G128))
        (RETURN G129))
      (PROG (G130 G131)
        (SETQ G130
                (FS_PREPROC-BOUNDS OBJECTIVE EQUATION-LIST ADDCL SUBAL SPLAL))
        (SETQ G131 G130)
        (SETQ OBJECTIVE (CAR G130))
        (SETQ G130 (CDR G130))
        (SETQ EQUATION-LIST (CAR G130))
        (SETQ G130 (CDR G130))
        (RETURN G131))
      (SETQ EQUATION-LIST (FS_NORMINPUT OBJECTIVE EQUATION-LIST))
      (PROG (G132 G133)
        (SETQ G132 (FS_INIT MAX-OR-MIN OBJECTIVE EQUATION-LIST))
        (SETQ G133 G132)
        (SETQ A (CAR G132))
        (SETQ G132 (CDR G132))
        (SETQ B (CAR G132))
        (SETQ G132 (CDR G132))
        (SETQ OBJ-MAT (CAR G132))
        (SETQ G132 (CDR G132))
        (SETQ X (CAR G132))
        (SETQ G132 (CDR G132))
        (SETQ NO-VARIABLES (CAR G132))
        (SETQ G132 (CDR G132))
        (RETURN G133))
      (SETQ NO-COEFFS (FAST-COLUMN-DIM A))
      (PROG (G134 G135)
        (SETQ G134 (FS_PHASE1 A B))
        (SETQ G135 G134)
        (SETQ PH1OPTVAL (CAR G134))
        (SETQ G134 (CDR G134))
        (SETQ XB (CAR G134))
        (SETQ G134 (CDR G134))
        (SETQ IB (CAR G134))
        (SETQ G134 (CDR G134))
        (SETQ BINV (CAR G134))
        (SETQ G134 (CDR G134))
        (RETURN G135))
      (COND ((NOT (SC_NULL PH1OPTVAL)) (RETURN 'INFEASIBLE)))
      (PROG (G136 G137)
        (SETQ G136 (FS_PHASE2 OBJ-MAT A B IB BINV XB))
        (SETQ G137 G136)
        (SETQ OPTVAL (CAR G136))
        (SETQ G136 (CDR G136))
        (SETQ XB (CAR G136))
        (SETQ G136 (CDR G136))
        (SETQ IB (CAR G136))
        (SETQ G136 (CDR G136))
        (RETURN G137))
      (SETQ ANSL (FS_MAKE-ANSWER-LIST XB IB NO-COEFFS X NO-VARIABLES))
      (COND ((EQUAL MAX-OR-MIN 'MAX) (SETQ OPTVAL (SC_NEGSQ OPTVAL))))
      (SETQ ANSL (FS_POSTPROC-BOUNDS ANSL SUBAL SPLAL GENSYML))
      (RETURN (CONS OPTVAL ANSL)))) 
(PUT 'FS_ANALYZE-BOUNDS 'NUMBER-OF-ARGS 1) 
(PUT 'FS_ANALYZE-BOUNDS 'DEFINED-ON-LINE '370) 
(PUT 'FS_ANALYZE-BOUNDS 'DEFINED-IN-FILE 'LINALG/FSIMPLEX.RED) 
(PUT 'FS_ANALYZE-BOUNDS 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE FS_ANALYZE-BOUNDS (BOUNDAL)
    (PROG (V LB UB SUBAL ADDCL SPLAL V1 V2 GENSYML)
      (PROG (BOUND)
        (SETQ BOUND BOUNDAL)
       LAB
        (COND ((NULL BOUND) (RETURN NIL)))
        ((LAMBDA (BOUND)
           (PROGN
            (PROG (G138 G139)
              (SETQ G138 BOUND)
              (SETQ G139 G138)
              (SETQ V (CAR G138))
              (SETQ G138 (CDR G138))
              (SETQ LB (CAR G138))
              (SETQ G138 (CDR G138))
              (SETQ UB (CAR G138))
              (SETQ G138 (CDR G138))
              (RETURN G139))
            (COND
             ((OR (EQ LB 'DEFAULT) (NUMBERP LB))
              (PROGN
               (COND
                ((NOT (OR (EQ LB 'DEFAULT) (EQN LB 0)))
                 (SETQ SUBAL (CONS (CONS V (LIST 'DIFFERENCE V LB)) SUBAL))))
               (COND
                ((NUMBERP UB)
                 (SETQ ADDCL (CONS (LIST 'LEQ V (DIFFERENCE UB LB)) ADDCL))))))
             (T
              (PROGN
               (SETQ V1 (GENSYM))
               (SETQ V2 (GENSYM))
               (SETQ SPLAL (CONS (CONS V (LIST 'DIFFERENCE V1 V2)) SPLAL))
               (SETQ GENSYML (CONS V1 (CONS V2 GENSYML)))
               (COND
                ((NUMBERP UB) (SETQ ADDCL (CONS (LIST 'LEQ V UB) ADDCL)))))))))
         (CAR BOUND))
        (SETQ BOUND (CDR BOUND))
        (GO LAB))
      (RETURN (LIST ADDCL SUBAL SPLAL GENSYML)))) 
(PUT 'FS_PREPROC-BOUNDS 'NUMBER-OF-ARGS 5) 
(PUT 'FS_PREPROC-BOUNDS 'DEFINED-ON-LINE '391) 
(PUT 'FS_PREPROC-BOUNDS 'DEFINED-IN-FILE 'LINALG/FSIMPLEX.RED) 
(PUT 'FS_PREPROC-BOUNDS 'PROCEDURE_TYPE
     '(ARROW (TIMES GENERAL GENERAL GENERAL GENERAL GENERAL) GENERAL)) 
(DE FS_PREPROC-BOUNDS (OBJECTIVE EQUATION-LIST ADDCL SUBAL SPLAL)
    (LIST (SUBSQ (SUBSQ OBJECTIVE SUBAL) SPLAL)
          (PROG (C FORALL-RESULT FORALL-ENDPTR)
            (SETQ C (APPEND ADDCL EQUATION-LIST))
            (COND ((NULL C) (RETURN NIL)))
            (SETQ FORALL-RESULT
                    (SETQ FORALL-ENDPTR
                            (CONS
                             ((LAMBDA (C)
                                (LIST (CAR C)
                                      (PREPSQ
                                       (SUBSQ (SUBSQ (SIMP (CADR C)) SUBAL)
                                              SPLAL))
                                      (CADDR C)))
                              (CAR C))
                             NIL)))
           LOOPLABEL
            (SETQ C (CDR C))
            (COND ((NULL C) (RETURN FORALL-RESULT)))
            (RPLACD FORALL-ENDPTR
                    (CONS
                     ((LAMBDA (C)
                        (LIST (CAR C)
                              (PREPSQ
                               (SUBSQ (SUBSQ (SIMP (CADR C)) SUBAL) SPLAL))
                              (CADDR C)))
                      (CAR C))
                     NIL))
            (SETQ FORALL-ENDPTR (CDR FORALL-ENDPTR))
            (GO LOOPLABEL)))) 
(PUT 'FS_POSTPROC-BOUNDS 'NUMBER-OF-ARGS 4) 
(PUT 'FS_POSTPROC-BOUNDS 'DEFINED-ON-LINE '396) 
(PUT 'FS_POSTPROC-BOUNDS 'DEFINED-IN-FILE 'LINALG/FSIMPLEX.RED) 
(PUT 'FS_POSTPROC-BOUNDS 'PROCEDURE_TYPE
     '(ARROW (TIMES GENERAL GENERAL GENERAL GENERAL) GENERAL)) 
(DE FS_POSTPROC-BOUNDS (ANSL SUBAL SPLAL GENSYML)
    (PROG (W ANSAL RANSL)
      (PROG (EQU)
        (SETQ EQU ANSL)
       LAB
        (COND ((NULL EQU) (RETURN NIL)))
        ((LAMBDA (EQU)
           (PROGN
            (SETQ W (ATSOC (CADR EQU) SUBAL))
            (COND
             (W
              (SETQ RANSL
                      (CONS
                       (LIST 'EQUAL (CADR EQU)
                             (REVAL1 (LIST 'PLUS (CADDR EQU) (CADDR (CDR W)))
                                     T))
                       RANSL)))
             ((MEMQ (CADR EQU) GENSYML)
              (SETQ ANSAL (CONS (CONS (CADR EQU) (CADDR EQU)) ANSAL)))
             (T (SETQ RANSL (CONS EQU RANSL))))))
         (CAR EQU))
        (SETQ EQU (CDR EQU))
        (GO LAB))
      (PROG (PR)
        (SETQ PR SPLAL)
       LAB
        (COND ((NULL PR) (RETURN NIL)))
        ((LAMBDA (PR)
           (SETQ RANSL
                   (CONS
                    (LIST 'EQUAL (CAR PR)
                          (PREPSQ (SUBSQ (SIMP (CDR PR)) ANSAL)))
                    RANSL)))
         (CAR PR))
        (SETQ PR (CDR PR))
        (GO LAB))
      (SETQ RANSL
              (SORT RANSL (FUNCTION (LAMBDA (X Y) (ORDOP (CADR X) (CADR Y))))))
      (RETURN RANSL))) 
(PUT 'FS_NORMINPUT 'NUMBER-OF-ARGS 2) 
(PUT 'FS_NORMINPUT 'DEFINED-ON-LINE '415) 
(PUT 'FS_NORMINPUT 'DEFINED-IN-FILE 'LINALG/FSIMPLEX.RED) 
(PUT 'FS_NORMINPUT 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE FS_NORMINPUT (OBJECTIVE EQL)
    (PROG (W VARS)
      (SETQ EQL (FS_MKPOS EQL))
      (SETQ W (FS_MKUNIQUE EQL))
      (SETQ EQL (CAR W))
      (SETQ VARS (CDR W))
      (SETQ EQL (FS_ADD-CONSTRAINTS OBJECTIVE EQL VARS))
      (SETQ EQL
              (PROG (EQUATION FORALL-RESULT FORALL-ENDPTR)
                (SETQ EQUATION EQL)
                (COND ((NULL EQUATION) (RETURN NIL)))
                (SETQ FORALL-RESULT
                        (SETQ FORALL-ENDPTR
                                (CONS
                                 ((LAMBDA (EQUATION)
                                    (LIST (CAR EQUATION)
                                          (SC_SIMP (CADR EQUATION))
                                          (SC_SIMP (CADDR EQUATION))))
                                  (CAR EQUATION))
                                 NIL)))
               LOOPLABEL
                (SETQ EQUATION (CDR EQUATION))
                (COND ((NULL EQUATION) (RETURN FORALL-RESULT)))
                (RPLACD FORALL-ENDPTR
                        (CONS
                         ((LAMBDA (EQUATION)
                            (LIST (CAR EQUATION) (SC_SIMP (CADR EQUATION))
                                  (SC_SIMP (CADDR EQUATION))))
                          (CAR EQUATION))
                         NIL))
                (SETQ FORALL-ENDPTR (CDR FORALL-ENDPTR))
                (GO LOOPLABEL)))
      (RETURN EQL))) 
(PUT 'FS_MKUNIQUE 'NUMBER-OF-ARGS 1) 
(PUT 'FS_MKUNIQUE 'DEFINED-ON-LINE '427) 
(PUT 'FS_MKUNIQUE 'DEFINED-IN-FILE 'LINALG/FSIMPLEX.RED) 
(PUT 'FS_MKUNIQUE 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE FS_MKUNIQUE (EQL)
    (PROG (UEQL COEFFL)
      (PROG (EQUATION)
        (SETQ EQUATION EQL)
       LAB
        (COND ((NULL EQUATION) (RETURN NIL)))
        ((LAMBDA (EQUATION)
           (PROGN
            (COND
             ((NOT (MEMBER EQUATION UEQL))
              (PROGN
               (SETQ UEQL (CONS EQUATION UEQL))
               (SETQ COEFFL (UNION COEFFL (GET_COEFFS (CADR EQUATION)))))))))
         (CAR EQUATION))
        (SETQ EQUATION (CDR EQUATION))
        (GO LAB))
      (RETURN (CONS UEQL COEFFL)))) 
(PUT 'FS_MKPOS 'NUMBER-OF-ARGS 1) 
(PUT 'FS_MKPOS 'DEFINED-ON-LINE '440) 
(PUT 'FS_MKPOS 'DEFINED-IN-FILE 'LINALG/FSIMPLEX.RED) 
(PUT 'FS_MKPOS 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE FS_MKPOS (EQUATION-LIST)
    (PROG (EQUATION FORALL-RESULT FORALL-ENDPTR)
      (SETQ EQUATION EQUATION-LIST)
      (COND ((NULL EQUATION) (RETURN NIL)))
      (SETQ FORALL-RESULT
              (SETQ FORALL-ENDPTR
                      (CONS
                       ((LAMBDA (EQUATION)
                          (COND
                           ((MINUSF (CAR (SIMP (CADDR EQUATION))))
                            (LIST (FS_TURN (CAR EQUATION))
                                  (FS_MINUS (CADR EQUATION))
                                  (FS_MINUS (CADDR EQUATION))))
                           (T EQUATION)))
                        (CAR EQUATION))
                       NIL)))
     LOOPLABEL
      (SETQ EQUATION (CDR EQUATION))
      (COND ((NULL EQUATION) (RETURN FORALL-RESULT)))
      (RPLACD FORALL-ENDPTR
              (CONS
               ((LAMBDA (EQUATION)
                  (COND
                   ((MINUSF (CAR (SIMP (CADDR EQUATION))))
                    (LIST (FS_TURN (CAR EQUATION)) (FS_MINUS (CADR EQUATION))
                          (FS_MINUS (CADDR EQUATION))))
                   (T EQUATION)))
                (CAR EQUATION))
               NIL))
      (SETQ FORALL-ENDPTR (CDR FORALL-ENDPTR))
      (GO LOOPLABEL))) 
(PUT 'FS_ADD-CONSTRAINTS 'NUMBER-OF-ARGS 3) 
(PUT 'FS_ADD-CONSTRAINTS 'DEFINED-ON-LINE '452) 
(PUT 'FS_ADD-CONSTRAINTS 'DEFINED-IN-FILE 'LINALG/FSIMPLEX.RED) 
(PUT 'FS_ADD-CONSTRAINTS 'PROCEDURE_TYPE
     '(ARROW (TIMES GENERAL GENERAL GENERAL) GENERAL)) 
(DE FS_ADD-CONSTRAINTS (OBJ EQL EQVS)
    (PROG (OVS)
      (SETQ OVS (SC_KERNELS OBJ))
      (COND ((EQUAL (LENGTH OVS) (LENGTH EQVS)) (RETURN EQL)))
      (PROG (V)
        (SETQ V OVS)
       LAB
        (COND ((NULL V) (RETURN NIL)))
        ((LAMBDA (V)
           (PROGN
            (COND
             ((NOT (MEMBER V EQVS))
              (PROGN
               (PRIN2 "*** Warning: variable ")
               (PRIN2 V)
               (PRIN2T " not defined in input. Has been defined as >=0.")
               (SETQ EQL (APPEND EQL (LIST (LIST 'GEQ V 0)))))))))
         (CAR V))
        (SETQ V (CDR V))
        (GO LAB))
      (RETURN EQL))) 
(PUT 'FS_INIT 'NUMBER-OF-ARGS 3) 
(PUT 'FS_INIT 'DEFINED-ON-LINE '472) 
(PUT 'FS_INIT 'DEFINED-IN-FILE 'LINALG/FSIMPLEX.RED) 
(PUT 'FS_INIT 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL GENERAL) GENERAL)) 
(DE FS_INIT (MAX-OR-MIN OBJECTIVE EQL)
    (PROG (A B OBJ-MAT X VL NONSLACKS W SLACKEQS)
      (COND ((EQUAL MAX-OR-MIN 'MAX) (SETQ OBJECTIVE (SC_NEGSQ OBJECTIVE))))
      (SETQ VL (FS_EQLVARL EQL))
      (SETQ NONSLACKS (LENGTH VL))
      (SETQ W (FS_ADD-SLACKS-TO-EQUATIONS EQL))
      (SETQ SLACKEQS (CAR W))
      (SETQ B (CADR W))
      (SETQ VL (UNION VL (CADDR W)))
      (SETQ W (FS_GET-X-AND-OBJ-MAT OBJECTIVE VL))
      (SETQ X (CAR W))
      (SETQ OBJ-MAT (CADR W))
      (SETQ A (FS_SIMP-GET-A SLACKEQS VL))
      (RETURN (LIST A B OBJ-MAT X NONSLACKS)))) 
(PUT 'FS_PHASE1 'NUMBER-OF-ARGS 2) 
(PUT 'FS_PHASE1 'DEFINED-ON-LINE '498) 
(PUT 'FS_PHASE1 'DEFINED-IN-FILE 'LINALG/FSIMPLEX.RED) 
(PUT 'FS_PHASE1 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE FS_PHASE1 (A B)
    (PROG (W A1 IB XB BINV PHASE1-OBJ)
      (SETQ W (FS_CREATE-PHASE1-A1-AND-OBJ-AND-IB A))
      (SETQ A1 (CAR W))
      (SETQ PHASE1-OBJ (CADR W))
      (SETQ IB (CADDR W))
      (SETQ XB B)
      (SETQ BINV (FAST-MAKE-IDENTITY (FAST-ROW-DIM A)))
      (RETURN (FS_SIMPLEX-CALCULATION PHASE1-OBJ A1 B IB BINV XB)))) 
(PUT 'FS_PHASE2 'NUMBER-OF-ARGS 6) 
(PUT 'FS_PHASE2 'DEFINED-ON-LINE '509) 
(PUT 'FS_PHASE2 'DEFINED-IN-FILE 'LINALG/FSIMPLEX.RED) 
(PUT 'FS_PHASE2 'PROCEDURE_TYPE
     '(ARROW (TIMES GENERAL GENERAL GENERAL GENERAL GENERAL GENERAL) GENERAL)) 
(DE FS_PHASE2 (OBJ-MAT A B IB BINV XB)
    (PROG (BIG K STOP I SUM ABS-SUM WORK M N)
      (SETQ M 0)
      (SETQ N 0)
      (SETQ M (FAST-ROW-DIM A))
      (SETQ N (FAST-COLUMN-DIM A))
      (PROG (ELL)
        (SETQ ELL 1)
       LAB
        (COND ((MINUSP (DIFFERENCE M ELL)) (RETURN NIL)))
        (COND
         ((GREATERP (NTH IB ELL) N)
          (PROGN
           (SETQ BIG (SC_SIMP (MINUS 1)))
           (SETQ K 0)
           (SETQ STOP NIL)
           (SETQ I 1)
           (PROG ()
            WHILELABEL
             (COND ((NOT (AND (LEQ I N) (NOT STOP))) (RETURN NIL)))
             (PROGN
              (SETQ SUM
                      (SC_SCALARPRODUCT (FAST-STACK-ROWS BINV ELL)
                       (FAST-AUGMENT-COLUMNS A I)))
              (SETQ ABS-SUM (SC_ABS SUM))
              (COND ((SC_GEQ BIG ABS-SUM) (SETQ STOP T))
                    (T (PROGN (SETQ BIG ABS-SUM) (SETQ K I))))
              (SETQ I (PLUS I 1)))
             (GO WHILELABEL))
           (COND
            ((SC_MINUSSQ BIG)
             (REDERR
              (LIST "Error in simplex: Constraint" K " is redundant."))))
           (SETQ WORK (FAST-AUGMENT-COLUMNS A K))
           (SETQ BINV (FS_PHIPRM BINV WORK ELL))
           (SETCAR (PNTH IB ELL) K))))
        (SETQ ELL (PLUS2 ELL 1))
        (GO LAB))
      (RETURN (FS_SIMPLEX-CALCULATION OBJ-MAT A B IB BINV XB)))) 
(PUT 'FS_CREATE-PHASE1-A1-AND-OBJ-AND-IB 'NUMBER-OF-ARGS 1) 
(PUT 'FS_CREATE-PHASE1-A1-AND-OBJ-AND-IB 'DEFINED-ON-LINE '541) 
(PUT 'FS_CREATE-PHASE1-A1-AND-OBJ-AND-IB 'DEFINED-IN-FILE 'LINALG/FSIMPLEX.RED) 
(PUT 'FS_CREATE-PHASE1-A1-AND-OBJ-AND-IB 'PROCEDURE_TYPE
     '(ARROW GENERAL GENERAL)) 
(DE FS_CREATE-PHASE1-A1-AND-OBJ-AND-IB (A)
    (PROG (PHASE1-OBJ A1 IB COLUMN-DIM-A1 COLUMN-DIM-A I)
      (SETQ COLUMN-DIM-A1 0)
      (SETQ COLUMN-DIM-A 0)
      (SETQ I 0)
      (SETQ COLUMN-DIM-A (FAST-COLUMN-DIM A))
      (SETQ A1 (SC_MATRIXAUGMENT A (FAST-MAKE-IDENTITY (FAST-ROW-DIM A))))
      (SETQ COLUMN-DIM-A1 (FAST-COLUMN-DIM A1))
      (SETQ PHASE1-OBJ (SC_MKMATRIX 1 COLUMN-DIM-A1))
      (PROG (I)
        (SETQ I (PLUS COLUMN-DIM-A 1))
       LAB
        (COND ((MINUSP (DIFFERENCE COLUMN-DIM-A1 I)) (RETURN NIL)))
        (SC_SETMAT PHASE1-OBJ 1 I (SC_SIMP 1))
        (SETQ I (PLUS2 I 1))
        (GO LAB))
      (SETQ IB
              (PROG (I FORALL-RESULT FORALL-ENDPTR)
                (SETQ I (PLUS COLUMN-DIM-A 1))
                (COND ((MINUSP (DIFFERENCE COLUMN-DIM-A1 I)) (RETURN NIL)))
                (SETQ FORALL-RESULT (SETQ FORALL-ENDPTR (CONS I NIL)))
               LOOPLABEL
                (SETQ I (PLUS2 I 1))
                (COND
                 ((MINUSP (DIFFERENCE COLUMN-DIM-A1 I))
                  (RETURN FORALL-RESULT)))
                (RPLACD FORALL-ENDPTR (CONS I NIL))
                (SETQ FORALL-ENDPTR (CDR FORALL-ENDPTR))
                (GO LOOPLABEL)))
      (RETURN (LIST A1 PHASE1-OBJ IB)))) 
(PUT 'FS_SIMPLEX-CALCULATION 'NUMBER-OF-ARGS 6) 
(PUT 'FS_SIMPLEX-CALCULATION 'DEFINED-ON-LINE '555) 
(PUT 'FS_SIMPLEX-CALCULATION 'DEFINED-IN-FILE 'LINALG/FSIMPLEX.RED) 
(PUT 'FS_SIMPLEX-CALCULATION 'PROCEDURE_TYPE
     '(ARROW (TIMES GENERAL GENERAL GENERAL GENERAL GENERAL GENERAL) GENERAL)) 
(DE FS_SIMPLEX-CALCULATION (OBJ-MAT A B IB BINV XB)
    (PROG (RS1 SB RS2 RS3 U CONTINUE OBJ-VALUE K ITER ELL)
      (SETQ K 0)
      (SETQ ITER 0)
      (SETQ ELL 0)
      (SETQ OBJ-VALUE (FS_COMPUTE-OBJECTIVE (FS_GET-CB OBJ-MAT IB) XB))
      (PROG ()
       WHILELABEL
        (COND ((NOT (NEQ CONTINUE 'OPTIMAL)) (RETURN NIL)))
        (PROGN
         (SETQ RS1 (FS_RSTEP1 A OBJ-MAT BINV IB))
         (SETQ SB (CAR RS1))
         (SETQ K (CADR RS1))
         (SETQ U (CADDR RS1))
         (SETQ CONTINUE (CADDDR RS1))
         (COND
          ((NEQ CONTINUE 'OPTIMAL)
           (PROGN
            (SETQ RS2 (FS_RSTEP2 XB SB))
            (SETQ ELL (CADR RS2))
            (SETQ RS3 (FS_RSTEP3 XB OBJ-MAT B BINV A IB K ELL))
            (SETQ ITER (PLUS ITER 1))
            (SETQ BINV (CAR RS3))
            (SETQ OBJ-VALUE (CADR RS3))
            (SETQ XB (CADDR RS3))))))
        (GO WHILELABEL))
      (RETURN (LIST OBJ-VALUE XB IB BINV)))) 
(PUT 'FS_EQLVARL 'NUMBER-OF-ARGS 1) 
(PUT 'FS_EQLVARL 'DEFINED-ON-LINE '579) 
(PUT 'FS_EQLVARL 'DEFINED-IN-FILE 'LINALG/FSIMPLEX.RED) 
(PUT 'FS_EQLVARL 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE FS_EQLVARL (EQL)
    (PROG (VL)
      (PROG (EQUATION)
        (SETQ EQUATION EQL)
       LAB
        (COND ((NULL EQUATION) (RETURN NIL)))
        ((LAMBDA (EQUATION) (SETQ VL (UNION VL (SC_KERNELS (CADR EQUATION)))))
         (CAR EQUATION))
        (SETQ EQUATION (CDR EQUATION))
        (GO LAB))
      (RETURN VL))) 
(PUT 'FS_ADD-SLACKS-TO-EQUATIONS 'NUMBER-OF-ARGS 1) 
(PUT 'FS_ADD-SLACKS-TO-EQUATIONS 'DEFINED-ON-LINE '589) 
(PUT 'FS_ADD-SLACKS-TO-EQUATIONS 'DEFINED-IN-FILE 'LINALG/FSIMPLEX.RED) 
(PUT 'FS_ADD-SLACKS-TO-EQUATIONS 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE FS_ADD-SLACKS-TO-EQUATIONS (EQUATION-LIST)
    (PROG (SLACK-LIST RHS-MAT SLACK-VARIABLE SLACK-VARIABLE-LIST B-IN-EQ I ROW)
      (SETQ I 0)
      (SETQ ROW 0)
      (SETQ RHS-MAT (SC_MKMATRIX (LENGTH EQUATION-LIST) 1))
      (SETQ ROW 1)
      (PROG (EQUATION)
        (SETQ EQUATION EQUATION-LIST)
       LAB
        (COND ((NULL EQUATION) (RETURN NIL)))
        ((LAMBDA (EQUATION)
           (PROGN
            (SETQ B-IN-EQ (CAADDR EQUATION))
            (COND
             ((AND (AND (NOT (NUMBERP B-IN-EQ)) (NEQ B-IN-EQ NIL))
                   (PAIRP B-IN-EQ) (NEQ (CAR B-IN-EQ) '|:RD:|))
              (REDERR
               "Error in simplex: Right hand side of inequalities must be numbers."))
             (T (SC_SETMAT RHS-MAT ROW 1 (CADDR EQUATION))))
            (SETQ ROW (PLUS ROW 1))
            (COND
             ((EQUAL (CAR EQUATION) 'GEQ)
              (PROGN
               (SETQ I (PLUS I 1))
               (SETQ SLACK-VARIABLE (MKID 'SL-VAR I))
               (SETQ EQUATION
                       (SC_ADDSQ (SC_NEGSQ (SC_SIMP (MKID 'SL-VAR I)))
                        (CADR EQUATION)))
               (SETQ SLACK-VARIABLE-LIST
                       (APPEND SLACK-VARIABLE-LIST (LIST SLACK-VARIABLE)))))
             ((EQUAL (CAR EQUATION) 'LEQ)
              (PROGN
               (SETQ I (PLUS I 1))
               (SETQ SLACK-VARIABLE (MKID 'SL-VAR I))
               (SETQ EQUATION
                       (SC_ADDSQ (SC_SIMP (MKID 'SL-VAR I)) (CADR EQUATION)))
               (SETQ SLACK-VARIABLE-LIST
                       (APPEND SLACK-VARIABLE-LIST (LIST SLACK-VARIABLE)))))
             ((EQUAL (CAR EQUATION) 'EQUAL) (SETQ EQUATION (CADR EQUATION)))
             (T
              (REDERR
               "Error in simplex: Inequalities must contain either >=, <=, or =.")))
            (SETQ SLACK-LIST (APPEND SLACK-LIST (LIST EQUATION)))))
         (CAR EQUATION))
        (SETQ EQUATION (CDR EQUATION))
        (GO LAB))
      (RETURN (LIST SLACK-LIST RHS-MAT SLACK-VARIABLE-LIST)))) 
(FLAG '(ADD-SLACKS-TO-LIST) 'OPFN) 
(PUT 'FS_SIMP-GET-A 'NUMBER-OF-ARGS 2) 
(PUT 'FS_SIMP-GET-A 'DEFINED-ON-LINE '632) 
(PUT 'FS_SIMP-GET-A 'DEFINED-IN-FILE 'LINALG/FSIMPLEX.RED) 
(PUT 'FS_SIMP-GET-A 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE FS_SIMP-GET-A (SLACK-EQUATIONS VARIABLE-LIST)
    (PROG (A SLACK-ELT VAR-ELT LENGTH-SLACK-EQUATIONS LENGTH-VARIABLE-LIST)
      (SETQ LENGTH-SLACK-EQUATIONS 0)
      (SETQ LENGTH-VARIABLE-LIST 0)
      (SETQ LENGTH-SLACK-EQUATIONS (LENGTH SLACK-EQUATIONS))
      (SETQ LENGTH-VARIABLE-LIST (LENGTH VARIABLE-LIST))
      (SETQ A (SC_MKMATRIX LENGTH-SLACK-EQUATIONS LENGTH-VARIABLE-LIST))
      (PROG (ROW)
        (SETQ ROW 1)
       LAB
        (COND ((MINUSP (DIFFERENCE LENGTH-SLACK-EQUATIONS ROW)) (RETURN NIL)))
        (PROGN
         (PROG (COL)
           (SETQ COL 1)
          LAB
           (COND ((MINUSP (DIFFERENCE LENGTH-VARIABLE-LIST COL)) (RETURN NIL)))
           (PROGN
            (SETQ SLACK-ELT (NTH SLACK-EQUATIONS ROW))
            (SETQ VAR-ELT (NTH VARIABLE-LIST COL))
            (SC_SETMAT A ROW COL
             (SC_SIMP
              (AEVAL* (LIST 'COEFFN (SC_PREPSQ SLACK-ELT) VAR-ELT 1)))))
           (SETQ COL (PLUS2 COL 1))
           (GO LAB)))
        (SETQ ROW (PLUS2 ROW 1))
        (GO LAB))
      (RETURN A))) 
(PUT 'FS_GET-X-AND-OBJ-MAT 'NUMBER-OF-ARGS 2) 
(PUT 'FS_GET-X-AND-OBJ-MAT 'DEFINED-ON-LINE '650) 
(PUT 'FS_GET-X-AND-OBJ-MAT 'DEFINED-IN-FILE 'LINALG/FSIMPLEX.RED) 
(PUT 'FS_GET-X-AND-OBJ-MAT 'PROCEDURE_TYPE
     '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE FS_GET-X-AND-OBJ-MAT (OBJECTIVE VARIABLE-LIST)
    (PROG (X OBJ-MAT LENGTH-VARIABLE-LIST TMP)
      (SETQ LENGTH-VARIABLE-LIST 0)
      (SETQ TMP 0)
      (SETQ LENGTH-VARIABLE-LIST (LENGTH VARIABLE-LIST))
      (SETQ X (SC_MKMATRIX LENGTH-VARIABLE-LIST 1))
      (SETQ OBJ-MAT (SC_MKMATRIX 1 LENGTH-VARIABLE-LIST))
      (PROG (I)
        (SETQ I 1)
       LAB
        (COND ((MINUSP (DIFFERENCE LENGTH-VARIABLE-LIST I)) (RETURN NIL)))
        (PROGN
         (SC_SETMAT X I 1 (NTH VARIABLE-LIST I))
         (SETQ TMP (NTH VARIABLE-LIST I))
         (SC_SETMAT OBJ-MAT 1 I
          (SC_SIMP (AEVAL* (LIST 'COEFFN (SC_PREPSQ OBJECTIVE) TMP 1)))))
        (SETQ I (PLUS2 I 1))
        (GO LAB))
      (RETURN (LIST X OBJ-MAT)))) 
(PUT 'FS_GET-CB 'NUMBER-OF-ARGS 2) 
(PUT 'FS_GET-CB 'DEFINED-ON-LINE '667) 
(PUT 'FS_GET-CB 'DEFINED-IN-FILE 'LINALG/FSIMPLEX.RED) 
(PUT 'FS_GET-CB 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE FS_GET-CB (OBJ-MAT IB) (FAST-AUGMENT-COLUMNS OBJ-MAT IB)) 
(PUT 'FS_COMPUTE-OBJECTIVE 'NUMBER-OF-ARGS 2) 
(PUT 'FS_COMPUTE-OBJECTIVE 'DEFINED-ON-LINE '672) 
(PUT 'FS_COMPUTE-OBJECTIVE 'DEFINED-IN-FILE 'LINALG/FSIMPLEX.RED) 
(PUT 'FS_COMPUTE-OBJECTIVE 'PROCEDURE_TYPE
     '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE FS_COMPUTE-OBJECTIVE (CB XB) (SC_SCALARPRODUCT CB XB)) 
(PUT 'FS_RSTEP1 'NUMBER-OF-ARGS 4) 
(PUT 'FS_RSTEP1 'DEFINED-ON-LINE '676) 
(PUT 'FS_RSTEP1 'DEFINED-IN-FILE 'LINALG/FSIMPLEX.RED) 
(PUT 'FS_RSTEP1 'PROCEDURE_TYPE
     '(ARROW (TIMES GENERAL GENERAL GENERAL GENERAL) GENERAL)) 
(DE FS_RSTEP1 (A OBJ-MAT BINV IB)
    (PROG (U SB SUM I-IN-IB I J M N K VKMIN)
      (SETQ I 0)
      (SETQ J 0)
      (SETQ M 0)
      (SETQ N 0)
      (SETQ K 0)
      (SETQ VKMIN 0)
      (SETQ M (FAST-ROW-DIM A))
      (SETQ N (FAST-COLUMN-DIM A))
      (SETQ U (SC_MKMATRIX M 1))
      (SETQ SB (SC_MKMATRIX M 1))
      (SETQ U
              (SC_MATRIXPRODUCT (SC_NEGTRANSPOSE BINV)
               (SC_TRANSPOSE (FS_GET-CB OBJ-MAT IB))))
      (SETQ K 0)
      (SETQ VKMIN (SC_SIMP '(EXPT 10 10)))
      (SETQ I 1)
      (PROG (I)
        (SETQ I 1)
       LAB
        (COND ((MINUSP (DIFFERENCE N I)) (RETURN NIL)))
        (PROGN
         (SETQ I-IN-IB NIL)
         (PROG (J)
           (SETQ J 1)
          LAB
           (COND ((MINUSP (DIFFERENCE M J)) (RETURN NIL)))
           (COND ((EQUAL I (NTH IB J)) (SETQ I-IN-IB T)))
           (SETQ J (PLUS2 J 1))
           (GO LAB))
         (COND
          ((NOT I-IN-IB)
           (PROGN
            (SETQ SUM
                    (SC_ADDSQ (SC_GETMAT OBJ-MAT 1 I)
                     (SC_COLUMNSCALARPRODUCT (FAST-AUGMENT-COLUMNS A I) U)))
            (COND
             ((NOT (SC_GEQ SUM VKMIN))
              (PROGN (SETQ VKMIN SUM) (SETQ K I))))))))
        (SETQ I (PLUS2 I 1))
        (GO LAB))
      (COND
       ((SC_MINUSSQ VKMIN)
        (PROGN
         (PROG (I)
           (SETQ I 1)
          LAB
           (COND ((MINUSP (DIFFERENCE M I)) (RETURN NIL)))
           (PROGN
            (SETQ SUM (SC_SIMP 0))
            (PROG (J)
              (SETQ J 1)
             LAB
              (COND ((MINUSP (DIFFERENCE M J)) (RETURN NIL)))
              (SETQ SUM
                      (SC_ADDSQ SUM
                       (SC_MULTSQ (SC_GETMAT BINV I J) (SC_GETMAT A J K))))
              (SETQ J (PLUS2 J 1))
              (GO LAB))
            (SC_SETMAT SB I 1 SUM))
           (SETQ I (PLUS2 I 1))
           (GO LAB))
         (RETURN (LIST SB K U NIL))))
       (T (RETURN (LIST SB K U 'OPTIMAL)))))) 
(PUT 'FS_RSTEP2 'NUMBER-OF-ARGS 2) 
(PUT 'FS_RSTEP2 'DEFINED-ON-LINE '719) 
(PUT 'FS_RSTEP2 'DEFINED-IN-FILE 'LINALG/FSIMPLEX.RED) 
(PUT 'FS_RSTEP2 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE FS_RSTEP2 (XB SB)
    (PROG (RATIO SB-ELEM ELL SIGB)
      (SETQ ELL 0)
      (SETQ SIGB 0)
      (SETQ SIGB (SC_SIMP '(EXPT 10 30)))
      (PROG (I)
        (SETQ I 1)
       LAB
        (COND ((MINUSP (DIFFERENCE (FAST-ROW-DIM SB) I)) (RETURN NIL)))
        (PROGN
         (SETQ SB-ELEM (SC_GETMAT SB I 1))
         (COND
          ((AND (NOT (SC_MINUSSQ SB-ELEM)) (NOT (SC_NULL SB-ELEM)))
           (PROGN
            (SETQ RATIO (SC_QUOTSQ (SC_GETMAT XB I 1) SB-ELEM))
            (COND
             ((NOT (SC_GEQ RATIO SIGB))
              (PROGN (SETQ SIGB RATIO) (SETQ ELL I))))))))
        (SETQ I (PLUS2 I 1))
        (GO LAB))
      (COND
       ((EQUAL ELL 0) (REDERR "Error in simplex: The problem is unbounded.")))
      (RETURN (LIST SIGB ELL)))) 
(PUT 'FS_RSTEP3 'NUMBER-OF-ARGS 8) 
(PUT 'FS_RSTEP3 'DEFINED-ON-LINE '739) 
(PUT 'FS_RSTEP3 'DEFINED-IN-FILE 'LINALG/FSIMPLEX.RED) 
(PUT 'FS_RSTEP3 'PROCEDURE_TYPE
     '(ARROW
       (TIMES GENERAL GENERAL GENERAL GENERAL GENERAL GENERAL GENERAL GENERAL)
       GENERAL)) 
(DE FS_RSTEP3 (XB OBJ-MAT B BINV A IB K ELL)
    (PROG (WORK)
      (SETQ WORK (FAST-AUGMENT-COLUMNS A K))
      (SETQ BINV (FS_PHIPRM BINV WORK ELL))
      (SETQ XB (SC_MATRIXPRODUCT BINV B))
      (SETCAR (PNTH IB ELL) K)
      (SETQ OBJ-MAT (FS_COMPUTE-OBJECTIVE (FS_GET-CB OBJ-MAT IB) XB))
      (RETURN (LIST BINV OBJ-MAT XB)))) 
(PUT 'FS_PHIPRM 'NUMBER-OF-ARGS 3) 
(PUT 'FS_PHIPRM 'DEFINED-ON-LINE '750) 
(PUT 'FS_PHIPRM 'DEFINED-IN-FILE 'LINALG/FSIMPLEX.RED) 
(PUT 'FS_PHIPRM 'PROCEDURE_TYPE
     '(ARROW (TIMES GENERAL GENERAL GENERAL) GENERAL)) 
(DE FS_PHIPRM (BINV D ELL)
    (PROG (SUM TEMP M)
      (SETQ M 0)
      (SETQ M (FAST-COLUMN-DIM BINV))
      (SETQ SUM (SC_SCALARPRODUCT (FAST-STACK-ROWS BINV ELL) D))
      (COND ((NOT (SC_NULL SUM)) (SETQ SUM (SC_QUOTSQ (SC_SIMP 1) SUM))))
      (SETQ BINV (FAST-MULT-ROWS BINV ELL SUM))
      (PROG (J)
        (SETQ J 1)
       LAB
        (COND ((MINUSP (DIFFERENCE M J)) (RETURN NIL)))
        (PROGN
         (COND
          ((NEQ J ELL)
           (PROGN
            (SETQ TEMP (SC_SCALARPRODUCT (FAST-STACK-ROWS BINV J) D))
            (SETQ BINV (FAST-ADD-ROWS BINV ELL J (SC_NEGSQ TEMP)))))))
        (SETQ J (PLUS2 J 1))
        (GO LAB))
      (RETURN BINV))) 
(PUT 'FS_MAKE-ANSWER-LIST 'NUMBER-OF-ARGS 5) 
(PUT 'FS_MAKE-ANSWER-LIST 'DEFINED-ON-LINE '768) 
(PUT 'FS_MAKE-ANSWER-LIST 'DEFINED-IN-FILE 'LINALG/FSIMPLEX.RED) 
(PUT 'FS_MAKE-ANSWER-LIST 'PROCEDURE_TYPE
     '(ARROW (TIMES GENERAL GENERAL GENERAL GENERAL GENERAL) GENERAL)) 
(DE FS_MAKE-ANSWER-LIST (XB IB NO-COEFFS X NO-VARIABLES)
    (PROG (X-MAT ANSL XB-ELEM I)
      (SETQ I 0)
      (SETQ X-MAT (SC_MKMATRIX 1 NO-COEFFS))
      (SETQ I 1)
      (PROG (ELT)
        (SETQ ELT IB)
       LAB
        (COND ((NULL ELT) (RETURN NIL)))
        ((LAMBDA (ELT)
           (PROGN
            (SETQ XB-ELEM (SC_GETMAT XB I 1))
            (COND ((NOT (SC_NULL XB-ELEM)) (SC_SETMAT X-MAT 1 ELT XB-ELEM)))
            (SETQ I (PLUS I 1))))
         (CAR ELT))
        (SETQ ELT (CDR ELT))
        (GO LAB))
      (SETQ ANSL
              (PROG (I FORALL-RESULT FORALL-ENDPTR)
                (SETQ I 1)
                (COND ((MINUSP (DIFFERENCE NO-VARIABLES I)) (RETURN NIL)))
                (SETQ FORALL-RESULT
                        (SETQ FORALL-ENDPTR
                                (CONS
                                 (LIST 'EQUAL (SC_GETMAT X I 1)
                                       (SC_PREPSQ (SC_GETMAT X-MAT 1 I)))
                                 NIL)))
               LOOPLABEL
                (SETQ I (PLUS2 I 1))
                (COND
                 ((MINUSP (DIFFERENCE NO-VARIABLES I)) (RETURN FORALL-RESULT)))
                (RPLACD FORALL-ENDPTR
                        (CONS
                         (LIST 'EQUAL (SC_GETMAT X I 1)
                               (SC_PREPSQ (SC_GETMAT X-MAT 1 I)))
                         NIL))
                (SETQ FORALL-ENDPTR (CDR FORALL-ENDPTR))
                (GO LOOPLABEL)))
      (RETURN ANSL))) 
(PUT 'SC_SIMP 'NUMBER-OF-ARGS 1) 
(PUT 'SC_SIMP 'DEFINED-ON-LINE '788) 
(PUT 'SC_SIMP 'DEFINED-IN-FILE 'LINALG/FSIMPLEX.RED) 
(PUT 'SC_SIMP 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE SC_SIMP (A) (SIMP A)) 
(PUT 'SC_PREPSQ 'NUMBER-OF-ARGS 1) 
(PUT 'SC_PREPSQ 'DEFINED-ON-LINE '792) 
(PUT 'SC_PREPSQ 'DEFINED-IN-FILE 'LINALG/FSIMPLEX.RED) 
(PUT 'SC_PREPSQ 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE SC_PREPSQ (A) (PREPSQ A)) 
(PUT 'SC_NUMR 'NUMBER-OF-ARGS 1) 
(PUT 'SC_NUMR 'DEFINED-ON-LINE '796) 
(PUT 'SC_NUMR 'DEFINED-IN-FILE 'LINALG/FSIMPLEX.RED) 
(PUT 'SC_NUMR 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE SC_NUMR (A) (CAR A)) 
(PUT 'SC_DENR 'NUMBER-OF-ARGS 1) 
(PUT 'SC_DENR 'DEFINED-ON-LINE '800) 
(PUT 'SC_DENR 'DEFINED-IN-FILE 'LINALG/FSIMPLEX.RED) 
(PUT 'SC_DENR 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE SC_DENR (A) (CDR A)) 
(PUT 'SC_KERNELS 'NUMBER-OF-ARGS 1) 
(PUT 'SC_KERNELS 'DEFINED-ON-LINE '804) 
(PUT 'SC_KERNELS 'DEFINED-IN-FILE 'LINALG/FSIMPLEX.RED) 
(PUT 'SC_KERNELS 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE SC_KERNELS (U) (KERNELS (CAR U))) 
(PUT 'SC_ADDSQ 'NUMBER-OF-ARGS 2) 
(PUT 'SC_ADDSQ 'DEFINED-ON-LINE '807) 
(PUT 'SC_ADDSQ 'DEFINED-IN-FILE 'LINALG/FSIMPLEX.RED) 
(PUT 'SC_ADDSQ 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE SC_ADDSQ (A B) (ADDSQ A B)) 
(PUT 'SC_NEGSQ 'NUMBER-OF-ARGS 1) 
(PUT 'SC_NEGSQ 'DEFINED-ON-LINE '811) 
(PUT 'SC_NEGSQ 'DEFINED-IN-FILE 'LINALG/FSIMPLEX.RED) 
(PUT 'SC_NEGSQ 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE SC_NEGSQ (A) (NEGSQ A)) 
(PUT 'SC_SUBTRSQ 'NUMBER-OF-ARGS 2) 
(PUT 'SC_SUBTRSQ 'DEFINED-ON-LINE '815) 
(PUT 'SC_SUBTRSQ 'DEFINED-IN-FILE 'LINALG/FSIMPLEX.RED) 
(PUT 'SC_SUBTRSQ 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE SC_SUBTRSQ (A B) (ADDSQ A (NEGSQ B))) 
(PUT 'SC_MULTSQ 'NUMBER-OF-ARGS 2) 
(PUT 'SC_MULTSQ 'DEFINED-ON-LINE '819) 
(PUT 'SC_MULTSQ 'DEFINED-IN-FILE 'LINALG/FSIMPLEX.RED) 
(PUT 'SC_MULTSQ 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE SC_MULTSQ (A B) (MULTSQ A B)) 
(PUT 'SC_QUOTSQ 'NUMBER-OF-ARGS 2) 
(PUT 'SC_QUOTSQ 'DEFINED-ON-LINE '823) 
(PUT 'SC_QUOTSQ 'DEFINED-IN-FILE 'LINALG/FSIMPLEX.RED) 
(PUT 'SC_QUOTSQ 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE SC_QUOTSQ (A B) (MULTSQ A (INVSQ B))) 
(PUT 'SC_NULL 'NUMBER-OF-ARGS 1) 
(PUT 'SC_NULL 'DEFINED-ON-LINE '827) 
(PUT 'SC_NULL 'DEFINED-IN-FILE 'LINALG/FSIMPLEX.RED) 
(PUT 'SC_NULL 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE SC_NULL (A) (NULL (CAR A))) 
(PUT 'SC_MINUSSQ 'NUMBER-OF-ARGS 1) 
(PUT 'SC_MINUSSQ 'DEFINED-ON-LINE '831) 
(PUT 'SC_MINUSSQ 'DEFINED-IN-FILE 'LINALG/FSIMPLEX.RED) 
(PUT 'SC_MINUSSQ 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE SC_MINUSSQ (S) (MINUSF (CAR S))) 
(PUT 'SC_GETVAR 'NUMBER-OF-ARGS 1) 
(PUT 'SC_GETVAR 'DEFINED-ON-LINE '835) 
(PUT 'SC_GETVAR 'DEFINED-IN-FILE 'LINALG/FSIMPLEX.RED) 
(PUT 'SC_GETVAR 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE SC_GETVAR (S) (KERNELS (CAR S))) 
(PUT 'SC_GEQ 'NUMBER-OF-ARGS 2) 
(PUT 'SC_GEQ 'DEFINED-ON-LINE '839) 
(PUT 'SC_GEQ 'DEFINED-IN-FILE 'LINALG/FSIMPLEX.RED) 
(PUT 'SC_GEQ 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE SC_GEQ (A B) (NOT (SC_MINUSSQ (SC_SUBTRSQ A B)))) 
(PUT 'SC_ABS 'NUMBER-OF-ARGS 1) 
(PUT 'SC_ABS 'DEFINED-ON-LINE '844) 
(PUT 'SC_ABS 'DEFINED-IN-FILE 'LINALG/FSIMPLEX.RED) 
(PUT 'SC_ABS 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE SC_ABS (U) (COND ((SC_MINUSSQ U) (SC_NEGSQ U)) (T U))) 
(PUT 'FAST-ROW-DIM 'NUMBER-OF-ARGS 1) 
(PUT 'FAST-ROW-DIM 'DEFINED-ON-LINE '850) 
(PUT 'FAST-ROW-DIM 'DEFINED-IN-FILE 'LINALG/FSIMPLEX.RED) 
(PUT 'FAST-ROW-DIM 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE FAST-ROW-DIM (IN-MAT) (PLUS (UPBV IN-MAT) 1)) 
(PUT 'FAST-COLUMN-DIM 'NUMBER-OF-ARGS 1) 
(PUT 'FAST-COLUMN-DIM 'DEFINED-ON-LINE '854) 
(PUT 'FAST-COLUMN-DIM 'DEFINED-IN-FILE 'LINALG/FSIMPLEX.RED) 
(PUT 'FAST-COLUMN-DIM 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE FAST-COLUMN-DIM (IN-MAT) (PLUS (UPBV (IGETV IN-MAT 0)) 1)) 
(PUT 'FAST-STACK-ROWS 'NUMBER-OF-ARGS 2) 
(PUT 'FAST-STACK-ROWS 'DEFINED-ON-LINE '858) 
(PUT 'FAST-STACK-ROWS 'DEFINED-IN-FILE 'LINALG/FSIMPLEX.RED) 
(PUT 'FAST-STACK-ROWS 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE FAST-STACK-ROWS (IN-MAT ROW-LIST)
    (PROG (V)
      (SETQ V (MKVECT 0))
      (IPUTV V 0 (IGETV IN-MAT (DIFFERENCE ROW-LIST 1)))
      (RETURN V))) 
(PUT 'FAST-ADD-ROWS 'NUMBER-OF-ARGS 4) 
(PUT 'FAST-ADD-ROWS 'DEFINED-ON-LINE '866) 
(PUT 'FAST-ADD-ROWS 'DEFINED-IN-FILE 'LINALG/FSIMPLEX.RED) 
(PUT 'FAST-ADD-ROWS 'PROCEDURE_TYPE
     '(ARROW (TIMES GENERAL GENERAL GENERAL GENERAL) GENERAL)) 
(DE FAST-ADD-ROWS (IN-MAT R1 R2 MULT1)
    (PROG (FAST-GETMATEL ROW1 ROW2 COLDIM)
      (SETQ COLDIM 0)
      (SETQ COLDIM (FAST-COLUMN-DIM IN-MAT))
      (SETQ ROW1 (SC_IGETV IN-MAT (DIFFERENCE R1 1)))
      (SETQ ROW2 (SC_IGETV IN-MAT (DIFFERENCE R2 1)))
      (COND ((SC_NULL MULT1) (RETURN IN-MAT)))
      (PROG (I)
        (SETQ I 1)
       LAB
        (COND ((MINUSP (DIFFERENCE COLDIM I)) (RETURN NIL)))
        (PROGN
         (COND
          ((NOT
            (SC_NULL (SETQ FAST-GETMATEL (SC_IGETV ROW1 (DIFFERENCE I 1)))))
           (SC_IPUTV ROW2 (DIFFERENCE I 1)
            (SC_ADDSQ (SC_MULTSQ MULT1 FAST-GETMATEL)
             (SC_IGETV ROW2 (DIFFERENCE I 1)))))))
        (SETQ I (PLUS2 I 1))
        (GO LAB))
      (RETURN IN-MAT))) 
(PUT 'FAST-AUGMENT-COLUMNS 'NUMBER-OF-ARGS 2) 
(PUT 'FAST-AUGMENT-COLUMNS 'DEFINED-ON-LINE '883) 
(PUT 'FAST-AUGMENT-COLUMNS 'DEFINED-IN-FILE 'LINALG/FSIMPLEX.RED) 
(PUT 'FAST-AUGMENT-COLUMNS 'PROCEDURE_TYPE
     '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE FAST-AUGMENT-COLUMNS (IN-MAT COL-LIST)
    (PROG (V ROWDIM NEW-ROW LENGTH-COL-LIST ACTUAL)
      (SETQ ROWDIM (FAST-ROW-DIM IN-MAT))
      (SETQ LENGTH-COL-LIST (LENGTH COL-LIST))
      (SETQ V (MKVECT (DIFFERENCE ROWDIM 1)))
      (COND
       ((ATOM COL-LIST)
        (PROG (I)
          (SETQ I 0)
         LAB
          (COND ((MINUSP (DIFFERENCE (DIFFERENCE ROWDIM 1) I)) (RETURN NIL)))
          (PROGN
           (SETQ NEW-ROW (MKVECT 0))
           (SC_IPUTV NEW-ROW 0 (SC_GETMAT IN-MAT (PLUS I 1) COL-LIST))
           (SC_IPUTV V I NEW-ROW))
          (SETQ I (PLUS2 I 1))
          (GO LAB)))
       (T
        (PROG (I)
          (SETQ I 0)
         LAB
          (COND ((MINUSP (DIFFERENCE (DIFFERENCE ROWDIM 1) I)) (RETURN NIL)))
          (PROGN
           (SETQ NEW-ROW (MKVECT (DIFFERENCE LENGTH-COL-LIST 1)))
           (PROG (J)
             (SETQ J 0)
            LAB
             (COND
              ((MINUSP (DIFFERENCE (DIFFERENCE LENGTH-COL-LIST 1) J))
               (RETURN NIL)))
             (PROGN
              (SETQ ACTUAL (SC_GETROW IN-MAT (PLUS I 1)))
              (SC_IPUTV NEW-ROW J
               (SC_IGETV ACTUAL (DIFFERENCE (NTH COL-LIST (PLUS J 1)) 1))))
             (SETQ J (PLUS2 J 1))
             (GO LAB))
           (SC_IPUTV V I NEW-ROW))
          (SETQ I (PLUS2 I 1))
          (GO LAB))))
      (RETURN V))) 
(PUT 'FAST-MULT-ROWS 'NUMBER-OF-ARGS 3) 
(PUT 'FAST-MULT-ROWS 'DEFINED-ON-LINE '907) 
(PUT 'FAST-MULT-ROWS 'DEFINED-IN-FILE 'LINALG/FSIMPLEX.RED) 
(PUT 'FAST-MULT-ROWS 'PROCEDURE_TYPE
     '(ARROW (TIMES GENERAL GENERAL GENERAL) GENERAL)) 
(DE FAST-MULT-ROWS (IN-MAT ROW-LIST MULT1)
    (PROG (NEW-ROW ROWDIM COLDIM V ROW ROW-NO)
      (SETQ ROW-NO 0)
      (SETQ ROW-NO 1)
      (SETQ ROWDIM (FAST-ROW-DIM IN-MAT))
      (SETQ COLDIM (FAST-COLUMN-DIM IN-MAT))
      (SETQ V (MKVECT (DIFFERENCE ROWDIM 1)))
      (PROG (I)
        (SETQ I 0)
       LAB
        (COND ((MINUSP (DIFFERENCE (DIFFERENCE ROWDIM 1) I)) (RETURN NIL)))
        (PROGN
         (COND ((NEQ ROW-NO ROW-LIST) (SC_IPUTV V I (SC_IGETV IN-MAT I)))
               (T
                (PROGN
                 (SETQ ROW (SC_GETROW IN-MAT ROW-NO))
                 (SETQ NEW-ROW (MKVECT (DIFFERENCE COLDIM 1)))
                 (PROG (J)
                   (SETQ J 0)
                  LAB
                   (COND
                    ((MINUSP (DIFFERENCE (DIFFERENCE COLDIM 1) J))
                     (RETURN NIL)))
                   (SC_IPUTV NEW-ROW J (SC_MULTSQ MULT1 (SC_IGETV ROW J)))
                   (SETQ J (PLUS2 J 1))
                   (GO LAB))
                 (SC_IPUTV V I NEW-ROW))))
         (SETQ ROW-NO (PLUS ROW-NO 1)))
        (SETQ I (PLUS2 I 1))
        (GO LAB))
      (RETURN V))) 
(PUT 'FAST-MAKE-IDENTITY 'NUMBER-OF-ARGS 1) 
(PUT 'FAST-MAKE-IDENTITY 'DEFINED-ON-LINE '930) 
(PUT 'FAST-MAKE-IDENTITY 'DEFINED-IN-FILE 'LINALG/FSIMPLEX.RED) 
(PUT 'FAST-MAKE-IDENTITY 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE FAST-MAKE-IDENTITY (SQ-SIZE)
    (PROG (ID-MAT)
      (SETQ ID-MAT (SC_MKMATRIX SQ-SIZE SQ-SIZE))
      (PROG (I)
        (SETQ I 0)
       LAB
        (COND ((MINUSP (DIFFERENCE (DIFFERENCE SQ-SIZE 1) I)) (RETURN NIL)))
        (PROG (J)
          (SETQ J 0)
         LAB
          (COND ((MINUSP (DIFFERENCE (DIFFERENCE SQ-SIZE 1) J)) (RETURN NIL)))
          (COND ((EQUAL I J) (SC_IPUTV (SC_IGETV ID-MAT I) I (SC_SIMP 1))))
          (SETQ J (PLUS2 J 1))
          (GO LAB))
        (SETQ I (PLUS2 I 1))
        (GO LAB))
      (RETURN ID-MAT))) 
(PUT 'SC_MKMATRIX 'NUMBER-OF-ARGS 2) 
(PUT 'SC_MKMATRIX 'DEFINED-ON-LINE '941) 
(PUT 'SC_MKMATRIX 'DEFINED-IN-FILE 'LINALG/FSIMPLEX.RED) 
(PUT 'SC_MKMATRIX 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE SC_MKMATRIX (N M)
    (PROG (MATR NEW-ROW)
      (SETQ MATR (MKVECT (DIFFERENCE N 1)))
      (PROG (I)
        (SETQ I 0)
       LAB
        (COND ((MINUSP (DIFFERENCE (DIFFERENCE N 1) I)) (RETURN NIL)))
        (PROGN
         (SETQ NEW-ROW (MKVECT (DIFFERENCE M 1)))
         (PROG (J)
           (SETQ J 0)
          LAB
           (COND ((MINUSP (DIFFERENCE (DIFFERENCE M 1) J)) (RETURN NIL)))
           (SC_IPUTV NEW-ROW J (SC_SIMP 0))
           (SETQ J (PLUS2 J 1))
           (GO LAB))
         (SC_IPUTV MATR I NEW-ROW)
         NIL)
        (SETQ I (PLUS2 I 1))
        (GO LAB))
      (RETURN MATR))) 
(PUT 'SC_SETMAT 'NUMBER-OF-ARGS 4) 
(PUT 'SC_SETMAT 'DEFINED-ON-LINE '955) 
(PUT 'SC_SETMAT 'DEFINED-IN-FILE 'LINALG/FSIMPLEX.RED) 
(PUT 'SC_SETMAT 'PROCEDURE_TYPE
     '(ARROW (TIMES GENERAL GENERAL GENERAL GENERAL) GENERAL)) 
(DE SC_SETMAT (MATR I J VAL)
    (IPUTV (IGETV MATR (DIFFERENCE I 1)) (DIFFERENCE J 1) VAL)) 
(PUT 'SC_GETMAT 'NUMBER-OF-ARGS 3) 
(PUT 'SC_GETMAT 'DEFINED-ON-LINE '960) 
(PUT 'SC_GETMAT 'DEFINED-IN-FILE 'LINALG/FSIMPLEX.RED) 
(PUT 'SC_GETMAT 'PROCEDURE_TYPE
     '(ARROW (TIMES GENERAL GENERAL GENERAL) GENERAL)) 
(DE SC_GETMAT (M I J) (IGETV (IGETV M (DIFFERENCE I 1)) (DIFFERENCE J 1))) 
(PUT 'SC_MULTROW 'NUMBER-OF-ARGS 3) 
(PUT 'SC_MULTROW 'DEFINED-ON-LINE '965) 
(PUT 'SC_MULTROW 'DEFINED-IN-FILE 'LINALG/FSIMPLEX.RED) 
(PUT 'SC_MULTROW 'PROCEDURE_TYPE
     '(ARROW (TIMES GENERAL GENERAL GENERAL) GENERAL)) 
(DE SC_MULTROW (M I MULTI) (FAST-MULT-ROWS M I MULTI)) 
(PUT 'SC_MATRIXAUGMENT 'NUMBER-OF-ARGS 2) 
(PUT 'SC_MATRIXAUGMENT 'DEFINED-ON-LINE '969) 
(PUT 'SC_MATRIXAUGMENT 'DEFINED-IN-FILE 'LINALG/FSIMPLEX.RED) 
(PUT 'SC_MATRIXAUGMENT 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE SC_MATRIXAUGMENT (MAT1 MAT2)
    (PROG (V ROWDIM COLDIM1 COLDIM2 ACTUALROW1 ACTUALROW2)
      (SETQ ROWDIM (FAST-ROW-DIM MAT1))
      (SETQ COLDIM1 (FAST-COLUMN-DIM MAT1))
      (SETQ COLDIM2 (FAST-COLUMN-DIM MAT2))
      (SETQ V (SC_MKMATRIX ROWDIM (PLUS COLDIM1 COLDIM2)))
      (PROG (I)
        (SETQ I 1)
       LAB
        (COND ((MINUSP (DIFFERENCE ROWDIM I)) (RETURN NIL)))
        (PROGN
         (SETQ ACTUALROW1 (SC_GETROW MAT1 I))
         (SETQ ACTUALROW2 (SC_GETROW MAT2 I))
         (PROG (J)
           (SETQ J 1)
          LAB
           (COND ((MINUSP (DIFFERENCE COLDIM1 J)) (RETURN NIL)))
           (SC_SETMAT V I J (SC_IGETV ACTUALROW1 (DIFFERENCE J 1)))
           (SETQ J (PLUS2 J 1))
           (GO LAB))
         (PROG (J)
           (SETQ J 1)
          LAB
           (COND ((MINUSP (DIFFERENCE COLDIM2 J)) (RETURN NIL)))
           (SC_SETMAT V I (PLUS COLDIM1 J)
            (SC_IGETV ACTUALROW2 (DIFFERENCE J 1)))
           (SETQ J (PLUS2 J 1))
           (GO LAB)))
        (SETQ I (PLUS2 I 1))
        (GO LAB))
      (RETURN V))) 
(PUT 'SC_SCALARPRODUCT 'NUMBER-OF-ARGS 2) 
(PUT 'SC_SCALARPRODUCT 'DEFINED-ON-LINE '987) 
(PUT 'SC_SCALARPRODUCT 'DEFINED-IN-FILE 'LINALG/FSIMPLEX.RED) 
(PUT 'SC_SCALARPRODUCT 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE SC_SCALARPRODUCT (ROW COL)
    (PROG (RES)
      (SETQ RES (SC_SIMP 0))
      (PROG (I)
        (SETQ I 1)
       LAB
        (COND ((MINUSP (DIFFERENCE (FAST-ROW-DIM COL) I)) (RETURN NIL)))
        (SETQ RES
                (SC_ADDSQ RES
                 (SC_MULTSQ (SC_GETMAT ROW 1 I) (SC_GETMAT COL I 1))))
        (SETQ I (PLUS2 I 1))
        (GO LAB))
      (RETURN RES))) 
(PUT 'SC_TRANSPOSE 'NUMBER-OF-ARGS 1) 
(PUT 'SC_TRANSPOSE 'DEFINED-ON-LINE '996) 
(PUT 'SC_TRANSPOSE 'DEFINED-IN-FILE 'LINALG/FSIMPLEX.RED) 
(PUT 'SC_TRANSPOSE 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE SC_TRANSPOSE (MATR)
    (PROG (MAT1 COLDIM ROWDIM)
      (SETQ ROWDIM (FAST-ROW-DIM MATR))
      (SETQ COLDIM (FAST-COLUMN-DIM MATR))
      (SETQ MAT1 (SC_MKMATRIX COLDIM ROWDIM))
      (PROG (I)
        (SETQ I 1)
       LAB
        (COND ((MINUSP (DIFFERENCE COLDIM I)) (RETURN NIL)))
        (PROG (J)
          (SETQ J 1)
         LAB
          (COND ((MINUSP (DIFFERENCE ROWDIM J)) (RETURN NIL)))
          (SC_SETMAT MAT1 I J (SC_GETMAT MATR J I))
          (SETQ J (PLUS2 J 1))
          (GO LAB))
        (SETQ I (PLUS2 I 1))
        (GO LAB))
      (RETURN MAT1))) 
(PUT 'SC_NEGTRANSPOSE 'NUMBER-OF-ARGS 1) 
(PUT 'SC_NEGTRANSPOSE 'DEFINED-ON-LINE '1008) 
(PUT 'SC_NEGTRANSPOSE 'DEFINED-IN-FILE 'LINALG/FSIMPLEX.RED) 
(PUT 'SC_NEGTRANSPOSE 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE SC_NEGTRANSPOSE (MATR)
    (PROG (MAT1 COLDIM ROWDIM)
      (SETQ ROWDIM (FAST-ROW-DIM MATR))
      (SETQ COLDIM (FAST-COLUMN-DIM MATR))
      (SETQ MAT1 (SC_MKMATRIX COLDIM ROWDIM))
      (PROG (I)
        (SETQ I 1)
       LAB
        (COND ((MINUSP (DIFFERENCE COLDIM I)) (RETURN NIL)))
        (PROG (J)
          (SETQ J 1)
         LAB
          (COND ((MINUSP (DIFFERENCE ROWDIM J)) (RETURN NIL)))
          (SC_SETMAT MAT1 I J (SC_NEGSQ (SC_GETMAT MATR J I)))
          (SETQ J (PLUS2 J 1))
          (GO LAB))
        (SETQ I (PLUS2 I 1))
        (GO LAB))
      (RETURN MAT1))) 
(PUT 'SC_NEGMATRIX 'NUMBER-OF-ARGS 1) 
(PUT 'SC_NEGMATRIX 'DEFINED-ON-LINE '1020) 
(PUT 'SC_NEGMATRIX 'DEFINED-IN-FILE 'LINALG/FSIMPLEX.RED) 
(PUT 'SC_NEGMATRIX 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE SC_NEGMATRIX (MATR)
    (PROG (V ROWDIM COLDIM)
      (SETQ ROWDIM (FAST-ROW-DIM MATR))
      (SETQ COLDIM (FAST-COLUMN-DIM MATR))
      (SETQ V (SC_MKMATRIX ROWDIM COLDIM))
      (PROG (I)
        (SETQ I 1)
       LAB
        (COND ((MINUSP (DIFFERENCE ROWDIM I)) (RETURN NIL)))
        (PROG (J)
          (SETQ J 1)
         LAB
          (COND ((MINUSP (DIFFERENCE COLDIM J)) (RETURN NIL)))
          (SC_SETMAT V I J (SC_NEGSQ (SC_GETMAT MATR I J)))
          (SETQ J (PLUS2 J 1))
          (GO LAB))
        (SETQ I (PLUS2 I 1))
        (GO LAB))
      (RETURN V))) 
(PUT 'SC_MATRIXPRODUCT 'NUMBER-OF-ARGS 2) 
(PUT 'SC_MATRIXPRODUCT 'DEFINED-ON-LINE '1032) 
(PUT 'SC_MATRIXPRODUCT 'DEFINED-IN-FILE 'LINALG/FSIMPLEX.RED) 
(PUT 'SC_MATRIXPRODUCT 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE SC_MATRIXPRODUCT (A B)
    (PROG (MAT1 COLDIMB ROWDIMA NEWROW1 NEWROW2 TRANSPOSEB)
      (SETQ ROWDIMA (FAST-ROW-DIM A))
      (SETQ COLDIMB (FAST-COLUMN-DIM B))
      (SETQ MAT1 (SC_MKMATRIX ROWDIMA COLDIMB))
      (SETQ TRANSPOSEB (SC_TRANSPOSE B))
      (PROG (I)
        (SETQ I 1)
       LAB
        (COND ((MINUSP (DIFFERENCE ROWDIMA I)) (RETURN NIL)))
        (PROG (J)
          (SETQ J 1)
         LAB
          (COND ((MINUSP (DIFFERENCE COLDIMB J)) (RETURN NIL)))
          (PROGN
           (SETQ NEWROW1 (MKVECT 0))
           (SC_IPUTV NEWROW1 0 (SC_IGETV A (DIFFERENCE I 1)))
           (SETQ NEWROW2 (MKVECT 0))
           (SC_IPUTV NEWROW2 0 (SC_IGETV TRANSPOSEB (DIFFERENCE J 1)))
           (SC_SETMAT MAT1 I J (SC_ROWSCALARPRODUCT NEWROW1 NEWROW2)))
          (SETQ J (PLUS2 J 1))
          (GO LAB))
        (SETQ I (PLUS2 I 1))
        (GO LAB))
      (RETURN MAT1))) 
(PUT 'SC_ROWSCALARPRODUCT 'NUMBER-OF-ARGS 2) 
(PUT 'SC_ROWSCALARPRODUCT 'DEFINED-ON-LINE '1050) 
(PUT 'SC_ROWSCALARPRODUCT 'DEFINED-IN-FILE 'LINALG/FSIMPLEX.RED) 
(PUT 'SC_ROWSCALARPRODUCT 'PROCEDURE_TYPE
     '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE SC_ROWSCALARPRODUCT (ROW1 ROW2)
    (PROG (RES)
      (SETQ RES (SC_SIMP 0))
      (PROG (I)
        (SETQ I 1)
       LAB
        (COND ((MINUSP (DIFFERENCE (FAST-COLUMN-DIM ROW1) I)) (RETURN NIL)))
        (SETQ RES
                (SC_ADDSQ RES
                 (SC_MULTSQ (SC_GETMAT ROW1 1 I) (SC_GETMAT ROW2 1 I))))
        (SETQ I (PLUS2 I 1))
        (GO LAB))
      (RETURN RES))) 
(PUT 'SC_COLUMNSCALARPRODUCT 'NUMBER-OF-ARGS 2) 
(PUT 'SC_COLUMNSCALARPRODUCT 'DEFINED-ON-LINE '1060) 
(PUT 'SC_COLUMNSCALARPRODUCT 'DEFINED-IN-FILE 'LINALG/FSIMPLEX.RED) 
(PUT 'SC_COLUMNSCALARPRODUCT 'PROCEDURE_TYPE
     '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE SC_COLUMNSCALARPRODUCT (COL1 COL2)
    (PROG (RES)
      (SETQ RES (SC_SIMP 0))
      (PROG (I)
        (SETQ I 1)
       LAB
        (COND ((MINUSP (DIFFERENCE (FAST-ROW-DIM COL1) I)) (RETURN NIL)))
        (SETQ RES
                (SC_ADDSQ RES
                 (SC_MULTSQ (SC_GETMAT COL1 I 1) (SC_GETMAT COL2 I 1))))
        (SETQ I (PLUS2 I 1))
        (GO LAB))
      (RETURN RES))) 
(PUT 'SC_GETROW 'NUMBER-OF-ARGS 2) 
(PUT 'SC_GETROW 'DEFINED-ON-LINE '1070) 
(PUT 'SC_GETROW 'DEFINED-IN-FILE 'LINALG/FSIMPLEX.RED) 
(PUT 'SC_GETROW 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE SC_GETROW (MATR I) (SC_IGETV MATR (DIFFERENCE I 1))) 
(PUT 'SC_IGETV 'NUMBER-OF-ARGS 2) 
(PUT 'SC_IGETV 'DEFINED-ON-LINE '1074) 
(PUT 'SC_IGETV 'DEFINED-IN-FILE 'LINALG/FSIMPLEX.RED) 
(PUT 'SC_IGETV 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE SC_IGETV (V I) (IGETV V I)) 
(PUT 'SC_IPUTV 'NUMBER-OF-ARGS 3) 
(PUT 'SC_IPUTV 'DEFINED-ON-LINE '1077) 
(PUT 'SC_IPUTV 'DEFINED-IN-FILE 'LINALG/FSIMPLEX.RED) 
(PUT 'SC_IPUTV 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL GENERAL) GENERAL)) 
(DE SC_IPUTV (V I VAL) (IPUTV V I VAL)) 
(PUT 'FS_MINUS 'NUMBER-OF-ARGS 1) 
(PUT 'FS_MINUS 'DEFINED-ON-LINE '1080) 
(PUT 'FS_MINUS 'DEFINED-IN-FILE 'LINALG/FSIMPLEX.RED) 
(PUT 'FS_MINUS 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE FS_MINUS (U) (COND ((EQCAR U 'MINUS) (CADR U)) (T (LIST 'MINUS U)))) 
(PUT 'FS_TURN 'NUMBER-OF-ARGS 1) 
(PUT 'FS_TURN 'DEFINED-ON-LINE '1088) 
(PUT 'FS_TURN 'DEFINED-IN-FILE 'LINALG/FSIMPLEX.RED) 
(PUT 'FS_TURN 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE FS_TURN (A) (COND ((EQ A 'LEQ) 'GEQ) ((EQ A 'GEQ) 'LEQ) (T A))) 
(ENDMODULE) 