(cl:declaim (cl:optimize cl:debug cl:safety))
(cl:declaim (sb-ext:muffle-conditions sb-ext:compiler-note cl:style-warning))
(MODULE (LIST 'OFSFTFC)) 
(REVISION 'OFSFTFC "$Id: ofsftfc.red 5986 2021-08-28 13:35:27Z thomas-sturm $") 
(COPYRIGHT 'OFSFTFC "(c) 2003-2009 A. Dolzmann and L. Gilch") 
(PUT 'OFSF_TFCMAIN 'NUMBER-OF-ARGS 2) 
(PUT 'OFSF_TFCMAIN 'DEFINED-ON-LINE '32) 
(PUT 'OFSF_TFCMAIN 'DEFINED-IN-FILE 'REDLOG/OFSF/OFSFTFC.RED) 
(PUT 'OFSF_TFCMAIN 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE OFSF_TFCMAIN (L Y)
    (PROG (ELEM D)
      (SETQ ELEM (REORDER (CAR (CAR L))))
      (SETQ D
              (COND
               ((OR (OR (ATOM ELEM) (ATOM (CAR ELEM))) (NEQ (CAAAR ELEM) Y)) 0)
               (T (CDAAR ELEM))))
      (RETURN (OFSF_TFCMAIN1 L D Y)))) 
(PUT 'OFSF_TFCMAIN1 'NUMBER-OF-ARGS 3) 
(PUT 'OFSF_TFCMAIN1 'DEFINED-ON-LINE '46) 
(PUT 'OFSF_TFCMAIN1 'DEFINED-IN-FILE 'REDLOG/OFSF/OFSFTFC.RED) 
(PUT 'OFSF_TFCMAIN1 'PROCEDURE_TYPE
     '(ARROW (TIMES GENERAL GENERAL GENERAL) GENERAL)) 
(DE OFSF_TFCMAIN1 (L D Y)
    (PROG (CL RES)
      (COND
       ((OR (NULL (CDR L)) (LESSP (TIMES (LENGTH L) D) 8) (NOT *RLHQETFCSPLIT))
        (PROGN
         (SETQ CL (REVERSIP (OFSF_COEFFLIST (OFSF_MULTFL L) Y)))
         (SETQ RES (OFSF_TFC CL))))
       (*RLHQETFCFULLSPLIT (SETQ RES (OFSF_SPLITTYPES L D Y 0)))
       (T (SETQ RES (OFSF_SPLIT L D Y))))
      (RETURN RES))) 
(PUT 'OFSF_SPLIT 'NUMBER-OF-ARGS 3) 
(PUT 'OFSF_SPLIT 'DEFINED-ON-LINE '60) 
(PUT 'OFSF_SPLIT 'DEFINED-IN-FILE 'REDLOG/OFSF/OFSFTFC.RED) 
(PUT 'OFSF_SPLIT 'PROCEDURE_TYPE
     '(ARROW (TIMES GENERAL GENERAL GENERAL) GENERAL)) 
(DE OFSF_SPLIT (L D Y)
    (PROG (L1 L2 RES RES2)
      (SETQ L2 (OFSF_SPLITLIST L))
      (SETQ L1 (CAR L2))
      (SETQ L2 (CADR L2))
      (SETQ RES
              (PROG (I FORALL-RESULT FORALL-ENDPTR)
                (SETQ I 1)
                (COND ((MINUSP (DIFFERENCE D I)) (RETURN NIL)))
                (SETQ FORALL-RESULT
                        (SETQ FORALL-ENDPTR
                                (CONS
                                 ((LAMBDA (G352)
                                    (COND
                                     ((AND G352 (CDR G352)) (CONS 'AND G352))
                                     ((NULL G352)
                                      (COND ((EQ 'AND 'AND) 'TRUE) (T 'FALSE)))
                                     (T (CAR G352))))
                                  (LIST
                                   (OFSF_TFK
                                    (REVERSIP
                                     (OFSF_COEFFLIST (OFSF_MULTFL L1) Y))
                                    I)
                                   (OFSF_TFK
                                    (REVERSIP
                                     (OFSF_COEFFLIST (OFSF_MULTFL L2) Y))
                                    (MINUS I))))
                                 NIL)))
               LOOPLABEL
                (SETQ I (PLUS2 I 1))
                (COND ((MINUSP (DIFFERENCE D I)) (RETURN FORALL-RESULT)))
                (RPLACD FORALL-ENDPTR
                        (CONS
                         ((LAMBDA (G352)
                            (COND ((AND G352 (CDR G352)) (CONS 'AND G352))
                                  ((NULL G352)
                                   (COND ((EQ 'AND 'AND) 'TRUE) (T 'FALSE)))
                                  (T (CAR G352))))
                          (LIST
                           (OFSF_TFK
                            (REVERSIP (OFSF_COEFFLIST (OFSF_MULTFL L1) Y)) I)
                           (OFSF_TFK
                            (REVERSIP (OFSF_COEFFLIST (OFSF_MULTFL L2) Y))
                            (MINUS I))))
                         NIL))
                (SETQ FORALL-ENDPTR (CDR FORALL-ENDPTR))
                (GO LOOPLABEL)))
      (SETQ RES2
              ((LAMBDA (G354)
                 (COND ((AND G354 (CDR G354)) (CONS 'AND G354))
                       ((NULL G354) (COND ((EQ 'AND 'AND) 'TRUE) (T 'FALSE)))
                       (T (CAR G354))))
               (LIST (OFSF_TFCMAIN1 L1 D Y) (OFSF_TFCMAIN1 L2 D Y))))
      (RETURN
       ((LAMBDA (G356)
          (COND ((AND G356 (CDR G356)) (CONS 'OR G356))
                ((NULL G356) (COND ((EQ 'OR 'AND) 'TRUE) (T 'FALSE)))
                (T (CAR G356))))
        (CONS RES2 RES))))) 
(PUT 'OFSF_MULTFL 'NUMBER-OF-ARGS 1) 
(PUT 'OFSF_MULTFL 'DEFINED-ON-LINE '76) 
(PUT 'OFSF_MULTFL 'DEFINED-IN-FILE 'REDLOG/OFSF/OFSFTFC.RED) 
(PUT 'OFSF_MULTFL 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE OFSF_MULTFL (L)
    (COND ((NULL L) (SIMP 1)) (T (MULTSQ (CAR L) (OFSF_MULTFL (CDR L)))))) 
(PUT 'OFSF_SPLITLIST 'NUMBER-OF-ARGS 1) 
(PUT 'OFSF_SPLITLIST 'DEFINED-ON-LINE '84) 
(PUT 'OFSF_SPLITLIST 'DEFINED-IN-FILE 'REDLOG/OFSF/OFSFTFC.RED) 
(PUT 'OFSF_SPLITLIST 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE OFSF_SPLITLIST (L)
    (PROG (L1 L2 LL)
      (SETQ LL L)
      (PROG ()
       WHILELABEL
        (COND ((NOT (NOT (NULL LL))) (RETURN NIL)))
        (PROGN
         (SETQ L1 (CONS (CAR LL) L1))
         (SETQ L2 (CONS (CADR LL) L2))
         (SETQ LL (CDDR LL)))
        (GO WHILELABEL))
      (RETURN (LIST L1 L2)))) 
(PUT 'OFSF_TFC 'NUMBER-OF-ARGS 1) 
(PUT 'OFSF_TFC 'DEFINED-ON-LINE '97) 
(PUT 'OFSF_TFC 'DEFINED-IN-FILE 'REDLOG/OFSF/OFSFTFC.RED) 
(PUT 'OFSF_TFC 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE OFSF_TFC (COEFFL) (OFSF_TFC1 (DIFFERENCE (LENGTH COEFFL) 1) COEFFL)) 
(PUT 'OFSF_TFC1 'NUMBER-OF-ARGS 2) 
(PUT 'OFSF_TFC1 'DEFINED-ON-LINE '102) 
(PUT 'OFSF_TFC1 'DEFINED-IN-FILE 'REDLOG/OFSF/OFSFTFC.RED) 
(PUT 'OFSF_TFC1 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE OFSF_TFC1 (N COEFFL)
    (COND ((EQUAL N 1) (LIST 'EQUAL (CAR (CAR COEFFL)) NIL))
          ((EQUAL N 2)
           ((LAMBDA (G358)
              (COND ((AND G358 (CDR G358)) (CONS 'OR G358))
                    ((NULL G358) (COND ((EQ 'OR 'AND) 'TRUE) (T 'FALSE)))
                    (T (CAR G358))))
            (LIST (LIST 'EQUAL (CAR (CADR COEFFL)) NIL)
                  (LIST 'LESSP (OFSF_NORM (CAR COEFFL)) NIL))))
          ((EVENP N) (OFSF_TFCEVEN N COEFFL)) (T (OFSF_TFCODD N COEFFL)))) 
(PUT 'OFSF_NORM 'NUMBER-OF-ARGS 1) 
(PUT 'OFSF_NORM 'DEFINED-ON-LINE '115) 
(PUT 'OFSF_NORM 'DEFINED-IN-FILE 'REDLOG/OFSF/OFSFTFC.RED) 
(PUT 'OFSF_NORM 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE OFSF_NORM (S)
    (COND ((OR (ATOM (CDR S)) (ATOM (CAR (CDR S)))) (CAR S))
          (T
           (COND (*PHYSOP-LOADED (PHYSOP-MULTF (CAR S) (CDR S)))
                 (T (POLY-MULTF (CAR S) (CDR S))))))) 
(PUT 'OFSF_TFCODD 'NUMBER-OF-ARGS 2) 
(PUT 'OFSF_TFCODD 'DEFINED-ON-LINE '123) 
(PUT 'OFSF_TFCODD 'DEFINED-IN-FILE 'REDLOG/OFSF/OFSFTFC.RED) 
(PUT 'OFSF_TFCODD 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE OFSF_TFCODD (N COEFFL)
    (COND
     ((AND ((LAMBDA (U) (OR (ATOM U) (ATOM (CAR U)))) (CAR (CAR COEFFL)))
           (NOT (NULL (CAR (CAR COEFFL)))))
      'FALSE)
     (T
      ((LAMBDA (G360)
         (COND ((AND G360 (CDR G360)) (CONS 'AND G360))
               ((NULL G360) (COND ((EQ 'AND 'AND) 'TRUE) (T 'FALSE)))
               (T (CAR G360))))
       (LIST (LIST 'EQUAL (CAR (CAR COEFFL)) NIL)
             (OFSF_TFC1 (DIFFERENCE N 1) (CDR COEFFL))))))) 
(PUT 'OFSF_TFCEVEN 'NUMBER-OF-ARGS 2) 
(PUT 'OFSF_TFCEVEN 'DEFINED-ON-LINE '132) 
(PUT 'OFSF_TFCEVEN 'DEFINED-IN-FILE 'REDLOG/OFSF/OFSFTFC.RED) 
(PUT 'OFSF_TFCEVEN 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE OFSF_TFCEVEN (N COEFFL)
    (COND
     (((LAMBDA (U) (OR (ATOM U) (ATOM (CAR U)))) (CAR (CAR COEFFL)))
      (COND
       ((NULL (CAR (CAR COEFFL))) (OFSF_TFC1 (DIFFERENCE N 1) (CDR COEFFL)))
       (T (OFSF_STFC N (REVERSE COEFFL)))))
     (T
      ((LAMBDA (G366)
         (COND ((AND G366 (CDR G366)) (CONS 'OR G366))
               ((NULL G366) (COND ((EQ 'OR 'AND) 'TRUE) (T 'FALSE)))
               (T (CAR G366))))
       (LIST
        ((LAMBDA (G362)
           (COND ((AND G362 (CDR G362)) (CONS 'AND G362))
                 ((NULL G362) (COND ((EQ 'AND 'AND) 'TRUE) (T 'FALSE)))
                 (T (CAR G362))))
         (LIST (LIST 'EQUAL (CAR (CAR COEFFL)) NIL)
               (OFSF_TFC1 (DIFFERENCE N 1) (CDR COEFFL))))
        ((LAMBDA (G364)
           (COND ((AND G364 (CDR G364)) (CONS 'AND G364))
                 ((NULL G364) (COND ((EQ 'AND 'AND) 'TRUE) (T 'FALSE)))
                 (T (CAR G364))))
         (LIST (LIST 'NEQ (CAR (CAR COEFFL)) NIL)
               (OFSF_STFC N (REVERSE COEFFL))))))))) 
(PUT 'OFSF_STFC 'NUMBER-OF-ARGS 2) 
(PUT 'OFSF_STFC 'DEFINED-ON-LINE '151) 
(PUT 'OFSF_STFC 'DEFINED-IN-FILE 'REDLOG/OFSF/OFSFTFC.RED) 
(PUT 'OFSF_STFC 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE OFSF_STFC (N COEFFL)
    (PROG (VV RES RES1 M)
      (COND
       (*RLHQETFCFAST
        (PROGN (SETQ VV (OFSF_SIGNS COEFFL)) (SETQ M (OFSF_OLSFAST VV N))))
       (T (SETQ M (OFSF_OLS N))))
      (PROG ()
       WHILELABEL
        (COND ((NOT (NOT (NULL M))) (RETURN NIL)))
        (PROGN
         (SETQ RES1 (OFSF_BUILDCONJ COEFFL (CAR M)))
         (COND ((EQ RES1 'TRUE) (PROGN (SETQ M NIL) (SETQ RES 'TRUE)))
               ((EQ RES1 'FALSE) (SETQ M (CDR M)))
               (T (PROGN (SETQ RES (CONS RES1 RES)) (SETQ M (CDR M))))))
        (GO WHILELABEL))
      (COND ((EQ RES 'TRUE) (RETURN RES)) (T (RETURN (OFSF_TFCMKOR RES)))))) 
(PUT 'OFSF_BUILDCONJ 'NUMBER-OF-ARGS 2) 
(PUT 'OFSF_BUILDCONJ 'DEFINED-ON-LINE '179) 
(PUT 'OFSF_BUILDCONJ 'DEFINED-IN-FILE 'REDLOG/OFSF/OFSFTFC.RED) 
(PUT 'OFSF_BUILDCONJ 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE OFSF_BUILDCONJ (COEFFL L)
    (PROG (NEWCOEFFL NEWL RES AF)
      (SETQ NEWCOEFFL (CDR COEFFL))
      (SETQ NEWL (CDR L))
      (PROG ()
       WHILELABEL
        (COND ((NOT (NOT (NULL NEWL))) (RETURN NIL)))
        (PROGN
         (SETQ AF (OFSF_AF (CAR NEWCOEFFL) (CAR NEWL)))
         (COND
          ((NOT (NULL AF))
           (SETQ RES (CONS (OFSF_AF (CAR NEWCOEFFL) (CAR NEWL)) RES))))
         (SETQ NEWCOEFFL (CDR NEWCOEFFL))
         (SETQ NEWL (CDR NEWL)))
        (GO WHILELABEL))
      (RETURN (OFSF_TFCMKAND RES)))) 
(PUT 'OFSF_AF 'NUMBER-OF-ARGS 2) 
(PUT 'OFSF_AF 'DEFINED-ON-LINE '195) 
(PUT 'OFSF_AF 'DEFINED-IN-FILE 'REDLOG/OFSF/OFSFTFC.RED) 
(PUT 'OFSF_AF 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE OFSF_AF (C SIGN)
    (COND ((EQUAL SIGN 0) NIL)
          ((OR (ATOM (CDR C)) (ATOM (CAR (CDR C)))) (OFSF_AF1 (CAR C) SIGN))
          (T
           (OFSF_AF1
            (COND (*PHYSOP-LOADED (PHYSOP-MULTF (CAR C) (CDR C)))
                  (T (POLY-MULTF (CAR C) (CDR C))))
            SIGN)))) 
(PUT 'OFSF_AF1 'NUMBER-OF-ARGS 2) 
(PUT 'OFSF_AF1 'DEFINED-ON-LINE '205) 
(PUT 'OFSF_AF1 'DEFINED-IN-FILE 'REDLOG/OFSF/OFSFTFC.RED) 
(PUT 'OFSF_AF1 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE OFSF_AF1 (C SIGN)
    (COND ((EQUAL SIGN 1) (LIST 'GREATERP C NIL)) (T (LIST 'LESSP C NIL)))) 
(PUT 'OFSF_TFCMKAND 'NUMBER-OF-ARGS 1) 
(PUT 'OFSF_TFCMKAND 'DEFINED-ON-LINE '214) 
(PUT 'OFSF_TFCMKAND 'DEFINED-IN-FILE 'REDLOG/OFSF/OFSFTFC.RED) 
(PUT 'OFSF_TFCMKAND 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE OFSF_TFCMKAND (L)
    (CL_SIMPL
     (COND ((AND L (CDR L)) (CONS 'AND L))
           ((NULL L) (COND ((EQ 'AND 'AND) 'TRUE) (T 'FALSE))) (T (CAR L)))
     NIL (MINUS 1))) 
(PUT 'OFSF_TFCMKOR 'NUMBER-OF-ARGS 1) 
(PUT 'OFSF_TFCMKOR 'DEFINED-ON-LINE '218) 
(PUT 'OFSF_TFCMKOR 'DEFINED-IN-FILE 'REDLOG/OFSF/OFSFTFC.RED) 
(PUT 'OFSF_TFCMKOR 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE OFSF_TFCMKOR (L)
    (COND ((AND L (CDR L)) (CONS 'OR L))
          ((NULL L) (COND ((EQ 'OR 'AND) 'TRUE) (T 'FALSE))) (T (CAR L)))) 
(PUT 'OFSF_SIGNS 'NUMBER-OF-ARGS 1) 
(PUT 'OFSF_SIGNS 'DEFINED-ON-LINE '222) 
(PUT 'OFSF_SIGNS 'DEFINED-IN-FILE 'REDLOG/OFSF/OFSFTFC.RED) 
(PUT 'OFSF_SIGNS 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE OFSF_SIGNS (CL)
    (COND ((NULL CL) NIL)
          ((AND ((LAMBDA (U) (OR (ATOM U) (ATOM (CAR U)))) (CAR (CAR CL)))
                (NOT (NULL (CAR (CAR CL)))))
           (COND ((GREATERP (CAR (CAR CL)) 0) (CONS 1 (OFSF_SIGNS (CDR CL))))
                 (T (CONS (MINUS 1) (OFSF_SIGNS (CDR CL))))))
          (T (CONS 0 (OFSF_SIGNS (CDR CL)))))) 
(PUT 'OFSF_TFK 'NUMBER-OF-ARGS 2) 
(PUT 'OFSF_TFK 'DEFINED-ON-LINE '240) 
(PUT 'OFSF_TFK 'DEFINED-IN-FILE 'REDLOG/OFSF/OFSFTFC.RED) 
(PUT 'OFSF_TFK 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE OFSF_TFK (CL K)
    (COND
     ((EQUAL (DIFFERENCE (LENGTH CL) 1) (ABS K))
      (COND ((EQUAL K 1) (LIST 'LESSP (CAR (CAR CL)) NIL))
            ((EQUAL K (MINUS 1)) (LIST 'GREATERP (CAR (CAR CL)) NIL))
            (T (OFSF_STFK K (REVERSE CL) (ABS K)))))
     ((EQUAL (REMAINDER (DIFFERENCE (DIFFERENCE (LENGTH CL) 1) (ABS K)) 2) 1)
      (COND
       ((AND ((LAMBDA (U) (OR (ATOM U) (ATOM (CAR U)))) (CAR (CAR CL)))
             (NOT (NULL (CAR (CAR CL)))))
        'FALSE)
       (T
        ((LAMBDA (G368)
           (COND ((AND G368 (CDR G368)) (CONS 'AND G368))
                 ((NULL G368) (COND ((EQ 'AND 'AND) 'TRUE) (T 'FALSE)))
                 (T (CAR G368))))
         (LIST (LIST 'EQUAL (CAR (CAR CL)) NIL) (OFSF_TFK (CDR CL) K))))))
     (((LAMBDA (U) (OR (ATOM U) (ATOM (CAR U)))) (CAR (CAR CL)))
      (COND ((NULL (CAR (CAR CL))) (OFSF_TFK (CDR CL) K))
            (T (OFSF_STFK K (REVERSE CL) (DIFFERENCE (LENGTH CL) 1)))))
     (T
      ((LAMBDA (G374)
         (COND ((AND G374 (CDR G374)) (CONS 'OR G374))
               ((NULL G374) (COND ((EQ 'OR 'AND) 'TRUE) (T 'FALSE)))
               (T (CAR G374))))
       (LIST
        ((LAMBDA (G370)
           (COND ((AND G370 (CDR G370)) (CONS 'AND G370))
                 ((NULL G370) (COND ((EQ 'AND 'AND) 'TRUE) (T 'FALSE)))
                 (T (CAR G370))))
         (LIST (LIST 'EQUAL (CAR (CAR CL)) NIL) (OFSF_TFK (CDR CL) K)))
        ((LAMBDA (G372)
           (COND ((AND G372 (CDR G372)) (CONS 'AND G372))
                 ((NULL G372) (COND ((EQ 'AND 'AND) 'TRUE) (T 'FALSE)))
                 (T (CAR G372))))
         (LIST (LIST 'NEQ (CAR (CAR CL)) NIL)
               (OFSF_STFK K (REVERSE CL) (DIFFERENCE (LENGTH CL) 1))))))))) 
(PUT 'OFSF_STFK 'NUMBER-OF-ARGS 3) 
(PUT 'OFSF_STFK 'DEFINED-ON-LINE '266) 
(PUT 'OFSF_STFK 'DEFINED-IN-FILE 'REDLOG/OFSF/OFSFTFC.RED) 
(PUT 'OFSF_STFK 'PROCEDURE_TYPE
     '(ARROW (TIMES GENERAL GENERAL GENERAL) GENERAL)) 
(DE OFSF_STFK (K COEFFL D)
    (PROG (VV RES RES1 M)
      (COND
       (*RLHQETFCFAST
        (PROGN (SETQ VV (OFSF_SIGNS COEFFL)) (SETQ M (OFSF_KOLSFAST VV D K))))
       (T (SETQ M (OFSF_KOLS D K))))
      (PROG ()
       WHILELABEL
        (COND ((NOT (NOT (NULL M))) (RETURN NIL)))
        (PROGN
         (SETQ RES1 (OFSF_BUILDCONJ COEFFL (CAR M)))
         (COND ((EQ RES1 'TRUE) (PROGN (SETQ M NIL) (SETQ RES 'TRUE)))
               ((EQ RES1 'FALSE) (SETQ M (CDR M)))
               (T (PROGN (SETQ RES (CONS RES1 RES)) (SETQ M (CDR M))))))
        (GO WHILELABEL))
      (COND ((EQ RES 'TRUE) (RETURN RES)) (T (RETURN (OFSF_TFCMKOR RES)))))) 
(PUT 'OFSF_KOLS 'NUMBER-OF-ARGS 2) 
(PUT 'OFSF_KOLS 'DEFINED-ON-LINE '294) 
(PUT 'OFSF_KOLS 'DEFINED-IN-FILE 'REDLOG/OFSF/OFSFTFC.RED) 
(PUT 'OFSF_KOLS 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE OFSF_KOLS (D K)
    (LTO_NCONCN
     (LIST
      (OFSF_KEXTEND (LIST (MINUS 1) 1) 1 (MINUS 1) D (DIFFERENCE D 2) 1 0 K)
      (OFSF_KEXTEND (LIST 0 1) 1 0 D (DIFFERENCE D 2) 0 0 K)
      (OFSF_KEXTEND (LIST 1 1) 1 1 D (DIFFERENCE D 2) 0 1 K)))) 
(PUT 'OFSF_KEXTEND 'NUMBER-OF-ARGS 8) 
(PUT 'OFSF_KEXTEND 'DEFINED-ON-LINE '303) 
(PUT 'OFSF_KEXTEND 'DEFINED-IN-FILE 'REDLOG/OFSF/OFSFTFC.RED) 
(PUT 'OFSF_KEXTEND 'PROCEDURE_TYPE
     '(ARROW
       (TIMES GENERAL GENERAL GENERAL GENERAL GENERAL GENERAL GENERAL GENERAL)
       GENERAL)) 
(DE OFSF_KEXTEND (L L0 L1 D C P N K)
    (PROG ()
      (COND ((EQUAL C 0) (RETURN (OFSF_KEXTEND0 L L0 L1 D P N K))))
      (COND
       ((EQUAL L1 0)
        (RETURN
         (OFSF_KEXTEND (CONS (MINUS L0) L) L1 (MINUS L0) D (DIFFERENCE C 1)
          (PLUS P 1) (PLUS N 1) K))))
      (COND
       ((EQUAL L0 0)
        (RETURN
         (LTO_NCONCN
          (LIST
           (OFSF_KEXTEND (CONS (MINUS 1) L) L1 (MINUS 1) D (DIFFERENCE C 1)
            (PLUS P (OFSF_KNPZ L1 (MINUS 1))) (PLUS N (OFSF_KNNZ L1 (MINUS 1)))
            K)
           (OFSF_KEXTEND (CONS 0 L) L1 0 D (DIFFERENCE C 1) P N K)
           (OFSF_KEXTEND (CONS 1 L) L1 1 D (DIFFERENCE C 1)
            (PLUS P (OFSF_KNPZ L1 1)) (PLUS N (OFSF_KNNZ L1 1)) K))))))
      (RETURN
       (LTO_NCONCN
        (LIST (OFSF_KEXTEND (CONS 0 L) L1 0 D (DIFFERENCE C 1) P N K)
              (OFSF_KEXTEND (CONS L0 L) L1 L0 D (DIFFERENCE C 1)
               (PLUS P (OFSF_KNPZ L1 L0)) (PLUS N (OFSF_KNNZ L1 L0)) K)))))) 
(PUT 'OFSF_KOLSFAST 'NUMBER-OF-ARGS 3) 
(PUT 'OFSF_KOLSFAST 'DEFINED-ON-LINE '327) 
(PUT 'OFSF_KOLSFAST 'DEFINED-IN-FILE 'REDLOG/OFSF/OFSFTFC.RED) 
(PUT 'OFSF_KOLSFAST 'PROCEDURE_TYPE
     '(ARROW (TIMES GENERAL GENERAL GENERAL) GENERAL)) 
(DE OFSF_KOLSFAST (VV D K)
    (COND
     ((EQUAL (CAR VV) 1)
      (COND
       ((EQUAL (CADR VV) 1)
        (LTO_NCONCN
         (LIST
          (OFSF_KEXTENDFAST (CDDR VV) (LIST 1 1) 1 1 D (DIFFERENCE D 2) 0 1 K)
          (OFSF_KEXTENDFAST (CDDR VV) (LIST 0 1) 1 0 D (DIFFERENCE D 2) 0 0
           K))))
       ((EQUAL (CADR VV) (MINUS 1))
        (LTO_NCONCN
         (LIST
          (OFSF_KEXTENDFAST (CDDR VV) (LIST (MINUS 1) 1) 1 (MINUS 1) D
           (DIFFERENCE D 2) 1 0 K)
          (OFSF_KEXTENDFAST (CDDR VV) (LIST 0 1) 1 0 D (DIFFERENCE D 2) 0 0
           K))))
       (T
        (LTO_NCONCN
         (LIST
          (OFSF_KEXTENDFAST (CDDR VV) (LIST (MINUS 1) 1) 1 (MINUS 1) D
           (DIFFERENCE D 2) 1 0 K)
          (OFSF_KEXTENDFAST (CDDR VV) (LIST 0 1) 1 0 D (DIFFERENCE D 2) 0 0 K)
          (OFSF_KEXTENDFAST (CDDR VV) (LIST 1 1) 1 1 D (DIFFERENCE D 2) 0 1
           K))))))
     (T
      (LTO_NCONCN
       (LIST
        (OFSF_KEXTENDFAST (CDDR VV) (LIST (MINUS 1) 1) 1 (MINUS 1) D
         (DIFFERENCE D 2) 1 0 K)
        (OFSF_KEXTENDFAST (CDDR VV) (LIST 0 1) 1 0 D (DIFFERENCE D 2) 0 0 K)
        (OFSF_KEXTENDFAST (CDDR VV) (LIST 1 1) 1 1 D (DIFFERENCE D 2) 0 1
         K)))))) 
(PUT 'OFSF_KEXTENDFAST 'NUMBER-OF-ARGS 9) 
(PUT 'OFSF_KEXTENDFAST 'DEFINED-ON-LINE '350) 
(PUT 'OFSF_KEXTENDFAST 'DEFINED-IN-FILE 'REDLOG/OFSF/OFSFTFC.RED) 
(PUT 'OFSF_KEXTENDFAST 'PROCEDURE_TYPE
     '(ARROW
       (TIMES GENERAL GENERAL GENERAL GENERAL GENERAL GENERAL GENERAL GENERAL
              GENERAL)
       GENERAL)) 
(DE OFSF_KEXTENDFAST (VV L L0 L1 D C P N K)
    (PROG ()
      (COND ((EQUAL C 0) (RETURN (OFSF_KEXTEND0 L L0 L1 D P N K))))
      (COND
       ((EQUAL L1 0)
        (COND
         ((MEMBER (CAR VV) (LIST (MINUS L0) 0))
          (RETURN
           (OFSF_KEXTENDFAST (CDR VV) (CONS (MINUS L0) L) L1 (MINUS L0) D
            (DIFFERENCE C 1) (PLUS P 1) (PLUS N 1) K)))
         (T (RETURN NIL)))))
      (COND
       ((EQUAL L0 0)
        (COND
         ((EQUAL (CAR VV) 1)
          (RETURN
           (LTO_NCONCN
            (LIST
             (OFSF_KEXTENDFAST (CDR VV) (CONS 1 L) L1 1 D (DIFFERENCE C 1)
              (PLUS P (OFSF_KNPZ L1 1)) (PLUS N (OFSF_KNNZ L1 1)) K)
             (OFSF_KEXTENDFAST (CDR VV) (CONS 0 L) L1 0 D (DIFFERENCE C 1) P N
              K)))))
         ((EQUAL (CAR VV) (MINUS 1))
          (RETURN
           (LTO_NCONCN
            (LIST
             (OFSF_KEXTENDFAST (CDR VV) (CONS (MINUS 1) L) L1 (MINUS 1) D
              (DIFFERENCE C 1) (PLUS P (OFSF_KNPZ L1 (MINUS 1)))
              (PLUS N (OFSF_KNNZ L1 (MINUS 1))) K)
             (OFSF_KEXTENDFAST (CDR VV) (CONS 0 L) L1 0 D (DIFFERENCE C 1) P N
              K)))))
         (T
          (RETURN
           (LTO_NCONCN
            (LIST
             (OFSF_KEXTENDFAST (CDR VV) (CONS (MINUS 1) L) L1 (MINUS 1) D
              (DIFFERENCE C 1) (PLUS P (OFSF_KNPZ L1 (MINUS 1)))
              (PLUS N (OFSF_KNNZ L1 (MINUS 1))) K)
             (OFSF_KEXTENDFAST (CDR VV) (CONS 0 L) L1 0 D (DIFFERENCE C 1) P N
              K)
             (OFSF_KEXTENDFAST (CDR VV) (CONS 1 L) L1 1 D (DIFFERENCE C 1)
              (PLUS P (OFSF_KNPZ L1 1)) (PLUS N (OFSF_KNNZ L1 1)) K))))))))
      (COND
       ((NOT (MEMBER (CAR VV) (LIST L0 0)))
        (RETURN
         (OFSF_KEXTENDFAST (CDR VV) (CONS 0 L) L1 0 D (DIFFERENCE C 1) P N K)))
       (T
        (RETURN
         (LTO_NCONCN
          (LIST
           (OFSF_KEXTENDFAST (CDR VV) (CONS 0 L) L1 0 D (DIFFERENCE C 1) P N K)
           (OFSF_KEXTENDFAST (CDR VV) (CONS L0 L) L1 L0 D (DIFFERENCE C 1)
            (PLUS P (OFSF_KNPZ L1 L0)) (PLUS N (OFSF_KNNZ L1 L0)) K)))))))) 
(PUT 'OFSF_KEXTEND0 'NUMBER-OF-ARGS 7) 
(PUT 'OFSF_KEXTEND0 'DEFINED-ON-LINE '391) 
(PUT 'OFSF_KEXTEND0 'DEFINED-IN-FILE 'REDLOG/OFSF/OFSFTFC.RED) 
(PUT 'OFSF_KEXTEND0 'PROCEDURE_TYPE
     '(ARROW (TIMES GENERAL GENERAL GENERAL GENERAL GENERAL GENERAL GENERAL)
       GENERAL)) 
(DE OFSF_KEXTEND0 (L L0 L1 D P N K)
    (PROG (W)
      (SETQ W
              (COND
               ((AND (EQUAL (REMAINDER K 2) 0) (EQUAL (REMAINDER D 2) 0))
                (COND ((EQUAL (REMAINDER (QUOTIENT (DIFFERENCE D K) 2) 2) 0) 1)
                      (T (MINUS 1))))
               ((OR (EQUAL (REMAINDER K 2) 0) (EQUAL (REMAINDER D 2) 0)) NIL)
               ((GEQ K 0)
                (COND
                 ((EQUAL (REMAINDER (QUOTIENT (DIFFERENCE D K) 2) 2) 0)
                  (MINUS 1))
                 (T 1)))
               ((EQUAL (REMAINDER (QUOTIENT (PLUS D K) 2) 2) 0) 1)
               (T (MINUS 1))))
      (COND ((NULL W) (RETURN NIL)))
      (COND ((AND (EQUAL (TIMES L0 W) (MINUS 1)) (NEQ L1 0)) (RETURN NIL)))
      (RETURN
       (OFSF_KEXTEND1 (CONS W L) (PLUS P (OFSF_KNPZ L1 W))
        (PLUS N (OFSF_KNNZ L1 W)) K)))) 
(PUT 'OFSF_KEXTEND1 'NUMBER-OF-ARGS 4) 
(PUT 'OFSF_KEXTEND1 'DEFINED-ON-LINE '405) 
(PUT 'OFSF_KEXTEND1 'DEFINED-IN-FILE 'REDLOG/OFSF/OFSFTFC.RED) 
(PUT 'OFSF_KEXTEND1 'PROCEDURE_TYPE
     '(ARROW (TIMES GENERAL GENERAL GENERAL GENERAL) GENERAL)) 
(DE OFSF_KEXTEND1 (L P N K)
    (COND ((EQUAL (DIFFERENCE P N) K) (LIST (REVERSE L))) (T NIL))) 
(PUT 'OFSF_KNNZ 'NUMBER-OF-ARGS 2) 
(PUT 'OFSF_KNNZ 'DEFINED-ON-LINE '409) 
(PUT 'OFSF_KNNZ 'DEFINED-IN-FILE 'REDLOG/OFSF/OFSFTFC.RED) 
(PUT 'OFSF_KNNZ 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE OFSF_KNNZ (A B) (COND ((EQUAL (TIMES A B) 1) 1) (T 0))) 
(PUT 'OFSF_KNPZ 'NUMBER-OF-ARGS 2) 
(PUT 'OFSF_KNPZ 'DEFINED-ON-LINE '413) 
(PUT 'OFSF_KNPZ 'DEFINED-IN-FILE 'REDLOG/OFSF/OFSFTFC.RED) 
(PUT 'OFSF_KNPZ 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE OFSF_KNPZ (A B) (COND ((EQUAL (TIMES A B) (MINUS 1)) 1) (T 0))) 
(PUT 'OFSF_SPLITTYPES 'NUMBER-OF-ARGS 4) 
(PUT 'OFSF_SPLITTYPES 'DEFINED-ON-LINE '420) 
(PUT 'OFSF_SPLITTYPES 'DEFINED-IN-FILE 'REDLOG/OFSF/OFSFTFC.RED) 
(PUT 'OFSF_SPLITTYPES 'PROCEDURE_TYPE
     '(ARROW (TIMES GENERAL GENERAL GENERAL GENERAL) GENERAL)) 
(DE OFSF_SPLITTYPES (L D Y I)
    (PROG (RES F1 F2FN LENL)
      (COND
       ((OR (NULL (CDR L)) (LESSP (TIMES (LENGTH L) D) 8)
            (LESSP (TIMES D (LENGTH L)) (TIMES 2 (ABS I))))
        (COND
         ((LESSP (ABS I) (PLUS (TIMES (LENGTH L) D) 1))
          (COND
           ((EQUAL I 0)
            (RETURN (OFSF_TFC (REVERSIP (OFSF_COEFFLIST (OFSF_MULTFL L) Y)))))
           (T
            (RETURN
             (OFSF_TFK (REVERSIP (OFSF_COEFFLIST (OFSF_MULTFL L) Y)) I)))))
         (T (RETURN 'FALSE)))))
      (SETQ LENL (LENGTH L))
      (PROG (J)
        (SETQ J (MINUS D))
       LAB
        (COND ((MINUSP (DIFFERENCE D J)) (RETURN NIL)))
        (COND
         ((GREATERP (PLUS (TIMES (DIFFERENCE LENL 1) D) 1)
                    (ABS (DIFFERENCE I J)))
          (PROGN
           (COND
            ((EQUAL J 0)
             (SETQ F1 (OFSF_TFC (REVERSIP (OFSF_COEFFLIST (CAR L) Y)))))
            (T (SETQ F1 (OFSF_TFK (REVERSIP (OFSF_COEFFLIST (CAR L) Y)) J))))
           (SETQ F2FN (OFSF_SPLITTYPES (CDR L) D Y (DIFFERENCE I J)))
           (SETQ RES
                   (CONS
                    ((LAMBDA (G376)
                       (COND ((AND G376 (CDR G376)) (CONS 'AND G376))
                             ((NULL G376)
                              (COND ((EQ 'AND 'AND) 'TRUE) (T 'FALSE)))
                             (T (CAR G376))))
                     (LIST F1 F2FN))
                    RES)))))
        (SETQ J (PLUS2 J 1))
        (GO LAB))
      (RETURN
       (COND ((AND RES (CDR RES)) (CONS 'OR RES))
             ((NULL RES) (COND ((EQ 'OR 'AND) 'TRUE) (T 'FALSE)))
             (T (CAR RES)))))) 
(PUT 'OFSF_OLS 'NUMBER-OF-ARGS 1) 
(PUT 'OFSF_OLS 'DEFINED-ON-LINE '451) 
(PUT 'OFSF_OLS 'DEFINED-IN-FILE 'REDLOG/OFSF/OFSFTFC.RED) 
(PUT 'OFSF_OLS 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE OFSF_OLS (D)
    (LTO_NCONCN
     (LIST (OFSF_EXTEND (LIST (MINUS 1) 1) 1 (MINUS 1) D (DIFFERENCE D 2) 1 0)
           (OFSF_EXTEND (LIST 0 1) 1 0 D (DIFFERENCE D 2) 0 0)
           (OFSF_EXTEND (LIST 1 1) 1 1 D (DIFFERENCE D 2) 0 1)))) 
(PUT 'OFSF_EXTEND 'NUMBER-OF-ARGS 7) 
(PUT 'OFSF_EXTEND 'DEFINED-ON-LINE '458) 
(PUT 'OFSF_EXTEND 'DEFINED-IN-FILE 'REDLOG/OFSF/OFSFTFC.RED) 
(PUT 'OFSF_EXTEND 'PROCEDURE_TYPE
     '(ARROW (TIMES GENERAL GENERAL GENERAL GENERAL GENERAL GENERAL GENERAL)
       GENERAL)) 
(DE OFSF_EXTEND (L L0 L1 D C P N)
    (PROG ()
      (COND ((EQUAL C 0) (RETURN (OFSF_EXTEND0 L L0 L1 D P N))))
      (COND
       ((EQUAL L1 0)
        (RETURN
         (OFSF_EXTEND (CONS (MINUS L0) L) L1 (MINUS L0) D (DIFFERENCE C 1)
          (PLUS P 1) (PLUS N 1)))))
      (COND
       ((EQUAL L0 0)
        (RETURN
         (LTO_NCONCN
          (LIST
           (OFSF_EXTEND (CONS (MINUS 1) L) L1 (MINUS 1) D (DIFFERENCE C 1)
            (PLUS P (OFSF_NPZ L1 (MINUS 1))) (PLUS N (OFSF_NNZ L1 (MINUS 1))))
           (OFSF_EXTEND (CONS 0 L) L1 0 D (DIFFERENCE C 1) P N)
           (OFSF_EXTEND (CONS 1 L) L1 1 D (DIFFERENCE C 1)
            (PLUS P (OFSF_NPZ L1 1)) (PLUS N (OFSF_NNZ L1 1))))))))
      (RETURN
       (LTO_NCONCN
        (LIST (OFSF_EXTEND (CONS 0 L) L1 0 D (DIFFERENCE C 1) P N)
              (OFSF_EXTEND (CONS L0 L) L1 L0 D (DIFFERENCE C 1)
               (PLUS P (OFSF_NPZ L1 L0)) (PLUS N (OFSF_NNZ L1 L0)))))))) 
(PUT 'OFSF_OLSFAST 'NUMBER-OF-ARGS 2) 
(PUT 'OFSF_OLSFAST 'DEFINED-ON-LINE '481) 
(PUT 'OFSF_OLSFAST 'DEFINED-IN-FILE 'REDLOG/OFSF/OFSFTFC.RED) 
(PUT 'OFSF_OLSFAST 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE OFSF_OLSFAST (VV D)
    (COND
     ((EQUAL (CAR VV) 1)
      (COND
       ((EQUAL (CADR VV) 1)
        (LTO_NCONCN
         (LIST
          (OFSF_EXTENDFAST (CDDR VV) (LIST 1 1) 1 1 D (DIFFERENCE D 2) 0 1)
          (OFSF_EXTENDFAST (CDDR VV) (LIST 0 1) 1 0 D (DIFFERENCE D 2) 0 0))))
       ((EQUAL (CADR VV) (MINUS 1))
        (LTO_NCONCN
         (LIST
          (OFSF_EXTENDFAST (CDDR VV) (LIST (MINUS 1) 1) 1 (MINUS 1) D
           (DIFFERENCE D 2) 1 0)
          (OFSF_EXTENDFAST (CDDR VV) (LIST 0 1) 1 0 D (DIFFERENCE D 2) 0 0))))
       (T
        (LTO_NCONCN
         (LIST
          (OFSF_EXTENDFAST (CDDR VV) (LIST (MINUS 1) 1) 1 (MINUS 1) D
           (DIFFERENCE D 2) 1 0)
          (OFSF_EXTENDFAST (CDDR VV) (LIST 0 1) 1 0 D (DIFFERENCE D 2) 0 0)
          (OFSF_EXTENDFAST (CDDR VV) (LIST 1 1) 1 1 D (DIFFERENCE D 2) 0
           1))))))
     (T
      (LTO_NCONCN
       (LIST
        (OFSF_EXTENDFAST (CDDR VV) (LIST (MINUS 1) 1) 1 (MINUS 1) D
         (DIFFERENCE D 2) 1 0)
        (OFSF_EXTENDFAST (CDDR VV) (LIST 0 1) 1 0 D (DIFFERENCE D 2) 0 0)
        (OFSF_EXTENDFAST (CDDR VV) (LIST 1 1) 1 1 D (DIFFERENCE D 2) 0 1)))))) 
(PUT 'OFSF_EXTENDFAST 'NUMBER-OF-ARGS 8) 
(PUT 'OFSF_EXTENDFAST 'DEFINED-ON-LINE '503) 
(PUT 'OFSF_EXTENDFAST 'DEFINED-IN-FILE 'REDLOG/OFSF/OFSFTFC.RED) 
(PUT 'OFSF_EXTENDFAST 'PROCEDURE_TYPE
     '(ARROW
       (TIMES GENERAL GENERAL GENERAL GENERAL GENERAL GENERAL GENERAL GENERAL)
       GENERAL)) 
(DE OFSF_EXTENDFAST (VV L L0 L1 D C P N)
    (PROG ()
      (COND ((EQUAL C 0) (RETURN (OFSF_EXTEND0 L L0 L1 D P N))))
      (COND
       ((EQUAL L1 0)
        (COND
         ((MEMBER (CAR VV) (LIST (MINUS L0) 0))
          (RETURN
           (OFSF_EXTENDFAST (CDR VV) (CONS (MINUS L0) L) L1 (MINUS L0) D
            (DIFFERENCE C 1) (PLUS P 1) (PLUS N 1))))
         (T (RETURN NIL)))))
      (COND
       ((EQUAL L0 0)
        (COND
         ((EQUAL (CAR VV) (MINUS 1))
          (RETURN
           (LTO_NCONCN
            (LIST
             (OFSF_EXTENDFAST (CDR VV) (CONS (MINUS 1) L) L1 (MINUS 1) D
              (DIFFERENCE C 1) (PLUS P (OFSF_NPZ L1 (MINUS 1)))
              (PLUS N (OFSF_NNZ L1 (MINUS 1))))
             (OFSF_EXTENDFAST (CDR VV) (CONS 0 L) L1 0 D (DIFFERENCE C 1) P
              N)))))
         ((EQUAL (CAR VV) 1)
          (RETURN
           (LTO_NCONCN
            (LIST
             (OFSF_EXTENDFAST (CDR VV) (CONS 1 L) L1 1 D (DIFFERENCE C 1)
              (PLUS P (OFSF_NPZ L1 1)) (PLUS N (OFSF_NNZ L1 1)))
             (OFSF_EXTENDFAST (CDR VV) (CONS 0 L) L1 0 D (DIFFERENCE C 1) P
              N)))))
         (T
          (RETURN
           (LTO_NCONCN
            (LIST
             (OFSF_EXTENDFAST (CDR VV) (CONS (MINUS 1) L) L1 (MINUS 1) D
              (DIFFERENCE C 1) (PLUS P (OFSF_NPZ L1 (MINUS 1)))
              (PLUS N (OFSF_NNZ L1 (MINUS 1))))
             (OFSF_EXTENDFAST (CDR VV) (CONS 0 L) L1 0 D (DIFFERENCE C 1) P N)
             (OFSF_EXTENDFAST (CDR VV) (CONS 1 L) L1 1 D (DIFFERENCE C 1)
              (PLUS P (OFSF_NPZ L1 1)) (PLUS N (OFSF_NNZ L1 1))))))))))
      (COND
       ((NOT (MEMBER (CAR VV) (LIST L0 0)))
        (RETURN
         (OFSF_EXTENDFAST (CDR VV) (CONS 0 L) L1 0 D (DIFFERENCE C 1) P N)))
       (T
        (RETURN
         (LTO_NCONCN
          (LIST
           (OFSF_EXTENDFAST (CDR VV) (CONS 0 L) L1 0 D (DIFFERENCE C 1) P N)
           (OFSF_EXTENDFAST (CDR VV) (CONS L0 L) L1 L0 D (DIFFERENCE C 1)
            (PLUS P (OFSF_NPZ L1 L0)) (PLUS N (OFSF_NNZ L1 L0)))))))))) 
(PUT 'OFSF_EXTEND0 'NUMBER-OF-ARGS 6) 
(PUT 'OFSF_EXTEND0 'DEFINED-ON-LINE '543) 
(PUT 'OFSF_EXTEND0 'DEFINED-IN-FILE 'REDLOG/OFSF/OFSFTFC.RED) 
(PUT 'OFSF_EXTEND0 'PROCEDURE_TYPE
     '(ARROW (TIMES GENERAL GENERAL GENERAL GENERAL GENERAL GENERAL) GENERAL)) 
(DE OFSF_EXTEND0 (L L0 L1 D P N)
    (PROG (W)
      (SETQ W (COND ((EQUAL (REMAINDER D 4) 2) (MINUS 1)) (T 1)))
      (COND ((AND (EQUAL (TIMES L0 W) (MINUS 1)) (NEQ L1 0)) (RETURN NIL)))
      (RETURN
       (OFSF_EXTEND1 (CONS W L) (PLUS P (OFSF_NPZ L1 W))
        (PLUS N (OFSF_NNZ L1 W)))))) 
(PUT 'OFSF_EXTEND1 'NUMBER-OF-ARGS 3) 
(PUT 'OFSF_EXTEND1 'DEFINED-ON-LINE '550) 
(PUT 'OFSF_EXTEND1 'DEFINED-IN-FILE 'REDLOG/OFSF/OFSFTFC.RED) 
(PUT 'OFSF_EXTEND1 'PROCEDURE_TYPE
     '(ARROW (TIMES GENERAL GENERAL GENERAL) GENERAL)) 
(DE OFSF_EXTEND1 (L P N) (COND ((EQUAL P N) (LIST (REVERSE L))) (T NIL))) 
(PUT 'OFSF_NNZ 'NUMBER-OF-ARGS 2) 
(PUT 'OFSF_NNZ 'DEFINED-ON-LINE '553) 
(PUT 'OFSF_NNZ 'DEFINED-IN-FILE 'REDLOG/OFSF/OFSFTFC.RED) 
(PUT 'OFSF_NNZ 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE OFSF_NNZ (A B) (COND ((EQUAL (TIMES A B) 1) 1) (T 0))) 
(PUT 'OFSF_NPZ 'NUMBER-OF-ARGS 2) 
(PUT 'OFSF_NPZ 'DEFINED-ON-LINE '557) 
(PUT 'OFSF_NPZ 'DEFINED-IN-FILE 'REDLOG/OFSF/OFSFTFC.RED) 
(PUT 'OFSF_NPZ 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE OFSF_NPZ (A B) (COND ((EQUAL (TIMES A B) (MINUS 1)) 1) (T 0))) 
(ENDMODULE) 