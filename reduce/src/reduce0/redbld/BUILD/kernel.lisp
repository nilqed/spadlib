(cl:declaim (cl:optimize cl:debug cl:safety))
(cl:declaim (sb-ext:muffle-conditions sb-ext:compiler-note cl:style-warning))
(MODULE (LIST 'KERNEL)) 
(GLOBAL '(EXLIST* KPROPS*)) 
(GLOBAL '(KERNHASH)) 
(SETQ KERNHASH (MKHASH 1000 3 NIL)) 
(PUT 'FKERN 'NUMBER-OF-ARGS 1) 
(PUT 'FKERN 'DEFINED-ON-LINE '38) 
(PUT 'FKERN 'DEFINED-IN-FILE 'POLY/KERNEL.RED) 
(PUT 'FKERN 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE FKERN (U)
    (PROG (X Y)
      (COND ((ATOM U) (RETURN (LIST U NIL)))
            ((SETQ X (GET (CAR U) 'FKERNFN)) (RETURN (APPLY1 X U))))
      (COND
       ((NULL (SETQ X (GETHASH U KERNHASH)))
        (PROGN
         (SETQ X (LIST U NIL))
         (PUTHASH U KERNHASH X)
         (COND
          ((ATOM (CAR U))
           (PROGN
            (COND
             ((NULL (MEMBER (CAR U) KPROPS*))
              (SETQ KPROPS* (CONS (CAR U) KPROPS*))))
            (PUT (CAR U) 'KLIST (ORDAD X (GET (CAR U) 'KLIST)))))
          (T (SETQ EXLIST* (ORDAD X EXLIST*)))))))
      (RETURN X))) 
(PUT 'REMKLIST 'NUMBER-OF-ARGS 1) 
(PUT 'REMKLIST 'DEFINED-ON-LINE '66) 
(PUT 'REMKLIST 'DEFINED-IN-FILE 'POLY/KERNEL.RED) 
(PUT 'REMKLIST 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE REMKLIST (X)
    (PROG ()
      (PROG (U)
        (SETQ U (GET X 'KLIST))
       LAB
        (COND ((NULL U) (RETURN NIL)))
        ((LAMBDA (U) (REMHASH (CAR U) KERNHASH)) (CAR U))
        (SETQ U (CDR U))
        (GO LAB))
      (REMPROP X 'KLIST))) 
(PUT 'RESETKLIST 'NUMBER-OF-ARGS 2) 
(PUT 'RESETKLIST 'DEFINED-ON-LINE '72) 
(PUT 'RESETKLIST 'DEFINED-IN-FILE 'POLY/KERNEL.RED) 
(PUT 'RESETKLIST 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE RESETKLIST (X V)
    (PROGN
     (REMKLIST X)
     (PROG (U)
       (SETQ U V)
      LAB
       (COND ((NULL U) (RETURN NIL)))
       ((LAMBDA (U) (PUTHASH (CAR U) KERNHASH U)) (CAR U))
       (SETQ U (CDR U))
       (GO LAB))
     (PUT X 'KLIST V))) 
(PUT 'KERNELS 'NUMBER-OF-ARGS 1) 
(PUT 'KERNELS 'DEFINED-ON-LINE '123) 
(PUT 'KERNELS 'DEFINED-IN-FILE 'POLY/KERNEL.RED) 
(PUT 'KERNELS 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE KERNELS (U) (REVERSIP (KERNELS1 U NIL))) 
(PUT 'KERNELS1 'NUMBER-OF-ARGS 2) 
(PUT 'KERNELS1 'DEFINED-ON-LINE '148) 
(PUT 'KERNELS1 'DEFINED-IN-FILE 'POLY/KERNEL.RED) 
(PUT 'KERNELS1 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE KERNELS1 (U V)
    (COND ((OR (ATOM U) (ATOM (CAR U))) V)
          (T
           (PROG (X U1 W)
             (SETQ X (CAAAR U))
             (COND ((NOT (MEMQ X V)) (SETQ V (CONS X V))))
             (SETQ U1 (CDR U))
             (PROG ()
              WHILELABEL
               (COND ((NOT (NOT (OR (ATOM U1) (ATOM (CAR U1))))) (RETURN NIL)))
               (PROGN
                (COND
                 ((NOT (EQ (CAAAR U1) X))
                  (PROGN
                   (SETQ X (CAAAR U1))
                   (COND ((NOT (MEMQ X V)) (SETQ V (CONS X V)))))))
                (SETQ W (CONS (CDAR U1) W))
                (SETQ U1 (CDR U1)))
               (GO WHILELABEL))
             (PROG ()
              WHILELABEL
               (COND ((NOT W) (RETURN NIL)))
               (PROGN (SETQ V (KERNELS1 (CAR W) V)) (SETQ W (CDR W)))
               (GO WHILELABEL))
             (RETURN (KERNELS1 (CDAR U) V)))))) 
(PUT 'KERNP 'NUMBER-OF-ARGS 1) 
(PUT 'KERNP 'DEFINED-ON-LINE '182) 
(PUT 'KERNP 'DEFINED-IN-FILE 'POLY/KERNEL.RED) 
(PUT 'KERNP 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE KERNP (U)
    (AND (EQUAL (CDR U) 1)
         (NOT ((LAMBDA (U) (OR (ATOM U) (ATOM (CAR U)))) (SETQ U (CAR U))))
         (NULL (CDR U)) (EQUAL (CDAR U) 1) (EQUAL (CDAAR U) 1))) 
(ENDMODULE) 