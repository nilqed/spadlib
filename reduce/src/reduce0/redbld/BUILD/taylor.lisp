(cl:declaim (cl:optimize cl:debug cl:safety))
(cl:declaim (sb-ext:muffle-conditions sb-ext:compiler-note cl:style-warning))
(MODULE (LIST 'TAYLOR)) 
(CREATE-PACKAGE
 '(TAYLOR TAYINTRO TAYUTILS TAYINTRF TAYEXPND TAYBASIC TAYSIMP TAYSUBST TAYDIFF
   TAYCONV TAYPRINT TAYFRONT TAYFNS TAYREVRT TAYIMPL TAYPART TAYGAMMA)
 '(CONTRIB TAYLOR)) 
(FLUID
 '(|TAYLOR:VERSION| |TAYLOR:DATE*| TAYLORPRINTTERMS *TAYEXPANDING*
   *TAYINTERNAL* *TAYRESTART* *TAYLORKEEPORIGINAL *TAYLORAUTOEXPAND
   *TAYLORAUTOCOMBINE *TAYLORPRINTORDER *TRTAYLOR CONVERT-TAYLOR* *SUB2
   *VERBOSELOAD)) 
(SHARE (LIST 'TAYLORPRINTTERMS)) 
(SWITCH
 (LIST (LIST 'EQUAL 'TAYLORAUTOCOMBINE 'ON)
       (LIST 'EQUAL 'TAYLORAUTOEXPAND 'OFF)
       (LIST 'EQUAL 'TAYLORKEEPORIGINAL 'OFF)
       (LIST 'EQUAL 'TAYLORPRINTORDER 'ON) (LIST 'EQUAL 'TRTAYLOR 'OFF)
       'VERBOSELOAD)) 
(SETQ CONVERT-TAYLOR* NIL) 
(SETQ TAYLORPRINTTERMS (PROGN (SETQ ALGLIST* (CONS NIL NIL)) 5)) 
(SETQ *TAYEXPANDING* NIL) 
(SETQ *TAYINTERNAL* NIL) 
(SETQ *TAYRESTART* NIL) 
(SETQ |TAYLOR:VERSION| "2.4h") 
(SETQ |TAYLOR:DATE*| "21-Jan-2023") 
(COND
 (*VERBOSELOAD
  (PROGN
   (TERPRI)
   (PRIN2 "TAYLOR PACKAGE, version ")
   (PRIN2 |TAYLOR:VERSION|)
   (PRIN2 ", as of ")
   (PRIN2 |TAYLOR:DATE*|)
   (PRIN2T " for REDUCE being loaded...")
   (TERPRI)))) 
(EXPORTS
 (LIST '*Q2TAYEXP '*TAY2F '*TAY2Q '*TAYEXP2Q 'COPY-LIST 'CST-TAYLOR*
       'GET-DEGREE 'GET-DEGREELIST 'HAS-TAYLOR* 'HAS-TAYVARS
       'MAKE-CST-COEFFICIENT 'MAKE-CST-COEFFLIS 'MAKE-CST-POWERLIST
       'MAKE-TAYLOR* 'MULTINTOCOEFFLIST 'NZEROLIST 'PREPTAYEXP 'RESIMPCOEFFLIST
       'RESIMPTAYLOR 'SET-TAYCFPL 'SET-TAYCFSQ 'SET-TAYCOEFFLIST 'SET-TAYFLAGS
       'SET-TAYORIG 'SET-TAYTEMPLATE 'SUBS2COEFFLIST 'TAYCFPL 'TAYCFSQ
       'TAYCOEFFLIST 'TAYDEGREESUM 'TAYEXP-DIFFERENCE 'TAYEXP-GREATERP
       'TAYEXP-LESSP 'TAYEXP-MAX2 'TAYEXP-MIN2 'TAYEXP-MINUS 'TAYEXP-MINUSP
       'TAYEXP-PLUS 'TAYEXP-PLUS2 'TAYEXP-TIMES 'TAYEXP-TIMES2 'TAYFLAGS
       'TAYFLAGSCOMBINE 'TAYGETCOEFF 'TAYLOR*P 'TAYLOR-KERNEL-SF-P
       'TAYLOR-KERNEL-SQ-P '|TAYLOR:| 'TAYMAKECOEFF 'TAYMINCOEFF 'TAYMULTCOEFFS
       'TAYORIG 'TAYTEMPLATE 'TAYTPELNEXT 'TAYTPELORDER 'TAYTPELPOINT
       'TAYTPELVARS 'TAYVARS 'TPDEGREELIST)) 
(IMPORTS
 (LIST '*F2Q '*I2RN '*P2F '*P2Q '|:MINUSP| 'CONFUSION 'DOMAINP 'EQCAR 'KERNP
       'LASTPAIR 'LC 'LDEG 'LPRI 'MATHPRINT 'MK*SQ 'MKSP 'MULTSQ 'MVAR 'NLIST
       'NUMR 'OVER 'PRIN2T 'RED 'RESIMP '|RNDIFFERENCE:| '|RNMINUS:|
       '|RNMINUSP:| '|RNPLUS:| '|RNPREP:| '|RNQUOTIENT:| '|RNTIMES:| 'SIMPRN
       'SMEMBER 'SUBS2 'SUBS2* 'SMEMBERLP 'ADD-DEGREES)) 
(DE NZEROLIST (N) (NLIST 0 N)) 
(PUT 'NZEROLIST 'NUMBER-OF-ARGS 1) 
(PUT 'NZEROLIST 'DEFINED-ON-LINE '1096) 
(PUT 'NZEROLIST 'DEFINED-IN-FILE 'TAYLOR/TAYLOR.RED) 
(PUT 'NZEROLIST 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(PUTC 'NZEROLIST 'INLINE '(LAMBDA (N) (NLIST 0 N))) 
(DE COPY-LIST (L) (APPEND L NIL)) 
(PUT 'COPY-LIST 'NUMBER-OF-ARGS 1) 
(PUT 'COPY-LIST 'DEFINED-ON-LINE '1102) 
(PUT 'COPY-LIST 'DEFINED-IN-FILE 'TAYLOR/TAYLOR.RED) 
(PUT 'COPY-LIST 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(PUTC 'COPY-LIST 'INLINE '(LAMBDA (L) (APPEND L NIL))) 
(DE MAKE-TAYLOR* (CFLIS TP ORIG FLGS) (LIST 'TAYLOR* CFLIS TP ORIG FLGS)) 
(PUT 'MAKE-TAYLOR* 'NUMBER-OF-ARGS 4) 
(PUT 'MAKE-TAYLOR* 'DEFINED-ON-LINE '1117) 
(PUT 'MAKE-TAYLOR* 'DEFINED-IN-FILE 'TAYLOR/TAYLOR.RED) 
(PUT 'MAKE-TAYLOR* 'PROCEDURE_TYPE
     '(ARROW (TIMES GENERAL GENERAL GENERAL GENERAL) GENERAL)) 
(PUTC 'MAKE-TAYLOR* 'INLINE
      '(LAMBDA (CFLIS TP ORIG FLGS) (LIST 'TAYLOR* CFLIS TP ORIG FLGS))) 
(DE TAYMAKECOEFF (U V) (CONS U V)) 
(PUT 'TAYMAKECOEFF 'NUMBER-OF-ARGS 2) 
(PUT 'TAYMAKECOEFF 'DEFINED-ON-LINE '1123) 
(PUT 'TAYMAKECOEFF 'DEFINED-IN-FILE 'TAYLOR/TAYLOR.RED) 
(PUT 'TAYMAKECOEFF 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(PUTC 'TAYMAKECOEFF 'INLINE '(LAMBDA (U V) (CONS U V))) 
(DE TAYCOEFFLIST (U) (CADR U)) 
(PUT 'TAYCOEFFLIST 'NUMBER-OF-ARGS 1) 
(PUT 'TAYCOEFFLIST 'DEFINED-ON-LINE '1132) 
(PUT 'TAYCOEFFLIST 'DEFINED-IN-FILE 'TAYLOR/TAYLOR.RED) 
(PUT 'TAYCOEFFLIST 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(PUTC 'TAYCOEFFLIST 'INLINE '(LAMBDA (U) (CADR U))) 
(DE TAYTEMPLATE (U) (CADDR U)) 
(PUT 'TAYTEMPLATE 'NUMBER-OF-ARGS 1) 
(PUT 'TAYTEMPLATE 'DEFINED-ON-LINE '1134) 
(PUT 'TAYTEMPLATE 'DEFINED-IN-FILE 'TAYLOR/TAYLOR.RED) 
(PUT 'TAYTEMPLATE 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(PUTC 'TAYTEMPLATE 'INLINE '(LAMBDA (U) (CADDR U))) 
(DE TAYORIG (U) (CADDDR U)) 
(PUT 'TAYORIG 'NUMBER-OF-ARGS 1) 
(PUT 'TAYORIG 'DEFINED-ON-LINE '1136) 
(PUT 'TAYORIG 'DEFINED-IN-FILE 'TAYLOR/TAYLOR.RED) 
(PUT 'TAYORIG 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(PUTC 'TAYORIG 'INLINE '(LAMBDA (U) (CADDDR U))) 
(DE TAYFLAGS (U) (CAR (CDDDDR U))) 
(PUT 'TAYFLAGS 'NUMBER-OF-ARGS 1) 
(PUT 'TAYFLAGS 'DEFINED-ON-LINE '1138) 
(PUT 'TAYFLAGS 'DEFINED-IN-FILE 'TAYLOR/TAYLOR.RED) 
(PUT 'TAYFLAGS 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(PUTC 'TAYFLAGS 'INLINE '(LAMBDA (U) (CAR (CDDDDR U)))) 
(DE TAYCFPL (U) (CAR U)) 
(PUT 'TAYCFPL 'NUMBER-OF-ARGS 1) 
(PUT 'TAYCFPL 'DEFINED-ON-LINE '1140) 
(PUT 'TAYCFPL 'DEFINED-IN-FILE 'TAYLOR/TAYLOR.RED) 
(PUT 'TAYCFPL 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(PUTC 'TAYCFPL 'INLINE '(LAMBDA (U) (CAR U))) 
(DE TAYCFSQ (U) (CDR U)) 
(PUT 'TAYCFSQ 'NUMBER-OF-ARGS 1) 
(PUT 'TAYCFSQ 'DEFINED-ON-LINE '1142) 
(PUT 'TAYCFSQ 'DEFINED-IN-FILE 'TAYLOR/TAYLOR.RED) 
(PUT 'TAYCFSQ 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(PUTC 'TAYCFSQ 'INLINE '(LAMBDA (U) (CDR U))) 
(DE TAYTPVARS (TP)
    (PROG (X FORALL-RESULT FORALL-ENDPTR)
      (SETQ X TP)
     STARTOVER
      (COND ((NULL X) (RETURN NIL)))
      (SETQ FORALL-RESULT ((LAMBDA (X) (APPEND (CAR X) NIL)) (CAR X)))
      (SETQ FORALL-ENDPTR (LASTPAIR FORALL-RESULT))
      (SETQ X (CDR X))
      (COND ((ATOM FORALL-ENDPTR) (GO STARTOVER)))
     LOOPLABEL
      (COND ((NULL X) (RETURN FORALL-RESULT)))
      (RPLACD FORALL-ENDPTR ((LAMBDA (X) (APPEND (CAR X) NIL)) (CAR X)))
      (SETQ FORALL-ENDPTR (LASTPAIR FORALL-ENDPTR))
      (SETQ X (CDR X))
      (GO LOOPLABEL))) 
(PUT 'TAYTPVARS 'NUMBER-OF-ARGS 1) 
(PUT 'TAYTPVARS 'DEFINED-ON-LINE '1144) 
(PUT 'TAYTPVARS 'DEFINED-IN-FILE 'TAYLOR/TAYLOR.RED) 
(PUT 'TAYTPVARS 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(PUTC 'TAYTPVARS 'INLINE
      '(LAMBDA (TP)
         (PROG (X FORALL-RESULT FORALL-ENDPTR)
           (SETQ X TP)
          STARTOVER
           (COND ((NULL X) (RETURN NIL)))
           (SETQ FORALL-RESULT ((LAMBDA (X) (APPEND (CAR X) NIL)) (CAR X)))
           (SETQ FORALL-ENDPTR (LASTPAIR FORALL-RESULT))
           (SETQ X (CDR X))
           (COND ((ATOM FORALL-ENDPTR) (GO STARTOVER)))
          LOOPLABEL
           (COND ((NULL X) (RETURN FORALL-RESULT)))
           (RPLACD FORALL-ENDPTR ((LAMBDA (X) (APPEND (CAR X) NIL)) (CAR X)))
           (SETQ FORALL-ENDPTR (LASTPAIR FORALL-ENDPTR))
           (SETQ X (CDR X))
           (GO LOOPLABEL)))) 
(DE TAYVARS (U)
    (PROG (X FORALL-RESULT FORALL-ENDPTR)
      (SETQ X (CADDR U))
     STARTOVER
      (COND ((NULL X) (RETURN NIL)))
      (SETQ FORALL-RESULT ((LAMBDA (X) (APPEND (CAR X) NIL)) (CAR X)))
      (SETQ FORALL-ENDPTR (LASTPAIR FORALL-RESULT))
      (SETQ X (CDR X))
      (COND ((ATOM FORALL-ENDPTR) (GO STARTOVER)))
     LOOPLABEL
      (COND ((NULL X) (RETURN FORALL-RESULT)))
      (RPLACD FORALL-ENDPTR ((LAMBDA (X) (APPEND (CAR X) NIL)) (CAR X)))
      (SETQ FORALL-ENDPTR (LASTPAIR FORALL-ENDPTR))
      (SETQ X (CDR X))
      (GO LOOPLABEL))) 
(PUT 'TAYVARS 'NUMBER-OF-ARGS 1) 
(PUT 'TAYVARS 'DEFINED-ON-LINE '1147) 
(PUT 'TAYVARS 'DEFINED-IN-FILE 'TAYLOR/TAYLOR.RED) 
(PUT 'TAYVARS 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(PUTC 'TAYVARS 'INLINE
      '(LAMBDA (U)
         (PROG (X FORALL-RESULT FORALL-ENDPTR)
           (SETQ X (CADDR U))
          STARTOVER
           (COND ((NULL X) (RETURN NIL)))
           (SETQ FORALL-RESULT ((LAMBDA (X) (APPEND (CAR X) NIL)) (CAR X)))
           (SETQ FORALL-ENDPTR (LASTPAIR FORALL-RESULT))
           (SETQ X (CDR X))
           (COND ((ATOM FORALL-ENDPTR) (GO STARTOVER)))
          LOOPLABEL
           (COND ((NULL X) (RETURN FORALL-RESULT)))
           (RPLACD FORALL-ENDPTR ((LAMBDA (X) (APPEND (CAR X) NIL)) (CAR X)))
           (SETQ FORALL-ENDPTR (LASTPAIR FORALL-ENDPTR))
           (SETQ X (CDR X))
           (GO LOOPLABEL)))) 
(DE TAYGETCOEFF (DEGRLIS COEFFLIS)
    ((LAMBDA (CC) (COND ((NULL CC) (CONS NIL 1)) (T (CDR CC))))
     (ASSOC DEGRLIS COEFFLIS))) 
(PUT 'TAYGETCOEFF 'NUMBER-OF-ARGS 2) 
(PUT 'TAYGETCOEFF 'DEFINED-ON-LINE '1150) 
(PUT 'TAYGETCOEFF 'DEFINED-IN-FILE 'TAYLOR/TAYLOR.RED) 
(PUT 'TAYGETCOEFF 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(PUTC 'TAYGETCOEFF 'INLINE
      '(LAMBDA (DEGRLIS COEFFLIS)
         ((LAMBDA (CC) (COND ((NULL CC) (CONS NIL 1)) (T (CDR CC))))
          (ASSOC DEGRLIS COEFFLIS)))) 
(DE TAYTPELVARS (U) (CAR U)) 
(PUT 'TAYTPELVARS 'NUMBER-OF-ARGS 1) 
(PUT 'TAYTPELVARS 'DEFINED-ON-LINE '1154) 
(PUT 'TAYTPELVARS 'DEFINED-IN-FILE 'TAYLOR/TAYLOR.RED) 
(PUT 'TAYTPELVARS 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(PUTC 'TAYTPELVARS 'INLINE '(LAMBDA (U) (CAR U))) 
(DE TAYTPELPOINT (U) (CADR U)) 
(PUT 'TAYTPELPOINT 'NUMBER-OF-ARGS 1) 
(PUT 'TAYTPELPOINT 'DEFINED-ON-LINE '1156) 
(PUT 'TAYTPELPOINT 'DEFINED-IN-FILE 'TAYLOR/TAYLOR.RED) 
(PUT 'TAYTPELPOINT 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(PUTC 'TAYTPELPOINT 'INLINE '(LAMBDA (U) (CADR U))) 
(DE TAYTPELORDER (U) (CADDR U)) 
(PUT 'TAYTPELORDER 'NUMBER-OF-ARGS 1) 
(PUT 'TAYTPELORDER 'DEFINED-ON-LINE '1158) 
(PUT 'TAYTPELORDER 'DEFINED-IN-FILE 'TAYLOR/TAYLOR.RED) 
(PUT 'TAYTPELORDER 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(PUTC 'TAYTPELORDER 'INLINE '(LAMBDA (U) (CADDR U))) 
(DE TAYTPELNEXT (U) (CADDDR U)) 
(PUT 'TAYTPELNEXT 'NUMBER-OF-ARGS 1) 
(PUT 'TAYTPELNEXT 'DEFINED-ON-LINE '1160) 
(PUT 'TAYTPELNEXT 'DEFINED-IN-FILE 'TAYLOR/TAYLOR.RED) 
(PUT 'TAYTPELNEXT 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(PUTC 'TAYTPELNEXT 'INLINE '(LAMBDA (U) (CADDDR U))) 
(DE TPDEGREELIST (TP)
    (PROG (X FORALL-RESULT FORALL-ENDPTR)
      (SETQ X TP)
      (COND ((NULL X) (RETURN NIL)))
      (SETQ FORALL-RESULT
              (SETQ FORALL-ENDPTR (CONS ((LAMBDA (X) (CADDR X)) (CAR X)) NIL)))
     LOOPLABEL
      (SETQ X (CDR X))
      (COND ((NULL X) (RETURN FORALL-RESULT)))
      (RPLACD FORALL-ENDPTR (CONS ((LAMBDA (X) (CADDR X)) (CAR X)) NIL))
      (SETQ FORALL-ENDPTR (CDR FORALL-ENDPTR))
      (GO LOOPLABEL))) 
(PUT 'TPDEGREELIST 'NUMBER-OF-ARGS 1) 
(PUT 'TPDEGREELIST 'DEFINED-ON-LINE '1162) 
(PUT 'TPDEGREELIST 'DEFINED-IN-FILE 'TAYLOR/TAYLOR.RED) 
(PUT 'TPDEGREELIST 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(PUTC 'TPDEGREELIST 'INLINE
      '(LAMBDA (TP)
         (PROG (X FORALL-RESULT FORALL-ENDPTR)
           (SETQ X TP)
           (COND ((NULL X) (RETURN NIL)))
           (SETQ FORALL-RESULT
                   (SETQ FORALL-ENDPTR
                           (CONS ((LAMBDA (X) (CADDR X)) (CAR X)) NIL)))
          LOOPLABEL
           (SETQ X (CDR X))
           (COND ((NULL X) (RETURN FORALL-RESULT)))
           (RPLACD FORALL-ENDPTR (CONS ((LAMBDA (X) (CADDR X)) (CAR X)) NIL))
           (SETQ FORALL-ENDPTR (CDR FORALL-ENDPTR))
           (GO LOOPLABEL)))) 
(DE TPNEXTLIST (TP)
    (PROG (X FORALL-RESULT FORALL-ENDPTR)
      (SETQ X TP)
      (COND ((NULL X) (RETURN NIL)))
      (SETQ FORALL-RESULT
              (SETQ FORALL-ENDPTR
                      (CONS ((LAMBDA (X) (CADDDR X)) (CAR X)) NIL)))
     LOOPLABEL
      (SETQ X (CDR X))
      (COND ((NULL X) (RETURN FORALL-RESULT)))
      (RPLACD FORALL-ENDPTR (CONS ((LAMBDA (X) (CADDDR X)) (CAR X)) NIL))
      (SETQ FORALL-ENDPTR (CDR FORALL-ENDPTR))
      (GO LOOPLABEL))) 
(PUT 'TPNEXTLIST 'NUMBER-OF-ARGS 1) 
(PUT 'TPNEXTLIST 'DEFINED-ON-LINE '1165) 
(PUT 'TPNEXTLIST 'DEFINED-IN-FILE 'TAYLOR/TAYLOR.RED) 
(PUT 'TPNEXTLIST 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(PUTC 'TPNEXTLIST 'INLINE
      '(LAMBDA (TP)
         (PROG (X FORALL-RESULT FORALL-ENDPTR)
           (SETQ X TP)
           (COND ((NULL X) (RETURN NIL)))
           (SETQ FORALL-RESULT
                   (SETQ FORALL-ENDPTR
                           (CONS ((LAMBDA (X) (CADDDR X)) (CAR X)) NIL)))
          LOOPLABEL
           (SETQ X (CDR X))
           (COND ((NULL X) (RETURN FORALL-RESULT)))
           (RPLACD FORALL-ENDPTR (CONS ((LAMBDA (X) (CADDDR X)) (CAR X)) NIL))
           (SETQ FORALL-ENDPTR (CDR FORALL-ENDPTR))
           (GO LOOPLABEL)))) 
(DE TAYDEGREESUM (U)
    (PROG (X FORALL-RESULT)
      (SETQ X (CADDR U))
      (SETQ FORALL-RESULT 0)
     LAB1
      (COND ((NULL X) (RETURN FORALL-RESULT)))
      (SETQ FORALL-RESULT
              (PLUS ((LAMBDA (X) (CADDR X)) (CAR X)) FORALL-RESULT))
      (SETQ X (CDR X))
      (GO LAB1))) 
(PUT 'TAYDEGREESUM 'NUMBER-OF-ARGS 1) 
(PUT 'TAYDEGREESUM 'DEFINED-ON-LINE '1171) 
(PUT 'TAYDEGREESUM 'DEFINED-IN-FILE 'TAYLOR/TAYLOR.RED) 
(PUT 'TAYDEGREESUM 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(PUTC 'TAYDEGREESUM 'INLINE
      '(LAMBDA (U)
         (PROG (X FORALL-RESULT)
           (SETQ X (CADDR U))
           (SETQ FORALL-RESULT 0)
          LAB1
           (COND ((NULL X) (RETURN FORALL-RESULT)))
           (SETQ FORALL-RESULT
                   (PLUS ((LAMBDA (X) (CADDR X)) (CAR X)) FORALL-RESULT))
           (SETQ X (CDR X))
           (GO LAB1)))) 
(DE SET-TAYCOEFFLIST (U V) (RPLACA (CDR U) V)) 
(PUT 'SET-TAYCOEFFLIST 'NUMBER-OF-ARGS 2) 
(PUT 'SET-TAYCOEFFLIST 'DEFINED-ON-LINE '1177) 
(PUT 'SET-TAYCOEFFLIST 'DEFINED-IN-FILE 'TAYLOR/TAYLOR.RED) 
(PUT 'SET-TAYCOEFFLIST 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(PUTC 'SET-TAYCOEFFLIST 'INLINE '(LAMBDA (U V) (RPLACA (CDR U) V))) 
(DE SET-TAYTEMPLATE (U V) (RPLACA (CDDR U) V)) 
(PUT 'SET-TAYTEMPLATE 'NUMBER-OF-ARGS 2) 
(PUT 'SET-TAYTEMPLATE 'DEFINED-ON-LINE '1183) 
(PUT 'SET-TAYTEMPLATE 'DEFINED-IN-FILE 'TAYLOR/TAYLOR.RED) 
(PUT 'SET-TAYTEMPLATE 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(PUTC 'SET-TAYTEMPLATE 'INLINE '(LAMBDA (U V) (RPLACA (CDDR U) V))) 
(DE SET-TAYORIG (U V) (RPLACA (CDDDR U) V)) 
(PUT 'SET-TAYORIG 'NUMBER-OF-ARGS 2) 
(PUT 'SET-TAYORIG 'DEFINED-ON-LINE '1189) 
(PUT 'SET-TAYORIG 'DEFINED-IN-FILE 'TAYLOR/TAYLOR.RED) 
(PUT 'SET-TAYORIG 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(PUTC 'SET-TAYORIG 'INLINE '(LAMBDA (U V) (RPLACA (CDDDR U) V))) 
(DE SET-TAYFLAGS (U V) (RPLACA (CDDDDR U) V)) 
(PUT 'SET-TAYFLAGS 'NUMBER-OF-ARGS 2) 
(PUT 'SET-TAYFLAGS 'DEFINED-ON-LINE '1195) 
(PUT 'SET-TAYFLAGS 'DEFINED-IN-FILE 'TAYLOR/TAYLOR.RED) 
(PUT 'SET-TAYFLAGS 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(PUTC 'SET-TAYFLAGS 'INLINE '(LAMBDA (U V) (RPLACA (CDDDDR U) V))) 
(DE SET-TAYCFPL (U V) (RPLACA U V)) 
(PUT 'SET-TAYCFPL 'NUMBER-OF-ARGS 2) 
(PUT 'SET-TAYCFPL 'DEFINED-ON-LINE '1201) 
(PUT 'SET-TAYCFPL 'DEFINED-IN-FILE 'TAYLOR/TAYLOR.RED) 
(PUT 'SET-TAYCFPL 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(PUTC 'SET-TAYCFPL 'INLINE '(LAMBDA (U V) (RPLACA U V))) 
(DE SET-TAYCFSQ (U V) (RPLACD U V)) 
(PUT 'SET-TAYCFSQ 'NUMBER-OF-ARGS 2) 
(PUT 'SET-TAYCFSQ 'DEFINED-ON-LINE '1204) 
(PUT 'SET-TAYCFSQ 'DEFINED-IN-FILE 'TAYLOR/TAYLOR.RED) 
(PUT 'SET-TAYCFSQ 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(PUTC 'SET-TAYCFSQ 'INLINE '(LAMBDA (U V) (RPLACD U V))) 
(DE EXPONENT-CHECK-INT (RN) (COND ((EQUAL (CDDR RN) 1) (CADR RN)) (T RN))) 
(PUT 'EXPONENT-CHECK-INT 'NUMBER-OF-ARGS 1) 
(PUT 'EXPONENT-CHECK-INT 'DEFINED-ON-LINE '1211) 
(PUT 'EXPONENT-CHECK-INT 'DEFINED-IN-FILE 'TAYLOR/TAYLOR.RED) 
(PUT 'EXPONENT-CHECK-INT 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(PUTC 'EXPONENT-CHECK-INT 'INLINE
      '(LAMBDA (RN) (COND ((EQUAL (CDDR RN) 1) (CADR RN)) (T RN)))) 
(PUT '*TAYEXP2Q 'NUMBER-OF-ARGS 1) 
(PUT '*TAYEXP2Q 'DEFINED-ON-LINE '1214) 
(PUT '*TAYEXP2Q 'DEFINED-IN-FILE 'TAYLOR/TAYLOR.RED) 
(PUT '*TAYEXP2Q 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE *TAYEXP2Q (U)
    (COND ((ATOM U) (CONS (COND ((ZEROP U) NIL) (T U)) 1)) (T (CDR U)))) 
(PUT '*Q2TAYEXP 'NUMBER-OF-ARGS 1) 
(PUT '*Q2TAYEXP 'DEFINED-ON-LINE '1218) 
(PUT '*Q2TAYEXP 'DEFINED-IN-FILE 'TAYLOR/TAYLOR.RED) 
(PUT '*Q2TAYEXP 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE *Q2TAYEXP (U)
    ((LAMBDA (X)
       (COND ((NULL X) (CONFUSION '*Q2TAYEXP))
             (T (COND ((EQUAL (CDDR (CAR X)) 1) (CADR (CAR X))) (T (CAR X))))))
     (SIMPRN (LIST (MK*SQ U))))) 
(PUT 'PREPTAYEXP 'NUMBER-OF-ARGS 1) 
(PUT 'PREPTAYEXP 'DEFINED-ON-LINE '1223) 
(PUT 'PREPTAYEXP 'DEFINED-IN-FILE 'TAYLOR/TAYLOR.RED) 
(PUT 'PREPTAYEXP 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE PREPTAYEXP (U) (COND ((ATOM U) U) (T (|RNPREP:| U)))) 
(PUT 'TAYEXP-PLUS 'DEFINED-ON-LINE '1226) 
(PUT 'TAYEXP-PLUS 'DEFINED-IN-FILE 'TAYLOR/TAYLOR.RED) 
(PUT 'TAYEXP-PLUS 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DM TAYEXP-PLUS (X)
    (COND ((NULL (CDR X)) 0) ((NULL (CDDR X)) (CADR X))
          (T (EXPAND (CDR X) 'TAYEXP-PLUS2)))) 
(PUT 'TAYEXP-PLUS2 'NUMBER-OF-ARGS 2) 
(PUT 'TAYEXP-PLUS2 'DEFINED-ON-LINE '1231) 
(PUT 'TAYEXP-PLUS2 'DEFINED-IN-FILE 'TAYLOR/TAYLOR.RED) 
(PUT 'TAYEXP-PLUS2 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE TAYEXP-PLUS2 (E1 E2)
    (COND ((AND (ATOM E1) (ATOM E2)) (PLUS E1 E2))
          (T
           ((LAMBDA (RN) (COND ((EQUAL (CDDR RN) 1) (CADR RN)) (T RN)))
            (COND ((ATOM E1) (|RNPLUS:| (*I2RN E1) E2))
                  ((ATOM E2) (|RNPLUS:| E1 (*I2RN E2)))
                  (T (|RNPLUS:| E1 E2))))))) 
(PUT 'TAYEXP-DIFFERENCE 'NUMBER-OF-ARGS 2) 
(PUT 'TAYEXP-DIFFERENCE 'DEFINED-ON-LINE '1238) 
(PUT 'TAYEXP-DIFFERENCE 'DEFINED-IN-FILE 'TAYLOR/TAYLOR.RED) 
(PUT 'TAYEXP-DIFFERENCE 'PROCEDURE_TYPE
     '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE TAYEXP-DIFFERENCE (E1 E2)
    (COND ((AND (ATOM E1) (ATOM E2)) (DIFFERENCE E1 E2))
          (T
           ((LAMBDA (RN) (COND ((EQUAL (CDDR RN) 1) (CADR RN)) (T RN)))
            (COND ((ATOM E1) (|RNDIFFERENCE:| (*I2RN E1) E2))
                  ((ATOM E2) (|RNDIFFERENCE:| E1 (*I2RN E2)))
                  (T (|RNDIFFERENCE:| E1 E2))))))) 
(PUT 'TAYEXP-MINUS 'NUMBER-OF-ARGS 1) 
(PUT 'TAYEXP-MINUS 'DEFINED-ON-LINE '1245) 
(PUT 'TAYEXP-MINUS 'DEFINED-IN-FILE 'TAYLOR/TAYLOR.RED) 
(PUT 'TAYEXP-MINUS 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE TAYEXP-MINUS (E) (COND ((ATOM E) (MINUS E)) (T (|RNMINUS:| E)))) 
(PUT 'TAYEXP-TIMES 'DEFINED-ON-LINE '1248) 
(PUT 'TAYEXP-TIMES 'DEFINED-IN-FILE 'TAYLOR/TAYLOR.RED) 
(PUT 'TAYEXP-TIMES 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DM TAYEXP-TIMES (X)
    (COND ((NULL (CDR X)) 1) ((NULL (CDDR X)) (CADR X))
          (T (EXPAND (CDR X) 'TAYEXP-TIMES2)))) 
(PUT 'TAYEXP-TIMES2 'NUMBER-OF-ARGS 2) 
(PUT 'TAYEXP-TIMES2 'DEFINED-ON-LINE '1253) 
(PUT 'TAYEXP-TIMES2 'DEFINED-IN-FILE 'TAYLOR/TAYLOR.RED) 
(PUT 'TAYEXP-TIMES2 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE TAYEXP-TIMES2 (E1 E2)
    (COND ((AND (ATOM E1) (ATOM E2)) (TIMES E1 E2))
          (T
           ((LAMBDA (RN) (COND ((EQUAL (CDDR RN) 1) (CADR RN)) (T RN)))
            (COND ((ATOM E1) (|RNTIMES:| (*I2RN E1) E2))
                  ((ATOM E2) (|RNTIMES:| E1 (*I2RN E2)))
                  (T (|RNTIMES:| E1 E2))))))) 
(PUT 'TAYEXP-QUOTIENT 'NUMBER-OF-ARGS 2) 
(PUT 'TAYEXP-QUOTIENT 'DEFINED-ON-LINE '1260) 
(PUT 'TAYEXP-QUOTIENT 'DEFINED-IN-FILE 'TAYLOR/TAYLOR.RED) 
(PUT 'TAYEXP-QUOTIENT 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE TAYEXP-QUOTIENT (U V)
    ((LAMBDA (RN) (COND ((EQUAL (CDDR RN) 1) (CADR RN)) (T RN)))
     (|RNQUOTIENT:| (COND ((ATOM U) (*I2RN U)) (T U))
                    (COND ((ATOM V) (*I2RN V)) (T V))))) 
(PUT 'TAYEXP-MINUSP 'NUMBER-OF-ARGS 1) 
(PUT 'TAYEXP-MINUSP 'DEFINED-ON-LINE '1265) 
(PUT 'TAYEXP-MINUSP 'DEFINED-IN-FILE 'TAYLOR/TAYLOR.RED) 
(PUT 'TAYEXP-MINUSP 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE TAYEXP-MINUSP (E) (COND ((ATOM E) (MINUSP E)) (T (|RNMINUSP:| E)))) 
(PUT 'TAYEXP-GREATERP 'NUMBER-OF-ARGS 2) 
(PUT 'TAYEXP-GREATERP 'DEFINED-ON-LINE '1269) 
(PUT 'TAYEXP-GREATERP 'DEFINED-IN-FILE 'TAYLOR/TAYLOR.RED) 
(PUT 'TAYEXP-GREATERP 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE TAYEXP-GREATERP (A B) (TAYEXP-LESSP B A)) 
(PUT 'TAYEXP-GEQ 'DEFINED-ON-LINE '1272) 
(PUT 'TAYEXP-GEQ 'DEFINED-IN-FILE 'TAYLOR/TAYLOR.RED) 
(PUT 'TAYEXP-GEQ 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DM TAYEXP-GEQ (X) (LIST 'NOT (CONS 'TAYEXP-LESSP (CDR X)))) 
(PUT 'TAYEXP-LESSP 'NUMBER-OF-ARGS 2) 
(PUT 'TAYEXP-LESSP 'DEFINED-ON-LINE '1275) 
(PUT 'TAYEXP-LESSP 'DEFINED-IN-FILE 'TAYLOR/TAYLOR.RED) 
(PUT 'TAYEXP-LESSP 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE TAYEXP-LESSP (E1 E2)
    (COND ((AND (ATOM E1) (ATOM E2)) (LESSP E1 E2))
          (T (|:MINUSP| (TAYEXP-DIFFERENCE E1 E2))))) 
(PUT 'TAYEXP-LEQ 'DEFINED-ON-LINE '1279) 
(PUT 'TAYEXP-LEQ 'DEFINED-IN-FILE 'TAYLOR/TAYLOR.RED) 
(PUT 'TAYEXP-LEQ 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DM TAYEXP-LEQ (X) (LIST 'NOT (CONS 'TAYEXP-GREATERP (CDR X)))) 
(PUT 'TAYEXP-MAX2 'NUMBER-OF-ARGS 2) 
(PUT 'TAYEXP-MAX2 'DEFINED-ON-LINE '1282) 
(PUT 'TAYEXP-MAX2 'DEFINED-IN-FILE 'TAYLOR/TAYLOR.RED) 
(PUT 'TAYEXP-MAX2 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE TAYEXP-MAX2 (E1 E2) (COND ((TAYEXP-LESSP E1 E2) E2) (T E1))) 
(PUT 'TAYEXP-MIN2 'NUMBER-OF-ARGS 2) 
(PUT 'TAYEXP-MIN2 'DEFINED-ON-LINE '1285) 
(PUT 'TAYEXP-MIN2 'DEFINED-IN-FILE 'TAYLOR/TAYLOR.RED) 
(PUT 'TAYEXP-MIN2 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE TAYEXP-MIN2 (E1 E2) (COND ((TAYEXP-LESSP E1 E2) E1) (T E2))) 
(PUT '|TAYLOR:| 'DEFINED-ON-LINE '1288) 
(PUT '|TAYLOR:| 'DEFINED-IN-FILE 'TAYLOR/TAYLOR.RED) 
(PUT '|TAYLOR:| 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DM |TAYLOR:| (U)
    (SUBLIS
     '((PLUS . TAYEXP-PLUS) (PLUS2 . TAYEXP-PLUS2)
       (DIFFERENCE . TAYEXP-DIFFERENCE) (MINUS . TAYEXP-MINUS)
       (TIMES . TAYEXP-TIMES) (TIMES2 . TAYEXP-TIMES2) (MINUSP . TAYEXP-MINUSP)
       (GREATERP . TAYEXP-GREATERP) (GEQ . TAYEXP-GEQ) (LESSP . TAYEXP-LESSP)
       (LEQ . TAYEXP-LEQ) (MAX2 . TAYEXP-MAX2) (MIN2 . TAYEXP-MIN2))
     (CADR U))) 
(DE TAYFLAGSCOMBINE (U V) NIL) 
(PUT 'TAYFLAGSCOMBINE 'NUMBER-OF-ARGS 2) 
(PUT 'TAYFLAGSCOMBINE 'DEFINED-ON-LINE '1308) 
(PUT 'TAYFLAGSCOMBINE 'DEFINED-IN-FILE 'TAYLOR/TAYLOR.RED) 
(PUT 'TAYFLAGSCOMBINE 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(PUTC 'TAYFLAGSCOMBINE 'INLINE '(LAMBDA (U V) NIL)) 
(DE GET-DEGREE (DG)
    (PROG (N FORALL-RESULT)
      (SETQ N DG)
      (SETQ FORALL-RESULT 0)
     LAB1
      (COND ((NULL N) (RETURN FORALL-RESULT)))
      (SETQ FORALL-RESULT (TAYEXP-PLUS ((LAMBDA (N) N) (CAR N)) FORALL-RESULT))
      (SETQ N (CDR N))
      (GO LAB1))) 
(PUT 'GET-DEGREE 'NUMBER-OF-ARGS 1) 
(PUT 'GET-DEGREE 'DEFINED-ON-LINE '1314) 
(PUT 'GET-DEGREE 'DEFINED-IN-FILE 'TAYLOR/TAYLOR.RED) 
(PUT 'GET-DEGREE 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(PUTC 'GET-DEGREE 'INLINE
      '(LAMBDA (DG)
         (PROG (N FORALL-RESULT)
           (SETQ N DG)
           (SETQ FORALL-RESULT 0)
          LAB1
           (COND ((NULL N) (RETURN FORALL-RESULT)))
           (SETQ FORALL-RESULT
                   (TAYEXP-PLUS ((LAMBDA (N) N) (CAR N)) FORALL-RESULT))
           (SETQ N (CDR N))
           (GO LAB1)))) 
(DE GET-DEGREELIST (DGL)
    (PROG (DG FORALL-RESULT FORALL-ENDPTR)
      (SETQ DG DGL)
      (COND ((NULL DG) (RETURN NIL)))
      (SETQ FORALL-RESULT
              (SETQ FORALL-ENDPTR
                      (CONS
                       ((LAMBDA (DG)
                          (PROG (N FORALL-RESULT)
                            (SETQ N DG)
                            (SETQ FORALL-RESULT 0)
                           LAB1
                            (COND ((NULL N) (RETURN FORALL-RESULT)))
                            (SETQ FORALL-RESULT
                                    (TAYEXP-PLUS ((LAMBDA (N) N) (CAR N))
                                                 FORALL-RESULT))
                            (SETQ N (CDR N))
                            (GO LAB1)))
                        (CAR DG))
                       NIL)))
     LOOPLABEL
      (SETQ DG (CDR DG))
      (COND ((NULL DG) (RETURN FORALL-RESULT)))
      (RPLACD FORALL-ENDPTR
              (CONS
               ((LAMBDA (DG)
                  (PROG (N FORALL-RESULT)
                    (SETQ N DG)
                    (SETQ FORALL-RESULT 0)
                   LAB1
                    (COND ((NULL N) (RETURN FORALL-RESULT)))
                    (SETQ FORALL-RESULT
                            (TAYEXP-PLUS ((LAMBDA (N) N) (CAR N))
                                         FORALL-RESULT))
                    (SETQ N (CDR N))
                    (GO LAB1)))
                (CAR DG))
               NIL))
      (SETQ FORALL-ENDPTR (CDR FORALL-ENDPTR))
      (GO LOOPLABEL))) 
(PUT 'GET-DEGREELIST 'NUMBER-OF-ARGS 1) 
(PUT 'GET-DEGREELIST 'DEFINED-ON-LINE '1320) 
(PUT 'GET-DEGREELIST 'DEFINED-IN-FILE 'TAYLOR/TAYLOR.RED) 
(PUT 'GET-DEGREELIST 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(PUTC 'GET-DEGREELIST 'INLINE
      '(LAMBDA (DGL)
         (PROG (DG FORALL-RESULT FORALL-ENDPTR)
           (SETQ DG DGL)
           (COND ((NULL DG) (RETURN NIL)))
           (SETQ FORALL-RESULT
                   (SETQ FORALL-ENDPTR
                           (CONS
                            ((LAMBDA (DG)
                               (PROG (N FORALL-RESULT)
                                 (SETQ N DG)
                                 (SETQ FORALL-RESULT 0)
                                LAB1
                                 (COND ((NULL N) (RETURN FORALL-RESULT)))
                                 (SETQ FORALL-RESULT
                                         (TAYEXP-PLUS ((LAMBDA (N) N) (CAR N))
                                                      FORALL-RESULT))
                                 (SETQ N (CDR N))
                                 (GO LAB1)))
                             (CAR DG))
                            NIL)))
          LOOPLABEL
           (SETQ DG (CDR DG))
           (COND ((NULL DG) (RETURN FORALL-RESULT)))
           (RPLACD FORALL-ENDPTR
                   (CONS
                    ((LAMBDA (DG)
                       (PROG (N FORALL-RESULT)
                         (SETQ N DG)
                         (SETQ FORALL-RESULT 0)
                        LAB1
                         (COND ((NULL N) (RETURN FORALL-RESULT)))
                         (SETQ FORALL-RESULT
                                 (TAYEXP-PLUS ((LAMBDA (N) N) (CAR N))
                                              FORALL-RESULT))
                         (SETQ N (CDR N))
                         (GO LAB1)))
                     (CAR DG))
                    NIL))
           (SETQ FORALL-ENDPTR (CDR FORALL-ENDPTR))
           (GO LOOPLABEL)))) 
(DE INVERT-POWERLIST (PL)
    (PROG (NL FORALL-RESULT FORALL-ENDPTR)
      (SETQ NL PL)
      (COND ((NULL NL) (RETURN NIL)))
      (SETQ FORALL-RESULT
              (SETQ FORALL-ENDPTR
                      (CONS
                       ((LAMBDA (NL)
                          (PROG (P FORALL-RESULT FORALL-ENDPTR)
                            (SETQ P NL)
                            (COND ((NULL P) (RETURN NIL)))
                            (SETQ FORALL-RESULT
                                    (SETQ FORALL-ENDPTR
                                            (CONS
                                             ((LAMBDA (P) (TAYEXP-MINUS P))
                                              (CAR P))
                                             NIL)))
                           LOOPLABEL
                            (SETQ P (CDR P))
                            (COND ((NULL P) (RETURN FORALL-RESULT)))
                            (RPLACD FORALL-ENDPTR
                                    (CONS
                                     ((LAMBDA (P) (TAYEXP-MINUS P)) (CAR P))
                                     NIL))
                            (SETQ FORALL-ENDPTR (CDR FORALL-ENDPTR))
                            (GO LOOPLABEL)))
                        (CAR NL))
                       NIL)))
     LOOPLABEL
      (SETQ NL (CDR NL))
      (COND ((NULL NL) (RETURN FORALL-RESULT)))
      (RPLACD FORALL-ENDPTR
              (CONS
               ((LAMBDA (NL)
                  (PROG (P FORALL-RESULT FORALL-ENDPTR)
                    (SETQ P NL)
                    (COND ((NULL P) (RETURN NIL)))
                    (SETQ FORALL-RESULT
                            (SETQ FORALL-ENDPTR
                                    (CONS
                                     ((LAMBDA (P) (TAYEXP-MINUS P)) (CAR P))
                                     NIL)))
                   LOOPLABEL
                    (SETQ P (CDR P))
                    (COND ((NULL P) (RETURN FORALL-RESULT)))
                    (RPLACD FORALL-ENDPTR
                            (CONS ((LAMBDA (P) (TAYEXP-MINUS P)) (CAR P)) NIL))
                    (SETQ FORALL-ENDPTR (CDR FORALL-ENDPTR))
                    (GO LOOPLABEL)))
                (CAR NL))
               NIL))
      (SETQ FORALL-ENDPTR (CDR FORALL-ENDPTR))
      (GO LOOPLABEL))) 
(PUT 'INVERT-POWERLIST 'NUMBER-OF-ARGS 1) 
(PUT 'INVERT-POWERLIST 'DEFINED-ON-LINE '1323) 
(PUT 'INVERT-POWERLIST 'DEFINED-IN-FILE 'TAYLOR/TAYLOR.RED) 
(PUT 'INVERT-POWERLIST 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(PUTC 'INVERT-POWERLIST 'INLINE
      '(LAMBDA (PL)
         (PROG (NL FORALL-RESULT FORALL-ENDPTR)
           (SETQ NL PL)
           (COND ((NULL NL) (RETURN NIL)))
           (SETQ FORALL-RESULT
                   (SETQ FORALL-ENDPTR
                           (CONS
                            ((LAMBDA (NL)
                               (PROG (P FORALL-RESULT FORALL-ENDPTR)
                                 (SETQ P NL)
                                 (COND ((NULL P) (RETURN NIL)))
                                 (SETQ FORALL-RESULT
                                         (SETQ FORALL-ENDPTR
                                                 (CONS
                                                  ((LAMBDA (P)
                                                     (TAYEXP-MINUS P))
                                                   (CAR P))
                                                  NIL)))
                                LOOPLABEL
                                 (SETQ P (CDR P))
                                 (COND ((NULL P) (RETURN FORALL-RESULT)))
                                 (RPLACD FORALL-ENDPTR
                                         (CONS
                                          ((LAMBDA (P) (TAYEXP-MINUS P))
                                           (CAR P))
                                          NIL))
                                 (SETQ FORALL-ENDPTR (CDR FORALL-ENDPTR))
                                 (GO LOOPLABEL)))
                             (CAR NL))
                            NIL)))
          LOOPLABEL
           (SETQ NL (CDR NL))
           (COND ((NULL NL) (RETURN FORALL-RESULT)))
           (RPLACD FORALL-ENDPTR
                   (CONS
                    ((LAMBDA (NL)
                       (PROG (P FORALL-RESULT FORALL-ENDPTR)
                         (SETQ P NL)
                         (COND ((NULL P) (RETURN NIL)))
                         (SETQ FORALL-RESULT
                                 (SETQ FORALL-ENDPTR
                                         (CONS
                                          ((LAMBDA (P) (TAYEXP-MINUS P))
                                           (CAR P))
                                          NIL)))
                        LOOPLABEL
                         (SETQ P (CDR P))
                         (COND ((NULL P) (RETURN FORALL-RESULT)))
                         (RPLACD FORALL-ENDPTR
                                 (CONS ((LAMBDA (P) (TAYEXP-MINUS P)) (CAR P))
                                       NIL))
                         (SETQ FORALL-ENDPTR (CDR FORALL-ENDPTR))
                         (GO LOOPLABEL)))
                     (CAR NL))
                    NIL))
           (SETQ FORALL-ENDPTR (CDR FORALL-ENDPTR))
           (GO LOOPLABEL)))) 
(DE TAYMULTCOEFFS (C1 C2)
    (CONS (ADD-DEGREES (CAR C1) (CAR C2)) (MULTSQ (CDR C1) (CDR C2)))) 
(PUT 'TAYMULTCOEFFS 'NUMBER-OF-ARGS 2) 
(PUT 'TAYMULTCOEFFS 'DEFINED-ON-LINE '1328) 
(PUT 'TAYMULTCOEFFS 'DEFINED-IN-FILE 'TAYLOR/TAYLOR.RED) 
(PUT 'TAYMULTCOEFFS 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(PUTC 'TAYMULTCOEFFS 'INLINE
      '(LAMBDA (C1 C2)
         (CONS (ADD-DEGREES (CAR C1) (CAR C2)) (MULTSQ (CDR C1) (CDR C2))))) 
(DE PRUNE-COEFFLIST (CFLIST)
    ((LAMBDA (CFLIS)
       (PROGN
        (PROG ()
         WHILELABEL
          (COND
           ((NOT (AND (NOT (NULL CFLIS)) (NULL (CAR (CDR (CAR CFLIS))))))
            (RETURN NIL)))
          (SETQ CFLIS (CDR CFLIS))
          (GO WHILELABEL))
        CFLIS))
     CFLIST)) 
(PUT 'PRUNE-COEFFLIST 'NUMBER-OF-ARGS 1) 
(PUT 'PRUNE-COEFFLIST 'DEFINED-ON-LINE '1339) 
(PUT 'PRUNE-COEFFLIST 'DEFINED-IN-FILE 'TAYLOR/TAYLOR.RED) 
(PUT 'PRUNE-COEFFLIST 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(PUTC 'PRUNE-COEFFLIST 'INLINE
      '(LAMBDA (CFLIST)
         ((LAMBDA (CFLIS)
            (PROGN
             (PROG ()
              WHILELABEL
               (COND
                ((NOT (AND (NOT (NULL CFLIS)) (NULL (CAR (CDR (CAR CFLIS))))))
                 (RETURN NIL)))
               (SETQ CFLIS (CDR CFLIS))
               (GO WHILELABEL))
             CFLIS))
          CFLIST))) 
(DE MULTINTOCOEFFLIST (COEFFLIS SQ)
    (PROG (P FORALL-RESULT FORALL-ENDPTR)
      (SETQ P COEFFLIS)
      (COND ((NULL P) (RETURN NIL)))
      (SETQ FORALL-RESULT
              (SETQ FORALL-ENDPTR
                      (CONS
                       ((LAMBDA (P)
                          (CONS (CAR P) (RESIMP (SUBS2* (MULTSQ (CDR P) SQ)))))
                        (CAR P))
                       NIL)))
     LOOPLABEL
      (SETQ P (CDR P))
      (COND ((NULL P) (RETURN FORALL-RESULT)))
      (RPLACD FORALL-ENDPTR
              (CONS
               ((LAMBDA (P)
                  (CONS (CAR P) (RESIMP (SUBS2* (MULTSQ (CDR P) SQ)))))
                (CAR P))
               NIL))
      (SETQ FORALL-ENDPTR (CDR FORALL-ENDPTR))
      (GO LOOPLABEL))) 
(PUT 'MULTINTOCOEFFLIST 'NUMBER-OF-ARGS 2) 
(PUT 'MULTINTOCOEFFLIST 'DEFINED-ON-LINE '1344) 
(PUT 'MULTINTOCOEFFLIST 'DEFINED-IN-FILE 'TAYLOR/TAYLOR.RED) 
(PUT 'MULTINTOCOEFFLIST 'PROCEDURE_TYPE
     '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(PUTC 'MULTINTOCOEFFLIST 'INLINE
      '(LAMBDA (COEFFLIS SQ)
         (PROG (P FORALL-RESULT FORALL-ENDPTR)
           (SETQ P COEFFLIS)
           (COND ((NULL P) (RETURN NIL)))
           (SETQ FORALL-RESULT
                   (SETQ FORALL-ENDPTR
                           (CONS
                            ((LAMBDA (P)
                               (CONS (CAR P)
                                     (RESIMP (SUBS2* (MULTSQ (CDR P) SQ)))))
                             (CAR P))
                            NIL)))
          LOOPLABEL
           (SETQ P (CDR P))
           (COND ((NULL P) (RETURN FORALL-RESULT)))
           (RPLACD FORALL-ENDPTR
                   (CONS
                    ((LAMBDA (P)
                       (CONS (CAR P) (RESIMP (SUBS2* (MULTSQ (CDR P) SQ)))))
                     (CAR P))
                    NIL))
           (SETQ FORALL-ENDPTR (CDR FORALL-ENDPTR))
           (GO LOOPLABEL)))) 
(DE SUBS2COEFFLIST (CLIST)
    (PROG (PP FORALL-RESULT FORALL-ENDPTR)
      (SETQ PP CLIST)
     STARTOVER
      (COND ((NULL PP) (RETURN NIL)))
      (SETQ FORALL-RESULT
              ((LAMBDA (PP)
                 ((LAMBDA (SQ)
                    (COND ((NOT (NULL (CAR SQ))) (LIST (CONS (CAR PP) SQ)))))
                  (SUBS2* (CDR PP))))
               (CAR PP)))
      (SETQ FORALL-ENDPTR (LASTPAIR FORALL-RESULT))
      (SETQ PP (CDR PP))
      (COND ((ATOM FORALL-ENDPTR) (GO STARTOVER)))
     LOOPLABEL
      (COND ((NULL PP) (RETURN FORALL-RESULT)))
      (RPLACD FORALL-ENDPTR
              ((LAMBDA (PP)
                 ((LAMBDA (SQ)
                    (COND ((NOT (NULL (CAR SQ))) (LIST (CONS (CAR PP) SQ)))))
                  (SUBS2* (CDR PP))))
               (CAR PP)))
      (SETQ FORALL-ENDPTR (LASTPAIR FORALL-ENDPTR))
      (SETQ PP (CDR PP))
      (GO LOOPLABEL))) 
(PUT 'SUBS2COEFFLIST 'NUMBER-OF-ARGS 1) 
(PUT 'SUBS2COEFFLIST 'DEFINED-ON-LINE '1353) 
(PUT 'SUBS2COEFFLIST 'DEFINED-IN-FILE 'TAYLOR/TAYLOR.RED) 
(PUT 'SUBS2COEFFLIST 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(PUTC 'SUBS2COEFFLIST 'INLINE
      '(LAMBDA (CLIST)
         (PROG (PP FORALL-RESULT FORALL-ENDPTR)
           (SETQ PP CLIST)
          STARTOVER
           (COND ((NULL PP) (RETURN NIL)))
           (SETQ FORALL-RESULT
                   ((LAMBDA (PP)
                      ((LAMBDA (SQ)
                         (COND
                          ((NOT (NULL (CAR SQ))) (LIST (CONS (CAR PP) SQ)))))
                       (SUBS2* (CDR PP))))
                    (CAR PP)))
           (SETQ FORALL-ENDPTR (LASTPAIR FORALL-RESULT))
           (SETQ PP (CDR PP))
           (COND ((ATOM FORALL-ENDPTR) (GO STARTOVER)))
          LOOPLABEL
           (COND ((NULL PP) (RETURN FORALL-RESULT)))
           (RPLACD FORALL-ENDPTR
                   ((LAMBDA (PP)
                      ((LAMBDA (SQ)
                         (COND
                          ((NOT (NULL (CAR SQ))) (LIST (CONS (CAR PP) SQ)))))
                       (SUBS2* (CDR PP))))
                    (CAR PP)))
           (SETQ FORALL-ENDPTR (LASTPAIR FORALL-ENDPTR))
           (SETQ PP (CDR PP))
           (GO LOOPLABEL)))) 
(DE RESIMPCOEFFLIST (CLIST)
    (PROG (CC FORALL-RESULT FORALL-ENDPTR)
      (SETQ CC CLIST)
      (COND ((NULL CC) (RETURN NIL)))
      (SETQ FORALL-RESULT
              (SETQ FORALL-ENDPTR
                      (CONS
                       ((LAMBDA (CC) (CONS (CAR CC) (SUBS2 (RESIMP (CDR CC)))))
                        (CAR CC))
                       NIL)))
     LOOPLABEL
      (SETQ CC (CDR CC))
      (COND ((NULL CC) (RETURN FORALL-RESULT)))
      (RPLACD FORALL-ENDPTR
              (CONS
               ((LAMBDA (CC) (CONS (CAR CC) (SUBS2 (RESIMP (CDR CC)))))
                (CAR CC))
               NIL))
      (SETQ FORALL-ENDPTR (CDR FORALL-ENDPTR))
      (GO LOOPLABEL))) 
(PUT 'RESIMPCOEFFLIST 'NUMBER-OF-ARGS 1) 
(PUT 'RESIMPCOEFFLIST 'DEFINED-ON-LINE '1358) 
(PUT 'RESIMPCOEFFLIST 'DEFINED-IN-FILE 'TAYLOR/TAYLOR.RED) 
(PUT 'RESIMPCOEFFLIST 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(PUTC 'RESIMPCOEFFLIST 'INLINE
      '(LAMBDA (CLIST)
         (PROG (CC FORALL-RESULT FORALL-ENDPTR)
           (SETQ CC CLIST)
           (COND ((NULL CC) (RETURN NIL)))
           (SETQ FORALL-RESULT
                   (SETQ FORALL-ENDPTR
                           (CONS
                            ((LAMBDA (CC)
                               (CONS (CAR CC) (SUBS2 (RESIMP (CDR CC)))))
                             (CAR CC))
                            NIL)))
          LOOPLABEL
           (SETQ CC (CDR CC))
           (COND ((NULL CC) (RETURN FORALL-RESULT)))
           (RPLACD FORALL-ENDPTR
                   (CONS
                    ((LAMBDA (CC) (CONS (CAR CC) (SUBS2 (RESIMP (CDR CC)))))
                     (CAR CC))
                    NIL))
           (SETQ FORALL-ENDPTR (CDR FORALL-ENDPTR))
           (GO LOOPLABEL)))) 
(DE RESIMPTAYLOR (U)
    (LIST 'TAYLOR*
          (PROG (CC FORALL-RESULT FORALL-ENDPTR)
            (SETQ CC (CADR U))
            (COND ((NULL CC) (RETURN NIL)))
            (SETQ FORALL-RESULT
                    (SETQ FORALL-ENDPTR
                            (CONS
                             ((LAMBDA (CC)
                                (CONS (CAR CC) (SUBS2 (RESIMP (CDR CC)))))
                              (CAR CC))
                             NIL)))
           LOOPLABEL
            (SETQ CC (CDR CC))
            (COND ((NULL CC) (RETURN FORALL-RESULT)))
            (RPLACD FORALL-ENDPTR
                    (CONS
                     ((LAMBDA (CC) (CONS (CAR CC) (SUBS2 (RESIMP (CDR CC)))))
                      (CAR CC))
                     NIL))
            (SETQ FORALL-ENDPTR (CDR FORALL-ENDPTR))
            (GO LOOPLABEL))
          (CADDR U)
          (COND ((AND *TAYLORKEEPORIGINAL (CADDDR U)) (RESIMP (CADDDR U)))
                (T NIL))
          (CAR (CDDDDR U)))) 
(PUT 'RESIMPTAYLOR 'NUMBER-OF-ARGS 1) 
(PUT 'RESIMPTAYLOR 'DEFINED-ON-LINE '1362) 
(PUT 'RESIMPTAYLOR 'DEFINED-IN-FILE 'TAYLOR/TAYLOR.RED) 
(PUT 'RESIMPTAYLOR 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(PUTC 'RESIMPTAYLOR 'INLINE
      '(LAMBDA (U)
         (LIST 'TAYLOR*
               (PROG (CC FORALL-RESULT FORALL-ENDPTR)
                 (SETQ CC (CADR U))
                 (COND ((NULL CC) (RETURN NIL)))
                 (SETQ FORALL-RESULT
                         (SETQ FORALL-ENDPTR
                                 (CONS
                                  ((LAMBDA (CC)
                                     (CONS (CAR CC) (SUBS2 (RESIMP (CDR CC)))))
                                   (CAR CC))
                                  NIL)))
                LOOPLABEL
                 (SETQ CC (CDR CC))
                 (COND ((NULL CC) (RETURN FORALL-RESULT)))
                 (RPLACD FORALL-ENDPTR
                         (CONS
                          ((LAMBDA (CC)
                             (CONS (CAR CC) (SUBS2 (RESIMP (CDR CC)))))
                           (CAR CC))
                          NIL))
                 (SETQ FORALL-ENDPTR (CDR FORALL-ENDPTR))
                 (GO LOOPLABEL))
               (CADDR U)
               (COND ((AND *TAYLORKEEPORIGINAL (CADDDR U)) (RESIMP (CADDDR U)))
                     (T NIL))
               (CAR (CDDDDR U))))) 
(DE MAKE-CST-POWERLIST (TP)
    (PROG (EL FORALL-RESULT FORALL-ENDPTR)
      (SETQ EL TP)
      (COND ((NULL EL) (RETURN NIL)))
      (SETQ FORALL-RESULT
              (SETQ FORALL-ENDPTR
                      (CONS
                       ((LAMBDA (EL) (NLIST 0 (LENGTH (CAR EL)))) (CAR EL))
                       NIL)))
     LOOPLABEL
      (SETQ EL (CDR EL))
      (COND ((NULL EL) (RETURN FORALL-RESULT)))
      (RPLACD FORALL-ENDPTR
              (CONS ((LAMBDA (EL) (NLIST 0 (LENGTH (CAR EL)))) (CAR EL)) NIL))
      (SETQ FORALL-ENDPTR (CDR FORALL-ENDPTR))
      (GO LOOPLABEL))) 
(PUT 'MAKE-CST-POWERLIST 'NUMBER-OF-ARGS 1) 
(PUT 'MAKE-CST-POWERLIST 'DEFINED-ON-LINE '1376) 
(PUT 'MAKE-CST-POWERLIST 'DEFINED-IN-FILE 'TAYLOR/TAYLOR.RED) 
(PUT 'MAKE-CST-POWERLIST 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(PUTC 'MAKE-CST-POWERLIST 'INLINE
      '(LAMBDA (TP)
         (PROG (EL FORALL-RESULT FORALL-ENDPTR)
           (SETQ EL TP)
           (COND ((NULL EL) (RETURN NIL)))
           (SETQ FORALL-RESULT
                   (SETQ FORALL-ENDPTR
                           (CONS
                            ((LAMBDA (EL) (NLIST 0 (LENGTH (CAR EL))))
                             (CAR EL))
                            NIL)))
          LOOPLABEL
           (SETQ EL (CDR EL))
           (COND ((NULL EL) (RETURN FORALL-RESULT)))
           (RPLACD FORALL-ENDPTR
                   (CONS ((LAMBDA (EL) (NLIST 0 (LENGTH (CAR EL)))) (CAR EL))
                         NIL))
           (SETQ FORALL-ENDPTR (CDR FORALL-ENDPTR))
           (GO LOOPLABEL)))) 
(DE MAKE-CST-COEFFICIENT (CST TP)
    (CONS
     (PROG (EL FORALL-RESULT FORALL-ENDPTR)
       (SETQ EL TP)
       (COND ((NULL EL) (RETURN NIL)))
       (SETQ FORALL-RESULT
               (SETQ FORALL-ENDPTR
                       (CONS
                        ((LAMBDA (EL) (NLIST 0 (LENGTH (CAR EL)))) (CAR EL))
                        NIL)))
      LOOPLABEL
       (SETQ EL (CDR EL))
       (COND ((NULL EL) (RETURN FORALL-RESULT)))
       (RPLACD FORALL-ENDPTR
               (CONS ((LAMBDA (EL) (NLIST 0 (LENGTH (CAR EL)))) (CAR EL)) NIL))
       (SETQ FORALL-ENDPTR (CDR FORALL-ENDPTR))
       (GO LOOPLABEL))
     CST)) 
(PUT 'MAKE-CST-COEFFICIENT 'NUMBER-OF-ARGS 2) 
(PUT 'MAKE-CST-COEFFICIENT 'DEFINED-ON-LINE '1385) 
(PUT 'MAKE-CST-COEFFICIENT 'DEFINED-IN-FILE 'TAYLOR/TAYLOR.RED) 
(PUT 'MAKE-CST-COEFFICIENT 'PROCEDURE_TYPE
     '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(PUTC 'MAKE-CST-COEFFICIENT 'INLINE
      '(LAMBDA (CST TP)
         (CONS
          (PROG (EL FORALL-RESULT FORALL-ENDPTR)
            (SETQ EL TP)
            (COND ((NULL EL) (RETURN NIL)))
            (SETQ FORALL-RESULT
                    (SETQ FORALL-ENDPTR
                            (CONS
                             ((LAMBDA (EL) (NLIST 0 (LENGTH (CAR EL))))
                              (CAR EL))
                             NIL)))
           LOOPLABEL
            (SETQ EL (CDR EL))
            (COND ((NULL EL) (RETURN FORALL-RESULT)))
            (RPLACD FORALL-ENDPTR
                    (CONS ((LAMBDA (EL) (NLIST 0 (LENGTH (CAR EL)))) (CAR EL))
                          NIL))
            (SETQ FORALL-ENDPTR (CDR FORALL-ENDPTR))
            (GO LOOPLABEL))
          CST))) 
(DE MAKE-CST-COEFFLIS (CST TP)
    (LIST
     (CONS
      (PROG (EL FORALL-RESULT FORALL-ENDPTR)
        (SETQ EL TP)
        (COND ((NULL EL) (RETURN NIL)))
        (SETQ FORALL-RESULT
                (SETQ FORALL-ENDPTR
                        (CONS
                         ((LAMBDA (EL) (NLIST 0 (LENGTH (CAR EL)))) (CAR EL))
                         NIL)))
       LOOPLABEL
        (SETQ EL (CDR EL))
        (COND ((NULL EL) (RETURN FORALL-RESULT)))
        (RPLACD FORALL-ENDPTR
                (CONS ((LAMBDA (EL) (NLIST 0 (LENGTH (CAR EL)))) (CAR EL))
                      NIL))
        (SETQ FORALL-ENDPTR (CDR FORALL-ENDPTR))
        (GO LOOPLABEL))
      CST))) 
(PUT 'MAKE-CST-COEFFLIS 'NUMBER-OF-ARGS 2) 
(PUT 'MAKE-CST-COEFFLIS 'DEFINED-ON-LINE '1394) 
(PUT 'MAKE-CST-COEFFLIS 'DEFINED-IN-FILE 'TAYLOR/TAYLOR.RED) 
(PUT 'MAKE-CST-COEFFLIS 'PROCEDURE_TYPE
     '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(PUTC 'MAKE-CST-COEFFLIS 'INLINE
      '(LAMBDA (CST TP)
         (LIST
          (CONS
           (PROG (EL FORALL-RESULT FORALL-ENDPTR)
             (SETQ EL TP)
             (COND ((NULL EL) (RETURN NIL)))
             (SETQ FORALL-RESULT
                     (SETQ FORALL-ENDPTR
                             (CONS
                              ((LAMBDA (EL) (NLIST 0 (LENGTH (CAR EL))))
                               (CAR EL))
                              NIL)))
            LOOPLABEL
             (SETQ EL (CDR EL))
             (COND ((NULL EL) (RETURN FORALL-RESULT)))
             (RPLACD FORALL-ENDPTR
                     (CONS ((LAMBDA (EL) (NLIST 0 (LENGTH (CAR EL)))) (CAR EL))
                           NIL))
             (SETQ FORALL-ENDPTR (CDR FORALL-ENDPTR))
             (GO LOOPLABEL))
           CST)))) 
(DE CST-TAYLOR* (CST TP)
    (LIST 'TAYLOR*
          (LIST
           (CONS
            (PROG (EL FORALL-RESULT FORALL-ENDPTR)
              (SETQ EL TP)
              (COND ((NULL EL) (RETURN NIL)))
              (SETQ FORALL-RESULT
                      (SETQ FORALL-ENDPTR
                              (CONS
                               ((LAMBDA (EL) (NLIST 0 (LENGTH (CAR EL))))
                                (CAR EL))
                               NIL)))
             LOOPLABEL
              (SETQ EL (CDR EL))
              (COND ((NULL EL) (RETURN FORALL-RESULT)))
              (RPLACD FORALL-ENDPTR
                      (CONS
                       ((LAMBDA (EL) (NLIST 0 (LENGTH (CAR EL)))) (CAR EL))
                       NIL))
              (SETQ FORALL-ENDPTR (CDR FORALL-ENDPTR))
              (GO LOOPLABEL))
            CST))
          TP CST NIL)) 
(PUT 'CST-TAYLOR* 'NUMBER-OF-ARGS 2) 
(PUT 'CST-TAYLOR* 'DEFINED-ON-LINE '1403) 
(PUT 'CST-TAYLOR* 'DEFINED-IN-FILE 'TAYLOR/TAYLOR.RED) 
(PUT 'CST-TAYLOR* 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(PUTC 'CST-TAYLOR* 'INLINE
      '(LAMBDA (CST TP)
         (LIST 'TAYLOR*
               (LIST
                (CONS
                 (PROG (EL FORALL-RESULT FORALL-ENDPTR)
                   (SETQ EL TP)
                   (COND ((NULL EL) (RETURN NIL)))
                   (SETQ FORALL-RESULT
                           (SETQ FORALL-ENDPTR
                                   (CONS
                                    ((LAMBDA (EL) (NLIST 0 (LENGTH (CAR EL))))
                                     (CAR EL))
                                    NIL)))
                  LOOPLABEL
                   (SETQ EL (CDR EL))
                   (COND ((NULL EL) (RETURN FORALL-RESULT)))
                   (RPLACD FORALL-ENDPTR
                           (CONS
                            ((LAMBDA (EL) (NLIST 0 (LENGTH (CAR EL))))
                             (CAR EL))
                            NIL))
                   (SETQ FORALL-ENDPTR (CDR FORALL-ENDPTR))
                   (GO LOOPLABEL))
                 CST))
               TP CST NIL))) 
(DE HAS-TAYLOR* (U) (SMEMBER 'TAYLOR* U)) 
(PUT 'HAS-TAYLOR* 'NUMBER-OF-ARGS 1) 
(PUT 'HAS-TAYLOR* 'DEFINED-ON-LINE '1415) 
(PUT 'HAS-TAYLOR* 'DEFINED-IN-FILE 'TAYLOR/TAYLOR.RED) 
(PUT 'HAS-TAYLOR* 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(PUTC 'HAS-TAYLOR* 'INLINE '(LAMBDA (U) (SMEMBER 'TAYLOR* U))) 
(DE TAYLOR*P (U) (EQCAR U 'TAYLOR*)) 
(PUT 'TAYLOR*P 'NUMBER-OF-ARGS 1) 
(PUT 'TAYLOR*P 'DEFINED-ON-LINE '1423) 
(PUT 'TAYLOR*P 'DEFINED-IN-FILE 'TAYLOR/TAYLOR.RED) 
(PUT 'TAYLOR*P 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(PUTC 'TAYLOR*P 'INLINE '(LAMBDA (U) (EQCAR U 'TAYLOR*))) 
(DE TAYLOR-KERNEL-SF-P (U)
    (AND (NOT (OR (ATOM U) (ATOM (CAR U)))) (NULL (CDR U)) (EQUAL (CDAR U) 1)
         (EQUAL (CDAAR U) 1) (EQCAR (CAAAR U) 'TAYLOR*))) 
(PUT 'TAYLOR-KERNEL-SF-P 'NUMBER-OF-ARGS 1) 
(PUT 'TAYLOR-KERNEL-SF-P 'DEFINED-ON-LINE '1431) 
(PUT 'TAYLOR-KERNEL-SF-P 'DEFINED-IN-FILE 'TAYLOR/TAYLOR.RED) 
(PUT 'TAYLOR-KERNEL-SF-P 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(PUTC 'TAYLOR-KERNEL-SF-P 'INLINE
      '(LAMBDA (U)
         (AND (NOT (OR (ATOM U) (ATOM (CAR U)))) (NULL (CDR U))
              (EQUAL (CDAR U) 1) (EQUAL (CDAAR U) 1)
              (EQCAR (CAAAR U) 'TAYLOR*)))) 
(DE TAYLOR-KERNEL-SQ-P (U) (AND (KERNP U) (EQCAR (CAAAR (CAR U)) 'TAYLOR*))) 
(PUT 'TAYLOR-KERNEL-SQ-P 'NUMBER-OF-ARGS 1) 
(PUT 'TAYLOR-KERNEL-SQ-P 'DEFINED-ON-LINE '1440) 
(PUT 'TAYLOR-KERNEL-SQ-P 'DEFINED-IN-FILE 'TAYLOR/TAYLOR.RED) 
(PUT 'TAYLOR-KERNEL-SQ-P 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(PUTC 'TAYLOR-KERNEL-SQ-P 'INLINE
      '(LAMBDA (U) (AND (KERNP U) (EQCAR (CAAAR (CAR U)) 'TAYLOR*)))) 
(DE HAS-TAYVARS (TAY EX)
    (SMEMBERLP
     (PROG (X FORALL-RESULT FORALL-ENDPTR)
       (SETQ X (CADDR TAY))
      STARTOVER
       (COND ((NULL X) (RETURN NIL)))
       (SETQ FORALL-RESULT ((LAMBDA (X) (APPEND (CAR X) NIL)) (CAR X)))
       (SETQ FORALL-ENDPTR (LASTPAIR FORALL-RESULT))
       (SETQ X (CDR X))
       (COND ((ATOM FORALL-ENDPTR) (GO STARTOVER)))
      LOOPLABEL
       (COND ((NULL X) (RETURN FORALL-RESULT)))
       (RPLACD FORALL-ENDPTR ((LAMBDA (X) (APPEND (CAR X) NIL)) (CAR X)))
       (SETQ FORALL-ENDPTR (LASTPAIR FORALL-ENDPTR))
       (SETQ X (CDR X))
       (GO LOOPLABEL))
     EX)) 
(PUT 'HAS-TAYVARS 'NUMBER-OF-ARGS 2) 
(PUT 'HAS-TAYVARS 'DEFINED-ON-LINE '1447) 
(PUT 'HAS-TAYVARS 'DEFINED-IN-FILE 'TAYLOR/TAYLOR.RED) 
(PUT 'HAS-TAYVARS 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(PUTC 'HAS-TAYVARS 'INLINE
      '(LAMBDA (TAY EX)
         (SMEMBERLP
          (PROG (X FORALL-RESULT FORALL-ENDPTR)
            (SETQ X (CADDR TAY))
           STARTOVER
            (COND ((NULL X) (RETURN NIL)))
            (SETQ FORALL-RESULT ((LAMBDA (X) (APPEND (CAR X) NIL)) (CAR X)))
            (SETQ FORALL-ENDPTR (LASTPAIR FORALL-RESULT))
            (SETQ X (CDR X))
            (COND ((ATOM FORALL-ENDPTR) (GO STARTOVER)))
           LOOPLABEL
            (COND ((NULL X) (RETURN FORALL-RESULT)))
            (RPLACD FORALL-ENDPTR ((LAMBDA (X) (APPEND (CAR X) NIL)) (CAR X)))
            (SETQ FORALL-ENDPTR (LASTPAIR FORALL-ENDPTR))
            (SETQ X (CDR X))
            (GO LOOPLABEL))
          EX))) 
(PUT 'TAYLOR*-ZEROP 'NUMBER-OF-ARGS 1) 
(PUT 'TAYLOR*-ZEROP 'DEFINED-ON-LINE '1454) 
(PUT 'TAYLOR*-ZEROP 'DEFINED-IN-FILE 'TAYLOR/TAYLOR.RED) 
(PUT 'TAYLOR*-ZEROP 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE TAYLOR*-ZEROP (TAY) (TAYCOEFFLIST-ZEROP (CADR TAY))) 
(PUT 'TAYCOEFFLIST-ZEROP 'NUMBER-OF-ARGS 1) 
(PUT 'TAYCOEFFLIST-ZEROP 'DEFINED-ON-LINE '1457) 
(PUT 'TAYCOEFFLIST-ZEROP 'DEFINED-IN-FILE 'TAYLOR/TAYLOR.RED) 
(PUT 'TAYCOEFFLIST-ZEROP 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE TAYCOEFFLIST-ZEROP (TCL)
    (OR (NULL TCL)
        (AND (NULL (CAR (CDR (CAR TCL)))) (TAYCOEFFLIST-ZEROP (CDR TCL))))) 
(DE *TAY2F (U) (LIST (CONS (GETPOWER (FKERN U) 1) 1))) 
(PUT '*TAY2F 'NUMBER-OF-ARGS 1) 
(PUT '*TAY2F 'DEFINED-ON-LINE '1464) 
(PUT '*TAY2F 'DEFINED-IN-FILE 'TAYLOR/TAYLOR.RED) 
(PUT '*TAY2F 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(PUTC '*TAY2F 'INLINE '(LAMBDA (U) (LIST (CONS (GETPOWER (FKERN U) 1) 1)))) 
(DE *TAY2Q (U) (CONS (LIST (CONS (GETPOWER (FKERN U) 1) 1)) 1)) 
(PUT '*TAY2Q 'NUMBER-OF-ARGS 1) 
(PUT '*TAY2Q 'DEFINED-ON-LINE '1467) 
(PUT '*TAY2Q 'DEFINED-IN-FILE 'TAYLOR/TAYLOR.RED) 
(PUT '*TAY2Q 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(PUTC '*TAY2Q 'INLINE
      '(LAMBDA (U) (CONS (LIST (CONS (GETPOWER (FKERN U) 1) 1)) 1))) 
(PUT 'TAYLOR-TRACE 'NUMBER-OF-ARGS 1) 
(PUT 'TAYLOR-TRACE 'DEFINED-ON-LINE '1473) 
(PUT 'TAYLOR-TRACE 'DEFINED-IN-FILE 'TAYLOR/TAYLOR.RED) 
(PUT 'TAYLOR-TRACE 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(PUTC 'TAYLOR-TRACE 'SMACRO
      '(LAMBDA (U)
         (COND
          (*TRTAYLOR
           (PROGN
            (LPRI
             (CONS "Taylor trace:" (COND ((AND U (ATOM U)) (LIST U)) (T U))))
            (TERPRI)))))) 
(PUT 'TAYLOR-TRACE-WITH-LEVEL 'NUMBER-OF-ARGS 2) 
(PUT 'TAYLOR-TRACE-WITH-LEVEL 'DEFINED-ON-LINE '1476) 
(PUT 'TAYLOR-TRACE-WITH-LEVEL 'DEFINED-IN-FILE 'TAYLOR/TAYLOR.RED) 
(PUT 'TAYLOR-TRACE-WITH-LEVEL 'PROCEDURE_TYPE
     '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(PUTC 'TAYLOR-TRACE-WITH-LEVEL 'SMACRO
      '(LAMBDA (LEVEL U)
         (COND
          (*TRTAYLOR
           (PROGN
            (LPRI
             (CONS "Taylor trace (level"
                   (CONS
                    (COMPRESS
                     (CONS '|"| (NCONC (EXPLODE2 LEVEL) '(|)| |:| |"|))))
                    (COND ((AND U (ATOM U)) (LIST U)) (T U)))))
            (TERPRI)))))) 
(PUT 'TAYLOR-TRACE-MPRINT 'NUMBER-OF-ARGS 1) 
(PUT 'TAYLOR-TRACE-MPRINT 'DEFINED-ON-LINE '1481) 
(PUT 'TAYLOR-TRACE-MPRINT 'DEFINED-IN-FILE 'TAYLOR/TAYLOR.RED) 
(PUT 'TAYLOR-TRACE-MPRINT 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(PUTC 'TAYLOR-TRACE-MPRINT 'SMACRO
      '(LAMBDA (U) (COND (*TRTAYLOR (MATHPRINT U))))) 
(ENDMODULE) 