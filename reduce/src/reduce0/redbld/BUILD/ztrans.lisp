(cl:declaim (cl:optimize cl:debug cl:safety))
(cl:declaim (sb-ext:muffle-conditions sb-ext:compiler-note cl:style-warning))
(MODULE (LIST 'ZTRANS)) 
(CREATE-PACKAGE '(ZTRANS ZTRRULES) '(CONTRIB MISC)) 
(FLAG '(ZTRRULES) 'LAP) 
(FLUID '(*PRECISE)) 
(SETQ *PRECISE NIL) 
(PUT 'NEWREDERR 'NUMBER-OF-ARGS 1) 
(PUT 'NEWREDERR 'DEFINED-ON-LINE '45) 
(PUT 'NEWREDERR 'DEFINED-IN-FILE 'ZTRANS/ZTRANS.RED) 
(PUT 'NEWREDERR 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE NEWREDERR (U)
    (PROGN
     (TERPRI* T)
     (PRIN2* "***** ")
     (COND
      ((EQCAR U 'LIST)
       (PROG (XX)
         (SETQ XX (CDR U))
        LAB
         (COND ((NULL XX) (RETURN NIL)))
         ((LAMBDA (XX) (NEWREDERR1 XX)) (CAR XX))
         (SETQ XX (CDR XX))
         (GO LAB)))
      (T (NEWREDERR1 U)))
     (TERPRI* NIL)
     (SETQ ERFG* T)
     (ERROR1))) 
(PUT 'NEWREDERR1 'NUMBER-OF-ARGS 1) 
(PUT 'NEWREDERR1 'DEFINED-ON-LINE '52) 
(PUT 'NEWREDERR1 'DEFINED-IN-FILE 'ZTRANS/ZTRANS.RED) 
(PUT 'NEWREDERR1 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE NEWREDERR1 (U)
    (COND
     ((AND (NOT (ATOM U)) (ATOM (CAR U)) (CDR U) (ATOM (CADR U))
           (NULL (CDDR U)))
      (PROGN (PRIN2* (CAR U)) (PRIN2* " ") (PRIN2* (CADR U))))
     (T (MAPRIN U)))) 
(FLAG '(NEWREDERR) 'OPFN) 
(AEVAL (OPERATOR (LIST 'ZTRANS_AUX))) 
(PROG (*MSG) (AEVAL (OPERATOR (LIST '~F '~G '~SUMM)))) 
(PUT 'ZTRANS 'NUMBER-OF-ARGS 3) 
(FLAG '(ZTRANS) 'OPFN) 
(PUT 'ZTRANS 'DEFINED-ON-LINE '72) 
(PUT 'ZTRANS 'DEFINED-IN-FILE 'ZTRANS/ZTRANS.RED) 
(PUT 'ZTRANS 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL GENERAL) GENERAL)) 
(DE ZTRANS (F N Z)
    (PROG (TMP *FACTOR *EXP)
      (AEVAL (OFF (LIST 'FACTOR)))
      (SETQ TMP (AEVAL (LIST 'ZTRANS_AUX F N Z)))
      (COND
       ((EVALEQUAL (AEVAL (LIST 'PART TMP 0)) (AEVAL 'ZTRANS_AUX))
        (PROGN
         (AEVAL (ON (LIST 'FACTOR)))
         (SETQ TMP (AEVAL (LIST 'ZTRANS_AUX F N Z)))
         (AEVAL (OFF (LIST 'FACTOR)))
         (AEVAL 'NIL))))
      (COND
       ((EVALEQUAL (AEVAL (LIST 'PART TMP 0)) (AEVAL 'ZTRANS_AUX))
        (RETURN
         (AEVAL
          (MK*SQ
           (CONS (LIST (CONS (CONS (CAR (FKERN (LIST 'ZTRANS F N Z))) 1) 1))
                 1)))))
       (T (RETURN (AEVAL TMP)))))) 
(ENDMODULE) 