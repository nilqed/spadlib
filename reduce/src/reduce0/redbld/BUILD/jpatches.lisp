(cl:declaim (cl:optimize cl:debug cl:safety))
(cl:declaim (sb-ext:muffle-conditions sb-ext:compiler-note cl:style-warning))
(MODULE (LIST 'JPATCHES)) 
(FLUID '(*NONCOMP SQRTFLAG)) 
(EXPORTS (LIST '*ADDSQ '*MULTSQ '*INVSQ '*MULTF '*EXPTSQ '*EXPTF)) 
(PUT '*ADDSQ 'NUMBER-OF-ARGS 2) 
(PUT '*ADDSQ 'DEFINED-ON-LINE '87) 
(PUT '*ADDSQ 'DEFINED-IN-FILE 'INT/JPATCHES.RED) 
(PUT '*ADDSQ 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE *ADDSQ (U V)
    (COND ((NULL (CAR U)) V) ((NULL (CAR V)) U)
          ((AND (EQUAL (CDR U) 1) (EQUAL (CDR V) 1))
           (CONS (ADDF (CAR U) (CAR V)) 1))
          (T
           (PROG (DU DV X Y Z)
             (SETQ X (GCDF (SETQ DU (CDR U)) (SETQ DV (CDR V))))
             (SETQ DU (QUOTF-FAIL DU X))
             (SETQ DV (QUOTF-FAIL DV X))
             (SETQ Y (ADDF (*MULTF DV (CAR U)) (*MULTF DU (CAR V))))
             (COND ((NULL Y) (RETURN (CONS NIL 1))))
             (SETQ Z (*MULTF (CDR U) DV))
             (COND ((MINUSF Z) (PROGN (SETQ Y (NEGF Y)) (SETQ Z (NEGF Z)))))
             (SETQ X (GCDF Y Z))
             (RETURN
              (COND ((EQUAL X 1) (CONS Y Z))
                    (T (CONS (QUOTF-FAIL Y X) (QUOTF-FAIL Z X))))))))) 
(PUT '*MULTSQ 'NUMBER-OF-ARGS 2) 
(PUT '*MULTSQ 'DEFINED-ON-LINE '107) 
(PUT '*MULTSQ 'DEFINED-IN-FILE 'INT/JPATCHES.RED) 
(PUT '*MULTSQ 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE *MULTSQ (U V)
    (COND ((OR (NULL (CAR U)) (NULL (CAR V))) (CONS NIL 1))
          ((AND (EQUAL (CDR U) 1) (EQUAL (CDR V) 1))
           (CONS (*MULTF (CAR U) (CAR V)) 1))
          (T
           (PROG (W X Y)
             (SETQ X (GCDF (CAR U) (CDR V)))
             (SETQ Y (GCDF (CAR V) (CDR U)))
             (SETQ W (*MULTF (QUOTF-FAIL (CAR U) X) (QUOTF-FAIL (CAR V) Y)))
             (SETQ X (*MULTF (QUOTF-FAIL (CDR U) Y) (QUOTF-FAIL (CDR V) X)))
             (COND ((MINUSF X) (PROGN (SETQ W (NEGF W)) (SETQ X (NEGF X)))))
             (SETQ Y (GCDF W X))
             (RETURN
              (COND ((EQUAL Y 1) (CONS W X))
                    (T (CONS (QUOTF-FAIL W Y) (QUOTF-FAIL X Y))))))))) 
(PUT '*INVSQ 'NUMBER-OF-ARGS 1) 
(PUT '*INVSQ 'DEFINED-ON-LINE '122) 
(PUT '*INVSQ 'DEFINED-IN-FILE 'INT/JPATCHES.RED) 
(PUT '*INVSQ 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE *INVSQ (A) (COND (SQRTFLAG (SQRT2TOP (INVSQ A))) (T (INVSQ A)))) 
(PUT '*MULTF 'NUMBER-OF-ARGS 2) 
(PUT '*MULTF 'DEFINED-ON-LINE '127) 
(PUT '*MULTF 'DEFINED-IN-FILE 'INT/JPATCHES.RED) 
(PUT '*MULTF 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE *MULTF (U V)
    (PROG (X Y)
      (COND ((OR (NULL U) (NULL V)) (RETURN NIL))
            ((EQUAL U 1) (RETURN (SQUASHSQRT V)))
            ((EQUAL V 1) (RETURN (SQUASHSQRT U)))
            ((OR (ATOM U) (ATOM (CAR U))) (RETURN (MULTD U (SQUASHSQRT V))))
            ((OR (ATOM V) (ATOM (CAR V))) (RETURN (MULTD V (SQUASHSQRT U))))
            (*NONCOMP
             (RETURN
              (COND (*PHYSOP-LOADED (PHYSOP-MULTF U V))
                    (T (POLY-MULTF U V))))))
      (SETQ X (CAAAR U))
      (SETQ Y (CAAAR V))
      (COND ((EQ X Y) (GO C)) ((ORDOP X Y) (GO B)))
      (SETQ X (*MULTF U (CDAR V)))
      (SETQ Y (*MULTF U (CDR V)))
      (RETURN
       (COND ((NULL X) Y)
             ((AND (NOT (OR (ATOM (CDAR V)) (ATOM (CAR (CDAR V)))))
                   (EQ (CAAAR U) (CAAAR (CDAR V))) (NOT (ATOM (CAAAR U)))
                   (MEMQ (CAR (CAAAR U)) '(EXPT SQRT)))
              (ADDF (*MULTF X (LIST (CONS (CAAR V) 1))) Y))
             (T (MAKEUPSF (CAAR V) X Y))))
     B
      (SETQ X (*MULTF (CDAR U) V))
      (SETQ Y (*MULTF (CDR U) V))
      (RETURN
       (COND ((NULL X) Y)
             ((AND (NOT (OR (ATOM (CDAR U)) (ATOM (CAR (CDAR U)))))
                   (EQ (CAAAR (CDAR U)) (CAAAR V)) (NOT (ATOM (CAAAR V)))
                   (MEMQ (CAR (CAAAR V)) '(EXPT SQRT)))
              (ADDF (*MULTF (LIST (CONS (CAAR U) 1)) X) Y))
             (T (MAKEUPSF (CAAR U) X Y))))
     C
      (SETQ Y (ADDF (*MULTF (LIST (CAR U)) (CDR V)) (*MULTF (CDR U) V)))
      (COND
       ((EQCAR X 'SQRT)
        (RETURN
         (ADDF (SQUASHSQRT Y)
               (*MULTFSQRT X (*MULTF (CDAR U) (CDAR V))
                (PLUS (CDAAR U) (CDAAR V))))))
       ((AND (EQCAR X 'EXPT) (PREFIX-RATIONAL-NUMBERP (CADDR X)))
        (RETURN
         (ADDF (SQUASHSQRT Y)
               (*MULTFEXPT X (*MULTF (CDAR U) (CDAR V))
                (PLUS (CDAAR U) (CDAAR V)))))))
      (SETQ X (MKSPM X (PLUS (CDAAR U) (CDAAR V))))
      (RETURN
       (COND ((OR (NULL X) (NULL (SETQ U (*MULTF (CDAR U) (CDAR V))))) Y)
             (T
              (ADDF
               ((LAMBDA (G544)
                  (COND (*PHYSOP-LOADED (PHYSOP-MULTF G544 U))
                        (T (POLY-MULTF G544 U))))
                (LIST (CONS X 1)))
               Y)))))) 
(PUT 'MAKEUPSF 'NUMBER-OF-ARGS 3) 
(PUT 'MAKEUPSF 'DEFINED-ON-LINE '171) 
(PUT 'MAKEUPSF 'DEFINED-IN-FILE 'INT/JPATCHES.RED) 
(PUT 'MAKEUPSF 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL GENERAL) GENERAL)) 
(DE MAKEUPSF (U X Y)
    (COND
     ((OR (ATOM (CAR U)) (EQUAL (CDR U) 1))
      (ADDF
       ((LAMBDA (G544)
          (COND (*PHYSOP-LOADED (PHYSOP-MULTF G544 X))
                (T (POLY-MULTF G544 X))))
        (LIST (CONS U 1)))
       Y))
     ((EQ (CAAR U) 'SQRT) (ADDF (*MULTFSQRT (CAR U) X (CDR U)) Y))
     ((PROGN
       (PROG (V)
         (SETQ V (CAR U))
         (COND ((NEQ (CAR V) 'EXPT) (RETURN NIL)))
         (SETQ V (CADDR V))
         (COND ((ATOM V) (RETURN NIL)))
         (RETURN
          (AND (EQ (CAR V) 'QUOTIENT) (NUMBERP (CADR V))
               (NUMBERP (CADDR V))))))
      (ADDF (*MULTFEXPT (CAR U) X (CDR U)) Y))
     (T
      (ADDF
       ((LAMBDA (G544)
          (COND (*PHYSOP-LOADED (PHYSOP-MULTF G544 X))
                (T (POLY-MULTF G544 X))))
        (LIST (CONS U 1)))
       Y)))) 
(PUT '*MULTFSQRT 'NUMBER-OF-ARGS 3) 
(PUT '*MULTFSQRT 'DEFINED-ON-LINE '189) 
(PUT '*MULTFSQRT 'DEFINED-IN-FILE 'INT/JPATCHES.RED) 
(PUT '*MULTFSQRT 'PROCEDURE_TYPE
     '(ARROW (TIMES GENERAL GENERAL GENERAL) GENERAL)) 
(DE *MULTFSQRT (X U W)
    (PROG (V)
      (SETQ W (DIVIDE W 2))
      (SETQ V (*Q2F (SIMP (CADR X))))
      (SETQ U (*MULTF U (EXPTF V (CAR W))))
      (COND
       ((NEQ (CDR W) 0)
        (SETQ U (*MULTF U (LIST (CONS (GETPOWER (FKERN X) 1) 1))))))
      (RETURN U))) 
(PUT '*MULTFEXPT 'NUMBER-OF-ARGS 3) 
(PUT '*MULTFEXPT 'DEFINED-ON-LINE '200) 
(PUT '*MULTFEXPT 'DEFINED-IN-FILE 'INT/JPATCHES.RED) 
(PUT '*MULTFEXPT 'PROCEDURE_TYPE
     '(ARROW (TIMES GENERAL GENERAL GENERAL) GENERAL)) 
(DE *MULTFEXPT (X U W)
    (PROG (EXPON V)
      (SETQ EXPON (CADDR X))
      (SETQ X (CADR X))
      (SETQ W (TIMES W (CADR EXPON)))
      (SETQ EXPON (CADDR EXPON))
      (SETQ V (GCDN W EXPON))
      (SETQ W (QUOTIENT W V))
      (SETQ V (QUOTIENT EXPON V))
      (COND ((NOT (GREATERP W 0)) (RERROR 'INT 8 "Invalid exponent"))
            ((EQUAL V 1)
             (RETURN
              (*MULTF U
               (EXPTF
                (COND ((NUMBERP X) X) ((ATOM X) (LIST (CONS (CONS X 1) 1)))
                      (T
                       (*Q2F
                        (COND ((EQ (CAR X) '*SQ) (CADR X)) (T (SIMP X))))))
                W)))))
      (SETQ EXPON 0)
      (PROG ()
       WHILELABEL
        (COND ((NOT (NOT (LESSP W V))) (RETURN NIL)))
        (PROGN (SETQ EXPON (PLUS EXPON 1)) (SETQ W (DIFFERENCE W V)))
        (GO WHILELABEL))
      (COND
       ((GREATERP EXPON 0) (SETQ U (*MULTF U (EXPTF (*Q2F (SIMP X)) EXPON)))))
      (COND ((EQUAL W 0) (RETURN U)))
      (SETQ X (LIST 'EXPT X (LIST 'QUOTIENT 1 V)))
      (RETURN
       ((LAMBDA (G564 G565)
          (COND (*PHYSOP-LOADED (PHYSOP-MULTF G564 G565))
                (T (POLY-MULTF G564 G565))))
        (SQUASHSQRT U) (LIST (CONS (GETPOWER (FKERN X) W) 1)))))) 
(PUT 'PREFIX-RATIONAL-NUMBERP 'NUMBER-OF-ARGS 1) 
(PUT 'PREFIX-RATIONAL-NUMBERP 'DEFINED-ON-LINE '225) 
(PUT 'PREFIX-RATIONAL-NUMBERP 'DEFINED-IN-FILE 'INT/JPATCHES.RED) 
(PUT 'PREFIX-RATIONAL-NUMBERP 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE PREFIX-RATIONAL-NUMBERP (U)
    (AND (EQCAR U 'QUOTIENT) (NUMBERP (CADR U)) (NUMBERP (CADDR U)))) 
(PUT 'SQUASHSQRT 'NUMBER-OF-ARGS 1) 
(PUT 'SQUASHSQRT 'DEFINED-ON-LINE '232) 
(PUT 'SQUASHSQRT 'DEFINED-IN-FILE 'INT/JPATCHES.RED) 
(PUT 'SQUASHSQRT 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE SQUASHSQRT (SF)
    (COND ((OR (NOT SQRTFLAG) (ATOM SF) (ATOM (CAAAR SF))) SF)
          ((AND (EQ (CAR (CAAAR SF)) 'SQRT) (GREATERP (CDAAR SF) 1))
           (ADDF (SQUASHSQRT (CDR SF))
                 (*MULTFSQRT (CAAAR SF) (CDAR SF) (CDAAR SF))))
          ((AND (EQ (CAR (CAAAR SF)) 'EXPT)
                (PREFIX-RATIONAL-NUMBERP (CADDR (CAAAR SF)))
                (GEQ (CDAAR SF) (CADDR (CADDR (CAAAR SF)))))
           (ADDF (SQUASHSQRT (CDR SF))
                 (*MULTFEXPT (CAAAR SF) (CDAR SF) (CDAAR SF))))
          (T
           ((LAMBDA (X)
              (COND ((NULL X) (SQUASHSQRT (CDR SF)))
                    (T (CONS (CONS (CAAR SF) X) (SQUASHSQRT (CDR SF))))))
            (SQUASHSQRT (CDAR SF)))))) 
(PUT '*EXPTSQ 'NUMBER-OF-ARGS 2) 
(PUT '*EXPTSQ 'DEFINED-ON-LINE '303) 
(PUT '*EXPTSQ 'DEFINED-IN-FILE 'INT/JPATCHES.RED) 
(PUT '*EXPTSQ 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE *EXPTSQ (A N)
    (COND ((EQUAL N 0) (CONS 1 1)) ((EQUAL N 1) A)
          ((LESSP N 0) (*EXPTSQ (INVSQ A) (MINUS N)))
          (T
           (PROG (Q R)
             (SETQ Q (DIVIDE N 2))
             (SETQ R (CDR Q))
             (SETQ Q (CAR Q))
             (SETQ Q (*EXPTSQ (*MULTSQ A A) Q))
             (COND ((EQUAL R 0) (RETURN Q)) (T (RETURN (*MULTSQ A Q)))))))) 
(PUT '*EXPTF 'NUMBER-OF-ARGS 2) 
(PUT '*EXPTF 'DEFINED-ON-LINE '318) 
(PUT '*EXPTF 'DEFINED-IN-FILE 'INT/JPATCHES.RED) 
(PUT '*EXPTF 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE *EXPTF (A N)
    (COND ((EQUAL N 0) 1) ((EQUAL N 1) A)
          (T
           (PROG (Q R)
             (SETQ Q (DIVIDE N 2))
             (SETQ R (CDR Q))
             (SETQ Q (CAR Q))
             (SETQ Q (*EXPTF (*MULTF A A) Q))
             (COND ((EQUAL R 0) (RETURN Q)) (T (RETURN (*MULTF A Q)))))))) 
(ENDMODULE) 