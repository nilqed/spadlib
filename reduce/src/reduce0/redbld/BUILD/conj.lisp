(cl:declaim (cl:optimize cl:debug cl:safety))
(cl:declaim (sb-ext:muffle-conditions sb-ext:compiler-note cl:style-warning))
(MODULE (LIST 'CONJ)) 
(FLUID '(*ALGINT *RATIONALIZE *STRUCTURE DMODE* KORD* POWLIS*)) 
(PUT 'RATIONALIZE 'SIMPFG '((T (RMSUBS)) (NIL (RMSUBS)))) 
(DE SUBTRF (U V) (ADDF U (NEGF V))) 
(PUT 'SUBTRF 'NUMBER-OF-ARGS 2) 
(PUT 'SUBTRF 'DEFINED-ON-LINE '39) 
(PUT 'SUBTRF 'DEFINED-IN-FILE 'POLY/CONJ.RED) 
(PUT 'SUBTRF 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(PUTC 'SUBTRF 'INLINE '(LAMBDA (U V) (ADDF U (NEGF V)))) 
(PUT 'RATIONALIZESQ 'NUMBER-OF-ARGS 1) 
(PUT 'RATIONALIZESQ 'DEFINED-ON-LINE '43) 
(PUT 'RATIONALIZESQ 'DEFINED-IN-FILE 'POLY/CONJ.RED) 
(PUT 'RATIONALIZESQ 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE RATIONALIZESQ (U)
    (PROG (*STRUCTURE *SUB2 V X)
      (COND ((SETQ X (GET DMODE* 'RATIONALIZEFN)) (SETQ U (APPLY1 X U))))
      (SETQ POWLIS* (CONS '(I 2 (NIL . T) -1 NIL) POWLIS*))
      (SETQ V (SUBS2Q U))
      (SETQ POWLIS* (CDR POWLIS*))
      (RETURN
       (COND ((OR (ATOM (CDR V)) (ATOM (CAR (CDR V)))) V)
             ((NEQ (SETQ X (RATIONALIZEF (CDR V))) 1)
              (PROGN
               (SETQ V
                       (CONS
                        (COND (*PHYSOP-LOADED (PHYSOP-MULTF (CAR V) X))
                              (T (POLY-MULTF (CAR V) X)))
                        (COND (*PHYSOP-LOADED (PHYSOP-MULTF (CDR V) X))
                              (T (POLY-MULTF (CDR V) X)))))
               (COND
                ((AND (NULL *ALGINT) (NULL *RATIONALIZE)) (SETQ V (GCDCHK V))))
               (SUBS2Q V)))
             (T U))))) 
(PUT 'LOWERTOWERP 'NUMBER-OF-ARGS 2) 
(PUT 'LOWERTOWERP 'DEFINED-ON-LINE '81) 
(PUT 'LOWERTOWERP 'DEFINED-IN-FILE 'POLY/CONJ.RED) 
(PUT 'LOWERTOWERP 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE LOWERTOWERP (U V)
    (COND ((NULL U) NIL)
          ((OR (ATOM (CAR U)) (EQUAL (CDAR U) V)) (LOWERTOWERP (CDR U) V))
          ((AND (EQ (CAAR U) 'EXPT) (EQCAR (CADDAR U) 'QUOTIENT)
                (EQUAL (CADR (CADDAR U)) (CADR (CADR V)))
                (FIXP (CADDR (CADDAR U))) (FIXP (CADDR (CADR V)))
                (EQUAL (CDR (DIVIDE (CADDR (CADDAR U)) (CADDR (CADR V)))) 0)
                (LOWERTOWERP1 (CADAR U) (CAR V)))
           (CAR U))
          (T (LOWERTOWERP (CDR U) V)))) 
(PUT 'LOWERTOWERP1 'NUMBER-OF-ARGS 2) 
(PUT 'LOWERTOWERP1 'DEFINED-ON-LINE '94) 
(PUT 'LOWERTOWERP1 'DEFINED-IN-FILE 'POLY/CONJ.RED) 
(PUT 'LOWERTOWERP1 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE LOWERTOWERP1 (U V)
    ((LAMBDA (X Y)
       (COND ((GREATERP X Y) T)
             ((AND (NUMBERP U) (NUMBERP V)) (NOT (EQUAL (GCDN U V) 1)))
             (T (EQUAL X Y))))
     (EXPRSIZE U) (EXPRSIZE V))) 
(PUT 'EXPRSIZE 'NUMBER-OF-ARGS 1) 
(PUT 'EXPRSIZE 'DEFINED-ON-LINE '104) 
(PUT 'EXPRSIZE 'DEFINED-IN-FILE 'POLY/CONJ.RED) 
(PUT 'EXPRSIZE 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE EXPRSIZE (U)
    (PROG (N)
      (SETQ N 0)
     A
      (COND ((NULL U) (RETURN N)) ((ATOM U) (RETURN (PLUS N 1))))
      (SETQ N (PLUS (EXPRSIZE (CAR U)) N))
      (SETQ U (CDR U))
      (GO A))) 
(PUT 'RATIONALIZEF 'NUMBER-OF-ARGS 1) 
(PUT 'RATIONALIZEF 'DEFINED-ON-LINE '113) 
(PUT 'RATIONALIZEF 'DEFINED-IN-FILE 'POLY/CONJ.RED) 
(PUT 'RATIONALIZEF 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE RATIONALIZEF (U)
    (PROG (X Y Z)
      (SETQ X (SETQ Z (KERNELS U)))
     A
      (COND ((NULL X) (RETURN 1)))
      (SETQ Y (CAR X))
      (COND
       ((AND (EQCAR Y 'EXPT) (EQCAR (CADDR Y) 'QUOTIENT)
             (LOWERTOWERP Z (CDR Y)))
        NIL)
       ((OR (EQ Y 'I) (AND (EQCAR Y 'EXPT) (EQUAL (CADDR Y) '(QUOTIENT 1 2)))
            (EQCAR Y 'SQRT))
        (RETURN (CONJQUADRATIC (MKMAIN U Y) Y)))
       ((AND (EQCAR Y 'EXPT) (EQUAL (CADDR Y) '(QUOTIENT 1 3)))
        (RETURN (CONJCUBIC (MKMAIN U Y) Y)))
       ((AND (EQCAR Y 'EXPT) (EQUAL (CADDR Y) '(QUOTIENT 1 4)))
        (RETURN (CONJQUARTIC (MKMAIN U Y) Y))))
      (SETQ X (CDR X))
      (GO A))) 
(PUT 'CONJQUADRATIC 'NUMBER-OF-ARGS 2) 
(PUT 'CONJQUADRATIC 'DEFINED-ON-LINE '137) 
(PUT 'CONJQUADRATIC 'DEFINED-IN-FILE 'POLY/CONJ.RED) 
(PUT 'CONJQUADRATIC 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE CONJQUADRATIC (U V)
    (COND
     ((EQUAL (CDAAR U) 1)
      (ADDF
       ((LAMBDA (G642 G643)
          (COND (*PHYSOP-LOADED (PHYSOP-MULTF G642 G643))
                (T (POLY-MULTF G642 G643))))
        (LIST (CONS (CONS V 1) 1)) (REORDER (CDAR U)))
       (NEGF (REORDER (CDR U)))))
     (T (ERRACH (LIST (CDAAR U) "invalid power in rationalizef"))))) 
(PUT 'CONJCUBIC 'NUMBER-OF-ARGS 2) 
(PUT 'CONJCUBIC 'DEFINED-ON-LINE '142) 
(PUT 'CONJCUBIC 'DEFINED-IN-FILE 'POLY/CONJ.RED) 
(PUT 'CONJCUBIC 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE CONJCUBIC (U V)
    (PROG (C1 C2 C3 W)
      (COND
       ((EQUAL (CDAAR U) 2)
        (PROGN
         (SETQ C1 (REORDER (CDAR U)))
         (COND
          ((EQUAL (DEGR (CDR U) V) 1)
           (PROGN
            (SETQ C2 (REORDER (CDAR (CDR U))))
            (SETQ C3 (REORDER (CDR (CDR U))))))
          (T (SETQ C3 (REORDER (CDR U)))))))
       (T (PROGN (SETQ C2 (REORDER (CDAR U))) (SETQ C3 (REORDER (CDR U))))))
      (SETQ W (CONJ2 V))
      (COND ((EQ W 'FAILED) (RETURN U)))
      (SETQ V (LIST (CONS (CONS V 1) 1)))
      (RETURN
       (ADDF
        ((LAMBDA (G644 G645)
           (COND (*PHYSOP-LOADED (PHYSOP-MULTF G644 G645))
                 (T (POLY-MULTF G644 G645))))
         (EXPTF V 2)
         (ADDF (EXPTF C2 2)
               (NEGF
                (COND (*PHYSOP-LOADED (PHYSOP-MULTF C1 C3))
                      (T (POLY-MULTF C1 C3))))))
        (ADDF
         ((LAMBDA (G649)
            (COND (*PHYSOP-LOADED (PHYSOP-MULTF V G649))
                  (T (POLY-MULTF V G649))))
          (ADDF
           ((LAMBDA (G647)
              (COND (*PHYSOP-LOADED (PHYSOP-MULTF W G647))
                    (T (POLY-MULTF W G647))))
            (EXPTF C1 2))
           (NEGF
            (COND (*PHYSOP-LOADED (PHYSOP-MULTF C2 C3))
                  (T (POLY-MULTF C2 C3))))))
         (ADDF (EXPTF C3 2)
               (NEGF
                ((LAMBDA (G651)
                   (COND (*PHYSOP-LOADED (PHYSOP-MULTF W G651))
                         (T (POLY-MULTF W G651))))
                 (COND (*PHYSOP-LOADED (PHYSOP-MULTF C1 C2))
                       (T (POLY-MULTF C1 C2))))))))))) 
(PUT 'CONJ2 'NUMBER-OF-ARGS 1) 
(PUT 'CONJ2 'DEFINED-ON-LINE '160) 
(PUT 'CONJ2 'DEFINED-IN-FILE 'POLY/CONJ.RED) 
(PUT 'CONJ2 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE CONJ2 (U)
    ((LAMBDA (V)
       (COND ((NOT (OR (ATOM (CDR V)) (ATOM (CAR (CDR V))))) 'FAILED)
             ((NEQ (CDR V) 1) (MULTD (|:RECIP| (CDR V)) (CAR V))) (T (CAR V))))
     (SIMP (CADR U)))) 
(PUT 'CONJQUARTIC 'NUMBER-OF-ARGS 2) 
(PUT 'CONJQUARTIC 'DEFINED-ON-LINE '167) 
(PUT 'CONJQUARTIC 'DEFINED-IN-FILE 'POLY/CONJ.RED) 
(PUT 'CONJQUARTIC 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE CONJQUARTIC (U V)
    (PROG (C1 C3 C4 Q1 Q2 Q3 Q4 W)
      (COND
       ((EQUAL (CDAAR U) 3)
        (PROGN
         (SETQ C1 (REORDER (CDAR U)))
         (COND
          ((EQUAL (DEGR (CDR U) V) 1)
           (PROGN
            (SETQ C3 (REORDER (CDAR (CDR U))))
            (SETQ C4 (REORDER (CDR (CDR U))))))
          (T (SETQ C4 (REORDER (CDR U)))))))
       ((EQUAL (CDAAR U) 1)
        (PROGN (SETQ C3 (REORDER (CDAR U))) (SETQ C4 (REORDER (CDR U))))))
      (SETQ W (CONJ2 V))
      (COND ((EQ W 'FAILED) (RETURN U)))
      (SETQ V (LIST (CONS (CONS V 1) 1)))
      (SETQ Q1
              (ADDF
               (ADDF (EXPTF C3 3)
                     ((LAMBDA (G653)
                        (COND (*PHYSOP-LOADED (PHYSOP-MULTF C1 G653))
                              (T (POLY-MULTF C1 G653))))
                      (EXPTF C4 2)))
               (NEGF
                ((LAMBDA (G657)
                   (COND (*PHYSOP-LOADED (PHYSOP-MULTF W G657))
                         (T (POLY-MULTF W G657))))
                 ((LAMBDA (G655)
                    (COND (*PHYSOP-LOADED (PHYSOP-MULTF C3 G655))
                          (T (POLY-MULTF C3 G655))))
                  (EXPTF C1 2))))))
      (SETQ Q2
              (NEGF
               (ADDF
                ((LAMBDA (G661)
                   (COND (*PHYSOP-LOADED (PHYSOP-MULTF W G661))
                         (T (POLY-MULTF W G661))))
                 ((LAMBDA (G659)
                    (COND (*PHYSOP-LOADED (PHYSOP-MULTF C4 G659))
                          (T (POLY-MULTF C4 G659))))
                  (EXPTF C1 2)))
                ((LAMBDA (G662)
                   (COND (*PHYSOP-LOADED (PHYSOP-MULTF G662 C4))
                         (T (POLY-MULTF G662 C4))))
                 (EXPTF C3 2)))))
      (SETQ Q3
              (ADDF
               ((LAMBDA (G665)
                  (COND (*PHYSOP-LOADED (PHYSOP-MULTF C3 G665))
                        (T (POLY-MULTF C3 G665))))
                (EXPTF C4 2))
               (ADDF
                ((LAMBDA (G666 G667)
                   (COND (*PHYSOP-LOADED (PHYSOP-MULTF G666 G667))
                         (T (POLY-MULTF G666 G667))))
                 (EXPTF W 2) (EXPTF C1 3))
                (NEGF
                 ((LAMBDA (G671)
                    (COND (*PHYSOP-LOADED (PHYSOP-MULTF W G671))
                          (T (POLY-MULTF W G671))))
                  ((LAMBDA (G669)
                     (COND (*PHYSOP-LOADED (PHYSOP-MULTF C1 G669))
                           (T (POLY-MULTF C1 G669))))
                   (EXPTF C3 2)))))))
      (SETQ Q4
              (ADDF
               ((LAMBDA (G675)
                  (COND (*PHYSOP-LOADED (PHYSOP-MULTF W G675))
                        (T (POLY-MULTF W G675))))
                ((LAMBDA (G672 G673)
                   (COND (*PHYSOP-LOADED (PHYSOP-MULTF G672 G673))
                         (T (POLY-MULTF G672 G673))))
                 (MULTD 2 C1)
                 (COND (*PHYSOP-LOADED (PHYSOP-MULTF C3 C4))
                       (T (POLY-MULTF C3 C4)))))
               (NEGF (EXPTF C4 3))))
      (RETURN
       (ADDF
        ((LAMBDA (G676)
           (COND (*PHYSOP-LOADED (PHYSOP-MULTF G676 Q1))
                 (T (POLY-MULTF G676 Q1))))
         (EXPTF V 3))
        (ADDF
         ((LAMBDA (G678)
            (COND (*PHYSOP-LOADED (PHYSOP-MULTF G678 Q2))
                  (T (POLY-MULTF G678 Q2))))
          (EXPTF V 2))
         (ADDF
          (COND (*PHYSOP-LOADED (PHYSOP-MULTF V Q3)) (T (POLY-MULTF V Q3)))
          Q4)))))) 
(PUT 'MKMAIN 'NUMBER-OF-ARGS 2) 
(PUT 'MKMAIN 'DEFINED-ON-LINE '193) 
(PUT 'MKMAIN 'DEFINED-IN-FILE 'POLY/CONJ.RED) 
(PUT 'MKMAIN 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE MKMAIN (U VAR) (PROG (KORD*) (SETQ KORD* (LIST VAR)) (RETURN (REORDER U)))) 
(ENDMODULE) 