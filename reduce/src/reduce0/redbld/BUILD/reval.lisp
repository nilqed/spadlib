(cl:declaim (cl:optimize cl:debug cl:safety))
(cl:declaim (sb-ext:muffle-conditions sb-ext:compiler-note cl:style-warning))
(MODULE (LIST 'REVAL)) 
(FLUID
 '(*COMBINEEXPT *EXP *INTSTR *LISTARGS *MCD *RESIMP ALGLIST* DMODE* SUBFG*
   VARSTACK* FRLIS*)) 
(SWITCH (LIST 'LISTARGS)) 
(GLOBAL '(*RESUBS *SQVAR* *VAL)) 
(DE REVAL (U) (REVAL1 U T)) 
(PUT 'REVAL 'NUMBER-OF-ARGS 1) 
(PUT 'REVAL 'DEFINED-ON-LINE '39) 
(PUT 'REVAL 'DEFINED-IN-FILE 'ALG/REVAL.RED) 
(PUT 'REVAL 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(PUTC 'REVAL 'INLINE '(LAMBDA (U) (REVAL1 U T))) 
(DE AEVAL (U) (REVAL1 U NIL)) 
(PUT 'AEVAL 'NUMBER-OF-ARGS 1) 
(PUT 'AEVAL 'DEFINED-ON-LINE '42) 
(PUT 'AEVAL 'DEFINED-IN-FILE 'ALG/REVAL.RED) 
(PUT 'AEVAL 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(PUTC 'AEVAL 'INLINE '(LAMBDA (U) (REVAL1 U NIL))) 
(PUT 'AEVAL* 'NUMBER-OF-ARGS 1) 
(PUT 'AEVAL* 'DEFINED-ON-LINE '45) 
(PUT 'AEVAL* 'DEFINED-IN-FILE 'ALG/REVAL.RED) 
(PUT 'AEVAL* 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE AEVAL* (U) (PROG () (SETQ ALGLIST* (CONS NIL NIL)) (RETURN (REVAL1 U NIL)))) 
(REMPROP 'REVALP 'SIMPFG) 
(SWITCH (LIST (LIST 'EQUAL 'REVALP 'ON))) 
(PUT 'REVALP 'SIMPFG '((T (RMSUBS)))) 
(PUT 'REVAL1 'NUMBER-OF-ARGS 2) 
(PUT 'REVAL1 'DEFINED-ON-LINE '59) 
(PUT 'REVAL1 'DEFINED-IN-FILE 'ALG/REVAL.RED) 
(PUT 'REVAL1 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE REVAL1 (U V)
    (COND ((NULL *REVALP) U)
          (T
           ((LAMBDA (VARSTACK*)
              (PROG (X Y)
                (COND ((NULL U) (RETURN NIL)) ((STRINGP U) (RETURN U))
                      ((FIXP U)
                       (RETURN
                        (COND ((FLAGP DMODE* 'CONVERT) (REVAL2 U V)) (T U))))
                      ((ATOM U)
                       (COND ((NULL SUBFG*) (RETURN U))
                             ((AND (IDP U) (SETQ X (GET U 'AVALUE)))
                              (COND ((MEMQ U VARSTACK*) (RECURSIVEERROR U))
                                    (T
                                     (PROGN
                                      (SETQ VARSTACK* (CONS U VARSTACK*))
                                      (RETURN
                                       (COND
                                        ((SETQ Y (GET (CAR X) 'EVFN))
                                         (APPLY2 Y U V))
                                        (T (REVAL1 (CADR X) V))))))))
                             (T NIL)))
                      ((NOT (IDP (CAR U)))
                       (COND
                        ((SETQ X (GET (CAAR U) 'STRUCTFN))
                         (RETURN (APPLY X (LIST U))))
                        (T (ERRPRI2 U T))))
                      ((EQ (CAR U) '*SQ)
                       (RETURN
                        (COND
                         ((AND (CADDR U) (NULL *RESIMP))
                          (COND ((NULL V) U) (T (PREPSQXX (CADR U)))))
                         (T (REVAL2 U V)))))
                      ((FLAGP (CAR U) 'REMEMBER) (RETURN (RMMBREVAL U V)))
                      ((FLAGP (CAR U) 'OPFN) (RETURN (REVAL1 (OPFNEVAL U) V)))
                      ((SETQ X (GET (CAR U) 'PSOPFN))
                       (PROGN
                        (SETQ U (APPLY1 X (CDR U)))
                        (COND
                         ((SETQ X (GET X 'CLEANUPFN)) (SETQ U (APPLY2 X U V))))
                        (RETURN U)))
                      ((ARRAYP (CAR U)) (RETURN (REVAL1 (GETELV U) V))))
                (RETURN
                 (COND
                  ((SETQ X (GETRTYPE U))
                   (COND ((SETQ Y (GET X 'EVFN)) (APPLY2 Y U V))
                         (T
                          (RERROR 'ALG 101
                                  (LIST "Missing evaluation for type" X)))))
                  ((AND (NOT (ATOM U)) (NOT (ATOM (CDR U)))
                        (SETQ Y (GETRTYPE (CADR U)))
                        (NULL (AND (EQ Y 'LIST) (CDDR U)))
                        (SETQ X (GET Y 'AGGREGATEFN))
                        (OR (NOT (EQ X 'MATRIXMAP)) (FLAGP (CAR U) 'MATMAPFN))
                        (NOT (FLAGP (CAR U) 'BOOLEAN)) (NOT *LISTARGS)
                        (NOT (FLAGP (CAR U) 'LISTARGP)))
                   (APPLY2 X U V))
                  (T (REVAL2 U V))))))
            VARSTACK*)))) 
(PUT 'SIMPHOLD 'NUMBER-OF-ARGS 1) 
(PUT 'SIMPHOLD 'DEFINED-ON-LINE '117) 
(PUT 'SIMPHOLD 'DEFINED-IN-FILE 'ALG/REVAL.RED) 
(PUT 'SIMPHOLD 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE SIMPHOLD (U)
    (COND ((NEQ (LENGTH U) 1) (REDERR "hold needs exactly one argument"))
          (T
           (CONS
            (CONS
             (CONS
              (GETPOWER
               (FKERN
                (COND ((EQCAR (CAR U) '*HOLD) (CAR U))
                      (T (LIST '*HOLD (CAR U)))))
               1)
              1)
             NIL)
            1)))) 
(PUT '*HOLD 'SIMPFN 'SIMPHOLD) 
(FLAGOP (LIST 'LISTARGP)) 
(PUT 'RMMBREVAL 'NUMBER-OF-ARGS 2) 
(PUT 'RMMBREVAL 'DEFINED-ON-LINE '128) 
(PUT 'RMMBREVAL 'DEFINED-IN-FILE 'ALG/REVAL.RED) 
(PUT 'RMMBREVAL 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE RMMBREVAL (U V)
    (PROG (FN X W U1 U2)
      (SETQ FN (CAR U))
      (SETQ U1 (LIST FN))
      (SETQ U2 (LIST FN))
      (PROG (Y)
        (SETQ Y (CDR U))
       LAB
        (COND ((NULL Y) (RETURN NIL)))
        ((LAMBDA (Y)
           (PROGN
            (SETQ W (REVAL1 Y NIL))
            (SETQ U2 (ACONC U2 W))
            (COND ((EQCAR W '*SQ) (SETQ W (*Q2A1 (CADR W) *NOSQ))))
            (SETQ U1 (ACONC U1 W))))
         (CAR Y))
        (SETQ Y (CDR Y))
        (GO LAB))
      (COND ((SETQ X (ASSOC U1 (SETQ W (GET FN 'KVALUE)))) (RETURN (CADR X))))
      (COND ((FLAGP FN 'OPFN) (SETQ X (REVAL1 (OPFNEVAL U2) V)))
            ((GET FN 'SIMPFN) (SETQ X (*Q2A1 (SIMP* U2) V)))
            (T
             (PROGN
              (REMFLAG (LIST FN) 'REMEMBER)
              (SETQ X (REVAL1 U2 V))
              (FLAG (LIST FN) 'REMEMBER)
              NIL)))
      (COND
       ((AND (NOT (SMEMBER U1 X)) (NOT (SMEMBER U2 X)))
        (PUT-KVALUE FN (GET FN 'KVALUE)
                    (CONS (CAR U)
                          (PROG (UUU FORALL-RESULT FORALL-ENDPTR)
                            (SETQ UUU (CDR U))
                            (COND ((NULL UUU) (RETURN NIL)))
                            (SETQ FORALL-RESULT
                                    (SETQ FORALL-ENDPTR
                                            (CONS
                                             ((LAMBDA (UUU) (REVAL1 UUU T))
                                              (CAR UUU))
                                             NIL)))
                           LOOPLABEL
                            (SETQ UUU (CDR UUU))
                            (COND ((NULL UUU) (RETURN FORALL-RESULT)))
                            (RPLACD FORALL-ENDPTR
                                    (CONS
                                     ((LAMBDA (UUU) (REVAL1 UUU T)) (CAR UUU))
                                     NIL))
                            (SETQ FORALL-ENDPTR (CDR FORALL-ENDPTR))
                            (GO LOOPLABEL)))
                    X)))
      (RETURN X))) 
(PUT 'REMEMBER 'NUMBER-OF-ARGS 1) 
(PUT 'REMEMBER 'DEFINED-ON-LINE '152) 
(PUT 'REMEMBER 'DEFINED-IN-FILE 'ALG/REVAL.RED) 
(PUT 'REMEMBER 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE REMEMBER (U)
    (PROG (FN)
      (SETQ FN U)
     LAB
      (COND ((NULL FN) (RETURN NIL)))
      ((LAMBDA (FN)
         (PROGN
          (COND
           ((AND (NOT (FLAGP FN 'OPFN)) (NULL (GET FN 'SIMPFN)))
            (PROGN (REDMSG FN "operator") (MKOP FN))))
          (COND
           ((OR (FLAGP FN 'NOVAL) (FLAGP FN 'LISTARGP))
            (TYPERR FN "remember operator")))
          (FLAG (LIST FN) 'REMEMBER)
          NIL))
       (CAR FN))
      (SETQ FN (CDR FN))
      (GO LAB))) 
(PUT 'REMEMBER 'STAT 'RLIS) 
(PUT 'RECURSIVEERROR 'NUMBER-OF-ARGS 1) 
(PUT 'RECURSIVEERROR 'DEFINED-ON-LINE '164) 
(PUT 'RECURSIVEERROR 'DEFINED-IN-FILE 'ALG/REVAL.RED) 
(PUT 'RECURSIVEERROR 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE RECURSIVEERROR (U)
    (MSGPRI NIL U "improperly defined in terms of itself" NIL T)) 
(PUT 'QUOTE 'PSOPFN 'CAR) 
(PUT 'OPFNEVAL1 'NUMBER-OF-ARGS 2) 
(PUT 'OPFNEVAL1 'DEFINED-ON-LINE '169) 
(PUT 'OPFNEVAL1 'DEFINED-IN-FILE 'ALG/REVAL.RED) 
(PUT 'OPFNEVAL1 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE OPFNEVAL1 (FNAME INTERM)
    (PROG (RESUL X)
      (COND
       ((FLAGP FNAME 'TRACEALG)
        (PROGN
         (COND ((NEQ (POSN) 0) (TERPRI)))
         (PRINTF_INTERNAL "+++ Calling %p (%w:%w)%n"
                          (LIST FNAME (GET FNAME 'DEFINED-IN-FILE)
                                (GET FNAME 'DEFINED-ON-LINE)))
         (SETQ X 0)
         (PROG (ARG)
           (SETQ ARG INTERM)
          LAB
           (COND ((NULL ARG) (RETURN NIL)))
           ((LAMBDA (ARG)
              (PRINTF_INTERNAL "Arg%w = %@p%n"
                               (LIST (SETQ X (PLUS X 1))
                                     (COND ((EQCAR ARG 'QUOTE) (CADR ARG))
                                           (T ARG)))))
            (CAR ARG))
           (SETQ ARG (CDR ARG))
           (GO LAB)))))
      (SETQ RESUL (ERRORSET* (CONS FNAME INTERM) *BACKTRACE))
      (COND
       ((ERRORP RESUL)
        (PROGN
         (COND
          (*BACKTRACE
           (PROGN
            (COND ((NEQ (POSN) 0) (TERPRI)))
            (PRINTF_INTERNAL "+++ Error in call to %p (%w:%w)%n"
                             (LIST FNAME (GET FNAME 'DEFINED-IN-FILE)
                                   (GET FNAME 'DEFINED-ON-LINE)))
            (SETQ X 0)
            (PROG (ARG)
              (SETQ ARG INTERM)
             LAB
              (COND ((NULL ARG) (RETURN NIL)))
              ((LAMBDA (ARG)
                 (PRINTF_INTERNAL "Arg%w = %@p%n"
                                  (LIST (SETQ X (PLUS X 1))
                                        (COND ((EQCAR ARG 'QUOTE) (CADR ARG))
                                              (T ARG)))))
               (CAR ARG))
              (SETQ ARG (CDR ARG))
              (GO LAB)))))
         (ERROR1)))
       (T
        (PROGN
         (SETQ RESUL (CAR RESUL))
         (COND
          ((FLAGP FNAME 'TRACEALG)
           (PROGN
            (COND ((NEQ (POSN) 0) (TERPRI)))
            (PRINTF_INTERNAL "%p => %p%n" (LIST FNAME RESUL))
            (PRINTF_INTERNAL "%p => %@p%n" (LIST FNAME RESUL)))))
         (RETURN RESUL)))))) 
(PUT 'TRALG 'DEFINED-ON-LINE '202) 
(PUT 'TRALG 'DEFINED-IN-FILE 'ALG/REVAL.RED) 
(PUT 'TRALG 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DM TRALG (X) (LIST 'FLAG (LIST 'QUOTE (CDR X)) ''TRACEALG)) 
(PUT 'UNTRALG 'DEFINED-ON-LINE '205) 
(PUT 'UNTRALG 'DEFINED-IN-FILE 'ALG/REVAL.RED) 
(PUT 'UNTRALG 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DM UNTRALG (X) (LIST 'REMFLAG (LIST 'QUOTE (CDR X)) ''TRACEALG)) 
(FLAG '(TRALG UNTRALG) 'NOFORM) 
(DEFLIST '((TRALG RLIS) (TRALGST RLIS)) 'STAT) 
(PUT 'OPFNEVAL 'NUMBER-OF-ARGS 1) 
(PUT 'OPFNEVAL 'DEFINED-ON-LINE '212) 
(PUT 'OPFNEVAL 'DEFINED-IN-FILE 'ALG/REVAL.RED) 
(PUT 'OPFNEVAL 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE OPFNEVAL (U)
    (COND
     ((FLAGP (CAR U) 'REMEMBER)
      (PROG (INTERM RESUL X)
        (SETQ INTERM
                (PROG (J FORALL-RESULT FORALL-ENDPTR)
                  (SETQ J
                          (COND ((FLAGP (CAR U) 'NOVAL) (CDR U))
                                (T (REVLIS (CDR U)))))
                  (COND ((NULL J) (RETURN NIL)))
                  (SETQ FORALL-RESULT
                          (SETQ FORALL-ENDPTR
                                  (CONS
                                   ((LAMBDA (J)
                                      (COND ((FIXP J) J) (T (MKQUOTE J))))
                                    (CAR J))
                                   NIL)))
                 LOOPLABEL
                  (SETQ J (CDR J))
                  (COND ((NULL J) (RETURN FORALL-RESULT)))
                  (RPLACD FORALL-ENDPTR
                          (CONS
                           ((LAMBDA (J) (COND ((FIXP J) J) (T (MKQUOTE J))))
                            (CAR J))
                           NIL))
                  (SETQ FORALL-ENDPTR (CDR FORALL-ENDPTR))
                  (GO LOOPLABEL)))
        (COND
         ((SETQ X (ASSOC (CONS (CAR U) INTERM) (GET (CAR U) 'KVALUE)))
          (RETURN (CADR X))))
        (SETQ RESUL (OPFNEVAL1 (CAR U) INTERM))
        (PUT-KVALUE (CAR U) (GET (CAR U) 'KVALUE) (CONS (CAR U) INTERM) RESUL)
        (RETURN RESUL)))
     (T
      (OPFNEVAL1 (CAR U)
                 (PROG (J FORALL-RESULT FORALL-ENDPTR)
                   (SETQ J
                           (COND ((FLAGP (CAR U) 'NOVAL) (CDR U))
                                 (T (REVLIS (CDR U)))))
                   (COND ((NULL J) (RETURN NIL)))
                   (SETQ FORALL-RESULT
                           (SETQ FORALL-ENDPTR
                                   (CONS ((LAMBDA (J) (MKQUOTE J)) (CAR J))
                                         NIL)))
                  LOOPLABEL
                   (SETQ J (CDR J))
                   (COND ((NULL J) (RETURN FORALL-RESULT)))
                   (RPLACD FORALL-ENDPTR
                           (CONS ((LAMBDA (J) (MKQUOTE J)) (CAR J)) NIL))
                   (SETQ FORALL-ENDPTR (CDR FORALL-ENDPTR))
                   (GO LOOPLABEL)))))) 
(FLAG '(REVAL) 'OPFN) 
(PUT 'REVAL2 'NUMBER-OF-ARGS 2) 
(PUT 'REVAL2 'DEFINED-ON-LINE '229) 
(PUT 'REVAL2 'DEFINED-IN-FILE 'ALG/REVAL.RED) 
(PUT 'REVAL2 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE REVAL2 (U V)
    (COND ((OR V (NULL *COMBINEEXPT) DMODE*) (*Q2A1 (SIMP* U) V))
          (T (*Q2A1 ((LAMBDA (*MCD) (SIMP* U)) NIL) V)))) 
(PUT 'GETRTYPE 'NUMBER-OF-ARGS 1) 
(PUT 'GETRTYPE 'DEFINED-ON-LINE '236) 
(PUT 'GETRTYPE 'DEFINED-IN-FILE 'ALG/REVAL.RED) 
(PUT 'GETRTYPE 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE GETRTYPE (U)
    (PROG (X Y)
      (RETURN
       (COND ((NULL U) NIL)
             ((ATOM U)
              (COND ((NOT (IDP U)) (AND (NOT (NUMBERP U)) (GETRTYPE1 U)))
                    ((FLAGP U 'SHARE)
                     (COND ((EQ (SETQ X (EVAL U)) U) NIL) (T (GETRTYPE X))))
                    ((OR
                      (AND (SETQ X (GET U 'AVALUE))
                           (NOT (MEMQ (CAR X) '(SCALAR GENERIC))))
                      (AND (SETQ X (GET U 'RTYPE)) (SETQ X (LIST X))))
                     (COND ((SETQ Y (GET (CAR X) 'RTYPEFN)) (APPLY1 Y NIL))
                           (T (CAR X))))
                    (T NIL)))
             ((NOT (IDP (CAR U))) NIL)
             ((AND (EQ (GETRTYPE (CAR U)) 'ARRAY)
                   (NOT (SMEMQLP FRLIS* (CDR U))))
              (GETRTYPE (GETELV U)))
             ((AND (SETQ X (GET (CAR U) 'AVALUE))
                   (SETQ X (GET (CAR X) 'RTYPEFN)))
              (APPLY1 X (CDR U)))
             ((EQ (CAR U) 'SUB) 'YETUNKNOWNTYPE) (T (GETRTYPE2 U)))))) 
(PUT 'GETRTYPE1 'NUMBER-OF-ARGS 1) 
(PUT 'GETRTYPE1 'DEFINED-ON-LINE '264) 
(PUT 'GETRTYPE1 'DEFINED-IN-FILE 'ALG/REVAL.RED) 
(PUT 'GETRTYPE1 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE GETRTYPE1 (U) NIL) 
(PUT 'GETRTYPE2 'NUMBER-OF-ARGS 1) 
(PUT 'GETRTYPE2 'DEFINED-ON-LINE '268) 
(PUT 'GETRTYPE2 'DEFINED-IN-FILE 'ALG/REVAL.RED) 
(PUT 'GETRTYPE2 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE GETRTYPE2 (U)
    (PROG (X)
      (RETURN
       (COND
        ((AND (SETQ X (GET (CAR U) 'RTYPE)) (SETQ X (GET X 'RTYPEFN)))
         (APPLY1 X (CDR U)))
        ((SETQ X (GET (CAR U) 'RTYPEFN)) (APPLY1 X (CDR U)))
        ((AND (FLAGP (CAR U) 'MATMAPFN) (CDR U)
              (EQ (GETRTYPE (CADR U)) 'MATRIX))
         'MATRIX)
        (T NIL))))) 
(REMPROP 'RTYPECAR 'STAT) 
(PUT 'RTYPECAR 'NUMBER-OF-ARGS 1) 
(PUT 'RTYPECAR 'DEFINED-ON-LINE '283) 
(PUT 'RTYPECAR 'DEFINED-IN-FILE 'ALG/REVAL.RED) 
(PUT 'RTYPECAR 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE RTYPECAR (U)
    (PROG (J)
      (SETQ J U)
     LAB
      (COND ((NULL J) (RETURN NIL)))
      ((LAMBDA (J) (PUT J 'RTYPEFN 'GETRTYPECAR)) (CAR J))
      (SETQ J (CDR J))
      (GO LAB))) 
(DEFLIST '((RTYPECAR RLIS)) 'STAT) 
(RTYPECAR (LIST 'DIFFERENCE 'EXPT 'MINUS 'PLUS 'RECIP)) 
(DEFLIST '((QUOTIENT GETRTYPEOR) (TIMES GETRTYPEOR) (*SQ (LAMBDA (X) NIL)))
         'RTYPEFN) 
(DE GETRTYPECAR (U) (GETRTYPE (CAR U))) 
(PUT 'GETRTYPECAR 'NUMBER-OF-ARGS 1) 
(PUT 'GETRTYPECAR 'DEFINED-ON-LINE '296) 
(PUT 'GETRTYPECAR 'DEFINED-IN-FILE 'ALG/REVAL.RED) 
(PUT 'GETRTYPECAR 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(PUTC 'GETRTYPECAR 'INLINE '(LAMBDA (U) (GETRTYPE (CAR U)))) 
(PUT 'GETRTYPEOR 'NUMBER-OF-ARGS 1) 
(PUT 'GETRTYPEOR 'DEFINED-ON-LINE '298) 
(PUT 'GETRTYPEOR 'DEFINED-IN-FILE 'ALG/REVAL.RED) 
(PUT 'GETRTYPEOR 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE GETRTYPEOR (U) (AND U (OR (GETRTYPE (CAR U)) (GETRTYPEOR (CDR U))))) 
(PUT 'EQEXPR 'NUMBER-OF-ARGS 1) 
(PUT 'EQEXPR 'DEFINED-ON-LINE '301) 
(PUT 'EQEXPR 'DEFINED-IN-FILE 'ALG/REVAL.RED) 
(PUT 'EQEXPR 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE EQEXPR (U)
    (AND (NOT (ATOM U)) (FLAGP (CAR U) 'EQUALOPR) (CDDR U) (NULL (CDDDR U)))) 
(PUT '*EQN2A 'NUMBER-OF-ARGS 1) 
(PUT '*EQN2A 'DEFINED-ON-LINE '307) 
(PUT '*EQN2A 'DEFINED-IN-FILE 'ALG/REVAL.RED) 
(PUT '*EQN2A 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE *EQN2A (U)
    (COND ((NOT (EQEXPR U)) (PREPSQYY U))
          ((OR (NULL (CDR U)) (NULL (CDDR U)) (CDDDR U)) (TYPERR U "equation"))
          (T
           ((LAMBDA (LH RH)
              (COND ((EQUAL RH 0) LH) ((EQUAL LH 0) RH)
                    (T (LIST 'DIFFERENCE LH RH))))
            (PREPSQYY (CADR U)) (PREPSQYY (CADDR U)))))) 
(PUT 'PREPSQYY 'NUMBER-OF-ARGS 1) 
(PUT 'PREPSQYY 'DEFINED-ON-LINE '317) 
(PUT 'PREPSQYY 'DEFINED-IN-FILE 'ALG/REVAL.RED) 
(PUT 'PREPSQYY 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE PREPSQYY (U) (COND ((EQCAR U '*SQ) (PREPSQXX (CADR U))) (T U))) 
(PUT 'GETELV 'NUMBER-OF-ARGS 1) 
(PUT 'GETELV 'DEFINED-ON-LINE '320) 
(PUT 'GETELV 'DEFINED-IN-FILE 'ALG/REVAL.RED) 
(PUT 'GETELV 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE GETELV (U)
    (GETEL
     (CONS (CAR U)
           (PROG (X FORALL-RESULT FORALL-ENDPTR)
             (SETQ X (CDR U))
             (COND ((NULL X) (RETURN NIL)))
             (SETQ FORALL-RESULT
                     (SETQ FORALL-ENDPTR
                             (CONS ((LAMBDA (X) (REVAL_WITHOUT_MOD X)) (CAR X))
                                   NIL)))
            LOOPLABEL
             (SETQ X (CDR X))
             (COND ((NULL X) (RETURN FORALL-RESULT)))
             (RPLACD FORALL-ENDPTR
                     (CONS ((LAMBDA (X) (REVAL_WITHOUT_MOD X)) (CAR X)) NIL))
             (SETQ FORALL-ENDPTR (CDR FORALL-ENDPTR))
             (GO LOOPLABEL))))) 
(PUT 'SETELV 'NUMBER-OF-ARGS 2) 
(PUT 'SETELV 'DEFINED-ON-LINE '325) 
(PUT 'SETELV 'DEFINED-IN-FILE 'ALG/REVAL.RED) 
(PUT 'SETELV 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE SETELV (U V)
    (SETEL
     (CONS (CAR U)
           (PROG (X FORALL-RESULT FORALL-ENDPTR)
             (SETQ X (CDR U))
             (COND ((NULL X) (RETURN NIL)))
             (SETQ FORALL-RESULT
                     (SETQ FORALL-ENDPTR
                             (CONS ((LAMBDA (X) (REVAL_WITHOUT_MOD X)) (CAR X))
                                   NIL)))
            LOOPLABEL
             (SETQ X (CDR X))
             (COND ((NULL X) (RETURN FORALL-RESULT)))
             (RPLACD FORALL-ENDPTR
                     (CONS ((LAMBDA (X) (REVAL_WITHOUT_MOD X)) (CAR X)) NIL))
             (SETQ FORALL-ENDPTR (CDR FORALL-ENDPTR))
             (GO LOOPLABEL)))
     V)) 
(PUT 'REVAL_WITHOUT_MOD 'NUMBER-OF-ARGS 1) 
(PUT 'REVAL_WITHOUT_MOD 'DEFINED-ON-LINE '329) 
(PUT 'REVAL_WITHOUT_MOD 'DEFINED-IN-FILE 'ALG/REVAL.RED) 
(PUT 'REVAL_WITHOUT_MOD 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE REVAL_WITHOUT_MOD (U)
    (COND ((EQ DMODE* '|:MOD:|) ((LAMBDA (DMODE*) (REVAL1 U T)) NIL))
          (T (REVAL1 U T)))) 
(PUT 'REVLIS 'NUMBER-OF-ARGS 1) 
(PUT 'REVLIS 'DEFINED-ON-LINE '334) 
(PUT 'REVLIS 'DEFINED-IN-FILE 'ALG/REVAL.RED) 
(PUT 'REVLIS 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE REVLIS (U)
    (PROG (J FORALL-RESULT FORALL-ENDPTR)
      (SETQ J U)
      (COND ((NULL J) (RETURN NIL)))
      (SETQ FORALL-RESULT
              (SETQ FORALL-ENDPTR
                      (CONS ((LAMBDA (J) (REVAL1 J T)) (CAR J)) NIL)))
     LOOPLABEL
      (SETQ J (CDR J))
      (COND ((NULL J) (RETURN FORALL-RESULT)))
      (RPLACD FORALL-ENDPTR (CONS ((LAMBDA (J) (REVAL1 J T)) (CAR J)) NIL))
      (SETQ FORALL-ENDPTR (CDR FORALL-ENDPTR))
      (GO LOOPLABEL))) 
(PUT 'REVOP1 'NUMBER-OF-ARGS 1) 
(PUT 'REVOP1 'DEFINED-ON-LINE '336) 
(PUT 'REVOP1 'DEFINED-IN-FILE 'ALG/REVAL.RED) 
(PUT 'REVOP1 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE REVOP1 (U) (COND (*VAL (CONS (CAR U) (REVLIS (CDR U)))) (T U))) 
(PUT 'MK*SQ 'NUMBER-OF-ARGS 1) 
(PUT 'MK*SQ 'DEFINED-ON-LINE '339) 
(PUT 'MK*SQ 'DEFINED-IN-FILE 'ALG/REVAL.RED) 
(PUT 'MK*SQ 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE MK*SQ (U)
    ((LAMBDA (U)
       (COND ((NULL (CAR U)) 0)
             ((AND (ATOM (CAR U)) (EQUAL (CDR U) 1)) (CAR U))
             ((AND (KERNP U) (EQCAR (CAAAR (CAR U)) 'LIST)) (CAAAR (CAR U)))
             (T (CONS '*SQ (CONS U (COND (*RESUBS *SQVAR*) (T (LIST NIL))))))))
     (EXPCHK U))) 
(PUT '*SQ 'DEFINED-ON-LINE '350) 
(PUT '*SQ 'DEFINED-IN-FILE 'ALG/REVAL.RED) 
(PUT '*SQ 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DM *SQ (U) (PREPSQ (CADR U))) 
(PUT 'EXPCHK 'NUMBER-OF-ARGS 1) 
(PUT 'EXPCHK 'DEFINED-ON-LINE '354) 
(PUT 'EXPCHK 'DEFINED-IN-FILE 'ALG/REVAL.RED) 
(PUT 'EXPCHK 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE EXPCHK (U) (COND (*EXP U) (T (OFFEXPCHK U)))) 
(PUT 'LENGTHREVAL 'NUMBER-OF-ARGS 1) 
(PUT 'LENGTHREVAL 'DEFINED-ON-LINE '356) 
(PUT 'LENGTHREVAL 'DEFINED-IN-FILE 'ALG/REVAL.RED) 
(PUT 'LENGTHREVAL 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE LENGTHREVAL (U)
    (PROG (V W X)
      (COND
       ((NEQ (LENGTH U) 1)
        (RERROR 'ALG 11 "LENGTH called with wrong number of arguments")))
      (SETQ U (CAR U))
      (COND
       ((AND (IDP U) (ARRAYP U)) (RETURN (CONS 'LIST (GET U 'DIMENSION)))))
      (SETQ V (REVAL1 U NIL))
      (COND
       ((AND (SETQ W (GETRTYPE V)) (SETQ X (GET W 'LENGTHFN)))
        (RETURN (APPLY1 X V)))
       ((ATOM V) (RETURN 1))
       ((OR (NOT (IDP (CAR V))) (NOT (SETQ X (GET (CAR V) 'LENGTHFN))))
        (COND (W (LPRIE (LIST "LENGTH not defined for argument of type" W)))
              (T (TYPERR U "LENGTH argument"))))
       (T (RETURN (APPLY1 X (CDR V))))))) 
(PUT 'LENGTH 'PSOPFN 'LENGTHREVAL) 
(PUT 'YETUNKNOWNTYPEEVAL 'NUMBER-OF-ARGS 2) 
(PUT 'YETUNKNOWNTYPEEVAL 'DEFINED-ON-LINE '380) 
(PUT 'YETUNKNOWNTYPEEVAL 'DEFINED-IN-FILE 'ALG/REVAL.RED) 
(PUT 'YETUNKNOWNTYPEEVAL 'PROCEDURE_TYPE
     '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE YETUNKNOWNTYPEEVAL (U V) (REVAL1 (EVAL-YETUNKNOWNTYPEEXPR U V) V)) 
(PUT 'EVAL-YETUNKNOWNTYPEEXPR 'NUMBER-OF-ARGS 2) 
(PUT 'EVAL-YETUNKNOWNTYPEEXPR 'DEFINED-ON-LINE '384) 
(PUT 'EVAL-YETUNKNOWNTYPEEXPR 'DEFINED-IN-FILE 'ALG/REVAL.RED) 
(PUT 'EVAL-YETUNKNOWNTYPEEXPR 'PROCEDURE_TYPE
     '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE EVAL-YETUNKNOWNTYPEEXPR (U V)
    (COND
     ((ATOM U)
      ((LAMBDA (W) (COND (W (EVAL-YETUNKNOWNTYPEEXPR (CADR W) V)) (T U)))
       (GET U 'AVALUE)))
     ((OR (EQ (CAR U) '*SQ) (GET (CAR U) 'DNAME) (EQ (CAR U) '|:DN:|)) U)
     (T
      ((LAMBDA (X)
         (COND ((AND X (EQ (GETRTYPE U) 'YETUNKNOWNTYPE)) (APPLY1 X (CDR U)))
               (T
                (CONS (CAR U)
                      (PROG (J FORALL-RESULT FORALL-ENDPTR)
                        (SETQ J (CDR U))
                        (COND ((NULL J) (RETURN NIL)))
                        (SETQ FORALL-RESULT
                                (SETQ FORALL-ENDPTR
                                        (CONS
                                         ((LAMBDA (J)
                                            (EVAL-YETUNKNOWNTYPEEXPR J V))
                                          (CAR J))
                                         NIL)))
                       LOOPLABEL
                        (SETQ J (CDR J))
                        (COND ((NULL J) (RETURN FORALL-RESULT)))
                        (RPLACD FORALL-ENDPTR
                                (CONS
                                 ((LAMBDA (J) (EVAL-YETUNKNOWNTYPEEXPR J V))
                                  (CAR J))
                                 NIL))
                        (SETQ FORALL-ENDPTR (CDR FORALL-ENDPTR))
                        (GO LOOPLABEL))))))
       (GET (CAR U) 'PSOPFN))))) 
(PUT 'YETUNKNOWNTYPE 'EVFN 'YETUNKNOWNTYPEEVAL) 
(ENDMODULE) 