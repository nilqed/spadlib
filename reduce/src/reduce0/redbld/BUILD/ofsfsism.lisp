(cl:declaim (cl:optimize cl:debug cl:safety))
(cl:declaim (sb-ext:muffle-conditions sb-ext:compiler-note cl:style-warning))
(MODULE (LIST 'OFSFSISM)) 
(REVISION 'OFSFSISM
          "$Id: ofsfsism.red 5986 2021-08-28 13:35:27Z thomas-sturm $") 
(COPYRIGHT 'OFSFSISM "(c) 1995-2009 A. Dolzmann, T. Sturm") 
(PUT 'OFSF_SMWUPDKNOWL 'NUMBER-OF-ARGS 4) 
(PUT 'OFSF_SMWUPDKNOWL 'DEFINED-ON-LINE '32) 
(PUT 'OFSF_SMWUPDKNOWL 'DEFINED-IN-FILE 'REDLOG/OFSF/OFSFSISM.RED) 
(PUT 'OFSF_SMWUPDKNOWL 'PROCEDURE_TYPE
     '(ARROW (TIMES GENERAL GENERAL GENERAL GENERAL) GENERAL)) 
(DE OFSF_SMWUPDKNOWL (OP ATL KNOWL N)
    (COND (*RLSUSI (CL_SUSIUPDKNOWL OP ATL KNOWL N))
          (T (OFSF_SMUPDKNOWL OP ATL KNOWL N)))) 
(PUT 'OFSF_SMWRMKNOWL 'NUMBER-OF-ARGS 2) 
(PUT 'OFSF_SMWRMKNOWL 'DEFINED-ON-LINE '40) 
(PUT 'OFSF_SMWRMKNOWL 'DEFINED-IN-FILE 'REDLOG/OFSF/OFSFSISM.RED) 
(PUT 'OFSF_SMWRMKNOWL 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE OFSF_SMWRMKNOWL (KNOWL V)
    (COND (*RLSUSI (OFSF_SUSIRMKNOWL KNOWL V)) (T (OFSF_SMRMKNOWL KNOWL V)))) 
(PUT 'OFSF_SMWCPKNOWL 'NUMBER-OF-ARGS 1) 
(PUT 'OFSF_SMWCPKNOWL 'DEFINED-ON-LINE '46) 
(PUT 'OFSF_SMWCPKNOWL 'DEFINED-IN-FILE 'REDLOG/OFSF/OFSFSISM.RED) 
(PUT 'OFSF_SMWCPKNOWL 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE OFSF_SMWCPKNOWL (KNOWL)
    (COND (*RLSUSI (CL_SUSICPKNOWL KNOWL)) (T (OFSF_SMCPKNOWL KNOWL)))) 
(PUT 'OFSF_SMWMKATL 'NUMBER-OF-ARGS 4) 
(PUT 'OFSF_SMWMKATL 'DEFINED-ON-LINE '52) 
(PUT 'OFSF_SMWMKATL 'DEFINED-IN-FILE 'REDLOG/OFSF/OFSFSISM.RED) 
(PUT 'OFSF_SMWMKATL 'PROCEDURE_TYPE
     '(ARROW (TIMES GENERAL GENERAL GENERAL GENERAL) GENERAL)) 
(DE OFSF_SMWMKATL (OP KNOWL NEWKNOWL N)
    (COND (*RLSUSI (CL_SUSIMKATL OP KNOWL NEWKNOWL N))
          (T (OFSF_SMMKATL OP KNOWL NEWKNOWL N)))) 
(PUT 'OFSF_SMRMKNOWL 'NUMBER-OF-ARGS 2) 
(PUT 'OFSF_SMRMKNOWL 'DEFINED-ON-LINE '69) 
(PUT 'OFSF_SMRMKNOWL 'DEFINED-IN-FILE 'REDLOG/OFSF/OFSFSISM.RED) 
(PUT 'OFSF_SMRMKNOWL 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE OFSF_SMRMKNOWL (KNOWL V)
    (COND ((NULL KNOWL) NIL)
          ((MEMBER V (KERNELS (CAAR KNOWL))) (OFSF_SMRMKNOWL (CDR KNOWL) V))
          (T (PROGN (SETCDR KNOWL (OFSF_SMRMKNOWL (CDR KNOWL) V)) KNOWL)))) 
(PUT 'OFSF_SMCPKNOWL 'NUMBER-OF-ARGS 1) 
(PUT 'OFSF_SMCPKNOWL 'DEFINED-ON-LINE '82) 
(PUT 'OFSF_SMCPKNOWL 'DEFINED-IN-FILE 'REDLOG/OFSF/OFSFSISM.RED) 
(PUT 'OFSF_SMCPKNOWL 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE OFSF_SMCPKNOWL (KNOWL)
    (PROG (IR FORALL-RESULT FORALL-ENDPTR)
      (SETQ IR KNOWL)
      (COND ((NULL IR) (RETURN NIL)))
      (SETQ FORALL-RESULT
              (SETQ FORALL-ENDPTR
                      (CONS
                       ((LAMBDA (IR) (CONS (CAR IR) (APPEND (CDR IR) NIL)))
                        (CAR IR))
                       NIL)))
     LOOPLABEL
      (SETQ IR (CDR IR))
      (COND ((NULL IR) (RETURN FORALL-RESULT)))
      (RPLACD FORALL-ENDPTR
              (CONS
               ((LAMBDA (IR) (CONS (CAR IR) (APPEND (CDR IR) NIL))) (CAR IR))
               NIL))
      (SETQ FORALL-ENDPTR (CDR FORALL-ENDPTR))
      (GO LOOPLABEL))) 
(PUT 'OFSF_SMUPDKNOWL 'NUMBER-OF-ARGS 4) 
(PUT 'OFSF_SMUPDKNOWL 'DEFINED-ON-LINE '86) 
(PUT 'OFSF_SMUPDKNOWL 'DEFINED-IN-FILE 'REDLOG/OFSF/OFSFSISM.RED) 
(PUT 'OFSF_SMUPDKNOWL 'PROCEDURE_TYPE
     '(ARROW (TIMES GENERAL GENERAL GENERAL GENERAL) GENERAL)) 
(DE OFSF_SMUPDKNOWL (OP ATL KNOWL N)
    (PROG (W IR A)
      (PROG ()
       WHILELABEL
        (COND ((NOT ATL) (RETURN NIL)))
        (PROGN
         (SETQ A (COND ((EQ OP 'AND) (CAR ATL)) (T (OFSF_NEGATEAT (CAR ATL)))))
         (SETQ ATL (CDR ATL))
         (SETQ IR (OFSF_AT2IR A N))
         (COND
          ((SETQ W (ASSOC (CAR IR) KNOWL))
           (PROGN
            (SETCDR W (OFSF_SMINSERT (CADR IR) (CDR W)))
            (COND
             ((EQ (CDR W) 'FALSE)
              (PROGN (SETQ ATL NIL) (SETQ KNOWL 'FALSE))))))
          (T (SETQ KNOWL (CONS IR KNOWL)))))
        (GO WHILELABEL))
      (RETURN KNOWL))) 
(SWITCH (LIST 'RLSIPPATL 'RLSIPPSUBST 'RLSIPPSIGNCHK)) 
(ON1 'RLSIPPATL) 
(ON1 'RLSIPPSUBST) 
(ON1 'RLSIPPSIGNCHK) 
(PUT 'OFSF_SMMKATL 'NUMBER-OF-ARGS 4) 
(PUT 'OFSF_SMMKATL 'DEFINED-ON-LINE '113) 
(PUT 'OFSF_SMMKATL 'DEFINED-IN-FILE 'REDLOG/OFSF/OFSFSISM.RED) 
(PUT 'OFSF_SMMKATL 'PROCEDURE_TYPE
     '(ARROW (TIMES GENERAL GENERAL GENERAL GENERAL) GENERAL)) 
(DE OFSF_SMMKATL (OP OLDKNOWL NEWKNOWL N)
    (COND
     (*RLSIPPATL
      (OFSF_SIPPATL OP (OFSF_SMMKATL1 OP OLDKNOWL NEWKNOWL N) NEWKNOWL))
     (T (OFSF_SMMKATL1 OP OLDKNOWL NEWKNOWL N)))) 
(PUT 'OFSF_SMMKATL1 'NUMBER-OF-ARGS 4) 
(PUT 'OFSF_SMMKATL1 'DEFINED-ON-LINE '119) 
(PUT 'OFSF_SMMKATL1 'DEFINED-IN-FILE 'REDLOG/OFSF/OFSFSISM.RED) 
(PUT 'OFSF_SMMKATL1 'PROCEDURE_TYPE
     '(ARROW (TIMES GENERAL GENERAL GENERAL GENERAL) GENERAL)) 
(DE OFSF_SMMKATL1 (OP OLDKNOWL NEWKNOWL N)
    (COND ((EQ OP 'AND) (OFSF_SMMKATL-AND OLDKNOWL NEWKNOWL N))
          (T (OFSF_SMMKATL-OR OLDKNOWL NEWKNOWL N)))) 
(PUT 'OFSF_SMMKATL-AND 'NUMBER-OF-ARGS 3) 
(PUT 'OFSF_SMMKATL-AND 'DEFINED-ON-LINE '129) 
(PUT 'OFSF_SMMKATL-AND 'DEFINED-IN-FILE 'REDLOG/OFSF/OFSFSISM.RED) 
(PUT 'OFSF_SMMKATL-AND 'PROCEDURE_TYPE
     '(ARROW (TIMES GENERAL GENERAL GENERAL) GENERAL)) 
(DE OFSF_SMMKATL-AND (OLDKNOWL NEWKNOWL N)
    (PROG (W)
      (COND
       ((AND (NOT *RLSIPW) *RLSIPO) (RETURN (OFSF_IRL2ATL 'AND NEWKNOWL N))))
      (RETURN
       (PROG (IR FORALL-RESULT FORALL-ENDPTR)
         (SETQ IR NEWKNOWL)
        STARTOVER
         (COND ((NULL IR) (RETURN NIL)))
         (SETQ FORALL-RESULT
                 ((LAMBDA (IR)
                    (PROGN
                     (SETQ W (ATSOC (CAR IR) OLDKNOWL))
                     (COND ((NULL W) (OFSF_IR2ATL 'AND IR N))
                           (T (OFSF_SMMKATL-AND1 W IR N)))))
                  (CAR IR)))
         (SETQ FORALL-ENDPTR (LASTPAIR FORALL-RESULT))
         (SETQ IR (CDR IR))
         (COND ((ATOM FORALL-ENDPTR) (GO STARTOVER)))
        LOOPLABEL
         (COND ((NULL IR) (RETURN FORALL-RESULT)))
         (RPLACD FORALL-ENDPTR
                 ((LAMBDA (IR)
                    (PROGN
                     (SETQ W (ATSOC (CAR IR) OLDKNOWL))
                     (COND ((NULL W) (OFSF_IR2ATL 'AND IR N))
                           (T (OFSF_SMMKATL-AND1 W IR N)))))
                  (CAR IR)))
         (SETQ FORALL-ENDPTR (LASTPAIR FORALL-ENDPTR))
         (SETQ IR (CDR IR))
         (GO LOOPLABEL))))) 
(PUT 'OFSF_SMMKATL-AND1 'NUMBER-OF-ARGS 3) 
(PUT 'OFSF_SMMKATL-AND1 'DEFINED-ON-LINE '139) 
(PUT 'OFSF_SMMKATL-AND1 'DEFINED-IN-FILE 'REDLOG/OFSF/OFSFSISM.RED) 
(PUT 'OFSF_SMMKATL-AND1 'PROCEDURE_TYPE
     '(ARROW (TIMES GENERAL GENERAL GENERAL) GENERAL)) 
(DE OFSF_SMMKATL-AND1 (OIR NIR N)
    (PROG (W PARASQ)
      (SETQ PARASQ (CONS (CAR NIR) 1))
      (RETURN
       (PROG (LE FORALL-RESULT FORALL-ENDPTR)
         (SETQ LE (CDR NIR))
        STARTOVER
         (COND ((NULL LE) (RETURN NIL)))
         (SETQ FORALL-RESULT
                 ((LAMBDA (LE)
                    (COND
                     ((EQUAL (CAR LE) N)
                      (PROGN
                       (COND
                        ((AND (MEMQ (CADR LE) '(LESSP GREATERP))
                              (SETQ W
                                      (OFSF_SMMKAT-AND2 (CDR OIR) (CDR LE)
                                       PARASQ)))
                         (LIST W))
                        (T (LIST (OFSF_ENTRY2AT 'AND (CDR LE) PARASQ))))))))
                  (CAR LE)))
         (SETQ FORALL-ENDPTR (LASTPAIR FORALL-RESULT))
         (SETQ LE (CDR LE))
         (COND ((ATOM FORALL-ENDPTR) (GO STARTOVER)))
        LOOPLABEL
         (COND ((NULL LE) (RETURN FORALL-RESULT)))
         (RPLACD FORALL-ENDPTR
                 ((LAMBDA (LE)
                    (COND
                     ((EQUAL (CAR LE) N)
                      (PROGN
                       (COND
                        ((AND (MEMQ (CADR LE) '(LESSP GREATERP))
                              (SETQ W
                                      (OFSF_SMMKAT-AND2 (CDR OIR) (CDR LE)
                                       PARASQ)))
                         (LIST W))
                        (T (LIST (OFSF_ENTRY2AT 'AND (CDR LE) PARASQ))))))))
                  (CAR LE)))
         (SETQ FORALL-ENDPTR (LASTPAIR FORALL-ENDPTR))
         (SETQ LE (CDR LE))
         (GO LOOPLABEL))))) 
(PUT 'OFSF_SMMKAT-AND2 'NUMBER-OF-ARGS 3) 
(PUT 'OFSF_SMMKAT-AND2 'DEFINED-ON-LINE '153) 
(PUT 'OFSF_SMMKAT-AND2 'DEFINED-IN-FILE 'REDLOG/OFSF/OFSFSISM.RED) 
(PUT 'OFSF_SMMKAT-AND2 'PROCEDURE_TYPE
     '(ARROW (TIMES GENERAL GENERAL GENERAL) GENERAL)) 
(DE OFSF_SMMKAT-AND2 (ODB NE PARASQ)
    (PROG (W)
      (SETQ W (OFSF_SMDBGETREL (CDR NE) ODB))
      (COND
       ((EQ W 'NEQ)
        (COND
         (*RLSIPW
          (PROGN
           (COND
            ((EQ (CAR NE) 'LESSP)
             (RETURN (OFSF_ENTRY2AT 'AND (CONS 'LEQ (CDR NE)) PARASQ))))
           (RETURN (OFSF_ENTRY2AT 'AND (CONS 'GEQ (CDR NE)) PARASQ))))))
       ((MEMQ W '(LEQ GEQ))
        (COND
         ((NOT *RLSIPO)
          (RETURN (OFSF_ENTRY2AT 'AND (CONS 'NEQ (CDR NE)) PARASQ)))))))) 
(PUT 'OFSF_SMMKATL-OR 'NUMBER-OF-ARGS 3) 
(PUT 'OFSF_SMMKATL-OR 'DEFINED-ON-LINE '172) 
(PUT 'OFSF_SMMKATL-OR 'DEFINED-IN-FILE 'REDLOG/OFSF/OFSFSISM.RED) 
(PUT 'OFSF_SMMKATL-OR 'PROCEDURE_TYPE
     '(ARROW (TIMES GENERAL GENERAL GENERAL) GENERAL)) 
(DE OFSF_SMMKATL-OR (OLDKNOWL NEWKNOWL N)
    (PROG (W)
      (RETURN
       (PROG (IR FORALL-RESULT FORALL-ENDPTR)
         (SETQ IR NEWKNOWL)
        STARTOVER
         (COND ((NULL IR) (RETURN NIL)))
         (SETQ FORALL-RESULT
                 ((LAMBDA (IR)
                    (PROGN
                     (SETQ W (ATSOC (CAR IR) OLDKNOWL))
                     (COND ((NULL W) (OFSF_IR2ATL 'OR IR N))
                           (T (OFSF_SMMKATL-OR1 W IR N)))))
                  (CAR IR)))
         (SETQ FORALL-ENDPTR (LASTPAIR FORALL-RESULT))
         (SETQ IR (CDR IR))
         (COND ((ATOM FORALL-ENDPTR) (GO STARTOVER)))
        LOOPLABEL
         (COND ((NULL IR) (RETURN FORALL-RESULT)))
         (RPLACD FORALL-ENDPTR
                 ((LAMBDA (IR)
                    (PROGN
                     (SETQ W (ATSOC (CAR IR) OLDKNOWL))
                     (COND ((NULL W) (OFSF_IR2ATL 'OR IR N))
                           (T (OFSF_SMMKATL-OR1 W IR N)))))
                  (CAR IR)))
         (SETQ FORALL-ENDPTR (LASTPAIR FORALL-ENDPTR))
         (SETQ IR (CDR IR))
         (GO LOOPLABEL))))) 
(PUT 'OFSF_SMMKATL-OR1 'NUMBER-OF-ARGS 3) 
(PUT 'OFSF_SMMKATL-OR1 'DEFINED-ON-LINE '180) 
(PUT 'OFSF_SMMKATL-OR1 'DEFINED-IN-FILE 'REDLOG/OFSF/OFSFSISM.RED) 
(PUT 'OFSF_SMMKATL-OR1 'PROCEDURE_TYPE
     '(ARROW (TIMES GENERAL GENERAL GENERAL) GENERAL)) 
(DE OFSF_SMMKATL-OR1 (OIR NIR N)
    (PROG (W PARASQ)
      (SETQ PARASQ (CONS (CAR NIR) 1))
      (RETURN
       (PROG (LE FORALL-RESULT FORALL-ENDPTR)
         (SETQ LE (CDR NIR))
        STARTOVER
         (COND ((NULL LE) (RETURN NIL)))
         (SETQ FORALL-RESULT
                 ((LAMBDA (LE)
                    (COND
                     ((EQUAL (CAR LE) N)
                      (PROGN
                       (COND
                        ((AND (MEMQ (CADR LE) '(LESSP GREATERP EQUAL))
                              (SETQ W
                                      (OFSF_SMMKAT-OR2 (CDR OIR) (CDR LE)
                                       PARASQ)))
                         (LIST W))
                        (T (LIST (OFSF_ENTRY2AT 'OR (CDR LE) PARASQ))))))))
                  (CAR LE)))
         (SETQ FORALL-ENDPTR (LASTPAIR FORALL-RESULT))
         (SETQ LE (CDR LE))
         (COND ((ATOM FORALL-ENDPTR) (GO STARTOVER)))
        LOOPLABEL
         (COND ((NULL LE) (RETURN FORALL-RESULT)))
         (RPLACD FORALL-ENDPTR
                 ((LAMBDA (LE)
                    (COND
                     ((EQUAL (CAR LE) N)
                      (PROGN
                       (COND
                        ((AND (MEMQ (CADR LE) '(LESSP GREATERP EQUAL))
                              (SETQ W
                                      (OFSF_SMMKAT-OR2 (CDR OIR) (CDR LE)
                                       PARASQ)))
                         (LIST W))
                        (T (LIST (OFSF_ENTRY2AT 'OR (CDR LE) PARASQ))))))))
                  (CAR LE)))
         (SETQ FORALL-ENDPTR (LASTPAIR FORALL-ENDPTR))
         (SETQ LE (CDR LE))
         (GO LOOPLABEL))))) 
(PUT 'OFSF_SMMKAT-OR2 'NUMBER-OF-ARGS 3) 
(PUT 'OFSF_SMMKAT-OR2 'DEFINED-ON-LINE '194) 
(PUT 'OFSF_SMMKAT-OR2 'DEFINED-IN-FILE 'REDLOG/OFSF/OFSFSISM.RED) 
(PUT 'OFSF_SMMKAT-OR2 'PROCEDURE_TYPE
     '(ARROW (TIMES GENERAL GENERAL GENERAL) GENERAL)) 
(DE OFSF_SMMKAT-OR2 (ODB NE PARASQ)
    (PROG (W)
      (SETQ W (OFSF_SMDBGETREL (CDR NE) ODB))
      (COND
       ((EQ W 'NEQ)
        (COND
         ((NOT *RLSIPW)
          (PROGN
           (COND
            ((EQ (CAR NE) 'LESSP)
             (RETURN (OFSF_ENTRY2AT 'OR (CONS 'LEQ (CDR NE)) PARASQ))))
           (RETURN (OFSF_ENTRY2AT 'OR (CONS 'GEQ (CDR NE)) PARASQ))))))
       ((MEMQ W '(LEQ GEQ))
        (PROGN
         (COND
          ((MEMQ (CAR NE) '(LESSP GREATERP))
           (RETURN (OFSF_ENTRY2AT 'OR (CONS 'NEQ (CDR NE)) PARASQ))))
         (COND
          (*RLSIPO
           (RETURN
            (OFSF_ENTRY2AT 'OR (CONS (OFSF_ANEGREL W) (CDR NE)) PARASQ))))))))) 
(PUT 'OFSF_SIPPATL 'NUMBER-OF-ARGS 3) 
(PUT 'OFSF_SIPPATL 'DEFINED-ON-LINE '213) 
(PUT 'OFSF_SIPPATL 'DEFINED-IN-FILE 'REDLOG/OFSF/OFSFSISM.RED) 
(PUT 'OFSF_SIPPATL 'PROCEDURE_TYPE
     '(ARROW (TIMES GENERAL GENERAL GENERAL) GENERAL)) 
(DE OFSF_SIPPATL (OP ATL NEWKNOWL)
    (PROG (GTRUE GFALSE GEQUAL SUBAL ZVL POSVL NEGVL GEQVL LEQVL NEQVL AT NATL)
      (SETQ GTRUE (CL_CFLIP 'TRUE (EQ OP 'AND)))
      (SETQ GFALSE (CL_CFLIP 'FALSE (EQ OP 'AND)))
      (SETQ GEQUAL (OFSF_CLNEGREL 'EQUAL (EQ OP 'AND)))
      (PROG (G162 G163)
        (SETQ G162 (OFSF_EXPLOITKNOWL NEWKNOWL))
        (SETQ G163 G162)
        (SETQ SUBAL (CAR G162))
        (SETQ G162 (CDR G162))
        (SETQ ZVL (CAR G162))
        (SETQ G162 (CDR G162))
        (SETQ POSVL (CAR G162))
        (SETQ G162 (CDR G162))
        (SETQ NEGVL (CAR G162))
        (SETQ G162 (CDR G162))
        (SETQ GEQVL (CAR G162))
        (SETQ G162 (CDR G162))
        (SETQ LEQVL (CAR G162))
        (SETQ G162 (CDR G162))
        (SETQ NEQVL (CAR G162))
        (SETQ G162 (CDR G162))
        (RETURN G163))
      (PROG ()
       WHILELABEL
        (COND ((NOT ATL) (RETURN NIL)))
        (PROGN
         (SETQ AT (PROG1 (CAR ATL) (SETQ ATL (CDR ATL))))
         (COND
          ((AND *RLSIPPSUBST (NOT (OFSF_VAREQNP GEQUAL AT)))
           (PROGN
            (SETQ AT (OFSF_SIPPSUBST AT SUBAL))
            ((LAMBDA (*RLSIATADV) (SETQ AT (OFSF_SIMPLAT1 AT OP))) NIL))))
         (COND
          ((NOT (OR (EQ AT 'TRUE) (EQ AT 'FALSE)))
           (COND
            ((AND *RLSIPPSIGNCHK (NOT (SFTO_VARISNUMP (CADR AT))))
             (SETQ AT
                     (OFSF_SIPPSIGNCHK AT ZVL POSVL NEGVL GEQVL LEQVL
                      NEQVL))))))
         (COND ((EQ AT GFALSE) (PROGN (SETQ NATL GFALSE) (SETQ ATL NIL)))
               ((NEQ AT GTRUE) (SETQ NATL (LTO_INSERT AT NATL)))))
        (GO WHILELABEL))
      (RETURN NATL))) 
(PUT 'OFSF_VAREQNP 'NUMBER-OF-ARGS 2) 
(PUT 'OFSF_VAREQNP 'DEFINED-ON-LINE '239) 
(PUT 'OFSF_VAREQNP 'DEFINED-IN-FILE 'REDLOG/OFSF/OFSFSISM.RED) 
(PUT 'OFSF_VAREQNP 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE OFSF_VAREQNP (GEQUAL AT) (SFTO_VARISNUMP (CADR AT))) 
(PUT 'OFSF_SIPPSIGNCHK 'NUMBER-OF-ARGS 7) 
(PUT 'OFSF_SIPPSIGNCHK 'DEFINED-ON-LINE '245) 
(PUT 'OFSF_SIPPSIGNCHK 'DEFINED-IN-FILE 'REDLOG/OFSF/OFSFSISM.RED) 
(PUT 'OFSF_SIPPSIGNCHK 'PROCEDURE_TYPE
     '(ARROW (TIMES GENERAL GENERAL GENERAL GENERAL GENERAL GENERAL GENERAL)
       GENERAL)) 
(DE OFSF_SIPPSIGNCHK (AT ZVL POSVL NEGVL GEQVL LEQVL NEQVL)
    (PROG (OP SIGN)
      (SETQ OP (CAR AT))
      (SETQ SIGN
              (OFSF_SIPPSIGNCHKF (CADR AT) ZVL POSVL NEGVL GEQVL LEQVL NEQVL))
      (COND ((EQ OP SIGN) (RETURN 'TRUE)))
      (COND
       ((EQ OP 'EQUAL)
        (RETURN (COND ((MEMQ SIGN '(NEQ LESSP GREATERP)) 'FALSE) (T AT)))))
      (COND
       ((EQ OP 'GREATERP)
        (RETURN (COND ((MEMQ SIGN '(EQUAL LESSP LEQ)) 'FALSE) (T AT)))))
      (COND
       ((EQ OP 'LESSP)
        (RETURN (COND ((MEMQ SIGN '(EQUAL GREATERP GEQ)) 'FALSE) (T AT)))))
      (COND
       ((EQ OP 'GEQ)
        (RETURN
         (COND ((MEMQ SIGN '(EQUAL GREATERP)) 'TRUE) ((EQ SIGN 'LESSP) 'FALSE)
               (T AT)))))
      (COND
       ((EQ OP 'LEQ)
        (RETURN
         (COND ((MEMQ SIGN '(EQUAL LESSP)) 'TRUE) ((EQ SIGN 'GREATERP) 'FALSE)
               (T AT)))))
      (COND
       ((EQ OP 'NEQ)
        (RETURN
         (COND ((MEMQ SIGN '(LESSP GREATERP)) 'TRUE) ((EQ SIGN 'EQUAL) 'FALSE)
               (T AT)))))
      (RETURN AT))) 
(PUT 'OFSF_SIPPSIGNCHKF 'NUMBER-OF-ARGS 7) 
(PUT 'OFSF_SIPPSIGNCHKF 'DEFINED-ON-LINE '282) 
(PUT 'OFSF_SIPPSIGNCHKF 'DEFINED-IN-FILE 'REDLOG/OFSF/OFSFSISM.RED) 
(PUT 'OFSF_SIPPSIGNCHKF 'PROCEDURE_TYPE
     '(ARROW (TIMES GENERAL GENERAL GENERAL GENERAL GENERAL GENERAL GENERAL)
       GENERAL)) 
(DE OFSF_SIPPSIGNCHKF (F ZVL POSVL NEGVL GEQVL LEQVL NEQVL)
    (PROG (SLC SRED SLT SLM)
      (COND ((OR (ATOM F) (ATOM (CAR F))) (RETURN (OFSF_UPDSIGNDOM F))))
      (SETQ SLT (OFSF_UPDSIGNVAR (CAAAR F) ZVL POSVL NEGVL GEQVL LEQVL NEQVL))
      (COND ((EQ SLT 'UNKNOWN) (RETURN 'UNKNOWN)))
      (SETQ SLC (OFSF_SIPPSIGNCHKF (CDAR F) ZVL POSVL NEGVL GEQVL LEQVL NEQVL))
      (COND ((EQ SLC 'UNKNOWN) (RETURN 'UNKNOWN)))
      (SETQ SRED (OFSF_SIPPSIGNCHKF (CDR F) ZVL POSVL NEGVL GEQVL LEQVL NEQVL))
      (COND ((EQ SRED 'UNKNOWN) (RETURN 'UNKNOWN)))
      (SETQ SLT (OFSF_UPDSIGNPOW SLT (CDAAR F)))
      (SETQ SLM (OFSF_UPDSIGNMULT SLC SLT))
      (COND ((EQ SLM 'UNKNOWN) (RETURN 'UNKNOWN)))
      (RETURN (OFSF_UPDSIGNADD SLM SRED)))) 
(PUT 'OFSF_UPDSIGNDOM 'NUMBER-OF-ARGS 1) 
(PUT 'OFSF_UPDSIGNDOM 'DEFINED-ON-LINE '302) 
(PUT 'OFSF_UPDSIGNDOM 'DEFINED-IN-FILE 'REDLOG/OFSF/OFSFSISM.RED) 
(PUT 'OFSF_UPDSIGNDOM 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE OFSF_UPDSIGNDOM (D)
    (COND ((NULL D) 'EQUAL) ((GREATERP D 0) 'GREATERP) ((LESSP D 0) 'LESSP)
          (T (REDERR (LIST "something wrong in ofsf_updSignDom:" D))))) 
(PUT 'OFSF_UPDSIGNVAR 'NUMBER-OF-ARGS 7) 
(PUT 'OFSF_UPDSIGNVAR 'DEFINED-ON-LINE '312) 
(PUT 'OFSF_UPDSIGNVAR 'DEFINED-IN-FILE 'REDLOG/OFSF/OFSFSISM.RED) 
(PUT 'OFSF_UPDSIGNVAR 'PROCEDURE_TYPE
     '(ARROW (TIMES GENERAL GENERAL GENERAL GENERAL GENERAL GENERAL GENERAL)
       GENERAL)) 
(DE OFSF_UPDSIGNVAR (V ZVL POSVL NEGVL GEQVL LEQVL NEQVL)
    (COND ((MEMQ V ZVL) 'EQUAL) ((MEMQ V POSVL) 'GREATERP)
          ((MEMQ V NEGVL) 'LESSP) ((MEMQ V GEQVL) 'GEQ) ((MEMQ V LEQVL) 'LEQ)
          ((MEMQ V NEQVL) 'NEQ) (T 'UNKNOWN))) 
(PUT 'OFSF_UPDSIGNPOW 'NUMBER-OF-ARGS 2) 
(PUT 'OFSF_UPDSIGNPOW 'DEFINED-ON-LINE '328) 
(PUT 'OFSF_UPDSIGNPOW 'DEFINED-IN-FILE 'REDLOG/OFSF/OFSFSISM.RED) 
(PUT 'OFSF_UPDSIGNPOW 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE OFSF_UPDSIGNPOW (SIGN DEG)
    (COND ((MEMQ SIGN '(EQUAL GREATERP GEQ NEQ)) SIGN)
          ((MEMQ SIGN '(LESSP LEQ)) (OFSF_CANEGREL SIGN (NOT (EVENP DEG))))
          (T 'UNKNOWN))) 
(DE OFSF_PREQ (A1 A2 B1 B2)
    (OR (AND (EQ A1 B1) (EQ A2 B2)) (AND (EQ A1 B2) (EQ A2 B1)))) 
(PUT 'OFSF_PREQ 'NUMBER-OF-ARGS 4) 
(PUT 'OFSF_PREQ 'DEFINED-ON-LINE '336) 
(PUT 'OFSF_PREQ 'DEFINED-IN-FILE 'REDLOG/OFSF/OFSFSISM.RED) 
(PUT 'OFSF_PREQ 'PROCEDURE_TYPE
     '(ARROW (TIMES GENERAL GENERAL GENERAL GENERAL) GENERAL)) 
(PUTC 'OFSF_PREQ 'INLINE
      '(LAMBDA (A1 A2 B1 B2)
         (OR (AND (EQ A1 B1) (EQ A2 B2)) (AND (EQ A1 B2) (EQ A2 B1))))) 
(PUT 'OFSF_UPDSIGNADD 'NUMBER-OF-ARGS 2) 
(PUT 'OFSF_UPDSIGNADD 'DEFINED-ON-LINE '339) 
(PUT 'OFSF_UPDSIGNADD 'DEFINED-IN-FILE 'REDLOG/OFSF/OFSFSISM.RED) 
(PUT 'OFSF_UPDSIGNADD 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE OFSF_UPDSIGNADD (OLD NEW)
    (COND ((OR (NOT OLD) (EQ OLD 'EQUAL)) NEW) ((EQ NEW 'EQUAL) OLD)
          ((AND (EQ OLD NEW) (NEQ OLD 'NEQ)) OLD)
          ((OR (AND (EQ OLD 'LEQ) (EQ NEW 'LESSP))
               (AND (EQ OLD 'LESSP) (EQ NEW 'LEQ)))
           'LESSP)
          ((OR (AND (EQ OLD 'GEQ) (EQ NEW 'GREATERP))
               (AND (EQ OLD 'GREATERP) (EQ NEW 'GEQ)))
           'GREATERP)
          (T 'UNKNOWN))) 
(PUT 'OFSF_UPDSIGNMULT 'NUMBER-OF-ARGS 2) 
(PUT 'OFSF_UPDSIGNMULT 'DEFINED-ON-LINE '356) 
(PUT 'OFSF_UPDSIGNMULT 'DEFINED-IN-FILE 'REDLOG/OFSF/OFSFSISM.RED) 
(PUT 'OFSF_UPDSIGNMULT 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE OFSF_UPDSIGNMULT (OLD NEW)
    (COND ((OR (NOT OLD) (EQ OLD 'GREATERP)) NEW) ((EQ NEW 'GREATERP) OLD)
          ((EQ OLD 'LESSP) (OFSF_ANEGREL NEW))
          ((EQ NEW 'LESSP) (OFSF_ANEGREL OLD))
          ((OR (AND (EQ OLD 'GEQ) (EQ NEW 'GEQ))
               (AND (EQ OLD 'LEQ) (EQ NEW 'LEQ)))
           'GEQ)
          ((OR (AND (EQ OLD 'LEQ) (EQ NEW 'GEQ))
               (AND (EQ OLD 'GEQ) (EQ NEW 'LEQ)))
           'LEQ)
          ((OR (EQ OLD 'EQUAL) (EQ NEW 'EQUAL)) 'EQUAL)
          ((AND (EQ OLD 'NEQ) (EQ NEW 'NEQ)) 'NEQ) (T 'UNKNOWN))) 
(PUT 'OFSF_EXPLOITKNOWL 'NUMBER-OF-ARGS 1) 
(PUT 'OFSF_EXPLOITKNOWL 'DEFINED-ON-LINE '379) 
(PUT 'OFSF_EXPLOITKNOWL 'DEFINED-IN-FILE 'REDLOG/OFSF/OFSFSISM.RED) 
(PUT 'OFSF_EXPLOITKNOWL 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE OFSF_EXPLOITKNOWL (KNOWL)
    (PROG (SUBAL ZVL POSVL NEGVL GEQVL LEQVL NEQVL V REL A N)
      (SETQ N 0)
      (PROG (IR)
        (SETQ IR KNOWL)
       LAB
        (COND ((NULL IR) (RETURN NIL)))
        ((LAMBDA (IR)
           (COND
            ((SETQ V (SFTO_VARP (CAR IR)))
             (PROG (LE)
               (SETQ LE (CDR IR))
              LAB
               (COND ((NULL LE) (RETURN NIL)))
               ((LAMBDA (LE)
                  (PROGN
                   (PROG (G164)
                     (SETQ G164 (CDR LE))
                     (SETQ REL (CAR G164))
                     (SETQ A (CDR G164))
                     (RETURN G164))
                   (SETQ A (NEGSQ A))
                   (SETQ N (OR (CAR A) 0))
                   (COND
                    ((EQ REL 'EQUAL)
                     (COND (*RLSIPPSUBST (SETQ SUBAL (CONS (CONS V A) SUBAL)))
                           (T
                            (COND
                             ((GREATERP N 0)
                              (SETQ POSVL (LTO_INSERTQ V POSVL)))
                             ((LESSP N 0) (SETQ NEGVL (LTO_INSERTQ V NEGVL)))
                             ((EQN N 0) (SETQ ZVL (LTO_INSERTQ V ZVL)))))))
                    ((EQ REL 'GREATERP)
                     (COND ((GEQ N 0) (SETQ POSVL (LTO_INSERTQ V POSVL)))))
                    ((EQ REL 'GEQ)
                     (COND ((GREATERP N 0) (SETQ POSVL (LTO_INSERTQ V POSVL)))
                           ((EQN N 0) (SETQ GEQVL (LTO_INSERTQ V GEQVL)))))
                    ((EQ REL 'LESSP)
                     (COND ((LEQ N 0) (SETQ NEGVL (LTO_INSERTQ V NEGVL)))))
                    ((EQ REL 'LEQ)
                     (COND ((LESSP N 0) (SETQ NEGVL (LTO_INSERTQ V NEGVL)))
                           ((EQN N 0) (SETQ LEQVL (LTO_INSERTQ V LEQVL)))))
                    ((EQ REL 'NEQ)
                     (COND ((EQN N 0) (SETQ NEQVL (LTO_INSERTQ V NEQVL))))))))
                (CAR LE))
               (SETQ LE (CDR LE))
               (GO LAB)))))
         (CAR IR))
        (SETQ IR (CDR IR))
        (GO LAB))
      (RETURN (LIST SUBAL ZVL POSVL NEGVL GEQVL LEQVL NEQVL)))) 
(PUT 'OFSF_SIPPSUBST 'NUMBER-OF-ARGS 2) 
(PUT 'OFSF_SIPPSUBST 'DEFINED-ON-LINE '422) 
(PUT 'OFSF_SIPPSUBST 'DEFINED-IN-FILE 'REDLOG/OFSF/OFSFSISM.RED) 
(PUT 'OFSF_SIPPSUBST 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE OFSF_SIPPSUBST (F AL) (COND (AL (OFSF_SIPPSUBST1 F AL)) (T F))) 
(PUT 'OFSF_SIPPSUBST1 'NUMBER-OF-ARGS 2) 
(PUT 'OFSF_SIPPSUBST1 'DEFINED-ON-LINE '425) 
(PUT 'OFSF_SIPPSUBST1 'DEFINED-IN-FILE 'REDLOG/OFSF/OFSFSISM.RED) 
(PUT 'OFSF_SIPPSUBST1 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE OFSF_SIPPSUBST1 (F AL)
    (LIST (COND ((ATOM F) F) (T (CAR F))) (CAR (OFSF_SIATSUBF (CADR F) AL))
          NIL)) 
(PUT 'OFSF_SIATSUBF 'NUMBER-OF-ARGS 2) 
(PUT 'OFSF_SIATSUBF 'DEFINED-ON-LINE '428) 
(PUT 'OFSF_SIATSUBF 'DEFINED-IN-FILE 'REDLOG/OFSF/OFSFSISM.RED) 
(PUT 'OFSF_SIATSUBF 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE OFSF_SIATSUBF (F AL)
    (PROG (NRED NLC W)
      (COND ((OR (ATOM F) (ATOM (CAR F))) (RETURN (CONS F 1))))
      (SETQ NRED (OFSF_SIATSUBF (CDR F) AL))
      (SETQ NLC (OFSF_SIATSUBF (CDAR F) AL))
      (COND
       ((SETQ W (ATSOC (CAAAR F) AL))
        (RETURN (ADDSQ (MULTSQ NLC (EXPTSQ (CDR W) (CDAAR F))) NRED))))
      (RETURN (ADDSQ (MULTSQ NLC (OFSF_POW2Q (CAAAR F) (CDAAR F))) NRED)))) 
(PUT 'OFSF_SMDBGETREL 'NUMBER-OF-ARGS 2) 
(PUT 'OFSF_SMDBGETREL 'DEFINED-ON-LINE '439) 
(PUT 'OFSF_SMDBGETREL 'DEFINED-IN-FILE 'REDLOG/OFSF/OFSFSISM.RED) 
(PUT 'OFSF_SMDBGETREL 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE OFSF_SMDBGETREL (ABSSQ DB)
    (COND ((EQUAL ABSSQ (CDDAR DB)) (CADAR DB))
          ((CDR DB) (OFSF_SMDBGETREL ABSSQ (CDR DB))))) 
(PUT 'OFSF_AT2IR 'NUMBER-OF-ARGS 2) 
(PUT 'OFSF_AT2IR 'DEFINED-ON-LINE '445) 
(PUT 'OFSF_AT2IR 'DEFINED-IN-FILE 'REDLOG/OFSF/OFSFSISM.RED) 
(PUT 'OFSF_AT2IR 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE OFSF_AT2IR (ATF N)
    (PROG (OP PAR ABS C)
      (SETQ OP (CAR ATF))
      (SETQ ABS (SETQ PAR (CADR ATF)))
      (PROG ()
       WHILELABEL
        (COND ((NOT (NOT (OR (ATOM ABS) (ATOM (CAR ABS))))) (RETURN NIL)))
        (SETQ ABS (CDR ABS))
        (GO WHILELABEL))
      (SETQ PAR (ADDF PAR (NEGF ABS)))
      (SETQ C (SFTO_DCONTENTF PAR))
      (SETQ PAR ((LAMBDA (*EXP) (QUOTF1 PAR C)) T))
      (SETQ ABS (MULTSQ (CONS ABS 1) (INVSQ (CONS C 1))))
      (RETURN (CONS PAR (LIST (CONS N (CONS OP ABS))))))) 
(PUT 'OFSF_IRL2ATL 'NUMBER-OF-ARGS 3) 
(PUT 'OFSF_IRL2ATL 'DEFINED-ON-LINE '460) 
(PUT 'OFSF_IRL2ATL 'DEFINED-IN-FILE 'REDLOG/OFSF/OFSFSISM.RED) 
(PUT 'OFSF_IRL2ATL 'PROCEDURE_TYPE
     '(ARROW (TIMES GENERAL GENERAL GENERAL) GENERAL)) 
(DE OFSF_IRL2ATL (OP IRL N)
    (PROG (IR FORALL-RESULT FORALL-ENDPTR)
      (SETQ IR IRL)
     STARTOVER
      (COND ((NULL IR) (RETURN NIL)))
      (SETQ FORALL-RESULT ((LAMBDA (IR) (OFSF_IR2ATL OP IR N)) (CAR IR)))
      (SETQ FORALL-ENDPTR (LASTPAIR FORALL-RESULT))
      (SETQ IR (CDR IR))
      (COND ((ATOM FORALL-ENDPTR) (GO STARTOVER)))
     LOOPLABEL
      (COND ((NULL IR) (RETURN FORALL-RESULT)))
      (RPLACD FORALL-ENDPTR ((LAMBDA (IR) (OFSF_IR2ATL OP IR N)) (CAR IR)))
      (SETQ FORALL-ENDPTR (LASTPAIR FORALL-ENDPTR))
      (SETQ IR (CDR IR))
      (GO LOOPLABEL))) 
(PUT 'OFSF_IR2ATL 'NUMBER-OF-ARGS 3) 
(PUT 'OFSF_IR2ATL 'DEFINED-ON-LINE '466) 
(PUT 'OFSF_IR2ATL 'DEFINED-IN-FILE 'REDLOG/OFSF/OFSFSISM.RED) 
(PUT 'OFSF_IR2ATL 'PROCEDURE_TYPE
     '(ARROW (TIMES GENERAL GENERAL GENERAL) GENERAL)) 
(DE OFSF_IR2ATL (OP IR N)
    ((LAMBDA (A)
       (PROG (LE FORALL-RESULT FORALL-ENDPTR)
         (SETQ LE (CDR IR))
        STARTOVER
         (COND ((NULL LE) (RETURN NIL)))
         (SETQ FORALL-RESULT
                 ((LAMBDA (LE)
                    (COND
                     ((EQUAL (CAR LE) N)
                      (LIST (OFSF_ENTRY2AT OP (CDR LE) A)))))
                  (CAR LE)))
         (SETQ FORALL-ENDPTR (LASTPAIR FORALL-RESULT))
         (SETQ LE (CDR LE))
         (COND ((ATOM FORALL-ENDPTR) (GO STARTOVER)))
        LOOPLABEL
         (COND ((NULL LE) (RETURN FORALL-RESULT)))
         (RPLACD FORALL-ENDPTR
                 ((LAMBDA (LE)
                    (COND
                     ((EQUAL (CAR LE) N)
                      (LIST (OFSF_ENTRY2AT OP (CDR LE) A)))))
                  (CAR LE)))
         (SETQ FORALL-ENDPTR (LASTPAIR FORALL-ENDPTR))
         (SETQ LE (CDR LE))
         (GO LOOPLABEL)))
     (CONS (CAR IR) 1))) 
(PUT 'OFSF_ENTRY2AT 'NUMBER-OF-ARGS 3) 
(PUT 'OFSF_ENTRY2AT 'DEFINED-ON-LINE '470) 
(PUT 'OFSF_ENTRY2AT 'DEFINED-IN-FILE 'REDLOG/OFSF/OFSFSISM.RED) 
(PUT 'OFSF_ENTRY2AT 'PROCEDURE_TYPE
     '(ARROW (TIMES GENERAL GENERAL GENERAL) GENERAL)) 
(DE OFSF_ENTRY2AT (OP ENTRY PARASQ)
    (COND (*RLIDENTIFY (CL_IDENTIFYAT (OFSF_ENTRY2AT1 OP ENTRY PARASQ)))
          (T (OFSF_ENTRY2AT1 OP ENTRY PARASQ)))) 
(PUT 'OFSF_ENTRY2AT1 'NUMBER-OF-ARGS 3) 
(PUT 'OFSF_ENTRY2AT1 'DEFINED-ON-LINE '476) 
(PUT 'OFSF_ENTRY2AT1 'DEFINED-IN-FILE 'REDLOG/OFSF/OFSFSISM.RED) 
(PUT 'OFSF_ENTRY2AT1 'PROCEDURE_TYPE
     '(ARROW (TIMES GENERAL GENERAL GENERAL) GENERAL)) 
(DE OFSF_ENTRY2AT1 (OP ENTRY PARASQ)
    (LIST (OFSF_CLNEGREL (CAR ENTRY) (EQ OP 'AND))
          (CAR (ADDSQ PARASQ (CDR ENTRY))) NIL)) 
(PUT 'OFSF_SMINSERT 'NUMBER-OF-ARGS 2) 
(PUT 'OFSF_SMINSERT 'DEFINED-ON-LINE '479) 
(PUT 'OFSF_SMINSERT 'DEFINED-IN-FILE 'REDLOG/OFSF/OFSFSISM.RED) 
(PUT 'OFSF_SMINSERT 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE OFSF_SMINSERT (LE DB)
    (PROG (A W SCDB OSCDB)
      (PROG ()
       REPEATLABEL
        (PROGN
         (SETQ W
                 (OFSF_SMINSERT1 (CADR (CAR DB)) (CDDR (CAR DB)) (CADR LE)
                  (CDDR LE) (CAR LE)))
         (COND ((AND W (NOT (IDP W))) (PROGN (SETQ DB (CDR DB)) (SETQ LE W)))))
        (COND ((NOT (OR (NULL W) (IDP W) (NULL DB))) (GO REPEATLABEL))))
      (COND ((EQ W 'FALSE) (RETURN 'FALSE)))
      (COND ((EQ W 'TRUE) (RETURN DB)))
      (COND ((NULL DB) (RETURN (LIST LE))))
      (SETQ OSCDB DB)
      (SETQ SCDB (CDR DB))
      (PROG ()
       WHILELABEL
        (COND ((NOT SCDB) (RETURN NIL)))
        (PROGN
         (SETQ A (CAR SCDB))
         (SETQ SCDB (CDR SCDB))
         (SETQ W
                 (OFSF_SMINSERT1 (CADR A) (CDDR A) (CADR LE) (CDDR LE)
                  (CAR LE)))
         (COND ((EQ W 'TRUE) (PROGN (SETQ SCDB NIL) (SETQ A 'TRUE)))
               ((EQ W 'FALSE) (PROGN (SETQ SCDB NIL) (SETQ A 'FALSE)))
               (W (PROGN (SETCDR OSCDB SCDB) (SETQ LE W)))
               (T (SETQ OSCDB (CDR OSCDB)))))
        (GO WHILELABEL))
      (COND ((EQ A 'FALSE) (RETURN 'FALSE)))
      (COND ((EQ A 'TRUE) (RETURN DB)))
      (RETURN (CONS LE DB)))) 
(PUT 'OFSF_SMINSERT1 'NUMBER-OF-ARGS 5) 
(PUT 'OFSF_SMINSERT1 'DEFINED-ON-LINE '517) 
(PUT 'OFSF_SMINSERT1 'DEFINED-IN-FILE 'REDLOG/OFSF/OFSFSISM.RED) 
(PUT 'OFSF_SMINSERT1 'PROCEDURE_TYPE
     '(ARROW (TIMES GENERAL GENERAL GENERAL GENERAL GENERAL) GENERAL)) 
(DE OFSF_SMINSERT1 (R1 A R2 B N)
    (PROG (W DIFF)
      (SETQ DIFF (CAR (ADDSQ A (NEGSQ B))))
      (COND
       ((NULL DIFF)
        (PROGN
         (SETQ W (OFSF_SMEQTABLE R1 R2))
         (COND ((EQ W 'FALSE) (RETURN 'FALSE)))
         (COND ((EQ R1 W) (RETURN 'TRUE)))
         (RETURN (CONS N (CONS W A))))))
      (COND
       ((MINUSF DIFF)
        (PROGN
         (SETQ W (OFSF_SMORDTABLE R1 R2))
         (COND ((ATOM W) (RETURN W)))
         (COND ((AND (EQCAR W R1) (CDR W)) (RETURN 'TRUE)))
         (RETURN (CONS N (CONS (CAR W) (COND ((CDR W) A) (T B))))))))
      (SETQ W (OFSF_SMORDTABLE R2 R1))
      (COND ((ATOM W) (RETURN W)))
      (COND ((AND (EQCAR W R1) (NULL (CDR W))) (RETURN 'TRUE)))
      (RETURN (CONS N (CONS (CAR W) (COND ((CDR W) B) (T A))))))) 
(PUT 'OFSF_SMEQTABLE 'NUMBER-OF-ARGS 2) 
(PUT 'OFSF_SMEQTABLE 'DEFINED-ON-LINE '547) 
(PUT 'OFSF_SMEQTABLE 'DEFINED-IN-FILE 'REDLOG/OFSF/OFSFSISM.RED) 
(PUT 'OFSF_SMEQTABLE 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE OFSF_SMEQTABLE (R1 R2)
    (PROG (AL)
      (SETQ AL
              '((EQUAL (EQUAL . EQUAL) (NEQ . FALSE) (GEQ . EQUAL)
                       (LEQ . EQUAL) (GREATERP . FALSE) (LESSP . FALSE))
                (NEQ (NEQ . NEQ) (GEQ . GREATERP) (LEQ . LESSP)
                     (GREATERP . GREATERP) (LESSP . LESSP))
                (GEQ (GEQ . GEQ) (LEQ . EQUAL) (GREATERP . GREATERP)
                     (LESSP . FALSE))
                (LEQ (LEQ . LEQ) (GREATERP . FALSE) (LESSP . LESSP))
                (GREATERP (GREATERP . GREATERP) (LESSP . FALSE))
                (LESSP (LESSP . LESSP))))
      (RETURN (CDR (OR (ATSOC R2 (ATSOC R1 AL)) (ATSOC R1 (ATSOC R2 AL))))))) 
(PUT 'OFSF_SMORDTABLE 'NUMBER-OF-ARGS 2) 
(PUT 'OFSF_SMORDTABLE 'DEFINED-ON-LINE '565) 
(PUT 'OFSF_SMORDTABLE 'DEFINED-IN-FILE 'REDLOG/OFSF/OFSFSISM.RED) 
(PUT 'OFSF_SMORDTABLE 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE OFSF_SMORDTABLE (R1 R2)
    (PROG (AL)
      (SETQ AL
              '((EQUAL (EQUAL . FALSE) (NEQ EQUAL . T) (GEQ EQUAL . T)
                       (LEQ . FALSE) (GREATERP EQUAL . T) (LESSP . FALSE))
                (NEQ (EQUAL EQUAL) (NEQ) (GEQ) (LEQ LEQ) (GREATERP)
                     (LESSP LESSP))
                (GEQ (EQUAL . FALSE) (NEQ GEQ . T) (GEQ GEQ . T) (LEQ . FALSE)
                     (GREATERP GEQ . T) (LESSP . FALSE))
                (LEQ (EQUAL EQUAL) (NEQ) (GEQ) (LEQ LEQ) (GREATERP)
                     (LESSP LESSP))
                (GREATERP (EQUAL . FALSE) (NEQ GREATERP . T) (GEQ GREATERP . T)
                          (LEQ . FALSE) (GREATERP GREATERP . T)
                          (LESSP . FALSE))
                (LESSP (EQUAL EQUAL) (NEQ) (GEQ) (LEQ LEQ) (GREATERP)
                       (LESSP LESSP))))
      (RETURN (CDR (ATSOC R2 (ATSOC R1 AL)))))) 
(ENDMODULE) 