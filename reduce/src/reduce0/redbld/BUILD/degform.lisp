(cl:declaim (cl:optimize cl:debug cl:safety))
(cl:declaim (sb-ext:muffle-conditions sb-ext:compiler-note cl:style-warning))
(MODULE (LIST 'DEGFORM)) 
(FLUID '(FRLIS*)) 
(GLOBAL '(DIMEX*)) 
(PUT 'DEG*FARG 'NUMBER-OF-ARGS 1) 
(PUT 'DEG*FARG 'DEFINED-ON-LINE '34) 
(PUT 'DEG*FARG 'DEFINED-IN-FILE 'EXCALC/DEGFORM.RED) 
(PUT 'DEG*FARG 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE DEG*FARG (U)
    (COND ((NULL (CDR U)) (DEG*FORM (CAR U)))
          (T
           (PROG (Z)
             (PROG (J)
               (SETQ J U)
              LAB
               (COND ((NULL J) (RETURN NIL)))
               ((LAMBDA (J) (SETQ Z (ADDF (DEG*FORM J) Z))) (CAR J))
               (SETQ J (CDR J))
               (GO LAB))
             (RETURN Z))))) 
(PUT 'DEG*FORM 'NUMBER-OF-ARGS 1) 
(PUT 'DEG*FORM 'DEFINED-ON-LINE '42) 
(PUT 'DEG*FORM 'DEFINED-IN-FILE 'EXCALC/DEGFORM.RED) 
(PUT 'DEG*FORM 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE DEG*FORM (U)
    (COND
     ((ATOM U)
      (COND ((MEMQ U FRLIS*) 'FREE)
            (T ((LAMBDA (X) (COND (X (CAR X)) (T NIL))) (GET U 'FDEGREE)))))
     (T
      ((LAMBDA (X)
         (COND
          ((FLAGP X 'INDEXVAR)
           ((LAMBDA (X) (COND (X (CDR X)) (T NIL)))
            (ASSOC (LENGTH (CDR U)) (GET (CAR U) 'IFDEGREE))))
          ((EQ X 'WEDGE) (DEG*FARG (CDR U)))
          ((EQ X 'D) (ADDD 1 (DEG*FORM (CADR U))))
          ((EQ X 'HODGE) (ADDF DIMEX* (NEGF (DEG*FORM (CADR U)))))
          ((EQ X 'PARTDF) (COND ((CDDR U) NIL) (T (MINUS 1))))
          ((EQ X 'LIEDF) (DEG*FORM (CADDR U)))
          ((EQ X 'INNERPROD) (ADDD (MINUS 1) (DEG*FORM (CADDR U))))
          ((MEMQ X '(PLUS MINUS DIFFERENCE QUOTIENT)) (DEG*FORM (CADR U)))
          ((EQ X 'TIMES) (DEG*FARG (CDR U)))
          ((EQ X '*SQ) (DEG*FORM (PREPSQ (SIMP* U)))) ((EQ X 'CROSSPROD) 1)
          ((EQ X 'ROT) 1) ((EQ X 'DOTPROD) NIL) ((EQ X 'DIV) NIL)
          ((EQ X 'SPAT) NIL) (T NIL)))
       (CAR U))))) 
(PUT 'SIMPEXDEGREE 'NUMBER-OF-ARGS 1) 
(PUT 'SIMPEXDEGREE 'DEFINED-ON-LINE '66) 
(PUT 'SIMPEXDEGREE 'DEFINED-IN-FILE 'EXCALC/DEGFORM.RED) 
(PUT 'SIMPEXDEGREE 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE SIMPEXDEGREE (U) (CONS (DEG*FORM (PREPSQ (SIMP* (CAR U)))) 1)) 
(PUT 'EXDEGREE 'SIMPFN 'SIMPEXDEGREE) 
(PUT 'EXFORMP 'NUMBER-OF-ARGS 1) 
(PUT 'EXFORMP 'DEFINED-ON-LINE '71) 
(PUT 'EXFORMP 'DEFINED-IN-FILE 'EXCALC/DEGFORM.RED) 
(PUT 'EXFORMP 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE EXFORMP (U)
    (COND ((OR (NULL U) (NUMBERP U)) NIL) ((AND (ATOM U) (MEMQ U FRLIS*)) T)
          ((ATOM U) (GET U 'FDEGREE))
          ((FLAGP (CAR U) 'INDEXVAR)
           (ASSOC
            (LENGTH (COND ((NEWSTYLE_INDSP (CADR U)) (CADR U)) (T (CDR U))))
            (GET (CAR U) 'IFDEGREE)))
          ((EQ (CAR U) '*SQ) (EXFORMP (PREPSQ (CADR U))))
          ((MEMQ (CAR U) '(WEDGE D PARTDF HODGE INNERPROD LIEDF)) T)
          ((GET (CAR U) 'DNAME) NIL)
          (T (OR (LEXFORMP (CDR U)) (EXFORMP (CAR U)))))) 
(PUT 'LEXFORMP 'NUMBER-OF-ARGS 1) 
(PUT 'LEXFORMP 'DEFINED-ON-LINE '85) 
(PUT 'LEXFORMP 'DEFINED-IN-FILE 'EXCALC/DEGFORM.RED) 
(PUT 'LEXFORMP 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE LEXFORMP (U) (AND U (OR (EXFORMP (CAR U)) (LEXFORMP (CDR U))))) 
(PUT 'NEWSTYLE_INDSP 'NUMBER-OF-ARGS 1) 
(PUT 'NEWSTYLE_INDSP 'DEFINED-ON-LINE '88) 
(PUT 'NEWSTYLE_INDSP 'DEFINED-IN-FILE 'EXCALC/DEGFORM.RED) 
(PUT 'NEWSTYLE_INDSP 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE NEWSTYLE_INDSP (U)
    (AND (NULL (ATOM U)) (NULL (ATOM (CAR U)))
         (MEMQ (CAAR U)
               '(*SUB_* *_SUB* *SUP^* *^SUP* *_BELOW_* *^ABOVE^* *-WIDE-*)))) 
(ENDMODULE) 