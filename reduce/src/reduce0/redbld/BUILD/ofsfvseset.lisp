(cl:declaim (cl:optimize cl:debug cl:safety))
(cl:declaim (sb-ext:muffle-conditions sb-ext:compiler-note cl:style-warning))
(MODULE (LIST 'OFSFVSESET)) 
(REVISION 'OFSFVSESET
          "$Id: ofsfvseset.red 5986 2021-08-28 13:35:27Z thomas-sturm $") 
(COPYRIGHT 'OFSFVSESET "(c) 2015-2017 M. Kosta, T. Sturm") 
(FLUID '(RLBNDSWITHILP*)) 
(SETQ RLBNDSWITHILP* NIL) 
(PUT 'VSPR_MK 'NUMBER-OF-ARGS 4) 
(DE VSPR_MK (F X RSL RC) (LIST 'VSPR F X RSL RC)) 
(PUT 'VSPR_F 'NUMBER-OF-ARGS 1) 
(DE VSPR_F (PR) (NTH PR 2)) 
(PUT 'VSPR_V 'NUMBER-OF-ARGS 1) 
(DE VSPR_V (PR) (NTH PR 3)) 
(PUT 'VSPR_RSL 'NUMBER-OF-ARGS 1) 
(DE VSPR_RSL (PR) (NTH PR 4)) 
(PUT 'VSPR_RC 'NUMBER-OF-ARGS 1) 
(DE VSPR_RC (PR) (NTH PR 5)) 
(PUT 'VSPR_D 'NUMBER-OF-ARGS 1) 
(DE VSPR_D (PR)
    (PROG (F) (SETQ F (VSPR_F PR)) (COND (F (RETURN (CDAAR F)))) (RETURN 0))) 
(PUT 'VSPR_RTL 'NUMBER-OF-ARGS 1) 
(DE VSPR_RTL (PR)
    (PROG (RTL)
      (SETQ RTL
              (PROG (RS FORALL-RESULT FORALL-ENDPTR)
                (SETQ RS (VSPR_RSL PR))
                (COND ((NULL RS) (RETURN NIL)))
                (SETQ FORALL-RESULT
                        (SETQ FORALL-ENDPTR
                                (CONS ((LAMBDA (RS) (CAR RS)) (CAR RS)) NIL)))
               LOOPLABEL
                (SETQ RS (CDR RS))
                (COND ((NULL RS) (RETURN FORALL-RESULT)))
                (RPLACD FORALL-ENDPTR
                        (CONS ((LAMBDA (RS) (CAR RS)) (CAR RS)) NIL))
                (SETQ FORALL-ENDPTR (CDR FORALL-ENDPTR))
                (GO LOOPLABEL)))
      (RETURN (SORT RTL (FUNCTION (LAMBDA (A B) (LESSP A B))))))) 
(PUT 'VSPR_REORDER 'NUMBER-OF-ARGS 1) 
(DE VSPR_REORDER (PR)
    (VSPR_MK (REORDER (VSPR_F PR)) (VSPR_V PR) (VSPR_RSL PR) (VSPR_RC PR))) 
(PUT 'VSPR_GUARD 'NUMBER-OF-ARGS 1) 
(DE VSPR_GUARD (PR)
    (COND ((EQ (VSPR_RC PR) 'TRUE) (VSUB_GUARD PR))
          (T (LIST 'AND (VSUB_GUARD PR) (VSPR_RC PR))))) 
(PUT 'VSPC_MK 'NUMBER-OF-ARGS 5) 
(DE VSPC_MK (P TYPE CS GPL B) (LIST 'VSPC P TYPE CS GPL B)) 
(PUT 'VSPC_P 'NUMBER-OF-ARGS 1) 
(DE VSPC_P (PC) (NTH PC 2)) 
(PUT 'VSPC_TYPE 'NUMBER-OF-ARGS 1) 
(DE VSPC_TYPE (PC) (NTH PC 3)) 
(PUT 'VSPC_CS 'NUMBER-OF-ARGS 1) 
(DE VSPC_CS (PC) (NTH PC 4)) 
(PUT 'VSPC_GPL 'NUMBER-OF-ARGS 1) 
(DE VSPC_GPL (PC) (NTH PC 5)) 
(PUT 'VSPC_B 'NUMBER-OF-ARGS 1) 
(DE VSPC_B (PC) (NTH PC 6)) 
(PUT 'VSCS_MK 'NUMBER-OF-ARGS 2) 
(DE VSCS_MK (TS S) (CONS TS S)) 
(PUT 'VSCS_FAILEDP 'NUMBER-OF-ARGS 1) 
(DE VSCS_FAILEDP (CS) (EQ (CDR CS) 'FAILED)) 
(PUT 'VSCS_TS 'NUMBER-OF-ARGS 1) 
(DE VSCS_TS (CS) (CAR CS)) 
(PUT 'VSCS_IP 'NUMBER-OF-ARGS 1) 
(DE VSCS_IP (CS)
    (PROG (W)
      (SETQ W (ATSOC 'IP (CDR CS)))
      (COND (W (RETURN (CDR W))))
      (RETURN NIL))) 
(PUT 'VSCS_EP 'NUMBER-OF-ARGS 1) 
(DE VSCS_EP (CS)
    (PROG (W)
      (SETQ W (ATSOC 'EP (CDR CS)))
      (COND (W (RETURN (CDR W))))
      (RETURN NIL))) 
(PUT 'VSCS_SLB 'NUMBER-OF-ARGS 1) 
(DE VSCS_SLB (CS)
    (PROG (W)
      (SETQ W (ATSOC 'SLB (CDR CS)))
      (COND (W (RETURN (CDR W))))
      (RETURN NIL))) 
(PUT 'VSCS_WLB 'NUMBER-OF-ARGS 1) 
(DE VSCS_WLB (CS)
    (PROG (W)
      (SETQ W (ATSOC 'WLB (CDR CS)))
      (COND (W (RETURN (CDR W))))
      (RETURN NIL))) 
(PUT 'VSCS_SUB 'NUMBER-OF-ARGS 1) 
(DE VSCS_SUB (CS)
    (PROG (W)
      (SETQ W (ATSOC 'SUB (CDR CS)))
      (COND (W (RETURN (CDR W))))
      (RETURN NIL))) 
(PUT 'VSCS_WUB 'NUMBER-OF-ARGS 1) 
(DE VSCS_WUB (CS)
    (PROG (W)
      (SETQ W (ATSOC 'WUB (CDR CS)))
      (COND (W (RETURN (CDR W))))
      (RETURN NIL))) 
(PUT 'VSCS_NIP 'NUMBER-OF-ARGS 1) 
(DE VSCS_NIP (CS) (LENGTH (VSCS_IP CS))) 
(PUT 'VSCS_NEP 'NUMBER-OF-ARGS 1) 
(DE VSCS_NEP (CS) (LENGTH (VSCS_EP CS))) 
(PUT 'VSCS_NSLB 'NUMBER-OF-ARGS 1) 
(DE VSCS_NSLB (CS) (LENGTH (VSCS_SLB CS))) 
(PUT 'VSCS_NWLB 'NUMBER-OF-ARGS 1) 
(DE VSCS_NWLB (CS) (LENGTH (VSCS_WLB CS))) 
(PUT 'VSCS_NSUB 'NUMBER-OF-ARGS 1) 
(DE VSCS_NSUB (CS) (LENGTH (VSCS_SUB CS))) 
(PUT 'VSCS_NWUB 'NUMBER-OF-ARGS 1) 
(DE VSCS_NWUB (CS) (LENGTH (VSCS_WUB CS))) 
(PUT 'VSCS_MERGE 'NUMBER-OF-ARGS 2) 
(DE VSCS_MERGE (C1 C2)
    (PROG (THEO AL W1 W2)
      (COND ((VSCS_FAILEDP C1) (RETURN C1)))
      (COND ((VSCS_FAILEDP C2) (RETURN C2)))
      (SETQ THEO (APPEND (CAR C1) (CAR C2)))
      (SETQ AL
              (PROG (K FORALL-RESULT FORALL-ENDPTR)
                (SETQ K '(IP EP SLB WLB SUB WUB))
               STARTOVER
                (COND ((NULL K) (RETURN NIL)))
                (SETQ FORALL-RESULT
                        ((LAMBDA (K)
                           (PROGN
                            (SETQ W1 (ATSOC K (CDR C1)))
                            (SETQ W2 (ATSOC K (CDR C2)))
                            (SETQ W1 (COND (W1 (CDR W1))))
                            (SETQ W2 (COND (W2 (CDR W2))))
                            (COND ((OR W1 W2) (LIST (CONS K (APPEND W1 W2))))
                                  (T NIL))))
                         (CAR K)))
                (SETQ FORALL-ENDPTR (LASTPAIR FORALL-RESULT))
                (SETQ K (CDR K))
                (COND ((ATOM FORALL-ENDPTR) (GO STARTOVER)))
               LOOPLABEL
                (COND ((NULL K) (RETURN FORALL-RESULT)))
                (RPLACD FORALL-ENDPTR
                        ((LAMBDA (K)
                           (PROGN
                            (SETQ W1 (ATSOC K (CDR C1)))
                            (SETQ W2 (ATSOC K (CDR C2)))
                            (SETQ W1 (COND (W1 (CDR W1))))
                            (SETQ W2 (COND (W2 (CDR W2))))
                            (COND ((OR W1 W2) (LIST (CONS K (APPEND W1 W2))))
                                  (T NIL))))
                         (CAR K)))
                (SETQ FORALL-ENDPTR (LASTPAIR FORALL-ENDPTR))
                (SETQ K (CDR K))
                (GO LOOPLABEL)))
      (RETURN (CONS THEO AL)))) 
(PUT 'VSTP_MK 'NUMBER-OF-ARGS 4) 
(DE VSTP_MK (P GPL NP PR) (LIST 'VSTP P GPL NP PR)) 
(PUT 'VSTP_P 'NUMBER-OF-ARGS 1) 
(DE VSTP_P (TP) (NTH TP 2)) 
(PUT 'VSTP_GPL 'NUMBER-OF-ARGS 1) 
(DE VSTP_GPL (TP) (NTH TP 3)) 
(PUT 'VSTP_NP 'NUMBER-OF-ARGS 1) 
(DE VSTP_NP (TP) (NTH TP 4)) 
(PUT 'VSTP_PR 'NUMBER-OF-ARGS 1) 
(DE VSTP_PR (TP) (NTH TP 5)) 
(PUT 'VSTP_REORDER 'NUMBER-OF-ARGS 1) 
(DE VSTP_REORDER (TP)
    (COND ((MEMQ (VSTP_NP TP) '(MINF PINF)) TP)
          (T
           (LIST 'VSTP (VSTP_P TP) (VSTP_GPL TP) (VSTP_NP TP)
                 (VSPR_REORDER (VSTP_PR TP)))))) 
(PUT 'VSTP_GUARD 'NUMBER-OF-ARGS 1) 
(DE VSTP_GUARD (TP)
    (COND ((MEMQ (VSTP_NP TP) '(MINF PINF)) 'TRUE)
          (T (VSPR_GUARD (VSTP_PR TP))))) 
(PUT 'VSDE_NEW 'NUMBER-OF-ARGS 0) 
(DE VSDE_NEW NIL
    (PROG (DE)
      (SETQ DE (MKVECT 6))
      (PUTV DE 0 'VSDE)
      (PUTV DE 1 'UNDEFINED)
      (PUTV DE 2 'UNDEFINED)
      (PUTV DE 3 'UNDEFINED)
      (PUTV DE 4 'UNDEFINED)
      (PUTV DE 5 'UNDEFINED)
      (PUTV DE 6 'UNDEFINED)
      (RETURN DE))) 
(PUT 'VSDE_V 'NUMBER-OF-ARGS 1) 
(PUT 'VSDE_V 'DEFINED-ON-LINE '313) 
(PUT 'VSDE_V 'DEFINED-IN-FILE 'REDLOG/OFSF/OFSFVSESET.RED) 
(PUT 'VSDE_V 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE VSDE_V (DE) (GETV DE 1)) 
(PUT 'VSDE_F 'NUMBER-OF-ARGS 1) 
(PUT 'VSDE_F 'DEFINED-ON-LINE '314) 
(PUT 'VSDE_F 'DEFINED-IN-FILE 'REDLOG/OFSF/OFSFVSESET.RED) 
(PUT 'VSDE_F 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE VSDE_F (DE) (GETV DE 2)) 
(PUT 'VSDE_CURTHEO 'NUMBER-OF-ARGS 1) 
(PUT 'VSDE_CURTHEO 'DEFINED-ON-LINE '315) 
(PUT 'VSDE_CURTHEO 'DEFINED-IN-FILE 'REDLOG/OFSF/OFSFVSESET.RED) 
(PUT 'VSDE_CURTHEO 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE VSDE_CURTHEO (DE) (GETV DE 3)) 
(PUT 'VSDE_BVL 'NUMBER-OF-ARGS 1) 
(PUT 'VSDE_BVL 'DEFINED-ON-LINE '316) 
(PUT 'VSDE_BVL 'DEFINED-IN-FILE 'REDLOG/OFSF/OFSFVSESET.RED) 
(PUT 'VSDE_BVL 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE VSDE_BVL (DE) (GETV DE 4)) 
(PUT 'VSDE_PCL 'NUMBER-OF-ARGS 1) 
(PUT 'VSDE_PCL 'DEFINED-ON-LINE '317) 
(PUT 'VSDE_PCL 'DEFINED-IN-FILE 'REDLOG/OFSF/OFSFVSESET.RED) 
(PUT 'VSDE_PCL 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE VSDE_PCL (DE) (GETV DE 5)) 
(PUT 'VSDE_TPL 'NUMBER-OF-ARGS 1) 
(PUT 'VSDE_TPL 'DEFINED-ON-LINE '318) 
(PUT 'VSDE_TPL 'DEFINED-IN-FILE 'REDLOG/OFSF/OFSFVSESET.RED) 
(PUT 'VSDE_TPL 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE VSDE_TPL (DE) (GETV DE 6)) 
(PUT 'VSDE_PUTV 'NUMBER-OF-ARGS 2) 
(PUT 'VSDE_PUTV 'DEFINED-ON-LINE '320) 
(PUT 'VSDE_PUTV 'DEFINED-IN-FILE 'REDLOG/OFSF/OFSFVSESET.RED) 
(PUT 'VSDE_PUTV 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE VSDE_PUTV (DE X) (PUTV DE 1 X)) 
(PUT 'VSDE_PUTF 'NUMBER-OF-ARGS 2) 
(PUT 'VSDE_PUTF 'DEFINED-ON-LINE '321) 
(PUT 'VSDE_PUTF 'DEFINED-IN-FILE 'REDLOG/OFSF/OFSFVSESET.RED) 
(PUT 'VSDE_PUTF 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE VSDE_PUTF (DE F) (PUTV DE 2 F)) 
(PUT 'VSDE_PUTCURTHEO 'NUMBER-OF-ARGS 2) 
(PUT 'VSDE_PUTCURTHEO 'DEFINED-ON-LINE '322) 
(PUT 'VSDE_PUTCURTHEO 'DEFINED-IN-FILE 'REDLOG/OFSF/OFSFVSESET.RED) 
(PUT 'VSDE_PUTCURTHEO 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE VSDE_PUTCURTHEO (DE THEO) (PUTV DE 3 THEO)) 
(PUT 'VSDE_PUTBVL 'NUMBER-OF-ARGS 2) 
(PUT 'VSDE_PUTBVL 'DEFINED-ON-LINE '323) 
(PUT 'VSDE_PUTBVL 'DEFINED-IN-FILE 'REDLOG/OFSF/OFSFVSESET.RED) 
(PUT 'VSDE_PUTBVL 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE VSDE_PUTBVL (DE BVL) (PUTV DE 4 BVL)) 
(PUT 'VSDE_PUTPCL 'NUMBER-OF-ARGS 2) 
(PUT 'VSDE_PUTPCL 'DEFINED-ON-LINE '324) 
(PUT 'VSDE_PUTPCL 'DEFINED-IN-FILE 'REDLOG/OFSF/OFSFVSESET.RED) 
(PUT 'VSDE_PUTPCL 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE VSDE_PUTPCL (DE PCL) (PUTV DE 5 PCL)) 
(PUT 'VSDE_PUTTPL 'NUMBER-OF-ARGS 2) 
(PUT 'VSDE_PUTTPL 'DEFINED-ON-LINE '325) 
(PUT 'VSDE_PUTTPL 'DEFINED-IN-FILE 'REDLOG/OFSF/OFSFVSESET.RED) 
(PUT 'VSDE_PUTTPL 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE VSDE_PUTTPL (DE TPL) (PUTV DE 6 TPL)) 
(PUT 'VSDE_MK 'NUMBER-OF-ARGS 4) 
(DE VSDE_MK (VAR F THEO BVL)
    (PROG (DE)
      (SETQ DE (VSDE_NEW))
      (VSDE_PUTV DE VAR)
      (VSDE_PUTF DE F)
      (VSDE_PUTCURTHEO DE THEO)
      (VSDE_PUTBVL DE BVL)
      (VSDE_PUTPCL DE NIL)
      (VSDE_PUTTPL DE NIL)
      (RETURN DE))) 
(PUT 'VSDC_NEW 'NUMBER-OF-ARGS 0) 
(DE VSDC_NEW NIL
    (PROG (DC)
      (SETQ DC (MKVECT 6))
      (PUTV DC 0 'VSDC)
      (PUTV DC 1 'UNDEFINED)
      (PUTV DC 2 'UNDEFINED)
      (PUTV DC 3 'UNDEFINED)
      (PUTV DC 4 'UNDEFINED)
      (PUTV DC 5 'UNDEFINED)
      (PUTV DC 6 'UNDEFINED)
      (RETURN DC))) 
(PUT 'VSDC_V 'NUMBER-OF-ARGS 1) 
(PUT 'VSDC_V 'DEFINED-ON-LINE '357) 
(PUT 'VSDC_V 'DEFINED-IN-FILE 'REDLOG/OFSF/OFSFVSESET.RED) 
(PUT 'VSDC_V 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE VSDC_V (DC) (GETV DC 1)) 
(PUT 'VSDC_F 'NUMBER-OF-ARGS 1) 
(PUT 'VSDC_F 'DEFINED-ON-LINE '358) 
(PUT 'VSDC_F 'DEFINED-IN-FILE 'REDLOG/OFSF/OFSFVSESET.RED) 
(PUT 'VSDC_F 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE VSDC_F (DC) (GETV DC 2)) 
(PUT 'VSDC_BVL 'NUMBER-OF-ARGS 1) 
(PUT 'VSDC_BVL 'DEFINED-ON-LINE '359) 
(PUT 'VSDC_BVL 'DEFINED-IN-FILE 'REDLOG/OFSF/OFSFVSESET.RED) 
(PUT 'VSDC_BVL 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE VSDC_BVL (DC) (GETV DC 3)) 
(PUT 'VSDC_PTHEO 'NUMBER-OF-ARGS 1) 
(PUT 'VSDC_PTHEO 'DEFINED-ON-LINE '360) 
(PUT 'VSDC_PTHEO 'DEFINED-IN-FILE 'REDLOG/OFSF/OFSFVSESET.RED) 
(PUT 'VSDC_PTHEO 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE VSDC_PTHEO (DC) (GETV DC 4)) 
(PUT 'VSDC_TTHEO 'NUMBER-OF-ARGS 1) 
(PUT 'VSDC_TTHEO 'DEFINED-ON-LINE '361) 
(PUT 'VSDC_TTHEO 'DEFINED-IN-FILE 'REDLOG/OFSF/OFSFVSESET.RED) 
(PUT 'VSDC_TTHEO 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE VSDC_TTHEO (DC) (GETV DC 5)) 
(PUT 'VSDC_RES 'NUMBER-OF-ARGS 1) 
(PUT 'VSDC_RES 'DEFINED-ON-LINE '362) 
(PUT 'VSDC_RES 'DEFINED-IN-FILE 'REDLOG/OFSF/OFSFVSESET.RED) 
(PUT 'VSDC_RES 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE VSDC_RES (DC) (GETV DC 6)) 
(PUT 'VSDC_PUTV 'NUMBER-OF-ARGS 2) 
(PUT 'VSDC_PUTV 'DEFINED-ON-LINE '364) 
(PUT 'VSDC_PUTV 'DEFINED-IN-FILE 'REDLOG/OFSF/OFSFVSESET.RED) 
(PUT 'VSDC_PUTV 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE VSDC_PUTV (DC X) (PUTV DC 1 X)) 
(PUT 'VSDC_PUTF 'NUMBER-OF-ARGS 2) 
(PUT 'VSDC_PUTF 'DEFINED-ON-LINE '365) 
(PUT 'VSDC_PUTF 'DEFINED-IN-FILE 'REDLOG/OFSF/OFSFVSESET.RED) 
(PUT 'VSDC_PUTF 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE VSDC_PUTF (DC F) (PUTV DC 2 F)) 
(PUT 'VSDC_PUTBVL 'NUMBER-OF-ARGS 2) 
(PUT 'VSDC_PUTBVL 'DEFINED-ON-LINE '366) 
(PUT 'VSDC_PUTBVL 'DEFINED-IN-FILE 'REDLOG/OFSF/OFSFVSESET.RED) 
(PUT 'VSDC_PUTBVL 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE VSDC_PUTBVL (DC BVL) (PUTV DC 3 BVL)) 
(PUT 'VSDC_PUTPTHEO 'NUMBER-OF-ARGS 2) 
(PUT 'VSDC_PUTPTHEO 'DEFINED-ON-LINE '367) 
(PUT 'VSDC_PUTPTHEO 'DEFINED-IN-FILE 'REDLOG/OFSF/OFSFVSESET.RED) 
(PUT 'VSDC_PUTPTHEO 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE VSDC_PUTPTHEO (DC PTHEO) (PUTV DC 4 PTHEO)) 
(PUT 'VSDC_PUTTTHEO 'NUMBER-OF-ARGS 2) 
(PUT 'VSDC_PUTTTHEO 'DEFINED-ON-LINE '368) 
(PUT 'VSDC_PUTTTHEO 'DEFINED-IN-FILE 'REDLOG/OFSF/OFSFVSESET.RED) 
(PUT 'VSDC_PUTTTHEO 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE VSDC_PUTTTHEO (DC TTHEO) (PUTV DC 5 TTHEO)) 
(PUT 'VSDC_PUTRES 'NUMBER-OF-ARGS 2) 
(PUT 'VSDC_PUTRES 'DEFINED-ON-LINE '369) 
(PUT 'VSDC_PUTRES 'DEFINED-IN-FILE 'REDLOG/OFSF/OFSFVSESET.RED) 
(PUT 'VSDC_PUTRES 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE VSDC_PUTRES (DC RES) (PUTV DC 6 RES)) 
(PUT 'VSDC_MK 'NUMBER-OF-ARGS 5) 
(DE VSDC_MK (VAR F BVL PTHEO TTHEO)
    (PROG (DC)
      (SETQ DC (VSDC_NEW))
      (VSDC_PUTV DC VAR)
      (VSDC_PUTF DC F)
      (VSDC_PUTBVL DC BVL)
      (VSDC_PUTPTHEO DC PTHEO)
      (VSDC_PUTTTHEO DC TTHEO)
      (VSDC_PUTRES DC NIL)
      (RETURN DC))) 
(PUT 'VSDC_MKFROM 'NUMBER-OF-ARGS 1) 
(DE VSDC_MKFROM (DC)
    (PROG (NDC)
      (SETQ NDC (VSDC_NEW))
      (VSDC_PUTV NDC (VSDC_V DC))
      (VSDC_PUTF NDC (VSDC_F DC))
      (VSDC_PUTBVL NDC (VSDC_BVL DC))
      (VSDC_PUTPTHEO NDC (VSDC_PTHEO DC))
      (VSDC_PUTTTHEO NDC (VSDC_TTHEO DC))
      (VSDC_PUTRES NDC (VSDC_RES DC))
      (RETURN NDC))) 
(PUT 'VSDC_PTHEOINSERT 'NUMBER-OF-ARGS 2) 
(DE VSDC_PTHEOINSERT (DC F) (VSDC_PUTPTHEO DC (CONS F (VSDC_PTHEO DC)))) 
(PUT 'VSDC_TTHEOINSERT 'NUMBER-OF-ARGS 2) 
(DE VSDC_TTHEOINSERT (DC F) (VSDC_PUTTTHEO DC (CONS F (VSDC_TTHEO DC)))) 
(PUT 'VSDC_ADD2TTHEO 'NUMBER-OF-ARGS 3) 
(DE VSDC_ADD2TTHEO (DC FL NEG)
    (PROG (F)
      (SETQ F FL)
     LAB
      (COND ((NULL F) (RETURN NIL)))
      ((LAMBDA (F)
         (COND
          ((AND
            (NOT
             ((LAMBDA (X)
                (OR (OR (OR (EQ X 'OR) (EQ X 'AND)) (EQ X 'NOT))
                    (OR (EQ X 'IMPL) (EQ X 'REPL) (EQ X 'EQUIV))))
              (COND ((ATOM F) F) (T (CAR F)))))
            (NOT (OR (EQ F 'TRUE) (EQ F 'FALSE)))
            (NOT (MEMQ (VSDC_V DC) (CL_FVARL F))))
           (VSDC_TTHEOINSERT DC (COND (NEG (RL_NEGATEAT F)) (T F))))))
       (CAR F))
      (SETQ F (CDR F))
      (GO LAB))) 
(PUT 'VSDE_COMPUTE 'NUMBER-OF-ARGS 1) 
(DE VSDE_COMPUTE (DE)
    (PROG ()
      (VS_APPLYFN 'FN_PC-DECOMPOSITION (LIST DE))
      (COND ((NULL (VSDE_PCL DE)) (PROGN (VSDE_PUTTPL DE NIL) (RETURN NIL))))
      (VSDE_SELECT-BOUNDS DE)
      (VSDE_PCL2TPL DE)
      (VSDE_CONFLATE-TPL DE))) 
(PUT 'VSDE_PC-DECOMPOSITION 'NUMBER-OF-ARGS 1) 
(DE VSDE_PC-DECOMPOSITION (DE)
    (PROG (F GL CGL ATL GPOSL PC PCL)
      (SETQ F (VSDE_F DE))
      (SETQ GL
              (QFF_GAUSSPOSL (VSDE_V DE) F NIL (VSDE_BVL DE)
               (VSDE_CURTHEO DE)))
      (COND ((VSDE_FAILEDALP GL) (SETQ GL NIL))
            (T
             (SETQ F
                     (QFF_REPLACEL F
                      (PROG (PR FORALL-RESULT FORALL-ENDPTR)
                        (SETQ PR GL)
                        (COND ((NULL PR) (RETURN NIL)))
                        (SETQ FORALL-RESULT
                                (SETQ FORALL-ENDPTR
                                        (CONS ((LAMBDA (PR) (CAR PR)) (CAR PR))
                                              NIL)))
                       LOOPLABEL
                        (SETQ PR (CDR PR))
                        (COND ((NULL PR) (RETURN FORALL-RESULT)))
                        (RPLACD FORALL-ENDPTR
                                (CONS ((LAMBDA (PR) (CAR PR)) (CAR PR)) NIL))
                        (SETQ FORALL-ENDPTR (CDR FORALL-ENDPTR))
                        (GO LOOPLABEL))
                      'FALSE))))
      (SETQ CGL
              (QFF_COGAUSSPOSL (VSDE_V DE) F NIL (VSDE_BVL DE)
               (VSDE_CURTHEO DE)))
      (COND ((VSDE_FAILEDALP CGL) (PROGN (VSDE_PUTPCL DE NIL) (RETURN NIL))))
      (SETQ GL (POS_DELSUBPOSAL CGL GL))
      (SETQ F
              (QFF_REPLACEL F
               (PROG (PR FORALL-RESULT FORALL-ENDPTR)
                 (SETQ PR CGL)
                 (COND ((NULL PR) (RETURN NIL)))
                 (SETQ FORALL-RESULT
                         (SETQ FORALL-ENDPTR
                                 (CONS ((LAMBDA (PR) (CAR PR)) (CAR PR)) NIL)))
                LOOPLABEL
                 (SETQ PR (CDR PR))
                 (COND ((NULL PR) (RETURN FORALL-RESULT)))
                 (RPLACD FORALL-ENDPTR
                         (CONS ((LAMBDA (PR) (CAR PR)) (CAR PR)) NIL))
                 (SETQ FORALL-ENDPTR (CDR FORALL-ENDPTR))
                 (GO LOOPLABEL))
               'FALSE))
      (SETQ ATL (QFF_ATPOSL (VSDE_V DE) F NIL (VSDE_BVL DE) (VSDE_CURTHEO DE)))
      (COND ((VSDE_FAILEDALP ATL) (PROGN (VSDE_PUTPCL DE NIL) (RETURN NIL))))
      (PROG (PR)
        (SETQ PR ATL)
       LAB
        (COND ((NULL PR) (RETURN NIL)))
        ((LAMBDA (PR)
           (PROGN
            (SETQ PC (VSPC_MK (CAR PR) 'AT (CDR PR) GPOSL NIL))
            (PROGN (SETQ PCL (CONS PC PCL)) PC)))
         (CAR PR))
        (SETQ PR (CDR PR))
        (GO LAB))
      (PROG (PR)
        (SETQ PR CGL)
       LAB
        (COND ((NULL PR) (RETURN NIL)))
        ((LAMBDA (PR)
           (PROGN
            (SETQ PC (VSPC_MK (CAR PR) 'COGAUSS (CDR PR) GPOSL NIL))
            (PROGN (SETQ PCL (CONS PC PCL)) PC)))
         (CAR PR))
        (SETQ PR (CDR PR))
        (GO LAB))
      (PROG (PR)
        (SETQ PR GL)
       LAB
        (COND ((NULL PR) (RETURN NIL)))
        ((LAMBDA (PR)
           (PROGN
            (SETQ PC (VSPC_MK (CAR PR) 'GAUSS (CDR PR) GPOSL NIL))
            (PROGN (SETQ PCL (CONS PC PCL)) PC)
            (PROG (W1)
              (SETQ W1 (CAR PR))
              (SETQ GPOSL (CONS W1 GPOSL))
              (RETURN W1))))
         (CAR PR))
        (SETQ PR (CDR PR))
        (GO LAB))
      (VSDE_PUTPCL DE PCL))) 
(PUT 'VSDE_FAILEDALP 'NUMBER-OF-ARGS 1) 
(DE VSDE_FAILEDALP (AL) (AND AL (NULL (CAAR AL)) (VSCS_FAILEDP (CDAR AL)))) 
(PUT 'QFF_GAUSSPOSL 'NUMBER-OF-ARGS 5) 
(DE QFF_GAUSSPOSL (VAR F P BVL THEO)
    (PROG (GDC)
      (SETQ GDC (VSDC_MK VAR F BVL THEO NIL))
      (VSDC_GAUSSPOSL GDC P)
      (RETURN
       (PROG (PR FORALL-RESULT FORALL-ENDPTR)
         (SETQ PR (VSDC_RES GDC))
         (COND ((NULL PR) (RETURN NIL)))
         (SETQ FORALL-RESULT
                 (SETQ FORALL-ENDPTR
                         (CONS
                          ((LAMBDA (PR) (CONS (REVERSE (CAR PR)) (CDR PR)))
                           (CAR PR))
                          NIL)))
        LOOPLABEL
         (SETQ PR (CDR PR))
         (COND ((NULL PR) (RETURN FORALL-RESULT)))
         (RPLACD FORALL-ENDPTR
                 (CONS
                  ((LAMBDA (PR) (CONS (REVERSE (CAR PR)) (CDR PR))) (CAR PR))
                  NIL))
         (SETQ FORALL-ENDPTR (CDR FORALL-ENDPTR))
         (GO LOOPLABEL))))) 
(PUT 'QFF_COGAUSSPOSL 'NUMBER-OF-ARGS 5) 
(DE QFF_COGAUSSPOSL (VAR F P BVL THEO)
    (PROG (CGDC)
      (SETQ CGDC (VSDC_MK VAR F BVL THEO NIL))
      (VSDC_COGAUSSPOSL CGDC P)
      (RETURN
       (PROG (PR FORALL-RESULT FORALL-ENDPTR)
         (SETQ PR (VSDC_RES CGDC))
         (COND ((NULL PR) (RETURN NIL)))
         (SETQ FORALL-RESULT
                 (SETQ FORALL-ENDPTR
                         (CONS
                          ((LAMBDA (PR) (CONS (REVERSE (CAR PR)) (CDR PR)))
                           (CAR PR))
                          NIL)))
        LOOPLABEL
         (SETQ PR (CDR PR))
         (COND ((NULL PR) (RETURN FORALL-RESULT)))
         (RPLACD FORALL-ENDPTR
                 (CONS
                  ((LAMBDA (PR) (CONS (REVERSE (CAR PR)) (CDR PR))) (CAR PR))
                  NIL))
         (SETQ FORALL-ENDPTR (CDR FORALL-ENDPTR))
         (GO LOOPLABEL))))) 
(PUT 'QFF_ATPOSL 'NUMBER-OF-ARGS 5) 
(DE QFF_ATPOSL (VAR F P BVL THEO)
    (PROG (ATDC)
      (SETQ ATDC (VSDC_MK VAR F BVL THEO NIL))
      (VSDC_ATPOSL ATDC P)
      (RETURN
       (PROG (PR FORALL-RESULT FORALL-ENDPTR)
         (SETQ PR (VSDC_RES ATDC))
         (COND ((NULL PR) (RETURN NIL)))
         (SETQ FORALL-RESULT
                 (SETQ FORALL-ENDPTR
                         (CONS
                          ((LAMBDA (PR) (CONS (REVERSE (CAR PR)) (CDR PR)))
                           (CAR PR))
                          NIL)))
        LOOPLABEL
         (SETQ PR (CDR PR))
         (COND ((NULL PR) (RETURN FORALL-RESULT)))
         (RPLACD FORALL-ENDPTR
                 (CONS
                  ((LAMBDA (PR) (CONS (REVERSE (CAR PR)) (CDR PR))) (CAR PR))
                  NIL))
         (SETQ FORALL-ENDPTR (CDR FORALL-ENDPTR))
         (GO LOOPLABEL))))) 
(PUT 'QFF_REPLACEL 'NUMBER-OF-ARGS 3) 
(DE QFF_REPLACEL (F PL RF)
    (PROG (OP NCL POSCL N)
      (SETQ N 0)
      (COND ((NULL PL) (RETURN F)))
      (COND ((EQUAL PL (LIST NIL)) (RETURN RF)))
      (SETQ OP (COND ((ATOM F) F) (T (CAR F))))
      (COND (NIL NIL))
      (SETQ NCL
              (PROG (C FORALL-RESULT FORALL-ENDPTR)
                (SETQ C (CDR F))
                (COND ((NULL C) (RETURN NIL)))
                (SETQ FORALL-RESULT
                        (SETQ FORALL-ENDPTR
                                (CONS
                                 ((LAMBDA (C)
                                    (PROGN
                                     (SETQ N (PLUS N 1))
                                     (SETQ POSCL
                                             (PROG (P FORALL-RESULT
                                                    FORALL-ENDPTR)
                                               (SETQ P PL)
                                              STARTOVER
                                               (COND ((NULL P) (RETURN NIL)))
                                               (SETQ FORALL-RESULT
                                                       ((LAMBDA (P)
                                                          (COND
                                                           ((EQN (CAR P) N)
                                                            (LIST (CDR P)))))
                                                        (CAR P)))
                                               (SETQ FORALL-ENDPTR
                                                       (LASTPAIR
                                                        FORALL-RESULT))
                                               (SETQ P (CDR P))
                                               (COND
                                                ((ATOM FORALL-ENDPTR)
                                                 (GO STARTOVER)))
                                              LOOPLABEL
                                               (COND
                                                ((NULL P)
                                                 (RETURN FORALL-RESULT)))
                                               (RPLACD FORALL-ENDPTR
                                                       ((LAMBDA (P)
                                                          (COND
                                                           ((EQN (CAR P) N)
                                                            (LIST (CDR P)))))
                                                        (CAR P)))
                                               (SETQ FORALL-ENDPTR
                                                       (LASTPAIR
                                                        FORALL-ENDPTR))
                                               (SETQ P (CDR P))
                                               (GO LOOPLABEL)))
                                     (QFF_REPLACEL C POSCL RF)))
                                  (CAR C))
                                 NIL)))
               LOOPLABEL
                (SETQ C (CDR C))
                (COND ((NULL C) (RETURN FORALL-RESULT)))
                (RPLACD FORALL-ENDPTR
                        (CONS
                         ((LAMBDA (C)
                            (PROGN
                             (SETQ N (PLUS N 1))
                             (SETQ POSCL
                                     (PROG (P FORALL-RESULT FORALL-ENDPTR)
                                       (SETQ P PL)
                                      STARTOVER
                                       (COND ((NULL P) (RETURN NIL)))
                                       (SETQ FORALL-RESULT
                                               ((LAMBDA (P)
                                                  (COND
                                                   ((EQN (CAR P) N)
                                                    (LIST (CDR P)))))
                                                (CAR P)))
                                       (SETQ FORALL-ENDPTR
                                               (LASTPAIR FORALL-RESULT))
                                       (SETQ P (CDR P))
                                       (COND
                                        ((ATOM FORALL-ENDPTR) (GO STARTOVER)))
                                      LOOPLABEL
                                       (COND ((NULL P) (RETURN FORALL-RESULT)))
                                       (RPLACD FORALL-ENDPTR
                                               ((LAMBDA (P)
                                                  (COND
                                                   ((EQN (CAR P) N)
                                                    (LIST (CDR P)))))
                                                (CAR P)))
                                       (SETQ FORALL-ENDPTR
                                               (LASTPAIR FORALL-ENDPTR))
                                       (SETQ P (CDR P))
                                       (GO LOOPLABEL)))
                             (QFF_REPLACEL C POSCL RF)))
                          (CAR C))
                         NIL))
                (SETQ FORALL-ENDPTR (CDR FORALL-ENDPTR))
                (GO LOOPLABEL)))
      (RETURN (CONS OP NCL)))) 
(PUT 'VSDC_GAUSSPOSL 'NUMBER-OF-ARGS 2) 
(DE VSDC_GAUSSPOSL (DC P)
    (PROG (OP)
      (SETQ OP ((LAMBDA (F) (COND ((ATOM F) F) (T (CAR F)))) (VSDC_F DC)))
      (COND
       ((NOT
         (OR (OR (OR (EQ OP 'OR) (EQ OP 'AND)) (EQ OP 'NOT))
             (OR (EQ OP 'IMPL) (EQ OP 'REPL) (EQ OP 'EQUIV))))
        (PROGN (VSDC_GAUSSPOSL-AT DC P) (RETURN NIL))))
      (COND (NIL NIL))
      (COND ((EQ OP 'AND) (VSDC_GAUSSPOSL-AND DC P)))
      (COND ((EQ OP 'OR) (VSDC_GAUSSPOSL-OR DC P))))) 
(PUT 'VSDC_GAUSSPOSL-AT 'NUMBER-OF-ARGS 2) 
(DE VSDC_GAUSSPOSL-AT (DC P)
    (PROG (ATF OP LHS V CS THEO W FML F M)
      (SETQ M 0)
      (SETQ ATF (VSDC_F DC))
      (COND
       ((OR (EQ ATF 'TRUE) (EQ ATF 'FALSE))
        (PROGN (VSDC_PUTRES DC NIL) (RETURN NIL))))
      (SETQ OP (COND ((ATOM ATF) ATF) (T (CAR ATF))))
      (SETQ LHS (CADR ATF))
      (SETQ V (VSDC_V DC))
      (COND
       ((AND (EQ OP 'EQUAL) (SFTO_MVARTEST LHS V))
        (PROGN
         (SETQ CS (VSCS_MK NIL NIL))
         (SETQ THEO (APPEND (VSDC_PTHEO DC) (VSDC_TTHEO DC)))
         (SETQ W (FCTRF LHS))
         (SETQ FML (CDR W))
         (PROG ()
          WHILELABEL
           (COND ((NOT (AND FML CS)) (RETURN NIL)))
           (PROGN
            (PROG (G547)
              (SETQ G547 (PROG1 (CAR FML) (SETQ FML (CDR FML))))
              (SETQ F (CAR G547))
              (SETQ M (CDR G547))
              (RETURN G547))
            (COND ((NOT (OFSF_NONVANISHP F V THEO)) (SETQ CS NIL))
                  ((SFTO_MVARTEST F V)
                   (SETQ CS (VSCS_MERGE CS (VSCS_OPF2CS OP F V THEO))))))
           (GO WHILELABEL)))))
      (COND (CS (VSDC_PUTRES DC (LIST (CONS P CS)))) (T (VSDC_PUTRES DC NIL))))) 
(PUT 'VSDC_GAUSSPOSL-AND 'NUMBER-OF-ARGS 2) 
(DE VSDC_GAUSSPOSL-AND (DC P)
    (PROG (CL C CDC PCL CAL CDCGL CDCL AL I)
      (SETQ I 0)
      (COND (NIL NIL))
      (SETQ CL (CDR (VSDC_F DC)))
      (PROG ()
       WHILELABEL
        (COND ((NOT CL) (RETURN NIL)))
        (PROGN
         (SETQ C (PROG1 (CAR CL) (SETQ CL (CDR CL))))
         (SETQ I (PLUS I 1))
         (SETQ CDC (VSDC_MKFROM DC))
         (VSDC_PUTF CDC C)
         (VSDC_ADD2TTHEO CDC (APPEND PCL CL) NIL)
         (VSDC_GAUSSPOSL CDC (CONS I P))
         (SETQ CAL (VSDC_RES CDC))
         (COND
          (CAL
           (COND
            ((EQUAL (CAAR CAL) (CONS I P))
             (PROGN (SETQ CDCGL (CONS CDC CDCGL)) CDC))
            (T (PROGN (SETQ CDCL (CONS CDC CDCL)) CDC)))))
         (PROGN (SETQ PCL (CONS C PCL)) C))
        (GO WHILELABEL))
      (COND
       (CDCGL
        (PROGN
         (SETQ CAL (VSDC_RES (VSDC_GAUSSPOSL-BESTCDC DC P (REVERSIP CDCGL))))
         (SETQ AL (LIST (CONS P (CDAR CAL))))))
       (T
        (PROG (CDC)
          (SETQ CDC CDCL)
         LAB
          (COND ((NULL CDC) (RETURN NIL)))
          ((LAMBDA (CDC) (SETQ AL (APPEND AL (VSDC_RES CDC)))) (CAR CDC))
          (SETQ CDC (CDR CDC))
          (GO LAB))))
      (VSDC_PUTRES DC AL))) 
(PUT 'VSDC_GAUSSPOSL-OR 'NUMBER-OF-ARGS 2) 
(DE VSDC_GAUSSPOSL-OR (DC P)
    (PROG (G CL FLD C CDC PCL CAL AL CS I)
      (SETQ I 0)
      (COND (NIL NIL))
      (SETQ G T)
      (SETQ CL (CDR (VSDC_F DC)))
      (PROG ()
       WHILELABEL
        (COND ((NOT (AND CL (NOT FLD))) (RETURN NIL)))
        (PROGN
         (SETQ C (PROG1 (CAR CL) (SETQ CL (CDR CL))))
         (SETQ I (PLUS I 1))
         (SETQ CDC (VSDC_MKFROM DC))
         (VSDC_PUTF CDC C)
         (VSDC_ADD2TTHEO CDC (APPEND PCL CL) T)
         (VSDC_GAUSSPOSL CDC (CONS I P))
         (SETQ CAL (VSDC_RES CDC))
         (COND
          ((OR (NULL CAL) (NOT (EQUAL (CAAR CAL) (CONS I P)))) (SETQ G NIL))
          ((VSCS_FAILEDP (CDAR CAL)) (SETQ FLD T)))
         (SETQ AL (APPEND AL CAL))
         (PROGN (SETQ PCL (CONS C PCL)) C)
         NIL)
        (GO WHILELABEL))
      (COND
       (FLD
        (PROGN
         (VSDC_PUTRES DC (LIST (CONS P (VSCS_MK NIL 'FAILED))))
         (RETURN NIL))))
      (COND
       (G
        (PROGN
         (SETQ CS (VSCS_MK NIL NIL))
         (PROG (E)
           (SETQ E AL)
          LAB
           (COND ((NULL E) (RETURN NIL)))
           ((LAMBDA (E) (SETQ CS (VSCS_MERGE CS (CDR E)))) (CAR E))
           (SETQ E (CDR E))
           (GO LAB))
         (SETQ AL (LIST (CONS P CS))))))
      (VSDC_PUTRES DC AL))) 
(PUT 'VSDC_GAUSSPOSL-BESTCDC 'NUMBER-OF-ARGS 3) 
(DE VSDC_GAUSSPOSL-BESTCDC (DC P CDCGL)
    (PROG (FLD W)
      (SETQ FLD T)
      (PROG ()
       WHILELABEL
        (COND ((NOT (AND FLD CDCGL)) (RETURN NIL)))
        (PROGN
         (SETQ W (PROG1 (CAR CDCGL) (SETQ CDCGL (CDR CDCGL))))
         (COND ((NOT (VSCS_FAILEDP (CDAR (VSDC_RES W)))) (SETQ FLD NIL)))
         NIL)
        (GO WHILELABEL))
      (RETURN W))) 
(PUT 'VSDC_COGAUSSPOSL 'NUMBER-OF-ARGS 2) 
(DE VSDC_COGAUSSPOSL (DC P)
    (PROG (OP)
      (SETQ OP ((LAMBDA (F) (COND ((ATOM F) F) (T (CAR F)))) (VSDC_F DC)))
      (COND
       ((NOT
         (OR (OR (OR (EQ OP 'OR) (EQ OP 'AND)) (EQ OP 'NOT))
             (OR (EQ OP 'IMPL) (EQ OP 'REPL) (EQ OP 'EQUIV))))
        (PROGN (VSDC_COGAUSSPOSL-AT DC P) (RETURN NIL))))
      (COND (NIL NIL))
      (COND ((EQ OP 'AND) (VSDC_COGAUSSPOSL-AND DC P)))
      (COND ((EQ OP 'OR) (VSDC_COGAUSSPOSL-OR DC P))))) 
(PUT 'VSDC_COGAUSSPOSL-AT 'NUMBER-OF-ARGS 2) 
(DE VSDC_COGAUSSPOSL-AT (DC P)
    (PROG (ATF OP LHS V CS THEO W FML F M)
      (SETQ M 0)
      (SETQ ATF (VSDC_F DC))
      (COND
       ((OR (EQ ATF 'TRUE) (EQ ATF 'FALSE))
        (PROGN (VSDC_PUTRES DC NIL) (RETURN NIL))))
      (SETQ OP (COND ((ATOM ATF) ATF) (T (CAR ATF))))
      (SETQ LHS (CADR ATF))
      (SETQ V (VSDC_V DC))
      (COND
       ((AND (EQ OP 'NEQ) (SFTO_MVARTEST LHS V))
        (PROGN
         (SETQ CS (VSCS_MK NIL NIL))
         (SETQ THEO (APPEND (VSDC_PTHEO DC) (VSDC_TTHEO DC)))
         (SETQ W (FCTRF LHS))
         (SETQ FML (CDR W))
         (PROG ()
          WHILELABEL
           (COND ((NOT (AND FML CS)) (RETURN NIL)))
           (PROGN
            (PROG (G548)
              (SETQ G548 (PROG1 (CAR FML) (SETQ FML (CDR FML))))
              (SETQ F (CAR G548))
              (SETQ M (CDR G548))
              (RETURN G548))
            (COND ((NOT (OFSF_NONVANISHP F V THEO)) (SETQ CS NIL))
                  ((SFTO_MVARTEST F V)
                   (SETQ CS (VSCS_MERGE CS (VSCS_OPF2CS OP F V THEO))))))
           (GO WHILELABEL)))))
      (COND (CS (VSDC_PUTRES DC (LIST (CONS P CS)))) (T (VSDC_PUTRES DC NIL))))) 
(PUT 'VSDC_COGAUSSPOSL-AND 'NUMBER-OF-ARGS 2) 
(DE VSDC_COGAUSSPOSL-AND (DC P)
    (PROG (G CL FLD C CDC PCL CAL AL CS I)
      (SETQ I 0)
      (COND (NIL NIL))
      (SETQ G T)
      (SETQ CL (CDR (VSDC_F DC)))
      (PROG ()
       WHILELABEL
        (COND ((NOT CL) (RETURN NIL)))
        (PROGN
         (SETQ C (PROG1 (CAR CL) (SETQ CL (CDR CL))))
         (SETQ I (PLUS I 1))
         (SETQ CDC (VSDC_MKFROM DC))
         (VSDC_PUTF CDC C)
         (VSDC_ADD2TTHEO CDC (APPEND PCL CL) NIL)
         (VSDC_COGAUSSPOSL CDC (CONS I P))
         (SETQ CAL (VSDC_RES CDC))
         (COND
          ((OR (NULL CAL) (NOT (EQUAL (CAAR CAL) (CONS I P)))) (SETQ G NIL))
          ((VSCS_FAILEDP (CDAR CAL)) (SETQ FLD T)))
         (SETQ AL (APPEND AL CAL))
         (PROGN (SETQ PCL (CONS C PCL)) C))
        (GO WHILELABEL))
      (COND
       (FLD
        (PROGN
         (VSDC_PUTRES DC (LIST (CONS P (VSCS_MK NIL 'FAILED))))
         (RETURN NIL))))
      (COND
       (G
        (PROGN
         (SETQ CS (VSCS_MK NIL NIL))
         (PROG (E)
           (SETQ E AL)
          LAB
           (COND ((NULL E) (RETURN NIL)))
           ((LAMBDA (E) (SETQ CS (VSCS_MERGE CS (CDR E)))) (CAR E))
           (SETQ E (CDR E))
           (GO LAB))
         (SETQ AL (LIST (CONS P CS))))))
      (VSDC_PUTRES DC AL))) 
(PUT 'VSDC_COGAUSSPOSL-OR 'NUMBER-OF-ARGS 2) 
(DE VSDC_COGAUSSPOSL-OR (DC P)
    (PROG (CL C CDC PCL CAL CDCGL CDCL AL I)
      (SETQ I 0)
      (COND (NIL NIL))
      (SETQ CL (CDR (VSDC_F DC)))
      (PROG ()
       WHILELABEL
        (COND ((NOT CL) (RETURN NIL)))
        (PROGN
         (SETQ C (PROG1 (CAR CL) (SETQ CL (CDR CL))))
         (SETQ I (PLUS I 1))
         (SETQ CDC (VSDC_MKFROM DC))
         (VSDC_PUTF CDC C)
         (VSDC_ADD2TTHEO CDC (APPEND PCL CL) T)
         (VSDC_COGAUSSPOSL CDC (CONS I P))
         (SETQ CAL (VSDC_RES CDC))
         (COND
          (CAL
           (COND
            ((EQUAL (CAAR CAL) (CONS I P))
             (PROGN (SETQ CDCGL (CONS CDC CDCGL)) CDC))
            (T (PROGN (SETQ CDCL (CONS CDC CDCL)) CDC)))))
         (PROGN (SETQ PCL (CONS C PCL)) C))
        (GO WHILELABEL))
      (COND
       (CDCGL
        (PROGN
         (SETQ CAL (VSDC_RES (VSDC_COGAUSSPOSL-BESTCDC DC P (REVERSIP CDCGL))))
         (SETQ AL (LIST (CONS P (CDAR CAL))))))
       (T
        (PROG (CDC)
          (SETQ CDC CDCL)
         LAB
          (COND ((NULL CDC) (RETURN NIL)))
          ((LAMBDA (CDC) (SETQ AL (APPEND AL (VSDC_RES CDC)))) (CAR CDC))
          (SETQ CDC (CDR CDC))
          (GO LAB))))
      (VSDC_PUTRES DC AL))) 
(PUT 'VSDC_COGAUSSPOSL-BESTCDC 'NUMBER-OF-ARGS 3) 
(DE VSDC_COGAUSSPOSL-BESTCDC (DC P CDCGL)
    (PROG (FLD W)
      (SETQ FLD T)
      (PROG ()
       WHILELABEL
        (COND ((NOT (AND FLD CDCGL)) (RETURN NIL)))
        (PROGN
         (SETQ W (PROG1 (CAR CDCGL) (SETQ CDCGL (CDR CDCGL))))
         (COND ((NOT (VSCS_FAILEDP (CDAR (VSDC_RES W)))) (SETQ FLD NIL)))
         NIL)
        (GO WHILELABEL))
      (RETURN W))) 
(PUT 'VSDC_ATPOSL 'NUMBER-OF-ARGS 2) 
(DE VSDC_ATPOSL (DC P)
    (PROG (OP CL FLD C CDC PCL CAL AL I)
      (SETQ I 0)
      (SETQ OP ((LAMBDA (F) (COND ((ATOM F) F) (T (CAR F)))) (VSDC_F DC)))
      (COND
       ((NOT
         (OR (OR (OR (EQ OP 'OR) (EQ OP 'AND)) (EQ OP 'NOT))
             (OR (EQ OP 'IMPL) (EQ OP 'REPL) (EQ OP 'EQUIV))))
        (PROGN (VSDC_ATPOSL-AT DC P) (RETURN NIL))))
      (COND (NIL NIL))
      (SETQ CL (CDR (VSDC_F DC)))
      (PROG ()
       WHILELABEL
        (COND ((NOT (AND CL (NOT FLD))) (RETURN NIL)))
        (PROGN
         (SETQ C (PROG1 (CAR CL) (SETQ CL (CDR CL))))
         (SETQ I (PLUS I 1))
         (SETQ CDC (VSDC_MKFROM DC))
         (VSDC_PUTF CDC C)
         (VSDC_ADD2TTHEO CDC (APPEND PCL CL) (EQ OP 'OR))
         (VSDC_ATPOSL CDC (CONS I P))
         (SETQ CAL (VSDC_RES CDC))
         (COND
          ((AND CAL (EQUAL (CAAR CAL) (CONS I P)) (VSCS_FAILEDP (CDAR CAL)))
           (SETQ FLD T)))
         (SETQ AL (APPEND AL CAL))
         (PROGN (SETQ PCL (CONS C PCL)) C))
        (GO WHILELABEL))
      (COND
       (FLD
        (PROGN
         (VSDC_PUTRES DC (LIST (CONS P (VSCS_MK NIL 'FAILED))))
         (RETURN NIL))))
      (VSDC_PUTRES DC AL))) 
(PUT 'VSDC_ATPOSL-AT 'NUMBER-OF-ARGS 2) 
(DE VSDC_ATPOSL-AT (DC P)
    (PROG (ATF OP LHS V THEO W OPFL)
      (SETQ ATF (VSDC_F DC))
      (COND
       ((OR (EQ ATF 'TRUE) (EQ ATF 'FALSE))
        (PROGN (VSDC_PUTRES DC NIL) (RETURN NIL))))
      (SETQ OP (COND ((ATOM ATF) ATF) (T (CAR ATF))))
      (SETQ LHS (CADR ATF))
      (SETQ V (VSDC_V DC))
      (COND
       ((NOT (SFTO_MVARTEST LHS V)) (PROGN (VSDC_PUTRES DC NIL) (RETURN NIL))))
      (SETQ THEO (APPEND (VSDC_PTHEO DC) (VSDC_TTHEO DC)))
      (SETQ W (FCTRF LHS))
      (SETQ OPFL (OFSF_OPFML2OPFL OP (CONS (CONS (CAR W) 1) (CDR W)) V THEO))
      (VSDC_PUTRES DC (LIST (CONS P (VSCS_OPFL2CS OPFL V THEO)))))) 
(PUT 'OFSF_OPFML2OPFL 'NUMBER-OF-ARGS 4) 
(DE OFSF_OPFML2OPFL (OP FML X THEO)
    (PROG (FMXL FMNXL S F WOP OPFL M)
      (SETQ M 0)
      (PROG (G549)
        (SETQ G549 (OFSF_SEPFAC FML X))
        (SETQ FMXL (CAR G549))
        (SETQ FMNXL (CDR G549))
        (RETURN G549))
      (COND (NIL NIL))
      (COND
       ((MEMQ OP '(EQUAL NEQ))
        (RETURN
         (PROG (FMX FORALL-RESULT FORALL-ENDPTR)
           (SETQ FMX FMXL)
           (COND ((NULL FMX) (RETURN NIL)))
           (SETQ FORALL-RESULT
                   (SETQ FORALL-ENDPTR
                           (CONS ((LAMBDA (FMX) (CONS OP (CAR FMX))) (CAR FMX))
                                 NIL)))
          LOOPLABEL
           (SETQ FMX (CDR FMX))
           (COND ((NULL FMX) (RETURN FORALL-RESULT)))
           (RPLACD FORALL-ENDPTR
                   (CONS ((LAMBDA (FMX) (CONS OP (CAR FMX))) (CAR FMX)) NIL))
           (SETQ FORALL-ENDPTR (CDR FORALL-ENDPTR))
           (GO LOOPLABEL)))))
      (COND (NIL NIL))
      (COND
       ((NULL (CDR FMXL))
        (PROGN
         (SETQ S (OFSF_DEFINITE FMNXL THEO))
         (COND
          (S
           (PROGN
            (PROG (G550)
              (SETQ G550 (CAR FMXL))
              (SETQ F (CAR G550))
              (SETQ M (CDR G550))
              (RETURN G550))
            (SETQ OP (OFSF_ADJUSTOP OP S))
            (COND
             ((EVENP M)
              (SETQ OP (COND ((EQ OP 'GREATERP) 'NEQ) ((EQ OP 'LEQ) 'EQUAL)))))
            (RETURN (COND (OP (LIST (CONS OP F))) (T NIL)))))))))
      (PROG ()
       WHILELABEL
        (COND ((NOT FMXL) (RETURN NIL)))
        (PROGN
         (PROG (G551)
           (SETQ G551 (PROG1 (CAR FMXL) (SETQ FMXL (CDR FMXL))))
           (SETQ F (CAR G551))
           (SETQ M (CDR G551))
           (RETURN G551))
         (COND
          ((EVENP M)
           (PROGN
            (SETQ WOP (COND ((MEMQ OP '(LEQ GEQ)) 'EQUAL) (T 'NEQ)))
            (PROG (W1)
              (SETQ W1 (CONS WOP F))
              (SETQ OPFL (CONS W1 OPFL))
              (RETURN W1))))
          (T
           (PROGN
            (PROG (W1)
              (SETQ W1 (CONS OP F))
              (SETQ OPFL (CONS W1 OPFL))
              (RETURN W1))
            (PROG (W1)
              (SETQ W1 (CONS (OFSF_ADJUSTOP OP (MINUS 1)) F))
              (SETQ OPFL (CONS W1 OPFL))
              (RETURN W1))))))
        (GO WHILELABEL))
      (RETURN OPFL))) 
(PUT 'VSCS_OPFL2CS 'NUMBER-OF-ARGS 3) 
(DE VSCS_OPFL2CS (OPFL X THEO)
    (PROG (CS OP F)
      (SETQ CS (VSCS_MK NIL NIL))
      (PROG ()
       WHILELABEL
        (COND ((NOT OPFL) (RETURN NIL)))
        (PROGN
         (PROG (G552)
           (SETQ G552 (PROG1 (CAR OPFL) (SETQ OPFL (CDR OPFL))))
           (SETQ OP (CAR G552))
           (SETQ F (CDR G552))
           (RETURN G552))
         (SETQ CS (VSCS_MERGE CS (VSCS_OPF2CS OP F X THEO))))
        (GO WHILELABEL))
      (RETURN CS))) 
(PUT 'VSCS_OPF2CS 'NUMBER-OF-ARGS 4) 
(DE VSCS_OPF2CS (OP F X THEO)
    (PROG (LCF FINISHED CS C CL)
      (COND (NIL NIL))
      (SETQ CS (VSCS_MK NIL NIL))
      (PROG ()
       REPEATLABEL
        (PROGN
         (COND
          ((SFTO_MVARTEST F X)
           (PROGN
            (SETQ LCF (CDAR F))
            (COND
             ((OFSF_SUREP (LIST 'GREATERP LCF NIL) THEO)
              (PROGN
               (SETQ FINISHED T)
               (SETQ CS (VSCS_MERGE CS (VSCS_OPF2CSNZ OP F X 1 CL)))))
             ((OFSF_SUREP (LIST 'LESSP LCF NIL) THEO)
              (PROGN
               (SETQ FINISHED T)
               (SETQ CS (VSCS_MERGE CS (VSCS_OPF2CSNZ OP F X (MINUS 1) CL)))))
             ((NOT (OFSF_SUREP (LIST 'EQUAL LCF NIL) THEO))
              (PROGN
               (SETQ CS (VSCS_MERGE CS (VSCS_OPF2CSNZ OP F X NIL CL)))
               (SETQ C (LIST 'EQUAL LCF NIL))
               (PROGN (SETQ THEO (CONS C THEO)) C)
               (PROGN (SETQ CL (CONS C CL)) C))))
            (SETQ F (CDR F))))
          (T (SETQ FINISHED T))))
        (COND ((NOT FINISHED) (GO REPEATLABEL))))
      (RETURN CS))) 
(PUT 'VSCS_OPF2CSNZ 'NUMBER-OF-ARGS 5) 
(DE VSCS_OPF2CSNZ (OP F X S CL)
    (PROG (W PRAL D)
      (SETQ D 0)
      (COND (NIL NIL))
      (SETQ D (CDAAR F))
      (SETQ W (VSUB_COMPUTE-RSL OP F X S))
      (COND ((EQ W 'FAILED) (RETURN (VSCS_MK NIL 'FAILED))))
      (SETQ PRAL
              (PROG (PR FORALL-RESULT FORALL-ENDPTR)
                (SETQ PR W)
                (COND ((NULL PR) (RETURN NIL)))
                (SETQ FORALL-RESULT
                        (SETQ FORALL-ENDPTR
                                (CONS
                                 ((LAMBDA (PR)
                                    (CONS (CAR PR)
                                          (PROG (RS FORALL-RESULT
                                                 FORALL-ENDPTR)
                                            (SETQ RS (CDR PR))
                                            (COND ((NULL RS) (RETURN NIL)))
                                            (SETQ FORALL-RESULT
                                                    (SETQ FORALL-ENDPTR
                                                            (CONS
                                                             ((LAMBDA (RS)
                                                                (VSPR_MK F X RS
                                                                 (VS_MKAND
                                                                  CL)))
                                                              (CAR RS))
                                                             NIL)))
                                           LOOPLABEL
                                            (SETQ RS (CDR RS))
                                            (COND
                                             ((NULL RS)
                                              (RETURN FORALL-RESULT)))
                                            (RPLACD FORALL-ENDPTR
                                                    (CONS
                                                     ((LAMBDA (RS)
                                                        (VSPR_MK F X RS
                                                         (VS_MKAND CL)))
                                                      (CAR RS))
                                                     NIL))
                                            (SETQ FORALL-ENDPTR
                                                    (CDR FORALL-ENDPTR))
                                            (GO LOOPLABEL))))
                                  (CAR PR))
                                 NIL)))
               LOOPLABEL
                (SETQ PR (CDR PR))
                (COND ((NULL PR) (RETURN FORALL-RESULT)))
                (RPLACD FORALL-ENDPTR
                        (CONS
                         ((LAMBDA (PR)
                            (CONS (CAR PR)
                                  (PROG (RS FORALL-RESULT FORALL-ENDPTR)
                                    (SETQ RS (CDR PR))
                                    (COND ((NULL RS) (RETURN NIL)))
                                    (SETQ FORALL-RESULT
                                            (SETQ FORALL-ENDPTR
                                                    (CONS
                                                     ((LAMBDA (RS)
                                                        (VSPR_MK F X RS
                                                         (VS_MKAND CL)))
                                                      (CAR RS))
                                                     NIL)))
                                   LOOPLABEL
                                    (SETQ RS (CDR RS))
                                    (COND ((NULL RS) (RETURN FORALL-RESULT)))
                                    (RPLACD FORALL-ENDPTR
                                            (CONS
                                             ((LAMBDA (RS)
                                                (VSPR_MK F X RS (VS_MKAND CL)))
                                              (CAR RS))
                                             NIL))
                                    (SETQ FORALL-ENDPTR (CDR FORALL-ENDPTR))
                                    (GO LOOPLABEL))))
                          (CAR PR))
                         NIL))
                (SETQ FORALL-ENDPTR (CDR FORALL-ENDPTR))
                (GO LOOPLABEL)))
      (RETURN (VSCS_MK NIL PRAL)))) 
(PUT 'OFSF_NONVANISHP 'NUMBER-OF-ARGS 3) 
(DE OFSF_NONVANISHP (F X THEO)
    (PROG (W FINISHED RES)
      (SETQ W 'FALSE)
      (PROG ()
       REPEATLABEL
        (PROGN
         (COND
          ((SFTO_MVARTEST F X)
           (PROGN
            (SETQ W (CONS 'OR (LIST W (LIST 'NEQ (CDAR F) NIL))))
            (SETQ W (CL_SIMPL W THEO (MINUS 1)))
            (SETQ F (CDR F))))
          (T
           (PROGN
            (SETQ W (CONS 'OR (LIST W (LIST 'NEQ F NIL))))
            (SETQ W (CL_SIMPL W THEO (MINUS 1)))
            (SETQ FINISHED T))))
         (COND ((EQ W 'TRUE) (SETQ RES T))))
        (COND ((NOT (OR FINISHED RES)) (GO REPEATLABEL))))
      (RETURN RES))) 
(PUT 'OFSF_DEFINITE 'NUMBER-OF-ARGS 2) 
(DE OFSF_DEFINITE (FML THEO)
    (PROG (S F M)
      (SETQ M 0)
      (SETQ S 1)
      (PROG ()
       WHILELABEL
        (COND ((NOT (AND FML S)) (RETURN NIL)))
        (PROGN
         (PROG (G553)
           (SETQ G553 (PROG1 (CAR FML) (SETQ FML (CDR FML))))
           (SETQ F (CAR G553))
           (SETQ M (CDR G553))
           (RETURN G553))
         (COND
          ((EVENP M)
           (PROGN
            (COND ((NOT (OFSF_SUREP (LIST 'NEQ F NIL) THEO)) (SETQ S NIL)))))
          ((OFSF_SUREP (LIST 'LESSP F NIL) THEO) (SETQ S (TIMES S (MINUS 1))))
          ((NOT (OFSF_SUREP (LIST 'GREATERP F NIL) THEO)) (SETQ S NIL))))
        (GO WHILELABEL))
      (RETURN S))) 
(PUT 'OFSF_SEPFAC 'NUMBER-OF-ARGS 2) 
(DE OFSF_SEPFAC (FML X)
    (PROG (F FMXL FMNXL M)
      (SETQ M 0)
      (PROG ()
       WHILELABEL
        (COND ((NOT FML) (RETURN NIL)))
        (PROGN
         (PROG (G554)
           (SETQ G554 (PROG1 (CAR FML) (SETQ FML (CDR FML))))
           (SETQ F (CAR G554))
           (SETQ M (CDR G554))
           (RETURN G554))
         (COND
          ((SFTO_MVARTEST F X)
           (PROG (W1)
             (SETQ W1 (CONS F M))
             (SETQ FMXL (CONS W1 FMXL))
             (RETURN W1)))
          (T
           (PROG (W1)
             (SETQ W1 (CONS F M))
             (SETQ FMNXL (CONS W1 FMNXL))
             (RETURN W1)))))
        (GO WHILELABEL))
      (RETURN (CONS FMXL FMNXL)))) 
(PUT 'VSDE_SELECT-BOUNDS 'NUMBER-OF-ARGS 1) 
(DE VSDE_SELECT-BOUNDS (DE)
    (COND (RLBNDSWITHILP* (VSDE_SELECT-BOUNDS-ILP DE))
          (T (VSDE_SELECT-BOUNDS-NOILP DE)))) 
(PUT 'VSDE_SELECT-BOUNDS-NOILP 'NUMBER-OF-ARGS 1) 
(DE VSDE_SELECT-BOUNDS-NOILP (DE)
    (PROG (PCL CS BND NPCL NL NU)
      (SETQ NL 0)
      (SETQ NU 0)
      (SETQ PCL (VSDE_PCL DE))
      (PROG (PC)
        (SETQ PC PCL)
       LAB
        (COND ((NULL PC) (RETURN NIL)))
        ((LAMBDA (PC)
           (PROGN
            (SETQ CS (VSPC_CS PC))
            (SETQ NL (PLUS (VSCS_NWLB CS) (VSCS_NSLB CS)))
            (SETQ NU (PLUS (VSCS_NWUB CS) (VSCS_NSUB CS)))))
         (CAR PC))
        (SETQ PC (CDR PC))
        (GO LAB))
      (SETQ BND (COND ((LESSP NL NU) '(LB)) (T '(UB))))
      (SETQ NPCL
              (PROG (PC FORALL-RESULT FORALL-ENDPTR)
                (SETQ PC PCL)
                (COND ((NULL PC) (RETURN NIL)))
                (SETQ FORALL-RESULT
                        (SETQ FORALL-ENDPTR
                                (CONS
                                 ((LAMBDA (PC)
                                    (VSPC_MK (VSPC_P PC) (VSPC_TYPE PC)
                                     (VSPC_CS PC) (VSPC_GPL PC) BND))
                                  (CAR PC))
                                 NIL)))
               LOOPLABEL
                (SETQ PC (CDR PC))
                (COND ((NULL PC) (RETURN FORALL-RESULT)))
                (RPLACD FORALL-ENDPTR
                        (CONS
                         ((LAMBDA (PC)
                            (VSPC_MK (VSPC_P PC) (VSPC_TYPE PC) (VSPC_CS PC)
                             (VSPC_GPL PC) BND))
                          (CAR PC))
                         NIL))
                (SETQ FORALL-ENDPTR (CDR FORALL-ENDPTR))
                (GO LOOPLABEL)))
      (VSDE_PUTPCL DE NPCL))) 
(PUT 'VSDE_PCL2TPL 'NUMBER-OF-ARGS 1) 
(DE VSDE_PCL2TPL (DE)
    (PROG (PCL CS P GPL B TPL IMI IPI)
      (SETQ PCL (VSDE_PCL DE))
      (PROG (PC)
        (SETQ PC PCL)
       LAB
        (COND ((NULL PC) (RETURN NIL)))
        ((LAMBDA (PC)
           (PROGN
            (SETQ CS (VSPC_CS PC))
            (SETQ P (VSPC_P PC))
            (SETQ GPL (VSPC_GPL PC))
            (PROG (PR)
              (SETQ PR (VSCS_IP CS))
             LAB
              (COND ((NULL PR) (RETURN NIL)))
              ((LAMBDA (PR)
                 (PROG (W1)
                   (SETQ W1 (VSTP_MK P GPL NIL PR))
                   (SETQ TPL (CONS W1 TPL))
                   (RETURN W1)))
               (CAR PR))
              (SETQ PR (CDR PR))
              (GO LAB))
            (SETQ B (VSPC_B PC))
            (COND
             ((MEMQ 'LB B)
              (PROGN
               (SETQ IMI T)
               (PROG (PR)
                 (SETQ PR (VSCS_EP CS))
                LAB
                 (COND ((NULL PR) (RETURN NIL)))
                 ((LAMBDA (PR)
                    (PROG (W1)
                      (SETQ W1 (VSTP_MK P GPL 'PEPS PR))
                      (SETQ TPL (CONS W1 TPL))
                      (RETURN W1)))
                  (CAR PR))
                 (SETQ PR (CDR PR))
                 (GO LAB))
               (PROG (PR)
                 (SETQ PR (VSCS_SLB CS))
                LAB
                 (COND ((NULL PR) (RETURN NIL)))
                 ((LAMBDA (PR)
                    (PROG (W1)
                      (SETQ W1 (VSTP_MK P GPL 'PEPS PR))
                      (SETQ TPL (CONS W1 TPL))
                      (RETURN W1)))
                  (CAR PR))
                 (SETQ PR (CDR PR))
                 (GO LAB))
               (PROG (PR)
                 (SETQ PR (VSCS_WLB CS))
                LAB
                 (COND ((NULL PR) (RETURN NIL)))
                 ((LAMBDA (PR)
                    (PROG (W1)
                      (SETQ W1 (VSTP_MK P GPL NIL PR))
                      (SETQ TPL (CONS W1 TPL))
                      (RETURN W1)))
                  (CAR PR))
                 (SETQ PR (CDR PR))
                 (GO LAB)))))
            (COND
             ((MEMQ 'UB B)
              (PROGN
               (SETQ IPI T)
               (PROG (PR)
                 (SETQ PR (VSCS_EP CS))
                LAB
                 (COND ((NULL PR) (RETURN NIL)))
                 ((LAMBDA (PR)
                    (PROG (W1)
                      (SETQ W1 (VSTP_MK P GPL 'MEPS PR))
                      (SETQ TPL (CONS W1 TPL))
                      (RETURN W1)))
                  (CAR PR))
                 (SETQ PR (CDR PR))
                 (GO LAB))
               (PROG (PR)
                 (SETQ PR (VSCS_SUB CS))
                LAB
                 (COND ((NULL PR) (RETURN NIL)))
                 ((LAMBDA (PR)
                    (PROG (W1)
                      (SETQ W1 (VSTP_MK P GPL 'MEPS PR))
                      (SETQ TPL (CONS W1 TPL))
                      (RETURN W1)))
                  (CAR PR))
                 (SETQ PR (CDR PR))
                 (GO LAB))
               (PROG (PR)
                 (SETQ PR (VSCS_WUB CS))
                LAB
                 (COND ((NULL PR) (RETURN NIL)))
                 ((LAMBDA (PR)
                    (PROG (W1)
                      (SETQ W1 (VSTP_MK P GPL NIL PR))
                      (SETQ TPL (CONS W1 TPL))
                      (RETURN W1)))
                  (CAR PR))
                 (SETQ PR (CDR PR))
                 (GO LAB)))))
            (VSDE_PUTCURTHEO DE (APPEND (VSDE_CURTHEO DE) (VSCS_TS CS)))))
         (CAR PC))
        (SETQ PC (CDR PC))
        (GO LAB))
      (COND
       (IMI
        (PROG (W1)
          (SETQ W1 (VSTP_MK NIL NIL 'MINF (VSPR_MK NIL NIL NIL 'TRUE)))
          (SETQ TPL (CONS W1 TPL))
          (RETURN W1))))
      (COND
       (IPI
        (PROG (W1)
          (SETQ W1 (VSTP_MK NIL NIL 'PINF (VSPR_MK NIL NIL NIL 'TRUE)))
          (SETQ TPL (CONS W1 TPL))
          (RETURN W1))))
      (VSDE_PUTTPL DE TPL))) 
(PUT 'VSDE_CONFLATE-TPL 'NUMBER-OF-ARGS 1) 
(DE VSDE_CONFLATE-TPL (DE)
    (PROG (TPL TTPL TP1 TP2 W RESTPL)
      (SETQ TPL (VSDE_TPL DE))
      (PROG ()
       WHILELABEL
        (COND ((NOT TPL) (RETURN NIL)))
        (PROGN
         (SETQ TP1 (PROG1 (CAR TPL) (SETQ TPL (CDR TPL))))
         (SETQ TTPL TPL)
         (SETQ TPL NIL)
         (PROG ()
          WHILELABEL
           (COND ((NOT TTPL) (RETURN NIL)))
           (PROGN
            (SETQ TP2 (PROG1 (CAR TTPL) (SETQ TTPL (CDR TTPL))))
            (SETQ W (VSTP_CONFLATE TP1 TP2))
            (COND (W (SETQ TP1 W)) (T (PROGN (SETQ TPL (CONS TP2 TPL)) TP2))))
           (GO WHILELABEL))
         (SETQ TPL (REVERSE TPL))
         (PROGN (SETQ RESTPL (CONS TP1 RESTPL)) TP1))
        (GO WHILELABEL))
      (VSDE_PUTTPL DE (REVERSIP RESTPL)))) 
(PUT 'VSTP_CONFLATE 'NUMBER-OF-ARGS 2) 
(DE VSTP_CONFLATE (TP1 TP2)
    (PROG (PR1 PR2)
      (SETQ PR1 (VSTP_PR TP1))
      (SETQ PR2 (VSTP_PR TP2))
      (COND ((NOT (EQN (VSPR_D PR1) (VSPR_D PR2))) (RETURN NIL)))
      (COND ((NOT (EQ (VSTP_NP TP1) (VSTP_NP TP2))) (RETURN NIL)))
      (COND ((NOT (EQUAL (VSPR_F PR1) (VSPR_F PR2))) (RETURN NIL)))
      (COND
       ((LTO_SUBSET (VSPR_RSL PR1) (VSPR_RSL PR2))
        (RETURN
         (VSTP_MK (POS_LCA (VSTP_P TP1) (VSTP_P TP2))
          (INTERSECTION (VSTP_GPL TP1) (VSTP_GPL TP2)) (VSTP_NP TP2)
          (VSPR_MK (VSPR_F PR2) (VSPR_V PR2) (VSPR_RSL PR2)
           (LIST 'OR (VSPR_RC PR1) (VSPR_RC PR2)))))))
      (COND
       ((LTO_SUBSET (VSPR_RSL PR2) (VSPR_RSL PR1))
        (RETURN
         (VSTP_MK (POS_LCA (VSTP_P TP1) (VSTP_P TP2))
          (INTERSECTION (VSTP_GPL TP1) (VSTP_GPL TP2)) (VSTP_NP TP1)
          (VSPR_MK (VSPR_F PR1) (VSPR_V PR1) (VSPR_RSL PR1)
           (LIST 'OR (VSPR_RC PR1) (VSPR_RC PR2)))))))
      (RETURN NIL))) 
(PUT 'VSDE_TPLLINP 'NUMBER-OF-ARGS 2) 
(DE VSDE_TPLLINP (DE VL)
    (PROG (TPL OK TP)
      (SETQ TPL (VSDE_TPL DE))
      (COND ((NULL TPL) (RETURN NIL)))
      (SETQ OK T)
      (PROG ()
       WHILELABEL
        (COND ((NOT (AND TPL OK)) (RETURN NIL)))
        (PROGN
         (SETQ TP (PROG1 (CAR TPL) (SETQ TPL (CDR TPL))))
         (SETQ OK (VSTP_LINP TP VL)))
        (GO WHILELABEL))
      (RETURN OK))) 
(PUT 'VSTP_LINP 'NUMBER-OF-ARGS 2) 
(DE VSTP_LINP (TP VL)
    (PROG (PR F X)
      (SETQ PR (VSTP_PR TP))
      (SETQ F (VSPR_F PR))
      (SETQ X (VSPR_V PR))
      (COND ((NULL F) (PROGN (COND (NIL NIL)) (RETURN T))))
      (COND (NIL NIL))
      (COND
       ((AND (EQN (CDAAR F) 1) (NULL (INTERSECTION (KERNELS (CDAR F)) VL)))
        (RETURN T)))
      (RETURN NIL))) 
(PUT 'VSDE_TPLLDP 'NUMBER-OF-ARGS 2) 
(DE VSDE_TPLLDP (DE N)
    (PROG (TPL OK TP)
      (SETQ TPL (VSDE_TPL DE))
      (COND ((NULL TPL) (RETURN NIL)))
      (SETQ OK T)
      (PROG ()
       WHILELABEL
        (COND ((NOT (AND TPL OK)) (RETURN NIL)))
        (PROGN
         (SETQ TP (PROG1 (CAR TPL) (SETQ TPL (CDR TPL))))
         (SETQ OK (VSTP_LDP TP N)))
        (GO WHILELABEL))
      (RETURN OK))) 
(PUT 'VSTP_LDP 'NUMBER-OF-ARGS 2) 
(DE VSTP_LDP (TP N)
    (PROG (PR F X)
      (SETQ PR (VSTP_PR TP))
      (SETQ F (VSPR_F PR))
      (SETQ X (VSPR_V PR))
      (COND ((NULL F) (PROGN (COND (NIL NIL)) (RETURN T))))
      (COND (NIL NIL))
      (COND ((LEQ (CDAAR F) N) (RETURN T)))
      (RETURN NIL))) 
(PUT 'OFSF_ADJUSTOP 'NUMBER-OF-ARGS 2) 
(DE OFSF_ADJUSTOP (OP S)
    (PROG ()
      (COND (NIL NIL))
      (COND (NIL NIL))
      (COND ((OR (MEMQ OP '(EQUAL NEQ)) (EQN S 1)) (RETURN OP)))
      (COND ((EQ OP 'LESSP) (RETURN 'GREATERP)))
      (COND ((EQ OP 'GREATERP) (RETURN 'LESSP)))
      (COND ((EQ OP 'GEQ) (RETURN 'LEQ)))
      (COND ((EQ OP 'LEQ) (RETURN 'GEQ))))) 
(PUT 'POS_DELSUBPOSAL 'NUMBER-OF-ARGS 2) 
(DE POS_DELSUBPOSAL (PAL1 PAL2)
    (PROG (PL1 PL2 NPL2)
      (SETQ PL1
              (PROG (PR FORALL-RESULT FORALL-ENDPTR)
                (SETQ PR PAL1)
                (COND ((NULL PR) (RETURN NIL)))
                (SETQ FORALL-RESULT
                        (SETQ FORALL-ENDPTR
                                (CONS ((LAMBDA (PR) (CAR PR)) (CAR PR)) NIL)))
               LOOPLABEL
                (SETQ PR (CDR PR))
                (COND ((NULL PR) (RETURN FORALL-RESULT)))
                (RPLACD FORALL-ENDPTR
                        (CONS ((LAMBDA (PR) (CAR PR)) (CAR PR)) NIL))
                (SETQ FORALL-ENDPTR (CDR FORALL-ENDPTR))
                (GO LOOPLABEL)))
      (SETQ PL2
              (PROG (PR FORALL-RESULT FORALL-ENDPTR)
                (SETQ PR PAL2)
                (COND ((NULL PR) (RETURN NIL)))
                (SETQ FORALL-RESULT
                        (SETQ FORALL-ENDPTR
                                (CONS ((LAMBDA (PR) (CAR PR)) (CAR PR)) NIL)))
               LOOPLABEL
                (SETQ PR (CDR PR))
                (COND ((NULL PR) (RETURN FORALL-RESULT)))
                (RPLACD FORALL-ENDPTR
                        (CONS ((LAMBDA (PR) (CAR PR)) (CAR PR)) NIL))
                (SETQ FORALL-ENDPTR (CDR FORALL-ENDPTR))
                (GO LOOPLABEL)))
      (SETQ NPL2 (POS_DELSUBPOSL PL1 PL2))
      (RETURN
       (PROG (NP2 FORALL-RESULT FORALL-ENDPTR)
         (SETQ NP2 NPL2)
         (COND ((NULL NP2) (RETURN NIL)))
         (SETQ FORALL-RESULT
                 (SETQ FORALL-ENDPTR
                         (CONS ((LAMBDA (NP2) (ASSOC NP2 PAL2)) (CAR NP2))
                               NIL)))
        LOOPLABEL
         (SETQ NP2 (CDR NP2))
         (COND ((NULL NP2) (RETURN FORALL-RESULT)))
         (RPLACD FORALL-ENDPTR
                 (CONS ((LAMBDA (NP2) (ASSOC NP2 PAL2)) (CAR NP2)) NIL))
         (SETQ FORALL-ENDPTR (CDR FORALL-ENDPTR))
         (GO LOOPLABEL))))) 
(PUT 'POS_DELSUBPOSL 'NUMBER-OF-ARGS 2) 
(DE POS_DELSUBPOSL (PL1 PL2)
    (PROG (W C P1 RES)
      (PROG (P2)
        (SETQ P2 PL2)
       LAB
        (COND ((NULL P2) (RETURN NIL)))
        ((LAMBDA (P2)
           (PROGN
            (SETQ W PL1)
            (SETQ C NIL)
            (PROG ()
             WHILELABEL
              (COND ((NOT (AND W (NOT C))) (RETURN NIL)))
              (PROGN
               (SETQ P1 (PROG1 (CAR W) (SETQ W (CDR W))))
               (SETQ C (POS_SUBPOSP P1 P2)))
              (GO WHILELABEL))
            (COND ((NOT C) (PROGN (SETQ RES (CONS P2 RES)) P2)))))
         (CAR P2))
        (SETQ P2 (CDR P2))
        (GO LAB))
      (RETURN (REVERSIP RES)))) 
(PUT 'POS_SUBPOSP 'NUMBER-OF-ARGS 2) 
(DE POS_SUBPOSP (P1 P2)
    (COND ((NULL P1) T) ((NULL P2) NIL)
          ((EQN (CAR P1) (CAR P2)) (POS_SUBPOSP (CDR P1) (CDR P2))) (T NIL))) 
(PUT 'POS_LCA 'NUMBER-OF-ARGS 2) 
(DE POS_LCA (P1 P2)
    (COND ((OR (NULL P1) (NULL P2)) NIL) ((NOT (EQN (CAR P1) (CAR P2))) NIL)
          (T (CONS (CAR P1) (POS_LCA (CDR P1) (CDR P2)))))) 
(PUT 'VS_MKAND 'NUMBER-OF-ARGS 1) 
(DE VS_MKAND (FL)
    (COND ((NULL FL) 'TRUE) ((NULL (CDR FL)) (CAR FL)) (T (CONS 'AND FL)))) 
(PUT 'VSDC_PRINTS 'NUMBER-OF-ARGS 1) 
(DE VSDC_PRINTS (DC)
    (PROGN
     (IOTO_PRIN2 (LIST "VSdc: "))
     (IOTO_PRIN2T
      (LIST "f: " (VSDC_F DC) " #ptheo: " (LENGTH (VSDC_PTHEO DC)) " #ttheo: "
            (LENGTH (VSDC_TTHEO DC)) " data: " (VSDC_DATA DC))))) 
(PUT 'VSCS_PRINTS 'NUMBER-OF-ARGS 1) 
(DE VSCS_PRINTS (CS)
    (COND ((VSCS_FAILEDP CS) (IOTO_PRIN2T (LIST "VScs: failed")))
          (T
           (PROGN
            (IOTO_PRIN2 (LIST "VScs: "))
            (IOTO_PRIN2T
             (LIST "#ip: " (LENGTH (VSCS_IP CS)) " #ep: " (LENGTH (VSCS_EP CS))
                   " #slb: " (LENGTH (VSCS_SLB CS)) " #wlb: "
                   (LENGTH (VSCS_WLB CS)) " #sub: " (LENGTH (VSCS_SUB CS))
                   " #wub: " (LENGTH (VSCS_WUB CS)))))))) 
(PUT 'VSCS_PRINT 'NUMBER-OF-ARGS 1) 
(DE VSCS_PRINT (CS)
    (COND ((VSCS_FAILEDP CS) (IOTO_PRIN2T (LIST "VScs: failed")))
          (T
           (PROGN
            (IOTO_PRIN2T (LIST "VScs: "))
            (IOTO_PRIN2T (LIST "ip: " (VSCS_IP CS)))
            (IOTO_PRIN2T (LIST "ep: " (VSCS_EP CS)))
            (IOTO_PRIN2T (LIST "slb: " (VSCS_SLB CS)))
            (IOTO_PRIN2T (LIST "wlb: " (VSCS_WLB CS)))
            (IOTO_PRIN2T (LIST "sub: " (VSCS_SUB CS)))
            (IOTO_PRIN2T (LIST "wub: " (VSCS_WUB CS))))))) 
(PUT 'VSPC_PRINTS 'NUMBER-OF-ARGS 1) 
(DE VSPC_PRINTS (PC)
    (PROGN
     (IOTO_PRIN2 (LIST "VSpc: "))
     (IOTO_PRIN2T
      (LIST "type: " (VSPC_TYPE PC) " pos: " (VSPC_P PC) " gpl: " (VSPC_GPL PC)
            " bndch: " (VSPC_B PC) " cs: "))
     (VSCS_PRINTS (VSPC_CS PC)))) 
(PUT 'VSPR_PRINTS 'NUMBER-OF-ARGS 1) 
(DE VSPR_PRINTS (PR)
    (PROGN
     (IOTO_PRIN2 (LIST "VSpr: "))
     (IOTO_PRIN2 (LIST "poly:"))
     (MATHPRINT (PREPF (VSPR_F PR)))
     (IOTO_PRIN2T (LIST "root specs: " (VSPR_RSL PR))))) 
(PUT 'VSTP_PRINTS 'NUMBER-OF-ARGS 1) 
(DE VSTP_PRINTS (TP)
    (PROGN
     (IOTO_PRIN2 (LIST "VStp: "))
     (IOTO_PRIN2T
      (LIST "pos: " (VSTP_P TP) " gpl: " (VSTP_GPL TP) " np: " (VSTP_NP TP)
            " pr:"))
     (VSPR_PRINTS (VSTP_PR TP))
     (IOTO_PRIN2T (LIST "guard:"))
     (MATHPRINT (RL_PREPFOF (VSTP_GUARD TP))))) 
(ENDMODULE) 