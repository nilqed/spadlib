(cl:declaim (cl:optimize cl:debug cl:safety))
(cl:declaim (sb-ext:muffle-conditions sb-ext:compiler-note cl:style-warning))
(MODULE (LIST 'TAYINTRO)) 
(EXPORTS
 (LIST 'CONFUSION 'CONSTANT-SQ-P 'DELETE-NTH 'DELETE-NTH-NTH 'REPLACE-NTH
       'REPLACE-NTH-NTH 'SMEMBERLP 'TAYLOR-ERROR 'TAYLOR-ERROR* 'VAR-IS-NTH)) 
(IMPORTS
 (LIST 'CONSTANT_EXPRP 'DENR 'DOMAINP 'ERROR1 'KERNP 'MVAR 'NEQ 'NUMR 'PREPSQ
       'PRIN2T 'RERROR 'TAYLOR-TRACE 'TAYTPELVARS)) 
(FLUID '(*TAYEXPANDING* *TAYRESTART* *TRTAYLOR |TAYLOR:DATE*| |TAYLOR:VERSION|)) 
(PUT 'VAR-IS-NTH 'NUMBER-OF-ARGS 2) 
(PUT 'VAR-IS-NTH 'DEFINED-ON-LINE '52) 
(PUT 'VAR-IS-NTH 'DEFINED-IN-FILE 'TAYLOR/TAYINTRO.RED) 
(PUT 'VAR-IS-NTH 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE VAR-IS-NTH (TP VAR)
    (PROG (EL FOUND N M)
      (SETQ N 0)
      (SETQ M 0)
      (PROG ()
       REPEATLABEL
        (PROGN
         (SETQ N (PLUS N 1))
         (SETQ EL (CAR (CAR TP)))
         (SETQ M 1)
         (PROG ()
          WHILELABEL
           (COND ((NOT EL) (RETURN NIL)))
           (PROGN
            (COND
             ((NEQ VAR (CAR EL))
              (PROGN (SETQ EL (CDR EL)) (SETQ M (PLUS M 1))))
             (T (PROGN (SETQ EL NIL) (SETQ FOUND T)))))
           (GO WHILELABEL))
         (SETQ TP (CDR TP)))
        (COND ((NOT (OR (NULL TP) FOUND)) (GO REPEATLABEL))))
      (COND ((NOT FOUND) (CONFUSION 'VAR-IS-NTH)) (T (RETURN (CONS N M)))))) 
(PUT 'DELETE-NTH 'NUMBER-OF-ARGS 2) 
(PUT 'DELETE-NTH 'DEFINED-ON-LINE '74) 
(PUT 'DELETE-NTH 'DEFINED-IN-FILE 'TAYLOR/TAYINTRO.RED) 
(PUT 'DELETE-NTH 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE DELETE-NTH (L N)
    (COND ((EQUAL N 1) (CDR L))
          (T (CONS (CAR L) (DELETE-NTH (CDR L) (DIFFERENCE N 1)))))) 
(PUT 'DELETE-NTH-NTH 'NUMBER-OF-ARGS 3) 
(PUT 'DELETE-NTH-NTH 'DEFINED-ON-LINE '80) 
(PUT 'DELETE-NTH-NTH 'DEFINED-IN-FILE 'TAYLOR/TAYINTRO.RED) 
(PUT 'DELETE-NTH-NTH 'PROCEDURE_TYPE
     '(ARROW (TIMES GENERAL GENERAL GENERAL) GENERAL)) 
(DE DELETE-NTH-NTH (L N M)
    (COND ((EQUAL N 1) (CONS (DELETE-NTH (CAR L) M) (CDR L)))
          (T (CONS (CAR L) (DELETE-NTH-NTH (CDR L) (DIFFERENCE N 1) M))))) 
(PUT 'REPLACE-NTH 'NUMBER-OF-ARGS 3) 
(PUT 'REPLACE-NTH 'DEFINED-ON-LINE '88) 
(PUT 'REPLACE-NTH 'DEFINED-IN-FILE 'TAYLOR/TAYINTRO.RED) 
(PUT 'REPLACE-NTH 'PROCEDURE_TYPE
     '(ARROW (TIMES GENERAL GENERAL GENERAL) GENERAL)) 
(DE REPLACE-NTH (L N V)
    (COND ((EQUAL N 1) (CONS V (CDR L)))
          (T (CONS (CAR L) (REPLACE-NTH (CDR L) (DIFFERENCE N 1) V))))) 
(PUT 'REPLACE-NTH-NTH 'NUMBER-OF-ARGS 4) 
(PUT 'REPLACE-NTH-NTH 'DEFINED-ON-LINE '94) 
(PUT 'REPLACE-NTH-NTH 'DEFINED-IN-FILE 'TAYLOR/TAYINTRO.RED) 
(PUT 'REPLACE-NTH-NTH 'PROCEDURE_TYPE
     '(ARROW (TIMES GENERAL GENERAL GENERAL GENERAL) GENERAL)) 
(DE REPLACE-NTH-NTH (L N M V)
    (COND ((EQUAL N 1) (CONS (REPLACE-NTH (CAR L) M V) (CDR L)))
          (T (CONS (CAR L) (REPLACE-NTH-NTH (CDR L) (DIFFERENCE N 1) M V))))) 
(PUT 'CONSTANT-SQ-P 'NUMBER-OF-ARGS 1) 
(PUT 'CONSTANT-SQ-P 'DEFINED-ON-LINE '102) 
(PUT 'CONSTANT-SQ-P 'DEFINED-IN-FILE 'TAYLOR/TAYINTRO.RED) 
(PUT 'CONSTANT-SQ-P 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE CONSTANT-SQ-P (U)
    (OR (AND (NUMBERP (CDR U)) (OR (ATOM (CAR U)) (ATOM (CAR (CAR U)))))
        (AND (KERNP U) (ATOM (CAAAR U)) (FLAGP (CAAAR U) 'CONSTANT))
        (CONSTANT_EXPRP (PREPSQ U)))) 
(PUT 'SMEMBERLP 'NUMBER-OF-ARGS 2) 
(PUT 'SMEMBERLP 'DEFINED-ON-LINE '110) 
(PUT 'SMEMBERLP 'DEFINED-IN-FILE 'TAYLOR/TAYINTRO.RED) 
(PUT 'SMEMBERLP 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE SMEMBERLP (U V)
    (COND ((NULL V) NIL) ((ATOM V) (MEMBER V U))
          (T (OR (SMEMBERLP U (CAR V)) (SMEMBERLP U (CDR V)))))) 
(PUT 'CONFUSION 'NUMBER-OF-ARGS 1) 
(PUT 'CONFUSION 'DEFINED-ON-LINE '118) 
(PUT 'CONFUSION 'DEFINED-IN-FILE 'TAYLOR/TAYINTRO.RED) 
(PUT 'CONFUSION 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE CONFUSION (MSG)
    (PROGN
     (TERPRI)
     (PRIN2 "TAYLOR PACKAGE (version ")
     (PRIN2 |TAYLOR:VERSION|)
     (PRIN2 ", as of ")
     (PRIN2 |TAYLOR:DATE*|)
     (PRIN2T "):")
     (PRIN2 "This can't happen (")
     (PRIN2 MSG)
     (PRIN2T ") !")
     (RERROR 'TAYLOR 1 "Please send input and output to Rainer M. Schoepf!"))) 
(PUT 'TAYLOR-ERROR 'NUMBER-OF-ARGS 2) 
(PUT 'TAYLOR-ERROR 'DEFINED-ON-LINE '135) 
(PUT 'TAYLOR-ERROR 'DEFINED-IN-FILE 'TAYLOR/TAYINTRO.RED) 
(PUT 'TAYLOR-ERROR 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE TAYLOR-ERROR (TYPE INFO)
    (PROG (MSG)
      (SETQ MSG
              (COND ((EQ TYPE 'NOT-A-UNIT) "Not a unit in argument to")
                    ((EQ TYPE 'WRONG-NO-ARGS) "Wrong number of arguments to")
                    ((EQ TYPE 'EXPANSION) "Error during expansion")
                    ((EQ TYPE 'WRONG-TYPE-ARG) "Wrong argument type")
                    ((EQ TYPE 'NO-ORIGINAL)
                     "Taylor kernel doesn't have an original part in")
                    ((EQ TYPE 'ZERO-DENOM) "Zero divisor in")
                    ((EQ TYPE 'ESSENTIAL-SINGULARITY)
                     "Essential singularity in")
                    ((EQ TYPE 'BRANCH-POINT) "Branch point detected in")
                    ((EQ TYPE 'BRANCH-CUT)
                     "Expansion point lies on branch cut in")
                    ((EQ TYPE 'INVALID-SUBST)
                     "Invalid substitution in Taylor kernel:")
                    ((EQ TYPE 'TAYREVERT)
                     "Reversion of Taylor series not possible:")
                    ((EQ TYPE 'IMPLICIT_TAYLOR)
                     "Computation of Taylor series of implicit function failed")
                    ((EQ TYPE 'INVERSE_TAYLOR)
                     "Computation of Taylor series of inverse function failed")
                    ((EQ TYPE 'MAX_CYCLES)
                     "Computation loops (recursive definition?):")
                    ((EQ TYPE 'NOT-IMPLEMENTED) "Not implemented yet")
                    (T (CONFUSION 'TAYLOR-ERROR))))
      (COND
       ((NOT (NULL INFO))
        (SETQ MSG (COND ((ATOM INFO) (LIST MSG INFO)) (T (CONS MSG INFO))))))
      (COND
       (*TRTAYLOR
        (COND
         (*TRTAYLOR
          (PROGN
           (LPRI
            (CONS "Taylor trace:"
                  (COND ((AND MSG (ATOM MSG)) (LIST MSG)) (T MSG))))
           (TERPRI))))))
      (RERROR 'TAYLOR 2 MSG))) 
(PUT 'TAYLOR-ERROR* 'NUMBER-OF-ARGS 2) 
(PUT 'TAYLOR-ERROR* 'DEFINED-ON-LINE '182) 
(PUT 'TAYLOR-ERROR* 'DEFINED-IN-FILE 'TAYLOR/TAYINTRO.RED) 
(PUT 'TAYLOR-ERROR* 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE TAYLOR-ERROR* (TYPE INFO)
    (COND (*TAYEXPANDING* (PROGN (SETQ *TAYRESTART* T) (ERROR1)))
          (T (TAYLOR-ERROR TYPE INFO)))) 
(ENDMODULE) 