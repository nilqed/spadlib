(cl:declaim (cl:optimize cl:debug cl:safety))
(cl:declaim (sb-ext:muffle-conditions sb-ext:compiler-note cl:style-warning))
(MODULE (LIST 'F5LP)) 
(REVISION 'F5LP "$Id: f5lp.red 6359 2022-07-29 06:13:09Z thomas-sturm $") 
(COPYRIGHT 'F5LP "(c) 2022 A. Demin, T. Sturm, MPI Informatics, Germany") 
(DE LP_SIGNATURE (IDX ST) (LIST 'SGN IDX ST)) 
(PUT 'LP_SIGNATURE 'NUMBER-OF-ARGS 2) 
(PUTC 'LP_SIGNATURE 'INLINE '(LAMBDA (IDX ST) (LIST 'SGN IDX ST))) 
(DE LP_LABELEDPOLYNOMIAL1 (POLY IDX)
    (LP_LABELEDPOLYNOMIAL2 POLY (LIST 'SGN IDX (POLY_IDENTITYTERM)))) 
(PUT 'LP_LABELEDPOLYNOMIAL1 'NUMBER-OF-ARGS 2) 
(PUTC 'LP_LABELEDPOLYNOMIAL1 'INLINE
      '(LAMBDA (POLY IDX)
         (LP_LABELEDPOLYNOMIAL2 POLY (LIST 'SGN IDX (POLY_IDENTITYTERM))))) 
(DE LP_LABELEDPOLYNOMIAL2 (POLY SGN) (LIST 'LP POLY SGN)) 
(PUT 'LP_LABELEDPOLYNOMIAL2 'NUMBER-OF-ARGS 2) 
(PUTC 'LP_LABELEDPOLYNOMIAL2 'INLINE '(LAMBDA (POLY SGN) (LIST 'LP POLY SGN))) 
(DE LP_SGN (F) (CADDR F)) 
(PUT 'LP_SGN 'NUMBER-OF-ARGS 1) 
(PUTC 'LP_SGN 'INLINE '(LAMBDA (F) (CADDR F))) 
(DE LP_EVAL (F) (CADR F)) 
(PUT 'LP_EVAL 'NUMBER-OF-ARGS 1) 
(PUTC 'LP_EVAL 'INLINE '(LAMBDA (F) (CADR F))) 
(DE LP_SETEVAL (LP EV) (SETCAR (CDR LP) EV)) 
(PUT 'LP_SETEVAL 'NUMBER-OF-ARGS 2) 
(PUTC 'LP_SETEVAL 'INLINE '(LAMBDA (LP EV) (SETCAR (CDR LP) EV))) 
(DE LP_SETSGN (LP S) (SETCAR (CDDR LP) S)) 
(PUT 'LP_SETSGN 'NUMBER-OF-ARGS 2) 
(PUTC 'LP_SETSGN 'INLINE '(LAMBDA (LP S) (SETCAR (CDDR LP) S))) 
(DE LP_INDEXSGN (S) (CADR S)) 
(PUT 'LP_INDEXSGN 'NUMBER-OF-ARGS 1) 
(PUTC 'LP_INDEXSGN 'INLINE '(LAMBDA (S) (CADR S))) 
(DE LP_TERMSGN (S) (CADDR S)) 
(PUT 'LP_TERMSGN 'NUMBER-OF-ARGS 1) 
(PUTC 'LP_TERMSGN 'INLINE '(LAMBDA (S) (CADDR S))) 
(DE LP_EQSGN (S1 S2)
    (AND (IEQUAL (CADR S1) (CADR S2)) (POLY_EQTERM? (CADDR S1) (CADDR S2)))) 
(PUT 'LP_EQSGN 'NUMBER-OF-ARGS 2) 
(PUTC 'LP_EQSGN 'INLINE
      '(LAMBDA (S1 S2)
         (AND (IEQUAL (CADR S1) (CADR S2))
              (POLY_EQTERM? (CADDR S1) (CADDR S2))))) 
(DE LP_ISZERO? (LP) (POLY_ISZERO? (CADR LP))) 
(PUT 'LP_ISZERO? 'NUMBER-OF-ARGS 1) 
(PUTC 'LP_ISZERO? 'INLINE '(LAMBDA (LP) (POLY_ISZERO? (CADR LP)))) 
(DE LP_MULSGN (SGN EV) (LIST 'SGN (CADR SGN) (POLY_MULTERM (CADDR SGN) EV))) 
(PUT 'LP_MULSGN 'NUMBER-OF-ARGS 2) 
(PUTC 'LP_MULSGN 'INLINE
      '(LAMBDA (SGN EV) (LIST 'SGN (CADR SGN) (POLY_MULTERM (CADDR SGN) EV)))) 
(PUT 'LP_CMPSGN 'NUMBER-OF-ARGS 2) 
(DE LP_CMPSGN (S1 S2)
    (COND ((IEQUAL (CADR S1) (CADR S2)) (POLY_CMPTERM (CADDR S1) (CADDR S2)))
          (T (ILESSP (CADR S1) (CADR S2))))) 
(DE LP_NORMALIZE (F) (LIST 'LP (POLY_NORMALIZE (CADR F)) (CADDR F))) 
(PUT 'LP_NORMALIZE 'NUMBER-OF-ARGS 1) 
(PUTC 'LP_NORMALIZE 'INLINE
      '(LAMBDA (F) (LIST 'LP (POLY_NORMALIZE (CADR F)) (CADDR F)))) 
(DE LP_SCALEDENOMINATORS (F)
    (LIST 'LP (POLY_SCALEDENOMINATORS (CADR F)) (CADDR F))) 
(PUT 'LP_SCALEDENOMINATORS 'NUMBER-OF-ARGS 1) 
(PUTC 'LP_SCALEDENOMINATORS 'INLINE
      '(LAMBDA (F) (LIST 'LP (POLY_SCALEDENOMINATORS (CADR F)) (CADDR F)))) 
(DE LP_REDUCECOEFFS (F PRIME)
    (LIST 'LP (POLY_REDUCECOEFFS (CADR F) PRIME) (CADDR F))) 
(PUT 'LP_REDUCECOEFFS 'NUMBER-OF-ARGS 2) 
(PUTC 'LP_REDUCECOEFFS 'INLINE
      '(LAMBDA (F PRIME)
         (LIST 'LP (POLY_REDUCECOEFFS (CADR F) PRIME) (CADDR F)))) 
(DE LP_RECONSTRUCTCOEFFS (F PRIME)
    (LIST 'LP (POLY_RECONSTRUCTCOEFFS (CADR F) PRIME) (CADDR F))) 
(PUT 'LP_RECONSTRUCTCOEFFS 'NUMBER-OF-ARGS 2) 
(PUTC 'LP_RECONSTRUCTCOEFFS 'INLINE
      '(LAMBDA (F PRIME)
         (LIST 'LP (POLY_RECONSTRUCTCOEFFS (CADR F) PRIME) (CADDR F)))) 
(DE LP_CRTCOEFFS (POLYACCUM MODULO POLYCOMP PRIME)
    (LIST 'LP (POLY_CRTCOEFFS (CADR POLYACCUM) MODULO (CADR POLYCOMP) PRIME)
          (CADDR POLYACCUM))) 
(PUT 'LP_CRTCOEFFS 'NUMBER-OF-ARGS 4) 
(PUTC 'LP_CRTCOEFFS 'INLINE
      '(LAMBDA (POLYACCUM MODULO POLYCOMP PRIME)
         (LIST 'LP
               (POLY_CRTCOEFFS (CADR POLYACCUM) MODULO (CADR POLYCOMP) PRIME)
               (CADDR POLYACCUM)))) 
(PUT 'LP_CMPLPLEAD 'NUMBER-OF-ARGS 2) 
(DE LP_CMPLPLEAD (LP1 LP2) (POLY_CMPPOLYLEAD (CADR LP1) (CADR LP2))) 
(PUT 'LP_CMPLPLEADREVERSE 'NUMBER-OF-ARGS 2) 
(DE LP_CMPLPLEADREVERSE (LP1 LP2) (LP_CMPLPLEAD LP2 LP1)) 
(PUT 'LP_LEADTOTALDEGREECMP 'NUMBER-OF-ARGS 2) 
(DE LP_LEADTOTALDEGREECMP (LP1 LP2)
    (POLY_LEADTOTALDEGREECMP (CADR LP1) (CADR LP2))) 
(ENDMODULE) 