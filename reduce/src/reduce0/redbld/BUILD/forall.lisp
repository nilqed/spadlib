(cl:declaim (cl:optimize cl:debug cl:safety))
(cl:declaim (sb-ext:muffle-conditions sb-ext:compiler-note cl:style-warning))
(MODULE (LIST 'FORALL)) 
(FLUID '(*RESIMP *SUB2 ALGLIST* ARBL* ASYMPLIS* FRASC* WTL*)) 
(FLUID '(**NOREMOVE** FRLIS* NEWRULE* OLDRULES* PROPS* SUBFG*)) 
(FLUID '(*REDUCE4 *SQRTRULEP POWLIS* POWLIS1* VARSTACK*)) 
(GLOBAL '(*MATCH CURSYM* ERFG* LETL* MCOND*)) 
(SETQ LETL* '(LET MATCH CLEAR SAVEAS SUCH)) 
(REMPROP 'FORALL 'STAT) 
(REMPROP 'FORALL 'FORMFN) 
(PUT 'FORALLSTAT 'NUMBER-OF-ARGS 0) 
(PUT 'FORALLSTAT 'DEFINED-ON-LINE '49) 
(PUT 'FORALLSTAT 'DEFINED-IN-FILE 'ALG/FORALL.RED) 
(PUT 'FORALLSTAT 'PROCEDURE_TYPE '(ARROW UNIT GENERAL)) 
(DE FORALLSTAT NIL
    (PROG (ARBL CONDS)
      (COND ((MEMQ CURSYM* LETL*) (SYMERR 'FORALL T)))
      (FLAG LETL* 'DELIM)
      (SETQ ARBL (REMCOMMA (XREAD NIL)))
      (COND
       ((EQ CURSYM* 'SUCH)
        (PROGN
         (COND ((NOT (EQ (SCAN) 'THAT)) (SYMERR 'LET T)))
         (SETQ CONDS (XREAD NIL)))))
      (REMFLAG LETL* 'DELIM)
      (COND ((NOT (MEMQ CURSYM* LETL*)) (SYMERR 'LET T))
            (T (RETURN (LIST 'FORALL ARBL CONDS (XREAD1 T))))))) 
(PUT 'FORALL 'NUMBER-OF-ARGS 1) 
(PUT 'FORALL 'DEFINED-ON-LINE '62) 
(PUT 'FORALL 'DEFINED-IN-FILE 'ALG/FORALL.RED) 
(PUT 'FORALL 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE FORALL (U)
    (PROG (V X Y)
      (SETQ V
              (PROG (J FORALL-RESULT FORALL-ENDPTR)
                (SETQ J (CAR U))
                (COND ((NULL J) (RETURN NIL)))
                (SETQ FORALL-RESULT
                        (SETQ FORALL-ENDPTR
                                (CONS
                                 ((LAMBDA (J)
                                    (COND ((NULL J) (RSVERR J)) (T J)))
                                  (CAR J))
                                 NIL)))
               LOOPLABEL
                (SETQ J (CDR J))
                (COND ((NULL J) (RETURN FORALL-RESULT)))
                (RPLACD FORALL-ENDPTR
                        (CONS
                         ((LAMBDA (J) (COND ((NULL J) (RSVERR J)) (T J)))
                          (CAR J))
                         NIL))
                (SETQ FORALL-ENDPTR (CDR FORALL-ENDPTR))
                (GO LOOPLABEL)))
      (SETQ X
              (PROG (J FORALL-RESULT FORALL-ENDPTR)
                (SETQ J V)
                (COND ((NULL J) (RETURN NIL)))
                (SETQ FORALL-RESULT
                        (SETQ FORALL-ENDPTR
                                (CONS ((LAMBDA (J) (NEWVAR J)) (CAR J)) NIL)))
               LOOPLABEL
                (SETQ J (CDR J))
                (COND ((NULL J) (RETURN FORALL-RESULT)))
                (RPLACD FORALL-ENDPTR
                        (CONS ((LAMBDA (J) (NEWVAR J)) (CAR J)) NIL))
                (SETQ FORALL-ENDPTR (CDR FORALL-ENDPTR))
                (GO LOOPLABEL)))
      (SETQ Y (PAIR V X))
      (SETQ MCOND* (COND ((EQ (CADR U) 'T) T) (T (SUBLA Y (CADR U)))))
      (SETQ FRASC* Y)
      (SETQ FRLIS* (UNION X FRLIS*))
      (RETURN (LISPEVAL (CADDR U))))) 
(PUT 'ARBSTAT 'NUMBER-OF-ARGS 0) 
(PUT 'ARBSTAT 'DEFINED-ON-LINE '75) 
(PUT 'ARBSTAT 'DEFINED-IN-FILE 'ALG/FORALL.RED) 
(PUT 'ARBSTAT 'PROCEDURE_TYPE '(ARROW UNIT GENERAL)) 
(DE ARBSTAT NIL
    (PROGN (LPRIW "*****" "ARB no longer supported") (SYMERR 'IF T))) 
(PUT 'ARB 'STAT 'ARBSTAT) 
(PUT 'NEWVAR 'NUMBER-OF-ARGS 1) 
(PUT 'NEWVAR 'DEFINED-ON-LINE '81) 
(PUT 'NEWVAR 'DEFINED-IN-FILE 'ALG/FORALL.RED) 
(PUT 'NEWVAR 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE NEWVAR (U)
    (COND ((NOT (IDP U)) (TYPERR U "free variable"))
          (T
           (INTERN
            (LIST2STRING
             (APPEND (STRING2BYTELIST (ID2STRING '=))
                     (STRING2BYTELIST (ID2STRING U)))))))) 
(PUT 'FORMFORALL 'NUMBER-OF-ARGS 3) 
(PUT 'FORMFORALL 'DEFINED-ON-LINE '87) 
(PUT 'FORMFORALL 'DEFINED-IN-FILE 'ALG/FORALL.RED) 
(PUT 'FORMFORALL 'PROCEDURE_TYPE
     '(ARROW (TIMES GENERAL GENERAL GENERAL) GENERAL)) 
(DE FORMFORALL (U VARS MODE)
    (PROG (ARBL* X Y)
      (SETQ U (CDR U))
      (COND ((NULL (CADR U)) (SETQ X T))
            (T (SETQ X (FORMBOOL (CADR U) VARS MODE))))
      (SETQ Y (FORM1 (CADDR U) VARS MODE))
      (COND ((EQCAR Y 'LET) (SETQ Y (CONS 'LET00 (CDR Y))))
            ((EQCAR Y 'MATCH) (SETQ Y (CONS 'MATCH00 (CDR Y)))))
      (RETURN
       (LIST 'FORALL
             (LIST 'LIST (MKQUOTE (UNION ARBL* (CAR U))) (MKQUOTE X)
                   (MKQUOTE Y)))))) 
(PUT 'DEF 'NUMBER-OF-ARGS 1) 
(PUT 'DEF 'DEFINED-ON-LINE '102) 
(PUT 'DEF 'DEFINED-IN-FILE 'ALG/FORALL.RED) 
(PUT 'DEF 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE DEF (U)
    (PROGN
     (LPRIM "Please do not use the DEF operator; it is no longer supported")
     (PROG (X)
       (SETQ X U)
      LAB
       (COND ((NULL X) (RETURN NIL)))
       ((LAMBDA (X)
          (COND ((OR (NOT (EQEXPR X)) (NOT (IDLISTP (CADR X)))) (ERRPRI2 X T))
                (T
                 (PROGN
                  (MKOP (CAADR X))
                  (FORALL
                   (LIST (CDADR X) T (LIST 'LET (MKARG (LIST X) NIL))))))))
        (CAR X))
       (SETQ X (CDR X))
       (GO LAB)))) 
(PUT 'DEF 'STAT 'RLIS) 
(DEFLIST '((FORALL FORMFORALL)) 'FORMFN) 
(DEFLIST '((FORALL FORALLSTAT)) 'STAT) 
(FLAG '(CLEAR LET MATCH) 'QUOTE) 
(PUT 'FORMLET1 'NUMBER-OF-ARGS 3) 
(PUT 'FORMLET1 'DEFINED-ON-LINE '118) 
(PUT 'FORMLET1 'DEFINED-IN-FILE 'ALG/FORALL.RED) 
(PUT 'FORMLET1 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL GENERAL) GENERAL)) 
(DE FORMLET1 (U VARS MODE)
    (REQUOTE
     (CONS 'LIST
           (PROG (X FORALL-RESULT FORALL-ENDPTR)
             (SETQ X U)
             (COND ((NULL X) (RETURN NIL)))
             (SETQ FORALL-RESULT
                     (SETQ FORALL-ENDPTR
                             (CONS
                              ((LAMBDA (X)
                                 (COND
                                  ((EQEXPR X)
                                   (LIST 'LIST (MKQUOTE (CAR X))
                                         (FORM1 (CADR X) VARS MODE)
                                         (*S2ARG (FORM1 (CADDR X) VARS MODE)
                                                 VARS)))
                                  (T (FORM1 X VARS MODE))))
                               (CAR X))
                              NIL)))
            LOOPLABEL
             (SETQ X (CDR X))
             (COND ((NULL X) (RETURN FORALL-RESULT)))
             (RPLACD FORALL-ENDPTR
                     (CONS
                      ((LAMBDA (X)
                         (COND
                          ((EQEXPR X)
                           (LIST 'LIST (MKQUOTE (CAR X))
                                 (FORM1 (CADR X) VARS MODE)
                                 (*S2ARG (FORM1 (CADDR X) VARS MODE) VARS)))
                          (T (FORM1 X VARS MODE))))
                       (CAR X))
                      NIL))
             (SETQ FORALL-ENDPTR (CDR FORALL-ENDPTR))
             (GO LOOPLABEL))))) 
(PUT 'REQUOTE 'NUMBER-OF-ARGS 1) 
(PUT 'REQUOTE 'DEFINED-ON-LINE '125) 
(PUT 'REQUOTE 'DEFINED-IN-FILE 'ALG/FORALL.RED) 
(PUT 'REQUOTE 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE REQUOTE (U)
    (COND ((OR (ATOM U) (NOT (EQ (CAR U) 'LIST))) U)
          (T ((LAMBDA (X) (COND (X (MKQUOTE X)) (T U))) (REQUOTE1 (CDR U)))))) 
(PUT 'REQUOTE1 'NUMBER-OF-ARGS 1) 
(PUT 'REQUOTE1 'DEFINED-ON-LINE '129) 
(PUT 'REQUOTE1 'DEFINED-IN-FILE 'ALG/FORALL.RED) 
(PUT 'REQUOTE1 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE REQUOTE1 (U)
    (PROG (X Y)
     A
      (COND ((NULL U) (RETURN (REVERSIP X)))
            ((OR (NUMBERP (CAR U)) (MEMQ (CAR U) '(NIL T)))
             (SETQ X (CONS (CAR U) X)))
            ((ATOM (CAR U)) (RETURN NIL))
            ((EQ (CAAR U) 'QUOTE) (SETQ X (CONS (CADAR U) X)))
            ((AND (EQ (CAAR U) 'LIST) (SETQ Y (REQUOTE1 (CDAR U))))
             (SETQ X (CONS Y X)))
            (T (RETURN NIL)))
      (SETQ U (CDR U))
      (GO A))) 
(PUT '*S2ARG 'NUMBER-OF-ARGS 2) 
(PUT '*S2ARG 'DEFINED-ON-LINE '143) 
(PUT '*S2ARG 'DEFINED-IN-FILE 'ALG/FORALL.RED) 
(PUT '*S2ARG 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE *S2ARG (U VARS)
    (COND ((OR (ATOM U) (EQ (CAR U) 'QUOTE)) U)
          ((OR (NOT (IDP (CAR U))) (NOT (FLAGP (CAR U) 'NOCHANGE)))
           (PROG (J FORALL-RESULT FORALL-ENDPTR)
             (SETQ J U)
             (COND ((NULL J) (RETURN NIL)))
             (SETQ FORALL-RESULT
                     (SETQ FORALL-ENDPTR
                             (CONS ((LAMBDA (J) (*S2ARG J VARS)) (CAR J))
                                   NIL)))
            LOOPLABEL
             (SETQ J (CDR J))
             (COND ((NULL J) (RETURN FORALL-RESULT)))
             (RPLACD FORALL-ENDPTR
                     (CONS ((LAMBDA (J) (*S2ARG J VARS)) (CAR J)) NIL))
             (SETQ FORALL-ENDPTR (CDR FORALL-ENDPTR))
             (GO LOOPLABEL)))
          (T (MKARG U VARS)))) 
(PUT 'LET 'FORMFN 'FORMLET) 
(PUT 'CLEAR 'FORMFN 'FORMCLEAR) 
(PUT 'MATCH 'FORMFN 'FORMMATCH) 
(PUT 'FORMCLEAR 'NUMBER-OF-ARGS 3) 
(PUT 'FORMCLEAR 'DEFINED-ON-LINE '156) 
(PUT 'FORMCLEAR 'DEFINED-IN-FILE 'ALG/FORALL.RED) 
(PUT 'FORMCLEAR 'PROCEDURE_TYPE
     '(ARROW (TIMES GENERAL GENERAL GENERAL) GENERAL)) 
(DE FORMCLEAR (U VARS MODE) (LIST 'CLEAR (FORMCLEAR1 (CDR U) VARS MODE))) 
(PUT 'FORMCLEAR1 'NUMBER-OF-ARGS 3) 
(PUT 'FORMCLEAR1 'DEFINED-ON-LINE '159) 
(PUT 'FORMCLEAR1 'DEFINED-IN-FILE 'ALG/FORALL.RED) 
(PUT 'FORMCLEAR1 'PROCEDURE_TYPE
     '(ARROW (TIMES GENERAL GENERAL GENERAL) GENERAL)) 
(DE FORMCLEAR1 (U VARS MODE)
    (CONS 'LIST
          (PROG (X FORALL-RESULT FORALL-ENDPTR)
            (SETQ X U)
            (COND ((NULL X) (RETURN NIL)))
            (SETQ FORALL-RESULT
                    (SETQ FORALL-ENDPTR
                            (CONS
                             ((LAMBDA (X)
                                (COND ((FLAGP X 'SHARE) (MKQUOTE X))
                                      (T (FORM1 X VARS MODE))))
                              (CAR X))
                             NIL)))
           LOOPLABEL
            (SETQ X (CDR X))
            (COND ((NULL X) (RETURN FORALL-RESULT)))
            (RPLACD FORALL-ENDPTR
                    (CONS
                     ((LAMBDA (X)
                        (COND ((FLAGP X 'SHARE) (MKQUOTE X))
                              (T (FORM1 X VARS MODE))))
                      (CAR X))
                     NIL))
            (SETQ FORALL-ENDPTR (CDR FORALL-ENDPTR))
            (GO LOOPLABEL)))) 
(PUT 'FORMLET 'NUMBER-OF-ARGS 3) 
(PUT 'FORMLET 'DEFINED-ON-LINE '163) 
(PUT 'FORMLET 'DEFINED-IN-FILE 'ALG/FORALL.RED) 
(PUT 'FORMLET 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL GENERAL) GENERAL)) 
(DE FORMLET (U VARS MODE) (LIST 'LET (FORMLET1 (CDR U) VARS MODE))) 
(PUT 'FORMMATCH 'NUMBER-OF-ARGS 3) 
(PUT 'FORMMATCH 'DEFINED-ON-LINE '166) 
(PUT 'FORMMATCH 'DEFINED-IN-FILE 'ALG/FORALL.RED) 
(PUT 'FORMMATCH 'PROCEDURE_TYPE
     '(ARROW (TIMES GENERAL GENERAL GENERAL) GENERAL)) 
(DE FORMMATCH (U VARS MODE) (LIST 'MATCH (FORMLET1 (CDR U) VARS MODE))) 
(PUT 'LET 'NUMBER-OF-ARGS 1) 
(PUT 'LET 'DEFINED-ON-LINE '169) 
(PUT 'LET 'DEFINED-IN-FILE 'ALG/FORALL.RED) 
(PUT 'LET 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE LET (U) (LET0 U)) 
(PUT 'LET0 'NUMBER-OF-ARGS 1) 
(PUT 'LET0 'DEFINED-ON-LINE '172) 
(PUT 'LET0 'DEFINED-IN-FILE 'ALG/FORALL.RED) 
(PUT 'LET0 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE LET0 (U) ((LAMBDA (FRASC*) (LET00 U)) NIL)) 
(PUT 'LET00 'NUMBER-OF-ARGS 1) 
(PUT 'LET00 'DEFINED-ON-LINE '175) 
(PUT 'LET00 'DEFINED-IN-FILE 'ALG/FORALL.RED) 
(PUT 'LET00 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE LET00 (U)
    (PROG ()
      (SETQ U (ERRORSET* (LIST 'LET1 (MKQUOTE U)) T))
      (SETQ FRASC* (SETQ MCOND* NIL))
      (COND ((ERRORP U) (ERROR1)) (T (RETURN (CAR U)))))) 
(PUT 'LET1 'NUMBER-OF-ARGS 1) 
(PUT 'LET1 'DEFINED-ON-LINE '182) 
(PUT 'LET1 'DEFINED-IN-FILE 'ALG/FORALL.RED) 
(PUT 'LET1 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE LET1 (U)
    (PROG (X Y)
      (SETQ U (REVERSE U))
      (PROG ()
       WHILELABEL
        (COND ((NOT U) (RETURN NIL)))
        (PROGN
         (COND ((IDP U) (TYPERR U "rule list"))
               ((EQCAR (SETQ Y (LISTEVAL0 (SETQ X (CAR U)))) 'LIST)
                (RULE-LIST (REVERSE (CDR Y)) T))
               ((IDP X) (REVALRULETST X))
               ((EQ (CAR X) 'REPLACEBY)
                (COND
                 (FRASC* (RERROR 'ALG 100 "=> invalid in FOR ALL statement"))
                 (T (RULE-LIST (LIST X) T))))
               ((EQ (CAR X) 'EQUAL)
                (COND
                 ((SMEMQ '~ X)
                  (COND (FRASC* (TYPERR X "rule")) (T (RULE-LIST (LIST X) T))))
                 (T (LET2 (CADR X) (CADDR X) NIL T))))
               (T (REVALRULETST X)))
         (SETQ U (CDR U)))
        (GO WHILELABEL)))) 
(PUT 'REVALRULETST 'NUMBER-OF-ARGS 1) 
(PUT 'REVALRULETST 'DEFINED-ON-LINE '204) 
(PUT 'REVALRULETST 'DEFINED-IN-FILE 'ALG/FORALL.RED) 
(PUT 'REVALRULETST 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE REVALRULETST (U)
    ((LAMBDA (V) (COND ((NEQ U V) (LET1 (LIST V))) (T (TYPERR U "rule list"))))
     (REVAL1 U T))) 
(PUT 'LET2 'NUMBER-OF-ARGS 4) 
(PUT 'LET2 'DEFINED-ON-LINE '208) 
(PUT 'LET2 'DEFINED-IN-FILE 'ALG/FORALL.RED) 
(PUT 'LET2 'PROCEDURE_TYPE
     '(ARROW (TIMES GENERAL GENERAL GENERAL GENERAL) GENERAL)) 
(DE LET2 (U V W B)
    (PROG (FLGG X Y Z)
      (COND
       ((AND (SETQ Y (GETRTYPE U)) (SETQ Z (GET Y 'TYPELETFN))
             (FLAGP Z 'DIRECT))
        (RETURN (LISPAPPLY Z (LIST U V Y B (GETRTYPE V)))))
       ((AND (SETQ Y (GETRTYPE V)) (SETQ Z (GET Y 'TYPELETFN))
             (FLAGP Z 'DIRECT))
        (RETURN (LISPAPPLY Z (LIST U V NIL B Y)))))
      (SETQ X (SUBLA FRASC* U))
      (COND
       ((NEQ X U)
        (COND ((ATOM X) (RETURN (ERRPRI1 U)))
              (T (PROGN (SETQ FLGG T) (SETQ U X))))))
      (SETQ X (SUBLA FRASC* V))
      (COND
       ((NEQ X V)
        (PROGN
         (SETQ V X)
         (COND ((EQCAR V '*SQ*) (SETQ V (PREPSQ* (CADR V))))))))
      (SETQ X (SMEMQL FRLIS* MCOND*))
      (SETQ Y (SMEMQL FRLIS* U))
      (COND
       ((OR (SETQ Z (SETDIFF X Y))
            (SETQ Z (SETDIFF (SETDIFF (SMEMQL FRLIS* V) X) (SETDIFF Y X))))
        (PROGN
         (LPRIE (CONS "Unmatched free variable(s)" Z))
         (SETQ ERFG* 'HOLD)
         (RETURN NIL)))
       ((ATOM U) NIL) ((EQ (CAR U) 'GETEL) (SETQ U (LISPEVAL (CADR U))))
       ((FLAGP (CAR U) 'IMMEDIATE) (SETQ U (REVAL1 U T))))
      (RETURN (LET3 U V W B FLGG)))) 
(PUT 'LET3 'NUMBER-OF-ARGS 5) 
(PUT 'LET3 'DEFINED-ON-LINE '242) 
(PUT 'LET3 'DEFINED-IN-FILE 'ALG/FORALL.RED) 
(PUT 'LET3 'PROCEDURE_TYPE
     '(ARROW (TIMES GENERAL GENERAL GENERAL GENERAL GENERAL) GENERAL)) 
(DE LET3 (U V W B FLGG)
    (PROG (X Y1 Y2 Z)
      (SETQ X U)
      (COND ((NULL X) (PROGN (SETQ U 0) (RETURN (ERRPRI1 U))))
            ((NUMBERP X) (RETURN (ERRPRI1 U))))
      (SETQ Y2 (GETRTYPE V))
      (COND ((AND B (IDP X)) (PROGN (REMPROP X 'RTYPE) (REMPROP X 'AVALUE))))
      (COND
       ((SETQ Y1 (GETRTYPE X))
        (RETURN
         (COND
          ((SETQ Z (GET Y1 'TYPELETFN))
           (LISPAPPLY Z (LIST X V Y1 B (GETRTYPE V))))
          (T (TYPELET X V Y1 B (GETRTYPE V))))))
       ((AND Y2 (NOT (EQ Y2 'YETUNKNOWNTYPE)))
        (RETURN
         (COND ((SETQ Z (GET Y2 'TYPELETFN)) (LISPAPPLY Z (LIST X V NIL B Y2)))
               (T (TYPELET X V NIL B Y2)))))
       (T (LETSCALAR U V W X B FLGG))))) 
(PUT 'LETSCALAR 'NUMBER-OF-ARGS 6) 
(PUT 'LETSCALAR 'DEFINED-ON-LINE '268) 
(PUT 'LETSCALAR 'DEFINED-IN-FILE 'ALG/FORALL.RED) 
(PUT 'LETSCALAR 'PROCEDURE_TYPE
     '(ARROW (TIMES GENERAL GENERAL GENERAL GENERAL GENERAL GENERAL) GENERAL)) 
(DE LETSCALAR (U V W X B FLGG)
    (PROG ()
      (COND
       ((NOT (ATOM X))
        (COND ((NOT (IDP (CAR X))) (RETURN (ERRPRI2 U 'HOLD)))
              ((EQ (CAR X) 'DF)
               (COND ((NULL (LETDF U V W X B)) NIL) (T (RETURN NIL))))
              ((GETRTYPE (CAR X)) (RETURN (LET2 (REVAL1 X T) V W B)))
              ((NOT (GET (CAR X) 'SIMPFN))
               (PROGN
                (REDMSG (CAR X) "operator")
                (MKOP (CAR X))
                (RETURN (LET3 U V W B FLGG))))
              (T NIL)))
       ((AND (NULL B) (NULL W))
        (PROGN
         (REMPROP X 'AVALUE)
         (REMPROP X 'RTYPE)
         (REMFLAG (LIST X) 'ANTISYMMETRIC)
         (REMPROP X 'INFIX)
         (REMPROP X 'KVALUE)
         (REMFLAG (LIST X) 'LINEAR)
         (REMFLAG (LIST X) 'NONCOM)
         (REMPROP X 'OP)
         (REMPROP X 'OPMTCH)
         (REMPROP X 'SIMPFN)
         (REMFLAG (LIST X) 'SYMMETRIC)
         (SETQ WTL* (DELASC X WTL*))
         (COND ((FLAGP X 'OPFN) (PROGN (REMFLAG (LIST X) 'OPFN) (REMD X))))
         (RMSUBS)
         (RETURN NIL))))
      (COND
       ((AND (EQCAR X 'EXPT) (MEMQ (CADDR X) FRLIS*))
        (LETEXPRN U V W (CONS (LIST (CONS (TO X 1) 1)) 1) B FLGG))
       ((EQCAR X 'SQRT)
        (PROGN
         (SETQ *SQRTRULEP T)
         (LET2 (LIST 'EXPT (CADR X) '(QUOTIENT 1 2)) V W B))))
      (SETQ VARSTACK* (DELETE X VARSTACK*))
      ((LAMBDA (*PRECISE) (SETQ X (SIMP0 X))) T)
      (RETURN
       (COND
        ((NOT (OR (ATOM (CAR X)) (ATOM (CAR (CAR X)))))
         (LETEXPRN U V W X B FLGG))
        (T (ERRPRI1 U)))))) 
(PUT 'LETEXPRN 'NUMBER-OF-ARGS 6) 
(PUT 'LETEXPRN 'DEFINED-ON-LINE '315) 
(PUT 'LETEXPRN 'DEFINED-IN-FILE 'ALG/FORALL.RED) 
(PUT 'LETEXPRN 'PROCEDURE_TYPE
     '(ARROW (TIMES GENERAL GENERAL GENERAL GENERAL GENERAL GENERAL) GENERAL)) 
(DE LETEXPRN (U V W X B FLGG)
    (PROG (Y Z)
      (COND
       ((NEQ (CDR X) 1)
        (RETURN
         (LET2 (LET-PREPF (CAR X)) (LIST 'TIMES (LET-PREPF (CDR X)) V) W B)))
       ((CDR (SETQ X (CAR X)))
        (RETURN
         (LET2 (LET-PREPF (LIST (CAR X)))
               (LIST 'DIFFERENCE V (LET-PREPF (CDR X))) W B)))
       ((NULL (SETQ Y (KERNLP X)))
        (PROGN
         (SETQ Y (TERM-SPLIT X))
         (RETURN
          (LET2 (LET-PREPF (CAR Y)) (LIST 'DIFFERENCE V (LET-PREPF (CDR Y))) W
                B))))
       ((NEQ Y 1)
        (RETURN
         (LET2 (LET-PREPF (QUOTF* X Y)) (LIST 'QUOTIENT V (LET-PREPF Y)) W
               B))))
      (SETQ X (KLISTT X))
      (SETQ Y (LIST (CONS W (COND (MCOND* MCOND*) (T T))) V NIL))
      (COND
       ((CDR X)
        (RETURN (PROGN (RMSUBS) (SETQ *MATCH (XADD* (CONS X Y) *MATCH B)))))
       ((AND (NULL W) (EQUAL (CDAR X) 1))
        (PROGN
         (SETQ X (CAAR X))
         (COND
          ((AND (NULL FLGG)
                (OR (NULL MCOND*) (EQ MCOND* 'T) (NOT (SMEMBER X MCOND*))))
           (PROGN
            (COND ((ATOM X) (COND ((FLAGP X 'USED*) (RMSUBS)) (T NIL)))
                  ((OR (MEMQ 'USED* (CDDR (FKERN X))) (EQ (CAR X) 'DF))
                   (RMSUBS)))
            (SETK1 X V B)))
          ((ATOM X) (RETURN (ERRPRI1 U)))
          (T
           (PROGN
            (RMSUBS)
            (PUT (CAR X) 'OPMTCH
                 (XADD* (CONS (CDR X) Y) (GET (CAR X) 'OPMTCH) B)))))))
       (T
        (PROGN
         (RMSUBS)
         (COND
          ((AND (EQUAL V 0) (NULL W) (NOT FLGG))
           (PROGN
            (SETQ ASYMPLIS* (XADD (CAR X) ASYMPLIS* B))
            (SETQ POWLIS*
                    (XADD (CONS (CAAR X) (CONS (CDAR X) Y)) POWLIS*
                          'REPLACE))))
          ((OR W (NOT (EQ (CDAR Y) T)) FRASC*)
           (SETQ POWLIS1* (XADD (CONS (CAR X) Y) POWLIS1* B)))
          ((AND (NULL B) (SETQ Z (ASSOC (CAAR X) ASYMPLIS*)) (EQUAL Z (CAR X)))
           (SETQ ASYMPLIS* (DELASC (CAAR X) ASYMPLIS*)))
          (T
           (PROGN
            (SETQ POWLIS* (XADD (CONS (CAAR X) (CONS (CDAR X) Y)) POWLIS* B))
            (COND (B (SETQ ASYMPLIS* (DELASC (CAAR X) ASYMPLIS*)))))))))))) 
(RLISTAT '(CLEAR LET MATCH)) 
(PUT 'CLEARRULES 'NUMBER-OF-ARGS 1) 
(PUT 'CLEARRULES 'DEFINED-ON-LINE '371) 
(PUT 'CLEARRULES 'DEFINED-IN-FILE 'ALG/FORALL.RED) 
(PUT 'CLEARRULES 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE CLEARRULES (U) ((LAMBDA (*SQRTRULEP) (RULE-LIST U NIL)) NIL)) 
(RLISTAT '(CLEARRULES)) 
(PUT 'RULE-LIST 'NUMBER-OF-ARGS 2) 
(PUT 'RULE-LIST 'DEFINED-ON-LINE '378) 
(PUT 'RULE-LIST 'DEFINED-IN-FILE 'ALG/FORALL.RED) 
(PUT 'RULE-LIST 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE RULE-LIST (U TYPE)
    (PROG (V X Y Z)
     A
      (SETQ FRASC* NIL)
      (COND ((OR (NULL U) (EQUAL U (LIST (LIST)))) (RETURN (SETQ MCOND* NIL))))
      (SETQ MCOND* T)
      (SETQ V (CAR U))
      (COND
       ((IDP V)
        (COND
         ((AND (SETQ X (GET V 'AVALUE)) (EQ (CAR X) 'LIST))
          (PROGN (SETQ U (APPEND (REVERSE (CDADR X)) (CDR U))) (GO A)))
         (T (TYPERR V "rule list"))))
       ((EQ (CAR V) 'LIST) (PROGN (SETQ U (APPEND (CDR V) (CDR U))) (GO A)))
       ((EQ (CAR V) 'EQUAL) (LPRIM "Please use => instead of = in rules"))
       ((NOT (EQ (CAR V) 'REPLACEBY)) (TYPERR V "rule")))
      (SETQ Y (REMOVE-FREE-VARS (CADR V)))
      (COND
       ((EQCAR (CADDR V) 'WHEN)
        (PROGN
         (SETQ MCOND*
                 (FORMBOOL (REMOVE-FREE-VARS* (CADDR (CADDR V))) NIL
                           'ALGEBRAIC))
         (SETQ Z (REMOVE-FREE-VARS* (CADR (CADDR V))))))
       (T (SETQ Z (REMOVE-FREE-VARS* (CADDR V)))))
      (RULE* Y Z FRASC* MCOND* TYPE)
      (SETQ U (CDR U))
      (GO A))) 
(PUT 'RULE* 'NUMBER-OF-ARGS 5) 
(PUT 'RULE* 'DEFINED-ON-LINE '406) 
(PUT 'RULE* 'DEFINED-IN-FILE 'ALG/FORALL.RED) 
(PUT 'RULE* 'PROCEDURE_TYPE
     '(ARROW (TIMES GENERAL GENERAL GENERAL GENERAL GENERAL) GENERAL)) 
(DE RULE* (U V FRASC MCOND TYPE)
    (PROG (X)
      (SETQ FRASC* FRASC)
      (SETQ MCOND* (OR (EQ MCOND T) (SUBLA FRASC MCOND)))
      (COND
       ((AND TYPE (NEQ TYPE 'OLD))
        (PROGN
         (SETQ NEWRULE* (LIST U V FRASC MCOND))
         (COND
          ((IDP U)
           (PROGN
            (COND
             ((SETQ X (GET U 'RTYPE))
              (PROGN
               (SETQ PROPS* (CONS (CONS U (CONS 'RTYPE X)) PROPS*))
               (REMPROP U 'RTYPE))))
            (COND
             ((SETQ X (GET U 'AVALUE))
              (PROGN (UPDOLDRULES X NIL) (REMPROP U 'AVALUE)))))))
         (COND
          ((AND (EQUAL V 0) (EQCAR U 'EXPT) (IDP (CADR U)) (NUMBERP (CADDR U))
                (SETQ X (ASSOC (CADR U) ASYMPLIS*)))
           (UPDOLDRULES X NIL))))))
      (RETURN (RULE U V FRASC (COND ((EQ TYPE 'OLD) T) (T TYPE)))))) 
(PUT 'RULE 'NUMBER-OF-ARGS 4) 
(PUT 'RULE 'DEFINED-ON-LINE '430) 
(PUT 'RULE 'DEFINED-IN-FILE 'ALG/FORALL.RED) 
(PUT 'RULE 'PROCEDURE_TYPE
     '(ARROW (TIMES GENERAL GENERAL GENERAL GENERAL) GENERAL)) 
(DE RULE (U V FRASC TYPE)
    (PROG (FLG FRLIS X Y Z)
      (SETQ X (SUBLA FRASC U))
      (COND
       ((NEQ X U)
        (COND ((ATOM X) (RETURN (ERRPRI1 U)))
              (T (PROGN (SETQ FLG T) (SETQ U X))))))
      (SETQ X (SUBLA FRASC V))
      (COND
       ((NEQ X V)
        (PROGN
         (SETQ V X)
         (COND ((EQCAR V '*SQ*) (SETQ V (PREPSQ* (CADR V))))))))
      (SETQ FRLIS
              (PROG (J FORALL-RESULT FORALL-ENDPTR)
                (SETQ J FRASC)
                (COND ((NULL J) (RETURN NIL)))
                (SETQ FORALL-RESULT
                        (SETQ FORALL-ENDPTR
                                (CONS ((LAMBDA (J) (CDR J)) (CAR J)) NIL)))
               LOOPLABEL
                (SETQ J (CDR J))
                (COND ((NULL J) (RETURN FORALL-RESULT)))
                (RPLACD FORALL-ENDPTR
                        (CONS ((LAMBDA (J) (CDR J)) (CAR J)) NIL))
                (SETQ FORALL-ENDPTR (CDR FORALL-ENDPTR))
                (GO LOOPLABEL)))
      (SETQ X (SMEMQL FRLIS MCOND*))
      (SETQ Y (SMEMQL FRLIS U))
      (COND
       ((OR (SETQ Z (SETDIFF X Y))
            (SETQ Z (SETDIFF (SETDIFF (SMEMQL FRLIS V) X) (SETDIFF Y X))))
        (PROGN
         (LPRIE (CONS "Unmatched free variable(s)" Z))
         (SETQ ERFG* 'HOLD)
         (RETURN NIL)))
       ((EQCAR U 'GETEL) (SETQ U (LISPEVAL (CADR U)))))
      (RETURN (LET3 U V NIL TYPE FLG)))) 
(MKOP '~) 
(PUT '~ 'PRIFN 'TILDEPRI) 
(PUT 'TILDEPRI 'NUMBER-OF-ARGS 1) 
(PUT 'TILDEPRI 'DEFINED-ON-LINE '462) 
(PUT 'TILDEPRI 'DEFINED-IN-FILE 'ALG/FORALL.RED) 
(PUT 'TILDEPRI 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE TILDEPRI (U)
    (PROGN
     (PRIN2* "~")
     (COND ((EQCAR (CADR U) '~) (TILDEPRI (CADR U))) (T (PRIN2* (CADR U)))))) 
(NEWTOK '((= >) REPLACEBY)) 
(INFIX (LIST 'REPLACEBY)) 
(PRECEDENCE (LIST 'REPLACEBY 'TO)) 
(PUT 'EQUALREPLACEBY 'NUMBER-OF-ARGS 1) 
(PUT 'EQUALREPLACEBY 'DEFINED-ON-LINE '471) 
(PUT 'EQUALREPLACEBY 'DEFINED-IN-FILE 'ALG/FORALL.RED) 
(PUT 'EQUALREPLACEBY 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE EQUALREPLACEBY (U) (CONS 'REPLACEBY U)) 
(PUT 'REPLACEBY 'PSOPFN 'EQUALREPLACEBY) 
(FLAG '(REPLACEBY) 'EQUALOPR) 
(FLAG '(REPLACEBY) 'SPACED) 
(PUT 'FORMREPLACEBY 'NUMBER-OF-ARGS 3) 
(PUT 'FORMREPLACEBY 'DEFINED-ON-LINE '480) 
(PUT 'FORMREPLACEBY 'DEFINED-IN-FILE 'ALG/FORALL.RED) 
(PUT 'FORMREPLACEBY 'PROCEDURE_TYPE
     '(ARROW (TIMES GENERAL GENERAL GENERAL) GENERAL)) 
(DE FORMREPLACEBY (U VARS MODE)
    (LIST 'LIST (MKQUOTE (CAR U)) (FORM1 (CADR U) VARS MODE)
          (*S2ARG (FORM1 (CADDR U) VARS MODE) VARS))) 
(PUT 'REPLACEBY 'FORMFN 'FORMREPLACEBY) 
(INFIX (LIST 'WHEN)) 
(PRECEDENCE (LIST 'WHEN 'REPLACEBY)) 
(PUT 'FORMWHEN 'NUMBER-OF-ARGS 3) 
(PUT 'FORMWHEN 'DEFINED-ON-LINE '490) 
(PUT 'FORMWHEN 'DEFINED-IN-FILE 'ALG/FORALL.RED) 
(PUT 'FORMWHEN 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL GENERAL) GENERAL)) 
(DE FORMWHEN (U VARS MODE)
    (LIST 'LIST (ALGID 'WHEN VARS) (FORM1 (CADR U) VARS MODE)
          (MKARG (CADDR U) VARS))) 
(PUT 'WHEN 'FORMFN 'FORMWHEN) 
(FLAG '(WHEREEXP) 'LISTARGP) 
(PUT 'WHEREEXP 'PSOPFN 'EVALWHEREEXP) 
(PUT 'EVALWHEREEXP 'NUMBER-OF-ARGS 1) 
(PUT 'EVALWHEREEXP 'DEFINED-ON-LINE '506) 
(PUT 'EVALWHEREEXP 'DEFINED-IN-FILE 'ALG/FORALL.RED) 
(PUT 'EVALWHEREEXP 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE EVALWHEREEXP (U)
    (EVALLETSUB
     (LIST (CDAR U)
           (LIST 'AEVAL (MKQUOTE (LIST 'AEVAL (CARX (CDR U) 'WHERE)))))
     NIL)) 
(FLAG '(AEVAL) 'OPFN) 
(PUT 'EVALLETSUB 'NUMBER-OF-ARGS 2) 
(PUT 'EVALLETSUB 'DEFINED-ON-LINE '526) 
(PUT 'EVALLETSUB 'DEFINED-IN-FILE 'ALG/FORALL.RED) 
(PUT 'EVALLETSUB 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE EVALLETSUB (U V)
    (COND
     ((ERRORP (SETQ U (EVALLETSUB2 U V)))
      (RERROR 'ALG 24 "Invalid simplification"))
     (T (CAR U)))) 
(PUT 'EVALLETSUB2 'NUMBER-OF-ARGS 2) 
(PUT 'EVALLETSUB2 'DEFINED-ON-LINE '531) 
(PUT 'EVALLETSUB2 'DEFINED-IN-FILE 'ALG/FORALL.RED) 
(PUT 'EVALLETSUB2 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE EVALLETSUB2 (U V)
    (PROG (NEWRULE* OLDRULES* PROPS* W)
      (SETQ W (SET_RULES (CAR U) V))
      (SETQ U (ERRORSET* (CADR U) NIL))
      (RESTORE_RULES W)
      (RETURN U))) 
(PUT 'SET_RULES 'NUMBER-OF-ARGS 2) 
(PUT 'SET_RULES 'DEFINED-ON-LINE '547) 
(PUT 'SET_RULES 'DEFINED-IN-FILE 'ALG/FORALL.RED) 
(PUT 'SET_RULES 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE SET_RULES (U V)
    (PROG (*RESIMP X Y Z)
      (PROG (J)
        (SETQ J U)
       LAB
        (COND ((NULL J) (RETURN NIL)))
        ((LAMBDA (J)
           (COND ((EQCAR J 'REPLACEBY) (SETQ Y (CONS J Y)))
                 ((AND (NULL V) (EQCAR J 'EQUAL))
                  (PROGN
                   (LPRIM "Please use => instead of = in rules")
                   (SETQ Y (CONS (CONS 'REPLACEBY (CDR J)) Y))))
                 ((OR (SETQ X (VALIDRULE J))
                      (AND (IDP J) (SETQ X (VALIDRULE (REVAL1 J T)))))
                  (AND (SETQ X (REVERSE (CAR X)))
                       (PROGN (RULE-LIST X T) (SETQ Z (CONS X Z)))))
                 (T (TYPERR J "rule list"))))
         (CAR J))
        (SETQ J (CDR J))
        (GO LAB))
      (RULE-LIST Y T)
      (RETURN (CONS Y Z)))) 
(PUT 'RESTORE_RULES 'NUMBER-OF-ARGS 1) 
(PUT 'RESTORE_RULES 'DEFINED-ON-LINE '563) 
(PUT 'RESTORE_RULES 'DEFINED-IN-FILE 'ALG/FORALL.RED) 
(PUT 'RESTORE_RULES 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE RESTORE_RULES (U)
    ((LAMBDA (*RESIMP)
       (PROGN
        (PROG (J)
          (SETQ J U)
         LAB
          (COND ((NULL J) (RETURN NIL)))
          ((LAMBDA (J) (RULE-LIST J NIL)) (CAR J))
          (SETQ J (CDR J))
          (GO LAB))
        (PROG (J)
          (SETQ J OLDRULES*)
         LAB
          (COND ((NULL J) (RETURN NIL)))
          ((LAMBDA (J)
             (COND
              ((ATOM (CDAR J))
               (COND
                ((IDP (CDAR J))
                 (COND
                  ((EQ (CDAR J) 'SCALAR) (LET3 (CAAR J) (CADR J) NIL T NIL))
                  (T (TYPELET (CAAR J) (CADR J) NIL T (CDAR J)))))
                (T NIL)))
              (T (RULE* (CAR J) (CADR J) (CADDR J) (CADDDR J) 'OLD))))
           (CAR J))
          (SETQ J (CDR J))
          (GO LAB))
        (RESTORE_PROPS)))
     NIL)) 
(PUT 'RESTORE_PROPS 'NUMBER-OF-ARGS 0) 
(PUT 'RESTORE_PROPS 'DEFINED-ON-LINE '576) 
(PUT 'RESTORE_PROPS 'DEFINED-IN-FILE 'ALG/FORALL.RED) 
(PUT 'RESTORE_PROPS 'PROCEDURE_TYPE '(ARROW UNIT GENERAL)) 
(DE RESTORE_PROPS NIL
    (PROG (J)
      (SETQ J PROPS*)
     LAB
      (COND ((NULL J) (RETURN NIL)))
      ((LAMBDA (J)
         (COND ((PAIRP (CDR J)) (PUT (CAR J) (CADR J) (CDDR J)))
               (T (FLAG (LIST (CAR J)) (CDR J)))))
       (CAR J))
      (SETQ J (CDR J))
      (GO LAB))) 
(PUT 'RESIMPCAR 'NUMBER-OF-ARGS 1) 
(PUT 'RESIMPCAR 'DEFINED-ON-LINE '584) 
(PUT 'RESIMPCAR 'DEFINED-IN-FILE 'ALG/FORALL.RED) 
(PUT 'RESIMPCAR 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE RESIMPCAR (U) (RESIMP (CAR U))) 
(PUT 'VALIDRULE 'NUMBER-OF-ARGS 1) 
(PUT 'VALIDRULE 'DEFINED-ON-LINE '586) 
(PUT 'VALIDRULE 'DEFINED-IN-FILE 'ALG/FORALL.RED) 
(PUT 'VALIDRULE 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE VALIDRULE (U)
    ((LAMBDA (X) (COND ((NULL X) NIL) (T (LIST X)))) (VALIDRULE1 U))) 
(PUT 'VALIDRULE1 'NUMBER-OF-ARGS 1) 
(PUT 'VALIDRULE1 'DEFINED-ON-LINE '589) 
(PUT 'VALIDRULE1 'DEFINED-IN-FILE 'ALG/FORALL.RED) 
(PUT 'VALIDRULE1 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE VALIDRULE1 (U)
    (COND ((ATOM U) NIL)
          ((EQ (CAR U) 'LIST)
           (COND ((NULL (CDR U)) (LIST (LIST)))
                 (T
                  (PROG (J FORALL-RESULT FORALL-ENDPTR)
                    (SETQ J (CDR U))
                    (COND ((NULL J) (RETURN NIL)))
                    (SETQ FORALL-RESULT
                            (SETQ FORALL-ENDPTR
                                    (CONS ((LAMBDA (J) (VALIDRULE1 J)) (CAR J))
                                          NIL)))
                   LOOPLABEL
                    (SETQ J (CDR J))
                    (COND ((NULL J) (RETURN FORALL-RESULT)))
                    (RPLACD FORALL-ENDPTR
                            (CONS ((LAMBDA (J) (VALIDRULE1 J)) (CAR J)) NIL))
                    (SETQ FORALL-ENDPTR (CDR FORALL-ENDPTR))
                    (GO LOOPLABEL)))))
          ((EQ (CAR U) 'REPLACEBY) U)
          ((EQ (CAR U) 'EQUAL) (CONS 'REPLACEBY (CDR U))) (T NIL))) 
(PUT 'REMOVE-FREE-VARS* 'NUMBER-OF-ARGS 1) 
(PUT 'REMOVE-FREE-VARS* 'DEFINED-ON-LINE '598) 
(PUT 'REMOVE-FREE-VARS* 'DEFINED-IN-FILE 'ALG/FORALL.RED) 
(PUT 'REMOVE-FREE-VARS* 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE REMOVE-FREE-VARS* (U) ((LAMBDA (**NOREMOVE**) (REMOVE-FREE-VARS U)) T)) 
(PUT 'REMOVE-FREE-VARS 'NUMBER-OF-ARGS 1) 
(PUT 'REMOVE-FREE-VARS 'DEFINED-ON-LINE '601) 
(PUT 'REMOVE-FREE-VARS 'DEFINED-IN-FILE 'ALG/FORALL.RED) 
(PUT 'REMOVE-FREE-VARS 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE REMOVE-FREE-VARS (U)
    (PROG (X W)
      (RETURN
       (COND ((ATOM U) U)
             ((EQ (CAR U) '~)
              (COND
               (**NOREMOVE**
                (COND
                 ((OR (SETQ X (ATSOC (CADR U) FRASC*))
                      (AND (EQCAR (CADR U) '~)
                           (SETQ X (ATSOC (CADADR U) FRASC*))))
                  (CDR X))
                 (T U)))
               ((ATOM (CDR U)) (TYPERR U "free variable"))
               ((NUMBERP (SETQ W (CADR U))) U)
               ((OR (IDP W) (AND (EQCAR W '~) (SETQ W (CADR W))))
                (PROGN
                 (SETQ FRLIS* (UNION (LIST (GET-FREE-FORM (CADR U))) FRLIS*))
                 W))
               ((IDP (CAADR U))
                (PROGN
                 (SETQ FRLIS* (UNION (LIST (GET-FREE-FORM (CAADR U))) FRLIS*))
                 (CONS (CAADR U) (REMOVE-FREE-VARS-L (CDADR U)))))
               (T (TYPERR U "free variable"))))
             (T (REMOVE-FREE-VARS-L U)))))) 
(PUT 'REMOVE-FREE-VARS-L 'NUMBER-OF-ARGS 1) 
(PUT 'REMOVE-FREE-VARS-L 'DEFINED-ON-LINE '635) 
(PUT 'REMOVE-FREE-VARS-L 'DEFINED-IN-FILE 'ALG/FORALL.RED) 
(PUT 'REMOVE-FREE-VARS-L 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE REMOVE-FREE-VARS-L (U)
    (PROG (R W CHANGED)
     TOP
      (COND
       ((ATOM U)
        (PROGN
         (PROG ()
          WHILELABEL
           (COND ((NOT R) (RETURN NIL)))
           (PROGN
            (COND
             ((NOT CHANGED)
              (PROGN
               (COND ((EQUAL (CAAR W) (CAR R)) (SETQ U (CAR W)))
                     (T (PROGN (SETQ U (CONS (CAR R) U)) (SETQ CHANGED T))))))
             (T (SETQ U (CONS (CAR R) U))))
            (SETQ W (CDR W))
            (SETQ R (CDR R)))
           (GO WHILELABEL))
         (RETURN U)))
       ((EQ (CAR U) '*SQ)
        (PROGN (SETQ U (PREPSQ* (CADR U))) (SETQ CHANGED T) (GO TOP))))
      (SETQ W (CONS U W))
      (SETQ R (CONS (REMOVE-FREE-VARS (CAR U)) R))
      (SETQ U (CDR U))
      (GO TOP))) 
(PUT 'GET-FREE-FORM 'NUMBER-OF-ARGS 1) 
(PUT 'GET-FREE-FORM 'DEFINED-ON-LINE '661) 
(PUT 'GET-FREE-FORM 'DEFINED-IN-FILE 'ALG/FORALL.RED) 
(PUT 'GET-FREE-FORM 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE GET-FREE-FORM (U)
    (PROG (X OPT)
      (COND ((SETQ X (ATSOC U FRASC*)) (RETURN (CDR X))))
      (COND
       ((EQCAR U '~)
        (PROGN (SETQ U (CADR U)) (SETQ X '(! ~ ! ~)) (SETQ OPT T)))
       (T (SETQ X '(! ~))))
      (SETQ X (INTERN (COMPRESS (APPEND X (EXPLODE U)))))
      (SETQ FRASC* (CONS (CONS U X) FRASC*))
      (COND (OPT (FLAG (LIST X) 'OPTIONAL)))
      (RETURN X))) 
(PUT 'TERM-SPLIT 'NUMBER-OF-ARGS 1) 
(PUT 'TERM-SPLIT 'DEFINED-ON-LINE '673) 
(PUT 'TERM-SPLIT 'DEFINED-IN-FILE 'ALG/FORALL.RED) 
(PUT 'TERM-SPLIT 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE TERM-SPLIT (U)
    (PROG (X)
      (PROG ()
       WHILELABEL
        (COND ((NOT (NULL (CDR U))) (RETURN NIL)))
        (PROGN (SETQ X (CONS (CAAR U) X)) (SETQ U (CDAR U)))
        (GO WHILELABEL))
      (RETURN (CONS (TPOWADD X (LIST (CAR U))) (TPOWADD X (CDR U)))))) 
(PUT 'TPOWADD 'NUMBER-OF-ARGS 2) 
(PUT 'TPOWADD 'DEFINED-ON-LINE '682) 
(PUT 'TPOWADD 'DEFINED-IN-FILE 'ALG/FORALL.RED) 
(PUT 'TPOWADD 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE TPOWADD (U V)
    (PROGN
     (PROG (J)
       (SETQ J U)
      LAB
       (COND ((NULL J) (RETURN NIL)))
       ((LAMBDA (J) (SETQ V (LIST (CONS J V)))) (CAR J))
       (SETQ J (CDR J))
       (GO LAB))
     V)) 
(PUT 'FRVARSOF 'NUMBER-OF-ARGS 2) 
(PUT 'FRVARSOF 'DEFINED-ON-LINE '685) 
(PUT 'FRVARSOF 'DEFINED-IN-FILE 'ALG/FORALL.RED) 
(PUT 'FRVARSOF 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE FRVARSOF (U L)
    (COND ((MEMQ U FRLIS*) (COND ((MEMQ U L) L) (T (APPEND L (LIST U)))))
          ((ATOM U) L) (T (FRVARSOF (CDR U) (FRVARSOF (CAR U) L))))) 
(PUT 'SIMP0 'NUMBER-OF-ARGS 1) 
(PUT 'SIMP0 'DEFINED-ON-LINE '691) 
(PUT 'SIMP0 'DEFINED-IN-FILE 'ALG/FORALL.RED) 
(PUT 'SIMP0 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE SIMP0 (U)
    (PROG (*FACTOR *COMBINELOGS X Y Z)
      (COND ((EQCAR U '*SQ) (RETURN (SIMP0 (PREPSQ* (CADR U))))))
      (SETQ Y (SETKORDER (FRVARSOF U NIL)))
      (SETQ X (CONS SUBFG* *SUB2))
      (SETQ ALGLIST* (CONS NIL NIL))
      (SETQ SUBFG* NIL)
      (COND
       ((OR (ATOM U)
            (AND (IDP (CAR U))
                 (OR (FLAGP (CAR U) 'SIMP0FN) (GET (CAR U) 'RTYPE))))
        (SETQ Z (SIMP U)))
       (T (SETQ Z (SIMPIDEN U))))
      (RPLACA ALGLIST* (DELASC U (CAR ALGLIST*)))
      (SETQ SUBFG* (CAR X))
      (SETQ *SUB2 (CDR X))
      (SETKORDER Y)
      (RETURN Z))) 
(FLAG '(CONS DIFFERENCE EPS EXPT MINUS PLUS QUOTIENT TIMES) 'SIMP0FN) 
(PUT 'LET-PREPF 'NUMBER-OF-ARGS 1) 
(PUT 'LET-PREPF 'DEFINED-ON-LINE '713) 
(PUT 'LET-PREPF 'DEFINED-IN-FILE 'ALG/FORALL.RED) 
(PUT 'LET-PREPF 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE LET-PREPF (U)
    (SUBLA
     (PROG (X FORALL-RESULT FORALL-ENDPTR)
       (SETQ X FRASC*)
       (COND ((NULL X) (RETURN NIL)))
       (SETQ FORALL-RESULT
               (SETQ FORALL-ENDPTR
                       (CONS ((LAMBDA (X) (CONS (CDR X) (CAR X))) (CAR X))
                             NIL)))
      LOOPLABEL
       (SETQ X (CDR X))
       (COND ((NULL X) (RETURN FORALL-RESULT)))
       (RPLACD FORALL-ENDPTR
               (CONS ((LAMBDA (X) (CONS (CDR X) (CAR X))) (CAR X)) NIL))
       (SETQ FORALL-ENDPTR (CDR FORALL-ENDPTR))
       (GO LOOPLABEL))
     (PREPF U))) 
(PUT 'MATCH 'NUMBER-OF-ARGS 1) 
(PUT 'MATCH 'DEFINED-ON-LINE '716) 
(PUT 'MATCH 'DEFINED-IN-FILE 'ALG/FORALL.RED) 
(PUT 'MATCH 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE MATCH (U) ((LAMBDA (FRASC*) (MATCH00 U)) NIL)) 
(PUT 'MATCH00 'NUMBER-OF-ARGS 1) 
(PUT 'MATCH00 'DEFINED-ON-LINE '719) 
(PUT 'MATCH00 'DEFINED-IN-FILE 'ALG/FORALL.RED) 
(PUT 'MATCH00 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE MATCH00 (U)
    (PROGN
     (PROG (X)
       (SETQ X U)
      LAB
       (COND ((NULL X) (RETURN NIL)))
       ((LAMBDA (X) (LET2 (CADR X) (CADDR X) T T)) (CAR X))
       (SETQ X (CDR X))
       (GO LAB))
     (SETQ FRASC* (SETQ MCOND* NIL)))) 
(PUT 'CLEAR 'NUMBER-OF-ARGS 1) 
(PUT 'CLEAR 'DEFINED-ON-LINE '723) 
(PUT 'CLEAR 'DEFINED-IN-FILE 'ALG/FORALL.RED) 
(PUT 'CLEAR 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE CLEAR (U)
    (PROG ()
      (RMSUBS)
      (SETQ U (ERRORSET* (LIST 'CLEAR1 (MKQUOTE U)) T))
      (SETQ MCOND* (SETQ FRASC* NIL))
      (COND ((ERRORP U) (ERROR1)) (T (RETURN (CAR U)))))) 
(PUT 'CLEAR1 'NUMBER-OF-ARGS 1) 
(PUT 'CLEAR1 'DEFINED-ON-LINE '731) 
(PUT 'CLEAR1 'DEFINED-IN-FILE 'ALG/FORALL.RED) 
(PUT 'CLEAR1 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE CLEAR1 (U)
    (PROG (X Y)
      (PROG ()
       WHILELABEL
        (COND ((NOT U) (RETURN NIL)))
        (PROGN
         (COND
          ((FLAGP (SETQ X (CAR U)) 'SHARE)
           (COND ((NOT (FLAGP X 'RESERVED)) (SET X X)) (T (RSVERR X))))
          ((EQCAR X 'LIST) (SETQ U (CONS NIL (APPEND (CDR X) (CDR U)))))
          ((EQCAR X 'REPLACEBY) (RULE-LIST (LIST X) NIL))
          ((SMEMQ '~ X)
           (COND ((EQCAR X 'EQUAL) (RULE-LIST (LIST X) NIL))
                 (T (RULE-LIST (LIST (LIST 'REPLACEBY X NIL)) NIL))))
          ((SETQ Y (GET (COND ((ATOM X) X) (T (CAR X))) 'CLEARFN))
           (APPLY1 Y X))
          (T (PROGN (LET2 X NIL NIL NIL) (LET2 X NIL T NIL))))
         (SETQ U (CDR U)))
        (GO WHILELABEL)))) 
(PUT 'TYPELET 'NUMBER-OF-ARGS 5) 
(PUT 'TYPELET 'DEFINED-ON-LINE '752) 
(PUT 'TYPELET 'DEFINED-IN-FILE 'ALG/FORALL.RED) 
(PUT 'TYPELET 'PROCEDURE_TYPE
     '(ARROW (TIMES GENERAL GENERAL GENERAL GENERAL GENERAL) GENERAL)) 
(DE TYPELET (U V LTYPE B RTYPE)
    (PROG (LS)
      (COND ((NULL RTYPE) (SETQ RTYPE 'SCALAR)))
      (COND ((EQ LTYPE RTYPE) (GO A)) ((NULL B) (GO C))
            (LTYPE
             (COND
              ((AND (EQ LTYPE 'LIST) (EQ RTYPE 'SCALAR))
               (PROGN (SETQ LS T) (GO L)))
              (T (TYPERR (LIST LTYPE U) RTYPE))))
            ((NOT (ATOM U))
             (COND ((ARRAYP (CAR U)) (GO A)) (T (TYPERR U RTYPE)))))
      (REDMSG U RTYPE)
     L
      (PUT U 'RTYPE RTYPE)
      (SETQ LTYPE RTYPE)
     A
      (COND ((AND B (OR (NOT (ATOM U)) (FLAGP U 'USED*))) (RMSUBS)))
     C
      (COND
       ((NOT (ATOM U))
        (COND ((ARRAYP (CAR U)) (SETELV U (COND (B V) (T NIL))))
              (T
               (PUT (CAR U) 'OPMTCH
                    (XADD*
                     (CONS (CDR U)
                           (LIST (CONS NIL (COND (MCOND* MCOND*) (T T))) V
                                 NIL))
                     (GET (CAR U) 'OPMTCH) B)))))
       ((NULL B)
        (PROGN
         (REMPROP U 'AVALUE)
         (REMPROP U 'RTYPE)
         (COND ((EQ LTYPE 'ARRAY) (REMPROP U 'DIMENSION)))))
       (LS (PROGN (REMPROP U 'RTYPE) (PUT-AVALUE U RTYPE V)))
       (T
        (PROGN
         (COND
          ((SETQ B (GET U 'AVALUE))
           (COND
            ((AND (NOT (EQ RTYPE (CAR B)))
                  (OR (NOT (MEMQ (CAR B) (SETQ LS '(SCALAR LIST))))
                      (NOT (MEMQ RTYPE LS))))
             (TYPERR (LIST (CAR B) U) RTYPE)))))
         (PUT-AVALUE U RTYPE V)))))) 
(PUT 'SETK 'NUMBER-OF-ARGS 2) 
(PUT 'SETK 'DEFINED-ON-LINE '790) 
(PUT 'SETK 'DEFINED-IN-FILE 'ALG/FORALL.RED) 
(PUT 'SETK 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE SETK (U V)
    (COND
     ((NOT (ATOM U))
      ((LAMBDA (X)
         (COND (X (SETK0 (CONS (CAR U) (APPLY1 X (CDR U))) V))
               ((EQ (GET (CAR U) 'RTYPE) 'MATRIX) (SETK0 U V))
               (T (SETK0 (CONS (CAR U) (REVLIS (CDR U))) V))))
       (GET (CAR U) 'EVALARGFN)))
     (T (SETK0 U V)))) 
(PUT 'SETK0 'NUMBER-OF-ARGS 2) 
(PUT 'SETK0 'DEFINED-ON-LINE '798) 
(PUT 'SETK0 'DEFINED-IN-FILE 'ALG/FORALL.RED) 
(PUT 'SETK0 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE SETK0 (U V)
    (PROG (X FRASC*)
      (COND
       ((AND (SETQ X (GETRTYPE V)) (GET X 'SETELEMFN))
        (PROGN (SETQ ALGLIST* (CONS NIL NIL)) (LET2 U V NIL T)))
       ((AND (NOT (ATOM U)) (IDP (CAR U))
             (OR
              (AND (SETQ X (OR (GETRTYPE U) (GET (CAR U) 'RTYPE)))
                   (SETQ X (GET X 'SETELEMFN)))
              (SETQ X (GET (CAR U) 'SETKFN))))
        (PROGN (SETQ ALGLIST* (CONS NIL NIL)) (APPLY2 X U V)))
       ((AND (NULL (ATOM U)) (NULL (ATOM (CAR U)))
             (SETQ X (GET (CAAR U) 'SETSTRUCTFN)))
        (PROGN (SETQ ALGLIST* (CONS NIL NIL)) (APPLY2 X U V)))
       (T (LET2 U V NIL T)))
      (RETURN V))) 
(PUT 'SETK1 'NUMBER-OF-ARGS 3) 
(PUT 'SETK1 'DEFINED-ON-LINE '822) 
(PUT 'SETK1 'DEFINED-IN-FILE 'ALG/FORALL.RED) 
(PUT 'SETK1 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL GENERAL) GENERAL)) 
(DE SETK1 (U V B)
    (PROG (X Y Z *UNCACHED)
      (SETQ *UNCACHED T)
      (COND
       ((ATOM U)
        (PROGN
         (COND
          ((NULL B)
           (PROGN
            (COND ((NOT (GET U 'AVALUE)) (MSGPRI NIL U "not found" NIL NIL))
                  (T (REMPROP U 'AVALUE)))
            (RETURN NIL)))
          ((SETQ X (GET U 'AVALUE)) (PUT-AVALUE U (CAR X) V))
          (T (PUT-AVALUE U 'SCALAR V)))
         (RETURN V)))
       ((NOT (ATOM (CAR U)))
        (RERROR 'ALG 25 "Invalid syntax: improper assignment")))
      (SETQ U (CONS (CAR U) (REVLIS (CDR U))))
      (COND
       ((NULL B)
        (PROGN
         (SETQ Z (ASSOC U WTL*))
         (COND
          ((OR (NOT (SETQ Y (GET (CAR U) 'KVALUE))) (NOT (SETQ X (ASSOC U Y))))
           (PROGN
            (COND
             ((AND (NULL Z) (NULL *SQRTRULEP))
              (MSGPRI NIL U "not found" NIL NIL)))))
          (T (PUT (CAR U) 'KVALUE (DELETE X Y))))
         (COND (Z (SETQ WTL* (DELASC U WTL*))))
         (RETURN NIL)))
       ((NOT (SETQ Y (GET (CAR U) 'KVALUE))) (PUT-KVALUE (CAR U) NIL U V))
       (T
        (PROGN
         (COND
          ((SETQ X (ASSOC U Y))
           (PROGN (UPDOLDRULES U V) (SETQ Y (DELASC (CAR X) Y)))))
         (PUT-KVALUE (CAR U) Y U V))))
      (RETURN V))) 
(PUT 'PUT-AVALUE 'NUMBER-OF-ARGS 3) 
(PUT 'PUT-AVALUE 'DEFINED-ON-LINE '858) 
(PUT 'PUT-AVALUE 'DEFINED-IN-FILE 'ALG/FORALL.RED) 
(PUT 'PUT-AVALUE 'PROCEDURE_TYPE
     '(ARROW (TIMES GENERAL GENERAL GENERAL) GENERAL)) 
(DE PUT-AVALUE (U V W)
    (COND
     ((EQ V 'SCALAR)
      (COND ((AND (EQCAR W '*SQ) (SQ_MEMBER U (CADR W))) (RECURSIVEERROR U))
            (*REDUCE4 (PUTOBJECT U W 'GENERIC))
            (T (PUT U 'AVALUE (LIST V W)))))
     ((SMEMBER U W) (RECURSIVEERROR U)) (T (PUT U 'AVALUE (LIST V W))))) 
(PUT 'SQ_MEMBER 'NUMBER-OF-ARGS 2) 
(PUT 'SQ_MEMBER 'DEFINED-ON-LINE '868) 
(PUT 'SQ_MEMBER 'DEFINED-IN-FILE 'ALG/FORALL.RED) 
(PUT 'SQ_MEMBER 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE SQ_MEMBER (U V) (OR (SF_MEMBER U (CAR V)) (SF_MEMBER U (CDR V)))) 
(PUT 'SF_MEMBER 'NUMBER-OF-ARGS 2) 
(PUT 'SF_MEMBER 'DEFINED-ON-LINE '871) 
(PUT 'SF_MEMBER 'DEFINED-IN-FILE 'ALG/FORALL.RED) 
(PUT 'SF_MEMBER 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE SF_MEMBER (U V)
    (AND (NULL (OR (ATOM V) (ATOM (CAR V))))
         (OR (MVAR_MEMBER U (CAAAR V)) (SF_MEMBER U (CDAR V))
             (SF_MEMBER U (CDR V))))) 
(PUT 'MVAR_MEMBER 'NUMBER-OF-ARGS 2) 
(PUT 'MVAR_MEMBER 'DEFINED-ON-LINE '875) 
(PUT 'MVAR_MEMBER 'DEFINED-IN-FILE 'ALG/FORALL.RED) 
(PUT 'MVAR_MEMBER 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE MVAR_MEMBER (U V)
    (OR (EQUAL U V) (AND (NULL (ATOM V)) (ARGLIST_MEMBER U (CDR V))))) 
(PUT 'ARGLIST_MEMBER 'NUMBER-OF-ARGS 2) 
(PUT 'ARGLIST_MEMBER 'DEFINED-ON-LINE '880) 
(PUT 'ARGLIST_MEMBER 'DEFINED-IN-FILE 'ALG/FORALL.RED) 
(PUT 'ARGLIST_MEMBER 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE ARGLIST_MEMBER (U V)
    (AND (NULL (ATOM V))
         (OR (MVAR_MEMBER U (CAR V)) (ARGLIST_MEMBER U (CDR V))))) 
(PUT 'PUT-KVALUE 'NUMBER-OF-ARGS 4) 
(PUT 'PUT-KVALUE 'DEFINED-ON-LINE '887) 
(PUT 'PUT-KVALUE 'DEFINED-IN-FILE 'ALG/FORALL.RED) 
(PUT 'PUT-KVALUE 'PROCEDURE_TYPE
     '(ARROW (TIMES GENERAL GENERAL GENERAL GENERAL) GENERAL)) 
(DE PUT-KVALUE (U V W X)
    (COND
     ((COND ((EQCAR X '*SQ) (SQ_MEMBER W (CADR X))) (T (SMEMBER W X)))
      (RECURSIVEERROR W))
     (T (PUT U 'KVALUE (ACONC V (LIST W X)))))) 
(PUT 'KLISTT 'NUMBER-OF-ARGS 1) 
(PUT 'KLISTT 'DEFINED-ON-LINE '893) 
(PUT 'KLISTT 'DEFINED-IN-FILE 'ALG/FORALL.RED) 
(PUT 'KLISTT 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE KLISTT (U)
    (COND ((ATOM U) NIL) (T (CONS (CAAR U) (KLISTT (CDR (CARX U 'LIST))))))) 
(PUT 'KERNLP 'NUMBER-OF-ARGS 1) 
(PUT 'KERNLP 'DEFINED-ON-LINE '896) 
(PUT 'KERNLP 'DEFINED-IN-FILE 'ALG/FORALL.RED) 
(PUT 'KERNLP 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE KERNLP (U)
    (COND ((OR (ATOM U) (ATOM (CAR U))) U) ((NULL (CDR U)) (KERNLP (CDAR U)))
          (T NIL))) 
(PUT 'XADD 'NUMBER-OF-ARGS 3) 
(PUT 'XADD 'DEFINED-ON-LINE '901) 
(PUT 'XADD 'DEFINED-IN-FILE 'ALG/FORALL.RED) 
(PUT 'XADD 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL GENERAL) GENERAL)) 
(DE XADD (U V B)
    (PROG (X)
      (SETQ X (ASSOC (CAR U) V))
      (COND
       ((NULL X)
        (COND ((AND B (NOT (EQ B 'REPLACE))) (SETQ V (CONS U V))) (T NIL)))
       (B
        (PROGN
         (SETQ V (DELETE X V))
         (COND
          ((AND (NOT (ATOM (CDR X))) (EQUAL (LENGTH X) 5)) (SETQ X (CDR X))))
         (COND ((NOT (ATOM (CDR X))) (UPDOLDRULES (CADDR X) (CDADR X))))
         (COND ((NOT (EQ B 'REPLACE)) (SETQ V (CONS U V))))))
       ((OR (AND (ATOM (CDR X)) (EQUAL (CDR X) (CDR U)))
            (AND (NOT (ATOM (CDR X))) (EQUAL (CADR X) (CADR U))))
        (SETQ V (DELETE X V))))
      (RETURN V))) 
(PUT 'UPDOLDRULES 'NUMBER-OF-ARGS 2) 
(PUT 'UPDOLDRULES 'DEFINED-ON-LINE '923) 
(PUT 'UPDOLDRULES 'DEFINED-IN-FILE 'ALG/FORALL.RED) 
(PUT 'UPDOLDRULES 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE UPDOLDRULES (V W)
    ((LAMBDA (U)
       (COND ((NULL U) NIL)
             (T
              ((LAMBDA (X)
                 (SETQ OLDRULES*
                         (APPEND
                          (COND
                           ((AND (NOT (ATOM V)) (NUMBERP (CDR V)))
                            (LIST (LIST (LIST 'EXPT (CAR V) (CDR V)) 0 NIL T)))
                           ((ATOM (CAR U))
                            (LIST
                             (LIST (CONS (CAR U) (CAR V)) (CADR V) NIL T)))
                           (T
                            ((LAMBDA (Y)
                               (COND
                                ((NEQ (CAR U) Y)
                                 (LIST (LIST (CAR U) Y X (RSUBLA X W))))
                                (T NIL)))
                             (RSUBLA X V))))
                          OLDRULES*)))
               (CADDR U)))))
     NEWRULE*)) 
(PUT 'XADD* 'NUMBER-OF-ARGS 3) 
(PUT 'XADD* 'DEFINED-ON-LINE '937) 
(PUT 'XADD* 'DEFINED-IN-FILE 'ALG/FORALL.RED) 
(PUT 'XADD* 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL GENERAL) GENERAL)) 
(DE XADD* (U V B)
    (PROG (X Y)
      (SETQ X V)
      (PROG ()
       WHILELABEL
        (COND
         ((NOT
           (AND X
                (NOT
                 (AND (EQUAL (CAR U) (CAAR X)) (EQUAL (CADR U) (CADAR X))))))
          (RETURN NIL)))
        (SETQ X (CDR X))
        (GO WHILELABEL))
      (COND
       (X
        (PROGN
         (SETQ V (DELETE (CAR X) V))
         (SETQ X (CAR X))
         (COND
          ((AND B NEWRULE*)
           (COND
            ((AND (NEQ (CAR X) (SETQ Y (CAR NEWRULE*))) (POWLISP (CAR X)))
             (UPDOLDRULES
              (PREPSQ
               (SIMP
                (LIST 'PLUS Y
                      (LIST 'DIFFERENCE (CADDR X)
                            (CONS 'TIMES
                                  (PROG (J FORALL-RESULT FORALL-ENDPTR)
                                    (SETQ J (CAR X))
                                    (COND ((NULL J) (RETURN NIL)))
                                    (SETQ FORALL-RESULT
                                            (SETQ FORALL-ENDPTR
                                                    (CONS
                                                     ((LAMBDA (J)
                                                        (LIST 'EXPT (CAR J)
                                                              (CDR J)))
                                                      (CAR J))
                                                     NIL)))
                                   LOOPLABEL
                                    (SETQ J (CDR J))
                                    (COND ((NULL J) (RETURN FORALL-RESULT)))
                                    (RPLACD FORALL-ENDPTR
                                            (CONS
                                             ((LAMBDA (J)
                                                (LIST 'EXPT (CAR J) (CDR J)))
                                              (CAR J))
                                             NIL))
                                    (SETQ FORALL-ENDPTR (CDR FORALL-ENDPTR))
                                    (GO LOOPLABEL)))))))
              (CDADR X)))
            (T (UPDOLDRULES (CADDR X) (CDADR X)))))))))
      (COND (B (SETQ V (CONS U V))))
      (RETURN V))) 
(PUT 'POWLISP 'NUMBER-OF-ARGS 1) 
(PUT 'POWLISP 'DEFINED-ON-LINE '965) 
(PUT 'POWLISP 'DEFINED-IN-FILE 'ALG/FORALL.RED) 
(PUT 'POWLISP 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE POWLISP (U)
    (OR (NULL U)
        (AND (NOT (ATOM (CAR U))) (NUMBERP (CDAR U)) (POWLISP (CDR U))))) 
(PUT 'RSUBLA 'NUMBER-OF-ARGS 2) 
(PUT 'RSUBLA 'DEFINED-ON-LINE '968) 
(PUT 'RSUBLA 'DEFINED-IN-FILE 'ALG/FORALL.RED) 
(PUT 'RSUBLA 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE RSUBLA (U V)
    (PROG (X)
      (COND ((OR (NULL U) (NULL V)) (RETURN V))
            ((ATOM V) (RETURN (COND ((SETQ X (RASSOC V U)) (CAR X)) (T V))))
            (T (RETURN (CONS (RSUBLA U (CAR V)) (RSUBLA U (CDR V)))))))) 
(ENDMODULE) 