(cl:declaim (cl:optimize cl:debug cl:safety))
(cl:declaim (sb-ext:muffle-conditions sb-ext:compiler-note cl:style-warning))
(MODULE (LIST 'RLSUPPORT)) 
(PUT 'RLSUPPORT 'REVISION
     "$Id: rlsupport.red 6009 2021-09-08 05:40:57Z thomas-sturm $") 
(PUT 'RLSUPPORT 'COPYRIGHT "(c) 2016-2017 T. Sturm") 
(CREATE-PACKAGE
 '(RLSUPPORT RLTYPE RLBUILTIN RLSERVICE RLBLACKBOX RLPROVIDE RLHELP RLJSON) NIL) 
(EXPORTS (LIST 'REVISION)) 
(EXPORTS (LIST 'COPYRIGHT)) 
(EXPORTS (LIST 'RL_PROVIDESERVICE)) 
(EXPORTS (LIST 'RL_TYPE)) 
(EXPORTS (LIST 'RL_SERVICE)) 
(EXPORTS (LIST 'RL_BLACKBOX)) 
(EXPORTS (LIST 'RL_SERVICEWRAPPER)) 
(EXPORTS (LIST 'RL_EXC)) 
(EXPORTS (LIST 'RL_EXCP)) 
(EXPORTS (LIST 'RL_EXCERR)) 
(EXPORTS (LIST 'RL_HELP)) 
(FLUID '(RL_CID*)) 
(PUT 'REVISION 'NUMBER-OF-ARGS 2) 
(DE REVISION (M REV) (PUT M 'REVISION REV)) 
(PUT 'COPYRIGHT 'NUMBER-OF-ARGS 2) 
(DE COPYRIGHT (M C) (PUT M 'COPYRIGHT C)) 
(DE RL_SKIPEQUAL (PROC)
    (PROGN
     (SCAN)
     (COND
      ((NEQ CURSYM* 'EQUAL)
       (REDERR (LIST "expecting '=' in" PROC "but found" CURSYM*)))))) 
(PUT 'RL_SKIPEQUAL 'NUMBER-OF-ARGS 1) 
(PUT 'RL_SKIPEQUAL 'DEFINED-ON-LINE '73) 
(PUT 'RL_SKIPEQUAL 'DEFINED-IN-FILE 'REDLOG/RLSUPPORT/RLSUPPORT.RED) 
(PUT 'RL_SKIPEQUAL 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(PUTC 'RL_SKIPEQUAL 'INLINE
      '(LAMBDA (PROC)
         (PROGN
          (SCAN)
          (COND
           ((NEQ CURSYM* 'EQUAL)
            (REDERR (LIST "expecting '=' in" PROC "but found" CURSYM*))))))) 
(DE RL_SKIPLCBKT (PROC)
    (PROGN
     (SCAN)
     (COND
      ((NEQ CURSYM* '*LCBKT*)
       (REDERR (LIST "expecting '{' in, " PROC "but found" CURSYM*)))))) 
(PUT 'RL_SKIPLCBKT 'NUMBER-OF-ARGS 1) 
(PUT 'RL_SKIPLCBKT 'DEFINED-ON-LINE '80) 
(PUT 'RL_SKIPLCBKT 'DEFINED-IN-FILE 'REDLOG/RLSUPPORT/RLSUPPORT.RED) 
(PUT 'RL_SKIPLCBKT 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(PUTC 'RL_SKIPLCBKT 'INLINE
      '(LAMBDA (PROC)
         (PROGN
          (SCAN)
          (COND
           ((NEQ CURSYM* '*LCBKT*)
            (REDERR (LIST "expecting '{' in, " PROC "but found" CURSYM*))))))) 
(PUT 'RL_INCLUDE 'NUMBER-OF-ARGS 1) 
(DE RL_INCLUDE (FILENAME)
    (PROG (PATH)
      (COND (IFL* (SETQ PATH (REVERSIP (EXPLODE2 (CAR IFL*)))))
            (T (LPRIM (LIST "empty ifl!* in include" FILENAME))))
      (PROG ()
       WHILELABEL
        (COND ((NOT (NOT (EQCAR PATH '/))) (RETURN NIL)))
        (SETQ PATH (CDR PATH))
        (GO WHILELABEL))
      (SETQ PATH (NCONC (REVERSIP (EXPLODE2 FILENAME)) PATH))
      (INFILE (LIST2STRING (REVERSIP PATH))))) 
(ENDMODULE) 