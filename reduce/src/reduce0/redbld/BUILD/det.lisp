(cl:declaim (cl:optimize cl:debug cl:safety))
(cl:declaim (sb-ext:muffle-conditions sb-ext:compiler-note cl:style-warning))
(MODULE (LIST 'DET)) 
(FLUID
 '(*CRAMER *ROUNDED ASYMPLIS* BAREISS-STEP-SIZE* KORD* POWLIS* POWLIS1* SUBFG*
   WTL*)) 
(SETQ BAREISS-STEP-SIZE* 2) 
(PUT 'SIMPDET 'NUMBER-OF-ARGS 1) 
(PUT 'SIMPDET 'DEFINED-ON-LINE '35) 
(PUT 'SIMPDET 'DEFINED-IN-FILE 'MATRIX/DET.RED) 
(PUT 'SIMPDET 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE SIMPDET (U)
    (PROG (X)
      (RETURN
       (COND
        ((OR *CRAMER *ROUNDED
             ((LAMBDA (*PROTFG)
                (ERRORP
                 (SETQ X (ERRORSET (LIST 'BAREISS-DET (MKQUOTE U)) NIL NIL))))
              T))
         (DETQ (MATSM (CARX U 'DET))))
        (T (CAR X)))))) 
(FLAG '(ARRAY) 'EVAL) 
(FLUID '($HASH)) 
(SETQ $HASH (MKHASH 200 3 NIL)) 
(PUT 'MATRIX_GETHASH 'NUMBER-OF-ARGS 1) 
(PUT 'MATRIX_GETHASH 'DEFINED-ON-LINE '54) 
(PUT 'MATRIX_GETHASH 'DEFINED-IN-FILE 'MATRIX/DET.RED) 
(PUT 'MATRIX_GETHASH 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE MATRIX_GETHASH (KEY)
    (PROG (R)
      (SETQ R (GETHASH KEY $HASH))
      (COND ((EQUAL R NIL) (RETURN NIL)) (T (RETURN (CONS KEY R)))))) 
(PUT 'MATRIX_PUTHASH 'NUMBER-OF-ARGS 2) 
(PUT 'MATRIX_PUTHASH 'DEFINED-ON-LINE '65) 
(PUT 'MATRIX_PUTHASH 'DEFINED-IN-FILE 'MATRIX/DET.RED) 
(PUT 'MATRIX_PUTHASH 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE MATRIX_PUTHASH (KEY VALU) (PUTHASH KEY $HASH VALU)) 
(PUT 'MATRIX_CLRHASH 'NUMBER-OF-ARGS 0) 
(PUT 'MATRIX_CLRHASH 'DEFINED-ON-LINE '68) 
(PUT 'MATRIX_CLRHASH 'DEFINED-IN-FILE 'MATRIX/DET.RED) 
(PUT 'MATRIX_CLRHASH 'PROCEDURE_TYPE '(ARROW UNIT GENERAL)) 
(DE MATRIX_CLRHASH NIL (CLRHASH $HASH)) 
(PUT 'DETQ 'NUMBER-OF-ARGS 1) 
(PUT 'DETQ 'DEFINED-ON-LINE '73) 
(PUT 'DETQ 'DEFINED-IN-FILE 'MATRIX/DET.RED) 
(PUT 'DETQ 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE DETQ (U)
    (PROG (LEN)
      (SETQ LEN 0)
      (SETQ LEN (LENGTH U))
      (PROG (X)
        (SETQ X U)
       LAB
        (COND ((NULL X) (RETURN NIL)))
        ((LAMBDA (X)
           (COND ((NEQ (LENGTH X) LEN) (REDERR "Non square matrix"))))
         (CAR X))
        (SETQ X (CDR X))
        (GO LAB))
      (COND ((EQUAL LEN 1) (RETURN (CAAR U))))
      (MATRIX_CLRHASH)
      (SETQ U (DETQ1 U LEN 0))
      (MATRIX_CLRHASH)
      (RETURN U))) 
(PUT 'DETQ1 'NUMBER-OF-ARGS 3) 
(PUT 'DETQ1 'DEFINED-ON-LINE '86) 
(PUT 'DETQ1 'DEFINED-IN-FILE 'MATRIX/DET.RED) 
(PUT 'DETQ1 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL GENERAL) GENERAL)) 
(DE DETQ1 (U LEN IGNNUM)
    (PROG (N2 ROW SIGN Z)
      (SETQ N2 0)
      (SETQ ROW (CAR U))
      (SETQ N2 1)
      (COND
       ((EQUAL LEN 1)
        (RETURN
         (PROGN
          (PROG ()
           WHILELABEL
            (COND ((NOT (TWOMEM N2 IGNNUM)) (RETURN NIL)))
            (PROGN (SETQ N2 (TIMES 2 N2)) (SETQ ROW (CDR ROW)))
            (GO WHILELABEL))
          (CAR ROW)))))
      (COND ((SETQ Z (MATRIX_GETHASH IGNNUM)) (RETURN (CDR Z))))
      (SETQ LEN (DIFFERENCE LEN 1))
      (SETQ U (CDR U))
      (SETQ Z (CONS NIL 1))
      (PROG (X)
        (SETQ X ROW)
       LAB
        (COND ((NULL X) (RETURN NIL)))
        ((LAMBDA (X)
           (PROGN
            (COND
             ((NOT (TWOMEM N2 IGNNUM))
              (PROGN
               (COND
                ((CAR X)
                 (PROGN
                  (COND (SIGN (SETQ X (NEGSQ X))))
                  (SETQ Z
                          (ADDSQ (MULTSQ X (DETQ1 U LEN (PLUS N2 IGNNUM)))
                                 Z)))))
               (SETQ SIGN (NOT SIGN)))))
            (SETQ N2 (TIMES 2 N2))))
         (CAR X))
        (SETQ X (CDR X))
        (GO LAB))
      (MATRIX_PUTHASH IGNNUM Z)
      (RETURN Z))) 
(PUT 'TWOMEM 'NUMBER-OF-ARGS 2) 
(PUT 'TWOMEM 'DEFINED-ON-LINE '115) 
(PUT 'TWOMEM 'DEFINED-IN-FILE 'MATRIX/DET.RED) 
(PUT 'TWOMEM 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE TWOMEM (N1 N2) (NOT (EVENP (QUOTIENT N2 N1)))) 
(PUT 'DET 'SIMPFN 'SIMPDET) 
(FLAG '(DET) 'IMMEDIATE) 
(PUT 'BAREISS-DET 'NUMBER-OF-ARGS 1) 
(PUT 'BAREISS-DET 'DEFINED-ON-LINE '126) 
(PUT 'BAREISS-DET 'DEFINED-IN-FILE 'MATRIX/DET.RED) 
(PUT 'BAREISS-DET 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE BAREISS-DET (U)
    (PROG (NU BU N OK TEMP V *EXP)
      (SETQ *EXP T)
      (SETQ NU (MATSM (CAR U)))
      (SETQ N (LENGTH NU))
      (PROG (X)
        (SETQ X NU)
       LAB
        (COND ((NULL X) (RETURN NIL)))
        ((LAMBDA (X) (COND ((NEQ (LENGTH X) N) (REDERR "Non square matrix"))))
         (CAR X))
        (SETQ X (CDR X))
        (GO LAB))
      (COND ((EQUAL N 1) (RETURN (CAAR NU))))
      (COND
       ((OR ASYMPLIS* WTL*)
        (PROGN
         (SETQ TEMP (CONS ASYMPLIS* WTL*))
         (SETQ ASYMPLIS* (SETQ WTL* NIL)))))
      (SETQ NU (NORMMAT NU))
      (SETQ V
              (PROG (I FORALL-RESULT FORALL-ENDPTR)
                (SETQ I 1)
                (COND ((MINUSP (DIFFERENCE N I)) (RETURN NIL)))
                (SETQ FORALL-RESULT
                        (SETQ FORALL-ENDPTR (CONS (INTERN (GENSYM)) NIL)))
               LOOPLABEL
                (SETQ I (PLUS2 I 1))
                (COND ((MINUSP (DIFFERENCE N I)) (RETURN FORALL-RESULT)))
                (RPLACD FORALL-ENDPTR (CONS (INTERN (GENSYM)) NIL))
                (SETQ FORALL-ENDPTR (CDR FORALL-ENDPTR))
                (GO LOOPLABEL)))
      (SETQ OK (SETKORDER (APPEND V KORD*)))
      (SETCAR NU
              (PROG (R FORALL-RESULT FORALL-ENDPTR)
                (SETQ R (CAR NU))
                (COND ((NULL R) (RETURN NIL)))
                (SETQ FORALL-RESULT
                        (SETQ FORALL-ENDPTR
                                (CONS ((LAMBDA (R) (PRSUM V R)) (CAR R)) NIL)))
               LOOPLABEL
                (SETQ R (CDR R))
                (COND ((NULL R) (RETURN FORALL-RESULT)))
                (RPLACD FORALL-ENDPTR
                        (CONS ((LAMBDA (R) (PRSUM V R)) (CAR R)) NIL))
                (SETQ FORALL-ENDPTR (CDR FORALL-ENDPTR))
                (GO LOOPLABEL)))
      ((LAMBDA (POWLIS* POWLIS1* SUBFG*)
         (SETQ BU (CDR (SPARSE_BAREISS (CAR NU) V BAREISS-STEP-SIZE*))))
       NIL NIL NIL)
      (SETQ BU
              (COND ((EQUAL (LENGTH BU) N) (CONS (CDAR (CAR BU)) (CDR NU)))
                    (T (CONS NIL 1))))
      (SETKORDER OK)
      (COND (TEMP (PROGN (SETQ ASYMPLIS* (CAR TEMP)) (SETQ WTL* (CDR TEMP)))))
      (COND
       ((GETD 'REMOB)
        (PROG (VV)
          (SETQ VV V)
         LAB
          (COND ((NULL VV) (RETURN NIL)))
          ((LAMBDA (VV) (REMOB VV)) (CAR VV))
          (SETQ VV (CDR VV))
          (GO LAB))))
      (RETURN (RESIMP BU)))) 
(PUT 'SIMPTRACE 'NUMBER-OF-ARGS 1) 
(PUT 'SIMPTRACE 'DEFINED-ON-LINE '156) 
(PUT 'SIMPTRACE 'DEFINED-IN-FILE 'MATRIX/DET.RED) 
(PUT 'SIMPTRACE 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE SIMPTRACE (U)
    (PROG (N Z)
      (SETQ N 0)
      (SETQ U (MATSM (CARX U 'TRACE)))
      (COND ((NEQ (LENGTH U) (LENGTH (CAR U))) (REDERR "Non square matrix")))
      (SETQ N 1)
      (SETQ Z (CONS NIL 1))
      (PROG (X)
        (SETQ X U)
       LAB
        (COND ((NULL X) (RETURN NIL)))
        ((LAMBDA (X) (PROGN (SETQ Z (ADDSQ (NTH X N) Z)) (SETQ N (PLUS N 1))))
         (CAR X))
        (SETQ X (CDR X))
        (GO LAB))
      (RETURN Z))) 
(PUT 'TRACE 'SIMPFN 'SIMPTRACE) 
(ENDMODULE) 