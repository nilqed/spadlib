(cl:declaim (cl:optimize cl:debug cl:safety))
(cl:declaim (sb-ext:muffle-conditions sb-ext:compiler-note cl:style-warning))
(MODULE (LIST 'RESTRICT)) 
(FLUID '(XVARS* KORD* SUBFG*)) 
(GLOBAL '(*SQVAR*)) 
(FLUID '(CFRMCOB* CFRMCRD* CFRMDRV* CFRMRSX*)) 
(PUT '*A2RMAP 'NUMBER-OF-ARGS 1) 
(PUT '*A2RMAP 'DEFINED-ON-LINE '51) 
(PUT '*A2RMAP 'DEFINED-IN-FILE 'EDS/RESTRICT.RED) 
(PUT '*A2RMAP 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE *A2RMAP (U)
    (PROG (MAP RSX)
      (PROG (J)
        (SETQ J (GETRLIST U))
       LAB
        (COND ((NULL J) (RETURN NIL)))
        ((LAMBDA (J)
           (COND
            ((EQEXPR J)
             (PROGN
              (SETQ MAP (CONS (CONS (*A2K (LHS J)) (RHS J)) MAP))
              (SETQ RSX (ADDRSX (CDR (SIMP* (CDAR MAP))) RSX))))
            ((EQCAR (SETQ J (REVAL1 J T)) 'NEQ)
             (SETQ RSX
                     (ADDRSX
                      (CAR (ADDSQ (SIMP* (CADR J)) (NEGSQ (SIMP* (CADDR J)))))
                      RSX)))
            (T (TYPERR J "either equality or inequality"))))
         (CAR J))
        (SETQ J (CDR J))
        (GO LAB))
      (SETQ MAP (UNROLLMAP MAP))
      (SETQ RSX (PULLBACKRSX RSX MAP))
      (RETURN (LIST MAP RSX)))) 
(PUT '*RMAP2A 'NUMBER-OF-ARGS 1) 
(PUT '*RMAP2A 'DEFINED-ON-LINE '68) 
(PUT '*RMAP2A 'DEFINED-IN-FILE 'EDS/RESTRICT.RED) 
(PUT '*RMAP2A 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE *RMAP2A (U)
    (CONS 'LIST
          (APPEND
           (PROG (P FORALL-RESULT FORALL-ENDPTR)
             (SETQ P (CAR U))
             (COND ((NULL P) (RETURN NIL)))
             (SETQ FORALL-RESULT
                     (SETQ FORALL-ENDPTR
                             (CONS
                              ((LAMBDA (P) (LIST 'EQUAL (CAR P) (CDR P)))
                               (CAR P))
                              NIL)))
            LOOPLABEL
             (SETQ P (CDR P))
             (COND ((NULL P) (RETURN FORALL-RESULT)))
             (RPLACD FORALL-ENDPTR
                     (CONS ((LAMBDA (P) (LIST 'EQUAL (CAR P) (CDR P))) (CAR P))
                           NIL))
             (SETQ FORALL-ENDPTR (CDR FORALL-ENDPTR))
             (GO LOOPLABEL))
           (PROG (P FORALL-RESULT FORALL-ENDPTR)
             (SETQ P (CADR U))
             (COND ((NULL P) (RETURN NIL)))
             (SETQ FORALL-RESULT
                     (SETQ FORALL-ENDPTR
                             (CONS ((LAMBDA (P) (LIST 'NEQ P 0)) (CAR P))
                                   NIL)))
            LOOPLABEL
             (SETQ P (CDR P))
             (COND ((NULL P) (RETURN FORALL-RESULT)))
             (RPLACD FORALL-ENDPTR
                     (CONS ((LAMBDA (P) (LIST 'NEQ P 0)) (CAR P)) NIL))
             (SETQ FORALL-ENDPTR (CDR FORALL-ENDPTR))
             (GO LOOPLABEL))))) 
(PUT '*MAP2RMAP 'NUMBER-OF-ARGS 1) 
(PUT '*MAP2RMAP 'DEFINED-ON-LINE '74) 
(PUT '*MAP2RMAP 'DEFINED-IN-FILE 'EDS/RESTRICT.RED) 
(PUT '*MAP2RMAP 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE *MAP2RMAP (X)
    (PROG (RSX)
      (PROG (S)
        (SETQ S X)
       LAB
        (COND ((NULL S) (RETURN NIL)))
        ((LAMBDA (S) (SETQ RSX (ADDRSX (REORDER (CDR (SIMP* (CDR S)))) RSX)))
         (CAR S))
        (SETQ S (CDR S))
        (GO LAB))
      (RETURN (LIST X (REVERSIP RSX))))) 
(COND ((NOT (EQ (GETTYPE 'NEQ) 'OPERATOR)) (MKOP 'NEQ))) 
(PUT 'RESTRICT 'RTYPEFN 'GETRTYPECAR) 
(PUT 'RESTRICT 'CFRMFN 'RESTRICTCFRM) 
(PUT 'RESTRICT 'EDSFN 'RESTRICTEDS) 
(PUT 'RESTRICT 'LISTFN 'RESTRICTLIST) 
(PUT 'RESTRICT 'SIMPFN 'SIMPRESTRICT) 
(PUT 'RESTRICTCFRM 'NUMBER-OF-ARGS 2) 
(PUT 'RESTRICTCFRM 'DEFINED-ON-LINE '98) 
(PUT 'RESTRICTCFRM 'DEFINED-IN-FILE 'EDS/RESTRICT.RED) 
(PUT 'RESTRICTCFRM 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE RESTRICTCFRM (M X) (RESTRICTCFRM1 M (*A2RMAP X))) 
(PUT 'RESTRICTEDS 'NUMBER-OF-ARGS 2) 
(PUT 'RESTRICTEDS 'DEFINED-ON-LINE '104) 
(PUT 'RESTRICTEDS 'DEFINED-IN-FILE 'EDS/RESTRICT.RED) 
(PUT 'RESTRICTEDS 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE RESTRICTEDS (S X) (RESTRICT S (*A2RMAP X))) 
(PUT 'RESTRICTLIST 'NUMBER-OF-ARGS 2) 
(PUT 'RESTRICTLIST 'DEFINED-ON-LINE '110) 
(PUT 'RESTRICTLIST 'DEFINED-IN-FILE 'EDS/RESTRICT.RED) 
(PUT 'RESTRICTLIST 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE RESTRICTLIST (U V)
    (PROG (X)
      (SETQ X (CAR (*A2RMAP (REVAL1 (CADR U) T))))
      (SETQ U (REVAL1 (CAR U) T))
      (RETURN
       (CONS 'LIST
             (PROG (F FORALL-RESULT FORALL-ENDPTR)
               (SETQ F (CDR U))
              STARTOVER
               (COND ((NULL F) (RETURN NIL)))
               (SETQ FORALL-RESULT
                       ((LAMBDA (F)
                          (COND
                           ((NEQ
                             (SETQ F (*PF2A1 (RESTRICTPF (XPARTITOP F) X) V))
                             0)
                            (LIST F))))
                        (CAR F)))
               (SETQ FORALL-ENDPTR (LASTPAIR FORALL-RESULT))
               (SETQ F (CDR F))
               (COND ((ATOM FORALL-ENDPTR) (GO STARTOVER)))
              LOOPLABEL
               (COND ((NULL F) (RETURN FORALL-RESULT)))
               (RPLACD FORALL-ENDPTR
                       ((LAMBDA (F)
                          (COND
                           ((NEQ
                             (SETQ F (*PF2A1 (RESTRICTPF (XPARTITOP F) X) V))
                             0)
                            (LIST F))))
                        (CAR F)))
               (SETQ FORALL-ENDPTR (LASTPAIR FORALL-ENDPTR))
               (SETQ F (CDR F))
               (GO LOOPLABEL)))))) 
(PUT 'SIMPRESTRICT 'NUMBER-OF-ARGS 1) 
(PUT 'SIMPRESTRICT 'DEFINED-ON-LINE '122) 
(PUT 'SIMPRESTRICT 'DEFINED-IN-FILE 'EDS/RESTRICT.RED) 
(PUT 'SIMPRESTRICT 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE SIMPRESTRICT (U)
    ((LAMBDA (F X) (*PF2SQ (REPARTIT (RESTRICTPF F X)))) (XPARTITOP (CAR U))
     (CAR (*A2RMAP (REVAL1 (CADR U) T))))) 
(PUT 'RESTRICTCFRM1 'NUMBER-OF-ARGS 2) 
(PUT 'RESTRICTCFRM1 'DEFINED-ON-LINE '130) 
(PUT 'RESTRICTCFRM1 'DEFINED-IN-FILE 'EDS/RESTRICT.RED) 
(PUT 'RESTRICTCFRM1 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE RESTRICTCFRM1 (M X)
    (PROG (KL RL)
      (COND ((AND (NULL (CAR X)) (NULL (CADR X))) (RETURN M)))
      (SETQ M (COPYCFRM M))
      (SETQ KL (UNION (*MAP2COB (CAR X)) (*RSX2COB (CADR X))))
      (SETQ RL
              (PURGE
               (PROG (P FORALL-RESULT FORALL-ENDPTR)
                 (SETQ P (CAR X))
                STARTOVER
                 (COND ((NULL P) (RETURN NIL)))
                 (SETQ FORALL-RESULT
                         ((LAMBDA (P)
                            (COND
                             ((NOT
                               (CFRMCONSTANT (SETQ P (CDR (SIMP* (CDR P))))))
                              (LIST (MK*SQ (CONS P 1))))))
                          (CAR P)))
                 (SETQ FORALL-ENDPTR (LASTPAIR FORALL-RESULT))
                 (SETQ P (CDR P))
                 (COND ((ATOM FORALL-ENDPTR) (GO STARTOVER)))
                LOOPLABEL
                 (COND ((NULL P) (RETURN FORALL-RESULT)))
                 (RPLACD FORALL-ENDPTR
                         ((LAMBDA (P)
                            (COND
                             ((NOT
                               (CFRMCONSTANT (SETQ P (CDR (SIMP* (CDR P))))))
                              (LIST (MK*SQ (CONS P 1))))))
                          (CAR P)))
                 (SETQ FORALL-ENDPTR (LASTPAIR FORALL-ENDPTR))
                 (SETQ P (CDR P))
                 (GO LOOPLABEL))))
      (SETQ RL (APPEND (CADDR (CDDR M)) (APPEND (CADR X) RL)))
      (SETCAR (CDDR (CDDR M)) (PULLBACKRSX RL (CAR X)))
      (COND
       ((OR (NOT (SUBSETP KL (CADR M))) (MEMBER 0 (CADDR (CDDR M))))
        (RERROR 'EDS 0 "Map image not within target coframing in restrict")))
      (SETCAR (CDDR (CDR M)) (RESTRICTDRV (CADDR (CDR M)) (CAR X)))
      (RETURN (PURGECFRM M)))) 
(PUT '*MAP2COB 'NUMBER-OF-ARGS 1) 
(PUT '*MAP2COB 'DEFINED-ON-LINE '152) 
(PUT '*MAP2COB 'DEFINED-IN-FILE 'EDS/RESTRICT.RED) 
(PUT '*MAP2COB 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE *MAP2COB (X)
    (PROG (F KL)
      (PROG (P)
        (SETQ P X)
       LAB
        (COND ((NULL P) (RETURN NIL)))
        ((LAMBDA (P)
           (PROGN
            (SETQ F (SIMP* (CDR P)))
            (SETQ F
                    (PROG (K FORALL-RESULT FORALL-ENDPTR)
                      (SETQ K (UNION (KERNELS (CDR F)) (KERNELS (CAR F))))
                     STARTOVER
                      (COND ((NULL K) (RETURN NIL)))
                      (SETQ FORALL-RESULT
                              ((LAMBDA (K)
                                 (COND ((EXFORMP K) (XPOWS (EXDFK K)))))
                               (CAR K)))
                      (SETQ FORALL-ENDPTR (LASTPAIR FORALL-RESULT))
                      (SETQ K (CDR K))
                      (COND ((ATOM FORALL-ENDPTR) (GO STARTOVER)))
                     LOOPLABEL
                      (COND ((NULL K) (RETURN FORALL-RESULT)))
                      (RPLACD FORALL-ENDPTR
                              ((LAMBDA (K)
                                 (COND ((EXFORMP K) (XPOWS (EXDFK K)))))
                               (CAR K)))
                      (SETQ FORALL-ENDPTR (LASTPAIR FORALL-ENDPTR))
                      (SETQ K (CDR K))
                      (GO LOOPLABEL)))
            (SETQ F (APPEND (XPOWS (EXDFK (CAR P))) F))
            (SETQ KL (UNION F KL))))
         (CAR P))
        (SETQ P (CDR P))
        (GO LAB))
      (RETURN KL))) 
(PUT '*RSX2COB 'NUMBER-OF-ARGS 1) 
(PUT '*RSX2COB 'DEFINED-ON-LINE '166) 
(PUT '*RSX2COB 'DEFINED-IN-FILE 'EDS/RESTRICT.RED) 
(PUT '*RSX2COB 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE *RSX2COB (X)
    (PROG (F KL)
      (PROG (P)
        (SETQ P X)
       LAB
        (COND ((NULL P) (RETURN NIL)))
        ((LAMBDA (P)
           (PROGN
            (SETQ F (SIMP* P))
            (SETQ F
                    (PROG (K FORALL-RESULT FORALL-ENDPTR)
                      (SETQ K (UNION (KERNELS (CDR F)) (KERNELS (CAR F))))
                     STARTOVER
                      (COND ((NULL K) (RETURN NIL)))
                      (SETQ FORALL-RESULT
                              ((LAMBDA (K)
                                 (COND ((EXFORMP K) (XPOWS (EXDFK K)))))
                               (CAR K)))
                      (SETQ FORALL-ENDPTR (LASTPAIR FORALL-RESULT))
                      (SETQ K (CDR K))
                      (COND ((ATOM FORALL-ENDPTR) (GO STARTOVER)))
                     LOOPLABEL
                      (COND ((NULL K) (RETURN FORALL-RESULT)))
                      (RPLACD FORALL-ENDPTR
                              ((LAMBDA (K)
                                 (COND ((EXFORMP K) (XPOWS (EXDFK K)))))
                               (CAR K)))
                      (SETQ FORALL-ENDPTR (LASTPAIR FORALL-ENDPTR))
                      (SETQ K (CDR K))
                      (GO LOOPLABEL)))
            (SETQ KL (UNION F KL))))
         (CAR P))
        (SETQ P (CDR P))
        (GO LAB))
      (RETURN KL))) 
(PUT 'RESTRICTDRV 'NUMBER-OF-ARGS 2) 
(PUT 'RESTRICTDRV 'DEFINED-ON-LINE '179) 
(PUT 'RESTRICTDRV 'DEFINED-IN-FILE 'EDS/RESTRICT.RED) 
(PUT 'RESTRICTDRV 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE RESTRICTDRV (D X)
    (PROG (R FORALL-RESULT FORALL-ENDPTR)
      (SETQ R D)
      (COND ((NULL R) (RETURN NIL)))
      (SETQ FORALL-RESULT
              (SETQ FORALL-ENDPTR
                      (CONS
                       ((LAMBDA (R)
                          (LIST (CAR R) (CADR R)
                                (MK*SQ (RESTRICTSQ (SIMP* (CADDR R)) X))))
                        (CAR R))
                       NIL)))
     LOOPLABEL
      (SETQ R (CDR R))
      (COND ((NULL R) (RETURN FORALL-RESULT)))
      (RPLACD FORALL-ENDPTR
              (CONS
               ((LAMBDA (R)
                  (LIST (CAR R) (CADR R)
                        (MK*SQ (RESTRICTSQ (SIMP* (CADDR R)) X))))
                (CAR R))
               NIL))
      (SETQ FORALL-ENDPTR (CDR FORALL-ENDPTR))
      (GO LOOPLABEL))) 
(PUT 'RESTRICTSQ 'NUMBER-OF-ARGS 2) 
(PUT 'RESTRICTSQ 'DEFINED-ON-LINE '186) 
(PUT 'RESTRICTSQ 'DEFINED-IN-FILE 'EDS/RESTRICT.RED) 
(PUT 'RESTRICTSQ 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE RESTRICTSQ (Q X) (*PF2SQ (RESTRICTPF (XPARTITSQ Q) X))) 
(PUT 'RESTRICT 'NUMBER-OF-ARGS 2) 
(PUT 'RESTRICT 'DEFINED-ON-LINE '191) 
(PUT 'RESTRICT 'DEFINED-IN-FILE 'EDS/RESTRICT.RED) 
(PUT 'RESTRICT 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE RESTRICT (S X)
    (PROG ()
      (COND ((AND (NULL (CAR X)) (NULL (CADR X))) (RETURN S)))
      (SETQ S (COPYEDS S))
      (SETCAR (CDDR (CDR S)) (RESTRICTCFRM1 (CADDR (CDR S)) X))
      (SETQ S (PURGEEDS* S))
      (PROG (F)
        (SETQ F (LIST 'SOLVED 'PFAFFIAN 'QUASILINEAR 'CLOSED))
       LAB
        (COND ((NULL F) (RETURN NIL)))
        ((LAMBDA (F) (REMFALSEEDS S F)) (CAR F))
        (SETQ F (CDR F))
        (GO LAB))
      (REMPROPEDS S 'INVOLUTIVE)
      (REMKRNS S)
      (SETCAR (CDR S)
              (PROG (F FORALL-RESULT FORALL-ENDPTR)
                (SETQ F (CADR S))
               STARTOVER
                (COND ((NULL F) (RETURN NIL)))
                (SETQ FORALL-RESULT
                        ((LAMBDA (F)
                           (COND ((SETQ F (RESTRICTPF F (CAR X))) (LIST F))))
                         (CAR F)))
                (SETQ FORALL-ENDPTR (LASTPAIR FORALL-RESULT))
                (SETQ F (CDR F))
                (COND ((ATOM FORALL-ENDPTR) (GO STARTOVER)))
               LOOPLABEL
                (COND ((NULL F) (RETURN FORALL-RESULT)))
                (RPLACD FORALL-ENDPTR
                        ((LAMBDA (F)
                           (COND ((SETQ F (RESTRICTPF F (CAR X))) (LIST F))))
                         (CAR F)))
                (SETQ FORALL-ENDPTR (LASTPAIR FORALL-ENDPTR))
                (SETQ F (CDR F))
                (GO LOOPLABEL)))
      (SETCAR (CDDR S)
              (PROG (F FORALL-RESULT FORALL-ENDPTR)
                (SETQ F (CADDR S))
               STARTOVER
                (COND ((NULL F) (RETURN NIL)))
                (SETQ FORALL-RESULT
                        ((LAMBDA (F)
                           (COND ((SETQ F (RESTRICTPF F (CAR X))) (LIST F))
                                 (T
                                  (PROGN
                                   (EDSVERBOSE
                                    "Restriction inconsistent with independence condition"
                                    NIL NIL)
                                   NIL))))
                         (CAR F)))
                (SETQ FORALL-ENDPTR (LASTPAIR FORALL-RESULT))
                (SETQ F (CDR F))
                (COND ((ATOM FORALL-ENDPTR) (GO STARTOVER)))
               LOOPLABEL
                (COND ((NULL F) (RETURN FORALL-RESULT)))
                (RPLACD FORALL-ENDPTR
                        ((LAMBDA (F)
                           (COND ((SETQ F (RESTRICTPF F (CAR X))) (LIST F))
                                 (T
                                  (PROGN
                                   (EDSVERBOSE
                                    "Restriction inconsistent with independence condition"
                                    NIL NIL)
                                   NIL))))
                         (CAR F)))
                (SETQ FORALL-ENDPTR (LASTPAIR FORALL-ENDPTR))
                (SETQ F (CDR F))
                (GO LOOPLABEL)))
      (RETURN (NORMALEDS S)))) 
(PUT 'RESTRICTPF 'NUMBER-OF-ARGS 2) 
(PUT 'RESTRICTPF 'DEFINED-ON-LINE '217) 
(PUT 'RESTRICTPF 'DEFINED-IN-FILE 'EDS/RESTRICT.RED) 
(PUT 'RESTRICTPF 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE RESTRICTPF (F X)
    (COND ((NULL F) NIL) ((NULL X) F)
          (T
           ((LAMBDA (C)
              (COND ((CAR C) (CONS (CONS (CAAR F) C) (RESTRICTPF (CDR F) X)))
                    (T (RESTRICTPF (CDR F) X))))
            (SUBSQ (CDAR F) X))))) 
(PUT 'PULLBACKRSX 'NUMBER-OF-ARGS 2) 
(PUT 'PULLBACKRSX 'DEFINED-ON-LINE '227) 
(PUT 'PULLBACKRSX 'DEFINED-IN-FILE 'EDS/RESTRICT.RED) 
(PUT 'PULLBACKRSX 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE PULLBACKRSX (RSX X)
    (PROG (P FORALL-RESULT FORALL-ENDPTR)
      (SETQ P RSX)
      (COND ((NULL P) (RETURN NIL)))
      (SETQ FORALL-RESULT
              (SETQ FORALL-ENDPTR
                      (CONS
                       ((LAMBDA (P) (MK*SQ (SUBF (CAR (SIMP* P)) X))) (CAR P))
                       NIL)))
     LOOPLABEL
      (SETQ P (CDR P))
      (COND ((NULL P) (RETURN FORALL-RESULT)))
      (RPLACD FORALL-ENDPTR
              (CONS ((LAMBDA (P) (MK*SQ (SUBF (CAR (SIMP* P)) X))) (CAR P))
                    NIL))
      (SETQ FORALL-ENDPTR (CDR FORALL-ENDPTR))
      (GO LOOPLABEL))) 
(ENDMODULE) 