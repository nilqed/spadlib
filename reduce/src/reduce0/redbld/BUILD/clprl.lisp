(cl:declaim (cl:optimize cl:debug cl:safety))
(cl:declaim (sb-ext:muffle-conditions sb-ext:compiler-note cl:style-warning))
(MODULE (LIST 'CLPRL)) 
(REVISION 'CLPRL "$Id: clprl.red 4892 2019-02-01 09:49:06Z fjwright $") 
(COPYRIGHT 'CLPRL "(c) 2001-2017 T. Sturm") 
(LOAD-PACKAGE 'REDLOG) 
(LOAD-PACKAGE 'DVFSF) 
((LAMBDA (*MSG) (LOAD-PACKAGE 'OFSF)) NIL) 
(RL_SET '(OFSF)) 
(FLUID '(*NAT *RLVERBOSE *CLPRLVERBOSE *CLPRLPROJECT CLPRL_RESSTEPS* *MSG)) 
(SWITCH (LIST 'CLPRLVERBOSE 'CLPRLPROJECT)) 
(ON1 'CLPRLVERBOSE) 
(ON1 'CLPRLPROJECT) 
(OFF1 'RLVERBOSE) 
(MKOP 'HORNAND) 
(INFIX (LIST 'HORNAND)) 
(AEVAL (PRECEDENCE (LIST 'EQUIV 'HORNAND))) 
((LAMBDA (*MSG) (NEWTOK '((&) HORNAND))) NIL) 
(FLAG '(HORNAND) 'SPACED) 
(FLAG '(HORNAND) 'NARY) 
(MKOP 'HORNREPL) 
(INFIX (LIST 'HORNREPL)) 
(PUT 'HORNREPL 'NUMBER-OF-ARGS 2) 
(PUT 'HORNREPL 'RTYPEFN 'QUOTEHORN) 
(AEVAL (PRECEDENCE (LIST 'HORNAND 'HORNREPL))) 
((LAMBDA (*MSG) (NEWTOK '((|:| -) HORNREPL))) NIL) 
(FLAG '(HORNREPL) 'SPACED) 
(PUT '*HORNCLAUSE 'RTYPEFN 'QUOTEHORN) 
(PUT '*HORNCLAUSE 'PRIFN
     (FUNCTION (LAMBDA (X) (MAPRIN (CLPRL_PREPHORNCLAUSE (CADR X)))))) 
(PUT 'QUOTEHORN 'NUMBER-OF-ARGS 1) 
(PUT 'QUOTEHORN 'DEFINED-ON-LINE '63) 
(PUT 'QUOTEHORN 'DEFINED-IN-FILE 'CLPRL/CLPRL.RED) 
(PUT 'QUOTEHORN 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE QUOTEHORN (X) 'HORN) 
(PUT 'HORN 'EVFN 'CLPRL_REVAL) 
(PUT 'CLP 'PSOPFN 'CLPRL_CLP0) 
(PUT 'HC_MK 'NUMBER-OF-ARGS 3) 
(PUT 'HC_MK 'DEFINED-ON-LINE '75) 
(PUT 'HC_MK 'DEFINED-IN-FILE 'CLPRL/CLPRL.RED) 
(PUT 'HC_MK 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL GENERAL) GENERAL)) 
(DE HC_MK (HEAD BODY CONSTR) (LIST HEAD BODY CONSTR)) 
(PUT 'HC_HEAD 'NUMBER-OF-ARGS 1) 
(PUT 'HC_HEAD 'DEFINED-ON-LINE '80) 
(PUT 'HC_HEAD 'DEFINED-IN-FILE 'CLPRL/CLPRL.RED) 
(PUT 'HC_HEAD 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE HC_HEAD (HC) (CAR HC)) 
(PUT 'HC_BODY 'NUMBER-OF-ARGS 1) 
(PUT 'HC_BODY 'DEFINED-ON-LINE '85) 
(PUT 'HC_BODY 'DEFINED-IN-FILE 'CLPRL/CLPRL.RED) 
(PUT 'HC_BODY 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE HC_BODY (HC) (CADR HC)) 
(PUT 'HC_CONSTR 'NUMBER-OF-ARGS 1) 
(PUT 'HC_CONSTR 'DEFINED-ON-LINE '90) 
(PUT 'HC_CONSTR 'DEFINED-IN-FILE 'CLPRL/CLPRL.RED) 
(PUT 'HC_CONSTR 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE HC_CONSTR (HC) (CADDR HC)) 
(PUT 'GOAL_MK 'NUMBER-OF-ARGS 2) 
(PUT 'GOAL_MK 'DEFINED-ON-LINE '95) 
(PUT 'GOAL_MK 'DEFINED-IN-FILE 'CLPRL/CLPRL.RED) 
(PUT 'GOAL_MK 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE GOAL_MK (OP ARGL) (CONS OP ARGL)) 
(PUT 'GOAL_OP 'NUMBER-OF-ARGS 1) 
(PUT 'GOAL_OP 'DEFINED-ON-LINE '100) 
(PUT 'GOAL_OP 'DEFINED-IN-FILE 'CLPRL/CLPRL.RED) 
(PUT 'GOAL_OP 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE GOAL_OP (GOAL) (CAR GOAL)) 
(PUT 'GOAL_ARGL 'NUMBER-OF-ARGS 1) 
(PUT 'GOAL_ARGL 'DEFINED-ON-LINE '104) 
(PUT 'GOAL_ARGL 'DEFINED-IN-FILE 'CLPRL/CLPRL.RED) 
(PUT 'GOAL_ARGL 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE GOAL_ARGL (GOAL) (CDR GOAL)) 
(PUT 'CLPRL_SIMP 'NUMBER-OF-ARGS 1) 
(PUT 'CLPRL_SIMP 'DEFINED-ON-LINE '113) 
(PUT 'CLPRL_SIMP 'DEFINED-IN-FILE 'CLPRL/CLPRL.RED) 
(PUT 'CLPRL_SIMP 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE CLPRL_SIMP (U)
    (PROG (OP HEAD W)
      (COND ((ATOM U) (RETURN (CLPRL_SIMPATOM U))))
      (SETQ OP (CAR U))
      (COND ((EQ OP '*HORNCLAUSE) (RETURN (CADR U))))
      (SETQ HEAD (CLPRL_SIMPHEAD (CADR U)))
      (SETQ W (CLPRL_SIMPBODY (CADDR U)))
      (RETURN (HC_MK HEAD (CAR W) (CDR W))))) 
(PUT 'CLPRL_SIMPATOM 'NUMBER-OF-ARGS 1) 
(PUT 'CLPRL_SIMPATOM 'DEFINED-ON-LINE '127) 
(PUT 'CLPRL_SIMPATOM 'DEFINED-IN-FILE 'CLPRL/CLPRL.RED) 
(PUT 'CLPRL_SIMPATOM 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE CLPRL_SIMPATOM (U)
    (PROG (W)
      (COND ((NULL U) (TYPERR "nil" "horn clause")))
      (COND ((NUMBERP U) (TYPERR (LIST "number" U) "horn clause")))
      (COND ((STRINGP U) (TYPERR (LIST "string" U) "horn clause")))
      (COND
       ((SETQ W (RL_GETTYPE U))
        (PROGN
         (COND ((EQ W 'HORN) (RETURN (CLPRL_SIMP (CADR (GET U 'AVALUE))))))
         (TYPERR (LIST W U) "horn clause"))))
      (COND ((BOUNDP U) (RETURN (EVAL U))))
      (TYPERR (LIST "unbound id" U) "horn clause"))) 
(PUT 'CLPRL_SIMPHEAD 'NUMBER-OF-ARGS 1) 
(PUT 'CLPRL_SIMPHEAD 'DEFINED-ON-LINE '143) 
(PUT 'CLPRL_SIMPHEAD 'DEFINED-IN-FILE 'CLPRL/CLPRL.RED) 
(PUT 'CLPRL_SIMPHEAD 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE CLPRL_SIMPHEAD (HEAD)
    (PROG (OP)
      (COND ((EQ HEAD 'FALSE) (RETURN HEAD)))
      (COND
       ((EQ HEAD 'TRUE)
        (REDERR "syntax error: `true' invalid as horn clause head")))
      (COND
       ((ATOM HEAD) (REDERR "syntax error: Lisp atom as horn clause head")))
      (SETQ OP (CAR HEAD))
      (COND
       ((OR
         (OR (OR (OR (EQ OP 'OR) (EQ OP 'AND)) (EQ OP 'NOT))
             (OR (EQ OP 'IMPL) (EQ OP 'REPL) (EQ OP 'EQUIV)))
         (OR (EQ OP 'EX) (EQ OP 'ALL))
         (MEMQ OP '(LESSP LEQ EQUAL NEQ GEQ GREATERP)) (DVFSF_OPP OP))
        (REDERR "syntax error: constraint in horn clause head")))
      (COND
       ((EQ OP 'HORNAND)
        (REDERR "syntax error: conjunctive horn clause head")))
      (RETURN
       (GOAL_MK (CAR HEAD)
        (PROG (ARG FORALL-RESULT FORALL-ENDPTR)
          (SETQ ARG (CDR HEAD))
          (COND ((NULL ARG) (RETURN NIL)))
          (SETQ FORALL-RESULT
                  (SETQ FORALL-ENDPTR
                          (CONS ((LAMBDA (ARG) (SIMP ARG)) (CAR ARG)) NIL)))
         LOOPLABEL
          (SETQ ARG (CDR ARG))
          (COND ((NULL ARG) (RETURN FORALL-RESULT)))
          (RPLACD FORALL-ENDPTR
                  (CONS ((LAMBDA (ARG) (SIMP ARG)) (CAR ARG)) NIL))
          (SETQ FORALL-ENDPTR (CDR FORALL-ENDPTR))
          (GO LOOPLABEL)))))) 
(PUT 'CLPRL_SIMPBODY 'NUMBER-OF-ARGS 1) 
(PUT 'CLPRL_SIMPBODY 'DEFINED-ON-LINE '161) 
(PUT 'CLPRL_SIMPBODY 'DEFINED-IN-FILE 'CLPRL/CLPRL.RED) 
(PUT 'CLPRL_SIMPBODY 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE CLPRL_SIMPBODY (BODY)
    (COND
     ((EQ BODY 'FALSE)
      (REDERR "syntax error: `false' invalid in horn clause body"))
     ((EQ BODY 'TRUE) (CONS NIL 'TRUE))
     ((ATOM BODY) (REDERR "syntax error: Lisp atom in horn clause body"))
     (T (CLPRL_SPLITHCBODY BODY)))) 
(PUT 'CLPRL_SPLITHCBODY 'NUMBER-OF-ARGS 1) 
(PUT 'CLPRL_SPLITHCBODY 'DEFINED-ON-LINE '175) 
(PUT 'CLPRL_SPLITHCBODY 'DEFINED-IN-FILE 'CLPRL/CLPRL.RED) 
(PUT 'CLPRL_SPLITHCBODY 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE CLPRL_SPLITHCBODY (BODY)
    (PROG (OP GOALL CONSTRL W)
      (SETQ OP (CAR BODY))
      (COND
       ((EQ OP 'HORNAND)
        (PROGN
         (PROG (X)
           (SETQ X (CDR BODY))
          LAB
           (COND ((NULL X) (RETURN NIL)))
           ((LAMBDA (X)
              (PROGN
               (SETQ W (CLPRL_SPLITHCBODY1 X))
               (COND ((CAR W) (SETQ GOALL (CONS (CAR W) GOALL))))
               (COND ((CDR W) (SETQ CONSTRL (CONS (CDR W) CONSTRL))))))
            (CAR X))
           (SETQ X (CDR X))
           (GO LAB))
         (RETURN
          (CONS GOALL
                (COND ((AND CONSTRL (CDR CONSTRL)) (CONS 'AND CONSTRL))
                      ((NULL CONSTRL) (COND ((EQ 'AND 'AND) 'TRUE) (T 'FALSE)))
                      (T (CAR CONSTRL))))))))
      (SETQ W (CLPRL_SPLITHCBODY1 BODY))
      (RETURN (CONS (COND ((CAR W) (LIST (CAR W)))) (OR (CDR W) 'TRUE))))) 
(PUT 'CLPRL_SPLITHCBODY1 'NUMBER-OF-ARGS 1) 
(PUT 'CLPRL_SPLITHCBODY1 'DEFINED-ON-LINE '197) 
(PUT 'CLPRL_SPLITHCBODY1 'DEFINED-IN-FILE 'CLPRL/CLPRL.RED) 
(PUT 'CLPRL_SPLITHCBODY1 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE CLPRL_SPLITHCBODY1 (GOC)
    (PROG (OP)
      (SETQ OP (CAR GOC))
      (COND
       ((OR
         (OR (OR (EQ OP 'TRUE) (EQ OP 'FALSE))
             (OR (OR (OR (EQ OP 'OR) (EQ OP 'AND)) (EQ OP 'NOT))
                 (OR (EQ OP 'IMPL) (EQ OP 'REPL) (EQ OP 'EQUIV)))
             (OR (EQ OP 'EX) (EQ OP 'ALL)) (OR (EQ OP 'BEX) (EQ OP 'BALL)))
         (MEMQ OP '(LESSP LEQ EQUAL NEQ GEQ GREATERP)) (DVFSF_OPP OP))
        (RETURN (CONS NIL (RL_SIMP GOC)))))
      (RETURN
       (CONS
        (CONS (CAR GOC)
              (PROG (X FORALL-RESULT FORALL-ENDPTR)
                (SETQ X (CDR GOC))
                (COND ((NULL X) (RETURN NIL)))
                (SETQ FORALL-RESULT
                        (SETQ FORALL-ENDPTR
                                (CONS ((LAMBDA (X) (CLPRL_SSIMP X)) (CAR X))
                                      NIL)))
               LOOPLABEL
                (SETQ X (CDR X))
                (COND ((NULL X) (RETURN FORALL-RESULT)))
                (RPLACD FORALL-ENDPTR
                        (CONS ((LAMBDA (X) (CLPRL_SSIMP X)) (CAR X)) NIL))
                (SETQ FORALL-ENDPTR (CDR FORALL-ENDPTR))
                (GO LOOPLABEL)))
        NIL)))) 
(PUT 'CLPRL_SSIMP 'NUMBER-OF-ARGS 1) 
(PUT 'CLPRL_SSIMP 'DEFINED-ON-LINE '210) 
(PUT 'CLPRL_SSIMP 'DEFINED-IN-FILE 'CLPRL/CLPRL.RED) 
(PUT 'CLPRL_SSIMP 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE CLPRL_SSIMP (U)
    (PROG (W)
      (SETQ W (SIMP U))
      (COND
       ((NOT (OR (ATOM (CDR W)) (ATOM (CAR (CDR W)))))
        (REDERR "Syntax error: Parametric denominator in predicate")))
      (RETURN W))) 
(PUT 'CLPRL_REVAL 'NUMBER-OF-ARGS 2) 
(PUT 'CLPRL_REVAL 'DEFINED-ON-LINE '221) 
(PUT 'CLPRL_REVAL 'DEFINED-IN-FILE 'CLPRL/CLPRL.RED) 
(PUT 'CLPRL_REVAL 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE CLPRL_REVAL (U V)
    (COND (V (CLPRL_PREPHORNCLAUSE (CLPRL_SIMP U)))
          (T (CLPRL_MK*HORNCLAUSE (CLPRL_SIMP U))))) 
(PUT 'CLPRL_PREPHORNCLAUSE 'NUMBER-OF-ARGS 1) 
(PUT 'CLPRL_PREPHORNCLAUSE 'DEFINED-ON-LINE '231) 
(PUT 'CLPRL_PREPHORNCLAUSE 'DEFINED-IN-FILE 'CLPRL/CLPRL.RED) 
(PUT 'CLPRL_PREPHORNCLAUSE 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE CLPRL_PREPHORNCLAUSE (HC)
    (PROG (W)
      (SETQ W
              (PROG (GL FORALL-RESULT FORALL-ENDPTR)
                (SETQ GL (HC_BODY HC))
                (COND ((NULL GL) (RETURN NIL)))
                (SETQ FORALL-RESULT
                        (SETQ FORALL-ENDPTR
                                (CONS
                                 ((LAMBDA (GL) (CLPRL_PREPHORNGOAL GL))
                                  (CAR GL))
                                 NIL)))
               LOOPLABEL
                (SETQ GL (CDR GL))
                (COND ((NULL GL) (RETURN FORALL-RESULT)))
                (RPLACD FORALL-ENDPTR
                        (CONS ((LAMBDA (GL) (CLPRL_PREPHORNGOAL GL)) (CAR GL))
                              NIL))
                (SETQ FORALL-ENDPTR (CDR FORALL-ENDPTR))
                (GO LOOPLABEL)))
      (COND
       ((OR (NULL W) (NEQ (HC_CONSTR HC) 'TRUE))
        (SETQ W (NCONC W (LIST (RL_PREPFOF (HC_CONSTR HC)))))))
      (SETQ W (COND ((CDR W) (CONS 'HORNAND W)) (T (CAR W))))
      (RETURN (LIST 'HORNREPL (CLPRL_PREPHORNGOAL (HC_HEAD HC)) W)))) 
(PUT 'CLPRL_PREPHORNGOAL 'NUMBER-OF-ARGS 1) 
(PUT 'CLPRL_PREPHORNGOAL 'DEFINED-ON-LINE '242) 
(PUT 'CLPRL_PREPHORNGOAL 'DEFINED-IN-FILE 'CLPRL/CLPRL.RED) 
(PUT 'CLPRL_PREPHORNGOAL 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE CLPRL_PREPHORNGOAL (GL)
    (COND ((ATOM GL) GL)
          (T
           (CONS (CAR GL)
                 (PROG (ARG FORALL-RESULT FORALL-ENDPTR)
                   (SETQ ARG (CDR GL))
                   (COND ((NULL ARG) (RETURN NIL)))
                   (SETQ FORALL-RESULT
                           (SETQ FORALL-ENDPTR
                                   (CONS
                                    ((LAMBDA (ARG) (PREPSQ ARG)) (CAR ARG))
                                    NIL)))
                  LOOPLABEL
                   (SETQ ARG (CDR ARG))
                   (COND ((NULL ARG) (RETURN FORALL-RESULT)))
                   (RPLACD FORALL-ENDPTR
                           (CONS ((LAMBDA (ARG) (PREPSQ ARG)) (CAR ARG)) NIL))
                   (SETQ FORALL-ENDPTR (CDR FORALL-ENDPTR))
                   (GO LOOPLABEL)))))) 
(PUT 'CLPRL_MK*HORNCLAUSE 'NUMBER-OF-ARGS 1) 
(PUT 'CLPRL_MK*HORNCLAUSE 'DEFINED-ON-LINE '250) 
(PUT 'CLPRL_MK*HORNCLAUSE 'DEFINED-IN-FILE 'CLPRL/CLPRL.RED) 
(PUT 'CLPRL_MK*HORNCLAUSE 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE CLPRL_MK*HORNCLAUSE (HC) (LIST '*HORNCLAUSE HC)) 
(PUT 'STATE_MK 'NUMBER-OF-ARGS 2) 
(PUT 'STATE_MK 'DEFINED-ON-LINE '260) 
(PUT 'STATE_MK 'DEFINED-IN-FILE 'CLPRL/CLPRL.RED) 
(PUT 'STATE_MK 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE STATE_MK (GOALL CONSTR) (CONS GOALL CONSTR)) 
(PUT 'STATE_GOALL 'NUMBER-OF-ARGS 1) 
(PUT 'STATE_GOALL 'DEFINED-ON-LINE '265) 
(PUT 'STATE_GOALL 'DEFINED-IN-FILE 'CLPRL/CLPRL.RED) 
(PUT 'STATE_GOALL 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE STATE_GOALL (STATE) (CAR STATE)) 
(PUT 'STATE_CONSTR 'NUMBER-OF-ARGS 1) 
(PUT 'STATE_CONSTR 'DEFINED-ON-LINE '270) 
(PUT 'STATE_CONSTR 'DEFINED-IN-FILE 'CLPRL/CLPRL.RED) 
(PUT 'STATE_CONSTR 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE STATE_CONSTR (STATE) (CDR STATE)) 
(PUT 'CLPRL_CLP0 'NUMBER-OF-ARGS 1) 
(PUT 'CLPRL_CLP0 'DEFINED-ON-LINE '275) 
(PUT 'CLPRL_CLP0 'DEFINED-IN-FILE 'CLPRL/CLPRL.RED) 
(PUT 'CLPRL_CLP0 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE CLPRL_CLP0 (L)
    (PROG (PROGM QUERY STATE)
      (SETQ PROGM
              (PROG (HC FORALL-RESULT FORALL-ENDPTR)
                (SETQ HC (CDR (REVAL1 (CAR L) NIL)))
                (COND ((NULL HC) (RETURN NIL)))
                (SETQ FORALL-RESULT
                        (SETQ FORALL-ENDPTR
                                (CONS ((LAMBDA (HC) (CLPRL_SIMP HC)) (CAR HC))
                                      NIL)))
               LOOPLABEL
                (SETQ HC (CDR HC))
                (COND ((NULL HC) (RETURN FORALL-RESULT)))
                (RPLACD FORALL-ENDPTR
                        (CONS ((LAMBDA (HC) (CLPRL_SIMP HC)) (CAR HC)) NIL))
                (SETQ FORALL-ENDPTR (CDR FORALL-ENDPTR))
                (GO LOOPLABEL)))
      (SETQ QUERY (CLPRL_SIMP (CADR L)))
      (COND
       ((NEQ (HC_HEAD QUERY) 'FALSE)
        (REDERR "syntax error: non-false query head")))
      (SETQ STATE (STATE_MK (HC_BODY QUERY) (HC_CONSTR QUERY)))
      (RETURN (RL_MK*FOF (CLPRL_CLP PROGM STATE))))) 
(PUT 'CLPRL_CLP 'NUMBER-OF-ARGS 2) 
(PUT 'CLPRL_CLP 'DEFINED-ON-LINE '289) 
(PUT 'CLPRL_CLP 'DEFINED-IN-FILE 'CLPRL/CLPRL.RED) 
(PUT 'CLPRL_CLP 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE CLPRL_CLP (PROGM STATE)
    (PROG (VARL GOALVARL VARAL RES)
      (PROG (HC)
        (SETQ HC PROGM)
       LAB
        (COND ((NULL HC) (RETURN NIL)))
        ((LAMBDA (HC) (SETQ VARL (UNION VARL (CLPRL_HCVARL HC)))) (CAR HC))
        (SETQ HC (CDR HC))
        (GO LAB))
      (SETQ VARAL
              (PROG (V FORALL-RESULT FORALL-ENDPTR)
                (SETQ V VARL)
                (COND ((NULL V) (RETURN NIL)))
                (SETQ FORALL-RESULT
                        (SETQ FORALL-ENDPTR
                                (CONS ((LAMBDA (V) (CONS V 0)) (CAR V)) NIL)))
               LOOPLABEL
                (SETQ V (CDR V))
                (COND ((NULL V) (RETURN FORALL-RESULT)))
                (RPLACD FORALL-ENDPTR
                        (CONS ((LAMBDA (V) (CONS V 0)) (CAR V)) NIL))
                (SETQ FORALL-ENDPTR (CDR FORALL-ENDPTR))
                (GO LOOPLABEL)))
      (PROG (HC)
        (SETQ HC (STATE_GOALL STATE))
       LAB
        (COND ((NULL HC) (RETURN NIL)))
        ((LAMBDA (HC) (SETQ GOALVARL (UNION GOALVARL (CLPRL_HORNGOALVARL HC))))
         (CAR HC))
        (SETQ HC (CDR HC))
        (GO LAB))
      (COND (*CLPRLVERBOSE (SETQ CLPRL_RESSTEPS* 0)))
      (SETQ RES (CLPRL_CLP1 PROGM STATE VARAL GOALVARL))
      (COND
       (*CLPRLVERBOSE
        (IOTO_TPRIN2T (LIST "Number of resolution steps: " CLPRL_RESSTEPS*))))
      (RETURN (CL_QE (CL_EX (STATE_CONSTR RES) GOALVARL) NIL)))) 
(PUT 'CLPRL_HCVARL 'NUMBER-OF-ARGS 1) 
(PUT 'CLPRL_HCVARL 'DEFINED-ON-LINE '306) 
(PUT 'CLPRL_HCVARL 'DEFINED-IN-FILE 'CLPRL/CLPRL.RED) 
(PUT 'CLPRL_HCVARL 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE CLPRL_HCVARL (HC)
    (UNION (CLPRL_HORNGOALVARL (HC_HEAD HC))
           (UNION (CLPRL_HORNGOALLVARL (HC_BODY HC))
                  (CL_FVARL (HC_CONSTR HC))))) 
(PUT 'CLPRL_HORNGOALLVARL 'NUMBER-OF-ARGS 1) 
(PUT 'CLPRL_HORNGOALLVARL 'DEFINED-ON-LINE '313) 
(PUT 'CLPRL_HORNGOALLVARL 'DEFINED-IN-FILE 'CLPRL/CLPRL.RED) 
(PUT 'CLPRL_HORNGOALLVARL 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE CLPRL_HORNGOALLVARL (GLL)
    (PROG (VARL)
      (PROG (GOAL)
        (SETQ GOAL GLL)
       LAB
        (COND ((NULL GOAL) (RETURN NIL)))
        ((LAMBDA (GOAL) (SETQ VARL (UNION VARL (CLPRL_HORNGOALVARL GOAL))))
         (CAR GOAL))
        (SETQ GOAL (CDR GOAL))
        (GO LAB))
      (RETURN VARL))) 
(PUT 'CLPRL_HORNGOALVARL 'NUMBER-OF-ARGS 1) 
(PUT 'CLPRL_HORNGOALVARL 'DEFINED-ON-LINE '323) 
(PUT 'CLPRL_HORNGOALVARL 'DEFINED-IN-FILE 'CLPRL/CLPRL.RED) 
(PUT 'CLPRL_HORNGOALVARL 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE CLPRL_HORNGOALVARL (GL)
    (PROG (VARL)
      (COND ((ATOM GL) (RETURN NIL)))
      (PROG (ARG)
        (SETQ ARG (CDR GL))
       LAB
        (COND ((NULL ARG) (RETURN NIL)))
        ((LAMBDA (ARG) (SETQ VARL (UNION VARL (KERNELS (CAR ARG))))) (CAR ARG))
        (SETQ ARG (CDR ARG))
        (GO LAB))
      (RETURN VARL))) 
(PUT 'CLPRL_CLP1 'NUMBER-OF-ARGS 4) 
(PUT 'CLPRL_CLP1 'DEFINED-ON-LINE '334) 
(PUT 'CLPRL_CLP1 'DEFINED-IN-FILE 'CLPRL/CLPRL.RED) 
(PUT 'CLPRL_CLP1 'PROCEDURE_TYPE
     '(ARROW (TIMES GENERAL GENERAL GENERAL GENERAL) GENERAL)) 
(DE CLPRL_CLP1 (PROGM STATE VARAL GOALVARL)
    (PROG (A GLL C OP SCPROG CNT HC HCOP HCHEAD UNIF NEWGLL NEWC W REC)
      (SETQ STATE (CLPRL_SIMPLSTATE STATE GOALVARL))
      (COND (*CLPRLVERBOSE (CLPRL_PRISTATE STATE)))
      (COND ((CLPRL_FINALSTATEP STATE) (RETURN STATE)))
      (SETQ A (CAR (STATE_GOALL STATE)))
      (SETQ GLL (CDR (STATE_GOALL STATE)))
      (SETQ C (STATE_CONSTR STATE))
      (SETQ OP (GOAL_OP A))
      (SETQ SCPROG PROGM)
      (SETQ CNT T)
      (PROG ()
       WHILELABEL
        (COND ((NOT (AND CNT SCPROG)) (RETURN NIL)))
        (PROGN
         (SETQ HC (CAR SCPROG))
         (SETQ SCPROG (CDR SCPROG))
         (SETQ HCOP (GOAL_OP (HC_HEAD HC)))
         (COND
          ((EQ OP HCOP)
           (PROGN
            (SETQ W (CLPRL_STAPART HC VARAL))
            (SETQ HC (CAR W))
            (SETQ VARAL (CDR W))
            (COND (*CLPRLVERBOSE (CLPRL_PRIHORNCLAUSE HC)))
            (SETQ HCHEAD (HC_HEAD HC))
            (SETQ UNIF (CLPRL_UNIF (GOAL_ARGL A) (GOAL_ARGL HCHEAD)))
            (COND
             ((CLPRL_COMPATIBLEP UNIF C)
              (PROGN
               (COND
                (*CLPRLVERBOSE
                 (PROGN
                  (SETQ CLPRL_RESSTEPS* (PLUS CLPRL_RESSTEPS* 1))
                  (IOTO_TPRIN2T "Match:")
                  (MAPRIN (RL_PREPFOF UNIF))
                  (TERPRI* T))))
               (SETQ NEWGLL (APPEND (HC_BODY HC) GLL))
               (SETQ NEWC (CONS 'AND (LIST UNIF C (HC_CONSTR HC))))
               (SETQ REC
                       (CLPRL_CLP1 PROGM (STATE_MK NEWGLL NEWC) VARAL
                        GOALVARL))
               (COND ((CLPRL_SUCCESSFULSTATEP REC) (SETQ CNT NIL))))))))))
        (GO WHILELABEL))
      (RETURN (OR REC (STATE_MK (STATE_GOALL STATE) 'FALSE))))) 
(PUT 'CLPRL_SIMPLSTATE 'NUMBER-OF-ARGS 2) 
(PUT 'CLPRL_SIMPLSTATE 'DEFINED-ON-LINE '383) 
(PUT 'CLPRL_SIMPLSTATE 'DEFINED-IN-FILE 'CLPRL/CLPRL.RED) 
(PUT 'CLPRL_SIMPLSTATE 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE CLPRL_SIMPLSTATE (STATE GOALVARL)
    (CONS (STATE_GOALL STATE)
          (COND
           (*CLPRLPROJECT
            (CL_QE
             (CL_EX (STATE_CONSTR STATE)
                    (NCONC (CLPRL_HORNGOALLVARL (STATE_GOALL STATE)) GOALVARL))
             NIL))
           (T (CL_SIMPL (STATE_CONSTR STATE) NIL (MINUS 1)))))) 
(PUT 'CLPRL_FINALSTATEP 'NUMBER-OF-ARGS 1) 
(PUT 'CLPRL_FINALSTATEP 'DEFINED-ON-LINE '393) 
(PUT 'CLPRL_FINALSTATEP 'DEFINED-IN-FILE 'CLPRL/CLPRL.RED) 
(PUT 'CLPRL_FINALSTATEP 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE CLPRL_FINALSTATEP (STATE)
    (OR (NULL (STATE_GOALL STATE)) (EQ (STATE_CONSTR STATE) 'FALSE))) 
(PUT 'CLPRL_SUCCESSFULSTATEP 'NUMBER-OF-ARGS 1) 
(PUT 'CLPRL_SUCCESSFULSTATEP 'DEFINED-ON-LINE '398) 
(PUT 'CLPRL_SUCCESSFULSTATEP 'DEFINED-IN-FILE 'CLPRL/CLPRL.RED) 
(PUT 'CLPRL_SUCCESSFULSTATEP 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE CLPRL_SUCCESSFULSTATEP (STATE)
    (AND (NULL (STATE_GOALL STATE)) (NEQ (STATE_CONSTR STATE) 'FALSE))) 
(PUT 'CLPRL_STAPART 'NUMBER-OF-ARGS 2) 
(PUT 'CLPRL_STAPART 'DEFINED-ON-LINE '404) 
(PUT 'CLPRL_STAPART 'DEFINED-IN-FILE 'CLPRL/CLPRL.RED) 
(PUT 'CLPRL_STAPART 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE CLPRL_STAPART (HC VARAL)
    (PROG (NVARAL SUBAL A N)
      (SETQ NVARAL VARAL)
      (SETQ SUBAL
              (PROG (V FORALL-RESULT FORALL-ENDPTR)
                (SETQ V (CLPRL_HCVARL HC))
                (COND ((NULL V) (RETURN NIL)))
                (SETQ FORALL-RESULT
                        (SETQ FORALL-ENDPTR
                                (CONS
                                 ((LAMBDA (V)
                                    (PROGN
                                     (SETQ A (ATSOC V VARAL))
                                     (SETQ N (PLUS (CDR A) 1))
                                     (SETQ NVARAL
                                             (CONS (CONS (CAR A) N)
                                                   (LTO_DELQ A NVARAL)))
                                     (CONS V
                                           (INTERN
                                            (COMPRESS
                                             (LTO_NCONCN
                                              (LIST (LIST '! '_) (EXPLODE V)
                                                    (LIST '_)
                                                    (EXPLODE N))))))))
                                  (CAR V))
                                 NIL)))
               LOOPLABEL
                (SETQ V (CDR V))
                (COND ((NULL V) (RETURN FORALL-RESULT)))
                (RPLACD FORALL-ENDPTR
                        (CONS
                         ((LAMBDA (V)
                            (PROGN
                             (SETQ A (ATSOC V VARAL))
                             (SETQ N (PLUS (CDR A) 1))
                             (SETQ NVARAL
                                     (CONS (CONS (CAR A) N)
                                           (LTO_DELQ A NVARAL)))
                             (CONS V
                                   (INTERN
                                    (COMPRESS
                                     (LTO_NCONCN
                                      (LIST (LIST '! '_) (EXPLODE V) (LIST '_)
                                            (EXPLODE N))))))))
                          (CAR V))
                         NIL))
                (SETQ FORALL-ENDPTR (CDR FORALL-ENDPTR))
                (GO LOOPLABEL)))
      (COND ((NULL SUBAL) (RETURN (CONS HC VARAL))))
      (SETQ HC (CLPRL_STAPART1 HC SUBAL))
      (RETURN (CONS HC NVARAL)))) 
(PUT 'CLPRL_STAPART1 'NUMBER-OF-ARGS 2) 
(PUT 'CLPRL_STAPART1 'DEFINED-ON-LINE '425) 
(PUT 'CLPRL_STAPART1 'DEFINED-IN-FILE 'CLPRL/CLPRL.RED) 
(PUT 'CLPRL_STAPART1 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE CLPRL_STAPART1 (HC SUBAL)
    (HC_MK (CLPRL_SUBSTGOAL (HC_HEAD HC) SUBAL)
     (PROG (GL FORALL-RESULT FORALL-ENDPTR)
       (SETQ GL (HC_BODY HC))
       (COND ((NULL GL) (RETURN NIL)))
       (SETQ FORALL-RESULT
               (SETQ FORALL-ENDPTR
                       (CONS
                        ((LAMBDA (GL) (CLPRL_SUBSTGOAL GL SUBAL)) (CAR GL))
                        NIL)))
      LOOPLABEL
       (SETQ GL (CDR GL))
       (COND ((NULL GL) (RETURN FORALL-RESULT)))
       (RPLACD FORALL-ENDPTR
               (CONS ((LAMBDA (GL) (CLPRL_SUBSTGOAL GL SUBAL)) (CAR GL)) NIL))
       (SETQ FORALL-ENDPTR (CDR FORALL-ENDPTR))
       (GO LOOPLABEL))
     (CL_SUBFOF SUBAL (HC_CONSTR HC)))) 
(PUT 'CLPRL_SUBSTGOAL 'NUMBER-OF-ARGS 2) 
(PUT 'CLPRL_SUBSTGOAL 'DEFINED-ON-LINE '434) 
(PUT 'CLPRL_SUBSTGOAL 'DEFINED-IN-FILE 'CLPRL/CLPRL.RED) 
(PUT 'CLPRL_SUBSTGOAL 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE CLPRL_SUBSTGOAL (GOAL SUBAL)
    (COND ((ATOM GOAL) GOAL)
          (T
           (GOAL_MK (GOAL_OP GOAL)
            (PROG (ARG FORALL-RESULT FORALL-ENDPTR)
              (SETQ ARG (GOAL_ARGL GOAL))
              (COND ((NULL ARG) (RETURN NIL)))
              (SETQ FORALL-RESULT
                      (SETQ FORALL-ENDPTR
                              (CONS
                               ((LAMBDA (ARG) (SUBSQ ARG SUBAL)) (CAR ARG))
                               NIL)))
             LOOPLABEL
              (SETQ ARG (CDR ARG))
              (COND ((NULL ARG) (RETURN FORALL-RESULT)))
              (RPLACD FORALL-ENDPTR
                      (CONS ((LAMBDA (ARG) (SUBSQ ARG SUBAL)) (CAR ARG)) NIL))
              (SETQ FORALL-ENDPTR (CDR FORALL-ENDPTR))
              (GO LOOPLABEL)))))) 
(PUT 'CLPRL_UNIF 'NUMBER-OF-ARGS 2) 
(PUT 'CLPRL_UNIF 'DEFINED-ON-LINE '444) 
(PUT 'CLPRL_UNIF 'DEFINED-IN-FILE 'CLPRL/CLPRL.RED) 
(PUT 'CLPRL_UNIF 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE CLPRL_UNIF (ARGL1 ARGL2)
    (PROG (UNIFL A)
      (SETQ UNIFL
              (PROG (X FORALL-RESULT FORALL-ENDPTR)
                (SETQ X ARGL1)
                (COND ((NULL X) (RETURN NIL)))
                (SETQ FORALL-RESULT
                        (SETQ FORALL-ENDPTR
                                (CONS
                                 ((LAMBDA (X)
                                    (PROGN
                                     (SETQ A (CAR ARGL2))
                                     (SETQ ARGL2 (CDR ARGL2))
                                     (CLPRL_MKEQUATION X A)))
                                  (CAR X))
                                 NIL)))
               LOOPLABEL
                (SETQ X (CDR X))
                (COND ((NULL X) (RETURN FORALL-RESULT)))
                (RPLACD FORALL-ENDPTR
                        (CONS
                         ((LAMBDA (X)
                            (PROGN
                             (SETQ A (CAR ARGL2))
                             (SETQ ARGL2 (CDR ARGL2))
                             (CLPRL_MKEQUATION X A)))
                          (CAR X))
                         NIL))
                (SETQ FORALL-ENDPTR (CDR FORALL-ENDPTR))
                (GO LOOPLABEL)))
      (RETURN
       (COND ((AND UNIFL (CDR UNIFL)) (CONS 'AND UNIFL))
             ((NULL UNIFL) (COND ((EQ 'AND 'AND) 'TRUE) (T 'FALSE)))
             (T (CAR UNIFL)))))) 
(PUT 'CLPRL_MKEQUATION 'NUMBER-OF-ARGS 2) 
(PUT 'CLPRL_MKEQUATION 'DEFINED-ON-LINE '457) 
(PUT 'CLPRL_MKEQUATION 'DEFINED-IN-FILE 'CLPRL/CLPRL.RED) 
(PUT 'CLPRL_MKEQUATION 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE CLPRL_MKEQUATION (X A)
    (LIST 'EQUAL
          (ADDF
           (COND (*PHYSOP-LOADED (PHYSOP-MULTF (CDR A) (CAR X)))
                 (T (POLY-MULTF (CDR A) (CAR X))))
           (NEGF
            (COND (*PHYSOP-LOADED (PHYSOP-MULTF (CDR X) (CAR A)))
                  (T (POLY-MULTF (CDR X) (CAR A))))))
          NIL)) 
(PUT 'CLPRL_COMPATIBLEP 'NUMBER-OF-ARGS 2) 
(PUT 'CLPRL_COMPATIBLEP 'DEFINED-ON-LINE '462) 
(PUT 'CLPRL_COMPATIBLEP 'DEFINED-IN-FILE 'CLPRL/CLPRL.RED) 
(PUT 'CLPRL_COMPATIBLEP 'PROCEDURE_TYPE
     '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE CLPRL_COMPATIBLEP (UNIF C)
    (EQ (CL_QE (CL_EX (CONS 'AND (LIST UNIF C)) NIL) NIL) 'TRUE)) 
(PUT 'CLPRL_PRISTATE 'NUMBER-OF-ARGS 1) 
(PUT 'CLPRL_PRISTATE 'DEFINED-ON-LINE '468) 
(PUT 'CLPRL_PRISTATE 'DEFINED-IN-FILE 'CLPRL/CLPRL.RED) 
(PUT 'CLPRL_PRISTATE 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE CLPRL_PRISTATE (STATE)
    (PROGN
     (IOTO_TPRIN2T (LIST "Goals:"))
     (PROG (GL)
       (SETQ GL (STATE_GOALL STATE))
      LAB
       (COND ((NULL GL) (RETURN NIL)))
       ((LAMBDA (GL) (MAPRIN (CLPRL_PREPHORNGOAL GL))) (CAR GL))
       (SETQ GL (CDR GL))
       (GO LAB))
     (TERPRI* T)
     (IOTO_TPRIN2T (LIST "Constraint:"))
     (MAPRIN (RL_MK*FOF (STATE_CONSTR STATE)))
     (TERPRI* T))) 
(PUT 'CLPRL_PRIHORNCLAUSE 'NUMBER-OF-ARGS 1) 
(PUT 'CLPRL_PRIHORNCLAUSE 'DEFINED-ON-LINE '481) 
(PUT 'CLPRL_PRIHORNCLAUSE 'DEFINED-IN-FILE 'CLPRL/CLPRL.RED) 
(PUT 'CLPRL_PRIHORNCLAUSE 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE CLPRL_PRIHORNCLAUSE (HC)
    (PROGN (MAPRIN (CLPRL_PREPHORNCLAUSE HC)) (TERPRI* T))) 
(ENDMODULE) 