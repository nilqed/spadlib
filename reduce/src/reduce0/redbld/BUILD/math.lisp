(cl:declaim (cl:optimize cl:debug cl:safety))
(cl:declaim (sb-ext:muffle-conditions sb-ext:compiler-note cl:style-warning))
(MODULE (LIST 'MATH)) 
(EXPORTS
 (LIST 'ACOS 'ACOSD 'ACOSH 'ACOT 'ACOTD 'ACOTH 'ACSC 'ACSCD 'ACSCH 'ASEC 'ASECD
       'ASECH 'ASIN 'ASIND 'ASINH 'ATAN 'ATAN2 'ATAN2D 'ATAND 'ATANH 'CBRT
       'CEILING 'COS 'COSD 'COSH 'COT 'COTD 'COTH 'CSC 'CSCD 'CSCH 'EXP
       'FACTORIAL 'FLOOR 'HYPOT 'LOG 'LOG10 'LOGB 'SEC 'SECD 'SECH 'SIN 'SIND
       'SINH 'SQRT 'TAN 'TAND 'TANH 'TERRLST)) 
(IMPORTS (LIST '!SHBINFLP 'FL2INT 'GEQ 'LEQ 'NEQ 'RERROR 'SGN)) 
(GLOBAL '(MATH!LABEL)) 
(SETQ MATH!LABEL "Math package mod 1.7, 1 May 93") 
(PUT 'TERRLST 'NUMBER-OF-ARGS 2) 
(PUT 'TERRLST 'DEFINED-ON-LINE '101) 
(PUT 'TERRLST 'DEFINED-IN-FILE 'ARITH/MATH.RED) 
(PUT 'TERRLST 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE TERRLST (X Y) (ERROR 0 (LIST X " invalid for " Y))) 
(GLOBAL '(!NFPD !FLINT !EPSQRT !FLPREC !FLOATBITS)) 
(COND ((NOT !NFPD) (FLAG '(!NFPD) 'SHARE))) 
(PUT 'SQRT 'NUMBER-OF-ARGS 1) 
(PUT 'SQRT 'DEFINED-ON-LINE '107) 
(PUT 'SQRT 'DEFINED-IN-FILE 'ARITH/MATH.RED) 
(PUT 'SQRT 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE SQRT (X)
    (COND ((LESSP X 0) (TERRLST X 'SQRT))
          (T
           (PROG (TRV NX G L O C1 C2 F1)
             (SETQ F1 (SETQ NX (SETQ O 1.0)))
             (SETQ X (FLOAT X))
             (COND
              ((OR (NOT (EQN (DIFFERENCE X X) 0.0)) (EQUAL X 0.0) (EQUAL X O))
               (RETURN X)))
             (COND ((LESSP X O) (PROGN (SETQ X (QUOTIENT O X)) (SETQ L T))))
             (SETQ C1 8192.0)
             (SETQ C2 (TIMES C1 C1))
             (PROG ()
              WHILELABEL
               (COND ((NOT (GREATERP X C2)) (RETURN NIL)))
               (PROGN (SETQ X (QUOTIENT X C2)) (SETQ F1 (TIMES F1 C1)))
               (GO WHILELABEL))
            LOOP
             (SETQ TRV NX)
             (SETQ NX (QUOTIENT (PLUS TRV (QUOTIENT X TRV)) 2))
             (COND ((AND G (GEQ NX TRV)) (GO RET)))
             (SETQ G T)
             (GO LOOP)
            RET
             (SETQ NX (TIMES NX F1))
             (RETURN (COND (L (QUOTIENT O NX)) (T NX))))))) 
(PUT 'CBRT 'NUMBER-OF-ARGS 1) 
(PUT 'CBRT 'DEFINED-ON-LINE '121) 
(PUT 'CBRT 'DEFINED-IN-FILE 'ARITH/MATH.RED) 
(PUT 'CBRT 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE CBRT (X)
    (PROG (S L O G TRV NX C1 C2 F1)
      (SETQ F1 (SETQ NX (SETQ O 1.0)))
      (SETQ X (FLOAT X))
      (COND
       ((OR (NOT (EQN (DIFFERENCE X X) 0.0)) (EQUAL X 0.0) (EQUAL (ABS X) O))
        (RETURN X))
       ((LESSP X 0) (SETQ X (MINUS X))) (T (SETQ S T)))
      (COND ((LESSP X O) (PROGN (SETQ X (QUOTIENT O X)) (SETQ L T)))
            ((EQUAL X O) (GO RET)))
      (SETQ C1 1024.0)
      (SETQ C2 (TIMES C1 C1 C1))
      (PROG ()
       WHILELABEL
        (COND ((NOT (GREATERP X C2)) (RETURN NIL)))
        (PROGN (SETQ X (QUOTIENT X C2)) (SETQ F1 (TIMES F1 C1)))
        (GO WHILELABEL))
     LOOP
      (SETQ TRV NX)
      (SETQ NX (PLUS (QUOTIENT TRV 1.5) (QUOTIENT X (TIMES TRV TRV 3))))
      (COND ((AND G (GEQ NX TRV)) (GO RET)))
      (SETQ G T)
      (GO LOOP)
     RET
      (SETQ NX (TIMES NX F1))
      (COND (L (SETQ NX (QUOTIENT O NX))))
      (RETURN (COND (S NX) (T (MINUS NX)))))) 
(PUT 'HYPOT 'NUMBER-OF-ARGS 2) 
(PUT 'HYPOT 'DEFINED-ON-LINE '135) 
(PUT 'HYPOT 'DEFINED-IN-FILE 'ARITH/MATH.RED) 
(PUT 'HYPOT 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE HYPOT (P Q)
    (COND ((AND (FLOATP P) (NOT (EQN (DIFFERENCE P P) 0.0))) P)
          ((AND (FLOATP Q) (NOT (EQN (DIFFERENCE Q Q) 0.0))) Q)
          (T
           (PROG (R)
             (SETQ P (FLOAT P))
             (COND ((NOT (EQN (DIFFERENCE P P) 0.0)) (RETURN (ABS P))))
             (SETQ Q (FLOAT Q))
             (COND ((NOT (EQN (DIFFERENCE Q Q) 0.0)) (RETURN (ABS Q))))
             (COND ((LESSP P 0) (SETQ P (MINUS P))))
             (COND ((LESSP Q 0) (SETQ Q (MINUS Q))))
             (COND ((ZEROP P) (RETURN Q)) ((ZEROP Q) (RETURN P))
                   ((LESSP P Q) (PROGN (SETQ R P) (SETQ P Q) (SETQ Q R))))
             (COND ((EQUAL (PLUS P Q) P) (RETURN P))
                   (T (SETQ R (QUOTIENT Q P))))
             (RETURN
              (COND ((LESSP R !EPSQRT) P)
                    (T (TIMES P (SQRT (PLUS 1 (TIMES R R))))))))))) 
(PUT 'FLOOR 'NUMBER-OF-ARGS 1) 
(PUT 'FLOOR 'DEFINED-ON-LINE '150) 
(PUT 'FLOOR 'DEFINED-IN-FILE 'ARITH/MATH.RED) 
(PUT 'FLOOR 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE FLOOR (X)
    (COND ((FIXP X) X) ((NOT (EQN (DIFFERENCE X X) 0.0)) (TERRLST X 'FLOOR))
          (T
           ((LAMBDA (N)
              (COND ((EQUAL X (FLOAT N)) N) ((GEQ X 0) N)
                    (T (DIFFERENCE N 1))))
            (FIX X))))) 
(PUT 'CEILING 'NUMBER-OF-ARGS 1) 
(PUT 'CEILING 'DEFINED-ON-LINE '161) 
(PUT 'CEILING 'DEFINED-IN-FILE 'ARITH/MATH.RED) 
(PUT 'CEILING 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE CEILING (X)
    (COND ((FIXP X) X) ((NOT (EQN (DIFFERENCE X X) 0.0)) (TERRLST X 'CEILING))
          (T
           ((LAMBDA (N)
              (COND ((EQUAL X (FLOAT N)) N) ((GEQ X 0) (PLUS N 1)) (T N)))
            (FIX X))))) 
(PUT 'ROUND 'NUMBER-OF-ARGS 1) 
(PUT 'ROUND 'DEFINED-ON-LINE '170) 
(PUT 'ROUND 'DEFINED-IN-FILE 'ARITH/MATH.RED) 
(PUT 'ROUND 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE ROUND (X)
    (COND ((FIXP X) X) ((NOT (EQN (DIFFERENCE X X) 0.0)) (TERRLST X 'ROUND))
          ((LESSP X 0) (MINUS (ROUND (MINUS X)))) (T (FLOOR (PLUS X 0.5))))) 
(PUT 'ROUNDDEC 'NUMBER-OF-ARGS 2) 
(PUT 'ROUNDDEC 'DEFINED-ON-LINE '178) 
(PUT 'ROUNDDEC 'DEFINED-IN-FILE 'ARITH/MATH.RED) 
(PUT 'ROUNDDEC 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE ROUNDDEC (X P)
    (COND ((GEQ (ABS X) !FLINT) X)
          (T
           (PROG (XL XR SC)
             (SETQ SC (EXPT 10.0 P))
             (SETQ XL (FIX (SETQ X (TIMES X SC))))
             (SETQ XR (DIFFERENCE X XL))
             (COND ((AND (GREATERP X 0) (GEQ XR 0.5)) (SETQ XL (PLUS XL 1))))
             (COND
              ((AND (LESSP X 0) (LESSP XR (MINUS 0.5)))
               (SETQ XL (DIFFERENCE XL 1))))
             (RETURN (QUOTIENT XL SC)))))) 
(GLOBAL '(!LOG&2LIST)) 
(GLOBAL
 (SETQ !LOG&2LIST
         '(!LOG2 !SQ2 !SQ2-1 !LOGSQ2 !LOGTEN !LOG1000 !LOG1E9 !LOG1E81
           !LOG1E27))) 
(REMFLAG !LOG&2LIST 'RESERVED) 
(SETQ !SQ2 (SQRT 2.0)) 
(SETQ !SQ2-1 (QUOTIENT 1 (PLUS 1 !SQ2))) 
(PUT 'LOG 'NUMBER-OF-ARGS 1) 
(PUT 'LOG 'DEFINED-ON-LINE '197) 
(PUT 'LOG 'DEFINED-IN-FILE 'ARITH/MATH.RED) 
(PUT 'LOG 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE LOG (X)
    (PROG (S LX)
      (COND
       ((AND (FIXP X) (GREATERP (SETQ LX (ILOG2 X)) !FLOATBITS))
        (RETURN
         (PLUS (TIMES !LOG2 (DIFFERENCE LX !FLOATBITS))
               (LOG (QUOTIENT X (EXPT 2 (DIFFERENCE LX !FLOATBITS)))))))
       ((NOT (EQN X X)) (RETURN X))
       ((LEQ (SETQ X (FLOAT X)) 0.0) (TERRLST X 'LOG))
       ((AND (OR (GREATERP X 1.0e300) (LESSP X (MINUS 1.0e300)))
             (EQN (QUOTIENT 1.0 X) 0.0))
        (RETURN X))
       ((LESSP (DIFFERENCE X 1) 0) (SETQ X (QUOTIENT 1 X))) (T (SETQ S T)))
      (SETQ LX 0.0)
      (PROG ()
       WHILELABEL
        (COND ((NOT (GREATERP X 1.0e81)) (RETURN NIL)))
        (PROGN (SETQ X (QUOTIENT X 1.0e81)) (SETQ LX (PLUS LX !LOG1E81)))
        (GO WHILELABEL))
      (PROG ()
       WHILELABEL
        (COND ((NOT (GREATERP X 1.0e27)) (RETURN NIL)))
        (PROGN (SETQ X (QUOTIENT X 1.0e27)) (SETQ LX (PLUS LX !LOG1E27)))
        (GO WHILELABEL))
      (PROG ()
       WHILELABEL
        (COND ((NOT (GREATERP X 1.0e9)) (RETURN NIL)))
        (PROGN (SETQ X (QUOTIENT X 1.0e9)) (SETQ LX (PLUS LX !LOG1E9)))
        (GO WHILELABEL))
      (PROG ()
       WHILELABEL
        (COND ((NOT (GREATERP X 1000)) (RETURN NIL)))
        (PROGN (SETQ X (QUOTIENT X 1000)) (SETQ LX (PLUS LX !LOG1000)))
        (GO WHILELABEL))
      (PROG ()
       WHILELABEL
        (COND ((NOT (GREATERP X 10)) (RETURN NIL)))
        (PROGN (SETQ X (QUOTIENT X 10)) (SETQ LX (PLUS LX !LOGTEN)))
        (GO WHILELABEL))
      (PROG ()
       WHILELABEL
        (COND ((NOT (GREATERP X 2)) (RETURN NIL)))
        (PROGN (SETQ X (QUOTIENT X 2)) (SETQ LX (PLUS LX !LOG2)))
        (GO WHILELABEL))
      (COND
       ((GREATERP X !SQ2)
        (PROGN (SETQ X (QUOTIENT X !SQ2)) (SETQ LX (PLUS LX !LOGSQ2)))))
      (SETQ LX (PLUS LX (SCLOGX-1 (DIFFERENCE X 1))))
      (RETURN (COND (S LX) (T (MINUS LX)))))) 
(PUT 'SCLOGX-1 'NUMBER-OF-ARGS 1) 
(PUT 'SCLOGX-1 'DEFINED-ON-LINE '217) 
(PUT 'SCLOGX-1 'DEFINED-IN-FILE 'ARITH/MATH.RED) 
(PUT 'SCLOGX-1 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE SCLOGX-1 (X)
    (PROG (TX PX LX ST SL P)
      (SETQ P 0)
      (SETQ TX (SETQ PX X))
      (SETQ P 1)
      (SETQ LX 0.0)
      (SETQ ST (TIMES X (DIFFERENCE 1 (QUOTIENT X 2))))
      (PROG ()
       WHILELABEL
        (COND ((NOT (GREATERP (PLUS ST (ABS TX)) ST)) (RETURN NIL)))
        (PROGN
         (SETQ SL (CONS TX SL))
         (SETQ TX
                 (QUOTIENT (SETQ PX (MINUS (TIMES PX X)))
                           (SETQ P (PLUS P 1)))))
        (GO WHILELABEL))
      (PROG (I)
        (SETQ I SL)
       LAB
        (COND ((NULL I) (RETURN NIL)))
        ((LAMBDA (I) (SETQ LX (PLUS LX I))) (CAR I))
        (SETQ I (CDR I))
        (GO LAB))
      (RETURN LX))) 
(SETQ !LOG2 (TIMES 2 (SETQ !LOGSQ2 (SCLOGX-1 !SQ2-1)))) 
(SETQ !LOG1E81
        (TIMES 3
               (SETQ !LOG1E27
                       (TIMES 3
                              (SETQ !LOG1E9
                                      (TIMES 3
                                             (SETQ !LOG1000
                                                     (TIMES 3
                                                            (SETQ !LOGTEN
                                                                    (LOG
                                                                     10.0)))))))))) 
(FLAG !LOG&2LIST 'RESERVED) 
(GLOBAL '(!PILIST)) 
(GLOBAL (SETQ !PILIST '(!PII !PII2 !PII3 !PII4 !PII6 !TWOPI !RAD2DEG !DEG2RAD))) 
(REMFLAG !PILIST 'RESERVED) 
(PUT 'ATAN 'NUMBER-OF-ARGS 1) 
(PUT 'ATAN 'DEFINED-ON-LINE '238) 
(PUT 'ATAN 'DEFINED-IN-FILE 'ARITH/MATH.RED) 
(PUT 'ATAN 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE ATAN (X)
    (PROG (ARG TERM TERMP TRV S G Y P)
      (SETQ P 0)
      (SETQ X (FLOAT X))
      (COND ((NOT (EQN X X)) (RETURN X)))
      (COND ((LESSP X 0) (SETQ X (MINUS X))) (T (SETQ S T)))
      (COND ((GREATERP X 1) (SETQ X (QUOTIENT 1 X))) (T (SETQ G T)))
      (COND ((LESSP X !EPSQRT) (GO QUAD)))
      (SETQ TERM
              (COND ((LESSP X 0.43) (SETQ ARG X))
                    (T
                     (TIMES
                      (SETQ ARG
                              (QUOTIENT X
                                        (PLUS 1 (SQRT (PLUS 1 (TIMES X X))))))
                      2))))
      (SETQ ARG (TIMES ARG ARG))
      (SETQ P 1)
      (SETQ TRV (TIMES (SETQ TERMP TERM) (DIFFERENCE 1 (QUOTIENT ARG 3))))
      (PROG ()
       WHILELABEL
        (COND ((NOT (GREATERP (PLUS TRV (ABS TERMP)) TRV)) (RETURN NIL)))
        (PROGN
         (SETQ Y (CONS TERMP Y))
         (SETQ TERMP
                 (QUOTIENT (SETQ TERM (MINUS (TIMES TERM ARG)))
                           (SETQ P (PLUS P 2)))))
        (GO WHILELABEL))
      (SETQ X 0)
      (PROG (I)
        (SETQ I Y)
       LAB
        (COND ((NULL I) (RETURN NIL)))
        ((LAMBDA (I) (SETQ X (PLUS X I))) (CAR I))
        (SETQ I (CDR I))
        (GO LAB))
     QUAD
      (COND ((NOT G) (SETQ X (DIFFERENCE !PII2 X))))
      (COND ((NOT S) (SETQ X (MINUS X))))
      (RETURN X))) 
(PUT 'ATAND 'NUMBER-OF-ARGS 1) 
(PUT 'ATAND 'DEFINED-ON-LINE '258) 
(PUT 'ATAND 'DEFINED-IN-FILE 'ARITH/MATH.RED) 
(PUT 'ATAND 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE ATAND (X) (TIMES !RAD2DEG (ATAN X))) 
(SETQ !TWOPI
        (TIMES 2
               (SETQ !PII
                       (TIMES 2
                              (SETQ !PII2 (TIMES 2 (SETQ !PII4 (ATAN 1.0)))))))) 
(SETQ !PII3 (TIMES 2 (SETQ !PII6 (QUOTIENT !PII2 3)))) 
(SETQ !DEG2RAD (QUOTIENT !PII4 45)) 
(SETQ !RAD2DEG (QUOTIENT 45 !PII4)) 
(FLAG !PILIST 'RESERVED) 
(FLUID '(*DDF* *DF* *SF* *QF*)) 
(PUT 'SIN 'NUMBER-OF-ARGS 1) 
(PUT 'SIN 'DEFINED-ON-LINE '268) 
(PUT 'SIN 'DEFINED-IN-FILE 'ARITH/MATH.RED) 
(PUT 'SIN 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE SIN (X)
    (COND ((AND (FLOATP X) (NOT (EQN (DIFFERENCE X X) 0.0))) (DIFFERENCE X X))
          (T
           (PROG (*SF* *QF* P)
             (SETQ P 0)
             (SETQ X (!SCALSINTAN X T))
             (COND (*QF* (PROGN (SETQ X 1.0) (GO RET))))
             (COND ((GREATERP X !PII4) (SETQ X (DIFFERENCE !PII2 X)))
                   (T (SETQ P 1)))
             (SETQ X (!SINTS X P))
            RET
             (RETURN (COND (*SF* X) (T (MINUS X)))))))) 
(PUT 'SIND 'NUMBER-OF-ARGS 1) 
(PUT 'SIND 'DEFINED-ON-LINE '280) 
(PUT 'SIND 'DEFINED-IN-FILE 'ARITH/MATH.RED) 
(PUT 'SIND 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE SIND (X)
    (COND ((AND (FLOATP X) (NOT (EQN (DIFFERENCE X X) 0.0))) (DIFFERENCE X X))
          (T
           (PROG (*SF* *QF* P)
             (SETQ P 0)
             (SETQ X (!SCALSINTAND X T))
             (COND (*QF* (PROGN (SETQ X 1.0) (GO RET))))
             (COND ((GREATERP X 45.0) (SETQ X (DIFFERENCE 90.0 X)))
                   (T (SETQ P 1)))
             (SETQ X (!SINTS (TIMES X !DEG2RAD) P))
            RET
             (RETURN (COND (*SF* X) (T (MINUS X)))))))) 
(PUT 'TAN 'NUMBER-OF-ARGS 1) 
(PUT 'TAN 'DEFINED-ON-LINE '292) 
(PUT 'TAN 'DEFINED-IN-FILE 'ARITH/MATH.RED) 
(PUT 'TAN 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE TAN (X)
    (COND ((AND (FLOATP X) (NOT (EQN (DIFFERENCE X X) 0.0))) (DIFFERENCE X X))
          (T
           (PROG (Y INV *SF* *QF*)
             (SETQ Y X)
             (SETQ X (!SCALSINTAN X NIL))
             (COND (*QF* (TERRLST Y 'TAN)))
             (COND ((GREATERP X !PII4) (SETQ X (DIFFERENCE !PII2 X)))
                   (T (SETQ INV T)))
             (COND
              ((GREATERP X !EPSQRT)
               (PROGN
                (SETQ X (!SINTS X 1))
                (SETQ X (QUOTIENT X (SQRT (DIFFERENCE 1 (TIMES X X))))))))
             (COND ((NOT INV) (SETQ X (QUOTIENT 1 X))))
             (RETURN (COND (*SF* (MINUS X)) (T X))))))) 
(PUT 'TAND 'NUMBER-OF-ARGS 1) 
(PUT 'TAND 'DEFINED-ON-LINE '303) 
(PUT 'TAND 'DEFINED-IN-FILE 'ARITH/MATH.RED) 
(PUT 'TAND 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE TAND (X)
    (COND ((AND (FLOATP X) (NOT (EQN (DIFFERENCE X X) 0.0))) (DIFFERENCE X X))
          (T
           (PROG (Y INV *SF* *QF*)
             (SETQ Y X)
             (SETQ X (!SCALSINTAND X NIL))
             (COND (*QF* (TERRLST Y 'TAND)))
             (COND ((GREATERP X 45.0) (SETQ X (DIFFERENCE 90.0 X)))
                   (T (SETQ INV T)))
             (SETQ X (TIMES X !DEG2RAD))
             (COND
              ((GREATERP X !EPSQRT)
               (PROGN
                (SETQ X (!SINTS X 1))
                (SETQ X (QUOTIENT X (SQRT (DIFFERENCE 1 (TIMES X X))))))))
             (COND ((NOT INV) (SETQ X (QUOTIENT 1.0 X))))
             (RETURN (COND (*SF* (MINUS X)) (T X))))))) 
(GLOBAL '(MAX-TRIG-FACT)) 
(SETQ MAX-TRIG-FACT (EXPT 10 (QUOTIENT !NFPD 2))) 
(FLUID '(|:PREC:|)) 
(PUT '!SCALSINTAN 'NUMBER-OF-ARGS 2) 
(PUT '!SCALSINTAN 'DEFINED-ON-LINE '320) 
(PUT '!SCALSINTAN 'DEFINED-IN-FILE 'ARITH/MATH.RED) 
(PUT '!SCALSINTAN 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE !SCALSINTAN (X W)
    (PROG (XF X0)
      (COND ((LESSP X 0) (SETQ X (MINUS X))) (T (SETQ *SF* T)))
      (SETQ X0 X)
      (COND
       ((GREATERP (SETQ XF (FIX (QUOTIENT X !TWOPI))) MAX-TRIG-FACT)
        (TERRLST (COND (*SF* X) (T (MINUS X))) (COND (W 'SIN) (T 'TAN)))))
      (SETQ X (DIFFERENCE X (TIMES (FLOAT XF) !TWOPI)))
      (COND
       ((GREATERP X !PII)
        (COND (W (PROGN (SETQ X (DIFFERENCE !TWOPI X)) (SETQ *SF* (NOT *SF*))))
              (T (SETQ X (DIFFERENCE X !PII))))))
      (COND ((GREATERP X !PII2) (SETQ X (DIFFERENCE !PII X)))
            ((NOT W) (SETQ *SF* (NOT *SF*))))
      (SETQ *QF* (GEQ X !PII2))
      (COND
       ((LESSP X (QUOTIENT X0 (EXPT 10.0 (DIFFERENCE |:PREC:| 3))))
        (SETQ X 0.0)))
      (RETURN X))) 
(PUT '!SCALSINTAND 'NUMBER-OF-ARGS 2) 
(PUT '!SCALSINTAND 'DEFINED-ON-LINE '340) 
(PUT '!SCALSINTAND 'DEFINED-IN-FILE 'ARITH/MATH.RED) 
(PUT '!SCALSINTAND 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE !SCALSINTAND (X W)
    (PROG (XF X0)
      (COND ((LESSP X 0) (SETQ X (MINUS X))) (T (SETQ *SF* T)))
      (SETQ X0 X)
      (COND
       ((GREATERP (SETQ XF (FIX (QUOTIENT X 360.0))) MAX-TRIG-FACT)
        (TERRLST (COND (*SF* X) (T (MINUS X))) (COND (W 'SIN) (T 'TAN)))))
      (SETQ X (DIFFERENCE X (TIMES (FLOAT XF) 360.0)))
      (COND
       ((GREATERP X 180.0)
        (COND (W (PROGN (SETQ X (DIFFERENCE 360.0 X)) (SETQ *SF* (NOT *SF*))))
              (T (SETQ X (DIFFERENCE X 180.0))))))
      (COND ((GREATERP X 90.0) (SETQ X (DIFFERENCE 180.0 X)))
            ((NOT W) (SETQ *SF* (NOT *SF*))))
      (SETQ *QF* (GEQ X 90.0))
      (COND
       ((LESSP X (QUOTIENT X0 (EXPT 10.0 (DIFFERENCE |:PREC:| 3))))
        (SETQ X 0.0)))
      (RETURN X))) 
(PUT '!SINTS 'NUMBER-OF-ARGS 2) 
(PUT '!SINTS 'DEFINED-ON-LINE '358) 
(PUT '!SINTS 'DEFINED-IN-FILE 'ARITH/MATH.RED) 
(PUT '!SINTS 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE !SINTS (X P)
    (PROG (SL SQ ST TERM)
      (SETQ X (FLOAT X))
      (COND ((LESSP X !EPSQRT) (RETURN (COND ((EQUAL P 1) X) (T 1.0)))))
      (SETQ SQ (TIMES X X))
      (SETQ ST
              (COND
               ((EQUAL P 1)
                (TIMES (SETQ TERM X) (DIFFERENCE 1 (QUOTIENT SQ 6))))
               (T (TIMES (SETQ TERM 1.0) (DIFFERENCE 1 (QUOTIENT SQ 2))))))
      (PROG ()
       WHILELABEL
        (COND ((NOT (GREATERP (PLUS ST (ABS TERM)) ST)) (RETURN NIL)))
        (PROGN
         (SETQ SL (CONS TERM SL))
         (SETQ P (PLUS P 2.0))
         (SETQ TERM
                 (MINUS
                  (TIMES TERM (QUOTIENT SQ (TIMES (DIFFERENCE P 1.0) P))))))
        (GO WHILELABEL))
      (SETQ X 0.0)
      (PROG (I)
        (SETQ I SL)
       LAB
        (COND ((NULL I) (RETURN NIL)))
        ((LAMBDA (I) (SETQ X (PLUS X I))) (CAR I))
        (SETQ I (CDR I))
        (GO LAB))
      (RETURN X))) 
(PUT '!SINHTS 'NUMBER-OF-ARGS 1) 
(PUT '!SINHTS 'DEFINED-ON-LINE '374) 
(PUT '!SINHTS 'DEFINED-IN-FILE 'ARITH/MATH.RED) 
(PUT '!SINHTS 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE !SINHTS (X)
    (PROG (P SL SQ ST TERM)
      (COND ((LESSP X (TIMES 2 !EPSQRT)) (RETURN X)))
      (SETQ ST
              (TIMES (SETQ TERM X)
                     (DIFFERENCE 1 (QUOTIENT (SETQ SQ (TIMES X X)) 6))))
      (SETQ P 1)
      (PROG ()
       WHILELABEL
        (COND ((NOT (GREATERP (PLUS ST TERM) ST)) (RETURN NIL)))
        (PROGN
         (SETQ SL (CONS TERM SL))
         (SETQ P (PLUS P 2.0))
         (SETQ TERM (TIMES TERM (QUOTIENT SQ (TIMES (DIFFERENCE P 1.0) P)))))
        (GO WHILELABEL))
      (SETQ X 0.0)
      (PROG (I)
        (SETQ I SL)
       LAB
        (COND ((NULL I) (RETURN NIL)))
        ((LAMBDA (I) (SETQ X (PLUS X I))) (CAR I))
        (SETQ I (CDR I))
        (GO LAB))
      (RETURN X))) 
(GLOBAL '(!EE)) 
(PUT 'EXP 'NUMBER-OF-ARGS 1) 
(PUT 'EXP 'DEFINED-ON-LINE '389) 
(PUT 'EXP 'DEFINED-IN-FILE 'ARITH/MATH.RED) 
(PUT 'EXP 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE EXP (V)
    (PROG (D NR MR FR ST P IP)
      (SETQ P 0)
      (SETQ IP 0)
      (SETQ MR (SETQ FR 1.0))
      (SETQ V (FLOAT V))
      (COND ((NOT (EQN V V)) (RETURN V))
            ((AND (OR (GREATERP V 1.0e300) (LESSP V (MINUS 1.0e300)))
                  (EQN (QUOTIENT 1.0 V) 0.0))
             (RETURN (PROGN (COND ((FP-SIGNBIT V) 0.0) (T V))))))
      (COND
       ((GREATERP (ABS V) 1)
        (PROGN
         (SETQ IP (FIX V))
         (SETQ V (DIFFERENCE V IP))
         (SETQ FR (EXPT !EE IP)))))
      (COND ((GREATERP (ABS V) 0.5) (SETQ V (QUOTIENT V 2))) (T (SETQ D T)))
      (COND ((EQUAL V 0.0) (GO RET)))
      (SETQ ST (PLUS MR V))
      (PROG ()
       WHILELABEL
        (COND ((NOT (GREATERP (PLUS ST (ABS MR)) ST)) (RETURN NIL)))
        (PROGN
         (SETQ NR (CONS MR NR))
         (SETQ MR (TIMES MR (QUOTIENT V (SETQ P (PLUS P 1))))))
        (GO WHILELABEL))
      (SETQ MR 0.0)
      (PROG (I)
        (SETQ I NR)
       LAB
        (COND ((NULL I) (RETURN NIL)))
        ((LAMBDA (I) (SETQ MR (PLUS MR I))) (CAR I))
        (SETQ I (CDR I))
        (GO LAB))
     RET
      (COND ((NOT D) (SETQ MR (TIMES MR MR))))
      (RETURN (TIMES FR MR)))) 
(REMFLAG '(!EE) 'RESERVED) 
(SETQ !EE (EXP 1.0)) 
(FLAG '(!EE) 'RESERVED) 
(PUT 'EXPT 'NUMBER-OF-ARGS 2) 
(PUT 'IEXPT 'NUMBER-OF-ARGS 2) 
(PUT 'IEXPT 'DEFINED-ON-LINE '414) 
(PUT 'IEXPT 'DEFINED-IN-FILE 'ARITH/MATH.RED) 
(PUT 'IEXPT 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE IEXPT (X N)
    (COND ((NOT (GREATERP N 0)) (ERROR 0 "iexpt argument <= 0"))
          ((OR (EQUAL N 1) (EQUAL X 1)) X)
          ((EQUAL (REMAINDER N 2) 0)
           ((LAMBDA (Y) (TIMES Y Y)) (IEXPT X (QUOTIENT N 2))))
          (T
           ((LAMBDA (Y) (TIMES X Y Y))
            (IEXPT X (QUOTIENT (DIFFERENCE N 1) 2)))))) 
(PUT 'EXPT 'NUMBER-OF-ARGS 2) 
(PUT 'EXPT 'DEFINED-ON-LINE '431) 
(PUT 'EXPT 'DEFINED-IN-FILE 'ARITH/MATH.RED) 
(PUT 'EXPT 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE EXPT (X Y)
    (PROG (IY P SY FY R)
      (SETQ IY 0)
      (SETQ P 0)
      (COND
       ((ZEROP Y)
        (COND ((ZEROP X) (ERROR 0 "0**0 undefined"))
              (T (RETURN (COND ((OR (FLOATP X) (FLOATP Y)) 1.0) (T 1))))))
       ((ZEROP X)
        (COND
         ((GREATERP Y 0)
          (RETURN (COND ((OR (FLOATP X) (FLOATP Y)) 0.0) (T 0))))
         (T (ERROR 0 "divide by zero in EXPT"))))
       ((FIXP Y)
        (RETURN
         (COND
          ((FIXP X) (COND ((LESSP Y 0) 0) ((EQUAL X 1) 1) (T (IEXPT X Y))))
          ((GREATERP Y 50) (FEXPT X Y)) ((GREATERP Y 0) (IEXPT X Y))
          ((LESSP Y (MINUS 50)) (QUOTIENT 1.0 (FEXPT X (MINUS Y))))
          (T (QUOTIENT 1.0 (IEXPT X (MINUS Y))))))))
      (COND ((FIXP X) (SETQ X (FLOAT X))))
      (COND
       ((LESSP X 0.0)
        (ERROR 0 "attempt to raise negative value to floating power")))
      (COND ((LESSP Y 0.0) (PROGN (SETQ SY T) (SETQ Y (MINUS Y)))))
      (SETQ IY (FIX Y))
      (SETQ FY (FLOAT IY))
      (COND
       ((EQUAL Y FY)
        (PROGN
         (COND ((GREATERP IY 50) (SETQ X (FEXPT X IY)))
               (T (SETQ X (IEXPT X IY))))
         (COND (SY (RETURN (QUOTIENT 1.0 X))) (T (RETURN X))))))
      (COND
       ((AND (LESSP 0.1 X) (LESSP X 10.0) (LESSP Y 5.0))
        (PROGN
         (COND (SY (SETQ Y (MINUS Y))))
         (RETURN (EXP (TIMES Y (LOG X)))))))
      (SETQ P 0)
      (PROG ()
       WHILELABEL
        (COND ((NOT (LESSP X 0.005524)) (RETURN NIL)))
        (PROGN (SETQ X (TIMES X 256.0)) (SETQ P (DIFFERENCE P 8)))
        (GO WHILELABEL))
      (PROG ()
       WHILELABEL
        (COND ((NOT (LESSP X 0.707106781)) (RETURN NIL)))
        (PROGN (SETQ X (TIMES X 2.0)) (SETQ P (DIFFERENCE P 1)))
        (GO WHILELABEL))
      (PROG ()
       WHILELABEL
        (COND ((NOT (GEQ X 181.02)) (RETURN NIL)))
        (PROGN (SETQ X (QUOTIENT X 256.0)) (SETQ P (PLUS P 8)))
        (GO WHILELABEL))
      (PROG ()
       WHILELABEL
        (COND ((NOT (GEQ X 1.414213562)) (RETURN NIL)))
        (PROGN (SETQ X (QUOTIENT X 2.0)) (SETQ P (PLUS P 1)))
        (GO WHILELABEL))
      (COND
       ((GREATERP (DIFFERENCE Y FY) 0.5)
        (PROGN (SETQ FY (PLUS FY 1.0)) (SETQ IY (PLUS IY 1)))))
      (SETQ R (EXP (TIMES (DIFFERENCE Y FY) (LOG X))))
      (COND ((GREATERP IY 50) (SETQ R (TIMES R (FEXPT X IY))))
            ((GREATERP IY 0) (SETQ R (TIMES R (IEXPT X IY)))))
      (SETQ Y (TIMES P Y))
      (SETQ IY (FIX Y))
      (SETQ FY (DIFFERENCE Y (FLOAT IY)))
      (SETQ R (TIMES R (EXP (TIMES FY !LOG2))))
      (COND ((GREATERP IY 0) (SETQ R (TIMES R (IEXPT 2.0 IY))))
            ((LESSP IY 0) (SETQ R (TIMES R (IEXPT 0.5 (MINUS IY))))))
      (COND (SY (SETQ R (QUOTIENT 1.0 R))))
      (RETURN R))) 
(PUT 'FSPLIT 'NUMBER-OF-ARGS 1) 
(PUT 'FSPLIT 'DEFINED-ON-LINE '530) 
(PUT 'FSPLIT 'DEFINED-IN-FILE 'ARITH/MATH.RED) 
(PUT 'FSPLIT 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE FSPLIT (X)
    (PROG (XX N)
      (COND ((NOT (EQN (DIFFERENCE X X) 0.0)) (RETURN (CONS X 0.0))))
      (COND ((EQUAL X 0.0) (RETURN (CONS 0.0 0.0))))
      (SETQ XX X)
      (SETQ N 1.0)
      (COND ((LESSP X 0.0) (SETQ XX (MINUS XX))))
      (PROG ()
       WHILELABEL
        (COND ((NOT (LESSP XX 8.0)) (RETURN NIL)))
        (PROGN (SETQ XX (TIMES XX 256.0)) (SETQ N (TIMES N 256.0)))
        (GO WHILELABEL))
      (PROG ()
       WHILELABEL
        (COND ((NOT (LESSP XX 2048.0)) (RETURN NIL)))
        (PROGN (SETQ XX (TIMES XX 2.0)) (SETQ N (TIMES N 2.0)))
        (GO WHILELABEL))
      (PROG ()
       WHILELABEL
        (COND ((NOT (GEQ XX 4096.0)) (RETURN NIL)))
        (PROGN (SETQ XX (TIMES XX 0.5)) (SETQ N (TIMES N 0.5)))
        (GO WHILELABEL))
      (SETQ XX (QUOTIENT (FLOAT (FIX XX)) N))
      (COND ((LESSP X 0.0) (SETQ XX (MINUS XX))))
      (RETURN (CONS XX (DIFFERENCE X XX))))) 
(PUT 'F_MULTIPLY 'NUMBER-OF-ARGS 2) 
(PUT 'F_MULTIPLY 'DEFINED-ON-LINE '553) 
(PUT 'F_MULTIPLY 'DEFINED-IN-FILE 'ARITH/MATH.RED) 
(PUT 'F_MULTIPLY 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE F_MULTIPLY (A B)
    (PROG (H L)
      (SETQ H (FSPLIT (TIMES (CAR A) (CAR B))))
      (SETQ L
              (PLUS (CDR H) (TIMES (CAR A) (CDR B))
                    (TIMES (PLUS (CAR B) (CDR B)) (CDR A))))
      (RETURN (CONS (CAR H) L)))) 
(PUT 'FEXPT 'NUMBER-OF-ARGS 2) 
(PUT 'FEXPT 'DEFINED-ON-LINE '562) 
(PUT 'FEXPT 'DEFINED-IN-FILE 'ARITH/MATH.RED) 
(PUT 'FEXPT 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE FEXPT (X N)
    (PROG (W) (SETQ W (FEXPT1 (FSPLIT X) N)) (RETURN (PLUS (CAR W) (CDR W))))) 
(PUT 'FEXPT1 'NUMBER-OF-ARGS 2) 
(PUT 'FEXPT1 'DEFINED-ON-LINE '572) 
(PUT 'FEXPT1 'DEFINED-IN-FILE 'ARITH/MATH.RED) 
(PUT 'FEXPT1 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE FEXPT1 (X N)
    (COND ((NOT (GREATERP N 0)) (ERROR 0 "fexpt1 argument <= 0"))
          ((EQUAL N 1) X)
          ((EQUAL (REMAINDER N 2) 0) (FEXPT1 (F_MULTIPLY X X) (QUOTIENT N 2)))
          (T
           (F_MULTIPLY X
                       (FEXPT1 (F_MULTIPLY X X)
                               (QUOTIENT (DIFFERENCE N 1) 2)))))) 
(PUT 'REXPT 'NUMBER-OF-ARGS 2) 
(PUT 'REXPT 'DEFINED-ON-LINE '580) 
(PUT 'REXPT 'DEFINED-IN-FILE 'ARITH/MATH.RED) 
(PUT 'REXPT 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE REXPT (X Y)
    (PROG (S Q P)
      (SETQ P 0)
      (COND
       ((ZEROP Y)
        (COND ((ZEROP X) (ERROR 0 "0**0 undefined"))
              (T (RETURN (COND ((OR (FLOATP X) (FLOATP Y)) 1.0) (T 1))))))
       ((ZEROP X)
        (COND
         ((GREATERP Y 0)
          (RETURN (COND ((OR (FLOATP X) (FLOATP Y)) 0.0) (T 0))))
         (T (ERROR 0 "divide by zero in EXPT"))))
       ((FIXP Y)
        (PROGN
         (COND
          ((FIXP X)
           (PROGN
            (COND ((LESSP Y 0) (RETURN 0)) ((EQUAL X 1) (RETURN 1))
                  (T (RETURN (IEXPT X Y)))))))
         (SETQ S 0)
         (COND ((LESSP Y 0) (PROGN (SETQ S 1) (SETQ Y (MINUS Y)))))
         (COND ((LESSP X 0) (PROGN (SETQ S (PLUS S 2)) (SETQ X (MINUS X)))))
         (COND ((GREATERP Y 50) (SETQ X (FEXPT X Y))) (T (SETQ X (IEXPT X Y))))
         (COND ((OR (EQUAL S 1) (EQUAL S 3)) (SETQ X (QUOTIENT 1.0 X))))
         (COND
          ((AND (GREATERP S 1) (NEQ (REMAINDER Y 2) 0)) (SETQ X (MINUS X))))
         (RETURN X))))
      (COND ((FIXP X) (SETQ X (FLOAT X))))
      (COND
       ((LESSP Y 0.0) (PROGN (SETQ X (QUOTIENT 1.0 X)) (SETQ Y (MINUS Y)))))
      (COND ((ZEROP (DIFFERENCE Y (SETQ P (FIX Y)))) (RETURN (IEXPT X P))))
      (COND ((EQUAL Y 0.5) (RETURN (SQRT X))))
      (COND
       ((LESSP X 0.0)
        (PROGN
         (SETQ Q (FT2RN1 Y))
         (SETQ P (CAR Q))
         (SETQ Q (CDR Q))
         (SETQ X (MINUS X))
         (COND
          ((OR
            (NOT
             (OR (LESSP (ABS P) 10) (LESSP Q 10)
                 (LESSP
                  (TIMES 2 (MAX (LENGTH (EXPLODE Q)) (LENGTH (EXPLODE P))))
                  (PLUS !FLPREC 1))))
            (EQUAL (REMAINDER Q 2) 0))
           (ERROR 0 (LIST (MINUS X) "**" Y " not real")))
          ((EQUAL (REMAINDER P 2) 1) (SETQ S T))))))
      (COND ((EQUAL Y 0.5) (SETQ X (SQRT X))) (T (SETQ X (EXPT X Y))))
      (RETURN (COND (S (MINUS X)) (T X))))) 
(PUT 'FT2RN1 'NUMBER-OF-ARGS 1) 
(PUT 'FT2RN1 'DEFINED-ON-LINE '642) 
(PUT 'FT2RN1 'DEFINED-IN-FILE 'ARITH/MATH.RED) 
(PUT 'FT2RN1 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE FT2RN1 (N)
    (COND
     ((LESSP N 0.0)
      ((LAMBDA (R) (CONS (MINUS (CAR R)) (CDR R))) (FT2RN2 (MINUS N))))
     (T (FT2RN2 N)))) 
(PUT 'FT2RN2 'NUMBER-OF-ARGS 1) 
(PUT 'FT2RN2 'DEFINED-ON-LINE '646) 
(PUT 'FT2RN2 'DEFINED-IN-FILE 'ARITH/MATH.RED) 
(PUT 'FT2RN2 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE FT2RN2 (N)
    (PROG (A P0 P1 Q0 Q1 W NN R0 R1 FLPR)
      (SETQ FLPR (TIMES (ABS N) (QUOTIENT 100.0 !FLINT)))
      (SETQ A (FIX N))
      (SETQ NN (DIFFERENCE N A))
      (SETQ P0 1)
      (SETQ P1 A)
      (SETQ Q0 0)
      (SETQ Q1 1)
      (SETQ R0 (PLUS N 1.0))
     TOP
      (SETQ R1 (ABS (DIFFERENCE N (QUOTIENT (FLOAT P1) (FLOAT Q1)))))
      (COND
       ((OR (EQUAL NN 0.0) (EQUAL R1 0.0) (NOT (GREATERP R1 FLPR)))
        (RETURN (CONS P1 Q1)))
       ((NOT (LESSP R1 R0)) (RETURN (CONS P0 Q0))))
      (SETQ NN (QUOTIENT 1.0 NN))
      (SETQ A (FIX NN))
      (SETQ NN (DIFFERENCE NN A))
      (SETQ W (PLUS P0 (TIMES A P1)))
      (SETQ P0 P1)
      (SETQ P1 W)
      (SETQ W (PLUS Q0 (TIMES A Q1)))
      (SETQ Q0 Q1)
      (SETQ Q1 W)
      (SETQ R0 R1)
      (GO TOP))) 
(PUT 'COS 'NUMBER-OF-ARGS 1) 
(PUT 'COS 'DEFINED-ON-LINE '671) 
(PUT 'COS 'DEFINED-IN-FILE 'ARITH/MATH.RED) 
(PUT 'COS 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE COS (X) (SIN (DIFFERENCE !PII2 X))) 
(PUT 'COT 'NUMBER-OF-ARGS 1) 
(PUT 'COT 'DEFINED-ON-LINE '673) 
(PUT 'COT 'DEFINED-IN-FILE 'ARITH/MATH.RED) 
(PUT 'COT 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE COT (X) (TAN (DIFFERENCE !PII2 X))) 
(PUT 'SEC 'NUMBER-OF-ARGS 1) 
(PUT 'SEC 'DEFINED-ON-LINE '675) 
(PUT 'SEC 'DEFINED-IN-FILE 'ARITH/MATH.RED) 
(PUT 'SEC 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE SEC (X) (QUOTIENT 1.0 (COS X))) 
(PUT 'CSC 'NUMBER-OF-ARGS 1) 
(PUT 'CSC 'DEFINED-ON-LINE '677) 
(PUT 'CSC 'DEFINED-IN-FILE 'ARITH/MATH.RED) 
(PUT 'CSC 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE CSC (X) (QUOTIENT 1.0 (SIN X))) 
(PUT 'ACOT 'NUMBER-OF-ARGS 1) 
(PUT 'ACOT 'DEFINED-ON-LINE '679) 
(PUT 'ACOT 'DEFINED-IN-FILE 'ARITH/MATH.RED) 
(PUT 'ACOT 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE ACOT (X) (DIFFERENCE !PII2 (ATAN X))) 
(PUT 'ASIN 'NUMBER-OF-ARGS 1) 
(PUT 'ASIN 'DEFINED-ON-LINE '681) 
(PUT 'ASIN 'DEFINED-IN-FILE 'ARITH/MATH.RED) 
(PUT 'ASIN 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE ASIN (X)
    (COND
     ((LESSP (ABS X) 1)
      (ATAN
       (COND ((LESSP (ABS X) !EPSQRT) X)
             (T (QUOTIENT X (SQRT (DIFFERENCE 1 (TIMES X X))))))))
     ((GREATERP (ABS X) 1) (TERRLST X 'ASIN)) ((GREATERP X 0) !PII2)
     (T (MINUS !PII2)))) 
(PUT 'ACOS 'NUMBER-OF-ARGS 1) 
(PUT 'ACOS 'DEFINED-ON-LINE '687) 
(PUT 'ACOS 'DEFINED-IN-FILE 'ARITH/MATH.RED) 
(PUT 'ACOS 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE ACOS (X) (DIFFERENCE !PII2 (ASIN X))) 
(PUT 'ACSC 'NUMBER-OF-ARGS 1) 
(PUT 'ACSC 'DEFINED-ON-LINE '689) 
(PUT 'ACSC 'DEFINED-IN-FILE 'ARITH/MATH.RED) 
(PUT 'ACSC 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE ACSC (X)
    (COND ((GEQ (ABS X) 1) (ASIN (QUOTIENT 1.0 X))) (T (TERRLST X 'ACSC)))) 
(PUT 'ASEC 'NUMBER-OF-ARGS 1) 
(PUT 'ASEC 'DEFINED-ON-LINE '692) 
(PUT 'ASEC 'DEFINED-IN-FILE 'ARITH/MATH.RED) 
(PUT 'ASEC 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE ASEC (X)
    (COND ((LESSP (ABS X) 1) (TERRLST X 'ASEC))
          (T (DIFFERENCE !PII2 (ASIN (QUOTIENT 1.0 X)))))) 
(PUT 'COSD 'NUMBER-OF-ARGS 1) 
(PUT 'COSD 'DEFINED-ON-LINE '695) 
(PUT 'COSD 'DEFINED-IN-FILE 'ARITH/MATH.RED) 
(PUT 'COSD 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE COSD (X) (SIND (DIFFERENCE 90.0 X))) 
(PUT 'COTD 'NUMBER-OF-ARGS 1) 
(PUT 'COTD 'DEFINED-ON-LINE '697) 
(PUT 'COTD 'DEFINED-IN-FILE 'ARITH/MATH.RED) 
(PUT 'COTD 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE COTD (X) (TAND (DIFFERENCE 90.0 X))) 
(PUT 'SECD 'NUMBER-OF-ARGS 1) 
(PUT 'SECD 'DEFINED-ON-LINE '699) 
(PUT 'SECD 'DEFINED-IN-FILE 'ARITH/MATH.RED) 
(PUT 'SECD 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE SECD (X) (QUOTIENT 1 (COSD X))) 
(PUT 'CSCD 'NUMBER-OF-ARGS 1) 
(PUT 'CSCD 'DEFINED-ON-LINE '701) 
(PUT 'CSCD 'DEFINED-IN-FILE 'ARITH/MATH.RED) 
(PUT 'CSCD 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE CSCD (X) (QUOTIENT 1 (SIND X))) 
(PUT 'ACOTD 'NUMBER-OF-ARGS 1) 
(PUT 'ACOTD 'DEFINED-ON-LINE '703) 
(PUT 'ACOTD 'DEFINED-IN-FILE 'ARITH/MATH.RED) 
(PUT 'ACOTD 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE ACOTD (X) (DIFFERENCE 90.0 (ATAND X))) 
(PUT 'ASIND 'NUMBER-OF-ARGS 1) 
(PUT 'ASIND 'DEFINED-ON-LINE '705) 
(PUT 'ASIND 'DEFINED-IN-FILE 'ARITH/MATH.RED) 
(PUT 'ASIND 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE ASIND (X) (TIMES !RAD2DEG (ASIN X))) 
(PUT 'ACOSD 'NUMBER-OF-ARGS 1) 
(PUT 'ACOSD 'DEFINED-ON-LINE '707) 
(PUT 'ACOSD 'DEFINED-IN-FILE 'ARITH/MATH.RED) 
(PUT 'ACOSD 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE ACOSD (X) (DIFFERENCE 90.0 (ASIND X))) 
(PUT 'ACSCD 'NUMBER-OF-ARGS 1) 
(PUT 'ACSCD 'DEFINED-ON-LINE '709) 
(PUT 'ACSCD 'DEFINED-IN-FILE 'ARITH/MATH.RED) 
(PUT 'ACSCD 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE ACSCD (X)
    (COND ((GEQ (ABS X) 1) (ASIND (QUOTIENT 1.0 X))) (T (TERRLST X 'ACSCD)))) 
(PUT 'ASECD 'NUMBER-OF-ARGS 1) 
(PUT 'ASECD 'DEFINED-ON-LINE '712) 
(PUT 'ASECD 'DEFINED-IN-FILE 'ARITH/MATH.RED) 
(PUT 'ASECD 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE ASECD (X)
    (COND ((LESSP (ABS X) 1) (TERRLST X 'ASECD))
          (T (DIFFERENCE 90.0 (ASIND (QUOTIENT 1.0 X)))))) 
(PUT 'SINH 'NUMBER-OF-ARGS 1) 
(PUT 'SINH 'DEFINED-ON-LINE '715) 
(PUT 'SINH 'DEFINED-IN-FILE 'ARITH/MATH.RED) 
(PUT 'SINH 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE SINH (X)
    (COND ((AND (FLOATP X) (NOT (EQN (DIFFERENCE X X) 0.0))) X)
          (T
           (PROG (S)
             (COND ((LESSP X 0.0) (SETQ X (MINUS X))) (T (SETQ S T)))
             (COND
              ((LESSP (SETQ X (FLOAT X)) 0.91)
               (PROGN (SETQ X (!SINHTS X)) (GO RET))))
             (SETQ X (EXP (MINUS X)))
             (SETQ X (QUOTIENT (DIFFERENCE (QUOTIENT 1.0 X) X) 2))
            RET
             (RETURN (COND (S X) (T (MINUS X)))))))) 
(PUT 'COSH 'NUMBER-OF-ARGS 1) 
(PUT 'COSH 'DEFINED-ON-LINE '723) 
(PUT 'COSH 'DEFINED-IN-FILE 'ARITH/MATH.RED) 
(PUT 'COSH 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE COSH (X)
    (PROGN
     (SETQ X (EXP (MINUS (ABS X))))
     (QUOTIENT (PLUS X (QUOTIENT 1.0 X)) 2))) 
(PUT 'TANH 'NUMBER-OF-ARGS 1) 
(PUT 'TANH 'DEFINED-ON-LINE '725) 
(PUT 'TANH 'DEFINED-IN-FILE 'ARITH/MATH.RED) 
(PUT 'TANH 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE TANH (X)
    (COND ((LESSP X 0.0) (MINUS (TANH (MINUS X))))
          (T
           (PROGN
            (SETQ X (EXP (MINUS (TIMES 2.0 X))))
            (QUOTIENT (DIFFERENCE 1.0 X) (PLUS 1.0 X)))))) 
(PUT 'COTH 'NUMBER-OF-ARGS 1) 
(PUT 'COTH 'DEFINED-ON-LINE '729) 
(PUT 'COTH 'DEFINED-IN-FILE 'ARITH/MATH.RED) 
(PUT 'COTH 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE COTH (X)
    (COND ((LESSP X 0.0) (MINUS (COTH (MINUS X))))
          (T
           (PROGN
            (SETQ X (EXP (MINUS (TIMES 2.0 X))))
            (QUOTIENT (PLUS 1.0 X) (DIFFERENCE 1.0 X)))))) 
(PUT 'ASINH 'NUMBER-OF-ARGS 1) 
(PUT 'ASINH 'DEFINED-ON-LINE '733) 
(PUT 'ASINH 'DEFINED-IN-FILE 'ARITH/MATH.RED) 
(PUT 'ASINH 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE ASINH (X)
    (PROG (S)
      (COND ((LESSP X 0) (SETQ X (MINUS X))) (T (SETQ S T)))
      (SETQ X
              (COND ((LESSP X !EPSQRT) X)
                    (T
                     (LOG
                      (PLUS X
                            (COND ((LESSP X 2) (SQRT (PLUS (TIMES X X) 1)))
                                  ((LESSP (QUOTIENT 1 X) !EPSQRT) X)
                                  (T
                                   (TIMES X
                                          (SQRT
                                           (PLUS 1
                                                 (QUOTIENT 1
                                                           (TIMES X
                                                                  X))))))))))))
      (RETURN (COND (S X) (T (MINUS X)))))) 
(PUT 'ACOSH 'NUMBER-OF-ARGS 1) 
(PUT 'ACOSH 'DEFINED-ON-LINE '739) 
(PUT 'ACOSH 'DEFINED-IN-FILE 'ARITH/MATH.RED) 
(PUT 'ACOSH 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE ACOSH (X)
    (COND ((LESSP X 1) (TERRLST X 'ACOSH))
          (T
           (LOG
            (PLUS X
                  (COND ((LESSP (QUOTIENT 1 X) !EPSQRT) X)
                        (T
                         (TIMES X
                                (SQRT
                                 (DIFFERENCE 1
                                             (QUOTIENT 1 (TIMES X X)))))))))))) 
(PUT 'ATANH 'NUMBER-OF-ARGS 1) 
(PUT 'ATANH 'DEFINED-ON-LINE '742) 
(PUT 'ATANH 'DEFINED-IN-FILE 'ARITH/MATH.RED) 
(PUT 'ATANH 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE ATANH (X)
    (COND ((GEQ (ABS X) 1) (TERRLST X 'ATANH)) ((LESSP (ABS X) !EPSQRT) X)
          (T (TIMES 0.5 (LOG (QUOTIENT (PLUS 1 X) (DIFFERENCE 1 X))))))) 
(PUT 'ACOTH 'NUMBER-OF-ARGS 1) 
(PUT 'ACOTH 'DEFINED-ON-LINE '745) 
(PUT 'ACOTH 'DEFINED-IN-FILE 'ARITH/MATH.RED) 
(PUT 'ACOTH 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE ACOTH (X)
    (COND ((LEQ (ABS X) 1) (TERRLST X 'ACOTH)) (T (ATANH (QUOTIENT 1.0 X))))) 
(PUT 'SECH 'NUMBER-OF-ARGS 1) 
(PUT 'SECH 'DEFINED-ON-LINE '748) 
(PUT 'SECH 'DEFINED-IN-FILE 'ARITH/MATH.RED) 
(PUT 'SECH 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE SECH (X) (QUOTIENT 1 (COSH X))) 
(PUT 'CSCH 'NUMBER-OF-ARGS 1) 
(PUT 'CSCH 'DEFINED-ON-LINE '750) 
(PUT 'CSCH 'DEFINED-IN-FILE 'ARITH/MATH.RED) 
(PUT 'CSCH 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE CSCH (X) (QUOTIENT 1 (SINH X))) 
(PUT 'ASECH 'NUMBER-OF-ARGS 1) 
(PUT 'ASECH 'DEFINED-ON-LINE '752) 
(PUT 'ASECH 'DEFINED-IN-FILE 'ARITH/MATH.RED) 
(PUT 'ASECH 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE ASECH (X)
    (COND ((OR (LEQ X 0) (GREATERP X 1)) (TERRLST X 'ASECH))
          (T (ACOSH (QUOTIENT 1.0 X))))) 
(PUT 'ACSCH 'NUMBER-OF-ARGS 1) 
(PUT 'ACSCH 'DEFINED-ON-LINE '755) 
(PUT 'ACSCH 'DEFINED-IN-FILE 'ARITH/MATH.RED) 
(PUT 'ACSCH 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE ACSCH (X)
    (COND ((EQUAL (SETQ X (FLOAT X)) 0.0) (TERRLST X 'ACSCH))
          (T (ASINH (QUOTIENT 1 X))))) 
(PUT 'LN 'NUMBER-OF-ARGS 1) 
(PUT 'LN 'DEFINED-ON-LINE '758) 
(PUT 'LN 'DEFINED-IN-FILE 'ARITH/MATH.RED) 
(PUT 'LN 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE LN (X) (LOG X)) 
(PUT 'LOG10 'NUMBER-OF-ARGS 1) 
(PUT 'LOG10 'DEFINED-ON-LINE '760) 
(PUT 'LOG10 'DEFINED-IN-FILE 'ARITH/MATH.RED) 
(PUT 'LOG10 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE LOG10 (X)
    (COND ((GREATERP X 0) (QUOTIENT (LOG X) !LOGTEN)) (T (TERRLST X 'LOG10)))) 
(PUT 'LOGB 'NUMBER-OF-ARGS 2) 
(PUT 'LOGB 'DEFINED-ON-LINE '763) 
(PUT 'LOGB 'DEFINED-IN-FILE 'ARITH/MATH.RED) 
(PUT 'LOGB 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE LOGB (X B)
    (PROG (A S)
      (SETQ A (GREATERP X 0))
      (SETQ S (NOT (OR (LEQ B 0) (ZEROP (DIFFERENCE B 1)))))
      (COND ((AND A S) (RETURN (QUOTIENT (LOG X) (LOG B))))
            (T
             (TERRLST
              (COND (A (LIST 'BASE B)) (S (LIST 'ARG X)) (T (LIST X B)))
              'LOGB))))) 
(PUT 'ATAN2 'NUMBER-OF-ARGS 2) 
(PUT 'ATAN2 'DEFINED-ON-LINE '769) 
(PUT 'ATAN2 'DEFINED-IN-FILE 'ARITH/MATH.RED) 
(PUT 'ATAN2 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE ATAN2 (Y X)
    (COND ((ZEROP X) (TIMES !PII2 (SGN Y)))
          (T
           (PROGN
            ((LAMBDA (A)
               (COND ((GREATERP X 0) A) ((LESSP Y 0) (DIFFERENCE A !PII))
                     (T (PLUS A !PII))))
             (ATAN (QUOTIENT Y X))))))) 
(PUT 'ATAN2D 'NUMBER-OF-ARGS 2) 
(PUT 'ATAN2D 'DEFINED-ON-LINE '774) 
(PUT 'ATAN2D 'DEFINED-IN-FILE 'ARITH/MATH.RED) 
(PUT 'ATAN2D 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE ATAN2D (Y X)
    (COND ((ZEROP X) (TIMES 90.0 (SGN Y)))
          (T
           (PROGN
            ((LAMBDA (A)
               (COND ((GREATERP X 0) A) ((LESSP Y 0) (DIFFERENCE A 180.0))
                     (T (PLUS A 180.0))))
             (TIMES !RAD2DEG (ATAN (QUOTIENT Y X)))))))) 
(PUT 'FACTORIAL 'NUMBER-OF-ARGS 1) 
(PUT 'FACTORIAL 'DEFINED-ON-LINE '781) 
(PUT 'FACTORIAL 'DEFINED-IN-FILE 'ARITH/MATH.RED) 
(PUT 'FACTORIAL 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE FACTORIAL (N)
    (COND
     ((OR (NOT (FIXP N)) (LESSP N 0))
      (RERROR 'ARITH 4 (LIST N "invalid factorial argument")))
     (T (NFACTORIAL N)))) 
(PUT 'NFACTORIAL 'NUMBER-OF-ARGS 1) 
(PUT 'NFACTORIAL 'DEFINED-ON-LINE '786) 
(PUT 'NFACTORIAL 'DEFINED-IN-FILE 'ARITH/MATH.RED) 
(PUT 'NFACTORIAL 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE NFACTORIAL (N)
    (COND ((GREATERP N 20) (FAC-PART 1 N))
          (T
           (PROG (M)
             (SETQ M 1)
             (PROG (I)
               (SETQ I 1)
              LAB
               (COND ((MINUSP (DIFFERENCE N I)) (RETURN NIL)))
               (SETQ M (TIMES M I))
               (SETQ I (PLUS2 I 1))
               (GO LAB))
             (RETURN M))))) 
(PUT 'FAC-PART 'NUMBER-OF-ARGS 2) 
(PUT 'FAC-PART 'DEFINED-ON-LINE '796) 
(PUT 'FAC-PART 'DEFINED-IN-FILE 'ARITH/MATH.RED) 
(PUT 'FAC-PART 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE FAC-PART (M N)
    (COND ((EQUAL M N) M) ((EQUAL M (DIFFERENCE N 1)) (TIMES M N))
          (T
           ((LAMBDA (P) (TIMES (FAC-PART M P) (FAC-PART (PLUS P 1) N)))
            (QUOTIENT (PLUS M N) 2))))) 
(ENDMODULE) 