(cl:declaim (cl:optimize cl:debug cl:safety))
(cl:declaim (sb-ext:muffle-conditions sb-ext:compiler-note cl:style-warning))
(MODULE (LIST 'IBASICS)) 
(FLUID
 '(*BACKTRACE *GCD *SQFREE *TRINT INDEXLIST SQRTFLAG SQRTLIST VARLIST ZLIST)) 
(EXPORTS (LIST 'PARTIALDIFF 'PRINTDF 'INTERR)) 
(IMPORTS (LIST 'DF2PRINTFORM 'PRINTSF 'VARSINSF 'ADDSQ 'MULTSQ 'MULTD 'MKSP)) 
(PUT 'PRINTDF 'NUMBER-OF-ARGS 1) 
(PUT 'PRINTDF 'DEFINED-ON-LINE '37) 
(PUT 'PRINTDF 'DEFINED-IN-FILE 'INT/IBASICS.RED) 
(PUT 'PRINTDF 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE PRINTDF (U) (PROG (*GCD) (PRINTSF (DF2PRINTFORM U)))) 
(PUT 'INTERR 'NUMBER-OF-ARGS 1) 
(PUT 'INTERR 'DEFINED-ON-LINE '46) 
(PUT 'INTERR 'DEFINED-IN-FILE 'INT/IBASICS.RED) 
(PUT 'INTERR 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE INTERR (MESS)
    (PROGN
     (COND
      ((OR *TRINT *BACKTRACE)
       (PROGN
        (PRIN2 "***** INTEGRATION PACKAGE ERROR:  ")
        (PROGN (PRIN2 MESS) (TERPRI) MESS))))
     (ERROR1))) 
(PUT 'PARTIALDIFF 'NUMBER-OF-ARGS 2) 
(PUT 'PARTIALDIFF 'DEFINED-ON-LINE '51) 
(PUT 'PARTIALDIFF 'DEFINED-IN-FILE 'INT/IBASICS.RED) 
(PUT 'PARTIALDIFF 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE PARTIALDIFF (P V)
    (COND ((OR (ATOM P) (ATOM (CAR P))) NIL)
          ((EQUAL V (CAAAR P))
           ((LAMBDA (X)
              (COND ((EQUAL X 1) (CDAR P))
                    (T
                     (CONS
                      (CONS (GETPOWER (FKERN V) (DIFFERENCE X 1))
                            (MULTD X (CDAR P)))
                      (PARTIALDIFF (CDR P) V)))))
            (CDAR (CAR P))))
          (T
           ((LAMBDA (X)
              (COND ((NULL X) (PARTIALDIFF (CDR P) V))
                    (T (CONS (CONS (CAAR P) X) (PARTIALDIFF (CDR P) V)))))
            (PARTIALDIFF (CDAR P) V))))) 
(PUT 'PDIFF 'SIMPFN 'SIMPPDIFF) 
(PUT 'MKILIST 'NUMBER-OF-ARGS 2) 
(PUT 'MKILIST 'DEFINED-ON-LINE '67) 
(PUT 'MKILIST 'DEFINED-IN-FILE 'INT/IBASICS.RED) 
(PUT 'MKILIST 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE MKILIST (OLD TERM)
    (COND ((NULL OLD) NIL) (T (CONS TERM (MKILIST (CDR OLD) TERM))))) 
(PUT 'REMOVEDUPLICATES 'NUMBER-OF-ARGS 1) 
(PUT 'REMOVEDUPLICATES 'DEFINED-ON-LINE '76) 
(PUT 'REMOVEDUPLICATES 'DEFINED-IN-FILE 'INT/IBASICS.RED) 
(PUT 'REMOVEDUPLICATES 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE REMOVEDUPLICATES (U)
    (COND ((NULL U) NIL) ((ATOM U) (CONS U NIL))
          ((MEMBER (CAR U) (CDR U)) (REMOVEDUPLICATES (CDR U)))
          (T (CONS (CAR U) (REMOVEDUPLICATES (CDR U)))))) 
(PUT 'JSQFREE 'NUMBER-OF-ARGS 2) 
(PUT 'JSQFREE 'DEFINED-ON-LINE '84) 
(PUT 'JSQFREE 'DEFINED-IN-FILE 'INT/IBASICS.RED) 
(PUT 'JSQFREE 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE JSQFREE (SF VAR)
    (PROG ()
      (SETQ VARLIST (GETVARIABLES (CONS SF 1)))
      (SETQ ZLIST (FINDZVARS VARLIST (LIST VAR) VAR NIL))
      (SETQ SQRTLIST (FINDSQRTS VARLIST))
      (SETQ SQRTFLAG (NOT (NULL SQRTLIST)))
      (SETQ VARLIST (SETDIFF VARLIST ZLIST))
      (RETURN (COND ((EQ SF *SQFREE) (LIST (LIST SF))) (T (SQFREE SF ZLIST)))))) 
(PUT 'STT 'NUMBER-OF-ARGS 2) 
(PUT 'STT 'DEFINED-ON-LINE '94) 
(PUT 'STT 'DEFINED-IN-FILE 'INT/IBASICS.RED) 
(PUT 'STT 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE STT (U X)
    (COND
     ((OR (ATOM U) (ATOM (CAR U)))
      (COND ((EQ U NIL) (CONS (MINUS 1) NIL)) (T (CONS 0 U))))
     ((EQ (CAAAR U) X) (CONS (CDAAR U) (CDAR U)))
     ((ORDOP X (CAAAR U)) (CONS 0 U))
     (T
      (PROG (LTLC LTREST)
        (SETQ LTLC (STT (CDAR U) X))
        (SETQ LTREST (STT (CDR U) X))
        (COND ((EQUAL (CAR LTLC) (CAR LTREST)) (GO MERGE)))
        (COND
         ((GREATERP (CAR LTLC) (CAR LTREST))
          (RETURN
           (CONS (CAR LTLC) (*MULTF (CDR LTLC) (CONS (CONS (CAAR U) 1) NIL)))))
         (T (RETURN LTREST)))
       MERGE
        (RETURN
         (CONS (CAR LTLC)
               (ADDF (CDR LTREST)
                     (*MULTF (CDR LTLC) (CONS (CONS (CAAR U) 1) NIL))))))))) 
(PUT 'MAPPLY 'NUMBER-OF-ARGS 2) 
(PUT 'MAPPLY 'DEFINED-ON-LINE '117) 
(PUT 'MAPPLY 'DEFINED-IN-FILE 'INT/IBASICS.RED) 
(PUT 'MAPPLY 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE MAPPLY (FUNCT L)
    (COND ((NULL L) (RERROR 'INT 6 "Empty list to mapply"))
          ((NULL (CDR L)) (CAR L))
          (T (APPLY2 FUNCT (CAR L) (MAPPLY FUNCT (CDR L)))))) 
(PUT 'MAPVEC 'NUMBER-OF-ARGS 2) 
(PUT 'MAPVEC 'DEFINED-ON-LINE '127) 
(PUT 'MAPVEC 'DEFINED-IN-FILE 'INT/IBASICS.RED) 
(PUT 'MAPVEC 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE MAPVEC (V F)
    (PROG (N)
      (SETQ N (UPBV V))
      (PROG (I)
        (SETQ I 0)
       LAB
        (COND ((MINUSP (DIFFERENCE N I)) (RETURN NIL)))
        (APPLY1 F (GETV V I))
        (SETQ I (PLUS2 I 1))
        (GO LAB)))) 
(ENDMODULE) 