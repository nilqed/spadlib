(cl:declaim (cl:optimize cl:debug cl:safety))
(cl:declaim (sb-ext:muffle-conditions sb-ext:compiler-note cl:style-warning))
(MODULE (LIST 'ENTRY)) 
(FLUID '(VARSTACK*)) 
(COND ((GETD 'CREATE-PACKAGE) (CREATE-PACKAGE '(ENTRY) '(BUILD)))) 
(PUT 'SAFE-PUTD 'NUMBER-OF-ARGS 3) 
(PUT 'SAFE-PUTD 'DEFINED-ON-LINE '39) 
(PUT 'SAFE-PUTD 'DEFINED-IN-FILE 'SUPPORT/ENTRY.RED) 
(PUT 'SAFE-PUTD 'PROCEDURE_TYPE
     '(ARROW (TIMES GENERAL GENERAL GENERAL) GENERAL)) 
(DE SAFE-PUTD (NAME TYPE BODY)
    (COND ((GETD NAME) (LPRIM (LIST "Autoload stub for" NAME "not defined")))
          (T (PUTD NAME TYPE BODY)))) 
(DE MKFUNCTION (U) (LIST 'FUNCTION U)) 
(PUT 'MKFUNCTION 'NUMBER-OF-ARGS 1) 
(PUT 'MKFUNCTION 'DEFINED-ON-LINE '44) 
(PUT 'MKFUNCTION 'DEFINED-IN-FILE 'SUPPORT/ENTRY.RED) 
(PUT 'MKFUNCTION 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(PUTC 'MKFUNCTION 'INLINE '(LAMBDA (U) (LIST 'FUNCTION U))) 
(PUT 'DO-AUTOLOAD 'NUMBER-OF-ARGS 3) 
(PUT 'DO-AUTOLOAD 'DEFINED-ON-LINE '46) 
(PUT 'DO-AUTOLOAD 'DEFINED-IN-FILE 'SUPPORT/ENTRY.RED) 
(PUT 'DO-AUTOLOAD 'PROCEDURE_TYPE
     '(ARROW (TIMES GENERAL GENERAL GENERAL) GENERAL)) 
(DE DO-AUTOLOAD (NAME U LOADNAME)
    (PROG (W)
      (PROG (J)
        (SETQ J LOADNAME)
       LAB
        (COND ((NULL J) (RETURN NIL)))
        ((LAMBDA (J) (LOAD-PACKAGE J)) (CAR J))
        (SETQ J (CDR J))
        (GO LAB))
      (SETQ W (GETD NAME))
      (COND
       ((AND (NOT (ATOM W)) (NOT (ATOM (SETQ W (CDR W)))) (EQCAR W 'LAMBDA)
             (NOT (ATOM (SETQ W (CDDR W)))) (EQCAR (CAR W) 'DO-AUTOLOAD))
        (PROGN
         (LPRIM (LIST "Autoloading for" NAME "did not define it"))
         (ERROR 99 (LIST "Presumed build failure:" NAME LOADNAME)))))
      (RETURN (LISPAPPLY NAME U)))) 
(PUT 'DEFAUTOLOAD 'DEFINED-ON-LINE '61) 
(PUT 'DEFAUTOLOAD 'DEFINED-IN-FILE 'SUPPORT/ENTRY.RED) 
(PUT 'DEFAUTOLOAD 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DM DEFAUTOLOAD (U)
    (PROG (NAME NUMARGS LOADNAME FNTYPE)
      (SETQ U (CDR U))
      (SETQ NAME (CAR U))
      (SETQ U (CDR U))
      (COND (U (PROGN (SETQ LOADNAME (CAR U)) (SETQ U (CDR U))))
            (T (SETQ LOADNAME NAME)))
      (COND ((EQCAR NAME 'QUOTE) (SETQ NAME (CADR NAME))))
      (COND ((ATOM LOADNAME) (SETQ LOADNAME (LIST LOADNAME)))
            ((EQ (CAR LOADNAME) 'QUOTE) (SETQ LOADNAME (CADR LOADNAME))))
      (COND (U (PROGN (SETQ FNTYPE (CAR U)) (SETQ U (CDR U))))
            (T (SETQ FNTYPE 'EXPR)))
      (COND (U (SETQ NUMARGS (CAR U))) (T (SETQ NUMARGS 1)))
      (SETQ U
              (COND ((EQUAL NUMARGS 0) NIL) ((EQUAL NUMARGS 1) '(X1))
                    ((EQUAL NUMARGS 2) '(X1 X2))
                    ((EQUAL NUMARGS 3) '(X1 X2 X3))
                    ((EQUAL NUMARGS 4) '(X1 X2 X3 X4))
                    ((EQUAL NUMARGS 5) '(X1 X2 X3 X4 X5))
                    ((EQUAL NUMARGS 6) '(X1 X2 X3 X4 X5 X6))
                    ((EQUAL NUMARGS 7) '(X1 X2 X3 X4 X5 X6 X7))
                    ((EQUAL NUMARGS 8) '(X1 X2 X3 X4 X5 X6 X7 X8))
                    ((EQUAL NUMARGS 9) '(X1 X2 X3 X4 X5 X6 X7 X8 X9))
                    (T (ERROR 99 (LIST NUMARGS "too large in DEFAUTOLOAD")))))
      (SETQ NAME (MKQUOTE NAME))
      (RETURN
       (LIST 'PROGN (LIST 'PUT NAME (MKQUOTE 'NUMBER-OF-ARGS) NUMARGS)
             (LIST 'SAFE-PUTD NAME (MKQUOTE FNTYPE)
                   (LIST 'FUNCTION
                         (LIST 'LAMBDA U
                               (LIST 'DO-AUTOLOAD NAME (CONS 'LIST U)
                                     (MKQUOTE LOADNAME))))))))) 
(PUT 'DEFAUTOLOAD_OPERATOR 'DEFINED-ON-LINE '108) 
(PUT 'DEFAUTOLOAD_OPERATOR 'DEFINED-IN-FILE 'SUPPORT/ENTRY.RED) 
(PUT 'DEFAUTOLOAD_OPERATOR 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DM DEFAUTOLOAD_OPERATOR (U)
    (PROG (NAME PACKAGE)
      (SETQ NAME (CADR U))
      (SETQ PACKAGE (CADDR U))
      (RETURN
       (SUBLA (LIST (CONS 'NAME NAME) (CONS 'PACKAGE PACKAGE))
              '(PROGN
                (FLAG '(NAME) 'FULL)
                (PUT 'NAME 'SIMPFN
                     '(LAMBDA (X) (AUTOLOAD_OPERATOR* 'NAME 'PACKAGE X)))))))) 
(PUT 'AUTOLOAD_OPERATOR* 'NUMBER-OF-ARGS 3) 
(PUT 'AUTOLOAD_OPERATOR* 'DEFINED-ON-LINE '118) 
(PUT 'AUTOLOAD_OPERATOR* 'DEFINED-IN-FILE 'SUPPORT/ENTRY.RED) 
(PUT 'AUTOLOAD_OPERATOR* 'PROCEDURE_TYPE
     '(ARROW (TIMES GENERAL GENERAL GENERAL) GENERAL)) 
(DE AUTOLOAD_OPERATOR* (O P X)
    (PROG (VARSTACK*)
      (REMFLAG (LIST O) 'FULL)
      (REMPROP O 'SIMPFN)
      (COND
       ((PAIRP P)
        (PROG (PP)
          (SETQ PP P)
         LAB
          (COND ((NULL PP) (RETURN NIL)))
          ((LAMBDA (PP) (LOAD-PACKAGE PP)) (CAR PP))
          (SETQ PP (CDR PP))
          (GO LAB)))
       (T (LOAD-PACKAGE P)))
      (RETURN (SIMP X)))) 
(PUT 'DEFAUTOLOAD_VALUE 'DEFINED-ON-LINE '127) 
(PUT 'DEFAUTOLOAD_VALUE 'DEFINED-IN-FILE 'SUPPORT/ENTRY.RED) 
(PUT 'DEFAUTOLOAD_VALUE 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DM DEFAUTOLOAD_VALUE (U)
    (PROG (NAME PACKAGE)
      (SETQ U (CDR U))
      (SETQ NAME (CAR U))
      (SETQ U (CDR U))
      (SETQ PACKAGE (CAR U))
      (RETURN
       (SUBLA (LIST (CONS 'NAME NAME) (CONS 'PACKAGE PACKAGE))
              '(PROGN (PUT 'NAME 'AVALUE '(AUTOLOAD_VALUE* NAME PACKAGE))))))) 
(PUT 'AUTOLOAD_VALUE* 'NUMBER-OF-ARGS 2) 
(PUT 'AUTOLOAD_VALUE* 'DEFINED-ON-LINE '136) 
(PUT 'AUTOLOAD_VALUE* 'DEFINED-IN-FILE 'SUPPORT/ENTRY.RED) 
(PUT 'AUTOLOAD_VALUE* 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE AUTOLOAD_VALUE* (U V)
    (PROG (NAME P X VARSTACK*)
      (SETQ X (GET U 'AVALUE))
      (SETQ NAME (CADR X))
      (SETQ P (CADDR X))
      (REMPROP NAME 'AVALUE)
      (LOAD-PACKAGE P)
      (RETURN (REVAL1 NAME V)))) 
(PUT 'AUTOLOAD_VALUE* 'EVFN 'AUTOLOAD_VALUE*) 
(PUT 'COMPILE 'NUMBER-OF-ARGS 1) 
(SAFE-PUTD 'COMPILE 'EXPR
           (FUNCTION
            (LAMBDA (X1) (DO-AUTOLOAD 'COMPILE (LIST X1) '(COMPILER))))) 
(COND
 ((MEMQ 'PSL LISPSYSTEM*)
  (PROGN
   (PUT 'LAP 'NUMBER-OF-ARGS 1)
   (SAFE-PUTD 'LAP 'EXPR
              (FUNCTION
               (LAMBDA (X1) (DO-AUTOLOAD 'LAP (LIST X1) '(COMPILER)))))))
 (T
  (PROGN
   (PROGN
    (PUT 'FASLOUT 'NUMBER-OF-ARGS 1)
    (SAFE-PUTD 'FASLOUT 'EXPR
               (FUNCTION
                (LAMBDA (X1) (DO-AUTOLOAD 'FASLOUT (LIST X1) '(COMPILER))))))
   (PROGN
    (PUT 'FULLY-MACROEXPAND 'NUMBER-OF-ARGS 1)
    (SAFE-PUTD 'FULLY-MACROEXPAND 'EXPR
               (FUNCTION
                (LAMBDA (X1)
                  (DO-AUTOLOAD 'FULLY-MACROEXPAND (LIST X1) '(COMPILER))))))))) 
(REMD 'CREFON) 
(PUT 'CREF 'SIMPFG '((T (CREFON)) (NIL (AND (GETD 'CREFOFF) (CREFOFF))))) 
(PUT 'CREFON 'NUMBER-OF-ARGS 0) 
(SAFE-PUTD 'CREFON 'EXPR
           (FUNCTION (LAMBDA () (DO-AUTOLOAD 'CREFON (LIST) '(RCREF))))) 
(REMPROP 'DISPLAY 'STAT) 
(REMPROP 'EDITDEF 'STAT) 
(PUT 'CEDIT 'NUMBER-OF-ARGS 1) 
(SAFE-PUTD 'CEDIT 'EXPR
           (FUNCTION (LAMBDA (X1) (DO-AUTOLOAD 'CEDIT (LIST X1) '(CEDIT))))) 
(PUT 'DISPLAY 'NUMBER-OF-ARGS 1) 
(SAFE-PUTD 'DISPLAY 'EXPR
           (FUNCTION (LAMBDA (X1) (DO-AUTOLOAD 'DISPLAY (LIST X1) '(CEDIT))))) 
(PUT 'DISPLAY 'STAT 'RLIS) 
(PUT 'EDITDEF 'NUMBER-OF-ARGS 1) 
(SAFE-PUTD 'EDITDEF 'EXPR
           (FUNCTION (LAMBDA (X1) (DO-AUTOLOAD 'EDITDEF (LIST X1) '(CEDIT))))) 
(PUT 'EDITDEF 'STAT 'RLIS) 
(PUT 'PACKAGE-REMAKE 'NUMBER-OF-ARGS 1) 
(SAFE-PUTD 'PACKAGE-REMAKE 'EXPR
           (FUNCTION
            (LAMBDA (X1) (DO-AUTOLOAD 'PACKAGE-REMAKE (LIST X1) '(REMAKE))))) 
(SWITCH (LIST 'TRFAC 'TRALLFAC)) 
(REMPROP 'FACTOR 'STAT) 
(PUT 'EZGCDF 'NUMBER-OF-ARGS 2) 
(SAFE-PUTD 'EZGCDF 'EXPR
           (FUNCTION
            (LAMBDA (X1 X2) (DO-AUTOLOAD 'EZGCDF (LIST X1 X2) '(EZGCD))))) 
(PUT 'FACTORIZE-PRIMITIVE-POLYNOMIAL 'NUMBER-OF-ARGS 1) 
(SAFE-PUTD 'FACTORIZE-PRIMITIVE-POLYNOMIAL 'EXPR
           (FUNCTION
            (LAMBDA (X1)
              (DO-AUTOLOAD 'FACTORIZE-PRIMITIVE-POLYNOMIAL (LIST X1)
                           '(FACTOR))))) 
(PUT 'PFACTOR 'NUMBER-OF-ARGS 2) 
(SAFE-PUTD 'PFACTOR 'EXPR
           (FUNCTION
            (LAMBDA (X1 X2) (DO-AUTOLOAD 'PFACTOR (LIST X1 X2) '(FACTOR))))) 
(PUT 'SIMPNPRIMITIVE 'NUMBER-OF-ARGS 1) 
(SAFE-PUTD 'SIMPNPRIMITIVE 'EXPR
           (FUNCTION
            (LAMBDA (X1) (DO-AUTOLOAD 'SIMPNPRIMITIVE (LIST X1) '(FACTOR))))) 
(PUT 'NPRIMITIVE 'SIMPFN 'SIMPNPRIMITIVE) 
(PUT 'FACTOR 'STAT 'RLIS) 
(FLAG '(FASLOUT) 'OPFN) 
(FLAG '(FASLOUT) 'NOVAL) 
(REMPROP 'RESETREDUCE 'STAT) 
(PUT 'RESETREDUCE 'NUMBER-OF-ARGS 0) 
(SAFE-PUTD 'RESETREDUCE 'EXPR
           (FUNCTION (LAMBDA () (DO-AUTOLOAD 'RESETREDUCE (LIST) '(RESET))))) 
(PUT 'RESETREDUCE 'STAT 'ENDSTAT) 
(REMPROP 'INDEX 'STAT) 
(REMPROP 'MASS 'STAT) 
(REMPROP 'MSHELL 'STAT) 
(REMPROP 'VECDIM 'STAT) 
(REMPROP 'VECTOR 'STAT) 
(PUT 'INDEX 'NUMBER-OF-ARGS 1) 
(SAFE-PUTD 'INDEX 'EXPR
           (FUNCTION (LAMBDA (X1) (DO-AUTOLOAD 'INDEX (LIST X1) '(HEPHYS))))) 
(PUT 'MASS 'NUMBER-OF-ARGS 1) 
(SAFE-PUTD 'MASS 'EXPR
           (FUNCTION (LAMBDA (X1) (DO-AUTOLOAD 'MASS (LIST X1) '(HEPHYS))))) 
(PUT 'MSHELL 'NUMBER-OF-ARGS 1) 
(SAFE-PUTD 'MSHELL 'EXPR
           (FUNCTION (LAMBDA (X1) (DO-AUTOLOAD 'MSHELL (LIST X1) '(HEPHYS))))) 
(PUT 'VECDIM 'NUMBER-OF-ARGS 1) 
(SAFE-PUTD 'VECDIM 'EXPR
           (FUNCTION (LAMBDA (X1) (DO-AUTOLOAD 'VECDIM (LIST X1) '(HEPHYS))))) 
(PUT 'VECTOR 'NUMBER-OF-ARGS 1) 
(SAFE-PUTD 'VECTOR 'EXPR
           (FUNCTION (LAMBDA (X1) (DO-AUTOLOAD 'VECTOR (LIST X1) '(HEPHYS))))) 
(PUT 'INDEX 'STAT 'RLIS) 
(PUT 'MSHELL 'STAT 'RLIS) 
(PUT 'MASS 'STAT 'RLIS) 
(PUT 'VECDIM 'STAT 'RLIS) 
(PUT 'VECTOR 'STAT 'RLIS) 
(GLOBAL '(*CVIT *CVITERROR *CVITBTR *CVITRACE *CVITOP)) 
(SWITCH
 (LIST (LIST 'EQUAL 'CVIT 'OFF) (LIST 'EQUAL 'CVITERROR 'ON)
       (LIST 'EQUAL 'CVITBTR 'ON) (LIST 'EQUAL 'CVITRACE 'OFF)
       (LIST 'EQUAL 'CVITOP 'OFF))) 
(PUT 'CVIT 'SIMPFG '((T (LOAD-PACKAGE 'CVIT)))) 
(FLUID '(*TRINT *TRINTSUBST *TRDINT *NOINTSUBST)) 
(SWITCH (LIST 'TRINT 'TRINTSUBST 'TRDINT 'NOINTSUBST)) 
(PUT 'SIMPINT 'NUMBER-OF-ARGS 1) 
(SAFE-PUTD 'SIMPINT 'EXPR
           (FUNCTION (LAMBDA (X1) (DO-AUTOLOAD 'SIMPINT (LIST X1) '(INT))))) 
(PUT 'INT 'SIMPFN 'SIMPINT) 
(FLUID '(*TRA)) 
(SWITCH (LIST 'TRA)) 
(SWITCH (LIST 'ALGINT)) 
(PUT 'ALGINT 'SIMPFG '((T (LOAD-PACKAGE 'ALGINT)))) 
(FLUID '(*TRDEFINT)) 
(SWITCH (LIST 'TRDEFINT)) 
(PUT 'NEW_DEFINT 'NUMBER-OF-ARGS 1) 
(SAFE-PUTD 'NEW_DEFINT 'EXPR
           (FUNCTION
            (LAMBDA (X1) (DO-AUTOLOAD 'NEW_DEFINT (LIST X1) '(DEFINT))))) 
(PUT 'NEW_INDEFINT 'NUMBER-OF-ARGS 1) 
(SAFE-PUTD 'NEW_INDEFINT 'EXPR
           (FUNCTION
            (LAMBDA (X1) (DO-AUTOLOAD 'NEW_INDEFINT (LIST X1) '(DEFINT))))) 
(PUT 'DEFINT0 'NUMBER-OF-ARGS 1) 
(SAFE-PUTD 'DEFINT0 'EXPR
           (FUNCTION (LAMBDA (X1) (DO-AUTOLOAD 'DEFINT0 (LIST X1) '(DEFINT))))) 
(PUT 'NEW_LAPLACE 'NUMBER-OF-ARGS 1) 
(SAFE-PUTD 'NEW_LAPLACE 'EXPR
           (FUNCTION
            (LAMBDA (X1) (DO-AUTOLOAD 'NEW_LAPLACE (LIST X1) '(DEFINT))))) 
(PUT 'LAPLACE_TRANSFORM 'PSOPFN 'NEW_LAPLACE) 
(PUT 'NEW_HANKEL 'NUMBER-OF-ARGS 1) 
(SAFE-PUTD 'NEW_HANKEL 'EXPR
           (FUNCTION
            (LAMBDA (X1) (DO-AUTOLOAD 'NEW_HANKEL (LIST X1) '(DEFINT))))) 
(PUT 'HANKEL_TRANSFORM 'PSOPFN 'NEW_HANKEL) 
(PUT 'NEW_Y_TRANSFORM 'NUMBER-OF-ARGS 1) 
(SAFE-PUTD 'NEW_Y_TRANSFORM 'EXPR
           (FUNCTION
            (LAMBDA (X1) (DO-AUTOLOAD 'NEW_Y_TRANSFORM (LIST X1) '(DEFINT))))) 
(PUT 'Y_TRANSFORM 'PSOPFN 'NEW_Y_TRANSFORM) 
(PUT 'NEW_K_TRANSFORM 'NUMBER-OF-ARGS 1) 
(SAFE-PUTD 'NEW_K_TRANSFORM 'EXPR
           (FUNCTION
            (LAMBDA (X1) (DO-AUTOLOAD 'NEW_K_TRANSFORM (LIST X1) '(DEFINT))))) 
(PUT 'K_TRANSFORM 'PSOPFN 'NEW_K_TRANSFORM) 
(PUT 'NEW_STRUVEH 'NUMBER-OF-ARGS 1) 
(SAFE-PUTD 'NEW_STRUVEH 'EXPR
           (FUNCTION
            (LAMBDA (X1) (DO-AUTOLOAD 'NEW_STRUVEH (LIST X1) '(DEFINT))))) 
(PUT 'STRUVEH_TRANSFORM 'PSOPFN 'NEW_STRUVEH) 
(PUT 'NEW_FOURIER_SIN 'NUMBER-OF-ARGS 1) 
(SAFE-PUTD 'NEW_FOURIER_SIN 'EXPR
           (FUNCTION
            (LAMBDA (X1) (DO-AUTOLOAD 'NEW_FOURIER_SIN (LIST X1) '(DEFINT))))) 
(PUT 'FOURIER_SIN 'PSOPFN 'NEW_FOURIER_SIN) 
(PUT 'NEW_FOURIER_COS 'NUMBER-OF-ARGS 1) 
(SAFE-PUTD 'NEW_FOURIER_COS 'EXPR
           (FUNCTION
            (LAMBDA (X1) (DO-AUTOLOAD 'NEW_FOURIER_COS (LIST X1) '(DEFINT))))) 
(PUT 'FOURIER_COS 'PSOPFN 'NEW_FOURIER_COS) 
(PUT 'PRINT_CONDITIONS 'NUMBER-OF-ARGS 0) 
(SAFE-PUTD 'PRINT_CONDITIONS 'EXPR
           (FUNCTION
            (LAMBDA () (DO-AUTOLOAD 'PRINT_CONDITIONS (LIST) '(DEFINT))))) 
(FLAG '(PRINT_CONDITIONS) 'OPFN) 
(SWITCH (LIST 'CRAMER)) 
(PUT 'CRAMER 'SIMPFG
     '((T (PUT 'MAT 'LNRSOLVEFN 'CLNRSOLVE) (PUT 'MAT 'INVERSEFN 'MATINV))
       (NIL (PUT 'MAT 'LNRSOLVEFN 'LNRSOLVE)
        (PUT 'MAT 'INVERSEFN 'MATINVERSE)))) 
(PUT 'DETQ 'NUMBER-OF-ARGS 1) 
(SAFE-PUTD 'DETQ 'EXPR
           (FUNCTION (LAMBDA (X1) (DO-AUTOLOAD 'DETQ (LIST X1) '(MATRIX))))) 
(PUT 'MATP 'NUMBER-OF-ARGS 1) 
(SAFE-PUTD 'MATP 'EXPR
           (FUNCTION (LAMBDA (X1) (DO-AUTOLOAD 'MATP (LIST X1) '(MATRIX))))) 
(PUT 'MATRIX 'NUMBER-OF-ARGS 1) 
(SAFE-PUTD 'MATRIX 'EXPR
           (FUNCTION (LAMBDA (X1) (DO-AUTOLOAD 'MATRIX (LIST X1) '(MATRIX))))) 
(PUT 'MATRIX 'STAT 'RLIS) 
(FLAG '(MAT) 'STRUCT) 
(PUT 'MAT 'FORMFN 'FORMMAT) 
(PUT 'FORMMAT 'NUMBER-OF-ARGS 3) 
(SAFE-PUTD 'FORMMAT 'EXPR
           (FUNCTION
            (LAMBDA (X1 X2 X3)
              (DO-AUTOLOAD 'FORMMAT (LIST X1 X2 X3) '(MATRIX))))) 
(PUT 'MATSTAT 'NUMBER-OF-ARGS 0) 
(SAFE-PUTD 'MATSTAT 'EXPR
           (FUNCTION (LAMBDA () (DO-AUTOLOAD 'MATSTAT (LIST) '(MATRIX))))) 
(PUT 'MAT 'STAT 'MATSTAT) 
(PUT 'GENERATEIDENT 'NUMBER-OF-ARGS 1) 
(SAFE-PUTD 'GENERATEIDENT 'EXPR
           (FUNCTION
            (LAMBDA (X1) (DO-AUTOLOAD 'GENERATEIDENT (LIST X1) '(MATRIX))))) 
(PUT 'LNRSOLVE 'NUMBER-OF-ARGS 2) 
(SAFE-PUTD 'LNRSOLVE 'EXPR
           (FUNCTION
            (LAMBDA (X1 X2) (DO-AUTOLOAD 'LNRSOLVE (LIST X1 X2) '(MATRIX))))) 
(PUT 'SIMPRESULTANT 'NUMBER-OF-ARGS 1) 
(SAFE-PUTD 'SIMPRESULTANT 'EXPR
           (FUNCTION
            (LAMBDA (X1) (DO-AUTOLOAD 'SIMPRESULTANT (LIST X1) '(MATRIX))))) 
(PUT 'RESULTANT 'NUMBER-OF-ARGS 3) 
(SAFE-PUTD 'RESULTANT 'EXPR
           (FUNCTION
            (LAMBDA (X1 X2 X3)
              (DO-AUTOLOAD 'RESULTANT (LIST X1 X2 X3) '(MATRIX))))) 
(PUT 'RESULTANT 'SIMPFN 'SIMPRESULTANT) 
(PUT 'NULLSPACE-EVAL 'NUMBER-OF-ARGS 1) 
(SAFE-PUTD 'NULLSPACE-EVAL 'EXPR
           (FUNCTION
            (LAMBDA (X1)
              (DO-AUTOLOAD 'NULLSPACE-EVAL (LIST X1) '(MATRIX (LIST 'NIL)))))) 
(PUT 'NULLSPACE 'PSOPFN 'NULLSPACE-EVAL) 
(PUT 'READMATPROC 'NUMBER-OF-ARGS 0) 
(SAFE-PUTD 'READMATPROC 'EXPR
           (FUNCTION (LAMBDA () (DO-AUTOLOAD 'READMATPROC (LIST) '(MATRIX))))) 
(PUT 'MATRIXPROC 'STAT 'READMATPROC) 
(SWITCH (LIST (LIST 'EQUAL 'CF_TAYLOR 'OFF))) 
(PUT 'CONT-FRACT 'NUMBER-OF-ARGS 1) 
(SAFE-PUTD 'CONT-FRACT 'EXPR
           (FUNCTION
            (LAMBDA (X1) (DO-AUTOLOAD 'CONT-FRACT (LIST X1) '(RATAPRX))))) 
(PUT 'CONTFRAC 'SIMPFN 'SIMPIDEN) 
(PUT 'CF 'PSOPFN 'CONT-FRACT) 
(PUT 'CONTINUED_FRACTION 'PSOPFN 'CONT-FRACT) 
(PUT '|CF:EXPR| 'NUMBER-OF-ARGS 1) 
(SAFE-PUTD '|CF:EXPR| 'EXPR
           (FUNCTION
            (LAMBDA (X1) (DO-AUTOLOAD '|CF:EXPR| (LIST X1) '(RATAPRX))))) 
(PUT '|CF:CONV| 'NUMBER-OF-ARGS 1) 
(SAFE-PUTD '|CF:CONV| 'EXPR
           (FUNCTION
            (LAMBDA (X1) (DO-AUTOLOAD '|CF:CONV| (LIST X1) '(RATAPRX))))) 
(PUT '|CF:COEF-LIST| 'NUMBER-OF-ARGS 1) 
(SAFE-PUTD '|CF:COEF-LIST| 'EXPR
           (FUNCTION
            (LAMBDA (X1) (DO-AUTOLOAD '|CF:COEF-LIST| (LIST X1) '(RATAPRX))))) 
(PUT '|CF:CONV-LIST| 'NUMBER-OF-ARGS 1) 
(SAFE-PUTD '|CF:CONV-LIST| 'EXPR
           (FUNCTION
            (LAMBDA (X1) (DO-AUTOLOAD '|CF:CONV-LIST| (LIST X1) '(RATAPRX))))) 
(PUT '|CF:TRANSFORM| 'NUMBER-OF-ARGS 1) 
(SAFE-PUTD '|CF:TRANSFORM| 'EXPR
           (FUNCTION
            (LAMBDA (X1) (DO-AUTOLOAD '|CF:TRANSFORM| (LIST X1) '(RATAPRX))))) 
(PUT '|CF:UNIT-NUM| 'NUMBER-OF-ARGS 1) 
(SAFE-PUTD '|CF:UNIT-NUM| 'EXPR
           (FUNCTION
            (LAMBDA (X1) (DO-AUTOLOAD '|CF:UNIT-NUM| (LIST X1) '(RATAPRX))))) 
(PUT '|CF:UNIT-DEN| 'NUMBER-OF-ARGS 1) 
(SAFE-PUTD '|CF:UNIT-DEN| 'EXPR
           (FUNCTION
            (LAMBDA (X1) (DO-AUTOLOAD '|CF:UNIT-DEN| (LIST X1) '(RATAPRX))))) 
(PUT '|CF:REMOVE-FRACS| 'NUMBER-OF-ARGS 1) 
(SAFE-PUTD '|CF:REMOVE-FRACS| 'EXPR
           (FUNCTION
            (LAMBDA (X1)
              (DO-AUTOLOAD '|CF:REMOVE-FRACS| (LIST X1) '(RATAPRX))))) 
(PUT '|CF:REMOVE-CONST| 'NUMBER-OF-ARGS 1) 
(SAFE-PUTD '|CF:REMOVE-CONST| 'EXPR
           (FUNCTION
            (LAMBDA (X1)
              (DO-AUTOLOAD '|CF:REMOVE-CONST| (LIST X1) '(RATAPRX))))) 
(PUT '|CF:EVEN-ODD| 'NUMBER-OF-ARGS 1) 
(SAFE-PUTD '|CF:EVEN-ODD| 'EXPR
           (FUNCTION
            (LAMBDA (X1) (DO-AUTOLOAD '|CF:EVEN-ODD| (LIST X1) '(RATAPRX))))) 
(PUT '|CF:CF:EULER| 'NUMBER-OF-ARGS 1) 
(SAFE-PUTD '|CF:CF:EULER| 'EXPR
           (FUNCTION
            (LAMBDA (X1) (DO-AUTOLOAD '|CF:CF:EULER| (LIST X1) '(RATAPRX))))) 
(PUT 'CF_EXPRESSION 'PSOPFN '|CF:EXPR|) 
(PUT 'CF_CONVERGENT 'PSOPFN '|CF:CONV|) 
(PUT 'CF_CONTINUENTS 'PSOPFN '|CF:COEF-LIST|) 
(PUT 'CF_CONVERGENTS 'PSOPFN '|CF:CONV-LIST|) 
(PUT 'CF_TRANSFORM 'PSOPFN '|CF:TRANSFORM|) 
(PUT 'CF_UNIT_NUMERATORS 'PSOPFN '|CF:UNIT-NUM|) 
(PUT 'CF_UNIT_DENOMINATORS 'PSOPFN '|CF:UNIT-DEN|) 
(PUT 'CF_REMOVE_FRACTIONS 'PSOPFN '|CF:REMOVE-FRACS|) 
(PUT 'CF_REMOVE_CONSTANT 'PSOPFN '|CF:REMOVE-CONST|) 
(PUT 'CF_EVEN_ODD 'PSOPFN '|CF:EVEN-ODD|) 
(PUT 'CF_EULER 'PSOPFN '|CF:EULER|) 
(FLUID '(*TRODE)) 
(SWITCH (LIST 'TRODE)) 
(SWITCH (LIST 'ODESOLVE_EXPLICIT)) 
(SWITCH (LIST 'ODESOLVE_EXPAND)) 
(SWITCH (LIST 'ODESOLVE_FULL)) 
(SWITCH (LIST 'ODESOLVE_IMPLICIT)) 
(SWITCH (LIST 'ODESOLVE_NOINT)) 
(SWITCH (LIST 'NOINT)) 
(SWITCH (LIST 'ODESOLVE_VERBOSE)) 
(SWITCH (LIST 'ODESOLVE_BASIS)) 
(SWITCH (LIST 'ODESOLVE_NOSWAP)) 
(SWITCH (LIST 'ODESOLVE_NORECURSE)) 
(SWITCH (LIST 'ODESOLVE_FAST)) 
(SWITCH (LIST 'ODESOLVE_CHECK)) 
(SWITCH (LIST (LIST 'EQUAL 'NOINTINT 'ON))) 
(SWITCH (LIST (LIST 'EQUAL 'PLUS_OR_MINUS 'OFF))) 
(SWITCH (LIST (LIST 'EQUAL 'ODESOLVE_EQUIDIM_Y 'ON))) 
(SWITCH (LIST 'ODESOLVE_PLUS_OR_MINUS)) 
(SWITCH (LIST (LIST 'EQUAL 'ODESOLVE_DIFF 'ON))) 
(PUT 'ODESOLVE 'PSOPFN 'ODESOLVE-EVAL) 
(PUT 'ODESOLVE-EVAL 'NUMBER-OF-ARGS 1) 
(SAFE-PUTD 'ODESOLVE-EVAL 'EXPR
           (FUNCTION
            (LAMBDA (X1) (DO-AUTOLOAD 'ODESOLVE-EVAL (LIST X1) '(ODESOLVE))))) 
(PUT '*INTERVAL* 'SIMPFN 'SIMPIDEN) 
(NEWTOK '((|.| |.|) *INTERVAL*)) 
(PUT '*INTERVAL* 'PRTCH '| .. |) 
(PRECEDENCE (LIST '*INTERVAL* 'OR)) 
(GLOBAL '(*TRNUMERIC)) 
(SWITCH (LIST 'TRNUMERIC)) 
(PUT 'RDSOLVEEVAL 'NUMBER-OF-ARGS 1) 
(SAFE-PUTD 'RDSOLVEEVAL 'EXPR
           (FUNCTION
            (LAMBDA (X1) (DO-AUTOLOAD 'RDSOLVEEVAL (LIST X1) '(NUMERIC))))) 
(PUT 'NUM_SOLVE 'PSOPFN 'RDSOLVEEVAL) 
(PUT 'RUNGEKUTTAEVAL 'NUMBER-OF-ARGS 1) 
(SAFE-PUTD 'RUNGEKUTTAEVAL 'EXPR
           (FUNCTION
            (LAMBDA (X1) (DO-AUTOLOAD 'RUNGEKUTTAEVAL (LIST X1) '(NUMERIC))))) 
(PUT 'NUM_ODESOLVE 'PSOPFN 'RUNGEKUTTAEVAL) 
(PUT 'BOUNDSEVAL 'NUMBER-OF-ARGS 1) 
(SAFE-PUTD 'BOUNDSEVAL 'EXPR
           (FUNCTION
            (LAMBDA (X1) (DO-AUTOLOAD 'BOUNDSEVAL (LIST X1) '(NUMERIC))))) 
(PUT 'BOUNDSEVALRD 'NUMBER-OF-ARGS 1) 
(SAFE-PUTD 'BOUNDSEVALRD 'EXPR
           (FUNCTION
            (LAMBDA (X1) (DO-AUTOLOAD 'BOUNDSEVALRD (LIST X1) '(NUMERIC))))) 
(PUT 'BOUNDS 'PSOPFN 'BOUNDSEVAL) 
(PUT 'BOUNDS-RD 'PSOPFN 'BOUNDSEVALRD) 
(PUT 'BOUNDS 'NUMERICFN 'BOUNDS-RD) 
(PUT 'RDMINEVAL 'NUMBER-OF-ARGS 1) 
(SAFE-PUTD 'RDMINEVAL 'EXPR
           (FUNCTION
            (LAMBDA (X1) (DO-AUTOLOAD 'RDMINEVAL (LIST X1) '(NUMERIC))))) 
(PUT 'NUM_MIN 'PSOPFN 'RDMINEVAL) 
(PUT 'CHEBYSHEVEVAL 'NUMBER-OF-ARGS 2) 
(SAFE-PUTD 'CHEBYSHEVEVAL 'EXPR
           (FUNCTION
            (LAMBDA (X1 X2)
              (DO-AUTOLOAD 'CHEBYSHEVEVAL (LIST X1 X2) '(NUMERIC))))) 
(PUT 'CHEBYSHEV_FIT 'PSOPFN '(LAMBDA (U) (CHEBYSHEVEVAL U 'FIT))) 
(PUT 'CHEBYSHEV_EVAL 'PSOPFN '(LAMBDA (U) (CHEBYSHEVEVAL U 'EVAL))) 
(PUT 'CHEBYSHEV_INT 'PSOPFN '(LAMBDA (U) (CHEBYSHEVEVAL U 'INT))) 
(PUT 'CHEBYSHEV_DF 'PSOPFN '(LAMBDA (U) (CHEBYSHEVEVAL U 'DF))) 
(PUT 'INTRDEVAL 'NUMBER-OF-ARGS 1) 
(SAFE-PUTD 'INTRDEVAL 'EXPR
           (FUNCTION
            (LAMBDA (X1) (DO-AUTOLOAD 'INTRDEVAL (LIST X1) '(NUMERIC))))) 
(PUT 'NUM_INT 'PSOPFN 'INTRDEVAL) 
(PUT 'FITEVAL 'NUMBER-OF-ARGS 1) 
(SAFE-PUTD 'FITEVAL 'EXPR
           (FUNCTION (LAMBDA (X1) (DO-AUTOLOAD 'FITEVAL (LIST X1) '(NUMERIC))))) 
(PUT 'NUM_FIT 'PSOPFN 'FITEVAL) 
(PUT 'ECONOMISE_SERIES 'NUMBER-OF-ARGS 1) 
(SAFE-PUTD 'ECONOMISE_SERIES 'EXPR
           (FUNCTION
            (LAMBDA (X1)
              (DO-AUTOLOAD 'ECONOMISE_SERIES (LIST X1) '(ECONOMISE))))) 
(PUT 'ECONOMISE_SERIES 'PSOPFN 'ECONOMISE_SERIES) 
(PUT 'MULTIPOINT_PADE 'NUMBER-OF-ARGS 4) 
(SAFE-PUTD 'MULTIPOINT_PADE 'EXPR
           (FUNCTION
            (LAMBDA (X1 X2 X3 X4)
              (DO-AUTOLOAD 'MULTIPOINT_PADE (LIST X1 X2 X3 X4) '(ECONOMISE))))) 
(FLAG '(MULTIPOINT_PADE) 'OPFN) 
(PUT 'PLOT 'PSOPFN
     '(LAMBDA (U) (PROG (*MSG) (LOAD-PACKAGE 'GNUPLOT) (PLOTEVAL U)))) 
(PUT 'GNUPLOT 'PSOPFN
     '(LAMBDA (U) (PROG (*MSG) (LOAD-PACKAGE 'GNUPLOT) (GNUPLOTEVAL U)))) 
(FLUID '(*TRPLOT *PLOTKEEP)) 
(SWITCH
 (LIST (LIST 'EQUAL 'FORCE_GNUPLOT_TERM 'ON) 'TRPLOT 'PLOTKEEP 'SHOW_GRID)) 
(PUT 'PLOTSHOW 'STAT 'ENDSTAT) 
(PUT 'PLOTRESET 'STAT 'ENDSTAT) 
(COND
 ((MEMQ 'PSL LISPSYSTEM*)
  (PROGN
   (PUT 'PRETTYPRINT 'NUMBER-OF-ARGS 1)
   (SAFE-PUTD 'PRETTYPRINT 'EXPR
              (FUNCTION
               (LAMBDA (X1) (DO-AUTOLOAD 'PRETTYPRINT (LIST X1) '(PRETTY)))))))) 
(PUT 'RPRINT 'NUMBER-OF-ARGS 1) 
(SAFE-PUTD 'RPRINT 'EXPR
           (FUNCTION (LAMBDA (X1) (DO-AUTOLOAD 'RPRINT (LIST X1) '(RPRINT))))) 
(SWITCH
 (LIST (LIST 'EQUAL 'ALLBRANCH 'ON) (LIST 'EQUAL 'ARBVARS 'ON) 'FULLROOTS
       'MULTIPLICITIES (LIST 'EQUAL 'SOLVESINGULAR 'ON))) 
(SWITCH (LIST (LIST 'EQUAL 'TRIGFORM 'ON) (LIST 'EQUAL 'TRNONLNR 'OFF))) 
(PUT 'SOLVEEVAL 'NUMBER-OF-ARGS 1) 
(SAFE-PUTD 'SOLVEEVAL 'EXPR
           (FUNCTION (LAMBDA (X1) (DO-AUTOLOAD 'SOLVEEVAL (LIST X1) '(SOLVE))))) 
(PUT 'SOLVE0 'NUMBER-OF-ARGS 2) 
(SAFE-PUTD 'SOLVE0 'EXPR
           (FUNCTION
            (LAMBDA (X1 X2) (DO-AUTOLOAD 'SOLVE0 (LIST X1 X2) '(SOLVE))))) 
(PUT 'SOLVE 'PSOPFN 'SOLVEEVAL) 
(SWITCH
 (LIST (LIST 'EQUAL 'ALLBRANCH 'ON) (LIST 'EQUAL 'ARBVARS 'ON) 'FULLROOTS
       'MULTIPLICITIES 'NONLNR (LIST 'EQUAL 'SOLVESINGULAR 'ON))) 
(PUT 'ARBINT 'SIMPFN 'SIMPIDEN) 
(PUT 'NONLNR 'SIMPFG '((NIL (LOAD-PACKAGE 'SOLVE)))) 
(PUT 'ALLBRANCH 'SIMPFG '((NIL (LOAD-PACKAGE 'SOLVE)))) 
(PUT 'SOLVESINGULAR 'SIMPFG '((NIL (LOAD-PACKAGE 'SOLVE)))) 
(PUT 'SIMP-ARBCOMPLEX 'NUMBER-OF-ARGS 1) 
(SAFE-PUTD 'SIMP-ARBCOMPLEX 'EXPR
           (FUNCTION
            (LAMBDA (X1) (DO-AUTOLOAD 'SIMP-ARBCOMPLEX (LIST X1) '(SOLVE))))) 
(DEFLIST '((ARBCOMPLEX SIMP-ARBCOMPLEX)) 'SIMPFN) 
(GLOBAL '(*TRLININEQ *TRLININEQINT *PRLININEQ)) 
(SWITCH (LIST 'TRLININEQ 'PRLININEQ 'TRLININEQINT)) 
(PUT 'INEQSEVAL* 'NUMBER-OF-ARGS 1) 
(SAFE-PUTD 'INEQSEVAL* 'EXPR
           (FUNCTION (LAMBDA (X1) (DO-AUTOLOAD 'INEQSEVAL* (LIST X1) '(INEQ))))) 
(PUT 'INEQ_SOLVE 'PSOPFN 'INEQSEVAL*) 
(PUT 'MSOLVE 'NUMBER-OF-ARGS 1) 
(SAFE-PUTD 'MSOLVE 'EXPR
           (FUNCTION (LAMBDA (X1) (DO-AUTOLOAD 'MSOLVE (LIST X1) '(MODSR))))) 
(PUT 'MODROOTS0 'NUMBER-OF-ARGS 2) 
(SAFE-PUTD 'MODROOTS0 'EXPR
           (FUNCTION
            (LAMBDA (X1 X2) (DO-AUTOLOAD 'MODROOTS0 (LIST X1 X2) '(MODSR))))) 
(PUT 'MSOLVESYS 'NUMBER-OF-ARGS 3) 
(SAFE-PUTD 'MSOLVESYS 'EXPR
           (FUNCTION
            (LAMBDA (X1 X2 X3)
              (DO-AUTOLOAD 'MSOLVESYS (LIST X1 X2 X3) '(MODSR))))) 
(PUT 'M_SOLVE 'PSOPFN 'MSOLVE) 
(PUT 'M_ROOTS 'PSOPFN
     (FUNCTION
      (LAMBDA (U)
        (CONS 'LIST (MODROOTS0 (CAR (SIMP (CAR U))) (REVAL1 (CADR U) T)))))) 
(SWITCH (LIST (LIST 'EQUAL 'MULTIPLICITIES 'OFF) (LIST 'EQUAL 'TRSOLVE 'OFF))) 
(PUT 'I_SOLVE-EVAL 'NUMBER-OF-ARGS 1) 
(SAFE-PUTD 'I_SOLVE-EVAL 'EXPR
           (FUNCTION
            (LAMBDA (X1) (DO-AUTOLOAD 'I_SOLVE-EVAL (LIST X1) '(RSOLVE))))) 
(PUT 'R_SOLVE-EVAL 'NUMBER-OF-ARGS 1) 
(SAFE-PUTD 'R_SOLVE-EVAL 'EXPR
           (FUNCTION
            (LAMBDA (X1) (DO-AUTOLOAD 'R_SOLVE-EVAL (LIST X1) '(RSOLVE))))) 
(PUT 'I_SOLVE 'PSOPFN 'I_SOLVE-EVAL) 
(PUT 'R_SOLVE 'PSOPFN 'R_SOLVE-EVAL) 
(SWITCH
 (LIST (LIST 'EQUAL 'TRROOT 'OFF) (LIST 'EQUAL 'ROOTMSG 'OFF)
       (LIST 'EQUAL 'MULTIROOT 'ON) (LIST 'EQUAL 'NOSTURM 'OFF)
       (LIST 'EQUAL 'RATROOT 'OFF))) 
(SWITCH (LIST (LIST 'EQUAL 'FULLPRECISION 'OFF) (LIST 'EQUAL 'COMPXROOTS 'OFF))) 
(PUT 'ROOTS 'NUMBER-OF-ARGS 1) 
(SAFE-PUTD 'ROOTS 'EXPR
           (FUNCTION (LAMBDA (X1) (DO-AUTOLOAD 'ROOTS (LIST X1) '(ROOTS))))) 
(PUT 'GFNEWT 'NUMBER-OF-ARGS 1) 
(SAFE-PUTD 'GFNEWT 'EXPR
           (FUNCTION (LAMBDA (X1) (DO-AUTOLOAD 'GFNEWT (LIST X1) '(ROOTS))))) 
(PUT 'GFROOT 'NUMBER-OF-ARGS 1) 
(SAFE-PUTD 'GFROOT 'EXPR
           (FUNCTION (LAMBDA (X1) (DO-AUTOLOAD 'GFROOT (LIST X1) '(ROOTS))))) 
(PUT 'ROOT_VAL 'NUMBER-OF-ARGS 1) 
(SAFE-PUTD 'ROOT_VAL 'EXPR
           (FUNCTION (LAMBDA (X1) (DO-AUTOLOAD 'ROOT_VAL (LIST X1) '(ROOTS))))) 
(PUT 'FIRSTROOT 'NUMBER-OF-ARGS 1) 
(SAFE-PUTD 'FIRSTROOT 'EXPR
           (FUNCTION (LAMBDA (X1) (DO-AUTOLOAD 'FIRSTROOT (LIST X1) '(ROOTS))))) 
(PUT 'RLROOTNO 'NUMBER-OF-ARGS 1) 
(SAFE-PUTD 'RLROOTNO 'EXPR
           (FUNCTION (LAMBDA (X1) (DO-AUTOLOAD 'RLROOTNO (LIST X1) '(ROOTS2))))) 
(PUT 'REALROOTS 'NUMBER-OF-ARGS 1) 
(SAFE-PUTD 'REALROOTS 'EXPR
           (FUNCTION
            (LAMBDA (X1) (DO-AUTOLOAD 'REALROOTS (LIST X1) '(ROOTS2))))) 
(PUT 'ISOLATER 'NUMBER-OF-ARGS 1) 
(SAFE-PUTD 'ISOLATER 'EXPR
           (FUNCTION (LAMBDA (X1) (DO-AUTOLOAD 'ISOLATER (LIST X1) '(ROOTS2))))) 
(PUT 'NEARESTROOT 'NUMBER-OF-ARGS 1) 
(SAFE-PUTD 'NEARESTROOT 'EXPR
           (FUNCTION
            (LAMBDA (X1) (DO-AUTOLOAD 'NEARESTROOT (LIST X1) '(ROOTS2))))) 
(PUT 'STURM0 'NUMBER-OF-ARGS 1) 
(SAFE-PUTD 'STURM0 'EXPR
           (FUNCTION (LAMBDA (X1) (DO-AUTOLOAD 'STURM0 (LIST X1) '(ROOTS2))))) 
(PUT 'MULTROOT1 'NUMBER-OF-ARGS 1) 
(SAFE-PUTD 'MULTROOT1 'EXPR
           (FUNCTION
            (LAMBDA (X1) (DO-AUTOLOAD 'MULTROOT1 (LIST X1) '(ROOTS2))))) 
(PROG (N)
  (SETQ N
          '(ROOTS RLROOTNO REALROOTS ISOLATER FIRSTROOT NEARESTROOT GFNEWT
                  GFROOT ROOT_VAL))
 LAB
  (COND ((NULL N) (RETURN NIL)))
  ((LAMBDA (N) (PUT N 'PSOPFN N)) (CAR N))
  (SETQ N (CDR N))
  (GO LAB)) 
(PUT 'STURM 'PSOPFN 'STURM0) 
(PUT 'MULTROOT 'PSOPFN 'MULTROOT1) 
(PROG (C)
  (SETQ C '(LIMIT LIMIT+ LIMIT-))
 LAB
  (COND ((NULL C) (RETURN NIL)))
  ((LAMBDA (C)
     (PROGN
      (PUT C 'SIMPFN 'SIMPLIMIT)
      (PUT C 'NUMBER-OF-ARGS 3)
      (FLAG (LIST C) 'FULL)))
   (CAR C))
  (SETQ C (CDR C))
  (GO LAB)) 
(SWITCH (LIST 'USETAYLOR 'TRLIMIT)) 
(PUT 'SIMPLIMIT 'NUMBER-OF-ARGS 1) 
(SAFE-PUTD 'SIMPLIMIT 'EXPR
           (FUNCTION
            (LAMBDA (X1) (DO-AUTOLOAD 'SIMPLIMIT (LIST X1) '(LIMITS))))) 
(GLOBAL '(*LHYP *LMON *LTRIG)) 
(SWITCH (LIST 'LHYP 'LMON 'LTRIG)) 
(PUT 'SIMPLAPLACE 'NUMBER-OF-ARGS 1) 
(SAFE-PUTD 'SIMPLAPLACE 'EXPR
           (FUNCTION
            (LAMBDA (X1) (DO-AUTOLOAD 'SIMPLAPLACE (LIST X1) '(LAPLACE))))) 
(PUT 'LAPLACE 'SIMPFN 'SIMPLAPLACE) 
(PUT 'SIMPINVLAP 'NUMBER-OF-ARGS 1) 
(SAFE-PUTD 'SIMPINVLAP 'EXPR
           (FUNCTION
            (LAMBDA (X1) (DO-AUTOLOAD 'SIMPINVLAP (LIST X1) '(LAPLACE))))) 
(PUT 'INVLAP 'SIMPFN 'SIMPINVLAP) 
(FLAG '(PF) 'OPFN) 
(FLAG '(PF) 'NOVAL) 
(PUT 'PF 'NUMBER-OF-ARGS 2) 
(SAFE-PUTD 'PF 'EXPR
           (FUNCTION (LAMBDA (X1 X2) (DO-AUTOLOAD 'PF (LIST X1 X2) '(PF))))) 
(REMPROP 'GENERIC_FUNCTION 'STAT) 
(REMPROP 'DFP_COMMUTE 'STAT) 
(PUT 'SIMPCOMPACT 'NUMBER-OF-ARGS 1) 
(SAFE-PUTD 'SIMPCOMPACT 'EXPR
           (FUNCTION
            (LAMBDA (X1) (DO-AUTOLOAD 'SIMPCOMPACT (LIST X1) '(COMPACT))))) 
(PUT 'COMPACT 'SIMPFN 'SIMPCOMPACT) 
(PUT 'SIMPCHANGEVAR 'NUMBER-OF-ARGS 1) 
(SAFE-PUTD 'SIMPCHANGEVAR 'EXPR
           (FUNCTION
            (LAMBDA (X1) (DO-AUTOLOAD 'SIMPCHANGEVAR (LIST X1) '(CHANGEVR))))) 
(PUT 'CHANGEVAR 'SIMPFN 'SIMPCHANGEVAR) 
(PUT 'DFP 'SIMPFN 'SIMPDFP) 
(PUT 'SIMPDFP 'NUMBER-OF-ARGS 1) 
(SAFE-PUTD 'SIMPDFP 'EXPR
           (FUNCTION (LAMBDA (X1) (DO-AUTOLOAD 'SIMPDFP (LIST X1) '(DFPART))))) 
(PUT 'GENERIC_FUNCTION 'NUMBER-OF-ARGS 1) 
(SAFE-PUTD 'GENERIC_FUNCTION 'EXPR
           (FUNCTION
            (LAMBDA (X1) (DO-AUTOLOAD 'GENERIC_FUNCTION (LIST X1) '(DFPART))))) 
(PUT 'GENERIC_FUNCTION 'STAT 'RLIS) 
(PUT 'DFP_COMMUTE 'NUMBER-OF-ARGS 1) 
(SAFE-PUTD 'DFP_COMMUTE 'EXPR
           (FUNCTION
            (LAMBDA (X1) (DO-AUTOLOAD 'DFP_COMMUTE (LIST X1) '(DFPART))))) 
(PUT 'DFP_COMMUTE 'STAT 'RLIS) 
(PUT 'FROBENIUS 'NUMBER-OF-ARGS 1) 
(SAFE-PUTD 'FROBENIUS 'EXPR
           (FUNCTION
            (LAMBDA (X1) (DO-AUTOLOAD 'FROBENIUS (LIST X1) '(NORMFORM))))) 
(PUT 'COMPANION 'NUMBER-OF-ARGS 2) 
(SAFE-PUTD 'COMPANION 'EXPR
           (FUNCTION
            (LAMBDA (X1 X2) (DO-AUTOLOAD 'COMPANION (LIST X1 X2) '(NORMFORM))))) 
(PUT 'DIAG 'NUMBER-OF-ARGS 1) 
(SAFE-PUTD 'DIAG 'EXPR
           (FUNCTION (LAMBDA (X1) (DO-AUTOLOAD 'DIAG (LIST X1) '(NORMFORM))))) 
(PUT 'JORDAN 'NUMBER-OF-ARGS 1) 
(SAFE-PUTD 'JORDAN 'EXPR
           (FUNCTION (LAMBDA (X1) (DO-AUTOLOAD 'JORDAN (LIST X1) '(NORMFORM))))) 
(PUT 'JORDANSYMBOLIC 'NUMBER-OF-ARGS 1) 
(SAFE-PUTD 'JORDANSYMBOLIC 'EXPR
           (FUNCTION
            (LAMBDA (X1) (DO-AUTOLOAD 'JORDANSYMBOLIC (LIST X1) '(NORMFORM))))) 
(PUT 'JORDANBLOCK 'NUMBER-OF-ARGS 2) 
(SAFE-PUTD 'JORDANBLOCK 'EXPR
           (FUNCTION
            (LAMBDA (X1 X2)
              (DO-AUTOLOAD 'JORDANBLOCK (LIST X1 X2) '(NORMFORM))))) 
(PUT 'SUBMATRIX 'NUMBER-OF-ARGS 3) 
(SAFE-PUTD 'SUBMATRIX 'EXPR
           (FUNCTION
            (LAMBDA (X1 X2 X3)
              (DO-AUTOLOAD 'SUBMATRIX (LIST X1 X2 X3) '(NORMFORM))))) 
(PUT 'RATJORDAN 'NUMBER-OF-ARGS 1) 
(SAFE-PUTD 'RATJORDAN 'EXPR
           (FUNCTION
            (LAMBDA (X1) (DO-AUTOLOAD 'RATJORDAN (LIST X1) '(NORMFORM))))) 
(PUT 'SMITHEX_INT 'NUMBER-OF-ARGS 1) 
(SAFE-PUTD 'SMITHEX_INT 'EXPR
           (FUNCTION
            (LAMBDA (X1) (DO-AUTOLOAD 'SMITHEX_INT (LIST X1) '(NORMFORM))))) 
(PUT 'SMITHEX 'NUMBER-OF-ARGS 2) 
(SAFE-PUTD 'SMITHEX 'EXPR
           (FUNCTION
            (LAMBDA (X1 X2) (DO-AUTOLOAD 'SMITHEX (LIST X1 X2) '(NORMFORM))))) 
(FLAG
 '(FROBENIUS COMPANION JORDAN JORDANSYMBOLIC JORDANBLOCK SUBMATRIX SETMAT
             GETMAT MKMATRIX LETMTR SETNEST RATJORDAN DEG_SORT SMITHEX_INT
             SMITHEX)
 'OPFN) 
(PUT 'RANDPOLY 'NUMBER-OF-ARGS 1) 
(SAFE-PUTD 'RANDPOLY 'EXPR
           (FUNCTION
            (LAMBDA (X1) (DO-AUTOLOAD 'RANDPOLY (LIST X1) '(RANDPOLY))))) 
(PUT 'RAND 'NUMBER-OF-ARGS 1) 
(SAFE-PUTD 'RAND 'EXPR
           (FUNCTION (LAMBDA (X1) (DO-AUTOLOAD 'RAND (LIST X1) '(RANDPOLY))))) 
(PUT 'RANDPOLY 'SIMPFN 'RANDPOLY) 
(FLAG '(RANDPOLY) 'LISTARGP) 
(PUT 'RAND 'PSOPFN 'RAND) 
(SWITCH (LIST 'TRSUM)) 
(SWITCH (LIST 'ZEILBERG)) 
(PUT 'SIMP-SUM 'NUMBER-OF-ARGS 1) 
(SAFE-PUTD 'SIMP-SUM 'EXPR
           (FUNCTION (LAMBDA (X1) (DO-AUTOLOAD 'SIMP-SUM (LIST X1) '(SUM))))) 
(PUT 'SIMP-SUM0 'NUMBER-OF-ARGS 2) 
(SAFE-PUTD 'SIMP-SUM0 'EXPR
           (FUNCTION
            (LAMBDA (X1 X2) (DO-AUTOLOAD 'SIMP-SUM0 (LIST X1 X2) '(SUM))))) 
(PUT 'SUM 'SIMPFN 'SIMP-SUM) 
(PUT 'SIMP-PROD 'NUMBER-OF-ARGS 1) 
(SAFE-PUTD 'SIMP-PROD 'EXPR
           (FUNCTION (LAMBDA (X1) (DO-AUTOLOAD 'SIMP-PROD (LIST X1) '(SUM))))) 
(PUT 'PROD 'SIMPFN 'SIMP-PROD) 
(SWITCH (LIST 'ZEILBERG)) 
(SWITCH
 (LIST (LIST 'EQUAL 'ZB_FACTOR 'ON) 'ZB_TIMER 'ZB_PROOF 'ZB_TRACE
       'ZB_INHOMOGENEOUS)) 
(PUT 'GOSPER-EVAL 'NUMBER-OF-ARGS 1) 
(SAFE-PUTD 'GOSPER-EVAL 'EXPR
           (FUNCTION
            (LAMBDA (X1) (DO-AUTOLOAD 'GOSPER-EVAL (LIST X1) '(ZEILBERG))))) 
(PUT 'GOSPER 'PSOPFN 'GOSPER-EVAL) 
(PUT 'EXTENDED_GOSPER-EVAL 'NUMBER-OF-ARGS 1) 
(SAFE-PUTD 'EXTENDED_GOSPER-EVAL 'EXPR
           (FUNCTION
            (LAMBDA (X1)
              (DO-AUTOLOAD 'EXTENDED_GOSPER-EVAL (LIST X1) '(ZEILBERG))))) 
(PUT 'EXTENDED_GOSPER 'PSOPFN 'EXTENDED_GOSPER-EVAL) 
(PUT 'SUMRECURSION-EVAL 'NUMBER-OF-ARGS 1) 
(SAFE-PUTD 'SUMRECURSION-EVAL 'EXPR
           (FUNCTION
            (LAMBDA (X1)
              (DO-AUTOLOAD 'SUMRECURSION-EVAL (LIST X1) '(ZEILBERG))))) 
(PUT 'SUMRECURSION 'PSOPFN 'SUMRECURSION-EVAL) 
(PUT 'EXTENDED_SUMRECURSION-EVAL 'NUMBER-OF-ARGS 1) 
(SAFE-PUTD 'EXTENDED_SUMRECURSION-EVAL 'EXPR
           (FUNCTION
            (LAMBDA (X1)
              (DO-AUTOLOAD 'EXTENDED_SUMRECURSION-EVAL (LIST X1) '(ZEILBERG))))) 
(PUT 'EXTENDED_SUMRECURSION 'PSOPFN 'SUMRECURSION-EVAL) 
(PUT 'EXTENDED_HYPERRECURSION-EVAL 'NUMBER-OF-ARGS 1) 
(SAFE-PUTD 'EXTENDED_HYPERRECURSION-EVAL 'EXPR
           (FUNCTION
            (LAMBDA (X1)
              (DO-AUTOLOAD 'EXTENDED_HYPERRECURSION-EVAL (LIST X1)
                           '(ZEILBERG))))) 
(PUT 'EXTENDED_HYPERRECURSION 'PSOPFN 'EXTENDED_HYPERRECURSION-EVAL) 
(PUT 'HYPERRECURSION-EVAL 'NUMBER-OF-ARGS 1) 
(SAFE-PUTD 'HYPERRECURSION-EVAL 'EXPR
           (FUNCTION
            (LAMBDA (X1)
              (DO-AUTOLOAD 'HYPERRECURSION-EVAL (LIST X1) '(ZEILBERG))))) 
(PUT 'HYPERRECURSION 'PSOPFN 'HYPERRECURSION-EVAL) 
(PUT 'HYPERTERM 'NUMBER-OF-ARGS 4) 
(SAFE-PUTD 'HYPERTERM 'EXPR
           (FUNCTION
            (LAMBDA (X1 X2 X3 X4)
              (DO-AUTOLOAD 'HYPERTERM (LIST X1 X2 X3 X4) '(ZEILBERG))))) 
(PUT 'HYPERSUM-EVAL 'NUMBER-OF-ARGS 1) 
(SAFE-PUTD 'HYPERSUM-EVAL 'EXPR
           (FUNCTION
            (LAMBDA (X1) (DO-AUTOLOAD 'HYPERSUM-EVAL (LIST X1) '(ZEILBERG))))) 
(PUT 'HYPERSUM 'PSOPFN 'HYPERSUM-EVAL) 
(PUT 'SUMTOHYPER 'NUMBER-OF-ARGS 2) 
(SAFE-PUTD 'SUMTOHYPER 'EXPR
           (FUNCTION
            (LAMBDA (X1 X2)
              (DO-AUTOLOAD 'SUMTOHYPER (LIST X1 X2) '(ZEILBERG))))) 
(PUT 'SIMPLIFY_GAMMA 'NUMBER-OF-ARGS 1) 
(SAFE-PUTD 'SIMPLIFY_GAMMA 'EXPR
           (FUNCTION
            (LAMBDA (X1) (DO-AUTOLOAD 'SIMPLIFY_GAMMA (LIST X1) '(ZEILBERG))))) 
(PUT 'SIMPLIFY_GAMMA2 'NUMBER-OF-ARGS 1) 
(SAFE-PUTD 'SIMPLIFY_GAMMA2 'EXPR
           (FUNCTION
            (LAMBDA (X1) (DO-AUTOLOAD 'SIMPLIFY_GAMMA2 (LIST X1) '(ZEILBERG))))) 
(PUT 'SIMPLIFY_GAMMAN 'NUMBER-OF-ARGS 2) 
(SAFE-PUTD 'SIMPLIFY_GAMMAN 'EXPR
           (FUNCTION
            (LAMBDA (X1 X2)
              (DO-AUTOLOAD 'SIMPLIFY_GAMMAN (LIST X1 X2) '(ZEILBERG))))) 
(PUT 'SIMPLIFY_COMBINATORIAL 'NUMBER-OF-ARGS 1) 
(SAFE-PUTD 'SIMPLIFY_COMBINATORIAL 'EXPR
           (FUNCTION
            (LAMBDA (X1)
              (DO-AUTOLOAD 'SIMPLIFY_COMBINATORIAL (LIST X1) '(ZEILBERG))))) 
(FLAG
 '(HYPERTERM SUMTOHYPER SIMPLIFY_GAMMA SIMPLIFY_COMBINATORIAL SIMPLIFY_GAMMA2
             SIMPLIFY_GAMMAN)
 'OPFN) 
(DEFLIST '((SUMM SIMPIDEN) (ZB_F SIMPIDEN) (ZB_SIGMA SIMPIDEN)) 'SIMPFN) 
(PUT 'ZTRANS 'NUMBER-OF-ARGS 3) 
(SAFE-PUTD 'ZTRANS 'EXPR
           (FUNCTION
            (LAMBDA (X1 X2 X3)
              (DO-AUTOLOAD 'ZTRANS (LIST X1 X2 X3) '(ZTRANS))))) 
(FLAG '(INVZTRANS) 'FULL) 
(PUT 'INVZTRANS 'SIMPFN '(LAMBDA (X) (AUTOLOAD_OPERATOR* 'INVZTRANS 'ZTRANS X))) 
(FLAG '(ZTRANS) 'OPFN) 
(SWITCH
 (LIST (LIST 'EQUAL 'TAYLORAUTOCOMBINE 'ON)
       (LIST 'EQUAL 'TAYLORAUTOEXPAND 'OFF)
       (LIST 'EQUAL 'TAYLORKEEPORIGINAL 'OFF)
       (LIST 'EQUAL 'TAYLORPRINTORDER 'ON) (LIST 'EQUAL 'TRTAYLOR 'OFF)
       'VERBOSELOAD)) 
(PUT 'TAYLOR 'SIMPFN 'SIMPTAYLOR) 
(PUT 'SIMPTAYLOR 'NUMBER-OF-ARGS 1) 
(SAFE-PUTD 'SIMPTAYLOR 'EXPR
           (FUNCTION
            (LAMBDA (X1) (DO-AUTOLOAD 'SIMPTAYLOR (LIST X1) '(TAYLOR))))) 
(PUT 'IMPLICIT_TAYLOR 'NUMBER-OF-ARGS 6) 
(SAFE-PUTD 'IMPLICIT_TAYLOR 'EXPR
           (FUNCTION
            (LAMBDA (X1 X2 X3 X4 X5 X6)
              (DO-AUTOLOAD 'IMPLICIT_TAYLOR (LIST X1 X2 X3 X4 X5 X6)
                           '(TAYLOR))))) 
(PUT 'INVERSE_TAYLOR 'NUMBER-OF-ARGS 5) 
(SAFE-PUTD 'INVERSE_TAYLOR 'EXPR
           (FUNCTION
            (LAMBDA (X1 X2 X3 X4 X5)
              (DO-AUTOLOAD 'INVERSE_TAYLOR (LIST X1 X2 X3 X4 X5) '(TAYLOR))))) 
(FLAG '(IMPLICIT_TAYLOR INVERSE_TAYLOR) 'OPFN) 
(SWITCH (LIST (LIST 'EQUAL 'PSPRINTORDER 'ON))) 
(PUT 'PS 'SIMPFN 'SIMPPS) 
(PUT 'SIMPPS 'NUMBER-OF-ARGS 1) 
(SAFE-PUTD 'SIMPPS 'EXPR
           (FUNCTION (LAMBDA (X1) (DO-AUTOLOAD 'SIMPPS (LIST X1) '(TPS))))) 
(PUT 'PSTAYLOR 'SIMPFN 'SIMPPSTAYLOR) 
(PUT 'SIMPPSTAYLOR 'NUMBER-OF-ARGS 1) 
(SAFE-PUTD 'SIMPPSTAYLOR 'EXPR
           (FUNCTION
            (LAMBDA (X1) (DO-AUTOLOAD 'SIMPPSTAYLOR (LIST X1) '(TPS))))) 
(PUT 'PSEXPLIM 'SIMPFN 'SIMPPSEXPLIM) 
(PUT 'SIMPPSEXPLIM 'NUMBER-OF-ARGS 1) 
(SAFE-PUTD 'SIMPPSEXPLIM 'EXPR
           (FUNCTION
            (LAMBDA (X1) (DO-AUTOLOAD 'SIMPPSEXPLIM (LIST X1) '(TPS))))) 
(PUT 'PSSUM 'SIMPFN 'SIMPPSSUM) 
(PUT 'SIMPPSSUM 'NUMBER-OF-ARGS 1) 
(SAFE-PUTD 'SIMPPSSUM 'EXPR
           (FUNCTION (LAMBDA (X1) (DO-AUTOLOAD 'SIMPPSSUM (LIST X1) '(TPS))))) 
(PUT 'TRIGSIMP 'PSOPFN 'TRIGSIMP*) 
(PUT 'TRIGSIMP* 'NUMBER-OF-ARGS 1) 
(SAFE-PUTD 'TRIGSIMP* 'EXPR
           (FUNCTION
            (LAMBDA (X1) (DO-AUTOLOAD 'TRIGSIMP* (LIST X1) '(TRIGSIMP))))) 
(PUT 'TRIGFACTORIZE 'NUMBER-OF-ARGS 2) 
(SAFE-PUTD 'TRIGFACTORIZE 'EXPR
           (FUNCTION
            (LAMBDA (X1 X2)
              (DO-AUTOLOAD 'TRIGFACTORIZE (LIST X1 X2) '(TRIGSIMP))))) 
(PUT 'TRIGGCD 'NUMBER-OF-ARGS 3) 
(SAFE-PUTD 'TRIGGCD 'EXPR
           (FUNCTION
            (LAMBDA (X1 X2 X3)
              (DO-AUTOLOAD 'TRIGGCD (LIST X1 X2 X3) '(TRIGSIMP))))) 
(FLAG '(TRIGFACTORIZE TRIGGCD) 'OPFN) 
(FLAG '(|COMPUTE:DILOG| |COMPUTE:LERCH_PHI|) 'OPFN) 
(PUT '|COMPUTE:DILOG| 'NUMBER-OF-ARGS 1) 
(SAFE-PUTD '|COMPUTE:DILOG| 'EXPR
           (FUNCTION
            (LAMBDA (X1) (DO-AUTOLOAD '|COMPUTE:DILOG| (LIST X1) '(SPECFN))))) 
(PUT '|COMPUTE:LERCH_PHI| 'NUMBER-OF-ARGS 3) 
(SAFE-PUTD '|COMPUTE:LERCH_PHI| 'EXPR
           (FUNCTION
            (LAMBDA (X1 X2 X3)
              (DO-AUTOLOAD '|COMPUTE:LERCH_PHI| (LIST X1 X2 X3) '(SPECFN))))) 
(FLAG '(|COMPUTE:KHINCHIN1| BERNOULLI*CALC |EULER:AUX|) 'OPFN) 
(PUT '|COMPUTE:KHINCHIN1| 'NUMBER-OF-ARGS 0) 
(SAFE-PUTD '|COMPUTE:KHINCHIN1| 'EXPR
           (FUNCTION
            (LAMBDA () (DO-AUTOLOAD '|COMPUTE:KHINCHIN1| (LIST) '(SPECFN))))) 
(PUT 'BERNOULLI*CALC 'NUMBER-OF-ARGS 1) 
(SAFE-PUTD 'BERNOULLI*CALC 'EXPR
           (FUNCTION
            (LAMBDA (X1) (DO-AUTOLOAD 'BERNOULLI*CALC (LIST X1) '(SPECFN))))) 
(PUT '|EULER:AUX| 'NUMBER-OF-ARGS 1) 
(SAFE-PUTD '|EULER:AUX| 'EXPR
           (FUNCTION
            (LAMBDA (X1) (DO-AUTOLOAD '|EULER:AUX| (LIST X1) '(SPECFN))))) 
(PUT 'RD_EULER* 'NUMBER-OF-ARGS 0) 
(SAFE-PUTD 'RD_EULER* 'EXPR
           (FUNCTION
            (LAMBDA () (DO-AUTOLOAD 'RD_EULER* (LIST) '(SPECFN SFGAMMA))))) 
(PUT 'CR_EULER* 'NUMBER-OF-ARGS 0) 
(SAFE-PUTD 'CR_EULER* 'EXPR
           (FUNCTION
            (LAMBDA () (DO-AUTOLOAD 'CR_EULER* (LIST) '(SPECFN SFGAMMA))))) 
(PUT 'RD_CATALAN* 'NUMBER-OF-ARGS 0) 
(SAFE-PUTD 'RD_CATALAN* 'EXPR
           (FUNCTION (LAMBDA () (DO-AUTOLOAD 'RD_CATALAN* (LIST) '(SPECFN))))) 
(PUT 'CR_CATALAN* 'NUMBER-OF-ARGS 0) 
(SAFE-PUTD 'CR_CATALAN* 'EXPR
           (FUNCTION (LAMBDA () (DO-AUTOLOAD 'CR_CATALAN* (LIST) '(SPECFN))))) 
(FLAG '(BESSELJ) 'FULL) 
(PUT 'BESSELJ 'SIMPFN
     '(LAMBDA (X) (AUTOLOAD_OPERATOR* 'BESSELJ '(SPECFN SPECBESS) X))) 
(FLAG '(BESSELY) 'FULL) 
(PUT 'BESSELY 'SIMPFN
     '(LAMBDA (X) (AUTOLOAD_OPERATOR* 'BESSELY '(SPECFN SPECBESS) X))) 
(FLAG '(BESSELI) 'FULL) 
(PUT 'BESSELI 'SIMPFN
     '(LAMBDA (X) (AUTOLOAD_OPERATOR* 'BESSELI '(SPECFN SPECBESS) X))) 
(FLAG '(BESSELK) 'FULL) 
(PUT 'BESSELK 'SIMPFN
     '(LAMBDA (X) (AUTOLOAD_OPERATOR* 'BESSELK '(SPECFN SPECBESS) X))) 
(FLAG '(HANKEL1) 'FULL) 
(PUT 'HANKEL1 'SIMPFN
     '(LAMBDA (X) (AUTOLOAD_OPERATOR* 'HANKEL1 '(SPECFN SPECBESS) X))) 
(FLAG '(HANKEL2) 'FULL) 
(PUT 'HANKEL2 'SIMPFN '(LAMBDA (X) (AUTOLOAD_OPERATOR* 'HANKEL2 'SPECBESS X))) 
(FLAG '(KUMMERM) 'FULL) 
(PUT 'KUMMERM 'SIMPFN '(LAMBDA (X) (AUTOLOAD_OPERATOR* 'KUMMERM 'SPECBESS X))) 
(FLAG '(KUMMERU) 'FULL) 
(PUT 'KUMMERU 'SIMPFN '(LAMBDA (X) (AUTOLOAD_OPERATOR* 'KUMMERU 'SPECBESS X))) 
(FLAG '(STRUVEH) 'FULL) 
(PUT 'STRUVEH 'SIMPFN '(LAMBDA (X) (AUTOLOAD_OPERATOR* 'STRUVEH 'SPECBESS X))) 
(FLAG '(STRUVEL) 'FULL) 
(PUT 'STRUVEL 'SIMPFN '(LAMBDA (X) (AUTOLOAD_OPERATOR* 'STRUVEL 'SPECBESS X))) 
(FLAG '(LOMMEL1) 'FULL) 
(PUT 'LOMMEL1 'SIMPFN '(LAMBDA (X) (AUTOLOAD_OPERATOR* 'LOMMEL1 'SPECBESS X))) 
(FLAG '(LOMMEL2) 'FULL) 
(PUT 'LOMMEL2 'SIMPFN '(LAMBDA (X) (AUTOLOAD_OPERATOR* 'LOMMEL2 'SPECBESS X))) 
(FLAG '(WHITTAKERM) 'FULL) 
(PUT 'WHITTAKERM 'SIMPFN
     '(LAMBDA (X) (AUTOLOAD_OPERATOR* 'WHITTAKERM 'SPECBESS X))) 
(FLAG '(WHITTAKERW) 'FULL) 
(PUT 'WHITTAKERW 'SIMPFN
     '(LAMBDA (X) (AUTOLOAD_OPERATOR* 'WHITTAKERW 'SPECBESS X))) 
(FLAG '(AIRY_AI) 'FULL) 
(PUT 'AIRY_AI 'SIMPFN '(LAMBDA (X) (AUTOLOAD_OPERATOR* 'AIRY_AI 'SPECBESS X))) 
(FLAG '(AIRY_BI) 'FULL) 
(PUT 'AIRY_BI 'SIMPFN '(LAMBDA (X) (AUTOLOAD_OPERATOR* 'AIRY_BI 'SPECBESS X))) 
(FLAG '(AIRY_AIPRIME) 'FULL) 
(PUT 'AIRY_AIPRIME 'SIMPFN
     '(LAMBDA (X) (AUTOLOAD_OPERATOR* 'AIRY_AIPRIME 'SPECBESS X))) 
(FLAG '(AIRY_BIPRIME) 'FULL) 
(PUT 'AIRY_BIPRIME 'SIMPFN
     '(LAMBDA (X) (AUTOLOAD_OPERATOR* 'AIRY_BIPRIME 'SPECBESS X))) 
(FLAG '(BINOMIAL) 'FULL) 
(PUT 'BINOMIAL 'SIMPFN '(LAMBDA (X) (AUTOLOAD_OPERATOR* 'BINOMIAL 'SPECFN X))) 
(FLAG '(|COMPUTE:INT:FUNCTIONS|) 'OPFN) 
(PUT '|COMPUTE:INT:FUNCTIONS| 'NUMBER-OF-ARGS 2) 
(SAFE-PUTD '|COMPUTE:INT:FUNCTIONS| 'EXPR
           (FUNCTION
            (LAMBDA (X1 X2)
              (DO-AUTOLOAD '|COMPUTE:INT:FUNCTIONS| (LIST X1 X2) '(SPECFN))))) 
(PUT 'SF*EVAL 'NUMBER-OF-ARGS 2) 
(SAFE-PUTD 'SF*EVAL 'EXPR
           (FUNCTION
            (LAMBDA (X1 X2) (DO-AUTOLOAD 'SF*EVAL (LIST X1 X2) '(SPECFN))))) 
(FLAG
 '(DO*GAMMA DO*POCHHAMMER DO*POLYGAMMA POLYGAMMA_AUX DO*TRIGAMMA*HALVES DO*ZETA
            DO*ZETA*POS*INTCALC |IBETA:EVAL| |IGAMMA:EVAL|)
 'OPFN) 
(PUT 'DO*GAMMA 'NUMBER-OF-ARGS 1) 
(SAFE-PUTD 'DO*GAMMA 'EXPR
           (FUNCTION
            (LAMBDA (X1) (DO-AUTOLOAD 'DO*GAMMA (LIST X1) '(SPECFN SFGAMMA))))) 
(PUT 'DO*POCHHAMMER 'NUMBER-OF-ARGS 2) 
(SAFE-PUTD 'DO*POCHHAMMER 'EXPR
           (FUNCTION
            (LAMBDA (X1 X2)
              (DO-AUTOLOAD 'DO*POCHHAMMER (LIST X1 X2) '(SPECFN SFGAMMA))))) 
(PUT 'POLYGAMMA_AUX 'NUMBER-OF-ARGS 2) 
(SAFE-PUTD 'POLYGAMMA_AUX 'EXPR
           (FUNCTION
            (LAMBDA (X1 X2)
              (DO-AUTOLOAD 'POLYGAMMA_AUX (LIST X1 X2) '(SPECFN SFGAMMA))))) 
(PUT 'RDPSI* 'NUMBER-OF-ARGS 1) 
(SAFE-PUTD 'RDPSI* 'EXPR
           (FUNCTION
            (LAMBDA (X1) (DO-AUTOLOAD 'RDPSI* (LIST X1) '(SPECFN SFGAMMA))))) 
(PUT 'CRPSI* 'NUMBER-OF-ARGS 1) 
(SAFE-PUTD 'CRPSI* 'EXPR
           (FUNCTION
            (LAMBDA (X1) (DO-AUTOLOAD 'CRPSI* (LIST X1) '(SPECFN SFGAMMA))))) 
(PUT 'DO*POLYGAMMA 'NUMBER-OF-ARGS 2) 
(SAFE-PUTD 'DO*POLYGAMMA 'EXPR
           (FUNCTION
            (LAMBDA (X1 X2)
              (DO-AUTOLOAD 'DO*POLYGAMMA (LIST X1 X2) '(SPECFN SFGAMMA))))) 
(PUT 'DO*TRIGAMMA*HALVES 'NUMBER-OF-ARGS 1) 
(SAFE-PUTD 'DO*TRIGAMMA*HALVES 'EXPR
           (FUNCTION
            (LAMBDA (X1)
              (DO-AUTOLOAD 'DO*TRIGAMMA*HALVES (LIST X1) '(SPECFN SFGAMMA))))) 
(PUT 'DO*ZETA 'NUMBER-OF-ARGS 1) 
(SAFE-PUTD 'DO*ZETA 'EXPR
           (FUNCTION
            (LAMBDA (X1) (DO-AUTOLOAD 'DO*ZETA (LIST X1) '(SPECFN SFGAMMA))))) 
(PUT 'DO*ZETA*POS*INTCALC 'NUMBER-OF-ARGS 1) 
(SAFE-PUTD 'DO*ZETA*POS*INTCALC 'EXPR
           (FUNCTION
            (LAMBDA (X1)
              (DO-AUTOLOAD 'DO*ZETA*POS*INTCALC (LIST X1) '(SPECFN SFGAMMA))))) 
(PUT '|IGAMMA:EVAL| 'NUMBER-OF-ARGS 2) 
(SAFE-PUTD '|IGAMMA:EVAL| 'EXPR
           (FUNCTION
            (LAMBDA (X1 X2)
              (DO-AUTOLOAD '|IGAMMA:EVAL| (LIST X1 X2) '(SPECFN SFGAMMA))))) 
(PUT '|IBETA:EVAL| 'NUMBER-OF-ARGS 3) 
(SAFE-PUTD '|IBETA:EVAL| 'EXPR
           (FUNCTION
            (LAMBDA (X1 X2 X3)
              (DO-AUTOLOAD '|IBETA:EVAL| (LIST X1 X2 X3) '(SPECFN SFGAMMA))))) 
(FLAG '(SOLIDHARMONICY SPHERICALHARMONICY) 'OPFN) 
(PUT 'SOLIDHARMONICY 'NUMBER-OF-ARGS 6) 
(SAFE-PUTD 'SOLIDHARMONICY 'EXPR
           (FUNCTION
            (LAMBDA (X1 X2 X3 X4 X5 X6)
              (DO-AUTOLOAD 'SOLIDHARMONICY (LIST X1 X2 X3 X4 X5 X6)
                           '(SPECFN))))) 
(PUT 'SPHERICALHARMONICY 'NUMBER-OF-ARGS 4) 
(SAFE-PUTD 'SPHERICALHARMONICY 'EXPR
           (FUNCTION
            (LAMBDA (X1 X2 X3 X4)
              (DO-AUTOLOAD 'SPHERICALHARMONICY (LIST X1 X2 X3 X4) '(SPECFN))))) 
(FLAG '(FIBONACCI FIBONACCIP) 'OPFN) 
(FLAG '(FIBONACCI) 'INTEGER) 
(PUT 'FIBONACCI 'NUMBER-OF-ARGS 1) 
(SAFE-PUTD 'FIBONACCI 'EXPR
           (FUNCTION
            (LAMBDA (X1) (DO-AUTOLOAD 'FIBONACCI (LIST X1) '(SPECFN))))) 
(PUT 'FIBONACCIP 'NUMBER-OF-ARGS 2) 
(SAFE-PUTD 'FIBONACCIP 'EXPR
           (FUNCTION
            (LAMBDA (X1 X2) (DO-AUTOLOAD 'FIBONACCIP (LIST X1 X2) '(SPECFN))))) 
(FLAG '(MOTZKIN) 'OPFN) 
(PUT 'MOTZKIN 'NUMBER-OF-ARGS 1) 
(SAFE-PUTD 'MOTZKIN 'EXPR
           (FUNCTION (LAMBDA (X1) (DO-AUTOLOAD 'MOTZKIN (LIST X1) '(SPECFN))))) 
(PUT 'MONOMIAL_BASE 'NUMBER-OF-ARGS 2) 
(SAFE-PUTD 'MONOMIAL_BASE 'EXPR
           (FUNCTION
            (LAMBDA (X1 X2)
              (DO-AUTOLOAD 'MONOMIAL_BASE (LIST X1 X2) '(SPECFN))))) 
(PUT 'TRIGONOMETRIC_BASE 'NUMBER-OF-ARGS 2) 
(SAFE-PUTD 'TRIGONOMETRIC_BASE 'EXPR
           (FUNCTION
            (LAMBDA (X1 X2)
              (DO-AUTOLOAD 'TRIGONOMETRIC_BASE (LIST X1 X2) '(SPECFN))))) 
(PUT 'BERNSTEIN_BASE 'NUMBER-OF-ARGS 2) 
(SAFE-PUTD 'BERNSTEIN_BASE 'EXPR
           (FUNCTION
            (LAMBDA (X1 X2)
              (DO-AUTOLOAD 'BERNSTEIN_BASE (LIST X1 X2) '(SPECFN))))) 
(PUT 'LEGENDRE_BASE 'NUMBER-OF-ARGS 4) 
(SAFE-PUTD 'LEGENDRE_BASE 'EXPR
           (FUNCTION
            (LAMBDA (X1 X2 X3 X4)
              (DO-AUTOLOAD 'LEGENDRE_BASE (LIST X1 X2 X3 X4) '(SPECFN))))) 
(PUT 'LAGUERRE_BASE 'NUMBER-OF-ARGS 3) 
(SAFE-PUTD 'LAGUERRE_BASE 'EXPR
           (FUNCTION
            (LAMBDA (X1 X2 X3)
              (DO-AUTOLOAD 'LAGUERRE_BASE (LIST X1 X2 X3) '(SPECFN))))) 
(PUT 'HERMITE_BASE 'NUMBER-OF-ARGS 2) 
(SAFE-PUTD 'HERMITE_BASE 'EXPR
           (FUNCTION
            (LAMBDA (X1 X2)
              (DO-AUTOLOAD 'HERMITE_BASE (LIST X1 X2) '(SPECFN))))) 
(PUT 'CHEBYSHEV_BASE_T 'NUMBER-OF-ARGS 2) 
(SAFE-PUTD 'CHEBYSHEV_BASE_T 'EXPR
           (FUNCTION
            (LAMBDA (X1 X2)
              (DO-AUTOLOAD 'CHEBYSHEV_BASE_T (LIST X1 X2) '(SPECFN))))) 
(PUT 'CHEBYSHEV_BASE_U 'NUMBER-OF-ARGS 2) 
(SAFE-PUTD 'CHEBYSHEV_BASE_U 'EXPR
           (FUNCTION
            (LAMBDA (X1 X2)
              (DO-AUTOLOAD 'CHEBYSHEV_BASE_U (LIST X1 X2) '(SPECFN))))) 
(PUT 'GEGENBAUER_BASE 'NUMBER-OF-ARGS 3) 
(SAFE-PUTD 'GEGENBAUER_BASE 'EXPR
           (FUNCTION
            (LAMBDA (X1 X2 X3)
              (DO-AUTOLOAD 'GEGENBAUER_BASE (LIST X1 X2 X3) '(SPECFN))))) 
(FLAG
 '(MONOMIAL_BASE TRIGONOMETRIC_BASE BERNSTEIN_BASE LEGENDRE_BASE LAGUERRE_BASE
                 HERMITE_BASE CHEBYSHEV_BASE_T CHEBYSHEV_BASE_U
                 GEGENBAUER_BASE)
 'OPFN) 
(FLUID '(*TRACEFPS FPS_SEARCH_DEPTH)) 
(SWITCH (LIST 'TRACEFPS)) 
(SHARE (LIST 'FPS_SEARCH_DEPTH)) 
(PUT 'SIMPLEDEEVAL 'NUMBER-OF-ARGS 1) 
(SAFE-PUTD 'SIMPLEDEEVAL 'EXPR
           (FUNCTION
            (LAMBDA (X1) (DO-AUTOLOAD 'SIMPLEDEEVAL (LIST X1) '(FPS))))) 
(PUT 'SIMPLEDE 'PSOPFN 'SIMPLEDEEVAL) 
(PUT 'SIMP-FPS 'NUMBER-OF-ARGS 1) 
(SAFE-PUTD 'SIMP-FPS 'EXPR
           (FUNCTION (LAMBDA (X1) (DO-AUTOLOAD 'SIMP-FPS (LIST X1) '(FPS))))) 
(PUT 'FPS 'SIMPFN 'SIMP-FPS) 
(PUT 'INFSUM 'SIMPFN 'SIMPIDEN) 
(SWITCH (LIST (LIST 'EQUAL 'QSUM_NULLSPACE 'OFF))) 
(SWITCH (LIST (LIST 'EQUAL 'QSUM_TRACE 'OFF))) 
(SWITCH (LIST (LIST 'EQUAL 'QGOSPER_DOWN 'ON))) 
(SWITCH (LIST (LIST 'EQUAL 'QGOSPER_SPECIALSOL 'ON))) 
(SWITCH (LIST (LIST 'EQUAL 'QSUMRECURSION_DOWN 'ON))) 
(SWITCH (LIST (LIST 'EQUAL 'QSUMRECURSION_EXP 'OFF))) 
(SWITCH (LIST (LIST 'EQUAL 'QSUMRECURSION_CERTIFICATE 'OFF))) 
(SWITCH (LIST (LIST 'EQUAL 'QSUMRECURSION_PROFILE 'OFF))) 
(SHARE (LIST 'QSUMRECURSION_RECRANGE*)) 
(DEFLIST
 '((QPOCHHAMMER SIMPIDEN) (QBRACKETS SIMPIDEN) (QFAC SIMPIDEN)
   (QFACTORIAL SIMPIDEN) (QBINOMIAL SIMPIDEN))
 'SIMPFN) 
(PUT 'QPSIHYPERTERM 'NUMBER-OF-ARGS 5) 
(SAFE-PUTD 'QPSIHYPERTERM 'EXPR
           (FUNCTION
            (LAMBDA (X1 X2 X3 X4 X5)
              (DO-AUTOLOAD 'QPSIHYPERTERM (LIST X1 X2 X3 X4 X5) '(QSUM))))) 
(PUT 'QPHIHYPERTERM 'NUMBER-OF-ARGS 5) 
(SAFE-PUTD 'QPHIHYPERTERM 'EXPR
           (FUNCTION
            (LAMBDA (X1 X2 X3 X4 X5)
              (DO-AUTOLOAD 'QPHIHYPERTERM (LIST X1 X2 X3 X4 X5) '(QSUM))))) 
(FLAG '(QPHIHYPERTERM QPSIHYPERTERM) 'OPFN) 
(PUT 'QGOSPER 'NUMBER-OF-ARGS 1) 
(SAFE-PUTD 'QGOSPER 'EXPR
           (FUNCTION (LAMBDA (X1) (DO-AUTOLOAD 'QGOSPER (LIST X1) '(QSUM))))) 
(PUT 'QGOSPER 'PSOPFN 'QGOSPER) 
(PUT 'QSUMRECURSION 'NUMBER-OF-ARGS 1) 
(SAFE-PUTD 'QSUMRECURSION 'EXPR
           (FUNCTION
            (LAMBDA (X1) (DO-AUTOLOAD 'QSUMRECURSION (LIST X1) '(QSUM))))) 
(PUT 'QSUMRECURSION 'PSOPFN 'QSUMRECURSION) 
(PUT 'QSIMPLIFY 'NUMBER-OF-ARGS 1) 
(SAFE-PUTD 'QSIMPLIFY 'EXPR
           (FUNCTION (LAMBDA (X1) (DO-AUTOLOAD 'QSIMPLIFY (LIST X1) '(QSUM))))) 
(PUT 'QSIMPCOMB 'PSOPFN 'QSIMPLIFY) 
(PUT 'DOWN_QRATIO 'NUMBER-OF-ARGS 2) 
(SAFE-PUTD 'DOWN_QRATIO 'EXPR
           (FUNCTION
            (LAMBDA (X1 X2) (DO-AUTOLOAD 'DOWN_QRATIO (LIST X1 X2) '(QSUM))))) 
(PUT 'UP_QRATIO 'NUMBER-OF-ARGS 2) 
(SAFE-PUTD 'UP_QRATIO 'EXPR
           (FUNCTION
            (LAMBDA (X1 X2) (DO-AUTOLOAD 'UP_QRATIO (LIST X1 X2) '(QSUM))))) 
(FLAG '(DOWN_QRATIO UP_QRATIO) 'OPFN) 
(FLAG '(JACOBIAM) 'FULL) 
(PUT 'JACOBIAM 'SIMPFN '(LAMBDA (X) (AUTOLOAD_OPERATOR* 'JACOBIAM 'ELLIPFN X))) 
(FLAG '(JACOBISN) 'FULL) 
(PUT 'JACOBISN 'SIMPFN '(LAMBDA (X) (AUTOLOAD_OPERATOR* 'JACOBISN 'ELLIPFN X))) 
(FLAG '(JACOBICN) 'FULL) 
(PUT 'JACOBICN 'SIMPFN '(LAMBDA (X) (AUTOLOAD_OPERATOR* 'JACOBICN 'ELLIPFN X))) 
(FLAG '(JACOBIDN) 'FULL) 
(PUT 'JACOBIDN 'SIMPFN '(LAMBDA (X) (AUTOLOAD_OPERATOR* 'JACOBIDN 'ELLIPFN X))) 
(FLAG '(JACOBINS) 'FULL) 
(PUT 'JACOBINS 'SIMPFN '(LAMBDA (X) (AUTOLOAD_OPERATOR* 'JACOBINS 'ELLIPFN X))) 
(FLAG '(JACOBINC) 'FULL) 
(PUT 'JACOBINC 'SIMPFN '(LAMBDA (X) (AUTOLOAD_OPERATOR* 'JACOBINC 'ELLIPFN X))) 
(FLAG '(JACOBIND) 'FULL) 
(PUT 'JACOBIND 'SIMPFN '(LAMBDA (X) (AUTOLOAD_OPERATOR* 'JACOBIND 'ELLIPFN X))) 
(FLAG '(JACOBISC) 'FULL) 
(PUT 'JACOBISC 'SIMPFN '(LAMBDA (X) (AUTOLOAD_OPERATOR* 'JACOBISC 'ELLIPFN X))) 
(FLAG '(JACOBISD) 'FULL) 
(PUT 'JACOBISD 'SIMPFN '(LAMBDA (X) (AUTOLOAD_OPERATOR* 'JACOBISD 'ELLIPFN X))) 
(FLAG '(JACOBICS) 'FULL) 
(PUT 'JACOBICS 'SIMPFN '(LAMBDA (X) (AUTOLOAD_OPERATOR* 'JACOBICS 'ELLIPFN X))) 
(FLAG '(JACOBIDS) 'FULL) 
(PUT 'JACOBIDS 'SIMPFN '(LAMBDA (X) (AUTOLOAD_OPERATOR* 'JACOBIDS 'ELLIPFN X))) 
(FLAG '(JACOBICD) 'FULL) 
(PUT 'JACOBICD 'SIMPFN '(LAMBDA (X) (AUTOLOAD_OPERATOR* 'JACOBICD 'ELLIPFN X))) 
(FLAG '(JACOBIDC) 'FULL) 
(PUT 'JACOBIDC 'SIMPFN '(LAMBDA (X) (AUTOLOAD_OPERATOR* 'JACOBIDC 'ELLIPFN X))) 
(FLAG '(JACOBIE) 'FULL) 
(PUT 'JACOBIE 'SIMPFN '(LAMBDA (X) (AUTOLOAD_OPERATOR* 'JACOBIE 'ELLIPFN X))) 
(FLAG '(ELLIPTICE) 'FULL) 
(PUT 'ELLIPTICE 'SIMPFN
     '(LAMBDA (X) (AUTOLOAD_OPERATOR* 'ELLIPTICE 'ELLIPFN X))) 
(FLAG '(ELLIPTICD) 'FULL) 
(PUT 'ELLIPTICD 'SIMPFN
     '(LAMBDA (X) (AUTOLOAD_OPERATOR* 'ELLIPTICD 'ELLIPFN X))) 
(FLAG '(|ELLIPTICE'|) 'FULL) 
(PUT '|ELLIPTICE'| 'SIMPFN
     '(LAMBDA (X) (AUTOLOAD_OPERATOR* '|ELLIPTICE'| 'ELLIPFN X))) 
(FLAG '(ELLIPTICF) 'FULL) 
(PUT 'ELLIPTICF 'SIMPFN
     '(LAMBDA (X) (AUTOLOAD_OPERATOR* 'ELLIPTICF 'ELLIPFN X))) 
(FLAG '(ELLIPTICK) 'FULL) 
(PUT 'ELLIPTICK 'SIMPFN
     '(LAMBDA (X) (AUTOLOAD_OPERATOR* 'ELLIPTICK 'ELLIPFN X))) 
(FLAG '(|ELLIPTICK'|) 'FULL) 
(PUT '|ELLIPTICK'| 'SIMPFN
     '(LAMBDA (X) (AUTOLOAD_OPERATOR* '|ELLIPTICK'| 'ELLIPFN X))) 
(FLAG '(ELLIPTICTHETA1) 'FULL) 
(PUT 'ELLIPTICTHETA1 'SIMPFN
     '(LAMBDA (X) (AUTOLOAD_OPERATOR* 'ELLIPTICTHETA1 'ELLIPFN X))) 
(FLAG '(ELLIPTICTHETA2) 'FULL) 
(PUT 'ELLIPTICTHETA2 'SIMPFN
     '(LAMBDA (X) (AUTOLOAD_OPERATOR* 'ELLIPTICTHETA2 'ELLIPFN X))) 
(FLAG '(ELLIPTICTHETA3) 'FULL) 
(PUT 'ELLIPTICTHETA3 'SIMPFN
     '(LAMBDA (X) (AUTOLOAD_OPERATOR* 'ELLIPTICTHETA3 'ELLIPFN X))) 
(FLAG '(ELLIPTICTHETA4) 'FULL) 
(PUT 'ELLIPTICTHETA4 'SIMPFN
     '(LAMBDA (X) (AUTOLOAD_OPERATOR* 'ELLIPTICTHETA4 'ELLIPFN X))) 
(FLAG '(ARCSN) 'FULL) 
(PUT 'ARCSN 'SIMPFN '(LAMBDA (X) (AUTOLOAD_OPERATOR* 'ARCSN 'ELLIPFN X))) 
(FLAG '(ARCCN) 'FULL) 
(PUT 'ARCCN 'SIMPFN '(LAMBDA (X) (AUTOLOAD_OPERATOR* 'ARCCN 'ELLIPFN X))) 
(FLAG '(ARCDN) 'FULL) 
(PUT 'ARCDN 'SIMPFN '(LAMBDA (X) (AUTOLOAD_OPERATOR* 'ARCDN 'ELLIPFN X))) 
(FLAG '(ARCNS) 'FULL) 
(PUT 'ARCNS 'SIMPFN '(LAMBDA (X) (AUTOLOAD_OPERATOR* 'ARCNS 'ELLIPFN X))) 
(FLAG '(ARCNC) 'FULL) 
(PUT 'ARCNC 'SIMPFN '(LAMBDA (X) (AUTOLOAD_OPERATOR* 'ARCNC 'ELLIPFN X))) 
(FLAG '(ARCND) 'FULL) 
(PUT 'ARCND 'SIMPFN '(LAMBDA (X) (AUTOLOAD_OPERATOR* 'ARCND 'ELLIPFN X))) 
(FLAG '(ARCSC) 'FULL) 
(PUT 'ARCSC 'SIMPFN '(LAMBDA (X) (AUTOLOAD_OPERATOR* 'ARCSC 'ELLIPFN X))) 
(FLAG '(ARCSD) 'FULL) 
(PUT 'ARCSD 'SIMPFN '(LAMBDA (X) (AUTOLOAD_OPERATOR* 'ARCSD 'ELLIPFN X))) 
(FLAG '(ARCCS) 'FULL) 
(PUT 'ARCCS 'SIMPFN '(LAMBDA (X) (AUTOLOAD_OPERATOR* 'ARCCS 'ELLIPFN X))) 
(FLAG '(ARCDS) 'FULL) 
(PUT 'ARCDS 'SIMPFN '(LAMBDA (X) (AUTOLOAD_OPERATOR* 'ARCDS 'ELLIPFN X))) 
(FLAG '(ARCCD) 'FULL) 
(PUT 'ARCCD 'SIMPFN '(LAMBDA (X) (AUTOLOAD_OPERATOR* 'ARCCD 'ELLIPFN X))) 
(FLAG '(ARCDC) 'FULL) 
(PUT 'ARCDC 'SIMPFN '(LAMBDA (X) (AUTOLOAD_OPERATOR* 'ARCDC 'ELLIPFN X))) 
(FLAG '(WEIERSTRASS) 'FULL) 
(PUT 'WEIERSTRASS 'SIMPFN
     '(LAMBDA (X) (AUTOLOAD_OPERATOR* 'WEIERSTRASS 'ELLIPFN X))) 
(FLAG '(WEIERSTRASS1) 'FULL) 
(PUT 'WEIERSTRASS1 'SIMPFN
     '(LAMBDA (X) (AUTOLOAD_OPERATOR* 'WEIERSTRASS1 'ELLIPFN X))) 
(FLAG '(WEIERSTRASSZETA) 'FULL) 
(PUT 'WEIERSTRASSZETA 'SIMPFN
     '(LAMBDA (X) (AUTOLOAD_OPERATOR* 'WEIERSTRASSZETA 'ELLIPFN X))) 
(FLAG '(WEIERSTRASSZETA1) 'FULL) 
(PUT 'WEIERSTRASSZETA1 'SIMPFN
     '(LAMBDA (X) (AUTOLOAD_OPERATOR* 'WEIERSTRASSZETA1 'ELLIPFN X))) 
(FLAG '(WEIERSTRASS_SIGMA) 'FULL) 
(PUT 'WEIERSTRASS_SIGMA 'SIMPFN
     '(LAMBDA (X) (AUTOLOAD_OPERATOR* 'WEIERSTRASS_SIGMA 'ELLIPFN X))) 
(FLAG '(WEIERSTRASS_SIGMA1) 'FULL) 
(PUT 'WEIERSTRASS_SIGMA1 'SIMPFN
     '(LAMBDA (X) (AUTOLOAD_OPERATOR* 'WEIERSTRASS_SIGMA1 'ELLIPFN X))) 
(FLAG '(WEIERSTRASS_SIGMA2) 'FULL) 
(PUT 'WEIERSTRASS_SIGMA2 'SIMPFN
     '(LAMBDA (X) (AUTOLOAD_OPERATOR* 'WEIERSTRASS_SIGMA2 'ELLIPFN X))) 
(FLAG '(WEIERSTRASS_SIGMA3) 'FULL) 
(PUT 'WEIERSTRASS_SIGMA3 'SIMPFN
     '(LAMBDA (X) (AUTOLOAD_OPERATOR* 'WEIERSTRASS_SIGMA3 'ELLIPFN X))) 
(FLAG '(HYPERGEOMETRIC) 'FULL) 
(PUT 'HYPERGEOMETRIC 'SIMPFN
     '(LAMBDA (X) (AUTOLOAD_OPERATOR* 'HYPERGEOMETRIC '(SPECFN SPECFN2) X))) 
(FLAG '(MEIJERG) 'FULL) 
(PUT 'MEIJERG 'SIMPFN
     '(LAMBDA (X) (AUTOLOAD_OPERATOR* 'MEIJERG '(SPECFN SPECFN2) X))) 
(FLAG '(LAMBERT_W) 'FULL) 
(PUT 'LAMBERT_W 'SIMPFN
     '(LAMBDA (X) (AUTOLOAD_OPERATOR* 'LAMBERT_W '(SPECFN SPECBESS) X))) 
(PUT 'RESIDUE 'NUMBER-OF-ARGS 3) 
(SAFE-PUTD 'RESIDUE 'EXPR
           (FUNCTION
            (LAMBDA (X1 X2 X3)
              (DO-AUTOLOAD 'RESIDUE (LIST X1 X2 X3) '(RESIDUE))))) 
(PUT 'POLEORDER 'NUMBER-OF-ARGS 3) 
(SAFE-PUTD 'POLEORDER 'EXPR
           (FUNCTION
            (LAMBDA (X1 X2 X3)
              (DO-AUTOLOAD 'POLEORDER (LIST X1 X2 X3) '(RESIDUE))))) 
(FLAG '(RESIDUE |,| POLEORDER) 'OPFN) 
(REMPROP 'DEFPOLY 'STAT) 
(FLUID '(*ARNUM)) 
(SWITCH (LIST 'ARNUM)) 
(PUT 'ARNUM 'SIMPFG '((T (LOAD-PACKAGE 'ARNUM) (SETDMODE (QUOTE ARNUM T))))) 
(PUT 'DEFPOLY 'NUMBER-OF-ARGS 1) 
(SAFE-PUTD 'DEFPOLY 'EXPR
           (FUNCTION (LAMBDA (X1) (DO-AUTOLOAD 'DEFPOLY (LIST X1) '(ARNUM))))) 
(RLISTAT '(DEFPOLY)) 
(PUT 'SPLIT-FIELD-EVAL 'NUMBER-OF-ARGS 1) 
(SAFE-PUTD 'SPLIT-FIELD-EVAL 'EXPR
           (FUNCTION
            (LAMBDA (X1) (DO-AUTOLOAD 'SPLIT-FIELD-EVAL (LIST X1) '(ARNUM))))) 
(PUT 'SPLIT_FIELD 'PSOPFN 'SPLIT-FIELD-EVAL) 
(GLOBAL '(*TRACERATINT)) 
(SWITCH (LIST 'TRACERATINT)) 
(PUT 'RATINT 'NUMBER-OF-ARGS 3) 
(SAFE-PUTD 'RATINT 'EXPR
           (FUNCTION
            (LAMBDA (X1 X2 X3)
              (DO-AUTOLOAD 'RATINT (LIST X1 X2 X3) '(RATINT))))) 
(PUT 'CONVERT 'NUMBER-OF-ARGS 1) 
(SAFE-PUTD 'CONVERT 'EXPR
           (FUNCTION (LAMBDA (X1) (DO-AUTOLOAD 'CONVERT (LIST X1) '(RATINT))))) 
(PUT 'CONVERT_LOG 'NUMBER-OF-ARGS 1) 
(SAFE-PUTD 'CONVERT_LOG 'EXPR
           (FUNCTION
            (LAMBDA (X1) (DO-AUTOLOAD 'CONVERT_LOG (LIST X1) '(RATINT))))) 
(PUT 'LOGTOATAN 'NUMBER-OF-ARGS 3) 
(SAFE-PUTD 'LOGTOATAN 'EXPR
           (FUNCTION
            (LAMBDA (X1 X2 X3)
              (DO-AUTOLOAD 'LOGTOATAN (LIST X1 X2 X3) '(RATINT))))) 
(FLAG '(RATINT CONVERT CONVERT_LOG LOGTOATAN) 'OPFN) 
(PUT 'LOG_SUM 'SIMPFN 'SIMPIDEN) 
(SWITCH (LIST (LIST 'EQUAL 'RTRACE 'ON))) 
(REMPROP 'RTR 'STAT) 
(REMPROP 'UNRTR 'STAT) 
(REMPROP 'TRRL 'STAT) 
(REMPROP 'TRRLID 'STAT) 
(REMPROP 'UNTRRL 'STAT) 
(REMPROP 'UNTRRLID 'STAT) 
(PUT 'RTR* 'NUMBER-OF-ARGS 2) 
(SAFE-PUTD 'RTR* 'EXPR
           (FUNCTION
            (LAMBDA (X1 X2) (DO-AUTOLOAD 'RTR* (LIST X1 X2) '(RTRACE))))) 
(PUT 'RTR 'DEFINED-ON-LINE '1128) 
(PUT 'RTR 'DEFINED-IN-FILE 'SUPPORT/ENTRY.RED) 
(PUT 'RTR 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DM RTR (FNS) (RTR* 'RTRACE FNS)) 
(PUT 'UNRTR 'DEFINED-ON-LINE '1132) 
(PUT 'UNRTR 'DEFINED-IN-FILE 'SUPPORT/ENTRY.RED) 
(PUT 'UNRTR 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DM UNRTR (FNS) (RTR* 'UNRTRACE FNS)) 
(PUT 'RTRST 'DEFINED-ON-LINE '1136) 
(PUT 'RTRST 'DEFINED-IN-FILE 'SUPPORT/ENTRY.RED) 
(PUT 'RTRST 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DM RTRST (FNS) (RTR* 'RTRACESET FNS)) 
(PUT 'UNRTRST 'DEFINED-ON-LINE '1140) 
(PUT 'UNRTRST 'DEFINED-IN-FILE 'SUPPORT/ENTRY.RED) 
(PUT 'UNRTRST 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DM UNRTRST (FNS) (RTR* 'UNRTRACE FNS)) 
(FLAG '(RTR RTRST UNRTR UNRTRST) 'NOFORM) 
(DEFLIST '((RTR RLIS) (RTRST RLIS) (UNRTR RLIS) (UNRTRST RLIS)) 'STAT) 
(GLOBAL '(RTROUT*)) 
(PUT 'RTROUT 'NUMBER-OF-ARGS 1) 
(SAFE-PUTD 'RTROUT 'EXPR
           (FUNCTION (LAMBDA (X1) (DO-AUTOLOAD 'RTROUT (LIST X1) '(RTRACE))))) 
(RLISTAT '(RTROUT)) 
(PUT 'TRRL 'NUMBER-OF-ARGS 1) 
(SAFE-PUTD 'TRRL 'EXPR
           (FUNCTION (LAMBDA (X1) (DO-AUTOLOAD 'TRRL (LIST X1) '(RTRACE))))) 
(PUT 'TRRLID 'NUMBER-OF-ARGS 1) 
(SAFE-PUTD 'TRRLID 'EXPR
           (FUNCTION (LAMBDA (X1) (DO-AUTOLOAD 'TRRLID (LIST X1) '(RTRACE))))) 
(PUT 'TRRL 'STAT 'RLIS) 
(PUT 'TRRLID 'STAT 'RLIS) 
(PUT 'UNTRRL 'NUMBER-OF-ARGS 1) 
(SAFE-PUTD 'UNTRRL 'EXPR
           (FUNCTION (LAMBDA (X1) (DO-AUTOLOAD 'UNTRRL (LIST X1) '(RTRACE))))) 
(PUT 'UNTRRLID 'NUMBER-OF-ARGS 1) 
(SAFE-PUTD 'UNTRRLID 'EXPR
           (FUNCTION (LAMBDA (X1) (DO-AUTOLOAD 'UNTRRLID (LIST X1) '(RTRACE))))) 
(PUT 'UNTRRL 'STAT 'RLIS) 
(PUT 'UNTRRLID 'STAT 'RLIS) 
(PUT 'PG_GAUSS-SYM 'NUMBER-OF-ARGS 2) 
(SAFE-PUTD 'PG_GAUSS-SYM 'EXPR
           (FUNCTION
            (LAMBDA (X1 X2)
              (DO-AUTOLOAD 'PG_GAUSS-SYM (LIST X1 X2) '(PGAUSS))))) 
(FLAG '(MEMINFO) 'OPFN) 
(PUT 'MEMINFO 'NUMBER-OF-ARGS 0) 
(SAFE-PUTD 'MEMINFO 'EXPR
           (FUNCTION (LAMBDA () (DO-AUTOLOAD 'MEMINFO (LIST) '(RLTOOLS))))) 
(PUT 'SYSTO_DATESTAMP 'NUMBER-OF-ARGS 0) 
(SAFE-PUTD 'SYSTO_DATESTAMP 'EXPR
           (FUNCTION
            (LAMBDA () (DO-AUTOLOAD 'SYSTO_DATESTAMP (LIST) '(RLTOOLS))))) 
(PUT 'SYSTO_GET-RESOURCE-DIRECTORY 'NUMBER-OF-ARGS 0) 
(SAFE-PUTD 'SYSTO_GET-RESOURCE-DIRECTORY 'EXPR
           (FUNCTION
            (LAMBDA ()
              (DO-AUTOLOAD 'SYSTO_GET-RESOURCE-DIRECTORY (LIST) '(RLTOOLS))))) 
(PUT 'SYSTO_TRUNK 'NUMBER-OF-ARGS 0) 
(SAFE-PUTD 'SYSTO_TRUNK 'EXPR
           (FUNCTION (LAMBDA () (DO-AUTOLOAD 'SYSTO_TRUNK (LIST) '(RLTOOLS))))) 
(PUT 'IOTO_CPLU 'NUMBER-OF-ARGS 2) 
(SAFE-PUTD 'IOTO_CPLU 'EXPR
           (FUNCTION
            (LAMBDA (X1 X2) (DO-AUTOLOAD 'IOTO_CPLU (LIST X1 X2) '(RLTOOLS))))) 
(PUT 'IOTO_CTERPRI 'NUMBER-OF-ARGS 0) 
(SAFE-PUTD 'IOTO_CTERPRI 'EXPR
           (FUNCTION (LAMBDA () (DO-AUTOLOAD 'IOTO_CTERPRI (LIST) '(RLTOOLS))))) 
(PUT 'IOTO_FORM2STR 'NUMBER-OF-ARGS 1) 
(SAFE-PUTD 'IOTO_FORM2STR 'EXPR
           (FUNCTION
            (LAMBDA (X1) (DO-AUTOLOAD 'IOTO_FORM2STR (LIST X1) '(RLTOOLS))))) 
(PUT 'IOTO_PRIN2 'NUMBER-OF-ARGS 1) 
(SAFE-PUTD 'IOTO_PRIN2 'EXPR
           (FUNCTION
            (LAMBDA (X1) (DO-AUTOLOAD 'IOTO_PRIN2 (LIST X1) '(RLTOOLS))))) 
(PUT 'IOTO_PRIN2T 'NUMBER-OF-ARGS 1) 
(SAFE-PUTD 'IOTO_PRIN2T 'EXPR
           (FUNCTION
            (LAMBDA (X1) (DO-AUTOLOAD 'IOTO_PRIN2T (LIST X1) '(RLTOOLS))))) 
(PUT 'IOTO_REALTIME 'NUMBER-OF-ARGS 0) 
(SAFE-PUTD 'IOTO_REALTIME 'EXPR
           (FUNCTION
            (LAMBDA () (DO-AUTOLOAD 'IOTO_REALTIME (LIST) '(RLTOOLS))))) 
(PUT 'IOTO_SMAPRIN 'NUMBER-OF-ARGS 1) 
(SAFE-PUTD 'IOTO_SMAPRIN 'EXPR
           (FUNCTION
            (LAMBDA (X1) (DO-AUTOLOAD 'IOTO_SMAPRIN (LIST X1) '(RLTOOLS))))) 
(PUT 'IOTO_SXREAD 'NUMBER-OF-ARGS 1) 
(SAFE-PUTD 'IOTO_SXREAD 'EXPR
           (FUNCTION
            (LAMBDA (X1) (DO-AUTOLOAD 'IOTO_SXREAD (LIST X1) '(RLTOOLS))))) 
(PUT 'IOTO_TPRIN2 'NUMBER-OF-ARGS 1) 
(SAFE-PUTD 'IOTO_TPRIN2 'EXPR
           (FUNCTION
            (LAMBDA (X1) (DO-AUTOLOAD 'IOTO_TPRIN2 (LIST X1) '(RLTOOLS))))) 
(PUT 'IOTO_TPRIN2T 'NUMBER-OF-ARGS 1) 
(SAFE-PUTD 'IOTO_TPRIN2T 'EXPR
           (FUNCTION
            (LAMBDA (X1) (DO-AUTOLOAD 'IOTO_TPRIN2T (LIST X1) '(RLTOOLS))))) 
(PUT 'LTO_0LISTP 'NUMBER-OF-ARGS 1) 
(SAFE-PUTD 'LTO_0LISTP 'EXPR
           (FUNCTION
            (LAMBDA (X1) (DO-AUTOLOAD 'LTO_0LISTP (LIST X1) '(RLTOOLS))))) 
(PUT 'LTO_UPCASE 'NUMBER-OF-ARGS 1) 
(SAFE-PUTD 'LTO_UPCASE 'EXPR
           (FUNCTION
            (LAMBDA (X1) (DO-AUTOLOAD 'LTO_UPCASE (LIST X1) '(RLTOOLS))))) 
(PUT 'LTO_ALINSERT 'NUMBER-OF-ARGS 3) 
(SAFE-PUTD 'LTO_ALINSERT 'EXPR
           (FUNCTION
            (LAMBDA (X1 X2 X3)
              (DO-AUTOLOAD 'LTO_ALINSERT (LIST X1 X2 X3) '(RLTOOLS))))) 
(PUT 'LTO_ALMERGE 'NUMBER-OF-ARGS 2) 
(SAFE-PUTD 'LTO_ALMERGE 'EXPR
           (FUNCTION
            (LAMBDA (X1 X2)
              (DO-AUTOLOAD 'LTO_ALMERGE (LIST X1 X2) '(RLTOOLS))))) 
(PUT 'LTO_ALPHAP 'NUMBER-OF-ARGS 1) 
(SAFE-PUTD 'LTO_ALPHAP 'EXPR
           (FUNCTION
            (LAMBDA (X1) (DO-AUTOLOAD 'LTO_ALPHAP (LIST X1) '(RLTOOLS))))) 
(PUT 'LTO_ALUNION 'NUMBER-OF-ARGS 1) 
(SAFE-PUTD 'LTO_ALUNION 'EXPR
           (FUNCTION
            (LAMBDA (X1) (DO-AUTOLOAD 'LTO_ALUNION (LIST X1) '(RLTOOLS))))) 
(PUT 'LTO_APPENDN 'NUMBER-OF-ARGS 1) 
(SAFE-PUTD 'LTO_APPENDN 'EXPR
           (FUNCTION
            (LAMBDA (X1) (DO-AUTOLOAD 'LTO_APPENDN (LIST X1) '(RLTOOLS))))) 
(PUT 'LTO_APPLY2NTHIP 'NUMBER-OF-ARGS 4) 
(SAFE-PUTD 'LTO_APPLY2NTHIP 'EXPR
           (FUNCTION
            (LAMBDA (X1 X2 X3 X4)
              (DO-AUTOLOAD 'LTO_APPLY2NTHIP (LIST X1 X2 X3 X4) '(RLTOOLS))))) 
(PUT 'LTO_AT2STR 'NUMBER-OF-ARGS 1) 
(SAFE-PUTD 'LTO_AT2STR 'EXPR
           (FUNCTION
            (LAMBDA (X1) (DO-AUTOLOAD 'LTO_AT2STR (LIST X1) '(RLTOOLS))))) 
(PUT 'LTO_CARTPROD 'NUMBER-OF-ARGS 1) 
(SAFE-PUTD 'LTO_CARTPROD 'EXPR
           (FUNCTION
            (LAMBDA (X1) (DO-AUTOLOAD 'LTO_CARTPROD (LIST X1) '(RLTOOLS))))) 
(PUT 'LTO_CASSOC 'NUMBER-OF-ARGS 2) 
(SAFE-PUTD 'LTO_CASSOC 'EXPR
           (FUNCTION
            (LAMBDA (X1 X2) (DO-AUTOLOAD 'LTO_CASSOC (LIST X1 X2) '(RLTOOLS))))) 
(PUT 'LTO_CATSOC 'NUMBER-OF-ARGS 2) 
(SAFE-PUTD 'LTO_CATSOC 'EXPR
           (FUNCTION
            (LAMBDA (X1 X2) (DO-AUTOLOAD 'LTO_CATSOC (LIST X1 X2) '(RLTOOLS))))) 
(PUT 'LTO_DELNTHIP 'NUMBER-OF-ARGS 2) 
(SAFE-PUTD 'LTO_DELNTHIP 'EXPR
           (FUNCTION
            (LAMBDA (X1 X2)
              (DO-AUTOLOAD 'LTO_DELNTHIP (LIST X1 X2) '(RLTOOLS))))) 
(PUT 'LTO_DELQ 'NUMBER-OF-ARGS 2) 
(SAFE-PUTD 'LTO_DELQ 'EXPR
           (FUNCTION
            (LAMBDA (X1 X2) (DO-AUTOLOAD 'LTO_DELQ (LIST X1 X2) '(RLTOOLS))))) 
(PUT 'LTO_DELQIP 'NUMBER-OF-ARGS 2) 
(SAFE-PUTD 'LTO_DELQIP 'EXPR
           (FUNCTION
            (LAMBDA (X1 X2) (DO-AUTOLOAD 'LTO_DELQIP (LIST X1 X2) '(RLTOOLS))))) 
(PUT 'LTO_DOWNCASE 'NUMBER-OF-ARGS 1) 
(SAFE-PUTD 'LTO_DOWNCASE 'EXPR
           (FUNCTION
            (LAMBDA (X1) (DO-AUTOLOAD 'LTO_DOWNCASE (LIST X1) '(RLTOOLS))))) 
(PUT 'LTO_DROP 'NUMBER-OF-ARGS 2) 
(SAFE-PUTD 'LTO_DROP 'EXPR
           (FUNCTION
            (LAMBDA (X1 X2) (DO-AUTOLOAD 'LTO_DROP (LIST X1 X2) '(RLTOOLS))))) 
(PUT 'LTO_EATSOC 'NUMBER-OF-ARGS 3) 
(SAFE-PUTD 'LTO_EATSOC 'EXPR
           (FUNCTION
            (LAMBDA (X1 X2 X3)
              (DO-AUTOLOAD 'LTO_EATSOC (LIST X1 X2 X3) '(RLTOOLS))))) 
(PUT 'LTO_FASTGENSYM 'NUMBER-OF-ARGS 0) 
(SAFE-PUTD 'LTO_FASTGENSYM 'EXPR
           (FUNCTION
            (LAMBDA () (DO-AUTOLOAD 'LTO_FASTGENSYM (LIST) '(RLTOOLS))))) 
(PUT 'LTO_HINSERT 'NUMBER-OF-ARGS 3) 
(SAFE-PUTD 'LTO_HINSERT 'EXPR
           (FUNCTION
            (LAMBDA (X1 X2 X3)
              (DO-AUTOLOAD 'LTO_HINSERT (LIST X1 X2 X3) '(RLTOOLS))))) 
(PUT 'LTO_HMEMBER 'NUMBER-OF-ARGS 3) 
(SAFE-PUTD 'LTO_HMEMBER 'EXPR
           (FUNCTION
            (LAMBDA (X1 X2 X3)
              (DO-AUTOLOAD 'LTO_HMEMBER (LIST X1 X2 X3) '(RLTOOLS))))) 
(PUT 'LTO_IDCONCAT 'NUMBER-OF-ARGS 1) 
(SAFE-PUTD 'LTO_IDCONCAT 'EXPR
           (FUNCTION
            (LAMBDA (X1) (DO-AUTOLOAD 'LTO_IDCONCAT (LIST X1) '(RLTOOLS))))) 
(PUT 'LTO_IDCONCAT2 'NUMBER-OF-ARGS 2) 
(SAFE-PUTD 'LTO_IDCONCAT2 'EXPR
           (FUNCTION
            (LAMBDA (X1 X2)
              (DO-AUTOLOAD 'LTO_IDCONCAT2 (LIST X1 X2) '(RLTOOLS))))) 
(PUT 'LTO_INIT 'NUMBER-OF-ARGS 1) 
(SAFE-PUTD 'LTO_INIT 'EXPR
           (FUNCTION
            (LAMBDA (X1) (DO-AUTOLOAD 'LTO_INIT (LIST X1) '(RLTOOLS))))) 
(PUT 'LTO_INSERT 'NUMBER-OF-ARGS 2) 
(SAFE-PUTD 'LTO_INSERT 'EXPR
           (FUNCTION
            (LAMBDA (X1 X2) (DO-AUTOLOAD 'LTO_INSERT (LIST X1 X2) '(RLTOOLS))))) 
(PUT 'LTO_INSERTQ 'NUMBER-OF-ARGS 2) 
(SAFE-PUTD 'LTO_INSERTQ 'EXPR
           (FUNCTION
            (LAMBDA (X1 X2)
              (DO-AUTOLOAD 'LTO_INSERTQ (LIST X1 X2) '(RLTOOLS))))) 
(PUT 'LTO_LAST 'NUMBER-OF-ARGS 1) 
(SAFE-PUTD 'LTO_LAST 'EXPR
           (FUNCTION
            (LAMBDA (X1) (DO-AUTOLOAD 'LTO_LAST (LIST X1) '(RLTOOLS))))) 
(PUT 'LTO_LENGTHP 'NUMBER-OF-ARGS 3) 
(SAFE-PUTD 'LTO_LENGTHP 'EXPR
           (FUNCTION
            (LAMBDA (X1 X2 X3)
              (DO-AUTOLOAD 'LTO_LENGTHP (LIST X1 X2 X3) '(RLTOOLS))))) 
(PUT 'LTO_LIST2SET 'NUMBER-OF-ARGS 1) 
(SAFE-PUTD 'LTO_LIST2SET 'EXPR
           (FUNCTION
            (LAMBDA (X1) (DO-AUTOLOAD 'LTO_LIST2SET (LIST X1) '(RLTOOLS))))) 
(PUT 'LTO_LIST2VECTOR 'NUMBER-OF-ARGS 1) 
(SAFE-PUTD 'LTO_LIST2VECTOR 'EXPR
           (FUNCTION
            (LAMBDA (X1) (DO-AUTOLOAD 'LTO_LIST2VECTOR (LIST X1) '(RLTOOLS))))) 
(PUT 'LTO_LPVARL 'NUMBER-OF-ARGS 1) 
(SAFE-PUTD 'LTO_LPVARL 'EXPR
           (FUNCTION
            (LAMBDA (X1) (DO-AUTOLOAD 'LTO_LPVARL (LIST X1) '(RLTOOLS))))) 
(PUT 'LTO_MAX 'NUMBER-OF-ARGS 1) 
(SAFE-PUTD 'LTO_MAX 'EXPR
           (FUNCTION (LAMBDA (X1) (DO-AUTOLOAD 'LTO_MAX (LIST X1) '(RLTOOLS))))) 
(PUT 'LTO_MAXKL 'NUMBER-OF-ARGS 1) 
(SAFE-PUTD 'LTO_MAXKL 'EXPR
           (FUNCTION
            (LAMBDA (X1) (DO-AUTOLOAD 'LTO_MAXKL (LIST X1) '(RLTOOLS))))) 
(PUT 'LTO_MERGESORT 'NUMBER-OF-ARGS 2) 
(SAFE-PUTD 'LTO_MERGESORT 'EXPR
           (FUNCTION
            (LAMBDA (X1 X2)
              (DO-AUTOLOAD 'LTO_MERGESORT (LIST X1 X2) '(RLTOOLS))))) 
(PUT 'LTO_MIN 'NUMBER-OF-ARGS 1) 
(SAFE-PUTD 'LTO_MIN 'EXPR
           (FUNCTION (LAMBDA (X1) (DO-AUTOLOAD 'LTO_MIN (LIST X1) '(RLTOOLS))))) 
(PUT 'LTO_NCONCN 'NUMBER-OF-ARGS 1) 
(SAFE-PUTD 'LTO_NCONCN 'EXPR
           (FUNCTION
            (LAMBDA (X1) (DO-AUTOLOAD 'LTO_NCONCN (LIST X1) '(RLTOOLS))))) 
(PUT 'LTO_PARTITION 'NUMBER-OF-ARGS 2) 
(SAFE-PUTD 'LTO_PARTITION 'EXPR
           (FUNCTION
            (LAMBDA (X1 X2)
              (DO-AUTOLOAD 'LTO_PARTITION (LIST X1 X2) '(RLTOOLS))))) 
(PUT 'LTO_POWERSET 'NUMBER-OF-ARGS 1) 
(SAFE-PUTD 'LTO_POWERSET 'EXPR
           (FUNCTION
            (LAMBDA (X1) (DO-AUTOLOAD 'LTO_POWERSET (LIST X1) '(RLTOOLS))))) 
(PUT 'LTO_REMOVE 'NUMBER-OF-ARGS 2) 
(SAFE-PUTD 'LTO_REMOVE 'EXPR
           (FUNCTION
            (LAMBDA (X1 X2) (DO-AUTOLOAD 'LTO_REMOVE (LIST X1 X2) '(RLTOOLS))))) 
(PUT 'LTO_RMPOS 'NUMBER-OF-ARGS 2) 
(SAFE-PUTD 'LTO_RMPOS 'EXPR
           (FUNCTION
            (LAMBDA (X1 X2) (DO-AUTOLOAD 'LTO_RMPOS (LIST X1 X2) '(RLTOOLS))))) 
(PUT 'LTO_SCONCAT 'NUMBER-OF-ARGS 1) 
(SAFE-PUTD 'LTO_SCONCAT 'EXPR
           (FUNCTION
            (LAMBDA (X1) (DO-AUTOLOAD 'LTO_SCONCAT (LIST X1) '(RLTOOLS))))) 
(PUT 'LTO_SCONCAT2 'NUMBER-OF-ARGS 2) 
(SAFE-PUTD 'LTO_SCONCAT2 'EXPR
           (FUNCTION
            (LAMBDA (X1 X2)
              (DO-AUTOLOAD 'LTO_SCONCAT2 (LIST X1 X2) '(RLTOOLS))))) 
(PUT 'LTO_SETEQUALQ 'NUMBER-OF-ARGS 2) 
(SAFE-PUTD 'LTO_SETEQUALQ 'EXPR
           (FUNCTION
            (LAMBDA (X1 X2)
              (DO-AUTOLOAD 'LTO_SETEQUALQ (LIST X1 X2) '(RLTOOLS))))) 
(PUT 'LTO_SETMINUS 'NUMBER-OF-ARGS 2) 
(SAFE-PUTD 'LTO_SETMINUS 'EXPR
           (FUNCTION
            (LAMBDA (X1 X2)
              (DO-AUTOLOAD 'LTO_SETMINUS (LIST X1 X2) '(RLTOOLS))))) 
(PUT 'LTO_SGNCHG 'NUMBER-OF-ARGS 1) 
(SAFE-PUTD 'LTO_SGNCHG 'EXPR
           (FUNCTION
            (LAMBDA (X1) (DO-AUTOLOAD 'LTO_SGNCHG (LIST X1) '(RLTOOLS))))) 
(PUT 'LTO_STRING2ID 'NUMBER-OF-ARGS 1) 
(SAFE-PUTD 'LTO_STRING2ID 'EXPR
           (FUNCTION
            (LAMBDA (X1) (DO-AUTOLOAD 'LTO_STRING2ID (LIST X1) '(RLTOOLS))))) 
(PUT 'LTO_STRINGDESCRIPTIONLIST 'NUMBER-OF-ARGS 5) 
(SAFE-PUTD 'LTO_STRINGDESCRIPTIONLIST 'EXPR
           (FUNCTION
            (LAMBDA (X1 X2 X3 X4 X5)
              (DO-AUTOLOAD 'LTO_STRINGDESCRIPTIONLIST (LIST X1 X2 X3 X4 X5)
                           '(RLTOOLS))))) 
(PUT 'LTO_STRINGPARAGRAPH 'NUMBER-OF-ARGS 3) 
(SAFE-PUTD 'LTO_STRINGPARAGRAPH 'EXPR
           (FUNCTION
            (LAMBDA (X1 X2 X3)
              (DO-AUTOLOAD 'LTO_STRINGPARAGRAPH (LIST X1 X2 X3) '(RLTOOLS))))) 
(PUT 'LTO_STRINGSPLIT 'NUMBER-OF-ARGS 2) 
(SAFE-PUTD 'LTO_STRINGSPLIT 'EXPR
           (FUNCTION
            (LAMBDA (X1 X2)
              (DO-AUTOLOAD 'LTO_STRINGSPLIT (LIST X1 X2) '(RLTOOLS))))) 
(PUT 'LTO_SUBLISTP 'NUMBER-OF-ARGS 2) 
(SAFE-PUTD 'LTO_SUBLISTP 'EXPR
           (FUNCTION
            (LAMBDA (X1 X2)
              (DO-AUTOLOAD 'LTO_SUBLISTP (LIST X1 X2) '(RLTOOLS))))) 
(PUT 'LTO_SUBSET 'NUMBER-OF-ARGS 2) 
(SAFE-PUTD 'LTO_SUBSET 'EXPR
           (FUNCTION
            (LAMBDA (X1 X2) (DO-AUTOLOAD 'LTO_SUBSET (LIST X1 X2) '(RLTOOLS))))) 
(PUT 'LTO_SUBSETQ 'NUMBER-OF-ARGS 2) 
(SAFE-PUTD 'LTO_SUBSETQ 'EXPR
           (FUNCTION
            (LAMBDA (X1 X2)
              (DO-AUTOLOAD 'LTO_SUBSETQ (LIST X1 X2) '(RLTOOLS))))) 
(PUT 'LTO_UNIONN 'NUMBER-OF-ARGS 1) 
(SAFE-PUTD 'LTO_UNIONN 'EXPR
           (FUNCTION
            (LAMBDA (X1) (DO-AUTOLOAD 'LTO_UNIONN (LIST X1) '(RLTOOLS))))) 
(PUT 'LTO_ZIP 'NUMBER-OF-ARGS 3) 
(SAFE-PUTD 'LTO_ZIP 'EXPR
           (FUNCTION
            (LAMBDA (X1 X2 X3)
              (DO-AUTOLOAD 'LTO_ZIP (LIST X1 X2 X3) '(RLTOOLS))))) 
(PUT 'SFTO_ALLCOEFFS 'NUMBER-OF-ARGS 2) 
(SAFE-PUTD 'SFTO_ALLCOEFFS 'EXPR
           (FUNCTION
            (LAMBDA (X1 X2)
              (DO-AUTOLOAD 'SFTO_ALLCOEFFS (LIST X1 X2) '(RLTOOLS))))) 
(PUT 'SFTO_AVGQ 'NUMBER-OF-ARGS 2) 
(SAFE-PUTD 'SFTO_AVGQ 'EXPR
           (FUNCTION
            (LAMBDA (X1 X2) (DO-AUTOLOAD 'SFTO_AVGQ (LIST X1 X2) '(RLTOOLS))))) 
(PUT 'SFTO_DCONTENTF 'NUMBER-OF-ARGS 1) 
(SAFE-PUTD 'SFTO_DCONTENTF 'EXPR
           (FUNCTION
            (LAMBDA (X1) (DO-AUTOLOAD 'SFTO_DCONTENTF (LIST X1) '(RLTOOLS))))) 
(PUT 'SFTO_DECDEGF 'NUMBER-OF-ARGS 3) 
(SAFE-PUTD 'SFTO_DECDEGF 'EXPR
           (FUNCTION
            (LAMBDA (X1 X2 X3)
              (DO-AUTOLOAD 'SFTO_DECDEGF (LIST X1 X2 X3) '(RLTOOLS))))) 
(PUT 'SFTO_DGCDF 'NUMBER-OF-ARGS 2) 
(SAFE-PUTD 'SFTO_DGCDF 'EXPR
           (FUNCTION
            (LAMBDA (X1 X2) (DO-AUTOLOAD 'SFTO_DGCDF (LIST X1 X2) '(RLTOOLS))))) 
(PUT 'SFTO_DPRPARTF 'NUMBER-OF-ARGS 1) 
(SAFE-PUTD 'SFTO_DPRPARTF 'EXPR
           (FUNCTION
            (LAMBDA (X1) (DO-AUTOLOAD 'SFTO_DPRPARTF (LIST X1) '(RLTOOLS))))) 
(PUT 'SFTO_DPRPARTKSF 'NUMBER-OF-ARGS 1) 
(SAFE-PUTD 'SFTO_DPRPARTKSF 'EXPR
           (FUNCTION
            (LAMBDA (X1) (DO-AUTOLOAD 'SFTO_DPRPARTKSF (LIST X1) '(RLTOOLS))))) 
(PUT 'SFTO_EXTEUCD 'NUMBER-OF-ARGS 2) 
(SAFE-PUTD 'SFTO_EXTEUCD 'EXPR
           (FUNCTION
            (LAMBDA (X1 X2)
              (DO-AUTOLOAD 'SFTO_EXTEUCD (LIST X1 X2) '(RLTOOLS))))) 
(PUT 'SFTO_FCTRF 'NUMBER-OF-ARGS 1) 
(SAFE-PUTD 'SFTO_FCTRF 'EXPR
           (FUNCTION
            (LAMBDA (X1) (DO-AUTOLOAD 'SFTO_FCTRF (LIST X1) '(RLTOOLS))))) 
(PUT 'SFTO_FLOATSUB 'NUMBER-OF-ARGS 2) 
(SAFE-PUTD 'SFTO_FLOATSUB 'EXPR
           (FUNCTION
            (LAMBDA (X1 X2)
              (DO-AUTOLOAD 'SFTO_FLOATSUB (LIST X1 X2) '(RLTOOLS))))) 
(PUT 'SFTO_FSUB 'NUMBER-OF-ARGS 2) 
(SAFE-PUTD 'SFTO_FSUB 'EXPR
           (FUNCTION
            (LAMBDA (X1 X2) (DO-AUTOLOAD 'SFTO_FSUB (LIST X1 X2) '(RLTOOLS))))) 
(PUT 'SFTO_FSUB1 'NUMBER-OF-ARGS 2) 
(SAFE-PUTD 'SFTO_FSUB1 'EXPR
           (FUNCTION
            (LAMBDA (X1 X2) (DO-AUTOLOAD 'SFTO_FSUB1 (LIST X1 X2) '(RLTOOLS))))) 
(PUT 'SFTO_GCDF* 'NUMBER-OF-ARGS 2) 
(SAFE-PUTD 'SFTO_GCDF* 'EXPR
           (FUNCTION
            (LAMBDA (X1 X2) (DO-AUTOLOAD 'SFTO_GCDF* (LIST X1 X2) '(RLTOOLS))))) 
(PUT 'SFTO_GREATERQ 'NUMBER-OF-ARGS 2) 
(SAFE-PUTD 'SFTO_GREATERQ 'EXPR
           (FUNCTION
            (LAMBDA (X1 X2)
              (DO-AUTOLOAD 'SFTO_GREATERQ (LIST X1 X2) '(RLTOOLS))))) 
(PUT 'SFTO_IDVARF 'NUMBER-OF-ARGS 1) 
(SAFE-PUTD 'SFTO_IDVARF 'EXPR
           (FUNCTION
            (LAMBDA (X1) (DO-AUTOLOAD 'SFTO_IDVARF (LIST X1) '(RLTOOLS))))) 
(PUT 'SFTO_INT2SF 'NUMBER-OF-ARGS 1) 
(SAFE-PUTD 'SFTO_INT2SF 'EXPR
           (FUNCTION
            (LAMBDA (X1) (DO-AUTOLOAD 'SFTO_INT2SF (LIST X1) '(RLTOOLS))))) 
(PUT 'SFTO_KERNELP 'NUMBER-OF-ARGS 1) 
(SAFE-PUTD 'SFTO_KERNELP 'EXPR
           (FUNCTION
            (LAMBDA (X1) (DO-AUTOLOAD 'SFTO_KERNELP (LIST X1) '(RLTOOLS))))) 
(PUT 'SFTO_KMEMBERF 'NUMBER-OF-ARGS 2) 
(SAFE-PUTD 'SFTO_KMEMBERF 'EXPR
           (FUNCTION
            (LAMBDA (X1 X2)
              (DO-AUTOLOAD 'SFTO_KMEMBERF (LIST X1 X2) '(RLTOOLS))))) 
(PUT 'SFTO_LCMN 'NUMBER-OF-ARGS 2) 
(SAFE-PUTD 'SFTO_LCMN 'EXPR
           (FUNCTION
            (LAMBDA (X1 X2) (DO-AUTOLOAD 'SFTO_LCMN (LIST X1 X2) '(RLTOOLS))))) 
(PUT 'SFTO_LCX 'NUMBER-OF-ARGS 1) 
(SAFE-PUTD 'SFTO_LCX 'EXPR
           (FUNCTION
            (LAMBDA (X1) (DO-AUTOLOAD 'SFTO_LCX (LIST X1) '(RLTOOLS))))) 
(PUT 'SFTO_LESSQ 'NUMBER-OF-ARGS 2) 
(SAFE-PUTD 'SFTO_LESSQ 'EXPR
           (FUNCTION
            (LAMBDA (X1 X2) (DO-AUTOLOAD 'SFTO_LESSQ (LIST X1 X2) '(RLTOOLS))))) 
(PUT 'SFTO_LINWPP 'NUMBER-OF-ARGS 2) 
(SAFE-PUTD 'SFTO_LINWPP 'EXPR
           (FUNCTION
            (LAMBDA (X1 X2)
              (DO-AUTOLOAD 'SFTO_LINWPP (LIST X1 X2) '(RLTOOLS))))) 
(PUT 'SFTO_LMQ 'NUMBER-OF-ARGS 1) 
(SAFE-PUTD 'SFTO_LMQ 'EXPR
           (FUNCTION
            (LAMBDA (X1) (DO-AUTOLOAD 'SFTO_LMQ (LIST X1) '(RLTOOLS))))) 
(PUT 'SFTO_LMULTF 'NUMBER-OF-ARGS 1) 
(SAFE-PUTD 'SFTO_LMULTF 'EXPR
           (FUNCTION
            (LAMBDA (X1) (DO-AUTOLOAD 'SFTO_LMULTF (LIST X1) '(RLTOOLS))))) 
(PUT 'SFTO_LREORDER 'NUMBER-OF-ARGS 2) 
(SAFE-PUTD 'SFTO_LREORDER 'EXPR
           (FUNCTION
            (LAMBDA (X1 X2)
              (DO-AUTOLOAD 'SFTO_LREORDER (LIST X1 X2) '(RLTOOLS))))) 
(PUT 'SFTO_MKPOWQ 'NUMBER-OF-ARGS 2) 
(SAFE-PUTD 'SFTO_MKPOWQ 'EXPR
           (FUNCTION
            (LAMBDA (X1 X2)
              (DO-AUTOLOAD 'SFTO_MKPOWQ (LIST X1 X2) '(RLTOOLS))))) 
(PUT 'SFTO_MONFP 'NUMBER-OF-ARGS 1) 
(SAFE-PUTD 'SFTO_MONFP 'EXPR
           (FUNCTION
            (LAMBDA (X1) (DO-AUTOLOAD 'SFTO_MONFP (LIST X1) '(RLTOOLS))))) 
(PUT 'SFTO_MVARTEST 'NUMBER-OF-ARGS 2) 
(SAFE-PUTD 'SFTO_MVARTEST 'EXPR
           (FUNCTION
            (LAMBDA (X1 X2)
              (DO-AUTOLOAD 'SFTO_MVARTEST (LIST X1 X2) '(RLTOOLS))))) 
(PUT 'SFTO_MVARX 'NUMBER-OF-ARGS 1) 
(SAFE-PUTD 'SFTO_MVARX 'EXPR
           (FUNCTION
            (LAMBDA (X1) (DO-AUTOLOAD 'SFTO_MVARX (LIST X1) '(RLTOOLS))))) 
(PUT 'SFTO_PDECF 'NUMBER-OF-ARGS 1) 
(SAFE-PUTD 'SFTO_PDECF 'EXPR
           (FUNCTION
            (LAMBDA (X1) (DO-AUTOLOAD 'SFTO_PDECF (LIST X1) '(RLTOOLS))))) 
(PUT 'SFTO_QSUB 'NUMBER-OF-ARGS 2) 
(SAFE-PUTD 'SFTO_QSUB 'EXPR
           (FUNCTION
            (LAMBDA (X1 X2) (DO-AUTOLOAD 'SFTO_QSUB (LIST X1 X2) '(RLTOOLS))))) 
(PUT 'SFTO_QSUB1 'NUMBER-OF-ARGS 2) 
(SAFE-PUTD 'SFTO_QSUB1 'EXPR
           (FUNCTION
            (LAMBDA (X1 X2) (DO-AUTOLOAD 'SFTO_QSUB1 (LIST X1 X2) '(RLTOOLS))))) 
(PUT 'SFTO_QSUBHOR 'NUMBER-OF-ARGS 3) 
(SAFE-PUTD 'SFTO_QSUBHOR 'EXPR
           (FUNCTION
            (LAMBDA (X1 X2 X3)
              (DO-AUTOLOAD 'SFTO_QSUBHOR (LIST X1 X2 X3) '(RLTOOLS))))) 
(PUT 'SFTO_QSUBHOR1 'NUMBER-OF-ARGS 3) 
(SAFE-PUTD 'SFTO_QSUBHOR1 'EXPR
           (FUNCTION
            (LAMBDA (X1 X2 X3)
              (DO-AUTOLOAD 'SFTO_QSUBHOR1 (LIST X1 X2 X3) '(RLTOOLS))))) 
(PUT 'SFTO_REDX 'NUMBER-OF-ARGS 1) 
(SAFE-PUTD 'SFTO_REDX 'EXPR
           (FUNCTION
            (LAMBDA (X1) (DO-AUTOLOAD 'SFTO_REDX (LIST X1) '(RLTOOLS))))) 
(PUT 'SFTO_RENAMEALF 'NUMBER-OF-ARGS 2) 
(SAFE-PUTD 'SFTO_RENAMEALF 'EXPR
           (FUNCTION
            (LAMBDA (X1 X2)
              (DO-AUTOLOAD 'SFTO_RENAMEALF (LIST X1 X2) '(RLTOOLS))))) 
(PUT 'SFTO_RENAMEF 'NUMBER-OF-ARGS 3) 
(SAFE-PUTD 'SFTO_RENAMEF 'EXPR
           (FUNCTION
            (LAMBDA (X1 X2 X3)
              (DO-AUTOLOAD 'SFTO_RENAMEF (LIST X1 X2 X3) '(RLTOOLS))))) 
(PUT 'SFTO_REORDER 'NUMBER-OF-ARGS 2) 
(SAFE-PUTD 'SFTO_REORDER 'EXPR
           (FUNCTION
            (LAMBDA (X1 X2)
              (DO-AUTOLOAD 'SFTO_REORDER (LIST X1 X2) '(RLTOOLS))))) 
(PUT 'SFTO_RESF 'NUMBER-OF-ARGS 3) 
(SAFE-PUTD 'SFTO_RESF 'EXPR
           (FUNCTION
            (LAMBDA (X1 X2 X3)
              (DO-AUTOLOAD 'SFTO_RESF (LIST X1 X2 X3) '(RLTOOLS))))) 
(PUT 'SFTO_SF2INT 'NUMBER-OF-ARGS 1) 
(SAFE-PUTD 'SFTO_SF2INT 'EXPR
           (FUNCTION
            (LAMBDA (X1) (DO-AUTOLOAD 'SFTO_SF2INT (LIST X1) '(RLTOOLS))))) 
(PUT 'SFTO_SF2MONL 'NUMBER-OF-ARGS 1) 
(SAFE-PUTD 'SFTO_SF2MONL 'EXPR
           (FUNCTION
            (LAMBDA (X1) (DO-AUTOLOAD 'SFTO_SF2MONL (LIST X1) '(RLTOOLS))))) 
(PUT 'SFTO_SF2MONLIP 'NUMBER-OF-ARGS 1) 
(SAFE-PUTD 'SFTO_SF2MONLIP 'EXPR
           (FUNCTION
            (LAMBDA (X1) (DO-AUTOLOAD 'SFTO_SF2MONLIP (LIST X1) '(RLTOOLS))))) 
(PUT 'SFTO_SQFDECF 'NUMBER-OF-ARGS 1) 
(SAFE-PUTD 'SFTO_SQFDECF 'EXPR
           (FUNCTION
            (LAMBDA (X1) (DO-AUTOLOAD 'SFTO_SQFDECF (LIST X1) '(RLTOOLS))))) 
(PUT 'SFTO_SQFPARTF 'NUMBER-OF-ARGS 1) 
(SAFE-PUTD 'SFTO_SQFPARTF 'EXPR
           (FUNCTION
            (LAMBDA (X1) (DO-AUTOLOAD 'SFTO_SQFPARTF (LIST X1) '(RLTOOLS))))) 
(PUT 'SFTO_SQFPARTZ 'NUMBER-OF-ARGS 1) 
(SAFE-PUTD 'SFTO_SQFPARTZ 'EXPR
           (FUNCTION
            (LAMBDA (X1) (DO-AUTOLOAD 'SFTO_SQFPARTZ (LIST X1) '(RLTOOLS))))) 
(PUT 'SFTO_SQRTF 'NUMBER-OF-ARGS 1) 
(SAFE-PUTD 'SFTO_SQRTF 'EXPR
           (FUNCTION
            (LAMBDA (X1) (DO-AUTOLOAD 'SFTO_SQRTF (LIST X1) '(RLTOOLS))))) 
(PUT 'SFTO_TRUNCQ 'NUMBER-OF-ARGS 2) 
(SAFE-PUTD 'SFTO_TRUNCQ 'EXPR
           (FUNCTION
            (LAMBDA (X1 X2)
              (DO-AUTOLOAD 'SFTO_TRUNCQ (LIST X1 X2) '(RLTOOLS))))) 
(PUT 'SFTO_TSQSUMF 'NUMBER-OF-ARGS 1) 
(SAFE-PUTD 'SFTO_TSQSUMF 'EXPR
           (FUNCTION
            (LAMBDA (X1) (DO-AUTOLOAD 'SFTO_TSQSUMF (LIST X1) '(RLTOOLS))))) 
(PUT 'SFTO_UCONTENTF 'NUMBER-OF-ARGS 1) 
(SAFE-PUTD 'SFTO_UCONTENTF 'EXPR
           (FUNCTION
            (LAMBDA (X1) (DO-AUTOLOAD 'SFTO_UCONTENTF (LIST X1) '(RLTOOLS))))) 
(PUT 'SFTO_VARISNUMP 'NUMBER-OF-ARGS 1) 
(SAFE-PUTD 'SFTO_VARISNUMP 'EXPR
           (FUNCTION
            (LAMBDA (X1) (DO-AUTOLOAD 'SFTO_VARISNUMP (LIST X1) '(RLTOOLS))))) 
(PUT 'SFTO_VARDEG 'NUMBER-OF-ARGS 2) 
(SAFE-PUTD 'SFTO_VARDEG 'EXPR
           (FUNCTION
            (LAMBDA (X1 X2)
              (DO-AUTOLOAD 'SFTO_VARDEG (LIST X1 X2) '(RLTOOLS))))) 
(PUT 'SFTO_VARF 'NUMBER-OF-ARGS 1) 
(SAFE-PUTD 'SFTO_VARF 'EXPR
           (FUNCTION
            (LAMBDA (X1) (DO-AUTOLOAD 'SFTO_VARF (LIST X1) '(RLTOOLS))))) 
(PUT 'SFTO_VARP 'NUMBER-OF-ARGS 1) 
(SAFE-PUTD 'SFTO_VARP 'EXPR
           (FUNCTION
            (LAMBDA (X1) (DO-AUTOLOAD 'SFTO_VARP (LIST X1) '(RLTOOLS))))) 
(PUT 'SFTO_ZDEQN 'NUMBER-OF-ARGS 2) 
(SAFE-PUTD 'SFTO_ZDEQN 'EXPR
           (FUNCTION
            (LAMBDA (X1 X2) (DO-AUTOLOAD 'SFTO_ZDEQN (LIST X1 X2) '(RLTOOLS))))) 
(FLAG '(FASTRESULTANT) 'OPFN) 
(PUT 'FASTRESULTANT 'NUMBER-OF-ARGS 3) 
(SAFE-PUTD 'FASTRESULTANT 'EXPR
           (FUNCTION
            (LAMBDA (X1 X2 X3)
              (DO-AUTOLOAD 'FASTRESULTANT (LIST X1 X2 X3) '(RLTOOLS))))) 
(PUT 'REVISION 'NUMBER-OF-ARGS 2) 
(SAFE-PUTD 'REVISION 'EXPR
           (FUNCTION
            (LAMBDA (X1 X2) (DO-AUTOLOAD 'REVISION (LIST X1 X2) '(RLSUPPORT))))) 
(PUT 'COPYRIGHT 'NUMBER-OF-ARGS 2) 
(SAFE-PUTD 'COPYRIGHT 'EXPR
           (FUNCTION
            (LAMBDA (X1 X2)
              (DO-AUTOLOAD 'COPYRIGHT (LIST X1 X2) '(RLSUPPORT))))) 
(PUT 'RL_PROVIDESERVICE 'STAT 'RL_PROVIDESERVICESTAT) 
(PUT 'RL_PROVIDESERVICESTAT 'NUMBER-OF-ARGS 0) 
(SAFE-PUTD 'RL_PROVIDESERVICESTAT 'EXPR
           (FUNCTION
            (LAMBDA ()
              (DO-AUTOLOAD 'RL_PROVIDESERVICESTAT (LIST) '(RLSUPPORT))))) 
(PUT 'RL_TYPE 'STAT 'RL_TYPESTAT) 
(PUT 'RL_TYPESTAT 'NUMBER-OF-ARGS 0) 
(SAFE-PUTD 'RL_TYPESTAT 'EXPR
           (FUNCTION
            (LAMBDA () (DO-AUTOLOAD 'RL_TYPESTAT (LIST) '(RLSUPPORT))))) 
(PUT 'RL_BUILTIN 'STAT 'RL_BUILTINSTAT) 
(PUT 'RL_BUILTINSTAT 'NUMBER-OF-ARGS 0) 
(SAFE-PUTD 'RL_BUILTINSTAT 'EXPR
           (FUNCTION
            (LAMBDA () (DO-AUTOLOAD 'RL_BUILTINSTAT (LIST) '(RLSUPPORT))))) 
(PUT 'RL_SERVICE 'STAT 'RL_SERVICESTAT) 
(PUT 'RL_SERVICESTAT 'NUMBER-OF-ARGS 0) 
(SAFE-PUTD 'RL_SERVICESTAT 'EXPR
           (FUNCTION
            (LAMBDA () (DO-AUTOLOAD 'RL_SERVICESTAT (LIST) '(RLSUPPORT))))) 
(PUT 'RL_BLACKBOX 'STAT 'RL_BLACKBOXSTAT) 
(PUT 'RL_BLACKBOXSTAT 'NUMBER-OF-ARGS 0) 
(SAFE-PUTD 'RL_BLACKBOXSTAT 'EXPR
           (FUNCTION
            (LAMBDA () (DO-AUTOLOAD 'RL_BLACKBOXSTAT (LIST) '(RLSUPPORT))))) 
(PUT 'RL_SERVICEWRAPPER 'NUMBER-OF-ARGS 8) 
(SAFE-PUTD 'RL_SERVICEWRAPPER 'EXPR
           (FUNCTION
            (LAMBDA (X1 X2 X3 X4 X5 X6 X7 X8)
              (DO-AUTOLOAD 'RL_SERVICEWRAPPER (LIST X1 X2 X3 X4 X5 X6 X7 X8)
                           '(RLSUPPORT))))) 
(PUT 'RL_EXC 'NUMBER-OF-ARGS 1) 
(SAFE-PUTD 'RL_EXC 'EXPR
           (FUNCTION
            (LAMBDA (X1) (DO-AUTOLOAD 'RL_EXC (LIST X1) '(RLSUPPORT))))) 
(PUT 'RL_EXCP 'NUMBER-OF-ARGS 1) 
(SAFE-PUTD 'RL_EXCP 'EXPR
           (FUNCTION
            (LAMBDA (X1) (DO-AUTOLOAD 'RL_EXCP (LIST X1) '(RLSUPPORT))))) 
(PUT 'RL_EXCEPTION 'NUMBER-OF-ARGS 1) 
(SAFE-PUTD 'RL_EXCEPTION 'EXPR
           (FUNCTION
            (LAMBDA (X1) (DO-AUTOLOAD 'RL_EXCEPTION (LIST X1) '(RLSUPPORT))))) 
(PUT 'RL_EXCEPTIONP 'NUMBER-OF-ARGS 1) 
(SAFE-PUTD 'RL_EXCEPTIONP 'EXPR
           (FUNCTION
            (LAMBDA (X1) (DO-AUTOLOAD 'RL_EXCEPTIONP (LIST X1) '(RLSUPPORT))))) 
(SWITCH (LIST (LIST 'EQUAL 'RLABOUT 'ON))) 
(PUT 'RLSET 'PSOPFN 'RL_SET$) 
(PUT 'RL_SET$ 'NUMBER-OF-ARGS 1) 
(SAFE-PUTD 'RL_SET$ 'EXPR
           (FUNCTION (LAMBDA (X1) (DO-AUTOLOAD 'RL_SET$ (LIST X1) '(REDLOG))))) 
(PUT 'RL_SET 'NUMBER-OF-ARGS 1) 
(SAFE-PUTD 'RL_SET 'EXPR
           (FUNCTION (LAMBDA (X1) (DO-AUTOLOAD 'RL_SET (LIST X1) '(REDLOG))))) 
(PUT 'RL_COPYC 'NUMBER-OF-ARGS 2) 
(SAFE-PUTD 'RL_COPYC 'EXPR
           (FUNCTION
            (LAMBDA (X1 X2) (DO-AUTOLOAD 'RL_COPYC (LIST X1 X2) '(REDLOG))))) 
(SWITCH (LIST 'QHULLKEEPFILES)) 
(FLAG '(QHULL) 'OPFN) 
(PUT 'QHULL 'NUMBER-OF-ARGS 1) 
(SAFE-PUTD 'QHULL 'EXPR
           (FUNCTION (LAMBDA (X1) (DO-AUTOLOAD 'QHULL (LIST X1) '(QHULL))))) 
(PUT 'QHULL_QHULL 'NUMBER-OF-ARGS 1) 
(SAFE-PUTD 'QHULL_QHULL 'EXPR
           (FUNCTION
            (LAMBDA (X1) (DO-AUTOLOAD 'QHULL_QHULL (LIST X1) '(QHULL))))) 
(PUT 'GUROBI_NEWMODEL 'NUMBER-OF-ARGS 2) 
(SAFE-PUTD 'GUROBI_NEWMODEL 'EXPR
           (FUNCTION
            (LAMBDA (X1 X2)
              (DO-AUTOLOAD 'GUROBI_NEWMODEL (LIST X1 X2) '(GUROBI))))) 
(SWITCH (LIST 'BATCH_MODE)) 
(PUT 'BACKUP_REDUCE_FLAGS 'NUMBER-OF-ARGS 0) 
(SAFE-PUTD 'BACKUP_REDUCE_FLAGS 'EXPR
           (FUNCTION
            (LAMBDA () (DO-AUTOLOAD 'BACKUP_REDUCE_FLAGS (LIST) '(CRACK))))) 
(FLAG '(SETCRACKFLAGS) 'OPFN) 
(PUT 'SETCRACKFLAGS 'NUMBER-OF-ARGS 0) 
(SAFE-PUTD 'SETCRACKFLAGS 'EXPR
           (FUNCTION (LAMBDA () (DO-AUTOLOAD 'SETCRACKFLAGS (LIST) '(CRACK))))) 
(PUT 'LIEPDE 'NUMBER-OF-ARGS 4) 
(SAFE-PUTD 'LIEPDE 'EXPR
           (FUNCTION
            (LAMBDA (X1 X2 X3 X4)
              (DO-AUTOLOAD 'LIEPDE (LIST X1 X2 X3 X4) '(LIEPDE))))) 
(PUT 'EINFACHST 'NUMBER-OF-ARGS 2) 
(SAFE-PUTD 'EINFACHST 'EXPR
           (FUNCTION
            (LAMBDA (X1 X2) (DO-AUTOLOAD 'EINFACHST (LIST X1 X2) '(APPLYSYM))))) 
(FLUID '(*ASSERT ASSERT_FUNCTIONL*)) 
(SWITCH (LIST 'ASSERT)) 
(SWITCH (LIST 'ASSERT_PROCEDURES 'ASSERT_INLINE_PROCEDURES)) 
(SWITCH (LIST 'ASSERTINSTALL)) 
(SWITCH (LIST 'EVALASSERT)) 
(SWITCH (LIST 'ASSERTBREAK 'ASSERTSTATISTICS)) 
(REMPROP 'ASSERT_INSTALL 'STAT) 
(REMPROP 'ASSERT_UNINSTALL 'STAT) 
(PUT 'ASSERT 'SIMPFG '((T (ASSERT_ONOFF)) (NIL (ASSERT_ONOFF)))) 
(PUT 'ASSERT_ONOFF 'NUMBER-OF-ARGS 0) 
(SAFE-PUTD 'ASSERT_ONOFF 'EXPR
           (FUNCTION (LAMBDA () (DO-AUTOLOAD 'ASSERT_ONOFF (LIST) '(ASSERT))))) 
(PUT 'ASSERT_DECLARESTAT 'NUMBER-OF-ARGS 0) 
(SAFE-PUTD 'ASSERT_DECLARESTAT 'EXPR
           (FUNCTION
            (LAMBDA () (DO-AUTOLOAD 'ASSERT_DECLARESTAT (LIST) '(ASSERT))))) 
(PUT 'DECLARE 'STAT 'ASSERT_DECLARESTAT) 
(PUT 'ASSERT_STRUCTSTAT 'NUMBER-OF-ARGS 0) 
(SAFE-PUTD 'ASSERT_STRUCTSTAT 'EXPR
           (FUNCTION
            (LAMBDA () (DO-AUTOLOAD 'ASSERT_STRUCTSTAT (LIST) '(ASSERT))))) 
(PUT 'STRUCT 'STAT 'ASSERT_STRUCTSTAT) 
(PUT 'ASSERT_PROCSTAT 'NUMBER-OF-ARGS 0) 
(SAFE-PUTD 'ASSERT_PROCSTAT 'EXPR
           (FUNCTION
            (LAMBDA () (DO-AUTOLOAD 'ASSERT_PROCSTAT (LIST) '(ASSERT))))) 
(PUT 'ASSERTED 'STAT 'ASSERT_PROCSTAT) 
(PUT 'ASSERT_INSTALL 'NUMBER-OF-ARGS 1) 
(SAFE-PUTD 'ASSERT_INSTALL 'EXPR
           (FUNCTION
            (LAMBDA (X1) (DO-AUTOLOAD 'ASSERT_INSTALL (LIST X1) '(ASSERT))))) 
(PUT 'ASSERT_INSTALL 'STAT 'RLIS) 
(PUT 'ASSERT_UNINSTALL 'NUMBER-OF-ARGS 1) 
(SAFE-PUTD 'ASSERT_UNINSTALL 'EXPR
           (FUNCTION
            (LAMBDA (X1) (DO-AUTOLOAD 'ASSERT_UNINSTALL (LIST X1) '(ASSERT))))) 
(PUT 'ASSERT_UNINSTALL 'STAT 'RLIS) 
(FLAG '(ASSERT_INSTALL_ALL) 'OPFN) 
(PUT 'ASSERT_INSTALL_ALL 'NUMBER-OF-ARGS 0) 
(SAFE-PUTD 'ASSERT_INSTALL_ALL 'EXPR
           (FUNCTION
            (LAMBDA () (DO-AUTOLOAD 'ASSERT_INSTALL_ALL (LIST) '(ASSERT))))) 
(FLAG '(ASSERT_UNINSTALL_ALL) 'OPFN) 
(PUT 'ASSERT_UNINSTALL_ALL 'NUMBER-OF-ARGS 0) 
(SAFE-PUTD 'ASSERT_UNINSTALL_ALL 'EXPR
           (FUNCTION
            (LAMBDA () (DO-AUTOLOAD 'ASSERT_UNINSTALL_ALL (LIST) '(ASSERT))))) 
(PUT 'ASSERT_INSTALL1 'NUMBER-OF-ARGS 1) 
(SAFE-PUTD 'ASSERT_INSTALL1 'EXPR
           (FUNCTION
            (LAMBDA (X1) (DO-AUTOLOAD 'ASSERT_INSTALL1 (LIST X1) '(ASSERT))))) 
(PUT 'SQP 'NUMBER-OF-ARGS 1) 
(SAFE-PUTD 'SQP 'EXPR
           (FUNCTION (LAMBDA (X1) (DO-AUTOLOAD 'SQP (LIST X1) '(ASSERT))))) 
(SWITCH (LIST 'TRACELEX 'LALR_VERBOSE)) 
(SWITCH (LIST 'PARSE_ERRORS_FATAL)) 
(PUT 'LEX_CLEANUP 'NUMBER-OF-ARGS 0) 
(SAFE-PUTD 'LEX_CLEANUP 'EXPR
           (FUNCTION (LAMBDA () (DO-AUTOLOAD 'LEX_CLEANUP (LIST) '(LALR))))) 
(PUT 'LALR_CONSTRUCT_PARSER 'NUMBER-OF-ARGS 2) 
(SAFE-PUTD 'LALR_CONSTRUCT_PARSER 'EXPR
           (FUNCTION
            (LAMBDA (X1 X2)
              (DO-AUTOLOAD 'LALR_CONSTRUCT_PARSER (LIST X1 X2) '(LALR))))) 
(PUT 'YYPARSE 'NUMBER-OF-ARGS 1) 
(SAFE-PUTD 'YYPARSE 'EXPR
           (FUNCTION (LAMBDA (X1) (DO-AUTOLOAD 'YYPARSE (LIST X1) '(LALR))))) 
(SWITCH (LIST 'RANUM)) 
(PUT 'RANUM 'SIMPFG '((T (LOAD-PACKAGE 'RANUM) (SETDMODE 'RANUM T)))) 
(PUT 'RA_X 'NUMBER-OF-ARGS 0) 
(SAFE-PUTD 'RA_X 'EXPR
           (FUNCTION (LAMBDA () (DO-AUTOLOAD 'RA_X (LIST) '(RANUM))))) 
(PUT 'RA_Y 'NUMBER-OF-ARGS 0) 
(SAFE-PUTD 'RA_Y 'EXPR
           (FUNCTION (LAMBDA () (DO-AUTOLOAD 'RA_Y (LIST) '(RANUM))))) 
(SWITCH (LIST (LIST 'EQUAL 'SMTABOUT 'ON) (LIST 'EQUAL 'SMTPROMPT 'ON))) 
(PUT 'SMT 'PSOPFN 'SMT_SMT) 
(PUT 'SMT_SMT 'NUMBER-OF-ARGS 1) 
(SAFE-PUTD 'SMT_SMT 'EXPR
           (FUNCTION (LAMBDA (X1) (DO-AUTOLOAD 'SMT_SMT (LIST X1) '(SMT))))) 
(FLAG '(SMT_MAINLOOP) 'OPFN) 
(PUT 'SMT_MAINLOOP 'NUMBER-OF-ARGS 0) 
(SAFE-PUTD 'SMT_MAINLOOP 'EXPR
           (FUNCTION (LAMBDA () (DO-AUTOLOAD 'SMT_MAINLOOP (LIST) '(SMT))))) 
(SWITCH (LIST 'TRLIMIT)) 
(PUT 'MRV_LIMIT 'PSOPFN 'MRV_LIMIT) 
(PUT 'MRV_LIMIT 'NUMBER-OF-ARGS 1) 
(SAFE-PUTD 'MRV_LIMIT 'EXPR
           (FUNCTION
            (LAMBDA (X1) (DO-AUTOLOAD 'MRV_LIMIT (LIST X1) '(MRVLIMIT))))) 
(SWITCH (LIST (LIST 'EQUAL 'F5FRACTIONFREE 'OFF))) 
(SWITCH (LIST (LIST 'EQUAL 'F5INTERREDUCE 'OFF))) 
(SWITCH (LIST (LIST 'EQUAL 'F5STATISTICS 'OFF))) 
(SWITCH (LIST (LIST 'EQUAL 'F5SUGAR 'ON))) 
(SWITCH (LIST (LIST 'EQUAL 'F5USEF5C 'OFF))) 
(SWITCH (LIST (LIST 'EQUAL 'F5PARAMETRIC 'OFF))) 
(SWITCH (LIST (LIST 'EQUAL 'F5PARAMETRICNORMALIZE 'OFF))) 
(PUT 'F5 'PSOPFN 'F5_GROEBNER) 
(PUT 'F5_GROEBNER 'NUMBER-OF-ARGS 1) 
(SAFE-PUTD 'F5_GROEBNER 'EXPR
           (FUNCTION (LAMBDA (X1) (DO-AUTOLOAD 'F5_GROEBNER (LIST X1) '(F5))))) 
(PUT 'F5DUMPASSUMPTIONS 'NUMBER-OF-ARGS 0) 
(SAFE-PUTD 'F5DUMPASSUMPTIONS 'EXPR
           (FUNCTION (LAMBDA () (DO-AUTOLOAD 'F5DUMPASSUMPTIONS (LIST) '(F5))))) 
(PUT 'TORDER 'PSOPFN 'TORDER) 
(PUT 'TORDER 'NUMBER-OF-ARGS 1) 
(SAFE-PUTD 'TORDER 'EXPR
           (FUNCTION (LAMBDA (X1) (DO-AUTOLOAD 'TORDER (LIST X1) '(DIPOLY))))) 
(REMPROP 'SPARSE 'STAT) 
(PUT 'SPARSE 'NUMBER-OF-ARGS 1) 
(SAFE-PUTD 'SPARSE 'EXPR
           (FUNCTION (LAMBDA (X1) (DO-AUTOLOAD 'SPARSE (LIST X1) '(SPARSE))))) 
(PUT 'SPARSE 'STAT 'RLIS) 
(ENDMODULE) 