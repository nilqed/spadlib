(cl:declaim (cl:optimize cl:debug cl:safety))
(cl:declaim (sb-ext:muffle-conditions sb-ext:compiler-note cl:style-warning))
(MODULE (LIST 'XCOLOR)) 
(IMPORTS (LIST 'ADDSQ 'MULTSQ 'NEGSQ 'QUOTSQ 'EXPTSQ)) 
(EXPORTS (LIST 'COLOR0)) 
(CREATE-PACKAGE '(XCOLOR CFACE) '(CONTRIB PHYSICS)) 
(DE GETCOEF (G0) (CAR G0)) 
(PUT 'GETCOEF 'NUMBER-OF-ARGS 1) 
(PUT 'GETCOEF 'DEFINED-ON-LINE '114) 
(PUT 'GETCOEF 'DEFINED-IN-FILE 'XCOLOR/XCOLOR.RED) 
(PUT 'GETCOEF 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(PUTC 'GETCOEF 'INLINE '(LAMBDA (G0) (CAR G0))) 
(DE GETVL (G0) (CDR G0)) 
(PUT 'GETVL 'NUMBER-OF-ARGS 1) 
(PUT 'GETVL 'DEFINED-ON-LINE '115) 
(PUT 'GETVL 'DEFINED-IN-FILE 'XCOLOR/XCOLOR.RED) 
(PUT 'GETVL 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(PUTC 'GETVL 'INLINE '(LAMBDA (G0) (CDR G0))) 
(DE PUTCOEF (G0 C) (RPLACA G0 C)) 
(PUT 'PUTCOEF 'NUMBER-OF-ARGS 2) 
(PUT 'PUTCOEF 'DEFINED-ON-LINE '117) 
(PUT 'PUTCOEF 'DEFINED-IN-FILE 'XCOLOR/XCOLOR.RED) 
(PUT 'PUTCOEF 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(PUTC 'PUTCOEF 'INLINE '(LAMBDA (G0 C) (RPLACA G0 C))) 
(DE PUTVL (G0 VL) (RPLACD G0 VL)) 
(PUT 'PUTVL 'NUMBER-OF-ARGS 2) 
(PUT 'PUTVL 'DEFINED-ON-LINE '118) 
(PUT 'PUTVL 'DEFINED-IN-FILE 'XCOLOR/XCOLOR.RED) 
(PUT 'PUTVL 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(PUTC 'PUTVL 'INLINE '(LAMBDA (G0 VL) (RPLACD G0 VL))) 
(DE GETTV (V) (CAR V)) 
(PUT 'GETTV 'NUMBER-OF-ARGS 1) 
(PUT 'GETTV 'DEFINED-ON-LINE '120) 
(PUT 'GETTV 'DEFINED-IN-FILE 'XCOLOR/XCOLOR.RED) 
(PUT 'GETTV 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(PUTC 'GETTV 'INLINE '(LAMBDA (V) (CAR V))) 
(DE GETE1 (V) (CADR V)) 
(PUT 'GETE1 'NUMBER-OF-ARGS 1) 
(PUT 'GETE1 'DEFINED-ON-LINE '121) 
(PUT 'GETE1 'DEFINED-IN-FILE 'XCOLOR/XCOLOR.RED) 
(PUT 'GETE1 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(PUTC 'GETE1 'INLINE '(LAMBDA (V) (CADR V))) 
(DE GETE2 (V) (CADDR V)) 
(PUT 'GETE2 'NUMBER-OF-ARGS 1) 
(PUT 'GETE2 'DEFINED-ON-LINE '122) 
(PUT 'GETE2 'DEFINED-IN-FILE 'XCOLOR/XCOLOR.RED) 
(PUT 'GETE2 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(PUTC 'GETE2 'INLINE '(LAMBDA (V) (CADDR V))) 
(DE GETE3 (V) (CADDDR V)) 
(PUT 'GETE3 'NUMBER-OF-ARGS 1) 
(PUT 'GETE3 'DEFINED-ON-LINE '123) 
(PUT 'GETE3 'DEFINED-IN-FILE 'XCOLOR/XCOLOR.RED) 
(PUT 'GETE3 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(PUTC 'GETE3 'INLINE '(LAMBDA (V) (CADDDR V))) 
(DE GETINQ (V) (CADR V)) 
(PUT 'GETINQ 'NUMBER-OF-ARGS 1) 
(PUT 'GETINQ 'DEFINED-ON-LINE '124) 
(PUT 'GETINQ 'DEFINED-IN-FILE 'XCOLOR/XCOLOR.RED) 
(PUT 'GETINQ 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(PUTC 'GETINQ 'INLINE '(LAMBDA (V) (CADR V))) 
(DE GETOUTQ (V) (CADDR V)) 
(PUT 'GETOUTQ 'NUMBER-OF-ARGS 1) 
(PUT 'GETOUTQ 'DEFINED-ON-LINE '125) 
(PUT 'GETOUTQ 'DEFINED-IN-FILE 'XCOLOR/XCOLOR.RED) 
(PUT 'GETOUTQ 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(PUTC 'GETOUTQ 'INLINE '(LAMBDA (V) (CADDR V))) 
(DE PUTTV (V TV) (RPLACA V TV)) 
(PUT 'PUTTV 'NUMBER-OF-ARGS 2) 
(PUT 'PUTTV 'DEFINED-ON-LINE '127) 
(PUT 'PUTTV 'DEFINED-IN-FILE 'XCOLOR/XCOLOR.RED) 
(PUT 'PUTTV 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(PUTC 'PUTTV 'INLINE '(LAMBDA (V TV) (RPLACA V TV))) 
(DE PUTE1 (V E) (RPLACA (CDR V) E)) 
(PUT 'PUTE1 'NUMBER-OF-ARGS 2) 
(PUT 'PUTE1 'DEFINED-ON-LINE '128) 
(PUT 'PUTE1 'DEFINED-IN-FILE 'XCOLOR/XCOLOR.RED) 
(PUT 'PUTE1 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(PUTC 'PUTE1 'INLINE '(LAMBDA (V E) (RPLACA (CDR V) E))) 
(DE PUTE2 (V E) (RPLACA (CDDR V) E)) 
(PUT 'PUTE2 'NUMBER-OF-ARGS 2) 
(PUT 'PUTE2 'DEFINED-ON-LINE '129) 
(PUT 'PUTE2 'DEFINED-IN-FILE 'XCOLOR/XCOLOR.RED) 
(PUT 'PUTE2 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(PUTC 'PUTE2 'INLINE '(LAMBDA (V E) (RPLACA (CDDR V) E))) 
(DE PUTE3 (V E) (RPLACA (CDDDR V) E)) 
(PUT 'PUTE3 'NUMBER-OF-ARGS 2) 
(PUT 'PUTE3 'DEFINED-ON-LINE '130) 
(PUT 'PUTE3 'DEFINED-IN-FILE 'XCOLOR/XCOLOR.RED) 
(PUT 'PUTE3 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(PUTC 'PUTE3 'INLINE '(LAMBDA (V E) (RPLACA (CDDDR V) E))) 
(DE PUTINQ (V E) (RPLACA (CDR V) E)) 
(PUT 'PUTINQ 'NUMBER-OF-ARGS 2) 
(PUT 'PUTINQ 'DEFINED-ON-LINE '131) 
(PUT 'PUTINQ 'DEFINED-IN-FILE 'XCOLOR/XCOLOR.RED) 
(PUT 'PUTINQ 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(PUTC 'PUTINQ 'INLINE '(LAMBDA (V E) (RPLACA (CDR V) E))) 
(DE PUTOUTQ (V E) (RPLACA (CDDR V) E)) 
(PUT 'PUTOUTQ 'NUMBER-OF-ARGS 2) 
(PUT 'PUTOUTQ 'DEFINED-ON-LINE '132) 
(PUT 'PUTOUTQ 'DEFINED-IN-FILE 'XCOLOR/XCOLOR.RED) 
(PUT 'PUTOUTQ 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(PUTC 'PUTOUTQ 'INLINE '(LAMBDA (V E) (RPLACA (CDDR V) E))) 
(DE MKG0 (C G0) (CONS C G0)) 
(PUT 'MKG0 'NUMBER-OF-ARGS 2) 
(PUT 'MKG0 'DEFINED-ON-LINE '134) 
(PUT 'MKG0 'DEFINED-IN-FILE 'XCOLOR/XCOLOR.RED) 
(PUT 'MKG0 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(PUTC 'MKG0 'INLINE '(LAMBDA (C G0) (CONS C G0))) 
(DE CHKTV (V TV) (EQ (CAR V) TV)) 
(PUT 'CHKTV 'NUMBER-OF-ARGS 2) 
(PUT 'CHKTV 'DEFINED-ON-LINE '136) 
(PUT 'CHKTV 'DEFINED-IN-FILE 'XCOLOR/XCOLOR.RED) 
(PUT 'CHKTV 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(PUTC 'CHKTV 'INLINE '(LAMBDA (V TV) (EQ (CAR V) TV))) 
(DE QGVP (V) (EQ (CAR V) 'QG)) 
(PUT 'QGVP 'NUMBER-OF-ARGS 1) 
(PUT 'QGVP 'DEFINED-ON-LINE '137) 
(PUT 'QGVP 'DEFINED-IN-FILE 'XCOLOR/XCOLOR.RED) 
(PUT 'QGVP 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(PUTC 'QGVP 'INLINE '(LAMBDA (V) (EQ (CAR V) 'QG))) 
(DE G3VP (V) (EQ (CAR V) 'G3)) 
(PUT 'G3VP 'NUMBER-OF-ARGS 1) 
(PUT 'G3VP 'DEFINED-ON-LINE '138) 
(PUT 'G3VP 'DEFINED-IN-FILE 'XCOLOR/XCOLOR.RED) 
(PUT 'G3VP 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(PUTC 'G3VP 'INLINE '(LAMBDA (V) (EQ (CAR V) 'G3))) 
(DE ZCOEFP (G0) (NULL (CAR (CAR G0)))) 
(PUT 'ZCOEFP 'NUMBER-OF-ARGS 1) 
(PUT 'ZCOEFP 'DEFINED-ON-LINE '140) 
(PUT 'ZCOEFP 'DEFINED-IN-FILE 'XCOLOR/XCOLOR.RED) 
(PUT 'ZCOEFP 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(PUTC 'ZCOEFP 'INLINE '(LAMBDA (G0) (NULL (CAR (CAR G0))))) 
(DE MKCOPYG0 (G0) (CONS (CAR G0) (MKCOPY (CDR G0)))) 
(PUT 'MKCOPYG0 'NUMBER-OF-ARGS 1) 
(PUT 'MKCOPYG0 'DEFINED-ON-LINE '142) 
(PUT 'MKCOPYG0 'DEFINED-IN-FILE 'XCOLOR/XCOLOR.RED) 
(PUT 'MKCOPYG0 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(PUTC 'MKCOPYG0 'INLINE '(LAMBDA (G0) (CONS (CAR G0) (MKCOPY (CDR G0))))) 
(DE CHKHP (V)
    (OR (EQ (CADR V) (CADDR V)) (EQ (CADR V) (CADDDR V))
        (EQ (CADDR V) (CADDDR V)))) 
(PUT 'CHKHP 'NUMBER-OF-ARGS 1) 
(PUT 'CHKHP 'DEFINED-ON-LINE '148) 
(PUT 'CHKHP 'DEFINED-IN-FILE 'XCOLOR/XCOLOR.RED) 
(PUT 'CHKHP 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(PUTC 'CHKHP 'INLINE
      '(LAMBDA (V)
         (OR (EQ (CADR V) (CADDR V)) (EQ (CADR V) (CADDDR V))
             (EQ (CADDR V) (CADDDR V))))) 
(PUT 'CERROR 'NUMBER-OF-ARGS 1) 
(PUT 'CERROR 'DEFINED-ON-LINE '169) 
(PUT 'CERROR 'DEFINED-IN-FILE 'XCOLOR/XCOLOR.RED) 
(PUT 'CERROR 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE CERROR (U)
    (PROGN
     (TERPRI* T)
     (PROG (X)
       (SETQ X (CONS "***** xCOLOR:" U))
      LAB
       (COND ((NULL X) (RETURN NIL)))
       ((LAMBDA (X) (PROGN (PRIN2* " ") (MAPRIN X))) (CAR X))
       (SETQ X (CDR X))
       (GO LAB))
     (TERPRI* T)
     (ERROR1))) 
(PUT 'REMOVEV 'NUMBER-OF-ARGS 2) 
(PUT 'REMOVEV 'DEFINED-ON-LINE '182) 
(PUT 'REMOVEV 'DEFINED-IN-FILE 'XCOLOR/XCOLOR.RED) 
(PUT 'REMOVEV 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE REMOVEV (G0 V)
    (COND ((NULL G0) (CERROR (LIST "Vertex" V "is absent.")))
          ((EQ (CADR G0) V) (RPLACD G0 (CDDR G0))) (T (REMOVEV (CDR G0) V)))) 
(DE EXISTQGV (G0) (ASSOC 'QG (CDR G0))) 
(PUT 'EXISTQGV 'NUMBER-OF-ARGS 1) 
(PUT 'EXISTQGV 'DEFINED-ON-LINE '191) 
(PUT 'EXISTQGV 'DEFINED-IN-FILE 'XCOLOR/XCOLOR.RED) 
(PUT 'EXISTQGV 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(PUTC 'EXISTQGV 'INLINE '(LAMBDA (G0) (ASSOC 'QG (CDR G0)))) 
(DE EXIST3GV (G0) (ASSOC 'G3 (CDR G0))) 
(PUT 'EXIST3GV 'NUMBER-OF-ARGS 1) 
(PUT 'EXIST3GV 'DEFINED-ON-LINE '198) 
(PUT 'EXIST3GV 'DEFINED-IN-FILE 'XCOLOR/XCOLOR.RED) 
(PUT 'EXIST3GV 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(PUTC 'EXIST3GV 'INLINE '(LAMBDA (G0) (ASSOC 'G3 (CDR G0)))) 
(PUT 'MKCOPY 'NUMBER-OF-ARGS 1) 
(PUT 'MKCOPY 'DEFINED-ON-LINE '205) 
(PUT 'MKCOPY 'DEFINED-IN-FILE 'XCOLOR/XCOLOR.RED) 
(PUT 'MKCOPY 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE MKCOPY (U)
    (PROG (R)
      (PROG ()
       WHILELABEL
        (COND ((NOT (NOT (ATOM U))) (RETURN NIL)))
        (PROGN (SETQ R (CONS (MKCOPY (CAR U)) R)) (SETQ U (CDR U)))
        (GO WHILELABEL))
      (RETURN (REVERSIP2 R U)))) 
(DE REVV (V E)
    (COND
     ((OR (NULL (EQ (CAR V) 'G3)) (NULL (MEMQ E (CDR V))))
      (CERROR (LIST "Edge" E "is absent in vertex" V)))
     (T (REVV0 V E)))) 
(PUT 'REVV 'NUMBER-OF-ARGS 2) 
(PUT 'REVV 'DEFINED-ON-LINE '224) 
(PUT 'REVV 'DEFINED-IN-FILE 'XCOLOR/XCOLOR.RED) 
(PUT 'REVV 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(PUTC 'REVV 'INLINE
      '(LAMBDA (V E)
         (COND
          ((OR (NULL (EQ (CAR V) 'G3)) (NULL (MEMQ E (CDR V))))
           (CERROR (LIST "Edge" E "is absent in vertex" V)))
          (T (REVV0 V E))))) 
(PUT 'REVV0 'NUMBER-OF-ARGS 2) 
(PUT 'REVV0 'DEFINED-ON-LINE '233) 
(PUT 'REVV0 'DEFINED-IN-FILE 'XCOLOR/XCOLOR.RED) 
(PUT 'REVV0 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE REVV0 (V E)
    (COND ((EQ (CADR V) E) V)
          (T
           (PROG (W)
             (SETQ W (CADR V))
             (RPLACA (CDR V) (CADDR V))
             (RPLACA (CDDR V) (CADDDR V))
             (RPLACA (CDDDR V) W)
             (RETURN (REVV0 V E)))))) 
(GLOBAL '(SU_ORDER SPUR_TT N**2-1)) 
(SETQ SU_ORDER '(3 . 1)) 
(SETQ SPUR_TT '(1 . 2)) 
(SETQ N**2-1 '(8 . 1)) 
(PUT 'COLOR0 'NUMBER-OF-ARGS 1) 
(PUT 'COLOR0 'DEFINED-ON-LINE '257) 
(PUT 'COLOR0 'DEFINED-IN-FILE 'XCOLOR/XCOLOR.RED) 
(PUT 'COLOR0 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE COLOR0 (G0)
    (COND
     ((CHKCG G0)
      (MULTSQ (AFACTOR G0)
              (COLOR1 (CONS (CONS 1 1) (MKCOPY G0)) NIL (CONS NIL 1))))
     (T (CERROR (LIST "This is impossible!"))))) 
(PUT 'CHKCG 'NUMBER-OF-ARGS 1) 
(PUT 'CHKCG 'DEFINED-ON-LINE '266) 
(PUT 'CHKCG 'DEFINED-IN-FILE 'XCOLOR/XCOLOR.RED) 
(PUT 'CHKCG 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE CHKCG (G0)
    (PROG (X U VL Z)
      (SETQ VL G0)
      (PROG ()
       WHILELABEL
        (COND ((NOT VL) (RETURN NIL)))
        (PROGN
         (SETQ X (CAR VL))
         (COND
          ((EQ (CAR X) 'QG)
           (PROGN
            (COND
             ((SETQ Z (ASSOC (CADR X) U))
              (COND ((EQ (CDR Z) 'OUTQ) (RPLACD Z 'OK))
                    (T
                     (CERROR
                      (LIST (CAR Z) "can not use as in-quark in vertex" X)))))
             (T (SETQ U (CONS (CONS (CADR X) 'INQ) U))))
            (COND
             ((SETQ Z (ASSOC (CADDR X) U))
              (COND ((EQ (CDR Z) 'INQ) (RPLACD Z 'OK))
                    (T
                     (CERROR
                      (LIST (CAR Z) "can not use as out-quark in vertex" X)))))
             (T (SETQ U (CONS (CONS (CADDR X) 'OUTQ) U))))
            (COND
             ((SETQ Z (ASSOC (CADDDR X) U))
              (COND ((EQ (CDR Z) 'GLUON) (RPLACD Z 'OK))
                    (T
                     (CERROR
                      (LIST (CAR Z) "can not use as gluon in vertex" X)))))
             (T (SETQ U (CONS (CONS (CADDDR X) 'GLUON) U))))
            NIL))
          ((EQ (CAR X) 'G3)
           (PROGN
            (COND
             ((SETQ Z (ASSOC (CADR X) U))
              (COND ((EQ (CDR Z) 'GLUON) (RPLACD Z 'OK))
                    (T
                     (CERROR
                      (LIST (CAR Z) "can not use as gluon in vertex" X)))))
             (T (SETQ U (CONS (CONS (CADR X) 'GLUON) U))))
            (COND
             ((SETQ Z (ASSOC (CADDR X) U))
              (COND ((EQ (CDR Z) 'GLUON) (RPLACD Z 'OK))
                    (T
                     (CERROR
                      (LIST (CAR Z) "can not use as gluon in vertex" X)))))
             (T (SETQ U (CONS (CONS (CADDR X) 'GLUON) U))))
            (COND
             ((SETQ Z (ASSOC (CADDDR X) U))
              (COND ((EQ (CDR Z) 'GLUON) (RPLACD Z 'OK))
                    (T
                     (CERROR
                      (LIST (CAR Z) "can not use as gluon in vertex" X)))))
             (T (SETQ U (CONS (CONS (CADDDR X) 'GLUON) U))))
            NIL))
          (T (CERROR (LIST "Invalid type of vertex" X))))
         (SETQ VL (CDR VL))
         NIL)
        (GO WHILELABEL))
      (PROG ()
       WHILELABEL
        (COND ((NOT U) (RETURN NIL)))
        (PROGN
         (SETQ X (CAR U))
         (COND
          ((NULL (EQ (CDR X) 'OK))
           (CERROR (LIST (CAR X) "is a free particle. Not yet implemented.")))
          ((NULL (IDP (CAR X)))
           (CERROR (LIST (CAR X) "invalid as a name of particle.")))
          (T (SETQ U (CDR U))))
         NIL)
        (GO WHILELABEL))
      (RETURN T))) 
(PUT 'AFACTOR 'NUMBER-OF-ARGS 1) 
(PUT 'AFACTOR 'DEFINED-ON-LINE '319) 
(PUT 'AFACTOR 'DEFINED-IN-FILE 'XCOLOR/XCOLOR.RED) 
(PUT 'AFACTOR 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE AFACTOR (G0)
    (PROG (N)
      (SETQ N 0)
      (PROG (X)
        (SETQ X G0)
       LAB
        (COND ((NULL X) (RETURN NIL)))
        ((LAMBDA (X)
           (COND ((OR (EQ (CAR X) 'QG) (EQ (CAR X) 'G3)) (SETQ N (PLUS N 1)))))
         (CAR X))
        (SETQ X (CDR X))
        (GO LAB))
      (COND
       ((NEQ (REMAINDER N 2) 0)
        (CERROR
         (LIST "Invalid structure of c0-graph."
               (COND ((NULL G0) NIL) ((NULL (CDR G0)) (CAR G0))
                     (T (CONS 'TIMES G0)))))))
      (RETURN (EXPTSQ SPUR_TT (QUOTIENT N 2))))) 
(PUT 'COLOR1 'NUMBER-OF-ARGS 3) 
(PUT 'COLOR1 'DEFINED-ON-LINE '338) 
(PUT 'COLOR1 'DEFINED-IN-FILE 'XCOLOR/XCOLOR.RED) 
(PUT 'COLOR1 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL GENERAL) GENERAL)) 
(DE COLOR1 (G0 ST RESULT)
    (COND
     ((OR (NULL (CAR (CAR G0))) (NULL (CDR G0)))
      (COND ((NULL ST) (ADDSQ (CAR G0) RESULT))
            (T (COLOR1 (CAR ST) (CDR ST) (ADDSQ (CAR G0) RESULT)))))
     (T
      (PROG (V)
        (COND
         ((SETQ V (ASSOC 'QG (CDR G0)))
          (PROGN
           (COND
            ((OR (EQ (CADR V) (CADDR V)) (EQ (CADR V) (CADDDR V))
                 (EQ (CADDR V) (CADDDR V)))
             (RETURN (COLOR1 (CONS (CONS NIL 1) NIL) ST RESULT))))
           (SETQ G0 (REMOVEG G0 V))
           (RETURN
            (COLOR1 (CAR G0) (COND ((CDR G0) (CONS (CDR G0) ST)) (T ST))
             RESULT))))
         ((SETQ V (ASSOC 'G3 (CDR G0)))
          (PROGN
           (COND
            ((OR (EQ (CADR V) (CADDR V)) (EQ (CADR V) (CADDDR V))
                 (EQ (CADDR V) (CADDDR V)))
             (RETURN (COLOR1 (CONS (CONS NIL 1) NIL) ST RESULT))))
           (SETQ G0 (SPLIT3GV G0 V))
           (RETURN (COLOR1 (CAR G0) (CONS (CDR G0) ST) RESULT))))
         (T
          (CERROR
           (LIST "Invalid structure of c0-graph."
                 (COND ((NULL G0) NIL) ((NULL (CDR G0)) (CAR G0))
                       (T (CONS 'TIMES G0))))))))))) 
(PUT 'REMOVEG 'NUMBER-OF-ARGS 2) 
(PUT 'REMOVEG 'DEFINED-ON-LINE '377) 
(PUT 'REMOVEG 'DEFINED-IN-FILE 'XCOLOR/XCOLOR.RED) 
(PUT 'REMOVEG 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE REMOVEG (G0 V1)
    (PROG (V2)
      (SETQ V2 (FINDE (CDR G0) (CADDDR V1)))
      (COND ((EQ (CAR V2) V1) (SETQ V2 (FINDE (CDR V2) (CADDDR V1)))))
      (COND ((NULL V2) (CERROR (LIST "Free edge" (CADDDR V1) "in vertex" V1))))
      (SETQ V2 (CAR V2))
      (COND
       ((OR (EQ (CADR V2) (CADDR V2)) (EQ (CADR V2) (CADDDR V2))
            (EQ (CADDR V2) (CADDDR V2)))
        (RETURN (CONS (CONS (CONS NIL 1) NIL) NIL))))
      (COND ((EQ (CAR V2) 'QG) (RETURN (REMOVEG1 G0 V1 V2)))
            ((EQ (CAR V2) 'G3) (RETURN (REMOVEG2 G0 V1 V2)))
            (T (CERROR (LIST "Invalid type of vertex" V1)))))) 
(PUT 'FINDE 'NUMBER-OF-ARGS 2) 
(PUT 'FINDE 'DEFINED-ON-LINE '393) 
(PUT 'FINDE 'DEFINED-IN-FILE 'XCOLOR/XCOLOR.RED) 
(PUT 'FINDE 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE FINDE (VL E)
    (COND ((NULL VL) NIL) ((MEMQ E (CDAR VL)) VL) (T (FINDE (CDR VL) E)))) 
(PUT 'REMOVEG1 'NUMBER-OF-ARGS 3) 
(PUT 'REMOVEG1 'DEFINED-ON-LINE '402) 
(PUT 'REMOVEG1 'DEFINED-IN-FILE 'XCOLOR/XCOLOR.RED) 
(PUT 'REMOVEG1 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL GENERAL) GENERAL)) 
(DE REMOVEG1 (G0 V1 V2)
    (PROG (V3 V6 G1 W)
      (REMOVEV G0 V1)
      (REMOVEV G0 V2)
      (COND
       ((AND (EQ (CADR V1) (CADDR V2)) (EQ (CADDR V1) (CADR V2)))
        (RETURN (CONS (CONS (MULTSQ N**2-1 (CAR G0)) (CDR G0)) NIL))))
      (SETQ V3 (FINDE (CDR G0) (CADDR V1)))
      (COND
       ((EQ (CADR V1) (CADDR V2))
        (PROGN
         (COND (V3 (RPLACA (CDR (CAR V3)) (CADR V2)))
               (T (CERROR (LIST "Free edge" (CADDR V1) "in vertex" V1))))
         (RETURN
          (CONS
           (CONS (MULTSQ (MULTSQ N**2-1 (INVSQ SU_ORDER)) (CAR G0)) (CDR G0))
           NIL))
         NIL)))
      (SETQ V6 (FINDE (CDR G0) (CADDR V2)))
      (COND
       ((EQ (CADDR V1) (CADR V2))
        (PROGN
         (COND (V6 (RPLACA (CDR (CAR V6)) (CADR V1)))
               (T (CERROR (LIST "Free edge" (CADDR V2) "in vertex" V2))))
         (RETURN
          (CONS
           (CONS (MULTSQ (MULTSQ N**2-1 (INVSQ SU_ORDER)) (CAR G0)) (CDR G0))
           NIL))
         NIL)))
      (COND
       ((OR (NULL V3) (NULL V6))
        (CERROR
         (LIST "Invalid structure of c-graph"
               (COND ((NULL G0) NIL) ((NULL (CDR G0)) (CAR G0))
                     (T (CONS 'TIMES G0)))))))
      (SETQ V3 (CAR V3))
      (SETQ V6 (CAR V6))
      (RPLACA (CDR V3) (CADR V2))
      (RPLACA (CDR V6) (CADR V1))
      (SETQ G1 (CONS (CAR G0) (MKCOPY (CDR G0))))
      (SETQ W (CDR G1))
      (SETQ V3 (CAR (MEMBER V3 W)))
      (SETQ V6 (CAR (MEMBER V6 W)))
      (RPLACA (CDR V3) (CADR V1))
      (RPLACA (CDR V6) (CADR V2))
      (RETURN
       (CONS G0
             (CONS (MULTSQ (MULTSQ (CONS '-1 1) (INVSQ SU_ORDER)) (CAR G1))
                   W))))) 
(PUT 'REMOVEG2 'NUMBER-OF-ARGS 3) 
(PUT 'REMOVEG2 'DEFINED-ON-LINE '489) 
(PUT 'REMOVEG2 'DEFINED-IN-FILE 'XCOLOR/XCOLOR.RED) 
(PUT 'REMOVEG2 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL GENERAL) GENERAL)) 
(DE REMOVEG2 (G0 V1 V2)
    (PROG (G1 Z U1 U2)
      (SETQ V2
              ((LAMBDA (G124)
                 (COND
                  ((OR (NULL (EQ (CAR V2) 'G3)) (NULL (MEMQ G124 (CDR V2))))
                   (CERROR (LIST "Edge" G124 "is absent in vertex" V2)))
                  (T (REVV0 V2 G124))))
               (CADDDR V1)))
      (RPLACA V2 'QG)
      (SETQ G1 (CONS (CAR G0) (MKCOPY (CDR G0))))
      (SETQ U1 (CAR (MEMBER V1 G1)))
      (SETQ U2 (CAR (MEMBER V2 G1)))
      (SETQ Z (CADDR V1))
      (RPLACA (CDDR V1) (CADDDR V1))
      (RPLACA (CDDDR V1) (CADDR V2))
      (RPLACA (CDDR V2) Z)
      (SETQ Z (CADR U1))
      (RPLACA (CDR U1) (CADDDR U1))
      (RPLACA (CDDDR U1) (CADDR U2))
      (RPLACA (CDDR U2) (CADR U2))
      (RPLACA (CDR U2) Z)
      (RETURN (CONS G0 (CONS (NEGSQ (CAR G1)) (CDR G1)))))) 
(PUT 'SPLIT3GV 'NUMBER-OF-ARGS 2) 
(PUT 'SPLIT3GV 'DEFINED-ON-LINE '528) 
(PUT 'SPLIT3GV 'DEFINED-IN-FILE 'XCOLOR/XCOLOR.RED) 
(PUT 'SPLIT3GV 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE SPLIT3GV (G0 V1)
    (PROG (V5 V6 G1 Z)
      (SETQ V5 (LIST 'QG (GENSYM) (GENSYM) (CADDR V1)))
      (SETQ V6 (LIST 'QG (GENSYM) (CADR V5) (CADR V1)))
      (RPLACA V1 'QG)
      (RPLACA (CDR V1) (CADDR V5))
      (RPLACA (CDDR V1) (CADR V6))
      (RPLACD G0 (CONS V5 (CONS V6 (CDR G0))))
      (SETQ G1 (CONS (CAR G0) (MKCOPY (CDR G0))))
      (SETQ V1 (CAR (MEMBER V1 (CDR G1))))
      (SETQ V5 (CAR (MEMBER V5 (CDR G1))))
      (SETQ V6 (CAR (MEMBER V6 (CDR G1))))
      (SETQ Z (CADR V1))
      (RPLACA (CDR V1) (CADDR V1))
      (RPLACA (CDDR V1) Z)
      (SETQ Z (CADR V5))
      (RPLACA (CDR V5) (CADDR V5))
      (RPLACA (CDDR V5) Z)
      (SETQ Z (CADR V6))
      (RPLACA (CDR V6) (CADDR V6))
      (RPLACA (CDDR V6) Z)
      (RETURN (CONS G0 (CONS (NEGSQ (CAR G1)) (CDR G1)))))) 
(ENDMODULE) 