(cl:declaim (cl:optimize cl:debug cl:safety))
(cl:declaim (sb-ext:muffle-conditions sb-ext:compiler-note cl:style-warning))
(MODULE (LIST 'ACFSFGS)) 
(REVISION 'ACFSFGS "$Id: acfsfgs.red 5958 2021-08-21 17:38:36Z thomas-sturm $") 
(COPYRIGHT 'ACFSFGS "(c) 1995-2009 A. Dolzmann, T. Sturm") 
(PUT 'ACFSF_GSC 'NUMBER-OF-ARGS 2) 
(PUT 'ACFSF_GSC 'DEFINED-ON-LINE '43) 
(PUT 'ACFSF_GSC 'DEFINED-IN-FILE 'REDLOG/ACFSF/ACFSFGS.RED) 
(PUT 'ACFSF_GSC 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE ACFSF_GSC (F ATL)
    (PROG (W SVRLGSVB)
      (SETQ SVRLGSVB *RLGSVB)
      (COND ((AND *RLVERBOSE *RLGSVB) (ON1 'RLGSVB)) (T (OFF1 'RLGSVB)))
      (SETQ W (ACFSF_GSC1 F ATL))
      (ONOFF 'RLGSVB SVRLGSVB)
      (RETURN W))) 
(PUT 'ACFSF_GSC1 'NUMBER-OF-ARGS 2) 
(PUT 'ACFSF_GSC1 'DEFINED-ON-LINE '60) 
(PUT 'ACFSF_GSC1 'DEFINED-IN-FILE 'REDLOG/ACFSF/ACFSFGS.RED) 
(PUT 'ACFSF_GSC1 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE ACFSF_GSC1 (F ATL)
    (PROG (PHI *RLSIEXPLA)
      (COND
       (*RLGSBNF
        (PROGN
         (COND (*RLGSVB (IOTO_PRIN2 "[CNF")))
         (SETQ PHI (CL_SIMPL (CL_CNF (CL_NNF F)) ATL (MINUS 1)))
         (COND (*RLGSVB (IOTO_PRIN2 "] ")))))
       (T (SETQ PHI (CL_SIMPL F ATL (MINUS 1)))))
      (COND ((EQ PHI 'INCTHEO) (RETURN 'INCTHEO)))
      (COND ((OR (EQ PHI 'TRUE) (EQ PHI 'FALSE)) (RETURN PHI)))
      (SETQ PHI (ACFSF_GSSIMPLIFY0 PHI ATL))
      (COND ((EQ PHI 'INCTHEO) (RETURN 'INCTHEO)))
      (RETURN (CL_SIMPL PHI ATL (MINUS 1))))) 
(PUT 'ACFSF_GSD 'NUMBER-OF-ARGS 2) 
(PUT 'ACFSF_GSD 'DEFINED-ON-LINE '84) 
(PUT 'ACFSF_GSD 'DEFINED-IN-FILE 'REDLOG/ACFSF/ACFSFGS.RED) 
(PUT 'ACFSF_GSD 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE ACFSF_GSD (F ATL)
    (PROG (W SVRLGSVB)
      (SETQ SVRLGSVB *RLGSVB)
      (COND ((AND *RLVERBOSE *RLGSVB) (ON1 'RLGSVB)) (T (OFF1 'RLGSVB)))
      (SETQ W (ACFSF_GSD1 F ATL))
      (ONOFF 'RLGSVB SVRLGSVB)
      (RETURN W))) 
(PUT 'ACFSF_GSD1 'NUMBER-OF-ARGS 2) 
(PUT 'ACFSF_GSD1 'DEFINED-ON-LINE '101) 
(PUT 'ACFSF_GSD1 'DEFINED-IN-FILE 'REDLOG/ACFSF/ACFSFGS.RED) 
(PUT 'ACFSF_GSD1 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE ACFSF_GSD1 (F ATL)
    (PROG (PHI *RLSIEXPLA)
      (COND
       (*RLGSBNF
        (PROGN
         (COND (*RLGSVB (IOTO_PRIN2 "[DNF")))
         (SETQ PHI (CL_SIMPL (CL_NNFNOT (CL_DNF F)) ATL (MINUS 1)))
         (COND (*RLGSVB (IOTO_PRIN2 "] ")))
         NIL))
       (T (SETQ PHI (CL_SIMPL (CL_NNFNOT F) ATL (MINUS 1)))))
      (COND ((EQ PHI 'INCTHEO) (RETURN 'INCTHEO)))
      (COND ((OR (EQ PHI 'TRUE) (EQ PHI 'FALSE)) (RETURN (CL_NNFNOT PHI))))
      (SETQ PHI (ACFSF_GSSIMPLIFY0 PHI ATL))
      (COND ((EQ PHI 'INCTHEO) (RETURN 'INCTHEO)))
      (RETURN (CL_SIMPL (CL_NNFNOT PHI) ATL (MINUS 1))))) 
(PUT 'ACFSF_GSN 'NUMBER-OF-ARGS 3) 
(DE ACFSF_GSN (F ATL BNF)
    (COND ((OR (EQ F 'TRUE) (EQ F 'FALSE)) F) ((EQ BNF 'DNF) (ACFSF_GSD F ATL))
          ((EQ BNF 'CNF) (ACFSF_GSC F ATL))
          ((CL_ATFLP (CDR F))
           (COND ((EQ (COND ((ATOM F) F) (T (CAR F))) 'AND) (ACFSF_GSD F ATL))
                 (T (ACFSF_GSC F ATL))))
          ((EQ (COND ((ATOM F) F) (T (CAR F))) 'AND) (ACFSF_GSC F ATL))
          (T (ACFSF_GSD F ATL)))) 
(PUT 'ACFSF_GSSIMPLIFY0 'NUMBER-OF-ARGS 2) 
(PUT 'ACFSF_GSSIMPLIFY0 'DEFINED-ON-LINE '146) 
(PUT 'ACFSF_GSSIMPLIFY0 'DEFINED-IN-FILE 'REDLOG/ACFSF/ACFSFGS.RED) 
(PUT 'ACFSF_GSSIMPLIFY0 'PROCEDURE_TYPE
     '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE ACFSF_GSSIMPLIFY0 (F ATL)
    (PROG (ACFSF_GSTV* *CGBVERBOSE *GROEBOPT)
      (RETURN (ACFSF_GSSIMPLIFY F ATL)))) 
(PUT 'ACFSF_GSSIMPLIFY 'NUMBER-OF-ARGS 2) 
(PUT 'ACFSF_GSSIMPLIFY 'DEFINED-ON-LINE '157) 
(PUT 'ACFSF_GSSIMPLIFY 'DEFINED-IN-FILE 'REDLOG/ACFSF/ACFSFGS.RED) 
(PUT 'ACFSF_GSSIMPLIFY 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE ACFSF_GSSIMPLIFY (F ATL)
    (PROG (AL GP IPART NPART W GPREM GPRODAL GATL)
      (SETQ ATL (CL_SIMPLIFYTHEORY ATL))
      (COND ((OR (EQ ATL 'INCTHEO) (ACFSF_GSINCTHEOP ATL)) (RETURN 'INCTHEO)))
      (COND
       ((OR (CL_ATFP F) (EQ (COND ((ATOM F) F) (T (CAR F))) 'OR))
        (SETQ AL (ACFSF_GSSPLIT-CNF (LIST F))))
       (T (SETQ AL (ACFSF_GSSPLIT-CNF (CDR F)))))
      (COND
       ((SETQ W (LTO_CATSOC 'GPREM AL))
        (PROGN
         (SETQ GP (ACFSF_GSEXTRACT-GP ATL))
         (SETQ GPREM (ACFSF_GSGPREM W GP))
         (COND ((EQ GPREM 'FALSE) (RETURN 'FALSE)))
         NIL)))
      (SETQ GATL (APPEND ATL (LTO_CATSOC 'GPREM AL)))
      (SETQ GP (ACFSF_GSEXTRACT-GP GATL))
      (SETCAR (CAR GP) (ACFSF_GSGBF (CAAR GP)))
      (SETQ IPART (LTO_CATSOC 'IMPL AL))
      (SETQ NPART (LTO_CATSOC 'NONEQ AL))
      (COND (IPART (SETQ IPART (ACFSF_GSPART IPART GP))))
      (COND ((AND NPART GATL) (SETQ NPART (ACFSF_GSPART NPART GP))))
      (COND
       (GPREM
        (PROGN
         (COND
          ((NULL *RLGSPROD)
           (PROGN
            (SETQ GPRODAL (LTO_CATSOC 'GPRODAL AL))
            (SETQ GPREM (ACFSF_GSSIMULATEPROD GPREM GPRODAL)))))
         (RETURN
          ((LAMBDA (G130)
             (COND ((AND G130 (CDR G130)) (CONS 'AND G130))
                   ((NULL G130) (COND ((EQ 'AND 'AND) 'TRUE) (T 'FALSE)))
                   (T (CAR G130))))
           (CONS GPREM (NCONC IPART NPART)))))))
      (RETURN
       ((LAMBDA (G132)
          (COND ((AND G132 (CDR G132)) (CONS 'AND G132))
                ((NULL G132) (COND ((EQ 'AND 'AND) 'TRUE) (T 'FALSE)))
                (T (CAR G132))))
        (NCONC IPART NPART))))) 
(PUT 'ACFSF_GSPREDUCEF 'NUMBER-OF-ARGS 2) 
(PUT 'ACFSF_GSPREDUCEF 'DEFINED-ON-LINE '196) 
(PUT 'ACFSF_GSPREDUCEF 'DEFINED-IN-FILE 'REDLOG/ACFSF/ACFSFGS.RED) 
(PUT 'ACFSF_GSPREDUCEF 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE ACFSF_GSPREDUCEF (F GL)
    (CAR (GB_REDUCEF F GL (ACFSF_GSVL) (ACFSF_GSSM) (ACFSF_GSSX)))) 
(PUT 'ACFSF_GSGREDUCEF 'NUMBER-OF-ARGS 2) 
(PUT 'ACFSF_GSGREDUCEF 'DEFINED-ON-LINE '199) 
(PUT 'ACFSF_GSGREDUCEF 'DEFINED-IN-FILE 'REDLOG/ACFSF/ACFSFGS.RED) 
(PUT 'ACFSF_GSGREDUCEF 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE ACFSF_GSGREDUCEF (F GL)
    (ACFSF_GSPREDUCEF F (GB_GBF GL (ACFSF_GSVL) (ACFSF_GSSM) (ACFSF_GSSX)))) 
(PUT 'ACFSF_GSGBF 'NUMBER-OF-ARGS 1) 
(PUT 'ACFSF_GSGBF 'DEFINED-ON-LINE '202) 
(PUT 'ACFSF_GSGBF 'DEFINED-IN-FILE 'REDLOG/ACFSF/ACFSFGS.RED) 
(PUT 'ACFSF_GSGBF 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE ACFSF_GSGBF (FL) (GB_GBF FL (ACFSF_GSVL) (ACFSF_GSSM) (ACFSF_GSSX))) 
(PUT 'ACFSF_GSVL 'NUMBER-OF-ARGS 0) 
(PUT 'ACFSF_GSVL 'DEFINED-ON-LINE '205) 
(PUT 'ACFSF_GSVL 'DEFINED-IN-FILE 'REDLOG/ACFSF/ACFSFGS.RED) 
(PUT 'ACFSF_GSVL 'PROCEDURE_TYPE '(ARROW UNIT GENERAL)) 
(DE ACFSF_GSVL NIL
    (COND (*RLGSUTORD (APPEND (TD_VARS) (LIST ACFSF_GSTV*))) (T NIL))) 
(PUT 'ACFSF_GSSM 'NUMBER-OF-ARGS 0) 
(PUT 'ACFSF_GSSM 'DEFINED-ON-LINE '208) 
(PUT 'ACFSF_GSSM 'DEFINED-IN-FILE 'REDLOG/ACFSF/ACFSFGS.RED) 
(PUT 'ACFSF_GSSM 'PROCEDURE_TYPE '(ARROW UNIT GENERAL)) 
(DE ACFSF_GSSM NIL (COND (*RLGSUTORD (TD_SORTMODE)) (T 'REVGRADLEX))) 
(PUT 'ACFSF_GSSX 'NUMBER-OF-ARGS 0) 
(PUT 'ACFSF_GSSX 'DEFINED-ON-LINE '211) 
(PUT 'ACFSF_GSSX 'DEFINED-IN-FILE 'REDLOG/ACFSF/ACFSFGS.RED) 
(PUT 'ACFSF_GSSX 'PROCEDURE_TYPE '(ARROW UNIT GENERAL)) 
(DE ACFSF_GSSX NIL (COND (*RLGSUTORD (TD_SORTEXTENSION)) (T NIL))) 
(PUT 'ACFSF_GSINCTHEOP 'NUMBER-OF-ARGS 1) 
(PUT 'ACFSF_GSINCTHEOP 'DEFINED-ON-LINE '215) 
(PUT 'ACFSF_GSINCTHEOP 'DEFINED-IN-FILE 'REDLOG/ACFSF/ACFSFGS.RED) 
(PUT 'ACFSF_GSINCTHEOP 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE ACFSF_GSINCTHEOP (ATL)
    (PROG (W)
      (COND ((NULL ATL) (RETURN NIL)))
      (COND (*RLGSVB (IOTO_PRIN2 "Inctheop... ")))
      (SETQ W
              (CL_NNFNOT
               (ACFSF_GSIMPLICATION
                (CL_NNFNOT
                 (COND ((AND ATL (CDR ATL)) (CONS 'AND ATL))
                       ((NULL ATL) (COND ((EQ 'AND 'AND) 'TRUE) (T 'FALSE)))
                       (T (CAR ATL))))
                '((NIL . 1)))))
      (COND (*RLGSVB (IOTO_PRIN2T "done.")))
      (RETURN (EQ W 'FALSE)))) 
(PUT 'ACFSF_GSSPLIT-CNF 'NUMBER-OF-ARGS 1) 
(PUT 'ACFSF_GSSPLIT-CNF 'DEFINED-ON-LINE '229) 
(PUT 'ACFSF_GSSPLIT-CNF 'DEFINED-IN-FILE 'REDLOG/ACFSF/ACFSFGS.RED) 
(PUT 'ACFSF_GSSPLIT-CNF 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE ACFSF_GSSPLIT-CNF (F)
    (PROG (NONEQ IMP PROD GPRODAL GPREM W X)
      (PROG (PHI)
        (SETQ PHI F)
       LAB
        (COND ((NULL PHI) (RETURN NIL)))
        ((LAMBDA (PHI)
           (COND
            ((MEMQ (COND ((ATOM PHI) PHI) (T (CAR PHI))) '(AND OR))
             (COND
              ((EQ (SETQ W (ACFSF_GSDIS-TYPE (CDR PHI))) 'IMPL)
               (SETQ IMP (CONS PHI IMP)))
              ((EQ W 'NONEQ) (SETQ NONEQ (CONS PHI NONEQ)))
              (T
               (PROGN
                (SETQ PROD 1)
                (PROG (ATF)
                  (SETQ ATF (CDR PHI))
                 LAB
                  (COND ((NULL ATF) (RETURN NIL)))
                  ((LAMBDA (ATF)
                     (SETQ PROD
                             ((LAMBDA (G134)
                                (COND (*PHYSOP-LOADED (PHYSOP-MULTF PROD G134))
                                      (T (POLY-MULTF PROD G134))))
                              (ACFSF_ARG2L ATF))))
                   (CAR ATF))
                  (SETQ ATF (CDR ATF))
                  (GO LAB))
                (SETQ X (ACFSF_0MK2 'EQUAL PROD))
                (SETQ GPREM (CONS X GPREM))
                (SETQ GPRODAL (CONS (CONS X PHI) GPRODAL))))))
            (T (SETQ GPREM (CONS PHI GPREM)))))
         (CAR PHI))
        (SETQ PHI (CDR PHI))
        (GO LAB))
      (COND
       (*RLGSVB
        (PROGN
         (IOTO_TPRIN2T
          (LIST "global: " (LENGTH GPREM) "; impl: " (LENGTH IMP) "; no neq: "
                (LENGTH NONEQ) "; glob-prod-al: " (LENGTH GPRODAL) ".")))))
      (RETURN
       (LIST (CONS 'IMPL IMP) (CONS 'NONEQ NONEQ) (CONS 'GPREM GPREM)
             (CONS 'GPRODAL GPRODAL))))) 
(PUT 'ACFSF_GSDIS-TYPE 'NUMBER-OF-ARGS 1) 
(PUT 'ACFSF_GSDIS-TYPE 'DEFINED-ON-LINE '266) 
(PUT 'ACFSF_GSDIS-TYPE 'DEFINED-IN-FILE 'REDLOG/ACFSF/ACFSFGS.RED) 
(PUT 'ACFSF_GSDIS-TYPE 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE ACFSF_GSDIS-TYPE (ATL)
    (PROG (OP W)
      (COND ((NULL ATL) (RETURN 'EQUAL)))
      (SETQ OP (ACFSF_OP (CAR ATL)))
      (COND ((EQ OP 'NEQ) (RETURN 'IMPL)))
      (SETQ W (ACFSF_GSDIS-TYPE (CDR ATL)))
      (COND ((EQ W 'IMPL) (RETURN 'IMPL)))
      (COND ((AND (EQ OP 'EQUAL) (EQ W 'EQUAL)) (RETURN 'EQUAL)))
      (RETURN 'NONEQ))) 
(PUT 'ACFSF_GSEXTRACT-GP 'NUMBER-OF-ARGS 1) 
(PUT 'ACFSF_GSEXTRACT-GP 'DEFINED-ON-LINE '283) 
(PUT 'ACFSF_GSEXTRACT-GP 'DEFINED-IN-FILE 'REDLOG/ACFSF/ACFSFGS.RED) 
(PUT 'ACFSF_GSEXTRACT-GP 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE ACFSF_GSEXTRACT-GP (ATL)
    (PROG (W)
      (SETQ W
              (ACFSF_GSDIS2IMPL
               (PROG (AT FORALL-RESULT FORALL-ENDPTR)
                 (SETQ AT ATL)
                 (COND ((NULL AT) (RETURN NIL)))
                 (SETQ FORALL-RESULT
                         (SETQ FORALL-ENDPTR
                                 (CONS
                                  ((LAMBDA (AT) (ACFSF_NEGATEAT AT)) (CAR AT))
                                  NIL)))
                LOOPLABEL
                 (SETQ AT (CDR AT))
                 (COND ((NULL AT) (RETURN FORALL-RESULT)))
                 (RPLACD FORALL-ENDPTR
                         (CONS ((LAMBDA (AT) (ACFSF_NEGATEAT AT)) (CAR AT))
                               NIL))
                 (SETQ FORALL-ENDPTR (CDR FORALL-ENDPTR))
                 (GO LOOPLABEL))))
      (RETURN
       (CONS
        (CONS (CAR W)
              ((LAMBDA (G136)
                 (COND (*PHYSOP-LOADED (PHYSOP-MULTF (CADR W) G136))
                       (T (POLY-MULTF (CADR W) G136))))
               (CADDR W)))
        (CADDDR W))))) 
(PUT 'ACFSF_GSGPREM 'NUMBER-OF-ARGS 2) 
(PUT 'ACFSF_GSGPREM 'DEFINED-ON-LINE '291) 
(PUT 'ACFSF_GSGPREM 'DEFINED-IN-FILE 'REDLOG/ACFSF/ACFSFGS.RED) 
(PUT 'ACFSF_GSGPREM 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE ACFSF_GSGPREM (ATL GP)
    (PROG (W)
      (COND (*RLGSVB (IOTO_PRIN2 "[GP")))
      (SETQ W
              (CL_NNFNOT
               (ACFSF_GSIMPLICATION
                (CL_NNFNOT
                 (COND ((AND ATL (CDR ATL)) (CONS 'AND ATL))
                       ((NULL ATL) (COND ((EQ 'AND 'AND) 'TRUE) (T 'FALSE)))
                       (T (CAR ATL))))
                GP)))
      (COND (*RLGSVB (IOTO_PRIN2 "] ")))
      (RETURN W))) 
(PUT 'ACFSF_GSPART 'NUMBER-OF-ARGS 2) 
(PUT 'ACFSF_GSPART 'DEFINED-ON-LINE '302) 
(PUT 'ACFSF_GSPART 'DEFINED-IN-FILE 'REDLOG/ACFSF/ACFSFGS.RED) 
(PUT 'ACFSF_GSPART 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE ACFSF_GSPART (PART GP)
    (PROG (W CURLEN RES)
      (COND (*RLGSVB (SETQ CURLEN (LENGTH PART))))
      (SETQ RES
              (PROG (PHI FORALL-RESULT FORALL-ENDPTR)
                (SETQ PHI PART)
                (COND ((NULL PHI) (RETURN NIL)))
                (SETQ FORALL-RESULT
                        (SETQ FORALL-ENDPTR
                                (CONS
                                 ((LAMBDA (PHI)
                                    (PROGN
                                     (COND
                                      (*RLGSVB (IOTO_PRIN2 (LIST "[" CURLEN))))
                                     (SETQ W (ACFSF_GSIMPLICATION PHI GP))
                                     (COND
                                      (*RLGSVB
                                       (PROGN
                                        (SETQ CURLEN (DIFFERENCE CURLEN 1))
                                        (IOTO_PRIN2 (LIST "] ")))))
                                     W))
                                  (CAR PHI))
                                 NIL)))
               LOOPLABEL
                (SETQ PHI (CDR PHI))
                (COND ((NULL PHI) (RETURN FORALL-RESULT)))
                (RPLACD FORALL-ENDPTR
                        (CONS
                         ((LAMBDA (PHI)
                            (PROGN
                             (COND (*RLGSVB (IOTO_PRIN2 (LIST "[" CURLEN))))
                             (SETQ W (ACFSF_GSIMPLICATION PHI GP))
                             (COND
                              (*RLGSVB
                               (PROGN
                                (SETQ CURLEN (DIFFERENCE CURLEN 1))
                                (IOTO_PRIN2 (LIST "] ")))))
                             W))
                          (CAR PHI))
                         NIL))
                (SETQ FORALL-ENDPTR (CDR FORALL-ENDPTR))
                (GO LOOPLABEL)))
      (COND (*RLGSVB (IOTO_CTERPRI)))
      (RETURN RES))) 
(PUT 'ACFSF_GSIMPLICATION 'NUMBER-OF-ARGS 2) 
(PUT 'ACFSF_GSIMPLICATION 'DEFINED-ON-LINE '324) 
(PUT 'ACFSF_GSIMPLICATION 'DEFINED-IN-FILE 'REDLOG/ACFSF/ACFSFGS.RED) 
(PUT 'ACFSF_GSIMPLICATION 'PROCEDURE_TYPE
     '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE ACFSF_GSIMPLICATION (F GP)
    (PROG (PREM PROD1 PROD2 GPROD RPROD IPREM W Z ATL NATL)
      (COND ((CL_CXFP F) (SETQ ATL (CDR F))) (T (SETQ ATL (LIST F))))
      (SETQ W (ACFSF_GSDIS2IMPL ATL))
      (SETQ IPREM (CAR W))
      (SETQ PROD1 (CADR W))
      (SETQ PROD2 (CADDR W))
      (SETQ GPROD (CDAR GP))
      (SETQ PREM (APPEND IPREM (CAAR GP)))
      (COND ((NULL PREM) (RETURN F)))
      (SETQ PREM (ACFSF_GSGBF PREM))
      (SETQ Z (CAR (SIMP (ACFSF_GSMKRADVAR))))
      (SETQ RPROD (ACFSF_GSEQPROD PROD1 PROD2 GPROD PREM Z))
      (COND
       ((EQ RPROD 'TRUE)
        (PROGN (COND (*RLGSVB (IOTO_PRIN2 "!"))) (RETURN 'TRUE))))
      (SETQ W (ACFSF_GSUSEPREMISE (CDR GP) PREM Z))
      (COND
       ((EQ W 'TRUE) (PROGN (COND (*RLGSVB (IOTO_PRIN2 "!"))) (RETURN 'TRUE))))
      (SETQ NATL (ACFSF_GSREDATL ATL PREM Z RPROD))
      (COND
       ((EQ NATL 'TRUE)
        (PROGN (COND (*RLGSVB (IOTO_PRIN2 "!"))) (RETURN 'TRUE))))
      (COND ((AND RPROD (NEQ RPROD 'FALSE)) (SETQ NATL (CONS RPROD NATL))))
      (SETQ NATL (NCONC NATL (ACFSF_GSPREMISE IPREM (CAAR GP))))
      (RETURN
       (COND ((AND NATL (CDR NATL)) (CONS 'OR NATL))
             ((NULL NATL) (COND ((EQ 'OR 'AND) 'TRUE) (T 'FALSE)))
             (T (CAR NATL)))))) 
(PUT 'ACFSF_GSREDATL 'NUMBER-OF-ARGS 4) 
(PUT 'ACFSF_GSREDATL 'DEFINED-ON-LINE '361) 
(PUT 'ACFSF_GSREDATL 'DEFINED-IN-FILE 'REDLOG/ACFSF/ACFSFGS.RED) 
(PUT 'ACFSF_GSREDATL 'PROCEDURE_TYPE
     '(ARROW (TIMES GENERAL GENERAL GENERAL GENERAL) GENERAL)) 
(DE ACFSF_GSREDATL (ATL PREM Z RPROD)
    (PROG (A W NATL)
      (PROG ()
       WHILELABEL
        (COND ((NOT ATL) (RETURN NIL)))
        (PROGN
         (SETQ A (CAR ATL))
         (SETQ ATL (CDR ATL))
         (SETQ W (ACFSF_GSREDAT A PREM Z RPROD))
         (COND ((EQ W 'TRUE) (SETQ ATL NIL))
               ((AND W (NEQ W 'FALSE)) (SETQ NATL (CONS W NATL)))))
        (GO WHILELABEL))
      (COND ((EQ W 'TRUE) (RETURN 'TRUE)))
      (RETURN NATL))) 
(PUT 'ACFSF_GSUSEPREMISE 'NUMBER-OF-ARGS 3) 
(PUT 'ACFSF_GSUSEPREMISE 'DEFINED-ON-LINE '380) 
(PUT 'ACFSF_GSUSEPREMISE 'DEFINED-IN-FILE 'REDLOG/ACFSF/ACFSFGS.RED) 
(PUT 'ACFSF_GSUSEPREMISE 'PROCEDURE_TYPE
     '(ARROW (TIMES GENERAL GENERAL GENERAL) GENERAL)) 
(DE ACFSF_GSUSEPREMISE (ATL PREM Z)
    (PROG (W)
      (PROG ()
       WHILELABEL
        (COND ((NOT ATL) (RETURN NIL)))
        (PROGN
         (SETQ W (ACFSF_GSREDAT (CAR ATL) PREM Z NIL))
         (COND ((EQ W 'TRUE) (SETQ ATL NIL)) (T (SETQ ATL (CDR ATL))))
         NIL)
        (GO WHILELABEL))
      (COND ((EQ W 'TRUE) (RETURN 'TRUE))))) 
(PUT 'ACFSF_GSEQPROD 'NUMBER-OF-ARGS 5) 
(PUT 'ACFSF_GSEQPROD 'DEFINED-ON-LINE '395) 
(PUT 'ACFSF_GSEQPROD 'DEFINED-IN-FILE 'REDLOG/ACFSF/ACFSFGS.RED) 
(PUT 'ACFSF_GSEQPROD 'PROCEDURE_TYPE
     '(ARROW (TIMES GENERAL GENERAL GENERAL GENERAL GENERAL) GENERAL)) 
(DE ACFSF_GSEQPROD (IPROD1 IPROD2 GPROD PREM Z)
    (PROG (P W)
      (SETQ P
              ((LAMBDA (G138)
                 (COND (*PHYSOP-LOADED (PHYSOP-MULTF IPROD1 G138))
                       (T (POLY-MULTF IPROD1 G138))))
               (COND (*PHYSOP-LOADED (PHYSOP-MULTF IPROD2 GPROD))
                     (T (POLY-MULTF IPROD2 GPROD)))))
      (COND
       ((AND *RLGSRAD
             (NULL
              (ACFSF_GSGREDUCEF 1
               (CONS
                (ADDF 1
                      (NEGF
                       (COND (*PHYSOP-LOADED (PHYSOP-MULTF P Z))
                             (T (POLY-MULTF P Z)))))
                PREM))))
        (RETURN 'TRUE)))
      (SETQ W (ACFSF_GSTRYEVAL 'EQUAL (ACFSF_GSPREDUCEF P PREM)))
      (COND ((OR (EQ W 'TRUE) (EQ W 'FALSE)) (RETURN W)))
      (COND ((NULL *RLGSPROD) (RETURN NIL)))
      (COND
       (*RLGSRED (RETURN (ACFSF_0MK2 'EQUAL (ACFSF_GSPREDUCEF IPROD1 PREM)))))
      (RETURN (ACFSF_0MK2 'EQUAL IPROD1)))) 
(PUT 'ACFSF_GSMKRADVAR 'NUMBER-OF-ARGS 0) 
(PUT 'ACFSF_GSMKRADVAR 'DEFINED-ON-LINE '415) 
(PUT 'ACFSF_GSMKRADVAR 'DEFINED-IN-FILE 'REDLOG/ACFSF/ACFSFGS.RED) 
(PUT 'ACFSF_GSMKRADVAR 'PROCEDURE_TYPE '(ARROW UNIT GENERAL)) 
(DE ACFSF_GSMKRADVAR NIL
    (PROG (W N)
      (SETQ N 0)
      (SETQ W 'RLGSRADMEMV*)
      (PROG ()
       WHILELABEL
        (COND ((NOT (GET W 'AVALUE)) (RETURN NIL)))
        (SETQ W (MKID W (SETQ N (PLUS N 1))))
        (GO WHILELABEL))
      (COND (*RLGSUTORD (ACFSF_GSUPDTORDER W)))
      (RETURN W))) 
(PUT 'ACFSF_GSUPDTORDER 'NUMBER-OF-ARGS 1) 
(PUT 'ACFSF_GSUPDTORDER 'DEFINED-ON-LINE '428) 
(PUT 'ACFSF_GSUPDTORDER 'DEFINED-IN-FILE 'REDLOG/ACFSF/ACFSFGS.RED) 
(PUT 'ACFSF_GSUPDTORDER 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE ACFSF_GSUPDTORDER (V)
    (COND
     ((AND (TD_VARS) (MEMQ V (TD_VARS)))
      (COND
       ((NOT
         (MEMQ (TD_SORTMODE)
               '(LEX GRADLEX REVGRADLEX GRADLEXGRADLEX GRADLEXREVGRADLEX
                 LEXGRADLEX LEXREVGRADLEX WEIGHTED)))
        (REDERR (LIST "term order" (TD_SORTMODE) "not supported")))
       (T (SETQ ACFSF_GSTV* V)))))) 
(PUT 'ACFSF_GSTRYEVAL 'NUMBER-OF-ARGS 2) 
(PUT 'ACFSF_GSTRYEVAL 'DEFINED-ON-LINE '444) 
(PUT 'ACFSF_GSTRYEVAL 'DEFINED-IN-FILE 'REDLOG/ACFSF/ACFSFGS.RED) 
(PUT 'ACFSF_GSTRYEVAL 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE ACFSF_GSTRYEVAL (REL LHS)
    (PROG (W *RLSIEXPLA)
      (COND
       (*RLGSERF
        (PROGN
         (SETQ W (CL_SIMPLAT (ACFSF_0MK2 REL LHS) NIL))
         (RETURN (COND ((OR (EQ W 'TRUE) (EQ W 'FALSE)) W))))))
      (COND
       ((OR (ATOM LHS) (ATOM (CAR LHS)))
        (RETURN (CL_SIMPLAT (ACFSF_0MK2 REL LHS) NIL)))))) 
(PUT 'ACFSF_GSDIS2IMPL 'NUMBER-OF-ARGS 1) 
(PUT 'ACFSF_GSDIS2IMPL 'DEFINED-ON-LINE '459) 
(PUT 'ACFSF_GSDIS2IMPL 'DEFINED-IN-FILE 'REDLOG/ACFSF/ACFSFGS.RED) 
(PUT 'ACFSF_GSDIS2IMPL 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE ACFSF_GSDIS2IMPL (ATL)
    (PROG (PREM PROD1 PROD2 OTHER W A)
      (SETQ PROD1 (SETQ PROD2 1))
      (PROG (AT)
        (SETQ AT ATL)
       LAB
        (COND ((NULL AT) (RETURN NIL)))
        ((LAMBDA (AT)
           (PROGN
            (SETQ W (ACFSF_GSATTYPE AT))
            (COND
             (W
              (PROGN
               (SETQ A (CAR W))
               (COND
                ((EQ A 'EQUAL)
                 (SETQ PROD1
                         (COND (*PHYSOP-LOADED (PHYSOP-MULTF (CDR W) PROD1))
                               (T (POLY-MULTF (CDR W) PROD1)))))
                ((EQ A 'CEQUAL)
                 (SETQ PROD2
                         (COND (*PHYSOP-LOADED (PHYSOP-MULTF (CDR W) PROD2))
                               (T (POLY-MULTF (CDR W) PROD2)))))
                ((EQ A 'NEQ) (SETQ PREM (CONS (CDR W) PREM)))
                (T (REDERR (LIST "BUG IN ACFSF_GSDIS2IMPL" (CAR W))))))))
            (COND ((NOT (MEMQ W '(EQUAL NEQ))) (SETQ OTHER (CONS AT OTHER))))))
         (CAR AT))
        (SETQ AT (CDR AT))
        (GO LAB))
      (RETURN (LIST PREM PROD1 PROD2 OTHER)))) 
(PUT 'ACFSF_GSATTYPE 'NUMBER-OF-ARGS 1) 
(PUT 'ACFSF_GSATTYPE 'DEFINED-ON-LINE '485) 
(PUT 'ACFSF_GSATTYPE 'DEFINED-IN-FILE 'REDLOG/ACFSF/ACFSFGS.RED) 
(PUT 'ACFSF_GSATTYPE 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE ACFSF_GSATTYPE (AT)
    ((LAMBDA (W)
       (COND ((EQ W 'EQUAL) (CONS 'EQUAL (ACFSF_ARG2L AT)))
             ((MEMQ W '(GEQ LEQ)) (CONS 'CEQUAL (ACFSF_ARG2L AT)))
             ((EQ W 'NEQ) (CONS 'NEQ (ACFSF_ARG2L AT)))))
     (ACFSF_OP AT))) 
(PUT 'ACFSF_GSREDAT 'NUMBER-OF-ARGS 4) 
(PUT 'ACFSF_GSREDAT 'DEFINED-ON-LINE '497) 
(PUT 'ACFSF_GSREDAT 'DEFINED-IN-FILE 'REDLOG/ACFSF/ACFSFGS.RED) 
(PUT 'ACFSF_GSREDAT 'PROCEDURE_TYPE
     '(ARROW (TIMES GENERAL GENERAL GENERAL GENERAL) GENERAL)) 
(DE ACFSF_GSREDAT (AT GB Z FLAG)
    (PROG (W X OP ARG NAT)
      (SETQ OP (ACFSF_OP AT))
      (COND ((OR (EQ OP 'NEQ) (AND FLAG (EQ OP 'EQUAL))) (RETURN NIL)))
      (SETQ ARG (ACFSF_ARG2L AT))
      (SETQ W (ACFSF_GSPREDUCEF ARG GB))
      (COND (*RLGSRED (SETQ NAT (CL_SIMPLAT (ACFSF_0MK2 OP W) NIL)))
            ((SETQ X (ACFSF_GSTRYEVAL OP W)) (SETQ NAT X)) (T (SETQ NAT AT)))
      (COND
       ((OR (OR (EQ NAT 'TRUE) (EQ NAT 'FALSE)) (EQ OP 'EQUAL) (NULL *RLGSRAD))
        (RETURN NAT)))
      (COND
       ((NULL
         (ACFSF_GREDUCEF 1
          (CONS
           (ADDF 1
                 (NEGF
                  (COND (*PHYSOP-LOADED (PHYSOP-MULTF W Z))
                        (T (POLY-MULTF W Z)))))
           GB)))
        (RETURN (CL_SIMPLAT (ACFSF_0MK2 OP NIL) NIL))))
      (RETURN NAT))) 
(PUT 'ACFSF_GSPREMISE 'NUMBER-OF-ARGS 2) 
(PUT 'ACFSF_GSPREMISE 'DEFINED-ON-LINE '527) 
(PUT 'ACFSF_GSPREMISE 'DEFINED-IN-FILE 'REDLOG/ACFSF/ACFSFGS.RED) 
(PUT 'ACFSF_GSPREMISE 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE ACFSF_GSPREMISE (TL GP)
    (PROG (GB RTL W)
      (COND
       (*RLGSRED
        (PROGN
         (SETQ GB (ACFSF_GSGBF GP))
         (PROG (SF)
           (SETQ SF TL)
          LAB
           (COND ((NULL SF) (RETURN NIL)))
           ((LAMBDA (SF)
              (COND
               ((SETQ W (ACFSF_GSPREDUCEF SF GB))
                (SETQ RTL (LTO_INSERT W RTL)))))
            (CAR SF))
           (SETQ SF (CDR SF))
           (GO LAB))
         NIL))
       (T (SETQ RTL TL)))
      (COND
       (*RLGSSUB
        (RETURN
         (PROG (SF FORALL-RESULT FORALL-ENDPTR)
           (SETQ SF (ACFSF_GSGBF RTL))
           (COND ((NULL SF) (RETURN NIL)))
           (SETQ FORALL-RESULT
                   (SETQ FORALL-ENDPTR
                           (CONS ((LAMBDA (SF) (ACFSF_0MK2 'NEQ SF)) (CAR SF))
                                 NIL)))
          LOOPLABEL
           (SETQ SF (CDR SF))
           (COND ((NULL SF) (RETURN FORALL-RESULT)))
           (RPLACD FORALL-ENDPTR
                   (CONS ((LAMBDA (SF) (ACFSF_0MK2 'NEQ SF)) (CAR SF)) NIL))
           (SETQ FORALL-ENDPTR (CDR FORALL-ENDPTR))
           (GO LOOPLABEL)))))
      (RETURN
       (PROG (SF FORALL-RESULT FORALL-ENDPTR)
         (SETQ SF RTL)
         (COND ((NULL SF) (RETURN NIL)))
         (SETQ FORALL-RESULT
                 (SETQ FORALL-ENDPTR
                         (CONS ((LAMBDA (SF) (ACFSF_0MK2 'NEQ SF)) (CAR SF))
                               NIL)))
        LOOPLABEL
         (SETQ SF (CDR SF))
         (COND ((NULL SF) (RETURN FORALL-RESULT)))
         (RPLACD FORALL-ENDPTR
                 (CONS ((LAMBDA (SF) (ACFSF_0MK2 'NEQ SF)) (CAR SF)) NIL))
         (SETQ FORALL-ENDPTR (CDR FORALL-ENDPTR))
         (GO LOOPLABEL))))) 
(PUT 'ACFSF_GSSIMULATEPROD 'NUMBER-OF-ARGS 2) 
(PUT 'ACFSF_GSSIMULATEPROD 'DEFINED-ON-LINE '553) 
(PUT 'ACFSF_GSSIMULATEPROD 'DEFINED-IN-FILE 'REDLOG/ACFSF/ACFSFGS.RED) 
(PUT 'ACFSF_GSSIMULATEPROD 'PROCEDURE_TYPE
     '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE ACFSF_GSSIMULATEPROD (PREM PRODAL)
    (PROG (W RES)
      (COND ((OR (EQ PREM 'TRUE) (EQ PREM 'FALSE)) (RETURN PREM)))
      (COND
       ((AND (CL_ATFP PREM) (SETQ W (LTO_CASSOC PREM PRODAL))) (RETURN W)))
      (SETQ RES
              (PROG (F FORALL-RESULT FORALL-ENDPTR)
                (SETQ F (CDR PREM))
                (COND ((NULL F) (RETURN NIL)))
                (SETQ FORALL-RESULT
                        (SETQ FORALL-ENDPTR
                                (CONS
                                 ((LAMBDA (F)
                                    (COND
                                     ((AND (CL_ATFP F)
                                           (SETQ W (LTO_CASSOC F PRODAL)))
                                      W)
                                     (T F)))
                                  (CAR F))
                                 NIL)))
               LOOPLABEL
                (SETQ F (CDR F))
                (COND ((NULL F) (RETURN FORALL-RESULT)))
                (RPLACD FORALL-ENDPTR
                        (CONS
                         ((LAMBDA (F)
                            (COND
                             ((AND (CL_ATFP F) (SETQ W (LTO_CASSOC F PRODAL)))
                              W)
                             (T F)))
                          (CAR F))
                         NIL))
                (SETQ FORALL-ENDPTR (CDR FORALL-ENDPTR))
                (GO LOOPLABEL)))
      (RETURN (CONS (COND ((ATOM PREM) PREM) (T (CAR PREM))) RES)))) 
(ENDMODULE) 