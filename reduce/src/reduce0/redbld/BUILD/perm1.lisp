(cl:declaim (cl:optimize cl:debug cl:safety))
(cl:declaim (sb-ext:muffle-conditions sb-ext:compiler-note cl:style-warning))
(MODULE (LIST 'PERM1)) 
(GLOBAL '(*PPACKED)) 
(SETQ *PPACKED T) 
(PUT 'GPERM 'NUMBER-OF-ARGS 1) 
(PUT 'GPERM 'DEFINED-ON-LINE '46) 
(PUT 'GPERM 'DEFINED-IN-FILE 'ATENSOR/PERM1.RED) 
(PUT 'GPERM 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE GPERM (N)
    (PROG (L)
      (PROG ()
       WHILELABEL
        (COND ((NOT (GREATERP N 0)) (RETURN NIL)))
        (PROGN (SETQ L (CONS N L)) (SETQ N (DIFFERENCE N 1)))
        (GO WHILELABEL))
      (RETURN
       (PROG (X FORALL-RESULT FORALL-ENDPTR)
         (SETQ X (GPERM0 L))
         (COND ((NULL X) (RETURN NIL)))
         (SETQ FORALL-RESULT
                 (SETQ FORALL-ENDPTR
                         (CONS ((LAMBDA (X) (PKP X)) (CAR X)) NIL)))
        LOOPLABEL
         (SETQ X (CDR X))
         (COND ((NULL X) (RETURN FORALL-RESULT)))
         (RPLACD FORALL-ENDPTR (CONS ((LAMBDA (X) (PKP X)) (CAR X)) NIL))
         (SETQ FORALL-ENDPTR (CDR FORALL-ENDPTR))
         (GO LOOPLABEL))))) 
(PUT 'GPERM0 'NUMBER-OF-ARGS 1) 
(PUT 'GPERM0 'DEFINED-ON-LINE '54) 
(PUT 'GPERM0 'DEFINED-IN-FILE 'ATENSOR/PERM1.RED) 
(PUT 'GPERM0 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE GPERM0 (OLST)
    (COND ((NULL OLST) NIL) (T (GPERM3 (CDR OLST) (LIST (LIST (CAR OLST))))))) 
(PUT 'GPERM3 'NUMBER-OF-ARGS 2) 
(PUT 'GPERM3 'DEFINED-ON-LINE '60) 
(PUT 'GPERM3 'DEFINED-IN-FILE 'ATENSOR/PERM1.RED) 
(PUT 'GPERM3 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE GPERM3 (OLIST RES)
    (COND ((NULL OLIST) RES)
          (T (GPERM3 (CDR OLIST) (GPERM2 RES (CAR OLIST) NIL))))) 
(PUT 'GPERM2 'NUMBER-OF-ARGS 3) 
(PUT 'GPERM2 'DEFINED-ON-LINE '66) 
(PUT 'GPERM2 'DEFINED-IN-FILE 'ATENSOR/PERM1.RED) 
(PUT 'GPERM2 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL GENERAL) GENERAL)) 
(DE GPERM2 (PLST OBJ RES)
    (COND ((NULL PLST) RES)
          (T
           (GPERM2 (CDR PLST) OBJ (GPERM1 (REV (CAR PLST) NIL) OBJ NIL RES))))) 
(PUT 'GPERM1 'NUMBER-OF-ARGS 4) 
(PUT 'GPERM1 'DEFINED-ON-LINE '73) 
(PUT 'GPERM1 'DEFINED-IN-FILE 'ATENSOR/PERM1.RED) 
(PUT 'GPERM1 'PROCEDURE_TYPE
     '(ARROW (TIMES GENERAL GENERAL GENERAL GENERAL) GENERAL)) 
(DE GPERM1 (L OBJ R RES)
    (COND ((NULL L) (CONS (CONS OBJ R) RES))
          (T
           (GPERM1 (CDR L) OBJ (CONS (CAR L) R)
            (CONS (REV L (CONS OBJ R)) RES))))) 
(PUT 'REV 'NUMBER-OF-ARGS 2) 
(PUT 'REV 'DEFINED-ON-LINE '81) 
(PUT 'REV 'DEFINED-IN-FILE 'ATENSOR/PERM1.RED) 
(PUT 'REV 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE REV (LST RLST)
    (COND ((NULL LST) RLST) (T (REV (CDR LST) (CONS (CAR LST) RLST))))) 
(PUT 'MKUNITP 'NUMBER-OF-ARGS 1) 
(PUT 'MKUNITP 'DEFINED-ON-LINE '87) 
(PUT 'MKUNITP 'DEFINED-IN-FILE 'ATENSOR/PERM1.RED) 
(PUT 'MKUNITP 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE MKUNITP (K)
    (PROG (P)
      (PROG (I)
        (SETQ I 1)
       LAB
        (COND ((MINUSP (DIFFERENCE K I)) (RETURN NIL)))
        (SETQ P (CONS I P))
        (SETQ I (PLUS2 I 1))
        (GO LAB))
      (RETURN (PKP (REVERSIP P))))) 
(PUT 'PFIND 'NUMBER-OF-ARGS 2) 
(PUT 'PFIND 'DEFINED-ON-LINE '93) 
(PUT 'PFIND 'DEFINED-IN-FILE 'ATENSOR/PERM1.RED) 
(PUT 'PFIND 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE PFIND (L1 L2)
    (PROG (P Z M)
      (SETQ M 0)
      (SETQ L1 (UNPKP L1))
      (SETQ L2 (UNPKP L2))
      (SETQ M (PLUS (LENGTH L2) 1))
      (SETQ L2
              (PROG (X FORALL-RESULT FORALL-ENDPTR)
                (SETQ X L2)
                (COND ((NULL X) (RETURN NIL)))
                (SETQ FORALL-RESULT
                        (SETQ FORALL-ENDPTR
                                (CONS ((LAMBDA (X) X) (CAR X)) NIL)))
               LOOPLABEL
                (SETQ X (CDR X))
                (COND ((NULL X) (RETURN FORALL-RESULT)))
                (RPLACD FORALL-ENDPTR (CONS ((LAMBDA (X) X) (CAR X)) NIL))
                (SETQ FORALL-ENDPTR (CDR FORALL-ENDPTR))
                (GO LOOPLABEL)))
      (PROG (X)
        (SETQ X L1)
       LAB
        (COND ((NULL X) (RETURN NIL)))
        ((LAMBDA (X)
           (PROGN
            (SETQ Z (MEMBER X L2))
            (COND ((NULL Z) (REDERR (LIST "PFIND: No index" X "in" L2))))
            (SETQ P (CONS (DIFFERENCE M (LENGTH Z)) P))
            (RPLACA Z 'NIL*)
            NIL))
         (CAR X))
        (SETQ X (CDR X))
        (GO LAB))
      (RETURN (PKP (REVERSIP P))))) 
(PUT 'PREV 'NUMBER-OF-ARGS 1) 
(PUT 'PREV 'DEFINED-ON-LINE '111) 
(PUT 'PREV 'DEFINED-IN-FILE 'ATENSOR/PERM1.RED) 
(PUT 'PREV 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE PREV (F)
    (PROG (P W I J L)
      (SETQ I 0)
      (SETQ J 0)
      (SETQ L 0)
      (SETQ F (UNPKP F))
      (SETQ L (LENGTH F))
      (PROG (I)
        (SETQ I 1)
       LAB
        (COND ((MINUSP (DIFFERENCE L I)) (RETURN NIL)))
        (PROGN
         (SETQ W F)
         (SETQ J 1)
         (PROG ()
          WHILELABEL
           (COND ((NOT (NOT (EQUAL (CAR W) I))) (RETURN NIL)))
           (PROGN (SETQ J (PLUS J 1)) (SETQ W (CDR W)))
           (GO WHILELABEL))
         (SETQ P (CONS J P))
         NIL)
        (SETQ I (PLUS2 I 1))
        (GO LAB))
      (RETURN (PKP (REVERSIP P))))) 
(PUT 'PSIGN 'NUMBER-OF-ARGS 1) 
(PUT 'PSIGN 'DEFINED-ON-LINE '125) 
(PUT 'PSIGN 'DEFINED-IN-FILE 'ATENSOR/PERM1.RED) 
(PUT 'PSIGN 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE PSIGN (F)
    (PROG (S I J N K NEW0 NEW WNEW F0 WF)
      (SETQ S 0)
      (SETQ I 0)
      (SETQ J 0)
      (SETQ N 0)
      (SETQ K 0)
      (SETQ S 1)
      (SETQ F (UNPKP F))
      (SETQ N (LENGTH F))
      (SETQ F0 F)
      (SETQ NEW0
              (PROG (X FORALL-RESULT FORALL-ENDPTR)
                (SETQ X F)
                (COND ((NULL X) (RETURN NIL)))
                (SETQ FORALL-RESULT
                        (SETQ FORALL-ENDPTR
                                (CONS ((LAMBDA (X) T) (CAR X)) NIL)))
               LOOPLABEL
                (SETQ X (CDR X))
                (COND ((NULL X) (RETURN FORALL-RESULT)))
                (RPLACD FORALL-ENDPTR (CONS ((LAMBDA (X) T) (CAR X)) NIL))
                (SETQ FORALL-ENDPTR (CDR FORALL-ENDPTR))
                (GO LOOPLABEL)))
      (SETQ NEW NEW0)
      (PROG (I)
        (SETQ I 1)
       LAB
        (COND ((MINUSP (DIFFERENCE N I)) (RETURN NIL)))
        (PROGN
         (COND
          ((CAR NEW)
           (PROGN
            (SETQ J (CAR F))
            (PROG ()
             WHILELABEL
              (COND ((NOT (NOT (EQUAL J I))) (RETURN NIL)))
              (PROGN
               (SETQ WNEW NEW0)
               (SETQ WF F0)
               (PROG (K)
                 (SETQ K 1)
                LAB
                 (COND ((MINUSP (DIFFERENCE (DIFFERENCE J 1) K)) (RETURN NIL)))
                 (PROGN (SETQ WNEW (CDR WNEW)) (SETQ WF (CDR WF)))
                 (SETQ K (PLUS2 K 1))
                 (GO LAB))
               (RPLACA WNEW NIL)
               (SETQ S (MINUS S))
               (SETQ J (CAR WF))
               NIL)
              (GO WHILELABEL))
            NIL)))
         (SETQ NEW (CDR NEW))
         (SETQ F (CDR F))
         NIL)
        (SETQ I (PLUS2 I 1))
        (GO LAB))
      (RETURN S))) 
(PUT 'PMULT 'NUMBER-OF-ARGS 2) 
(PUT 'PMULT 'DEFINED-ON-LINE '152) 
(PUT 'PMULT 'DEFINED-IN-FILE 'ATENSOR/PERM1.RED) 
(PUT 'PMULT 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE PMULT (F G)
    (PROG (P W OK I)
      (SETQ I 0)
      (SETQ F (UNPKP F))
      (SETQ G (UNPKP G))
      (PROG ()
       WHILELABEL
        (COND ((NOT G) (RETURN NIL)))
        (PROGN
         (SETQ W F)
         (PROG (I)
           (SETQ I 1)
          LAB
           (COND ((MINUSP (DIFFERENCE (DIFFERENCE (CAR G) 1) I)) (RETURN NIL)))
           (SETQ W (CDR W))
           (SETQ I (PLUS2 I 1))
           (GO LAB))
         (SETQ P (CONS (CAR W) P))
         (SETQ G (CDR G))
         NIL)
        (GO WHILELABEL))
      (RETURN (PKP (REVERSIP P))))) 
(PUT 'PAPPL 'NUMBER-OF-ARGS 2) 
(PUT 'PAPPL 'DEFINED-ON-LINE '166) 
(PUT 'PAPPL 'DEFINED-IN-FILE 'ATENSOR/PERM1.RED) 
(PUT 'PAPPL 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE PAPPL (P L)
    (PROG (L1 W I)
      (SETQ I 0)
      (SETQ P (UNPKP P))
      (PROG ()
       WHILELABEL
        (COND ((NOT P) (RETURN NIL)))
        (PROGN
         (SETQ W L)
         (PROG (I)
           (SETQ I 1)
          LAB
           (COND ((MINUSP (DIFFERENCE (DIFFERENCE (CAR P) 1) I)) (RETURN NIL)))
           (SETQ W (CDR W))
           (SETQ I (PLUS2 I 1))
           (GO LAB))
         (SETQ L1 (CONS (CAR W) L1))
         (SETQ P (CDR P))
         NIL)
        (GO WHILELABEL))
      (RETURN (REVERSIP L1)))) 
(PUT 'PAPPL0 'NUMBER-OF-ARGS 2) 
(PUT 'PAPPL0 'DEFINED-ON-LINE '179) 
(PUT 'PAPPL0 'DEFINED-IN-FILE 'ATENSOR/PERM1.RED) 
(PUT 'PAPPL0 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE PAPPL0 (P1 P2) (PKP (PAPPL P1 (UNPKP P2)))) 
(PUT 'PUPRIGHT 'NUMBER-OF-ARGS 2) 
(PUT 'PUPRIGHT 'DEFINED-ON-LINE '182) 
(PUT 'PUPRIGHT 'DEFINED-IN-FILE 'ATENSOR/PERM1.RED) 
(PUT 'PUPRIGHT 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE PUPRIGHT (P D)
    (PROG (W I K)
      (SETQ P (UNPKP P))
      (SETQ K (PLUS (LENGTH P) 1))
      (SETQ D (PLUS K (DIFFERENCE D 1)))
      (PROG (I)
        (SETQ I K)
       LAB
        (COND ((MINUSP (DIFFERENCE D I)) (RETURN NIL)))
        (SETQ W (CONS I W))
        (SETQ I (PLUS2 I 1))
        (GO LAB))
      (RETURN (PKP (APPEND P (REVERSIP W)))))) 
(PUT 'PUPLEFT 'NUMBER-OF-ARGS 2) 
(PUT 'PUPLEFT 'DEFINED-ON-LINE '191) 
(PUT 'PUPLEFT 'DEFINED-IN-FILE 'ATENSOR/PERM1.RED) 
(PUT 'PUPLEFT 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE PUPLEFT (P D)
    (PROG (W I)
      (SETQ P (UNPKP P))
      (SETQ P
              (PROG (X FORALL-RESULT FORALL-ENDPTR)
                (SETQ X P)
                (COND ((NULL X) (RETURN NIL)))
                (SETQ FORALL-RESULT
                        (SETQ FORALL-ENDPTR
                                (CONS ((LAMBDA (X) (PLUS X D)) (CAR X)) NIL)))
               LOOPLABEL
                (SETQ X (CDR X))
                (COND ((NULL X) (RETURN FORALL-RESULT)))
                (RPLACD FORALL-ENDPTR
                        (CONS ((LAMBDA (X) (PLUS X D)) (CAR X)) NIL))
                (SETQ FORALL-ENDPTR (CDR FORALL-ENDPTR))
                (GO LOOPLABEL)))
      (PROG (I)
        (SETQ I 1)
       LAB
        (COND ((MINUSP (DIFFERENCE D I)) (RETURN NIL)))
        (SETQ W (CONS I W))
        (SETQ I (PLUS2 I 1))
        (GO LAB))
      (RETURN (PKP (APPEND (REVERSIP W) P))))) 
(PUT 'PAPPEND 'NUMBER-OF-ARGS 2) 
(PUT 'PAPPEND 'DEFINED-ON-LINE '199) 
(PUT 'PAPPEND 'DEFINED-IN-FILE 'ATENSOR/PERM1.RED) 
(PUT 'PAPPEND 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE PAPPEND (P1 P2)
    (PROG (L)
      (SETQ P1 (UNPKP P1))
      (SETQ L (LENGTH P1))
      (SETQ P2 (UNPKP P2))
      (SETQ P2
              (PROG (X FORALL-RESULT FORALL-ENDPTR)
                (SETQ X P2)
                (COND ((NULL X) (RETURN NIL)))
                (SETQ FORALL-RESULT
                        (SETQ FORALL-ENDPTR
                                (CONS ((LAMBDA (X) (PLUS X L)) (CAR X)) NIL)))
               LOOPLABEL
                (SETQ X (CDR X))
                (COND ((NULL X) (RETURN FORALL-RESULT)))
                (RPLACD FORALL-ENDPTR
                        (CONS ((LAMBDA (X) (PLUS X L)) (CAR X)) NIL))
                (SETQ FORALL-ENDPTR (CDR FORALL-ENDPTR))
                (GO LOOPLABEL)))
      (RETURN (PKP (APPEND P1 P2))))) 
(GLOBAL '(DIGLIST*)) 
(SETQ DIGLIST*
        '((|1| . 1) (|2| . 2) (|3| . 3) (|4| . 4) (|5| . 5) (|6| . 6) (|7| . 7)
          (|8| . 8) (|9| . 9) (|0| . 0))) 
(PUT 'DSSOC 'NUMBER-OF-ARGS 2) 
(PUT 'DSSOC 'DEFINED-ON-LINE '214) 
(PUT 'DSSOC 'DEFINED-IN-FILE 'ATENSOR/PERM1.RED) 
(PUT 'DSSOC 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE DSSOC (X U)
    (COND ((NULL U) NIL) ((EQUAL X (CDAR U)) (CAR U)) (T (DSSOC X (CDR U))))) 
(PUT 'PKP 'NUMBER-OF-ARGS 1) 
(PUT 'PKP 'DEFINED-ON-LINE '221) 
(PUT 'PKP 'DEFINED-IN-FILE 'ATENSOR/PERM1.RED) 
(PUT 'PKP 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE PKP (P)
    (PROG (W HUGE Z)
      (COND ((OR (ATOM P) (NULL *PPACKED)) (RETURN P)))
      (SETQ HUGE (GEQ (LENGTH P) 10))
      (PROG (X)
        (SETQ X P)
       LAB
        (COND ((NULL X) (RETURN NIL)))
        ((LAMBDA (X)
           (COND
            (HUGE
             (PROGN
              (COND
               ((LESSP X 10)
                (SETQ W (CONS (CAR (DSSOC X DIGLIST*)) (CONS '|0| W))))
               (T
                (PROGN
                 (SETQ Z (DIVIDE X 10))
                 (SETQ W (CONS (CAR (DSSOC (CAR Z) DIGLIST*)) W))
                 (SETQ W (CONS (CAR (DSSOC (CDR Z) DIGLIST*)) W))
                 NIL)))
              NIL))
            (T (SETQ W (CONS (CAR (DSSOC X DIGLIST*)) W)))))
         (CAR X))
        (SETQ X (CDR X))
        (GO LAB))
      (RETURN (COMPRESS (REVERSIP W))))) 
(PUT 'UNPKP 'NUMBER-OF-ARGS 1) 
(PUT 'UNPKP 'DEFINED-ON-LINE '238) 
(PUT 'UNPKP 'DEFINED-IN-FILE 'ATENSOR/PERM1.RED) 
(PUT 'UNPKP 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE UNPKP (P)
    (PROG (W HUGE Z)
      (COND ((NULL (ATOM P)) (RETURN P)))
      (SETQ P (EXPLODE P))
      (SETQ HUGE (GEQ (LENGTH P) 10))
      (COND ((AND HUGE (NULL (EVENP (LENGTH P)))) (SETQ P (CONS '|0| P))))
      (PROG ()
       WHILELABEL
        (COND ((NOT P) (RETURN NIL)))
        (PROGN
         (COND
          (HUGE
           (PROGN
            (SETQ Z (CDR (ASSOC (CAR P) DIGLIST*)))
            (SETQ P (CDR P))
            (SETQ W
                    (CONS (PLUS (TIMES Z 10) (CDR (ASSOC (CAR P) DIGLIST*)))
                          W))
            NIL))
          (T (SETQ W (CONS (CDR (ASSOC (CAR P) DIGLIST*)) W))))
         (SETQ P (CDR P))
         NIL)
        (GO WHILELABEL))
      (RETURN (REVERSIP W)))) 
(PUT 'PORDER 'NUMBER-OF-ARGS 1) 
(PUT 'PORDER 'DEFINED-ON-LINE '256) 
(PUT 'PORDER 'DEFINED-IN-FILE 'ATENSOR/PERM1.RED) 
(PUT 'PORDER 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE PORDER (P) (LENGTH (UNPKP P))) 
(PUT 'HUGEP 'NUMBER-OF-ARGS 1) 
(PUT 'HUGEP 'DEFINED-ON-LINE '259) 
(PUT 'HUGEP 'DEFINED-IN-FILE 'ATENSOR/PERM1.RED) 
(PUT 'HUGEP 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE HUGEP (P)
    (PROGN (SETQ P (UNPKP P)) (COND ((GEQ (LENGTH P) 10) (LIST P)) (T NIL)))) 
(ENDMODULE) 