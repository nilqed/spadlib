(cl:declaim (cl:optimize cl:debug cl:safety))
(cl:declaim (sb-ext:muffle-conditions sb-ext:compiler-note cl:style-warning))
(MODULE (LIST 'ALGFN)) 
(EXPORTS (LIST 'ALGFNPL 'ALGEBRAICSF)) 
(IMPORTS (LIST 'SIMP 'INTERR 'DEPENDSP 'DEPENDSPL)) 
(PUT 'ALGFNP 'NUMBER-OF-ARGS 2) 
(PUT 'ALGFNP 'DEFINED-ON-LINE '38) 
(PUT 'ALGFNP 'DEFINED-IN-FILE 'ALGINT/ALGFN.RED) 
(PUT 'ALGFNP 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE ALGFNP (PF VAR)
    (COND ((ATOM PF) T) ((NOT (ATOM (CAR PF))) (INTERR "Not prefix form"))
          ((EQ (CAR PF) '*SQ) (ALGFNSQ (CADR PF) VAR))
          ((EQ (CAR PF) 'EXPT)
           (COND
            ((NOT (ALGINT-RATNUMP (CADDR PF)))
             (AND (NOT (DEPENDSP (CADR PF) VAR))
                  (NOT (DEPENDSP (CADDR PF) VAR))))
            (T (ALGFNP (CADR PF) VAR))))
          ((NOT (MEMQ (CAR PF) '(MINUS PLUS TIMES QUOTIENT SQRT)))
           (NOT (DEPENDSPL (CDR PF) VAR)))
          (T (ALGFNPL (CDR PF) VAR)))) 
(PUT 'ALGFNPL 'NUMBER-OF-ARGS 2) 
(PUT 'ALGFNPL 'DEFINED-ON-LINE '52) 
(PUT 'ALGFNPL 'DEFINED-IN-FILE 'ALGINT/ALGFN.RED) 
(PUT 'ALGFNPL 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE ALGFNPL (P-LIST VAR)
    (OR (NULL P-LIST)
        (AND (ALGFNP (CAR P-LIST) VAR) (ALGFNPL (CDR P-LIST) VAR)))) 
(PUT 'ALGFNSQ 'NUMBER-OF-ARGS 2) 
(PUT 'ALGFNSQ 'DEFINED-ON-LINE '55) 
(PUT 'ALGFNSQ 'DEFINED-IN-FILE 'ALGINT/ALGFN.RED) 
(PUT 'ALGFNSQ 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE ALGFNSQ (SQ VAR) (AND (ALGFNSF (CAR SQ) VAR) (ALGFNSF (CDR SQ) VAR))) 
(PUT 'ALGFNSF 'NUMBER-OF-ARGS 2) 
(PUT 'ALGFNSF 'DEFINED-ON-LINE '58) 
(PUT 'ALGFNSF 'DEFINED-IN-FILE 'ALGINT/ALGFN.RED) 
(PUT 'ALGFNSF 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE ALGFNSF (SF VAR)
    (OR (ATOM SF)
        (AND (ALGFNP (CAAAR SF) VAR) (ALGFNSF (CDAR SF) VAR)
             (ALGFNSF (CDR SF) VAR)))) 
(PUT 'ALGINT-RATNUMP 'NUMBER-OF-ARGS 1) 
(PUT 'ALGINT-RATNUMP 'DEFINED-ON-LINE '62) 
(PUT 'ALGINT-RATNUMP 'DEFINED-IN-FILE 'ALGINT/ALGFN.RED) 
(PUT 'ALGINT-RATNUMP 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE ALGINT-RATNUMP (Q)
    (COND ((ATOM Q) (NUMBERP Q))
          (T
           (AND (EQ (CAR Q) 'QUOTIENT) (NUMBERP (CADR Q))
                (NUMBERP (CADDR Q)))))) 
(PUT 'ALGEBRAICSF 'NUMBER-OF-ARGS 1) 
(PUT 'ALGEBRAICSF 'DEFINED-ON-LINE '66) 
(PUT 'ALGEBRAICSF 'DEFINED-IN-FILE 'ALGINT/ALGFN.RED) 
(PUT 'ALGEBRAICSF 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE ALGEBRAICSF (U)
    (COND ((ATOM U) NIL)
          (T
           (OR (ALGEBRAICP (CAAAR U)) (ALGEBRAICSF (CDAR U))
               (ALGEBRAICSF (CDR U)))))) 
(PUT 'ALGEBRAICP 'NUMBER-OF-ARGS 1) 
(PUT 'ALGEBRAICP 'DEFINED-ON-LINE '70) 
(PUT 'ALGEBRAICP 'DEFINED-IN-FILE 'ALGINT/ALGFN.RED) 
(PUT 'ALGEBRAICP 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE ALGEBRAICP (U)
    (COND ((ATOM U) NIL) ((EQ (CAR U) 'EXPT) (NEQ 1 (CDR (SIMP (CADDR U)))))
          (T (EQ (CAR U) 'SQRT)))) 
(ENDMODULE) 