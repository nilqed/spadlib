(cl:declaim (cl:optimize cl:debug cl:safety))
(cl:declaim (sb-ext:muffle-conditions sb-ext:compiler-note cl:style-warning))
(MODULE (LIST 'RTRACE)) 
(SWITCH (LIST (LIST 'EQUAL 'RTRACE 'ON))) 
(PUT 'RTR 'DEFINED-ON-LINE '61) 
(PUT 'RTR 'DEFINED-IN-FILE 'RTRACE/RTRACE.RED) 
(PUT 'RTR 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DM RTR (FNS) (RTR* 'RTRACE FNS)) 
(PUT 'UNRTR 'DEFINED-ON-LINE '65) 
(PUT 'UNRTR 'DEFINED-IN-FILE 'RTRACE/RTRACE.RED) 
(PUT 'UNRTR 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DM UNRTR (FNS) (RTR* 'UNRTRACE FNS)) 
(PUT 'RTRST 'DEFINED-ON-LINE '69) 
(PUT 'RTRST 'DEFINED-IN-FILE 'RTRACE/RTRACE.RED) 
(PUT 'RTRST 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DM RTRST (FNS) (RTR* 'RTRACESET FNS)) 
(PUT 'UNRTRST 'DEFINED-ON-LINE '73) 
(PUT 'UNRTRST 'DEFINED-IN-FILE 'RTRACE/RTRACE.RED) 
(PUT 'UNRTRST 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DM UNRTRST (FNS) (RTR* 'UNRTRACE FNS)) 
(FLAG '(RTR RTRST UNRTR UNRTRST) 'NOFORM) 
(DEFLIST '((RTR RLIS) (RTRST RLIS) (UNRTR RLIS) (UNRTRST RLIS)) 'STAT) 
(PUT 'RTR* 'NUMBER-OF-ARGS 2) 
(PUT 'RTR* 'DEFINED-ON-LINE '80) 
(PUT 'RTR* 'DEFINED-IN-FILE 'RTRACE/RTRACE.RED) 
(PUT 'RTR* 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE RTR* (TRFN FNS)
    (LIST TRFN
          (MKQUOTE
           (PROG (FN FORALL-RESULT FORALL-ENDPTR)
             (SETQ FN (CDR FNS))
             (COND ((NULL FN) (RETURN NIL)))
             (SETQ FORALL-RESULT
                     (SETQ FORALL-ENDPTR
                             (CONS
                              ((LAMBDA (FN)
                                 (OR (GET FN 'SIMPFN) (GET FN 'PSOPFN) FN))
                               (CAR FN))
                              NIL)))
            LOOPLABEL
             (SETQ FN (CDR FN))
             (COND ((NULL FN) (RETURN FORALL-RESULT)))
             (RPLACD FORALL-ENDPTR
                     (CONS
                      ((LAMBDA (FN) (OR (GET FN 'SIMPFN) (GET FN 'PSOPFN) FN))
                       (CAR FN))
                      NIL))
             (SETQ FORALL-ENDPTR (CDR FORALL-ENDPTR))
             (GO LOOPLABEL))))) 
(PUT 'RTRACE 'NUMBER-OF-ARGS 1) 
(PUT 'RTRACE 'DEFINED-ON-LINE '87) 
(PUT 'RTRACE 'DEFINED-IN-FILE 'RTRACE/RTRACE.RED) 
(PUT 'RTRACE 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE RTRACE (L) (MAPCAR L (FUNCTION RTRACE1))) 
(PUT 'UNRTRACE 'NUMBER-OF-ARGS 1) 
(PUT 'UNRTRACE 'DEFINED-ON-LINE '89) 
(PUT 'UNRTRACE 'DEFINED-IN-FILE 'RTRACE/RTRACE.RED) 
(PUT 'UNRTRACE 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE UNRTRACE (L) (MAPCAR L (FUNCTION UNRTRACE1))) 
(FLUID '(*RTRACE-SETQ)) 
(PUT 'RTRACESET 'NUMBER-OF-ARGS 1) 
(PUT 'RTRACESET 'DEFINED-ON-LINE '95) 
(PUT 'RTRACESET 'DEFINED-IN-FILE 'RTRACE/RTRACE.RED) 
(PUT 'RTRACESET 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE RTRACESET (L) ((LAMBDA (*RTRACE-SETQ) (MAPCAR L (FUNCTION RTRACE1))) T)) 
(PUT 'RTRACE1 'NUMBER-OF-ARGS 1) 
(PUT 'RTRACE1 'DEFINED-ON-LINE '98) 
(PUT 'RTRACE1 'DEFINED-IN-FILE 'RTRACE/RTRACE.RED) 
(PUT 'RTRACE1 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE RTRACE1 (NAME)
    (PROG (DEFN ARGS *REDEFMSG)
      (COND
       ((NULL (SETQ DEFN (GETD NAME)))
        (RETURN
         (PROGN
          (PRIN2 "***** ")
          (PRIN2 NAME)
          (PRIN2 " not yet defined! ")
          NIL))))
      (COND
       (*COMP
        (PROGN
         (PROGN (PRIN2 "Portable tracing does not work reliably with the") NIL)
         (PROGN (PRIN2 " switch `comp' on, so it has been turned off! ") NIL)
         (OFF (LIST 'COMP)))))
      (COND
       ((AND (EQCAR DEFN 'EXPR) (EQCAR (CDR DEFN) 'LAMBDA))
        (COND
         ((EQCAR (CADDDR DEFN) 'RUN-RTRACED-PROCEDURE)
          (RETURN
           (COND
            ((EQ (FLAGP NAME 'RTRACED-SETQ) *RTRACE-SETQ)
             (PROGN
              (PRIN2 "*** ")
              (PRIN2 NAME)
              (PRIN2 " already traced! ")
              NIL))
            (T (RE-RTRACE1 NAME)))))
         (T (SETQ ARGS (CADDR DEFN)))))
       (T
        (PROGN
         (COND
          (*RTRACE-SETQ
           (PROGN
            (PROGN
             (PRIN2 "*** ")
             (PRIN2 NAME)
             (PRIN2 " must be interpreted for portable assignment tracing! ")
             NIL)
            (TERPRI)
            (PROGN (PRIN2 "*** Tracing arguments and return value only.") NIL)
            (TERPRI)
            (SETQ *RTRACE-SETQ NIL))))
         (COND
          ((SETQ ARGS (GET NAME 'NUMBER-OF-ARGS))
           (PROGN
            (SETQ ARGS
                    (PROG (I FORALL-RESULT FORALL-ENDPTR)
                      (SETQ I 1)
                      (COND ((MINUSP (DIFFERENCE ARGS I)) (RETURN NIL)))
                      (SETQ FORALL-RESULT
                              (SETQ FORALL-ENDPTR (CONS (MKID '|aRG| I) NIL)))
                     LOOPLABEL
                      (SETQ I (PLUS2 I 1))
                      (COND
                       ((MINUSP (DIFFERENCE ARGS I)) (RETURN FORALL-RESULT)))
                      (RPLACD FORALL-ENDPTR (CONS (MKID '|aRG| I) NIL))
                      (SETQ FORALL-ENDPTR (CDR FORALL-ENDPTR))
                      (GO LOOPLABEL)))
            (PROGN
             (PRIN2 "*** ")
             (PRIN2 NAME)
             (PRIN2 " is compiled: ")
             (PRIN2 "portable tracing may not show recursive calls! ")
             NIL)
            (TERPRI)
            NIL))
          (T
           (PROGN
            (PROGN
             (PRIN2 "***** ")
             (PRIN2 NAME)
             (PRIN2 " must be interpreted for portable tracing! ")
             NIL)
            (TERPRI)
            (RETURN NIL))))
         NIL)))
      (COND
       (*RTRACE-SETQ
        (PROGN
         (SETQ DEFN
                 (SUBST 'RTRACED-SETQ 'SETQ (SUBST 'RTRACED-SETK 'SETK DEFN)))
         (FLAG (LIST NAME) 'RTRACED-SETQ)))
       (T (REMFLAG (LIST NAME) 'RTRACED-SETQ)))
      (PUT NAME 'RTRACED-PROCEDURE DEFN)
      (RETURN
       (EVAL
        (LIST 'DE NAME ARGS
              (LIST 'RUN-RTRACED-PROCEDURE (MKQUOTE NAME) (MKQUOTE ARGS)
                    (CONS 'LIST ARGS))))))) 
(PUT 'RE-RTRACE1 'NUMBER-OF-ARGS 1) 
(PUT 'RE-RTRACE1 'DEFINED-ON-LINE '150) 
(PUT 'RE-RTRACE1 'DEFINED-IN-FILE 'RTRACE/RTRACE.RED) 
(PUT 'RE-RTRACE1 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE RE-RTRACE1 (NAME)
    (PROG (DEFN)
      (SETQ DEFN (GET NAME 'RTRACED-PROCEDURE))
      (COND
       (*RTRACE-SETQ
        (PROGN
         (SETQ DEFN
                 (SUBST 'RTRACED-SETQ 'SETQ (SUBST 'RTRACED-SETK 'SETK DEFN)))
         (FLAG (LIST NAME) 'RTRACED-SETQ)))
       (T
        (PROGN
         (SETQ DEFN
                 (SUBST 'SETQ 'RTRACED-SETQ (SUBST 'SETK 'RTRACED-SETK DEFN)))
         (REMFLAG (LIST NAME) 'RTRACED-SETQ))))
      (PUT NAME 'RTRACED-PROCEDURE DEFN)
      (PROGN (PRIN2 "*** Trace mode of ") (PRIN2 NAME) (PRIN2 " changed.") NIL)
      (RETURN NAME))) 
(PUT 'UNRTRACE1 'NUMBER-OF-ARGS 1) 
(PUT 'UNRTRACE1 'DEFINED-ON-LINE '169) 
(PUT 'UNRTRACE1 'DEFINED-IN-FILE 'RTRACE/RTRACE.RED) 
(PUT 'UNRTRACE1 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE UNRTRACE1 (NAME)
    (PROG (DEFN *REDEFMSG)
      (COND
       ((SETQ DEFN (REMPROP NAME 'RTRACED-PROCEDURE))
        (PROGN
         (SETQ DEFN
                 (SUBST 'SETQ 'RTRACED-SETQ (SUBST 'SETK 'RTRACED-SETK DEFN)))
         (PUTD NAME (CAR DEFN) (CDR DEFN))
         NIL)))
      (REMFLAG (LIST NAME) 'RTRACED-SETQ)
      (RETURN NAME))) 
(FLUID '(RTRACE-DEPTH)) 
(SETQ RTRACE-DEPTH 0) 
(GLOBAL '(RTROUT*)) 
(RLISTAT '(RTROUT)) 
(PUT 'RTROUT 'NUMBER-OF-ARGS 1) 
(PUT 'RTROUT 'DEFINED-ON-LINE '188) 
(PUT 'RTROUT 'DEFINED-IN-FILE 'RTRACE/RTRACE.RED) 
(PUT 'RTROUT 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE RTROUT (FILES)
    (PROGN
     (COND (RTROUT* (CLOSE RTROUT*)))
     (SETQ RTROUT* (COND ((CAR FILES) (OPEN (CAR FILES) 'OUTPUT))))
     NIL)) 
(PUT 'RUN-RTRACED-PROCEDURE 'NUMBER-OF-ARGS 3) 
(PUT 'RUN-RTRACED-PROCEDURE 'DEFINED-ON-LINE '195) 
(PUT 'RUN-RTRACED-PROCEDURE 'DEFINED-IN-FILE 'RTRACE/RTRACE.RED) 
(PUT 'RUN-RTRACED-PROCEDURE 'PROCEDURE_TYPE
     '(ARROW (TIMES GENERAL GENERAL GENERAL) GENERAL)) 
(DE RUN-RTRACED-PROCEDURE (NAME ARGNAMES ARGS)
    ((LAMBDA (RTRACE-DEPTH)
       (PROG (OLD-HANDLE RESULT)
         (SETQ RESULT (CDR (GET NAME 'RTRACED-PROCEDURE)))
         (SETQ OLD-HANDLE (WRS RTROUT*))
         (PROGN
          (PRIN2 "Enter (")
          (PRIN2 RTRACE-DEPTH)
          (PRIN2 ") ")
          (PRIN2 NAME)
          NIL)
         (TERPRI)
         (PROG (ARG)
           (SETQ ARG ARGS)
          LAB
           (COND ((NULL ARG) (RETURN NIL)))
           ((LAMBDA (ARG)
              (PROGN
               (PROGN (PRIN2 "   ") (PRIN2 (CAR ARGNAMES)) (PRIN2 ":  ") NIL)
               (RTRACE-PRINT ARG)
               (SETQ ARGNAMES (CDR ARGNAMES))))
            (CAR ARG))
           (SETQ ARG (CDR ARG))
           (GO LAB))
         (WRS OLD-HANDLE)
         (SETQ RESULT
                 (ERRORSET* (LIST 'APPLY (MKQUOTE RESULT) (MKQUOTE ARGS)) NIL))
         (COND ((ERRORP RESULT) (REDERR EMSG*)) (T (SETQ RESULT (CAR RESULT))))
         (WRS RTROUT*)
         (PROGN
          (PRIN2 "Leave (")
          (PRIN2 RTRACE-DEPTH)
          (PRIN2 ") ")
          (PRIN2 NAME)
          (PRIN2 " = ")
          NIL)
         (RTRACE-PRINT RESULT)
         (WRS OLD-HANDLE)
         (RETURN RESULT)))
     (ADD1 RTRACE-DEPTH))) 
(PUT 'RTRACE-PRINT 'NUMBER-OF-ARGS 1) 
(PUT 'RTRACE-PRINT 'DEFINED-ON-LINE '217) 
(PUT 'RTRACE-PRINT 'DEFINED-IN-FILE 'RTRACE/RTRACE.RED) 
(PUT 'RTRACE-PRINT 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE RTRACE-PRINT (ARG) (COND (*RTRACE (RDBPRINT ARG)) (T (PRINT ARG)))) 
(PUT 'RTRACE-SETQ-PRINT 'NUMBER-OF-ARGS 1) 
(PUT 'RTRACE-SETQ-PRINT 'DEFINED-ON-LINE '220) 
(PUT 'RTRACE-SETQ-PRINT 'DEFINED-IN-FILE 'RTRACE/RTRACE.RED) 
(PUT 'RTRACE-SETQ-PRINT 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE RTRACE-SETQ-PRINT (ARG)
    (PROG (OLD-HANDLE)
      (SETQ OLD-HANDLE (WRS RTROUT*))
      (RTRACE-PRINT ARG)
      (WRS OLD-HANDLE)
      (RETURN ARG))) 
(PUT 'RTRACED-SETQ 'DEFINED-ON-LINE '228) 
(PUT 'RTRACED-SETQ 'DEFINED-IN-FILE 'RTRACE/RTRACE.RED) 
(PUT 'RTRACED-SETQ 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DM RTRACED-SETQ (U)
    (PROG (LEFT RIGHT OLD-HANDLE)
      (SETQ LEFT (CADR U))
      (SETQ RIGHT (CADDR U))
      (SETQ OLD-HANDLE (WRS RTROUT*))
      (PROGN (PRIN2 LEFT) (PRIN2 " := ") NIL)
      (WRS OLD-HANDLE)
      (RETURN
       (COND ((EQCAR RIGHT 'RTRACED-SETQ) (LIST 'SETQ LEFT RIGHT))
             (T (LIST 'RTRACE-SETQ-PRINT (LIST 'SETQ LEFT RIGHT))))))) 
(PUT 'RTRACED-SETK 'NUMBER-OF-ARGS 2) 
(PUT 'RTRACED-SETK 'DEFINED-ON-LINE '245) 
(PUT 'RTRACED-SETK 'DEFINED-IN-FILE 'RTRACE/RTRACE.RED) 
(PUT 'RTRACED-SETK 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE RTRACED-SETK (LEFT RIGHT)
    (PROG (OLD-HANDLE)
      (SETQ OLD-HANDLE (WRS RTROUT*))
      (PROGN (PRIN2 LEFT) (PRIN2 " := ") NIL)
      (RTRACE-PRINT RIGHT)
      (WRS OLD-HANDLE)
      (RETURN (SETK LEFT RIGHT)))) 
(FLUID '(TRLIMIT)) 
(SHARE (LIST 'TRLIMIT)) 
(SETQ TRLIMIT (PROGN (SETQ ALGLIST* (CONS NIL NIL)) 5)) 
(PUT 'RDBPRINT 'NUMBER-OF-ARGS 1) 
(PUT 'RDBPRINT 'DEFINED-ON-LINE '269) 
(PUT 'RDBPRINT 'DEFINED-IN-FILE 'RTRACE/RTRACE.RED) 
(PUT 'RDBPRINT 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE RDBPRINT (U)
    ((LAMBDA (*NAT) (PROGN (ALGPRI1 U 0) (ASSGNPRI "" NIL 'LAST))) NIL)) 
(PUT 'ALGPRI1 'NUMBER-OF-ARGS 2) 
(PUT 'ALGPRI1 'DEFINED-ON-LINE '274) 
(PUT 'ALGPRI1 'DEFINED-IN-FILE 'RTRACE/RTRACE.RED) 
(PUT 'ALGPRI1 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE ALGPRI1 (U N)
    (PROG (R)
      (SETQ N (PLUS N 1))
      (COND ((SETQ R (ALGPRIFORM U)) (RETURN (ALGPRI2 R))))
      (ALGPRI2 "[")
      (PROG ()
       WHILELABEL
        (COND ((NOT U) (RETURN NIL)))
        (COND ((ATOM U) (PROGN (ALGPRI2 ".") (ALGPRI2 U) (SETQ U NIL)))
              (T
               (PROGN
                (ALGPRI1 (CAR U) N)
                (SETQ U (CDR U))
                (SETQ N (PLUS N 1))
                (COND ((PAIRP U) (ALGPRI2 ",")))
                (COND
                 ((GREATERP N TRLIMIT)
                  (PROGN (ALGPRI2 " ...") (SETQ U NIL)))))))
        (GO WHILELABEL))
      (ALGPRI2 "]"))) 
(PUT 'ALGPRIFORM 'NUMBER-OF-ARGS 1) 
(PUT 'ALGPRIFORM 'DEFINED-ON-LINE '290) 
(PUT 'ALGPRIFORM 'DEFINED-IN-FILE 'RTRACE/RTRACE.RED) 
(PUT 'ALGPRIFORM 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE ALGPRIFORM (U)
    (COND ((ATOM U) U) ((OR (GET (CAR U) 'PRIFN) (GET (CAR U) 'PPRIFN)) U)
          ((EQCAR U '*SQ) (PREPSQ (CADR U))) ((IS-ALGEBRAIC? U) U)
          ((GET (CAR U) 'PREPFN) (PREPF U)) ((IS-SFORM? U) (PREPF U))
          ((IS-SFQUOT? U) (PREPSQ U)))) 
(PUT 'IS-ALGEBRAIC? 'NUMBER-OF-ARGS 1) 
(PUT 'IS-ALGEBRAIC? 'DEFINED-ON-LINE '300) 
(PUT 'IS-ALGEBRAIC? 'DEFINED-IN-FILE 'RTRACE/RTRACE.RED) 
(PUT 'IS-ALGEBRAIC? 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE IS-ALGEBRAIC? (U)
    (OR (ATOM U) (GET (CAR U) 'DNAME)
        (AND (OR (GET (CAR U) 'SIMPFN) (GET (CAR U) 'PSOPFN))
             (ALGEBRAIC-ARGS (CDR U))))) 
(PUT 'ALGEBRAIC-ARGS 'NUMBER-OF-ARGS 1) 
(PUT 'ALGEBRAIC-ARGS 'DEFINED-ON-LINE '305) 
(PUT 'ALGEBRAIC-ARGS 'DEFINED-IN-FILE 'RTRACE/RTRACE.RED) 
(PUT 'ALGEBRAIC-ARGS 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE ALGEBRAIC-ARGS (U)
    (OR (NULL U) (AND (IS-ALGEBRAIC? (CAR U)) (ALGEBRAIC-ARGS (CDR U))))) 
(PUT 'IS-SFORM? 'NUMBER-OF-ARGS 1) 
(PUT 'IS-SFORM? 'DEFINED-ON-LINE '308) 
(PUT 'IS-SFORM? 'DEFINED-IN-FILE 'RTRACE/RTRACE.RED) 
(PUT 'IS-SFORM? 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE IS-SFORM? (U)
    (COND ((ATOM U) T) ((GET (CAR U) 'DNAME) T)
          (T
           (AND (PAIRP (CAR U)) (PAIRP (CAAR U))
                (OR (IS-ALGEBRAIC? (CAAAR U)) (IS-SFORM? (CAAAR U)))
                (FIXP (CDAAR U)) (GREATERP (CDAAR U) 0) (IS-SFORM? (CDAR U))
                (IS-SFORM? (CDR U)))))) 
(PUT 'IS-SFQUOT? 'NUMBER-OF-ARGS 1) 
(PUT 'IS-SFQUOT? 'DEFINED-ON-LINE '316) 
(PUT 'IS-SFQUOT? 'DEFINED-IN-FILE 'RTRACE/RTRACE.RED) 
(PUT 'IS-SFQUOT? 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE IS-SFQUOT? (U) (AND (PAIRP U) (IS-SFORM? (CAR U)) (IS-SFORM? (CDR U)))) 
(PUT 'ALGPRI2 'NUMBER-OF-ARGS 1) 
(PUT 'ALGPRI2 'DEFINED-ON-LINE '319) 
(PUT 'ALGPRI2 'DEFINED-IN-FILE 'RTRACE/RTRACE.RED) 
(PUT 'ALGPRI2 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE ALGPRI2 (U) (ASSGNPRI U NIL NIL)) 
(PUT 'RDBPRIN2 'NUMBER-OF-ARGS 1) 
(PUT 'RDBPRIN2 'DEFINED-ON-LINE '325) 
(PUT 'RDBPRIN2 'DEFINED-IN-FILE 'RTRACE/RTRACE.RED) 
(PUT 'RDBPRIN2 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE RDBPRIN2 (U) ((LAMBDA (*NAT) (ALGPRI1 U 0)) NIL)) 
(PUT 'RULE-TRPRINT* 'NUMBER-OF-ARGS 1) 
(PUT 'RULE-TRPRINT* 'DEFINED-ON-LINE '328) 
(PUT 'RULE-TRPRINT* 'DEFINED-IN-FILE 'RTRACE/RTRACE.RED) 
(PUT 'RULE-TRPRINT* 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE RULE-TRPRINT* (U)
    (PROG (R)
      (RDBPRIN2 "Rule ")
      (RDBPRIN2 (CAR U))
      (COND ((CADR U) (PROGN (RDBPRIN2 ".") (RDBPRIN2 (CADR U)))))
      (RDBPRIN2 ": ")
      (RDBPRIN2 (CADDR U))
      (RDBPRIN2 " => ")
      (RDBPRINT (SETQ R (CADDDR U)))
      (RETURN (REVAL1 R T)))) 
(PUT 'RULE-TRPRINT 'PSOPFN 'RULE-TRPRINT*) 
(FLUID '(*RECURSIVEERROR)) 
(SETQ *RECURSIVEERROR T) 
(PROG (*REDEFMSG)
  (PROGN
   (PUT 'PUT-KVALUE 'NUMBER-OF-ARGS 4)
   (PUT 'PUT-KVALUE 'DEFINED-ON-LINE '353)
   (PUT 'PUT-KVALUE 'DEFINED-IN-FILE 'RTRACE/RTRACE.RED)
   (PUT 'PUT-KVALUE 'PROCEDURE_TYPE
        '(ARROW (TIMES GENERAL GENERAL GENERAL GENERAL) GENERAL))
   (DE PUT-KVALUE (U V W X)
       (COND
        ((AND *RECURSIVEERROR
              (COND ((EQCAR X '*SQ) (SQ_MEMBER W (CADR X))) (T (SMEMBER W X))))
         (RECURSIVEERROR W))
        (T (PUT U 'KVALUE (ACONC V (LIST W X)))))))
  (PROGN
   (PUT 'PUT-AVALUE 'NUMBER-OF-ARGS 3)
   (PUT 'PUT-AVALUE 'DEFINED-ON-LINE '360)
   (PUT 'PUT-AVALUE 'DEFINED-IN-FILE 'RTRACE/RTRACE.RED)
   (PUT 'PUT-AVALUE 'PROCEDURE_TYPE
        '(ARROW (TIMES GENERAL GENERAL GENERAL) GENERAL))
   (DE PUT-AVALUE (U V W)
       (COND
        ((EQ V 'SCALAR)
         (COND ((AND (EQCAR W '*SQ) (SQ_MEMBER U (CADR W))) (RECURSIVEERROR U))
               (*REDUCE4 (PUTOBJECT U W 'GENERIC))
               (T (PUT U 'AVALUE (LIST V W)))))
        ((AND *RECURSIVEERROR (SMEMBER U W)) (RECURSIVEERROR U))
        (T (PUT U 'AVALUE (LIST V W))))))) 
(FLUID '(TRACE-RULES*)) 
(PUT 'TRRL 'NUMBER-OF-ARGS 1) 
(PUT 'TRRL 'DEFINED-ON-LINE '375) 
(PUT 'TRRL 'DEFINED-IN-FILE 'RTRACE/RTRACE.RED) 
(PUT 'TRRL 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE TRRL (W)
    (PROG (U)
      (SETQ U W)
     LAB
      (COND ((NULL U) (RETURN NIL)))
      ((LAMBDA (U)
         (PROG (NAME RS RSX N *RECURSIVEERROR)
           (SETQ RS (REVAL1 U T))
           (COND
            ((IDP U)
             (PROGN
              (COND
               ((ASSOC U TRACE-RULES*)
                (PROGN
                 (PROGN
                  (PRIN2 "*** rules for ")
                  (PRIN2 U)
                  (PRIN2 " already traced! ")
                  NIL)
                 (TERPRI)
                 (RETURN NIL))))
              (SETQ NAME U)
              (COND ((EQUAL RS U) (SETQ RS (SHOWRULES U))))
              (COND
               ((OR (ATOM RS) (NEQ (CAR RS) 'LIST) (NULL (CDR RS)))
                (REDERR (LIST "could not find rules for" U))))))
            (T
             (PROGN
              (SETQ NAME (INTERN (GENSYM)))
              (PRIN2 "*** using name ")
              (PRIN2 NAME)
              (PRIN2T " for rule list"))))
           (COND ((EQCAR RS 'LIST) (PROGN (SETQ RS (CDR RS)) (SETQ N 1)))
                 (T (PROGN (SETQ RS (LIST RS)) (SETQ N NIL))))
           (SETQ RSX (TRRULES1 NAME N RS))
           (SETQ TRACE-RULES* (CONS (LIST NAME RS RSX) TRACE-RULES*))
           (CLEARRULES (LIST (CONS 'LIST RS)))
           (LET (LIST (CONS 'LIST RSX)))
           (RETURN NAME)))
       (CAR U))
      (SETQ U (CDR U))
      (GO LAB))) 
(PUT 'TRRLID 'NUMBER-OF-ARGS 1) 
(PUT 'TRRLID 'DEFINED-ON-LINE '412) 
(PUT 'TRRLID 'DEFINED-IN-FILE 'RTRACE/RTRACE.RED) 
(PUT 'TRRLID 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE TRRLID (W)
    (PROG (U)
      (SETQ U W)
     LAB
      (COND ((NULL U) (RETURN NIL)))
      ((LAMBDA (U)
         (PROG (RS RSX NAME *RECURSIVEERROR)
           (COND ((NOT (IDP U)) (TYPERR U "rule list identifier")))
           (COND
            ((ASSOC U TRACE-RULES*)
             (PROGN
              (PROGN
               (PRIN2 "*** rules for ")
               (PRIN2 U)
               (PRIN2 " already traced! ")
               NIL)
              (TERPRI)
              (RETURN NIL))))
           (SETQ RS (REVAL1 U T))
           (COND
            ((OR (ATOM RS) (NEQ (CAR RS) 'LIST) (NULL (CDR RS)))
             (TYPERR U "rule list identifier")))
           (SETQ RS (CDR RS))
           (SETQ NAME U)
           (SETQ RSX (TRRULES1 NAME 1 RS))
           (SETQ TRACE-RULES* (CONS (LIST U RS RSX) TRACE-RULES*))
           (SETK0 U (CONS 'LIST RSX))))
       (CAR U))
      (SETQ U (CDR U))
      (GO LAB))) 
(PUT 'TRRL 'STAT 'RLIS) 
(PUT 'TRRLID 'STAT 'RLIS) 
(PUT 'TRRULES1 'NUMBER-OF-ARGS 3) 
(PUT 'TRRULES1 'DEFINED-ON-LINE '440) 
(PUT 'TRRULES1 'DEFINED-IN-FILE 'RTRACE/RTRACE.RED) 
(PUT 'TRRULES1 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL GENERAL) GENERAL)) 
(DE TRRULES1 (NAME N RS)
    (PROG (RL NRL RH LH)
      (SETQ RL (CAR RS))
      (SETQ RS (CDR RS))
      (COND
       ((OR (ATOM RL) (NOT (MEMQ (CAR RL) '(REPLACEBY EQUAL))))
        (TYPERR RL 'RULE)))
      (SETQ LH (CADR RL))
      (SETQ RH (CADDR RL))
      (COND ((CONSTANT_EXPRP LH) (GO A)))
      (SETQ RH
              (COND
               ((EQCAR RH 'WHEN)
                (LIST 'WHEN (LIST 'RULE-TRPRINT NAME N LH (CADR RH))
                      (CADDR RH)))
               (T (LIST 'RULE-TRPRINT NAME N LH RH))))
     A
      (SETQ NRL (LIST (CAR RL) LH RH))
      (RETURN
       (COND ((NULL RS) (LIST NRL))
             (T (CONS NRL (TRRULES1 NAME (PLUS N 1) RS))))))) 
(PUT 'UNTRRL 'NUMBER-OF-ARGS 1) 
(PUT 'UNTRRL 'DEFINED-ON-LINE '456) 
(PUT 'UNTRRL 'DEFINED-IN-FILE 'RTRACE/RTRACE.RED) 
(PUT 'UNTRRL 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE UNTRRL (U)
    (PROG (W V)
      (PROG (R)
        (SETQ R U)
       LAB
        (COND ((NULL R) (RETURN NIL)))
        ((LAMBDA (R)
           (PROGN
            (SETQ W
                    (COND
                     ((IDP R)
                      (OR (ASSOC R TRACE-RULES*)
                          (ASSOC (SHOWRULES R) TRACE-RULES*)))
                     (T
                      (ASSOC!2
                       (COND ((EQCAR R 'LIST) (CDR R)) (T (CONS R NIL)))
                       TRACE-RULES*))))
            (COND
             (W
              (PROGN
               (SETQ V (CONS 'LIST (CADDR W)))
               (CLEARRULES (LIST V))
               (SETQ V (CONS 'LIST (CADR W)))
               (LET (LIST V))
               (SETQ TRACE-RULES* (DELETE W TRACE-RULES*))))
             (T
              (PROGN
               (PRIN2 "*** rule ")
               (PRIN2 R)
               (PRIN2 " not found")
               NIL)))))
         (CAR R))
        (SETQ R (CDR R))
        (GO LAB)))) 
(PUT 'ASSOC!2 'NUMBER-OF-ARGS 2) 
(PUT 'ASSOC!2 'DEFINED-ON-LINE '477) 
(PUT 'ASSOC!2 'DEFINED-IN-FILE 'RTRACE/RTRACE.RED) 
(PUT 'ASSOC!2 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE ASSOC!2 (U V)
    (COND ((NULL V) NIL) ((EQUAL U (CADAR V)) (CAR V)) (T (ASSOC!2 U (CDR V))))) 
(PUT 'UNTRRLID 'NUMBER-OF-ARGS 1) 
(PUT 'UNTRRLID 'DEFINED-ON-LINE '484) 
(PUT 'UNTRRLID 'DEFINED-IN-FILE 'RTRACE/RTRACE.RED) 
(PUT 'UNTRRLID 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE UNTRRLID (U)
    (PROG (W)
      (PROG (R)
        (SETQ R U)
       LAB
        (COND ((NULL R) (RETURN NIL)))
        ((LAMBDA (R)
           (PROGN
            (COND ((NOT (IDP R)) (TYPERR R "rule list identifier")))
            (SETQ W (ASSOC R TRACE-RULES*))
            (COND
             (W
              (PROGN
               (SETK0 R (CONS 'LIST (CADR W)))
               (SETQ TRACE-RULES* (DELETE W TRACE-RULES*)))))))
         (CAR R))
        (SETQ R (CDR R))
        (GO LAB)))) 
(PUT 'UNTRRL 'STAT 'RLIS) 
(PUT 'UNTRRLID 'STAT 'RLIS) 
(PUT 'RULE-TRPRINT 'PRIFN (FUNCTION (LAMBDA (U) (MAPRIN (CAR (CDDDDR U)))))) 
(PUT 'RULE-TRPRINT 'FANCY-PRIFN
     (FUNCTION (LAMBDA (U) (FANCY-MAPRIN (CAR (CDDDDR U)))))) 
(ENDMODULE) 