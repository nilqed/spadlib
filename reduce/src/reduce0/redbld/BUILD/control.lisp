(cl:declaim (cl:optimize cl:debug cl:safety))
(cl:declaim (sb-ext:muffle-conditions sb-ext:compiler-note cl:style-warning))
(MODULE (LIST 'CONTROL)) 
(FLUID '(*REVPRI)) 
(GLOBAL '(|:FLAGLIS| |:PROPLIS| INDICES*)) 
(SWITCH (LIST 'DISTRIBUTE)) 
(PUT 'NORDP 'NUMBER-OF-ARGS 2) 
(PUT 'NORDP 'DEFINED-ON-LINE '38) 
(PUT 'NORDP 'DEFINED-IN-FILE 'ASSIST/CONTROL.RED) 
(PUT 'NORDP 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE NORDP (U V) (NOT (ORDP U V))) 
(PUT 'DEPVARP 'NUMBER-OF-ARGS 2) 
(PUT 'DEPVARP 'DEFINED-ON-LINE '42) 
(PUT 'DEPVARP 'DEFINED-IN-FILE 'ASSIST/CONTROL.RED) 
(PUT 'DEPVARP 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE DEPVARP (U V) (COND ((DEPENDS U V) T) (T NIL))) 
(PUT 'ALATOMP 'NUMBER-OF-ARGS 1) 
(PUT 'ALATOMP 'DEFINED-ON-LINE '46) 
(PUT 'ALATOMP 'DEFINED-IN-FILE 'ASSIST/CONTROL.RED) 
(PUT 'ALATOMP 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE ALATOMP (U) (OR (FIXP U) (IDP U))) 
(PUT 'ALKERNP 'NUMBER-OF-ARGS 1) 
(PUT 'ALKERNP 'DEFINED-ON-LINE '51) 
(PUT 'ALKERNP 'DEFINED-IN-FILE 'ASSIST/CONTROL.RED) 
(PUT 'ALKERNP 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE ALKERNP (U) (AND (NOT (STRINGP U)) (KERNP (SIMP* U)))) 
(PUT 'PRECP 'NUMBER-OF-ARGS 2) 
(PUT 'PRECP 'DEFINED-ON-LINE '55) 
(PUT 'PRECP 'DEFINED-IN-FILE 'ASSIST/CONTROL.RED) 
(PUT 'PRECP 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE PRECP (U V)
    (PROG (NN UU VV AA)
      (SETQ NN 0)
      (SETQ UU U)
      (SETQ VV V)
      (SETQ AA PRECLIS*)
      (COND ((OR (NOT (MEMBER UU AA)) (NOT (MEMBER VV AA))) (RETURN NIL)))
      (SETQ NN (LPOS U AA))
      (SETQ NN (DIFFERENCE NN (LPOS V AA)))
      (COND ((GEQ NN 0) (RETURN T)) (T (RETURN NIL))))) 
(FLAG '(NULL IDP FLAGP NORDP ALATOMP ALKERNP PRECP DEPVARP STRINGP) 'BOOLEAN) 
(FLAG '(ALATOMP PRECP DEPVARP ALKERNP DEPATOM) 'OPFN) 
(PUT 'KORDERLIST 'NUMBER-OF-ARGS 0) 
(PUT 'KORDERLIST 'DEFINED-ON-LINE '75) 
(PUT 'KORDERLIST 'DEFINED-IN-FILE 'ASSIST/CONTROL.RED) 
(PUT 'KORDERLIST 'PROCEDURE_TYPE '(ARROW UNIT GENERAL)) 
(DE KORDERLIST NIL KORD*) 
(FLAG '(KORDERLIST) 'OPFN) 
(PUT 'KORDERLIST 'STAT 'ENDSTAT) 
(PUT 'REMSYM 'NUMBER-OF-ARGS 1) 
(PUT 'REMSYM 'DEFINED-ON-LINE '84) 
(PUT 'REMSYM 'DEFINED-IN-FILE 'ASSIST/CONTROL.RED) 
(PUT 'REMSYM 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE REMSYM (U)
    (PROG (J)
      (SETQ J U)
     LAB
      (COND ((NULL J) (RETURN NIL)))
      ((LAMBDA (J)
         (COND ((FLAGP J 'SYMMETRIC) (REMFLAG (LIST J) 'SYMMETRIC))
               ((FLAGP J 'ANTISYMMETRIC) (REMFLAG (LIST J) 'ANTISYMMETRIC))))
       (CAR J))
      (SETQ J (CDR J))
      (GO LAB))) 
(PUT 'REMSYM 'STAT 'RLIS) 
(PUT 'LISTOFVARS 'NUMBER-OF-ARGS 1) 
(PUT 'LISTOFVARS 'DEFINED-ON-LINE '92) 
(PUT 'LISTOFVARS 'DEFINED-IN-FILE 'ASSIST/CONTROL.RED) 
(PUT 'LISTOFVARS 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE LISTOFVARS (U)
    (COND ((OR (NULL U) (NUMBERP U)) NIL) ((ATOM U) (LIST U))
          (T
           (VARSINARGS
            (COND ((EQCAR U 'LIST) (CDR (REVAL1 U T))) (T (CDR U))))))) 
(PUT 'VARSINARGS 'NUMBER-OF-ARGS 1) 
(PUT 'VARSINARGS 'DEFINED-ON-LINE '97) 
(PUT 'VARSINARGS 'DEFINED-IN-FILE 'ASSIST/CONTROL.RED) 
(PUT 'VARSINARGS 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE VARSINARGS (U)
    (COND ((NULL U) NIL)
          (T (APPEND (LISTOFVARS (CAR U)) (VARSINARGS (CDR U)))))) 
(PUT 'RFUNCVAR 'NUMBER-OF-ARGS 1) 
(PUT 'RFUNCVAR 'DEFINED-ON-LINE '101) 
(PUT 'RFUNCVAR 'DEFINED-IN-FILE 'ASSIST/CONTROL.RED) 
(PUT 'RFUNCVAR 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE RFUNCVAR (U)
    (PROGN
     (COND
      ((ATOM (SETQ U (REVAL1 (CAR U) T)))
       (COND
        ((NOT (FLAGP U 'RESERVED))
         (COND ((NEQ (DEPATOM U) U) (DEPATOM U)) (T NIL)))
        (T NIL)))
      (T
       (PROG (WI AA)
         (SETQ AA (LISTOFVARS U))
         (COND
          ((NULL (CDR AA))
           (RETURN
            (COND
             ((OR (FLAGP (CAR AA) 'RESERVED) (FLAGP (CAR AA) 'CONSTANT)) NIL)
             (T (CAR AA)))))
          (T (SETQ AA (LIST2SET AA))))
         (SETQ WI AA)
         (PROG ()
          WHILELABEL
           (COND ((NOT WI) (RETURN NIL)))
           (COND
            ((FLAGP (CAR WI) 'RESERVED)
             (PROGN (SETQ AA (DELETE (CAR WI) AA)) (SETQ WI (CDR WI))))
            (T (SETQ WI (CDR WI))))
           (GO WHILELABEL))
         (RETURN (SETQ AA (CONS 'LIST AA)))))))) 
(PUT 'FUNCVAR 'PSOPFN 'RFUNCVAR) 
(FLAG '(E I) 'RESERVED) 
(PUT 'IMPLICIT 'NUMBER-OF-ARGS 1) 
(PUT 'IMPLICIT 'DEFINED-ON-LINE '123) 
(PUT 'IMPLICIT 'DEFINED-IN-FILE 'ASSIST/CONTROL.RED) 
(PUT 'IMPLICIT 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE IMPLICIT (U)
    (COND ((ATOM U) U)
          (T
           (PROG (PRF)
             (SETQ PRF (CAR U))
             (COND
              ((NEQ (GET PRF 'SIMPFN) 'SIMPIDEN)
               (REDERR (LIST U "must be an OPERATOR"))))
             (REMPROP (CAR U) 'SIMPFN)
             (SETQ DEPL*
                     (UNION
                      (LIST
                       (CONS (CAR U)
                             (REVERSE
                              (PROG (Y FORALL-RESULT FORALL-ENDPTR)
                                (SETQ Y (CDR U))
                                (COND ((NULL Y) (RETURN NIL)))
                                (SETQ FORALL-RESULT
                                        (SETQ FORALL-ENDPTR
                                                (CONS
                                                 ((LAMBDA (Y) (IMPLICIT Y))
                                                  (CAR Y))
                                                 NIL)))
                               LOOPLABEL
                                (SETQ Y (CDR Y))
                                (COND ((NULL Y) (RETURN FORALL-RESULT)))
                                (RPLACD FORALL-ENDPTR
                                        (CONS
                                         ((LAMBDA (Y) (IMPLICIT Y)) (CAR Y))
                                         NIL))
                                (SETQ FORALL-ENDPTR (CDR FORALL-ENDPTR))
                                (GO LOOPLABEL)))))
                      DEPL*))
             (RETURN PRF))))) 
(PUT 'DEPATOM 'NUMBER-OF-ARGS 1) 
(PUT 'DEPATOM 'DEFINED-ON-LINE '134) 
(PUT 'DEPATOM 'DEFINED-IN-FILE 'ASSIST/CONTROL.RED) 
(PUT 'DEPATOM 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE DEPATOM (A)
    (COND ((NOT (ATOM A)) (REDERR "ARGUMENT MUST BE AN ATOM"))
          ((NULL (ASSOC A DEPL*)) A)
          (T (CONS 'LIST (REVERSE (CDR (ASSOC A DEPL*))))))) 
(FLAG '(DEPATOM) 'OPFN) 
(PUT 'EXPLICIT 'NUMBER-OF-ARGS 1) 
(PUT 'EXPLICIT 'DEFINED-ON-LINE '142) 
(PUT 'EXPLICIT 'DEFINED-IN-FILE 'ASSIST/CONTROL.RED) 
(PUT 'EXPLICIT 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE EXPLICIT (U)
    (PROG (AA)
      (SETQ AA (DEPATOM U))
      (COND ((EQUAL AA U) (RETURN U)))
      (PUT U 'SIMPFN 'SIMPIDEN)
      (RETURN
       (CONS U
             (PROG (X FORALL-RESULT FORALL-ENDPTR)
               (SETQ X (CDR AA))
               (COND ((NULL X) (RETURN NIL)))
               (SETQ FORALL-RESULT
                       (SETQ FORALL-ENDPTR
                               (CONS ((LAMBDA (X) (EXPLICIT X)) (CAR X)) NIL)))
              LOOPLABEL
               (SETQ X (CDR X))
               (COND ((NULL X) (RETURN FORALL-RESULT)))
               (RPLACD FORALL-ENDPTR
                       (CONS ((LAMBDA (X) (EXPLICIT X)) (CAR X)) NIL))
               (SETQ FORALL-ENDPTR (CDR FORALL-ENDPTR))
               (GO LOOPLABEL)))))) 
(FLAG '(IMPLICIT EXPLICIT) 'OPFN) 
(PUT 'SIMPLIFY 'NUMBER-OF-ARGS 1) 
(PUT 'SIMPLIFY 'DEFINED-ON-LINE '153) 
(PUT 'SIMPLIFY 'DEFINED-IN-FILE 'ASSIST/CONTROL.RED) 
(PUT 'SIMPLIFY 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE SIMPLIFY (U) (MK*SQ (RESIMP (SIMP* (REVAL1 U T))))) 
(FLAG '(SIMPLIFY) 'OPFN) 
(RLISTAT '(REMNONCOM)) 
(PUT 'REMNONCOM 'NUMBER-OF-ARGS 1) 
(PUT 'REMNONCOM 'DEFINED-ON-LINE '164) 
(PUT 'REMNONCOM 'DEFINED-IN-FILE 'ASSIST/CONTROL.RED) 
(PUT 'REMNONCOM 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE REMNONCOM (U)
    (PROGN
     (PROG (X)
       (SETQ X U)
      LAB
       (COND ((NULL X) (RETURN NIL)))
       ((LAMBDA (X) (REMFLAG (LIST X) 'NONCOM)) (CAR X))
       (SETQ X (CDR X))
       (GO LAB))
     T)) 
(PUT 'REMVECTOR 'NUMBER-OF-ARGS 1) 
(PUT 'REMVECTOR 'DEFINED-ON-LINE '170) 
(PUT 'REMVECTOR 'DEFINED-IN-FILE 'ASSIST/CONTROL.RED) 
(PUT 'REMVECTOR 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE REMVECTOR (U)
    (PROG (X)
      (SETQ X U)
     LAB
      (COND ((NULL X) (RETURN NIL)))
      ((LAMBDA (X) (PROGN (REMPROP X 'RTYPE) (REMFLAG (LIST X) 'USED*) 0))
       (CAR X))
      (SETQ X (CDR X))
      (GO LAB))) 
(PUT 'REMINDEX 'NUMBER-OF-ARGS 1) 
(PUT 'REMINDEX 'DEFINED-ON-LINE '173) 
(PUT 'REMINDEX 'DEFINED-IN-FILE 'ASSIST/CONTROL.RED) 
(PUT 'REMINDEX 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE REMINDEX (U)
    (PROG ()
      (PROG (X)
        (SETQ X U)
       LAB
        (COND ((NULL X) (RETURN NIL)))
        ((LAMBDA (X)
           (PROGN
            (REMPROP X 'RTYPE)
            (SETQ INDICES* (DELETE X INDICES*))
            (REMFLAG (LIST X) 'USED*)))
         (CAR X))
        (SETQ X (CDR X))
        (GO LAB))
      (RETURN T))) 
(RLISTAT '(REMVECTOR REMINDEX)) 
(PUT 'MKGAM 'NUMBER-OF-ARGS 2) 
(PUT 'MKGAM 'DEFINED-ON-LINE '182) 
(PUT 'MKGAM 'DEFINED-IN-FILE 'ASSIST/CONTROL.RED) 
(PUT 'MKGAM 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE MKGAM (U V)
    (COND
     ((NEQ V T)
      (PROGN
       (REMFLAG (LIST U) 'NONCOM)
       (REMPROP U 'SIMPFN)
       (COND ((EQ V 'OP) (PUT U 'SIMPFN 'SIMPIDEN)))
       (REMFLAG (LIST U) 'USED*)))
     (T
      (PROGN
       (CLEAR (LIST U))
       (CLEAROP U)
       (PUT U 'SIMPFN 'SIMPGAMMA)
       (FLAG (LIST U) 'NONCOM)
       T)))) 
(FLAG '(GETMAS MKGAM) 'OPFN) 
(PUT 'SWITCHES 'NUMBER-OF-ARGS 0) 
(PUT 'SWITCHES 'DEFINED-ON-LINE '195) 
(PUT 'SWITCHES 'DEFINED-IN-FILE 'ASSIST/CONTROL.RED) 
(PUT 'SWITCHES 'PROCEDURE_TYPE '(ARROW UNIT GENERAL)) 
(DE SWITCHES NIL
    (PROGN
     (TERPRI)
     (PRIN2 "      **** exp:=")
     (PRIN2 *EXP)
     (PRIN2 " .................... ")
     (PRIN2 "allfac:= ")
     (PRIN2 *ALLFAC)
     (PRIN2 " ****")
     (TERPRI)
     (TERPRI)
     (PRIN2 "      **** ezgcd:=")
     (PRIN2 *EZGCD)
     (PRIN2 " ................. ")
     (PRIN2 "gcd:= ")
     (PRIN2 *GCD)
     (PRIN2 " ****")
     (TERPRI)
     (TERPRI)
     (PRIN2 "      **** mcd:=")
     (PRIN2 *MCD)
     (PRIN2 " ....................... ")
     (PRIN2 "lcm:= ")
     (PRIN2 *LCM)
     (PRIN2 " ****")
     (TERPRI)
     (TERPRI)
     (PRIN2 "      **** div:=")
     (PRIN2 *DIV)
     (PRIN2 " ................... ")
     (PRIN2 "rat:= ")
     (PRIN2 *RAT)
     (PRIN2 " ****")
     (TERPRI)
     (TERPRI)
     (PRIN2 "      **** intstr:=")
     (PRIN2 *INTSTR)
     (PRIN2 " ........... ")
     (PRIN2 "rational:= ")
     (PRIN2 *RATIONAL)
     (PRIN2 " ****")
     (TERPRI)
     (TERPRI)
     (PRIN2 "      **** precise:=")
     (PRIN2 *PRECISE)
     (PRIN2 " ............. ")
     (PRIN2 "reduced:= ")
     (PRIN2 *REDUCED)
     (PRIN2 " ****")
     (TERPRI)
     (TERPRI)
     (PRIN2 "      **** complex:=")
     (PRIN2 *COMPLEX)
     (PRIN2 " ....... ")
     (PRIN2 "rationalize:= ")
     (PRIN2 *RATIONALIZE)
     (PRIN2 " ****")
     (TERPRI)
     (TERPRI)
     (PRIN2 "      **** factor:= ")
     (PRIN2 *FACTOR)
     (PRIN2 " ....... ")
     (PRIN2 "combineexpt:= ")
     (PRIN2 *COMBINEEXPT)
     (PRIN2 " ****")
     (TERPRI)
     (TERPRI)
     (PRIN2 "      **** revpri:= ")
     (PRIN2 *REVPRI)
     (PRIN2 " ........ ")
     (PRIN2 "distribute:= ")
     (PRIN2 *DISTRIBUTE)
     (PRIN2 " ****")
     NIL)) 
(PUT 'SWITCHORG 'NUMBER-OF-ARGS 0) 
(PUT 'SWITCHORG 'DEFINED-ON-LINE '219) 
(PUT 'SWITCHORG 'DEFINED-IN-FILE 'ASSIST/CONTROL.RED) 
(PUT 'SWITCHORG 'PROCEDURE_TYPE '(ARROW UNIT GENERAL)) 
(DE SWITCHORG NIL
    (PROGN
     (SETQ *EXP (PROGN (SETQ ALGLIST* (CONS NIL NIL)) T))
     (SETQ *ALLFAC T)
     (SETQ *GCD (PROGN (SETQ ALGLIST* (CONS NIL NIL)) NIL))
     (SETQ *MCD (PROGN (SETQ ALGLIST* (CONS NIL NIL)) T))
     (SETQ *DIV (PROGN (SETQ ALGLIST* (CONS NIL NIL)) NIL))
     (SETQ *RAT (PROGN (SETQ ALGLIST* (CONS NIL NIL)) NIL))
     (SETQ *DISTRIBUTE (PROGN (SETQ ALGLIST* (CONS NIL NIL)) NIL))
     (SETQ *INTSTR (PROGN (SETQ ALGLIST* (CONS NIL NIL)) NIL))
     (SETQ *RATIONAL (PROGN (SETQ ALGLIST* (CONS NIL NIL)) NIL))
     (SETQ *EZGCD (PROGN (SETQ ALGLIST* (CONS NIL NIL)) NIL))
     (SETQ *RATARG NIL)
     (SETQ *PRECISE (PROGN (SETQ ALGLIST* (CONS NIL NIL)) T))
     (SETQ *COMPLEX (PROGN (SETQ ALGLIST* (CONS NIL NIL)) NIL))
     (SETQ *HEUGCD NIL)
     (SETQ *LCM (PROGN (SETQ ALGLIST* (CONS NIL NIL)) T))
     (SETQ *FACTOR (PROGN (SETQ ALGLIST* (CONS NIL NIL)) NIL))
     (SETQ *IFACTOR NIL)
     (SETQ *RATIONALIZE (PROGN (SETQ ALGLIST* (CONS NIL NIL)) NIL))
     (SETQ *REDUCED (PROGN (SETQ ALGLIST* (CONS NIL NIL)) NIL))
     (SETQ *SAVESTRUCTR NIL)
     (SETQ *COMBINEEXPT NIL)
     (SETQ *REVPRI (PROGN (SETQ ALGLIST* (CONS NIL NIL)) NIL)))) 
(FLAG '(SWITCHORG) 'OPFN) 
(DEFLIST '((SWITCHES ENDSTAT) (SWITCHORG ENDSTAT)) 'STAT) 
(PUT '|REMVAR:| 'NUMBER-OF-ARGS 2) 
(PUT '|REMVAR:| 'DEFINED-ON-LINE '258) 
(PUT '|REMVAR:| 'DEFINED-IN-FILE 'ASSIST/CONTROL.RED) 
(PUT '|REMVAR:| 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE |REMVAR:| (U V)
    (PROG (BUF COMM LV)
      (SETQ BUF INPUTBUFLIS*)
      (PROG (X)
        (SETQ X BUF)
       LAB
        (COND ((NULL X) (RETURN NIL)))
        ((LAMBDA (X)
           (COND
            ((AND (NOT (ATOM (SETQ COMM (CADDR X)))) (EQUAL (CAR COMM) 'SETK))
             (PROG (OBJ)
              L1
               (COND
                ((OR (NULL (CDDR COMM)) (EQ (CAR COMM) 'PROG)) (RETURN LV)))
               (SETQ OBJ (CADADR COMM))
               (COND ((EQ (GETTYPE OBJ) V) (SETQ LV (ADJOIN OBJ LV))))
               (SETQ COMM (CADDR COMM))
               (GO L1)))))
         (CAR X))
        (SETQ X (CDR X))
        (GO LAB))
      (COND
       ((NULL U)
        (PROGN
         (PROG (X)
           (SETQ X LV)
          LAB
           (COND ((NULL X) (RETURN NIL)))
           ((LAMBDA (X) (CLEAR (LIST X))) (CAR X))
           (SETQ X (CDR X))
           (GO LAB))
         (RETURN T)))
       (T (RETURN LV))))) 
(FLAG '(DISPLAYLST DISPLAYSCAL) 'NOFORM) 
(PUT 'DISPLAYSCAL 'NUMBER-OF-ARGS 0) 
(PUT 'DISPLAYSCAL 'DEFINED-ON-LINE '278) 
(PUT 'DISPLAYSCAL 'DEFINED-IN-FILE 'ASSIST/CONTROL.RED) 
(PUT 'DISPLAYSCAL 'PROCEDURE_TYPE '(ARROW UNIT GENERAL)) 
(DE DISPLAYSCAL NIL (UNION (|REMVAR:| T 'SCALAR) (|REMSVAR:| T 'SCALAR))) 
(PUT 'DISPLAYLST 'NUMBER-OF-ARGS 0) 
(PUT 'DISPLAYLST 'DEFINED-ON-LINE '284) 
(PUT 'DISPLAYLST 'DEFINED-IN-FILE 'ASSIST/CONTROL.RED) 
(PUT 'DISPLAYLST 'PROCEDURE_TYPE '(ARROW UNIT GENERAL)) 
(DE DISPLAYLST NIL (UNION (|REMVAR:| T 'LIST) (|REMSVAR:| T 'LIST))) 
(PUT 'CLEARSCAL 'NUMBER-OF-ARGS 0) 
(PUT 'CLEARSCAL 'DEFINED-ON-LINE '290) 
(PUT 'CLEARSCAL 'DEFINED-IN-FILE 'ASSIST/CONTROL.RED) 
(PUT 'CLEARSCAL 'PROCEDURE_TYPE '(ARROW UNIT GENERAL)) 
(DE CLEARSCAL NIL (PROGN (|REMVAR:| NIL 'SCALAR) (|REMSVAR:| NIL 'SCALAR))) 
(PUT 'CLEARLST 'NUMBER-OF-ARGS 0) 
(PUT 'CLEARLST 'DEFINED-ON-LINE '295) 
(PUT 'CLEARLST 'DEFINED-IN-FILE 'ASSIST/CONTROL.RED) 
(PUT 'CLEARLST 'PROCEDURE_TYPE '(ARROW UNIT GENERAL)) 
(DE CLEARLST NIL (PROGN (|REMVAR:| NIL 'LIST) (|REMSVAR:| NIL 'LIST))) 
(PUT '|REMSVAR:| 'NUMBER-OF-ARGS 2) 
(PUT '|REMSVAR:| 'DEFINED-ON-LINE '300) 
(PUT '|REMSVAR:| 'DEFINED-IN-FILE 'ASSIST/CONTROL.RED) 
(PUT '|REMSVAR:| 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE |REMSVAR:| (U V)
    (PROG (BUF COMM LSV OBJ)
      (SETQ BUF INPUTBUFLIS*)
      (PROG (X)
        (SETQ X BUF)
       LAB
        (COND ((NULL X) (RETURN NIL)))
        ((LAMBDA (X)
           (COND
            ((AND (NOT (ATOM (SETQ COMM (CADDR X)))) (EQ (CAR COMM) 'SAVEAS))
             (COND
              ((EQ V T)
               (COND
                ((MEMBER (GETTYPE (SETQ OBJ (CADR (CADADR COMM))))
                         (LIST 'SCALAR 'LIST 'MATRIX 'HVECTOR 'TVECTOR))
                 (SETQ LSV (ADJOIN OBJ LSV)))
                (T NIL)))
              ((EQ V (GETTYPE (SETQ OBJ (CADR (CADADR COMM)))))
               (SETQ LSV (ADJOIN OBJ LSV)))))))
         (CAR X))
        (SETQ X (CDR X))
        (GO LAB))
      (COND
       ((NULL U)
        (PROGN
         (PROG (X)
           (SETQ X LSV)
          LAB
           (COND ((NULL X) (RETURN NIL)))
           ((LAMBDA (X) (CLEAR (LIST X))) (CAR X))
           (SETQ X (CDR X))
           (GO LAB))
         (RETURN T)))
       (T (RETURN LSV))))) 
(FLAG '(DISPLAYSVAR) 'NOFORM) 
(PUT 'DISPLAYSVAR 'NUMBER-OF-ARGS 0) 
(PUT 'DISPLAYSVAR 'DEFINED-ON-LINE '319) 
(PUT 'DISPLAYSVAR 'DEFINED-IN-FILE 'ASSIST/CONTROL.RED) 
(PUT 'DISPLAYSVAR 'PROCEDURE_TYPE '(ARROW UNIT GENERAL)) 
(DE DISPLAYSVAR NIL (|REMSVAR:| T T)) 
(PUT 'CLEARSVAR 'NUMBER-OF-ARGS 0) 
(PUT 'CLEARSVAR 'DEFINED-ON-LINE '323) 
(PUT 'CLEARSVAR 'DEFINED-IN-FILE 'ASSIST/CONTROL.RED) 
(PUT 'CLEARSVAR 'PROCEDURE_TYPE '(ARROW UNIT GENERAL)) 
(DE CLEARSVAR NIL (|REMSVAR:| NIL T)) 
(PUT '|REMA:| 'NUMBER-OF-ARGS 1) 
(PUT '|REMA:| 'DEFINED-ON-LINE '329) 
(PUT '|REMA:| 'DEFINED-IN-FILE 'ASSIST/CONTROL.RED) 
(PUT '|REMA:| 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE |REMA:| (U)
    (PROG (BUF COMM LA)
      (SETQ BUF INPUTBUFLIS*)
      (PROG (X)
        (SETQ X BUF)
       LAB
        (COND ((NULL X) (RETURN NIL)))
        ((LAMBDA (X)
           (COND
            ((AND (NOT (ATOM (SETQ COMM (CADDR X)))) (EQ (CAR COMM) 'ARRAYFN))
             (PROG (ARL OBJ)
               (SETQ ARL (CDADDR COMM))
              L1
               (COND ((NULL ARL) (RETURN LA))
                     ((EQ (GETTYPE (SETQ OBJ (CADADR (CAR ARL)))) 'ARRAY)
                      (SETQ LA (ADJOIN OBJ LA))))
               (SETQ ARL (CDR ARL))
               (GO L1)))))
         (CAR X))
        (SETQ X (CDR X))
        (GO LAB))
      (COND
       ((NULL U)
        (PROGN
         (PROG (X)
           (SETQ X LA)
          LAB
           (COND ((NULL X) (RETURN NIL)))
           ((LAMBDA (X) (CLEAR (LIST X))) (CAR X))
           (SETQ X (CDR X))
           (GO LAB))
         (RETURN T)))
       (T (RETURN LA))))) 
(FLAG '(DISPLAYAR) 'NOFORM) 
(PUT 'DISPLAYAR 'NUMBER-OF-ARGS 0) 
(PUT 'DISPLAYAR 'DEFINED-ON-LINE '348) 
(PUT 'DISPLAYAR 'DEFINED-IN-FILE 'ASSIST/CONTROL.RED) 
(PUT 'DISPLAYAR 'PROCEDURE_TYPE '(ARROW UNIT GENERAL)) 
(DE DISPLAYAR NIL (|REMA:| T)) 
(PUT 'CLEARAR 'NUMBER-OF-ARGS 0) 
(PUT 'CLEARAR 'DEFINED-ON-LINE '354) 
(PUT 'CLEARAR 'DEFINED-IN-FILE 'ASSIST/CONTROL.RED) 
(PUT 'CLEARAR 'PROCEDURE_TYPE '(ARROW UNIT GENERAL)) 
(DE CLEARAR NIL (|REMA:| NIL)) 
(PUT '|REMM:| 'NUMBER-OF-ARGS 1) 
(PUT '|REMM:| 'DEFINED-ON-LINE '359) 
(PUT '|REMM:| 'DEFINED-IN-FILE 'ASSIST/CONTROL.RED) 
(PUT '|REMM:| 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE |REMM:| (U)
    (PROG (BUF COMM LM)
      (SETQ BUF INPUTBUFLIS*)
      (PROG (X)
        (SETQ X BUF)
       LAB
        (COND ((NULL X) (RETURN NIL)))
        ((LAMBDA (X)
           (COND
            ((AND (NOT (ATOM (SETQ COMM (CADDR X)))) (EQ (CAR COMM) 'MATRIX))
             (PROG (LOB OBJ)
               (SETQ LOB (CDADR COMM))
              L1
               (COND ((NULL LOB) (RETURN LM))
                     ((GETTYPE
                       (SETQ OBJ
                               (COND
                                ((EQUAL (LENGTH (CAR LOB)) 2) (CADR (CAR LOB)))
                                (T (CADADR (CAR LOB))))))
                      (SETQ LM (ADJOIN OBJ LM))))
               (SETQ LOB (CDR LOB))
               (GO L1)))))
         (CAR X))
        (SETQ X (CDR X))
        (GO LAB))
      (SETQ LM (UNION LM (|REMVAR:| T 'MATRIX)))
      (COND
       ((NULL U)
        (PROGN
         (PROG (X)
           (SETQ X LM)
          LAB
           (COND ((NULL X) (RETURN NIL)))
           ((LAMBDA (X) (CLEAR (LIST X))) (CAR X))
           (SETQ X (CDR X))
           (GO LAB))
         (RETURN T)))
       (T (RETURN LM))))) 
(FLAG '(DISPLAYMAT) 'NOFORM) 
(PUT 'DISPLAYMAT 'NUMBER-OF-ARGS 0) 
(PUT 'DISPLAYMAT 'DEFINED-ON-LINE '386) 
(PUT 'DISPLAYMAT 'DEFINED-IN-FILE 'ASSIST/CONTROL.RED) 
(PUT 'DISPLAYMAT 'PROCEDURE_TYPE '(ARROW UNIT GENERAL)) 
(DE DISPLAYMAT NIL (UNION (|REMM:| T) (|REMSVAR:| T 'MATRIX))) 
(PUT 'CLEARMAT 'NUMBER-OF-ARGS 0) 
(PUT 'CLEARMAT 'DEFINED-ON-LINE '392) 
(PUT 'CLEARMAT 'DEFINED-IN-FILE 'ASSIST/CONTROL.RED) 
(PUT 'CLEARMAT 'PROCEDURE_TYPE '(ARROW UNIT GENERAL)) 
(DE CLEARMAT NIL (PROGN (|REMM:| NIL) (|REMSVAR:| NIL 'MATRIX))) 
(PUT '|REMV:| 'NUMBER-OF-ARGS 1) 
(PUT '|REMV:| 'DEFINED-ON-LINE '397) 
(PUT '|REMV:| 'DEFINED-IN-FILE 'ASSIST/CONTROL.RED) 
(PUT '|REMV:| 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE |REMV:| (U)
    (PROG (BUF AV)
      (SETQ BUF INPUTBUFLIS*)
      (PROG (X)
        (SETQ X BUF)
       LAB
        (COND ((NULL X) (RETURN NIL)))
        ((LAMBDA (X)
           (COND
            ((AND (NOT (ATOM (SETQ X (CADDR X))))
                  (MEMBER (CAR X) (LIST 'VECTOR 'TVECTOR 'INDEX)))
             (PROG (UU XX)
               (SETQ UU (CDADR X))
              L1
               (COND ((NULL UU) (RETURN AV))
                     ((OR (GETTYPE (SETQ XX (CADAR UU))) (GET XX 'FDEGREE))
                      (SETQ AV (ADJOIN XX AV))))
               (SETQ UU (CDR UU))
               (GO L1)))))
         (CAR X))
        (SETQ X (CDR X))
        (GO LAB))
      (COND
       ((NULL U)
        (PROGN
         (PROG (X)
           (SETQ X AV)
          LAB
           (COND ((NULL X) (RETURN NIL)))
           ((LAMBDA (X) (CLEAR (LIST X))) (CAR X))
           (SETQ X (CDR X))
           (GO LAB))
         (RETURN T)))
       (T (RETURN AV))))) 
(FLAG '(DISPLAYVEC) 'NOFORM) 
(PUT 'DISPLAYVEC 'NUMBER-OF-ARGS 0) 
(PUT 'DISPLAYVEC 'DEFINED-ON-LINE '417) 
(PUT 'DISPLAYVEC 'DEFINED-IN-FILE 'ASSIST/CONTROL.RED) 
(PUT 'DISPLAYVEC 'PROCEDURE_TYPE '(ARROW UNIT GENERAL)) 
(DE DISPLAYVEC NIL
    (UNION (|REMV:| T) (UNION (|REMSVAR:| T 'HVECTOR) (|REMSVAR:| T 'TVECTOR)))) 
(PUT 'CLEARVEC 'NUMBER-OF-ARGS 0) 
(PUT 'CLEARVEC 'DEFINED-ON-LINE '423) 
(PUT 'CLEARVEC 'DEFINED-IN-FILE 'ASSIST/CONTROL.RED) 
(PUT 'CLEARVEC 'PROCEDURE_TYPE '(ARROW UNIT GENERAL)) 
(DE CLEARVEC NIL
    (PROGN (|REMV:| NIL) (|REMSVAR:| NIL 'HVECTOR) (|REMSVAR:| NIL 'TVECTOR))) 
(PUT '|REMF:| 'NUMBER-OF-ARGS 1) 
(PUT '|REMF:| 'DEFINED-ON-LINE '428) 
(PUT '|REMF:| 'DEFINED-IN-FILE 'ASSIST/CONTROL.RED) 
(PUT '|REMF:| 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE |REMF:| (U)
    (PROG (BUF AV)
      (SETQ BUF INPUTBUFLIS*)
      (PROG (X)
        (SETQ X BUF)
       LAB
        (COND ((NULL X) (RETURN NIL)))
        ((LAMBDA (X)
           (COND
            ((AND (NOT (ATOM (SETQ X (CADDR X)))) (EQ (CAR X) 'PFORM))
             (PROG (UU XX)
               (SETQ UU (CDADR X))
              L1
               (COND ((NULL UU) (RETURN AV))
                     ((OR (GET (SETQ XX (CADADR (CDAR UU))) 'FDEGREE)
                          (AND (NOT (ATOM XX))
                               (GET (SETQ XX (CADR XX)) 'IFDEGREE)))
                      (SETQ AV (ADJOIN XX AV))))
               (SETQ UU (CDR UU))
               (GO L1)))))
         (CAR X))
        (SETQ X (CDR X))
        (GO LAB))
      (COND
       ((NULL U)
        (PROGN
         (PROG (X)
           (SETQ X AV)
          LAB
           (COND ((NULL X) (RETURN NIL)))
           ((LAMBDA (X) (CLEAR (LIST X))) (CAR X))
           (SETQ X (CDR X))
           (GO LAB))
         (RETURN T)))
       (T (RETURN AV))))) 
(FLAG '(DISPLAYFORM) 'NOFORM) 
(PUT 'DISPLAYFORM 'NUMBER-OF-ARGS 0) 
(PUT 'DISPLAYFORM 'DEFINED-ON-LINE '449) 
(PUT 'DISPLAYFORM 'DEFINED-IN-FILE 'ASSIST/CONTROL.RED) 
(PUT 'DISPLAYFORM 'PROCEDURE_TYPE '(ARROW UNIT GENERAL)) 
(DE DISPLAYFORM NIL (UNION (|REMF:| T) (|REMVAR:| T 'PFORM))) 
(PUT 'CLEARFORM 'NUMBER-OF-ARGS 0) 
(PUT 'CLEARFORM 'DEFINED-ON-LINE '454) 
(PUT 'CLEARFORM 'DEFINED-IN-FILE 'ASSIST/CONTROL.RED) 
(PUT 'CLEARFORM 'PROCEDURE_TYPE '(ARROW UNIT GENERAL)) 
(DE CLEARFORM NIL (PROGN (|REMF:| NIL) (|REMVAR:| NIL 'PFORM))) 
(PUT 'CLEAR_ALL 'NUMBER-OF-ARGS 0) 
(PUT 'CLEAR_ALL 'DEFINED-ON-LINE '459) 
(PUT 'CLEAR_ALL 'DEFINED-IN-FILE 'ASSIST/CONTROL.RED) 
(PUT 'CLEAR_ALL 'PROCEDURE_TYPE '(ARROW UNIT GENERAL)) 
(DE CLEAR_ALL NIL
    (PROGN
     (|REMVAR:| NIL 'SCALAR)
     (|REMVAR:| NIL 'LIST)
     (|REMVAR:| NIL 'PFORM)
     (|REMSVAR:| NIL T)
     (|REMA:| NIL)
     (|REMV:| NIL)
     (|REMM:| NIL)
     (|REMF:| NIL)
     T)) 
(PUT 'SHOW 'NUMBER-OF-ARGS 1) 
(PUT 'SHOW 'DEFINED-ON-LINE '463) 
(PUT 'SHOW 'DEFINED-IN-FILE 'ASSIST/CONTROL.RED) 
(PUT 'SHOW 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE SHOW (U)
    (PROG ()
      (SETQ U (CAR U))
      (COND
       ((EQ U 'SCALARS)
        (RETURN (PROGN (PRIN2 "scalars are: ") (PRIN2 (DISPLAYSCAL)) NIL)))
       ((EQ U 'LISTS)
        (RETURN (PROGN (PRIN2 "lists are: ") (PRIN2 (DISPLAYLST)) NIL)))
       ((EQ U 'ARRAYS)
        (RETURN (PROGN (PRIN2 "arrays are: ") (PRIN2 (DISPLAYAR)) NIL)))
       ((EQ U 'MATRICES)
        (RETURN (PROGN (PRIN2 "matrices are: ") (PRIN2 (DISPLAYMAT)) NIL)))
       ((MEMBER U (LIST 'VECTORS 'TVECTORS 'INDICES))
        (RETURN (PROGN (PRIN2 "vectors are: ") (PRIN2 (DISPLAYVEC)) NIL)))
       ((EQ U 'FORMS)
        (RETURN (PROGN (PRIN2 "forms are: ") (PRIN2 (DISPLAYFORM)) NIL)))
       ((EQ U 'ALL)
        (PROG (I)
          (SETQ I (LIST 'SCALARS 'ARRAYS 'LISTS 'MATRICES 'VECTORS 'FORMS))
         LAB
          (COND ((NULL I) (RETURN NIL)))
          ((LAMBDA (I) (PROGN (SHOW (LIST I)) (TERPRI))) (CAR I))
          (SETQ I (CDR I))
          (GO LAB)))))) 
(PUT 'SHOW 'STAT 'RLIS) 
(PUT 'SUPPRESS 'NUMBER-OF-ARGS 1) 
(PUT 'SUPPRESS 'DEFINED-ON-LINE '490) 
(PUT 'SUPPRESS 'DEFINED-IN-FILE 'ASSIST/CONTROL.RED) 
(PUT 'SUPPRESS 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE SUPPRESS (U)
    (PROG ()
      (SETQ U (CAR U))
      (COND ((MEMBER U (LIST 'VECTORS 'TVECTORS 'INDICES)) (RETURN (CLEARVEC)))
            ((EQ U 'VARIABLES) (RETURN (CLEARVAR)))
            ((EQ U 'SCALARS) (RETURN (CLEARSCAL)))
            ((EQ U 'LISTS) (RETURN (CLEARLST)))
            ((EQ U 'SAVEIDS) (RETURN (CLEARSVAR)))
            ((EQ U 'MATRICES) (RETURN (CLEARMAT)))
            ((EQ U 'ARRAYS) (RETURN (CLEARAR)))
            ((EQ U 'FORMS) (RETURN (CLEARFORM)))
            ((EQ U 'ALL) (RETURN (CLEAR_ALL)))))) 
(PUT 'SUPPRESS 'STAT 'RLIS) 
(PUT 'CLEAROP 'NUMBER-OF-ARGS 1) 
(PUT 'CLEAROP 'DEFINED-ON-LINE '508) 
(PUT 'CLEAROP 'DEFINED-IN-FILE 'ASSIST/CONTROL.RED) 
(PUT 'CLEAROP 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE CLEAROP (U)
    (PROGN
     (CLEAR (LIST U))
     (REMOPR U)
     (REMPROP U 'KVALUE)
     (REMKLIST U)
     (PROG (X)
       (SETQ X |:FLAGLIS|)
      LAB
       (COND ((NULL X) (RETURN NIL)))
       ((LAMBDA (X) (COND ((EQ U (CAR X)) (PUTFLAG U (CADR X) 0)) (T NIL)))
        (CAR X))
       (SETQ X (CDR X))
       (GO LAB))
     (PROG (X)
       (SETQ X |:PROPLIS|)
      LAB
       (COND ((NULL X) (RETURN NIL)))
       ((LAMBDA (X)
          (COND ((EQ U (CAR X)) (PUTPROP U (CADR X) (CADDR X) 0)) (T NIL)))
        (CAR X))
       (SETQ X (CDR X))
       (GO LAB))
     (REMFLAG (LIST U) 'USED*)
     T)) 
(FLAG '(CLEAROP) 'OPFN) 
(PUT 'CLEARFUNCTIONS 'NUMBER-OF-ARGS 1) 
(PUT 'CLEARFUNCTIONS 'DEFINED-ON-LINE '519) 
(PUT 'CLEARFUNCTIONS 'DEFINED-IN-FILE 'ASSIST/CONTROL.RED) 
(PUT 'CLEARFUNCTIONS 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE CLEARFUNCTIONS (U)
    (PROG (UU VV)
     L1
      (SETQ UU (CAR U))
      (SETQ VV (CDR (RDISPLAYFLAG (LIST UU))))
      (COND ((FLAGP UU 'LOSE) (GO L2))
            (T
             (PROGN
              (TERPRI)
              (SPACES 5)
              (PROGN
               (PRIN2 "*** ")
               (PRIN2 UU)
               (PRIN2 " is unprotected : Cleared ***")
               NIL)
              (FOLLOWLINE 0))))
      (PROG (X)
        (SETQ X |:PROPLIS|)
       LAB
        (COND ((NULL X) (RETURN NIL)))
        ((LAMBDA (X)
           (COND ((EQ U (CAR X)) (PUTPROP U (CADR X) (CADDR X) 0)) (T NIL)))
         (CAR X))
        (SETQ X (CDR X))
        (GO LAB))
      (REMPROP 'UU '*LAMBDALINK)
      (COND
       ((GET UU 'SIMPFN)
        (PROGN (CLEAROP UU) (REMPROP UU '|:FT:|) (REMPROP UU '|:GF:|))))
      (REMPROP UU 'PSOPFN)
      (REMPROP UU 'EXPR)
      (COND ((GET UU 'SUBR) (REMD UU)))
      (REMPROP UU 'STAT)
      (REMPROP UU 'DFN)
      (REMPROP UU 'RTYPEFN)
      (REMPROP UU 'NUMBER-OF-ARGS)
      (REMFLAG (LIST UU) 'OPFN)
      (REMFLAG (LIST UU) 'FULL)
      (REMFLAG (LIST UU) 'ODD)
      (REMFLAG (LIST UU) 'EVEN)
      (REMFLAG (LIST UU) 'BOOLEAN)
      (REMFLAG (LIST UU) 'USED*)
      (PROG (X)
        (SETQ X VV)
       LAB
        (COND ((NULL X) (RETURN NIL)))
        ((LAMBDA (X) (PUTFLAG UU X 0)) (CAR X))
        (SETQ X (CDR X))
        (GO LAB))
      (SETQ DEPL* (DELETE (ASSOC UU DEPL*) DEPL*))
      (REMFLAG (LIST UU) 'IMPFUN)
      (SETQ U (CDR U))
      (GO L3)
     L2
      (PROGN
       (SPACES 5)
       (PROGN
        (PRIN2 "*** ")
        (PRIN2 UU)
        (PRIN2 " is a protected function: NOT cleared ***")
        NIL)
       (TERPRI)
       (SETQ U (CDR U)))
     L3
      (COND ((NULL U) (PROGN (TERPRI) (RETURN "Clearing is complete")))
            (T (GO L1))))) 
(RLISTAT '(CLEARFUNCTIONS)) 
(ENDMODULE) 