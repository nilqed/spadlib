(cl:declaim (cl:optimize cl:debug cl:safety))
(cl:declaim (sb-ext:muffle-conditions sb-ext:compiler-note cl:style-warning))
(MODULE (LIST 'HCVCTORS)) 
(DE MKVE (N) (MKVECT (DIFFERENCE N 1))) 
(PUT 'MKVE 'NUMBER-OF-ARGS 1) 
(PUT 'MKVE 'DEFINED-ON-LINE '35) 
(PUT 'MKVE 'DEFINED-IN-FILE 'ASSIST/HCVCTORS.RED) 
(PUT 'MKVE 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(PUTC 'MKVE 'INLINE '(LAMBDA (N) (MKVECT (DIFFERENCE N 1)))) 
(DE MKVE* (N) (MKARRAY1 (LIST N) 'ALGEBRAIC)) 
(PUT 'MKVE* 'NUMBER-OF-ARGS 1) 
(PUT 'MKVE* 'DEFINED-ON-LINE '38) 
(PUT 'MKVE* 'DEFINED-IN-FILE 'ASSIST/HCVCTORS.RED) 
(PUT 'MKVE* 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(PUTC 'MKVE* 'INLINE '(LAMBDA (N) (MKARRAY1 (LIST N) 'ALGEBRAIC))) 
(DE PUTVE (VE I ELT) (PUTV VE (DIFFERENCE I 1) ELT)) 
(PUT 'PUTVE 'NUMBER-OF-ARGS 3) 
(PUT 'PUTVE 'DEFINED-ON-LINE '44) 
(PUT 'PUTVE 'DEFINED-IN-FILE 'ASSIST/HCVCTORS.RED) 
(PUT 'PUTVE 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL GENERAL) GENERAL)) 
(PUTC 'PUTVE 'INLINE '(LAMBDA (VE I ELT) (PUTV VE (DIFFERENCE I 1) ELT))) 
(DE VENTH (U I) (GETV U (DIFFERENCE I 1))) 
(PUT 'VENTH 'NUMBER-OF-ARGS 2) 
(PUT 'VENTH 'DEFINED-ON-LINE '49) 
(PUT 'VENTH 'DEFINED-IN-FILE 'ASSIST/HCVCTORS.RED) 
(PUT 'VENTH 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(PUTC 'VENTH 'INLINE '(LAMBDA (U I) (GETV U (DIFFERENCE I 1)))) 
(DE ARRAY_TO_VECT (U) (CADR (GET U 'AVALUE))) 
(PUT 'ARRAY_TO_VECT 'NUMBER-OF-ARGS 1) 
(PUT 'ARRAY_TO_VECT 'DEFINED-ON-LINE '53) 
(PUT 'ARRAY_TO_VECT 'DEFINED-IN-FILE 'ASSIST/HCVCTORS.RED) 
(PUT 'ARRAY_TO_VECT 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(PUTC 'ARRAY_TO_VECT 'INLINE '(LAMBDA (U) (CADR (GET U 'AVALUE)))) 
(PUT 'MKRANDTABL 'NUMBER-OF-ARGS 3) 
(PUT 'MKRANDTABL 'DEFINED-ON-LINE '59) 
(PUT 'MKRANDTABL 'DEFINED-IN-FILE 'ASSIST/HCVCTORS.RED) 
(PUT 'MKRANDTABL 'PROCEDURE_TYPE
     '(ARROW (TIMES GENERAL GENERAL GENERAL) GENERAL)) 
(DE MKRANDTABL (U BASE AR)
    (COND
     ((AND (NOT (FIXP BASE)) (NOT *ROUNDED)) (REDERR "ROUNDED should be on"))
     (T
      (PROG (VE LU)
        (SETQ LU 0)
        (COND ((EQUAL BASE 1) (SETQ BASE (CONS '|:RD:| 1.0))))
        (SETQ LU (LENGTH (SETQ U (ALG_TO_SYMB U))))
        (SETQ VE (MKARRAY1 U 'ALGEBRAIC))
        (COND
         ((EQUAL LU 1)
          (PROG (I)
            (SETQ I 1)
           LAB
            (COND ((MINUSP (DIFFERENCE (CAR U) I)) (RETURN NIL)))
            (PUTV VE (DIFFERENCE I 1)
                  (COND
                   ((NOT (FIXP BASE))
                    (MK*SQ (CONS (CONS '|:RD:| (RANDOM (CDR BASE))) 1)))
                   (T (RANDOM BASE))))
            (SETQ I (PLUS2 I 1))
            (GO LAB)))
         ((EQUAL LU 2)
          (PROGN
           (PROG (I)
             (SETQ I 1)
            LAB
             (COND ((MINUSP (DIFFERENCE (CAR U) I)) (RETURN NIL)))
             (PUTV VE (DIFFERENCE I 1) (MKARRAY1 (LIST (CADR U)) 'ALGEBRAIC))
             (SETQ I (PLUS2 I 1))
             (GO LAB))
           (PROG (I)
             (SETQ I 1)
            LAB
             (COND ((MINUSP (DIFFERENCE (CAR U) I)) (RETURN NIL)))
             (PROG (J)
               (SETQ J 1)
              LAB
               (COND ((MINUSP (DIFFERENCE (CADR U) J)) (RETURN NIL)))
               (PUTV (GETV VE (DIFFERENCE I 1)) (DIFFERENCE J 1)
                     (COND
                      ((NOT (FIXP BASE))
                       (MK*SQ (CONS (CONS '|:RD:| (RANDOM (CDR BASE))) 1)))
                      (T (RANDOM BASE))))
               (SETQ J (PLUS2 J 1))
               (GO LAB))
             (SETQ I (PLUS2 I 1))
             (GO LAB))))
         (T (RETURN (TYPERR U "one or two integer list"))))
        (VECT_TO_ARRAY (LIST VE AR) U)
        (RETURN (SYMB_TO_ALG (LENGTHREVAL (LIST AR)))))))) 
(FLAG '(MKRANDTABL) 'OPFN) 
(PUT 'UPBVE 'NUMBER-OF-ARGS 1) 
(PUT 'UPBVE 'DEFINED-ON-LINE '88) 
(PUT 'UPBVE 'DEFINED-IN-FILE 'ASSIST/HCVCTORS.RED) 
(PUT 'UPBVE 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE UPBVE (U) (COND ((NULL (UPBV U)) 0) (T (PLUS (UPBV U) 1)))) 
(PUT 'DIMVECT 'NUMBER-OF-ARGS 1) 
(PUT 'DIMVECT 'DEFINED-ON-LINE '97) 
(PUT 'DIMVECT 'DEFINED-IN-FILE 'ASSIST/HCVCTORS.RED) 
(PUT 'DIMVECT 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE DIMVECT (U)
    (COND ((NULL U) NIL)
          (T
           (CONS (PLUS (UPBV U) 1)
                 (DIMVECT
                  ((LAMBDA (X) (COND ((NOT (VECTORP X)) NIL) (T X)))
                   (GETV U 0))))))) 
(PUT 'INDEX_ELT 'NUMBER-OF-ARGS 2) 
(PUT 'INDEX_ELT 'DEFINED-ON-LINE '107) 
(PUT 'INDEX_ELT 'DEFINED-IN-FILE 'ASSIST/HCVCTORS.RED) 
(PUT 'INDEX_ELT 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE INDEX_ELT (ELT U)
    (PROG (IDX II)
      (SETQ II 0)
      (SETQ II 1)
      (PROG ()
       REPEATLABEL
        (PROGN
         (COND ((EQUAL ELT (GETV U (DIFFERENCE II 1))) (SETQ IDX II)) (T NIL))
         (SETQ II (PLUS II 1))
         NIL)
        (COND
         ((NOT (OR (NOT (NULL IDX)) (EQUAL II (PLUS (UPBVE U) 1))))
          (GO REPEATLABEL))))
      (RETURN IDX))) 
(PUT 'VECT2LIST 'NUMBER-OF-ARGS 1) 
(PUT 'VECT2LIST 'DEFINED-ON-LINE '117) 
(PUT 'VECT2LIST 'DEFINED-IN-FILE 'ASSIST/HCVCTORS.RED) 
(PUT 'VECT2LIST 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE VECT2LIST (U)
    (PROG (I FORALL-RESULT FORALL-ENDPTR)
      (SETQ I 0)
      (COND ((MINUSP (DIFFERENCE (UPBV U) I)) (RETURN NIL)))
      (SETQ FORALL-RESULT
              (SETQ FORALL-ENDPTR
                      (CONS
                       ((LAMBDA (X)
                          (COND ((NULL (UPBV X)) X) (T (VECT2LIST X))))
                        (GETV U I))
                       NIL)))
     LOOPLABEL
      (SETQ I (PLUS2 I 1))
      (COND ((MINUSP (DIFFERENCE (UPBV U) I)) (RETURN FORALL-RESULT)))
      (RPLACD FORALL-ENDPTR
              (CONS
               ((LAMBDA (X) (COND ((NULL (UPBV X)) X) (T (VECT2LIST X))))
                (GETV U I))
               NIL))
      (SETQ FORALL-ENDPTR (CDR FORALL-ENDPTR))
      (GO LOOPLABEL))) 
(PUT 'LIST_STR 'NUMBER-OF-ARGS 1) 
(PUT 'LIST_STR 'DEFINED-ON-LINE '124) 
(PUT 'LIST_STR 'DEFINED-IN-FILE 'ASSIST/HCVCTORS.RED) 
(PUT 'LIST_STR 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE LIST_STR (U)
    (COND ((NOT (LISTP (CAR U))) (CONS (LENGTH U) NIL))
          (T (CONS (LENGTH U) (LIST_STR (CAR U)))))) 
(PUT 'N_FIRST_LST 'NUMBER-OF-ARGS 2) 
(PUT 'N_FIRST_LST 'DEFINED-ON-LINE '132) 
(PUT 'N_FIRST_LST 'DEFINED-IN-FILE 'ASSIST/HCVCTORS.RED) 
(PUT 'N_FIRST_LST 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE N_FIRST_LST (U N)
    (COND ((EQUAL N 0) NIL)
          (T (CONS (CAR U) (N_FIRST_LST (CDR U) (DIFFERENCE N 1)))))) 
(PUT 'HOMO_LST 'NUMBER-OF-ARGS 2) 
(PUT 'HOMO_LST 'DEFINED-ON-LINE '136) 
(PUT 'HOMO_LST 'DEFINED-IN-FILE 'ASSIST/HCVCTORS.RED) 
(PUT 'HOMO_LST 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE HOMO_LST (U N)
    (COND
     ((NOT (LISTP U))
      (REDERR " Argument to 'homo_lst' has not the correct dimension"))
     ((EQUAL N 0) 1)
     (T
      (PROG (NL SU)
        (SETQ NL 0)
        (SETQ SU U)
        (SETQ NL (LENGTH (CAR SU)))
        (SETQ SU (CDR SU))
        (COND ((NULL SU) 1))
        (PROG ()
         WHILELABEL
          (COND ((NOT (AND SU (EQUAL NL (LENGTH (CAR SU))))) (RETURN NIL)))
          (SETQ SU (CDR SU))
          (GO WHILELABEL))
        (COND
         ((NULL SU)
          (RETURN
           (PROG (I FORALL-RESULT)
             (SETQ I U)
             (SETQ FORALL-RESULT 1)
            LAB1
             (COND ((NULL I) (RETURN FORALL-RESULT)))
             (SETQ FORALL-RESULT
                     (TIMES
                      ((LAMBDA (I) (HOMO_LST I (DIFFERENCE N 1))) (CAR I))
                      FORALL-RESULT))
             (SETQ I (CDR I))
             (GO LAB1))))
         (T (RETURN 0))))))) 
(PUT 'LIST_TO_ARRAY 'NUMBER-OF-ARGS 3) 
(PUT 'LIST_TO_ARRAY 'DEFINED-ON-LINE '157) 
(PUT 'LIST_TO_ARRAY 'DEFINED-IN-FILE 'ASSIST/HCVCTORS.RED) 
(PUT 'LIST_TO_ARRAY 'PROCEDURE_TYPE
     '(ARROW (TIMES GENERAL GENERAL GENERAL) GENERAL)) 
(DE LIST_TO_ARRAY (U N ARR)
    (PROG (LU)
      (SETQ LU (ALG_TO_SYMB U))
      (PROGN
       (VECT_TO_ARRAY (LIST (LIST2VECTN LU N) ARR)
        (N_FIRST_LST (LIST_STR LU) N))
       (REMFLAG (LIST ARR) 'USED*)))) 
(FLAG '(LIST_TO_ARRAY |,| ARRAY_TO_LIST) 'OPFN) 
(PUT 'ARRAY_TO_LIST 'NUMBER-OF-ARGS 1) 
(PUT 'ARRAY_TO_LIST 'DEFINED-ON-LINE '169) 
(PUT 'ARRAY_TO_LIST 'DEFINED-IN-FILE 'ASSIST/HCVCTORS.RED) 
(PUT 'ARRAY_TO_LIST 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE ARRAY_TO_LIST (U) (SYMB_TO_ALG (VECT2LIST (CADR (GET U 'AVALUE))))) 
(PUT 'LIST2VECTN 'NUMBER-OF-ARGS 2) 
(PUT 'LIST2VECTN 'DEFINED-ON-LINE '175) 
(PUT 'LIST2VECTN 'DEFINED-IN-FILE 'ASSIST/HCVCTORS.RED) 
(PUT 'LIST2VECTN 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE LIST2VECTN (U N)
    (COND ((EQUAL N 1) (LIST2VECT U))
          (T
           (PROG (LL X)
             (COND
              ((EQUAL (HOMO_LST U (DIFFERENCE N 1)) 1) (SETQ LL (LIST_STR U)))
              (T (RERROR 'ALG 1 (LIST N "Too large to coerce to an array"))))
             (SETQ X (MKVECT (DIFFERENCE (FIRST LL) 1)))
             (SETQ LL (CDR LL))
             (PROG (I)
               (SETQ I 1)
              LAB
               (COND ((MINUSP (DIFFERENCE (PLUS (UPBV X) 1) I)) (RETURN NIL)))
               (PUTV X (DIFFERENCE I 1)
                     (LIST2VECTN (NTH U I) (DIFFERENCE N 1)))
               (SETQ I (PLUS2 I 1))
               (GO LAB))
             (RETURN X))))) 
(PUT 'LIST2VECT 'NUMBER-OF-ARGS 1) 
(PUT 'LIST2VECT 'DEFINED-ON-LINE '185) 
(PUT 'LIST2VECT 'DEFINED-IN-FILE 'ASSIST/HCVCTORS.RED) 
(PUT 'LIST2VECT 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE LIST2VECT (U) (LIST2VECT* U 'ALGEBRAIC)) 
(PUT 'LIST2VECT* 'NUMBER-OF-ARGS 2) 
(PUT 'LIST2VECT* 'DEFINED-ON-LINE '187) 
(PUT 'LIST2VECT* 'DEFINED-IN-FILE 'ASSIST/HCVCTORS.RED) 
(PUT 'LIST2VECT* 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE LIST2VECT* (U V)
    (PROG (X)
      (SETQ X (MKVECT (DIFFERENCE (LENGTH U) 1)))
      (PROG (I)
        (SETQ I 1)
       LAB
        (COND ((MINUSP (DIFFERENCE (PLUS (UPBV X) 1) I)) (RETURN NIL)))
        (PUTV X (DIFFERENCE I 1)
              (COND ((EQUAL V 'ALGEBRAIC) (SYMB_TO_ALG (NTH U I)))
                    (T (NTH U I))))
        (SETQ I (PLUS2 I 1))
        (GO LAB))
      (RETURN X))) 
(PUT 'VECT_TO_ARRAY 'NUMBER-OF-ARGS 2) 
(PUT 'VECT_TO_ARRAY 'DEFINED-ON-LINE '196) 
(PUT 'VECT_TO_ARRAY 'DEFINED-IN-FILE 'ASSIST/HCVCTORS.RED) 
(PUT 'VECT_TO_ARRAY 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE VECT_TO_ARRAY (U DIM)
    (PROGN
     (TYPECHK (CADR U) 'ARRAY)
     (PUT (CADR U) 'RTYPE 'ARRAY)
     (PUT (CADR U) 'AVALUE (LIST 'ARRAY (CAR U)))
     (PUT (CADR U) 'DIMENSION DIM))) 
(PUT 'VECTAPPEND 'NUMBER-OF-ARGS 2) 
(PUT 'VECTAPPEND 'DEFINED-ON-LINE '202) 
(PUT 'VECTAPPEND 'DEFINED-IN-FILE 'ASSIST/HCVCTORS.RED) 
(PUT 'VECTAPPEND 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE VECTAPPEND (V1 V2)
    (COND ((NOT (VECTORP V1)) (TYPERR V1 "vector"))
          ((NOT (VECTORP V2)) (VECTAPPEND1 V1 V2))
          (T
           (PROG (NEW DIM)
             (SETQ DIM 0)
             (SETQ NEW (MKVECT (PLUS (UPBV V1) (UPBV V2) 1)))
             (SETQ DIM (PLUS (UPBV V1) 1))
             (PROG (I)
               (SETQ I 1)
              LAB
               (COND ((MINUSP (DIFFERENCE DIM I)) (RETURN NIL)))
               (PUTV NEW (DIFFERENCE I 1) (GETV V1 (DIFFERENCE I 1)))
               (SETQ I (PLUS2 I 1))
               (GO LAB))
             (PROG (I)
               (SETQ I (PLUS DIM 1))
              LAB
               (COND
                ((MINUSP (DIFFERENCE (PLUS (UPBV NEW) 1) I)) (RETURN NIL)))
               (PUTV NEW (DIFFERENCE I 1)
                     (GETV V2 (DIFFERENCE (DIFFERENCE I DIM) 1)))
               (SETQ I (PLUS2 I 1))
               (GO LAB))
             (RETURN NEW))))) 
(PUT 'VECTAPPEND1 'NUMBER-OF-ARGS 2) 
(PUT 'VECTAPPEND1 'DEFINED-ON-LINE '213) 
(PUT 'VECTAPPEND1 'DEFINED-IN-FILE 'ASSIST/HCVCTORS.RED) 
(PUT 'VECTAPPEND1 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE VECTAPPEND1 (V1 V2)
    (PROG (NEW DIM)
      (SETQ DIM 0)
      (SETQ NEW (MKVECT (SETQ DIM (PLUS (UPBV V1) 1))))
      (PROG (I)
        (SETQ I 1)
       LAB
        (COND ((MINUSP (DIFFERENCE DIM I)) (RETURN NIL)))
        (PUTV NEW (DIFFERENCE I 1) (GETV V1 (DIFFERENCE I 1)))
        (SETQ I (PLUS2 I 1))
        (GO LAB))
      (PUTV NEW (DIFFERENCE (PLUS DIM 1) 1) V2)
      (RETURN NEW))) 
(PUT 'VECTADD 'NUMBER-OF-ARGS 2) 
(PUT 'VECTADD 'DEFINED-ON-LINE '220) 
(PUT 'VECTADD 'DEFINED-IN-FILE 'ASSIST/HCVCTORS.RED) 
(PUT 'VECTADD 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE VECTADD (V1 V2)
    (COND
     ((OR (NOT (VECTORP V1)) (NOT (VECTORP V2)))
      (REDERR "arguments must be vectors"))
     (T
      (PROG (VADD)
        (SETQ VADD (MKVECT (UPBV V1)))
        (PROG (I)
          (SETQ I 1)
         LAB
          (COND ((MINUSP (DIFFERENCE (UPBVE V1) I)) (RETURN NIL)))
          (PUTV VADD (DIFFERENCE I 1)
                (PLUS (GETV V1 (DIFFERENCE I 1)) (GETV V2 (DIFFERENCE I 1))))
          (SETQ I (PLUS2 I 1))
          (GO LAB))
        (RETURN VADD))))) 
(PUT 'SETELVE 'NUMBER-OF-ARGS 3) 
(PUT 'SETELVE 'DEFINED-ON-LINE '232) 
(PUT 'SETELVE 'DEFINED-IN-FILE 'ASSIST/HCVCTORS.RED) 
(PUT 'SETELVE 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL GENERAL) GENERAL)) 
(DE SETELVE (VE L VAL)
    (COND ((NULL L) NIL) ((NULL (CDR L)) (PUTV VE (DIFFERENCE (CAR L) 1) VAL))
          (T (SETELVE (GETV VE (DIFFERENCE (CAR L) 1)) (CDR L) VAL)))) 
(PUT 'LTRIDENT 'NUMBER-OF-ARGS 1) 
(PUT 'LTRIDENT 'DEFINED-ON-LINE '242) 
(PUT 'LTRIDENT 'DEFINED-IN-FILE 'ASSIST/HCVCTORS.RED) 
(PUT 'LTRIDENT 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE LTRIDENT (N)
    (PROG (A)
      (SETQ A (MKARRAY1 (LIST N) 'ALGEBRAIC))
      (PROG (I)
        (SETQ I 1)
       LAB
        (COND ((MINUSP (DIFFERENCE N I)) (RETURN NIL)))
        (PROGN
         (PUTV A (DIFFERENCE I 1) (MKARRAY1 (LIST I) 'ALGEBRAIC))
         (PROG (J)
           (SETQ J 1)
          LAB
           (COND ((MINUSP (DIFFERENCE (DIFFERENCE I 1) J)) (RETURN NIL)))
           (PUTV (GETV A (DIFFERENCE I 1)) (DIFFERENCE J 1) 0)
           (SETQ J (PLUS2 J 1))
           (GO LAB))
         (PUTV (GETV A (DIFFERENCE I 1)) (DIFFERENCE I 1) 1)
         NIL)
        (SETQ I (PLUS2 I 1))
        (GO LAB))
      (RETURN A))) 
(ENDMODULE) 