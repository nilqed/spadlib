(cl:declaim (cl:optimize cl:debug cl:safety))
(cl:declaim (sb-ext:muffle-conditions sb-ext:compiler-note cl:style-warning))
(MODULE (LIST 'FMPRINT)) 
(CREATE-PACKAGE '(FMPRINT) NIL) 
(FLUID
 '(*LIST *NAT *NOSPLIT *RATPRI *REVPRI OVERFLOWED* P** TESTING-WIDTH* TABLEVEL*
   SUMLEVEL* OUTPUTHANDLER* OUTPUTHANDLER-STACK* POSN* OBRKP*)) 
(GLOBAL '(*ERAISE CHARASSOC* INITL* NAT** SPARE* OFL*)) 
(SWITCH
 (LIST 'LIST (LIST 'EQUAL 'RATPRI 'ON) 'REVPRI (LIST 'EQUAL 'NOSPLIT 'ON))) 
(FLUID
 '(FANCY-SWITCH-ON* FANCY-SWITCH-OFF* *FANCY-MODE FANCY-POS* FANCY-LINE*
   FANCY-PAGE* FANCY-BSTACK* *FANCY_TEX *FANCY-LOWER)) 
(FLUID '(FANCY-TEXPOS)) 
(SWITCH (LIST 'FANCY_TEX)) 
(SETQ FANCY-SWITCH-ON* (INT2ID 16)) 
(SETQ FANCY-SWITCH-OFF* (INT2ID 17)) 
(SETQ *FANCY-LOWER T) 
(GLOBAL '(FANCY_LOWER_DIGITS FANCY_PRINT_DF)) 
(SHARE (LIST 'FANCY_LOWER_DIGITS)) 
(COND
 ((NULL FANCY_LOWER_DIGITS)
  (SETQ FANCY_LOWER_DIGITS (PROGN (SETQ ALGLIST* (CONS NIL NIL)) T)))) 
(SHARE (LIST 'FANCY_PRINT_DF)) 
(COND
 ((NULL FANCY_PRINT_DF)
  (SETQ FANCY_PRINT_DF (PROGN (SETQ ALGLIST* (CONS NIL NIL)) 'PARTIAL)))) 
(SWITCH (LIST 'FANCY)) 
(PUT 'FANCY 'SIMPFG '((T (FMP-SWITCH T)) (NIL (FMP-SWITCH NIL)))) 
(PUT 'FMP-SWITCH 'NUMBER-OF-ARGS 1) 
(PUT 'FMP-SWITCH 'DEFINED-ON-LINE '156) 
(PUT 'FMP-SWITCH 'DEFINED-IN-FILE 'RPRINT/FMPRINT.RED) 
(PUT 'FMP-SWITCH 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE FMP-SWITCH (MODE)
    (COND
     (MODE
      (PROGN
       (COND
        ((NEQ OUTPUTHANDLER* 'FANCY-OUTPUT)
         (PROGN
          (SETQ OUTPUTHANDLER-STACK*
                  (CONS OUTPUTHANDLER* OUTPUTHANDLER-STACK*))
          (SETQ OUTPUTHANDLER* 'FANCY-OUTPUT)
          NIL)))
       (SETQ *FANCY T)))
     (T
      (PROGN
       (COND
        ((EQUAL OUTPUTHANDLER* 'FANCY-OUTPUT)
         (PROGN
          (SETQ OUTPUTHANDLER* (CAR OUTPUTHANDLER-STACK*))
          (SETQ OUTPUTHANDLER-STACK* (CDR OUTPUTHANDLER-STACK*))
          (SETQ *FANCY NIL)))
        (T (SETQ *FANCY NIL)))
       NIL)))) 
(PUT 'FANCY-OUT-HEADER 'NUMBER-OF-ARGS 0) 
(PUT 'FANCY-OUT-HEADER 'DEFINED-ON-LINE '174) 
(PUT 'FANCY-OUT-HEADER 'DEFINED-IN-FILE 'RPRINT/FMPRINT.RED) 
(PUT 'FANCY-OUT-HEADER 'PROCEDURE_TYPE '(ARROW UNIT GENERAL)) 
(DE FANCY-OUT-HEADER NIL (COND ((NOT *FANCY_TEX) (PRIN2 FANCY-SWITCH-ON*)))) 
(PUT 'FANCY-OUT-TRAILER 'NUMBER-OF-ARGS 0) 
(PUT 'FANCY-OUT-TRAILER 'DEFINED-ON-LINE '177) 
(PUT 'FANCY-OUT-TRAILER 'DEFINED-IN-FILE 'RPRINT/FMPRINT.RED) 
(PUT 'FANCY-OUT-TRAILER 'PROCEDURE_TYPE '(ARROW UNIT GENERAL)) 
(DE FANCY-OUT-TRAILER NIL
    (PROGN (COND ((NOT *FANCY_TEX) (PRIN2 FANCY-SWITCH-OFF*))) (TERPRI))) 
(PUT 'FANCY-TEX 'NUMBER-OF-ARGS 1) 
(PUT 'FANCY-TEX 'DEFINED-ON-LINE '181) 
(PUT 'FANCY-TEX 'DEFINED-IN-FILE 'RPRINT/FMPRINT.RED) 
(PUT 'FANCY-TEX 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE FANCY-TEX (S)
    (PROGN
     (PRIN2 FANCY-SWITCH-ON*)
     (PROG (X)
       (SETQ X (EXPLODE2 S))
      LAB
       (COND ((NULL X) (RETURN NIL)))
       ((LAMBDA (X) (PRIN2 X)) (CAR X))
       (SETQ X (CDR X))
       (GO LAB))
     (PRIN2T FANCY-SWITCH-OFF*)
     NIL)) 
(PUT 'FANCY-OUT-ITEM 'NUMBER-OF-ARGS 1) 
(PUT 'FANCY-OUT-ITEM 'DEFINED-ON-LINE '188) 
(PUT 'FANCY-OUT-ITEM 'DEFINED-IN-FILE 'RPRINT/FMPRINT.RED) 
(PUT 'FANCY-OUT-ITEM 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE FANCY-OUT-ITEM (IT)
    (COND ((ATOM IT) (PRIN2 IT)) ((EQCAR IT 'ASCII) (WRITECHAR (CADR IT)))
          ((EQCAR IT 'TAB)
           (PROG (I)
             (SETQ I 1)
            LAB
             (COND ((MINUSP (DIFFERENCE (CDR IT) I)) (RETURN NIL)))
             (PRIN2 "\\>")
             (SETQ I (PLUS2 I 1))
             (GO LAB)))
          ((EQCAR IT 'BKT)
           (PROG (M B L N)
             (SETQ N 0)
             (SETQ M (CADR IT))
             (SETQ B (CADDR IT))
             (SETQ N (CADDDR IT))
             (SETQ L (MEMBER B '(|(| {)))
             (COND
              ((GREATERP N 0)
               (PROGN
                (PRIN2
                 (COND ((EQUAL N 1) "\\big") ((EQUAL N 2) "\\Big")
                       ((EQUAL N 3) "\\bigg") (T "\\Bigg")))
                (PRIN2 (COND (L "l") (T "r")))
                NIL)))
             (COND ((MEMBER B '({ })) (PRIN2 "\\")))
             (PRIN2 B)))
          (T (REDERR "unknown print item")))) 
(PUT 'SET-FANCYMODE 'NUMBER-OF-ARGS 1) 
(PUT 'SET-FANCYMODE 'DEFINED-ON-LINE '211) 
(PUT 'SET-FANCYMODE 'DEFINED-IN-FILE 'RPRINT/FMPRINT.RED) 
(PUT 'SET-FANCYMODE 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE SET-FANCYMODE (BOOL)
    (COND
     ((NEQ BOOL *FANCY-MODE)
      (PROGN
       (SETQ *FANCY-MODE BOOL)
       (SETQ FANCY-POS* 0)
       (SETQ FANCY-TEXPOS 0)
       (SETQ FANCY-PAGE* NIL)
       (SETQ FANCY-LINE* NIL)
       (SETQ OVERFLOWED* NIL)
       (SETQ FANCY-LINE* '((TAB . 1)))
       (SETQ FANCY-POS* 10)
       (SETQ SUMLEVEL* (SETQ TABLEVEL* 1))
       NIL)))) 
(PUT 'FANCY-OUTPUT 'NUMBER-OF-ARGS 2) 
(PUT 'FANCY-OUTPUT 'DEFINED-ON-LINE '225) 
(PUT 'FANCY-OUTPUT 'DEFINED-IN-FILE 'RPRINT/FMPRINT.RED) 
(PUT 'FANCY-OUTPUT 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE FANCY-OUTPUT (MODE L)
    (COND
     ((OR OFL* (GREATERP POSN* 2) (NOT *NAT))
      ((LAMBDA (OUTPUTHANDLER*)
         (PROGN
          (COND ((EQUAL MODE 'MAPRIN) (MAPRIN L))
                ((EQUAL MODE 'ASSGNPRI) (ASSGNPRI (CAR L) (CADR L) (CADDR L)))
                ((EQUAL MODE 'PRIN2*) (PRIN2* L)) (T (TERPRI* L)))))
       NIL))
     (T
      (PROGN
       (SET-FANCYMODE T)
       (COND ((OR (EQUAL MODE 'MAPRIN) (EQUAL MODE 'PRIN2*)) (FANCY-MAPRIN0 L))
             ((EQUAL MODE 'ASSGNPRI) (PROGN (FANCY-ASSGNPRI L) (FANCY-FLUSH)))
             (T (FANCY-FLUSH)))
       NIL)))) 
(PUT 'FANCY-ASSGNPRI 'NUMBER-OF-ARGS 1) 
(PUT 'FANCY-ASSGNPRI 'DEFINED-ON-LINE '245) 
(PUT 'FANCY-ASSGNPRI 'DEFINED-IN-FILE 'RPRINT/FMPRINT.RED) 
(PUT 'FANCY-ASSGNPRI 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE FANCY-ASSGNPRI (U)
    (PROG (X Y)
      (SETQ X (GETRTYPE (CAR U)))
      (SETQ Y (GET (GET X 'TAG) 'FANCY-ASSGNPRI))
      (RETURN (COND (Y (APPLY1 Y U)) (T (FANCY-MAPRIN0 (CAR U))))))) 
(PUT 'FANCY-FLUSH 'NUMBER-OF-ARGS 0) 
(PUT 'FANCY-FLUSH 'DEFINED-ON-LINE '253) 
(PUT 'FANCY-FLUSH 'DEFINED-IN-FILE 'RPRINT/FMPRINT.RED) 
(PUT 'FANCY-FLUSH 'PROCEDURE_TYPE '(ARROW UNIT GENERAL)) 
(DE FANCY-FLUSH NIL
    ((LAMBDA (*LOWER)
       (PROGN
        (FANCY-TERPRI* T)
        (PROG (LINE)
          (SETQ LINE (REVERSE FANCY-PAGE*))
         LAB
          (COND ((NULL LINE) (RETURN NIL)))
          ((LAMBDA (LINE)
             (COND
              ((AND LINE (NOT (EQCAR (CAR LINE) 'TAB)))
               (PROGN
                (FANCY-OUT-HEADER)
                (PROG (IT)
                  (SETQ IT (REVERSE LINE))
                 LAB
                  (COND ((NULL IT) (RETURN NIL)))
                  ((LAMBDA (IT) (FANCY-OUT-ITEM IT)) (CAR IT))
                  (SETQ IT (CDR IT))
                  (GO LAB))
                (FANCY-OUT-TRAILER)
                NIL))))
           (CAR LINE))
          (SETQ LINE (CDR LINE))
          (GO LAB))
        (SET-FANCYMODE NIL)
        NIL))
     NIL)) 
(PUT 'FANCY-SPECIAL-SYMBOL 'NUMBER-OF-ARGS 2) 
(PUT 'FANCY-SPECIAL-SYMBOL 'DEFINED-ON-LINE '266) 
(PUT 'FANCY-SPECIAL-SYMBOL 'DEFINED-IN-FILE 'RPRINT/FMPRINT.RED) 
(PUT 'FANCY-SPECIAL-SYMBOL 'PROCEDURE_TYPE
     '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE FANCY-SPECIAL-SYMBOL (U N)
    (COND
     ((NUMBERP U)
      (PROGN
       (FANCY-PRIN2* "\\symb{" N)
       (FANCY-PRIN2* U 0)
       (FANCY-PRIN2* "}" 0)
       NIL))
     (T (FANCY-PRIN2* U N)))) 
(PUT 'FANCY-PRIN2 'NUMBER-OF-ARGS 1) 
(PUT 'FANCY-PRIN2 'DEFINED-ON-LINE '274) 
(PUT 'FANCY-PRIN2 'DEFINED-IN-FILE 'RPRINT/FMPRINT.RED) 
(PUT 'FANCY-PRIN2 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE FANCY-PRIN2 (U) (FANCY-PRIN2* U NIL)) 
(PUT 'FANCY-PRIN2* 'NUMBER-OF-ARGS 2) 
(PUT 'FANCY-PRIN2* 'DEFINED-ON-LINE '277) 
(PUT 'FANCY-PRIN2* 'DEFINED-IN-FILE 'RPRINT/FMPRINT.RED) 
(PUT 'FANCY-PRIN2* 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE FANCY-PRIN2* (U N)
    (COND ((AND (NUMBERP U) (NOT TESTING-WIDTH*)) (FANCY-PRIN2NUMBER U))
          (T
           ((LAMBDA (*LOWER)
              (PROG (STR ID L)
                (SETQ L 0)
                (SETQ STR (STRINGP U))
                (SETQ ID (AND (IDP U) (NOT (DIGIT U))))
                (SETQ U
                        (COND
                         ((ATOM U)
                          ((LAMBDA (*LOWER) (EXPLODE2 U)) *FANCY-LOWER))
                         (T (LIST U))))
                (SETQ L (COND ((NUMBERP N) N) (T (TIMES 2 (LENGTH U)))))
                (COND
                 ((AND ID (NOT (NUMBERP N)))
                  (SETQ U (FANCY-LOWER-DIGITS (FANCY-ESC U)))))
                (PROG (X)
                  (SETQ X U)
                 LAB
                  (COND ((NULL X) (RETURN NIL)))
                  ((LAMBDA (X)
                     (PROGN
                      (COND
                       ((AND STR (OR (EQUAL X BLANK) (EQUAL X '_)))
                        (SETQ FANCY-LINE* (CONS '|\\| FANCY-LINE*))))
                      (SETQ FANCY-LINE*
                              (CONS
                               (COND
                                ((AND ID *FANCY-LOWER) (RED-CHAR-DOWNCASE X))
                                (T X))
                               FANCY-LINE*))
                      NIL))
                   (CAR X))
                  (SETQ X (CDR X))
                  (GO LAB))
                (SETQ FANCY-POS* (PLUS FANCY-POS* L))
                (COND
                 ((GREATERP FANCY-POS* (TIMES 2 (PLUS (LINELENGTH NIL) 1)))
                  (SETQ OVERFLOWED* T)))))
            *LOWER)))) 
(PUT 'FANCY-LAST-SYMBOL 'NUMBER-OF-ARGS 0) 
(PUT 'FANCY-LAST-SYMBOL 'DEFINED-ON-LINE '298) 
(PUT 'FANCY-LAST-SYMBOL 'DEFINED-IN-FILE 'RPRINT/FMPRINT.RED) 
(PUT 'FANCY-LAST-SYMBOL 'PROCEDURE_TYPE '(ARROW UNIT GENERAL)) 
(DE FANCY-LAST-SYMBOL NIL (COND (FANCY-LINE* (CAR FANCY-LINE*)))) 
(SETQ CHARASSOC*
        '((|a| . A) (|b| . B) (|c| . C) (|d| . D) (|e| . E) (|f| . F) (|g| . G)
          (|h| . H) (|i| . I) (|j| . J) (|k| . K) (|l| . L) (|m| . M) (|n| . N)
          (|o| . O) (|p| . P) (|q| . Q) (|r| . R) (|s| . S) (|t| . T) (|u| . U)
          (|v| . V) (|w| . W) (|x| . X) (|y| . Y) (|z| . Z))) 
(PUT 'FANCY-PRIN2NUMBER 'NUMBER-OF-ARGS 1) 
(PUT 'FANCY-PRIN2NUMBER 'DEFINED-ON-LINE '311) 
(PUT 'FANCY-PRIN2NUMBER 'DEFINED-IN-FILE 'RPRINT/FMPRINT.RED) 
(PUT 'FANCY-PRIN2NUMBER 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE FANCY-PRIN2NUMBER (U)
    (COND (TESTING-WIDTH* (FANCY-PRIN2* U T))
          (T (FANCY-PRIN2NUMBER1 (COND ((ATOM U) (EXPLODE2 U)) (T U)))))) 
(PUT 'FANCY-PRIN2NUMBER1 'NUMBER-OF-ARGS 1) 
(PUT 'FANCY-PRIN2NUMBER1 'DEFINED-ON-LINE '317) 
(PUT 'FANCY-PRIN2NUMBER1 'DEFINED-IN-FILE 'RPRINT/FMPRINT.RED) 
(PUT 'FANCY-PRIN2NUMBER1 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE FANCY-PRIN2NUMBER1 (U)
    (PROG (C LL)
      (SETQ C 0)
      (SETQ LL 0)
      (SETQ LL (TIMES 2 (PLUS (LINELENGTH NIL) 1)))
      (PROG ()
       WHILELABEL
        (COND ((NOT U) (RETURN NIL)))
        (PROGN
         (SETQ C (PLUS C 1))
         (COND
          ((AND (GREATERP C 10) (GREATERP FANCY-POS* LL)) (FANCY-TERPRI* T)))
         (FANCY-PRIN2* (CAR U) 2)
         (SETQ U (CDR U))
         NIL)
        (GO WHILELABEL)))) 
(PUT 'FANCY-ESC 'NUMBER-OF-ARGS 1) 
(PUT 'FANCY-ESC 'DEFINED-ON-LINE '327) 
(PUT 'FANCY-ESC 'DEFINED-IN-FILE 'RPRINT/FMPRINT.RED) 
(PUT 'FANCY-ESC 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE FANCY-ESC (U)
    (COND ((NOT (MEMQ '_ U)) U)
          (T
           ((LAMBDA (W) (COND ((EQ (CAR U) '_) (CONS '|\\| W)) (T W)))
            (CONS (CAR U) (FANCY-ESC (CDR U))))))) 
(PUT 'FANCY-LOWER-DIGITS 'NUMBER-OF-ARGS 1) 
(PUT 'FANCY-LOWER-DIGITS 'DEFINED-ON-LINE '332) 
(PUT 'FANCY-LOWER-DIGITS 'DEFINED-IN-FILE 'RPRINT/FMPRINT.RED) 
(PUT 'FANCY-LOWER-DIGITS 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE FANCY-LOWER-DIGITS (U)
    ((LAMBDA (M)
       (COND ((NULL M) U)
             ((OR (EQUAL M 'ALL) (FANCY-LOWER-DIGITSTRAIL U NIL))
              (FANCY-LOWER-DIGITS1 U NIL))
             (T U)))
     (FANCY-MODE 'FANCY_LOWER_DIGITS))) 
(PUT 'FANCY-LOWER-DIGITS1 'NUMBER-OF-ARGS 2) 
(PUT 'FANCY-LOWER-DIGITS1 'DEFINED-ON-LINE '339) 
(PUT 'FANCY-LOWER-DIGITS1 'DEFINED-IN-FILE 'RPRINT/FMPRINT.RED) 
(PUT 'FANCY-LOWER-DIGITS1 'PROCEDURE_TYPE
     '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE FANCY-LOWER-DIGITS1 (U S)
    (PROG (C Q R W X)
     LOOP
      (COND (U (PROGN (SETQ C (CAR U)) (SETQ U (CDR U)))) (T (SETQ C NIL)))
      (COND
       ((NULL S)
        (COND ((AND (NOT (DIGIT C)) C) (SETQ W (CONS C W)))
              (T
               (PROGN
                (SETQ W (REVERSIP W))
                (SETQ Q (INTERN (COMPRESS W)))
                (COND
                 ((STRINGP (SETQ X (GET Q 'FANCY-SPECIAL-SYMBOL)))
                  (SETQ W (EXPLODE2 X))))
                (SETQ R (NCONC R W))
                (COND ((DIGIT C) (PROGN (SETQ S T) (SETQ W (LIST C))))
                      (T (SETQ W NIL)))
                NIL))))
       ((DIGIT C) (SETQ W (CONS C W)))
       (T
        (PROGN
         (SETQ W (CONS '_ (CONS '{ (REVERSIP (CONS '} W)))))
         (SETQ R (NCONC R W))
         (COND (C (PROGN (SETQ S NIL) (SETQ W (LIST C)))) (T (SETQ W NIL)))
         NIL)))
      (COND (W (GO LOOP)))
      (RETURN R))) 
(PUT 'FANCY-LOWER-DIGITSTRAIL 'NUMBER-OF-ARGS 2) 
(PUT 'FANCY-LOWER-DIGITSTRAIL 'DEFINED-ON-LINE '367) 
(PUT 'FANCY-LOWER-DIGITSTRAIL 'DEFINED-IN-FILE 'RPRINT/FMPRINT.RED) 
(PUT 'FANCY-LOWER-DIGITSTRAIL 'PROCEDURE_TYPE
     '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE FANCY-LOWER-DIGITSTRAIL (U S)
    (COND ((NULL U) S)
          ((AND (NOT S) (DIGIT (CAR U))) (FANCY-LOWER-DIGITSTRAIL (CDR U) T))
          ((AND S (NOT (DIGIT (CAR U)))) NIL)
          (T (FANCY-LOWER-DIGITSTRAIL (CDR U) S)))) 
(PUT 'FANCY-TERPRI* 'NUMBER-OF-ARGS 1) 
(PUT 'FANCY-TERPRI* 'DEFINED-ON-LINE '374) 
(PUT 'FANCY-TERPRI* 'DEFINED-IN-FILE 'RPRINT/FMPRINT.RED) 
(PUT 'FANCY-TERPRI* 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE FANCY-TERPRI* (U)
    (PROGN
     (COND (FANCY-LINE* (SETQ FANCY-PAGE* (CONS FANCY-LINE* FANCY-PAGE*))))
     (SETQ FANCY-POS* (TIMES TABLEVEL* 10))
     (SETQ FANCY-TEXPOS (TIMES TABLEVEL* 30000))
     (SETQ FANCY-LINE* (LIST (CONS 'TAB TABLEVEL*)))
     (SETQ OVERFLOWED* NIL))) 
(PUT 'FANCY-BEGIN 'NUMBER-OF-ARGS 0) 
(PUT 'FANCY-BEGIN 'DEFINED-ON-LINE '398) 
(PUT 'FANCY-BEGIN 'DEFINED-IN-FILE 'RPRINT/FMPRINT.RED) 
(PUT 'FANCY-BEGIN 'PROCEDURE_TYPE '(ARROW UNIT GENERAL)) 
(DE FANCY-BEGIN NIL (LIST FANCY-POS* FANCY-LINE* FANCY-TEXPOS)) 
(PUT 'FANCY-END 'NUMBER-OF-ARGS 2) 
(PUT 'FANCY-END 'DEFINED-ON-LINE '403) 
(PUT 'FANCY-END 'DEFINED-IN-FILE 'RPRINT/FMPRINT.RED) 
(PUT 'FANCY-END 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE FANCY-END (R S)
    (PROGN
     (COND
      ((EQUAL R 'FAILED)
       (PROGN
        (SETQ FANCY-LINE* (CAR S))
        (SETQ FANCY-POS* (CADR S))
        (SETQ FANCY-TEXPOS (CADDR S)))))
     R)) 
(PUT 'FANCY-MODE 'NUMBER-OF-ARGS 1) 
(PUT 'FANCY-MODE 'DEFINED-ON-LINE '411) 
(PUT 'FANCY-MODE 'DEFINED-IN-FILE 'RPRINT/FMPRINT.RED) 
(PUT 'FANCY-MODE 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE FANCY-MODE (U)
    (PROG (M)
      (SETQ M (LISPEVAL U))
      (COND ((EQCAR M '*SQ) (SETQ M (REVAL1 M T))))
      (RETURN M))) 
(PUT 'FANCY-MAPRIN0 'NUMBER-OF-ARGS 1) 
(PUT 'FANCY-MAPRIN0 'DEFINED-ON-LINE '420) 
(PUT 'FANCY-MAPRIN0 'DEFINED-IN-FILE 'RPRINT/FMPRINT.RED) 
(PUT 'FANCY-MAPRIN0 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE FANCY-MAPRIN0 (U)
    (COND ((NOT OVERFLOWED*) ((LAMBDA (*LOWER) (FANCY-MAPRINT U 0)) NIL)))) 
(PUT 'FANCY-MAPRINT 'NUMBER-OF-ARGS 2) 
(PUT 'FANCY-MAPRINT 'DEFINED-ON-LINE '423) 
(PUT 'FANCY-MAPRINT 'DEFINED-IN-FILE 'RPRINT/FMPRINT.RED) 
(PUT 'FANCY-MAPRINT 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE FANCY-MAPRINT (L P**)
    ((LAMBDA (OBRKP*)
       (PROG (P X W POS TPOS FL)
         (SETQ P P**)
         (COND ((NULL L) (RETURN NIL)))
         (COND ((ATOM L) (RETURN (FANCY-MAPRINT-ATOM L P))))
         (SETQ POS FANCY-POS*)
         (SETQ TPOS FANCY-TEXPOS)
         (SETQ FL FANCY-LINE*)
         (COND ((NOT (ATOM (CAR L))) (RETURN (FANCY-MAPRINT (CAR L) P))))
         (SETQ L (FANCY-CONVERT L NIL))
         (COND
          ((SETQ X (GET (CAR L) 'FANCY-REFORM))
           (RETURN (FANCY-MAPRINT (APPLY1 X L) P))))
         (COND
          ((OR
            (AND (SETQ X (GET (CAR L) 'FANCY-PPRIFN))
                 (NOT (EQ (APPLY2 X L P) 'FAILED)))
            (AND (SETQ X (GET (CAR L) 'FANCY-PRIFN))
                 (NOT (EQ (APPLY1 X L) 'FAILED)))
            (AND (GET (CAR L) 'PRINT-FORMAT)
                 (NEQ (FANCY-PRINT-FORMAT L P) 'FAILED)))
           (RETURN NIL)))
         (COND
          ((OR (AND TESTING-WIDTH* OVERFLOWED*) (EQUAL W 'FAILED))
           (RETURN (FANCY-FAIL POS TPOS FL))))
         (SETQ L (FANCY-CONVERT L 'INFIX))
         (COND
          ((FLAGP (CAR L) 'PRINT-INDEXED)
           (PROGN
            (FANCY-PREFIX-OPERATOR (CAR L))
            (SETQ W (FANCY-PRINT-INDEXLIST (CDR L)))))
          ((SETQ X (GET (CAR L) 'INFIX))
           (PROGN
            (SETQ P (NOT (GREATERP X P)))
            (SETQ W
                    (COND
                     (P
                      (FANCY-IN-BRACKETS
                       (LIST 'FANCY-INPRINT (MKQUOTE (CAR L)) X
                             (MKQUOTE (CDR L)))
                       '|(| '|)|))
                     (T (FANCY-INPRINT (CAR L) X (CDR L)))))
            NIL))
          ((SETQ X (GET (CAR L) 'FANCY-FLATPRIFN)) (SETQ W (APPLY X (LIST L))))
          (T
           (PROGN
            (SETQ W (FANCY-PREFIX-OPERATOR (CAR L)))
            (SETQ OBRKP* NIL)
            (COND
             ((NEQ W 'FAILED)
              (SETQ W (FANCY-PRINT-FUNCTION-ARGUMENTS (CDR L)))))
            NIL)))
         (RETURN
          (COND
           ((OR (AND TESTING-WIDTH* OVERFLOWED*) (EQUAL W 'FAILED))
            (FANCY-FAIL POS TPOS FL))
           (T NIL)))))
     OBRKP*)) 
(PUT 'FANCY-CONVERT 'NUMBER-OF-ARGS 2) 
(PUT 'FANCY-CONVERT 'DEFINED-ON-LINE '484) 
(PUT 'FANCY-CONVERT 'DEFINED-IN-FILE 'RPRINT/FMPRINT.RED) 
(PUT 'FANCY-CONVERT 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE FANCY-CONVERT (L M)
    (COND
     ((AND (EQCAR L 'EXPT) (EQUAL (CADR L) 'E)
           (OR (EQUAL M 'INFIX) (ZEROP (TREESIZEP1 L 20))))
      (LIST 'EXP (CADDR L)))
     (T L))) 
(PUT 'FANCY-PRINT-FUNCTION-ARGUMENTS 'NUMBER-OF-ARGS 1) 
(PUT 'FANCY-PRINT-FUNCTION-ARGUMENTS 'DEFINED-ON-LINE '491) 
(PUT 'FANCY-PRINT-FUNCTION-ARGUMENTS 'DEFINED-IN-FILE 'RPRINT/FMPRINT.RED) 
(PUT 'FANCY-PRINT-FUNCTION-ARGUMENTS 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE FANCY-PRINT-FUNCTION-ARGUMENTS (U)
    (FANCY-IN-BRACKETS
     (AND U (LIST 'FANCY-INPRINT (MKQUOTE '*COMMA*) 0 (MKQUOTE U))) '|(| '|)|)) 
(PUT 'FANCY-MAPRINT-ATOM 'NUMBER-OF-ARGS 2) 
(PUT 'FANCY-MAPRINT-ATOM 'DEFINED-ON-LINE '497) 
(PUT 'FANCY-MAPRINT-ATOM 'DEFINED-IN-FILE 'RPRINT/FMPRINT.RED) 
(PUT 'FANCY-MAPRINT-ATOM 'PROCEDURE_TYPE
     '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE FANCY-MAPRINT-ATOM (L P)
    (PROG (POS TPOS FL W)
      (SETQ POS FANCY-POS*)
      (SETQ TPOS FANCY-TEXPOS)
      (SETQ FL FANCY-LINE*)
      (SETQ W
              (PROG (X)
                (COND
                 ((SETQ X (GET L 'FANCY-SPECIAL-SYMBOL))
                  (FANCY-SPECIAL-SYMBOL X
                   (OR (GET L 'FANCY-SPECIAL-SYMBOL-SIZE) 2)))
                 ((VECTORP L)
                  (PROGN
                   (FANCY-PRIN2* "[" 0)
                   (SETQ L
                           (PROG (I FORALL-RESULT FORALL-ENDPTR)
                             (SETQ I 0)
                             (COND
                              ((MINUSP (DIFFERENCE (UPBV L) I)) (RETURN NIL)))
                             (SETQ FORALL-RESULT
                                     (SETQ FORALL-ENDPTR
                                             (CONS (GETV L I) NIL)))
                            LOOPLABEL
                             (SETQ I (PLUS2 I 1))
                             (COND
                              ((MINUSP (DIFFERENCE (UPBV L) I))
                               (RETURN FORALL-RESULT)))
                             (RPLACD FORALL-ENDPTR (CONS (GETV L I) NIL))
                             (SETQ FORALL-ENDPTR (CDR FORALL-ENDPTR))
                             (GO LOOPLABEL)))
                   (SETQ X (FANCY-INPRINT "," 0 L))
                   (FANCY-PRIN2* "]" 0)
                   (RETURN X)))
                 ((OR (NOT (NUMBERP L)) (NOT (LESSP L 0))
                      (LEQ P (GET 'MINUS 'INFIX)))
                  (FANCY-PRIN2* L 'INDEX))
                 (T
                  (FANCY-IN-BRACKETS (LIST 'FANCY-PRIN2* (MKQUOTE L) T) '|(|
                   '|)|)))
                (RETURN
                 (COND ((AND TESTING-WIDTH* OVERFLOWED*) 'FAILED) (T NIL)))))
      (COND
       ((EQ W 'FAILED) (SETQ FANCY-LINE* FL) (SETQ FANCY-TEXPOS TPOS)
        (SETQ FANCY-POS* POS)))
      (RETURN W))) 
(PUT 'PRINT_INDEXED 'PSOPFN '(LAMBDA (U) (FLAG U 'PRINT-INDEXED))) 
(PUT 'FANCY-PRINT-INDEXLIST 'NUMBER-OF-ARGS 1) 
(PUT 'FANCY-PRINT-INDEXLIST 'DEFINED-ON-LINE '522) 
(PUT 'FANCY-PRINT-INDEXLIST 'DEFINED-IN-FILE 'RPRINT/FMPRINT.RED) 
(PUT 'FANCY-PRINT-INDEXLIST 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE FANCY-PRINT-INDEXLIST (L) (FANCY-PRINT-INDEXLIST1 L '_ NIL)) 
(PUT 'FANCY-PRINT-INDEXLIST1 'NUMBER-OF-ARGS 3) 
(PUT 'FANCY-PRINT-INDEXLIST1 'DEFINED-ON-LINE '525) 
(PUT 'FANCY-PRINT-INDEXLIST1 'DEFINED-IN-FILE 'RPRINT/FMPRINT.RED) 
(PUT 'FANCY-PRINT-INDEXLIST1 'PROCEDURE_TYPE
     '(ARROW (TIMES GENERAL GENERAL GENERAL) GENERAL)) 
(DE FANCY-PRINT-INDEXLIST1 (L OP SEP)
    (PROG (POS TPOS FL W)
      (SETQ POS FANCY-POS*)
      (SETQ TPOS FANCY-TEXPOS)
      (SETQ FL FANCY-LINE*)
      (SETQ W
              (PROG (W TESTING-WIDTH* OBRKP*)
                (SETQ TESTING-WIDTH* T)
                (FANCY-PRIN2* OP 0)
                (FANCY-PRIN2* '{ 0)
                (COND ((NULL L) (SETQ W NIL))
                      (T (SETQ W (FANCY-INPRINT (OR SEP 'TIMES) 0 L))))
                (FANCY-PRIN2* "}" 0)
                (RETURN W)))
      (COND
       ((EQ W 'FAILED) (SETQ FANCY-LINE* FL) (SETQ FANCY-TEXPOS TPOS)
        (SETQ FANCY-POS* POS)))
      (RETURN W))) 
(PUT 'FANCY-PRINT-ONE-INDEX 'NUMBER-OF-ARGS 1) 
(PUT 'FANCY-PRINT-ONE-INDEX 'DEFINED-ON-LINE '538) 
(PUT 'FANCY-PRINT-ONE-INDEX 'DEFINED-IN-FILE 'RPRINT/FMPRINT.RED) 
(PUT 'FANCY-PRINT-ONE-INDEX 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE FANCY-PRINT-ONE-INDEX (I)
    (PROG (POS TPOS FL W)
      (SETQ POS FANCY-POS*)
      (SETQ TPOS FANCY-TEXPOS)
      (SETQ FL FANCY-LINE*)
      (SETQ W
              (PROG (W TESTING-WIDTH* OBRKP*)
                (SETQ TESTING-WIDTH* T)
                (FANCY-PRIN2* '_ 0)
                (FANCY-PRIN2* '{ 0)
                (SETQ W (FANCY-INPRINT 'TIMES 0 (LIST I)))
                (FANCY-PRIN2* "}" 0)
                (RETURN W)))
      (COND
       ((EQ W 'FAILED) (SETQ FANCY-LINE* FL) (SETQ FANCY-TEXPOS TPOS)
        (SETQ FANCY-POS* POS)))
      (RETURN W))) 
(PUT 'FANCY-IN-BRACKETS 'NUMBER-OF-ARGS 3) 
(PUT 'FANCY-IN-BRACKETS 'DEFINED-ON-LINE '549) 
(PUT 'FANCY-IN-BRACKETS 'DEFINED-IN-FILE 'RPRINT/FMPRINT.RED) 
(PUT 'FANCY-IN-BRACKETS 'PROCEDURE_TYPE
     '(ARROW (TIMES GENERAL GENERAL GENERAL) GENERAL)) 
(DE FANCY-IN-BRACKETS (U L R)
    ((LAMBDA (FANCY-BSTACK*)
       (PROG (POS TPOS FL W)
         (SETQ POS FANCY-POS*)
         (SETQ TPOS FANCY-TEXPOS)
         (SETQ FL FANCY-LINE*)
         (SETQ W
                 (PROG (FP W R1 R2 REC)
                   (SETQ REC (LIST 0))
                   (SETQ FANCY-BSTACK* (CONS REC FANCY-BSTACK*))
                   (FANCY-ADJUST-BKT-LEVELS FANCY-BSTACK*)
                   (SETQ FP (LENGTH FANCY-PAGE*))
                   (FANCY-PRIN2* (SETQ R1 (CONS 'BKT (CONS NIL (CONS L REC))))
                    2)
                   (SETQ W (EVAL U))
                   (FANCY-PRIN2* (SETQ R2 (CONS 'BKT (CONS NIL (CONS R REC))))
                    2)
                   (COND
                    ((EQUAL FP (LENGTH FANCY-PAGE*))
                     (PROGN (SETCAR (CDR R1) T) (SETCAR (CDR R2) T))))
                   (RETURN W)))
         (COND
          ((EQ W 'FAILED) (SETQ FANCY-LINE* FL) (SETQ FANCY-TEXPOS TPOS)
           (SETQ FANCY-POS* POS)))
         (RETURN W)))
     FANCY-BSTACK*)) 
(PUT 'FANCY-ADJUST-BKT-LEVELS 'NUMBER-OF-ARGS 1) 
(PUT 'FANCY-ADJUST-BKT-LEVELS 'DEFINED-ON-LINE '570) 
(PUT 'FANCY-ADJUST-BKT-LEVELS 'DEFINED-IN-FILE 'RPRINT/FMPRINT.RED) 
(PUT 'FANCY-ADJUST-BKT-LEVELS 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE FANCY-ADJUST-BKT-LEVELS (U)
    (COND ((OR (NULL U) (NULL (CDR U))) NIL)
          ((GEQ (CAAR U) (CAADR U))
           (PROGN
            (SETCAR (CADR U) (PLUS (CAR (CADR U)) 1))
            (FANCY-ADJUST-BKT-LEVELS (CDR U))
            NIL)))) 
(PUT 'FANCY-EXPTPRI 'NUMBER-OF-ARGS 2) 
(PUT 'FANCY-EXPTPRI 'DEFINED-ON-LINE '576) 
(PUT 'FANCY-EXPTPRI 'DEFINED-IN-FILE 'RPRINT/FMPRINT.RED) 
(PUT 'FANCY-EXPTPRI 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE FANCY-EXPTPRI (L P)
    ((LAMBDA (*RATPRI TESTING-WIDTH*)
       (PROG (*LIST PP Q W W1 W2 POS TPOS FL)
         (SETQ POS FANCY-POS*)
         (SETQ TPOS FANCY-TEXPOS)
         (SETQ FL FANCY-LINE*)
         (SETQ PP (NOT (GREATERP (SETQ Q (GET 'EXPT 'INFIX)) P)))
         (SETQ W1 (CADR L))
         (SETQ W2 (CADDR L))
         (SETQ TESTING-WIDTH* T)
         (COND
          ((AND (EQCAR W2 'QUOTIENT) (EQUAL (CADR W2) 1)
                (OR (FIXP (CADDR W2)) (LITER (CADDR W2))))
           (RETURN (FANCY-SQRTPRI* W1 (CADDR W2)))))
         (COND
          ((AND (EQCAR W2 'QUOTIENT) (EQCAR (CADR W2) 'MINUS))
           (SETQ W2 (LIST 'MINUS (LIST (CAR W2) (CADADR W2) (CADDR W2)))))
          (T (SETQ W2 (NEGNUMBERCHK W2))))
         (COND
          ((EQUAL (FANCY-MAPRINT W1 Q) 'FAILED)
           (RETURN (FANCY-FAIL POS TPOS FL))))
         (FANCY-PRIN2* "^" 0)
         (COND
          ((AND (EQCAR W2 'QUOTIENT) (FIXP (CADR W2)) (FIXP (CADDR W2)))
           (PROGN
            (FANCY-PRIN2* "{" 0)
            (SETQ W (FANCY-INPRINT '/ 0 (CDR W2)))
            (FANCY-PRIN2* "}" 0)))
          (T (SETQ W (FANCY-MAPRINT-TEX-BKT W2 0 NIL))))
         (COND ((EQUAL W 'FAILED) (RETURN (FANCY-FAIL POS TPOS FL))))))
     *RATPRI TESTING-WIDTH*)) 
(PUT 'EXPT 'FANCY-PPRIFN 'FANCY-EXPTPRI) 
(PUT 'FANCY-INPRINT 'NUMBER-OF-ARGS 3) 
(PUT 'FANCY-INPRINT 'DEFINED-ON-LINE '602) 
(PUT 'FANCY-INPRINT 'DEFINED-IN-FILE 'RPRINT/FMPRINT.RED) 
(PUT 'FANCY-INPRINT 'PROCEDURE_TYPE
     '(ARROW (TIMES GENERAL GENERAL GENERAL) GENERAL)) 
(DE FANCY-INPRINT (OP P L)
    ((LAMBDA (TABLEVEL* SUMLEVEL*)
       (PROG (X Y W POS TPOS FL)
         (SETQ POS FANCY-POS*)
         (SETQ TPOS FANCY-TEXPOS)
         (SETQ FL FANCY-LINE*)
         (COND
          ((AND (EQUAL OP 'TIMES) (EQCAR (CAR L) 'QUOTIENT) (CDR L)
                (EQCAR (CADR L) 'QUOTIENT))
           (SETQ OP '*)))
         (COND ((AND (EQ OP 'PLUS) *REVPRI) (SETQ L (REVERSE L))))
         (COND
          ((NOT (GET OP 'ALT))
           (PROGN
            (COND
             ((EQ OP 'NOT)
              (PROGN
               (FANCY-OPRIN OP)
               (RETURN (FANCY-MAPRINT (CAR L) (GET 'NOT 'INFIX)))
               NIL)))
            (COND
             ((AND (EQ OP 'SETQ) (NOT (ATOM (SETQ X (CAR (REVERSE L)))))
                   (IDP (CAR X)) (SETQ Y (GETRTYPE X))
                   (SETQ Y (GET (GET Y 'TAG) 'FANCY-SETPRIFN)))
              (RETURN (APPLY2 Y (CAR L) X))))
            (COND
             ((AND (NOT (ATOM (CAR L))) (IDP (CAAR L))
                   (OR (SETQ X (GET (CAAR L) 'FANCY-PRIFN))
                       (SETQ X (GET (CAAR L) 'FANCY-PPRIFN)))
                   (EQ (GET X OP) 'INBRACKETS))
              (PROGN
               (FANCY-IN-BRACKETS (LIST 'FANCY-MAPRINT (MKQUOTE (CAR L)) P)
                '|(| '|)|)
               NIL))
             ((AND *NOSPLIT (NOT TESTING-WIDTH*))
              (FANCY-PRINFIT (CAR L) P NIL))
             (T (SETQ W (FANCY-MAPRINT (CAR L) P))))
            (SETQ L (CDR L)))))
         (COND
          ((AND TESTING-WIDTH* (OR OVERFLOWED* (EQUAL W 'FAILED)))
           (RETURN (FANCY-FAIL POS TPOS FL))))
         (COND
          ((AND *LIST OBRKP* (MEMQ OP '(PLUS MINUS)))
           (PROGN
            (SETQ SUMLEVEL* (PLUS SUMLEVEL* 1))
            (SETQ TABLEVEL* (PLUS TABLEVEL* 1)))))
         (COND ((AND *NOSPLIT (NOT TESTING-WIDTH*)) (FANCY-INPRINT1 OP P L))
               (T (SETQ W (FANCY-INPRINT2 OP P L))))
         (COND
          ((AND TESTING-WIDTH* (EQUAL W 'FAILED))
           (RETURN (FANCY-FAIL POS TPOS FL))))))
     TABLEVEL* SUMLEVEL*)) 
(PUT 'FANCY-INPRINT1 'NUMBER-OF-ARGS 3) 
(PUT 'FANCY-INPRINT1 'DEFINED-ON-LINE '651) 
(PUT 'FANCY-INPRINT1 'DEFINED-IN-FILE 'RPRINT/FMPRINT.RED) 
(PUT 'FANCY-INPRINT1 'PROCEDURE_TYPE
     '(ARROW (TIMES GENERAL GENERAL GENERAL) GENERAL)) 
(DE FANCY-INPRINT1 (OP P L)
    (PROG (LOP SPACE)
      (SETQ SPACE (FLAGP OP 'SPACED))
      (PROG (V)
        (SETQ V L)
       LAB
        (COND ((NULL V) (RETURN NIL)))
        ((LAMBDA (V)
           (PROGN
            (SETQ LOP OP)
            (COND
             ((AND (EQUAL OP 'PLUS) (EQCAR V 'MINUS))
              (PROGN
               (SETQ LOP 'MINUS)
               (SETQ V (CADR V))
               (SETQ P (GET 'MINUS 'INFIX)))))
            (COND (SPACE (FANCY-PRIN2* "\\," 1)))
            (COND
             ((EQUAL 'FAILED (FANCY-OPRIN LOP))
              (PROGN (FANCY-TERPRI* NIL) (FANCY-OPRIN LOP))))
            (COND (SPACE (FANCY-PRIN2* "\\," 1)))
            (FANCY-PRINFIT (NEGNUMBERCHK V) P NIL)))
         (CAR V))
        (SETQ V (CDR V))
        (GO LAB)))) 
(PUT 'FANCY-INPRINT2 'NUMBER-OF-ARGS 3) 
(PUT 'FANCY-INPRINT2 'DEFINED-ON-LINE '667) 
(PUT 'FANCY-INPRINT2 'DEFINED-IN-FILE 'RPRINT/FMPRINT.RED) 
(PUT 'FANCY-INPRINT2 'PROCEDURE_TYPE
     '(ARROW (TIMES GENERAL GENERAL GENERAL) GENERAL)) 
(DE FANCY-INPRINT2 (OP P L)
    (PROG (LOP SPACE W)
      (SETQ SPACE (FLAGP OP 'SPACED))
      (PROG (V)
        (SETQ V L)
       LAB
        (COND ((NULL V) (RETURN NIL)))
        ((LAMBDA (V)
           (COND
            ((OR (NOT TESTING-WIDTH*) (NEQ W 'FAILED))
             (PROGN
              (SETQ LOP OP)
              (COND
               ((AND (EQUAL OP 'PLUS) (EQCAR V 'MINUS))
                (PROGN
                 (SETQ LOP 'MINUS)
                 (SETQ V (CADR V))
                 (SETQ P (GET 'MINUS 'INFIX)))))
              (COND (SPACE (FANCY-PRIN2* "\\," 1)))
              (FANCY-OPRIN LOP)
              (COND (SPACE (FANCY-PRIN2* "\\," 1)))
              (COND
               ((NEQ W 'FAILED)
                (SETQ W (FANCY-MAPRINT (NEGNUMBERCHK V) P))))))))
         (CAR V))
        (SETQ V (CDR V))
        (GO LAB))
      (RETURN W))) 
(PUT 'FANCY-INPRINTLIST 'NUMBER-OF-ARGS 3) 
(PUT 'FANCY-INPRINTLIST 'DEFINED-ON-LINE '684) 
(PUT 'FANCY-INPRINTLIST 'DEFINED-IN-FILE 'RPRINT/FMPRINT.RED) 
(PUT 'FANCY-INPRINTLIST 'PROCEDURE_TYPE
     '(ARROW (TIMES GENERAL GENERAL GENERAL) GENERAL)) 
(DE FANCY-INPRINTLIST (OP P L)
    (PROG (POS TPOS FL W)
      (SETQ POS FANCY-POS*)
      (SETQ TPOS FANCY-TEXPOS)
      (SETQ FL FANCY-LINE*)
      (SETQ W
              (PROG (FST W V)
               LOOP
                (COND ((NULL L) (RETURN W)))
                (SETQ V (CAR L))
                (SETQ L (CDR L))
                (COND
                 (FST
                  (PROGN
                   (FANCY-PRIN2* "\\," 1)
                   (SETQ W (FANCY-OPRIN OP))
                   (FANCY-PRIN2* "\\," 1)
                   NIL)))
                (COND ((AND (EQ W 'FAILED) TESTING-WIDTH*) (RETURN W)))
                (SETQ W
                        (COND ((EQ W 'FAILED) (FANCY-PRINFIT V 0 OP))
                              (T (FANCY-PRINFIT V 0 NIL))))
                (COND ((AND (EQ W 'FAILED) TESTING-WIDTH*) (RETURN W)))
                (SETQ FST T)
                (GO LOOP)))
      (COND
       ((EQ W 'FAILED) (SETQ FANCY-LINE* FL) (SETQ FANCY-TEXPOS TPOS)
        (SETQ FANCY-POS* POS)))
      (RETURN W))) 
(PUT 'TIMES 'FANCY-PRTCH "\\,") 
(PUT 'FANCY-OPRIN 'NUMBER-OF-ARGS 1) 
(PUT 'FANCY-OPRIN 'DEFINED-ON-LINE '706) 
(PUT 'FANCY-OPRIN 'DEFINED-IN-FILE 'RPRINT/FMPRINT.RED) 
(PUT 'FANCY-OPRIN 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE FANCY-OPRIN (OP)
    (PROG (POS TPOS FL W)
      (SETQ POS FANCY-POS*)
      (SETQ TPOS FANCY-TEXPOS)
      (SETQ FL FANCY-LINE*)
      (SETQ W
              (PROG (X)
                (COND ((SETQ X (GET OP 'FANCY-PRTCH)) (FANCY-PRIN2* X 1))
                      ((SETQ X (GET OP 'FANCY-INFIX-SYMBOL))
                       (FANCY-SPECIAL-SYMBOL X
                        (OR (GET OP 'FANCY-SYMBOL-LENGTH) 4)))
                      ((NULL (SETQ X (GET OP 'PRTCH))) (FANCY-PRIN2* OP T))
                      (T
                       (PROGN
                        (COND
                         ((AND *LIST OBRKP* (MEMQ OP '(PLUS MINUS))
                               (EQUAL SUMLEVEL* 2))
                          (COND (TESTING-WIDTH* (RETURN 'FAILED))
                                (T (FANCY-TERPRI* T)))))
                        (FANCY-PRIN2* X T)
                        NIL)))
                (COND (OVERFLOWED* (RETURN 'FAILED)))))
      (COND
       ((EQ W 'FAILED) (SETQ FANCY-LINE* FL) (SETQ FANCY-TEXPOS TPOS)
        (SETQ FANCY-POS* POS)))
      (RETURN W))) 
(PUT 'ALPHA 'FANCY-SPECIAL-SYMBOL "\\alpha") 
(PUT 'BETA 'FANCY-SPECIAL-SYMBOL "\\beta") 
(PUT 'GAMMA 'FANCY-SPECIAL-SYMBOL "\\Gamma") 
(PUT 'DELTA 'FANCY-SPECIAL-SYMBOL "\\delta") 
(PUT 'EPSILON 'FANCY-SPECIAL-SYMBOL "\\epsilon") 
(PUT 'ZETA 'FANCY-SPECIAL-SYMBOL "\\zeta") 
(PUT 'ETA 'FANCY-SPECIAL-SYMBOL "\\eta") 
(PUT 'THETA 'FANCY-SPECIAL-SYMBOL "\\theta") 
(PUT 'IOTA 'FANCY-SPECIAL-SYMBOL "\\iota") 
(PUT 'KAPPA 'FANCY-SPECIAL-SYMBOL "\\kappa") 
(PUT 'LAMBDA 'FANCY-SPECIAL-SYMBOL "\\lambda") 
(PUT 'MU 'FANCY-SPECIAL-SYMBOL "\\mu") 
(PUT 'NU 'FANCY-SPECIAL-SYMBOL "\\nu") 
(PUT 'XI 'FANCY-SPECIAL-SYMBOL "\\xi") 
(PUT 'PI 'FANCY-SPECIAL-SYMBOL "\\pi") 
(PUT 'RHO 'FANCY-SPECIAL-SYMBOL "\\rho") 
(PUT 'SIGMA 'FANCY-SPECIAL-SYMBOL "\\sigma") 
(PUT 'TAU 'FANCY-SPECIAL-SYMBOL "\\tau") 
(PUT 'UPSILON 'FANCY-SPECIAL-SYMBOL "\\upsilon") 
(PUT 'PHI 'FANCY-SPECIAL-SYMBOL "\\phi") 
(PUT 'CHI 'FANCY-SPECIAL-SYMBOL "\\chi") 
(PUT 'PSI 'FANCY-SPECIAL-SYMBOL "\\psi") 
(PUT 'OMEGA 'FANCY-SPECIAL-SYMBOL "\\omega") 
(COND
 ((NEQ 'A '|a|)
  (DEFLIST
   '((|aLPHA| 65) (|bETA| 66) (|cHI| 67) (|dELTA| 68) (|ePSILON| 69) (|pHI| 70)
     (|gAMMA| 71) (|eTA| 72) (|iOTA| 73) (VARTHETA 74) (|kAPPA| 75)
     (|lAMBDA| 76) (|mU| 77) (|nU| 78) (|o| 79) (|pI| 80) (|tHETA| 81)
     (|rHO| 82) (|sIGMA| 83) (|tAU| 84) (|uPSILON| 85) (|oMEGA| 87) (|xI| 88)
     (|pSI| 89) (|zETA| 90) (VARPHI 106))
   'FANCY-SPECIAL-SYMBOL))) 
(PUT 'INFINITY 'FANCY-SPECIAL-SYMBOL "\\infty") 
(PUT 'PARTIAL-DF 'FANCY-SPECIAL-SYMBOL 182) 
(PUT 'PARTIAL-DF 'FANCY-SYMBOL-LENGTH 8) 
(PUT 'EMPTY-SET 'FANCY-SPECIAL-SYMBOL 198) 
(PUT 'NOT 'FANCY-SPECIAL-SYMBOL 216) 
(PUT 'NOT 'FANCY-INFIX-SYMBOL 216) 
(PUT 'LEQ 'FANCY-INFIX-SYMBOL 163) 
(PUT 'GEQ 'FANCY-INFIX-SYMBOL 179) 
(PUT 'NEQ 'FANCY-INFIX-SYMBOL 185) 
(PUT 'INTERSECTION 'FANCY-INFIX-SYMBOL 199) 
(PUT 'UNION 'FANCY-INFIX-SYMBOL 200) 
(PUT 'MEMBER 'FANCY-INFIX-SYMBOL 206) 
(PUT 'AND 'FANCY-INFIX-SYMBOL 217) 
(PUT 'OR 'FANCY-INFIX-SYMBOL 218) 
(PUT 'WHEN 'FANCY-INFIX-SYMBOL 239) 
(PUT '*WCOMMA* 'FANCY-INFIX-SYMBOL ",\\,") 
(PUT 'REPLACEBY 'FANCY-INFIX-SYMBOL 222) 
(PUT 'REPLACEBY 'FANCY-SYMBOL-LENGTH 8) 
(PUT 'GAMMA 'FANCY-FUNCTIONSYMBOL 71) 
(PUT '~ 'FANCY-FUNCTIONSYMBOL 34) 
(PUT '~ 'FANCY-SYMBOL-LENGTH 8) 
(PUT 'ARBCOMPLEX 'FANCY-FUNCTIONSYMBOL 227) 
(PUT 'ARBINT 'FANCY-FUNCTIONSYMBOL 226) 
(FLAG '(ARBCOMPLEX ARBINT) 'PRINT-INDEXED) 
(PUT 'FANCY-CONDPRI0 'NUMBER-OF-ARGS 1) 
(PUT 'FANCY-CONDPRI0 'DEFINED-ON-LINE '804) 
(PUT 'FANCY-CONDPRI0 'DEFINED-IN-FILE 'RPRINT/FMPRINT.RED) 
(PUT 'FANCY-CONDPRI0 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE FANCY-CONDPRI0 (U) (FANCY-CONDPRI U 0)) 
(PUT 'FANCY-CONDPRI 'NUMBER-OF-ARGS 2) 
(PUT 'FANCY-CONDPRI 'DEFINED-ON-LINE '807) 
(PUT 'FANCY-CONDPRI 'DEFINED-IN-FILE 'RPRINT/FMPRINT.RED) 
(PUT 'FANCY-CONDPRI 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE FANCY-CONDPRI (U P)
    (PROG (POS TPOS FL W)
      (SETQ POS FANCY-POS*)
      (SETQ TPOS FANCY-TEXPOS)
      (SETQ FL FANCY-LINE*)
      (SETQ W
              (PROG (W)
                (COND ((GREATERP P 0) (FANCY-PRIN2 "\\bigl(")))
                (PROG ()
                 WHILELABEL
                  (COND
                   ((NOT (AND (SETQ U (CDR U)) (NEQ W 'FAILED))) (RETURN NIL)))
                  (PROGN
                   (COND
                    ((NOT (EQ (CAAR U) 'T))
                     (PROGN
                      (FANCY-PRIN2 'IF)
                      (FANCY-PRIN2 " ")
                      (SETQ W (FANCY-MAPRIN0 (CAAR U)))
                      (FANCY-PRIN2 "\\,")
                      (FANCY-PRIN2 'THEN)
                      (FANCY-PRIN2 "\\,"))))
                   (COND ((NEQ W 'FAILED) (SETQ W (FANCY-MAPRIN0 (CADAR U)))))
                   (COND
                    ((CDR U)
                     (PROGN
                      (FANCY-PRIN2 "\\,")
                      (FANCY-PRIN2 'ELSE)
                      (FANCY-PRIN2 "\\,")))))
                  (GO WHILELABEL))
                (COND ((GREATERP P 0) (FANCY-PRIN2 "\\bigr)")))
                (COND ((OR OVERFLOWED* (EQUAL W 'FAILED)) (RETURN 'FAILED)))))
      (COND
       ((EQ W 'FAILED) (SETQ FANCY-LINE* FL) (SETQ FANCY-TEXPOS TPOS)
        (SETQ FANCY-POS* POS)))
      (RETURN W))) 
(PUT 'COND 'FANCY-PPRIFN 'FANCY-CONDPRI) 
(PUT 'COND 'FANCY-FLATPRIFN 'FANCY-CONDPRI0) 
(PUT 'FANCY-REVALPRI 'NUMBER-OF-ARGS 1) 
(PUT 'FANCY-REVALPRI 'DEFINED-ON-LINE '827) 
(PUT 'FANCY-REVALPRI 'DEFINED-IN-FILE 'RPRINT/FMPRINT.RED) 
(PUT 'FANCY-REVALPRI 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE FANCY-REVALPRI (U) (FANCY-MAPRIN0 (FANCY-UNQUOTE (CADR U)))) 
(PUT 'FANCY-UNQUOTE 'NUMBER-OF-ARGS 1) 
(PUT 'FANCY-UNQUOTE 'DEFINED-ON-LINE '830) 
(PUT 'FANCY-UNQUOTE 'DEFINED-IN-FILE 'RPRINT/FMPRINT.RED) 
(PUT 'FANCY-UNQUOTE 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE FANCY-UNQUOTE (U)
    (COND
     ((EQCAR U 'LIST)
      (PROG (X FORALL-RESULT FORALL-ENDPTR)
        (SETQ X (CDR U))
        (COND ((NULL X) (RETURN NIL)))
        (SETQ FORALL-RESULT
                (SETQ FORALL-ENDPTR
                        (CONS ((LAMBDA (X) (FANCY-UNQUOTE X)) (CAR X)) NIL)))
       LOOPLABEL
        (SETQ X (CDR X))
        (COND ((NULL X) (RETURN FORALL-RESULT)))
        (RPLACD FORALL-ENDPTR
                (CONS ((LAMBDA (X) (FANCY-UNQUOTE X)) (CAR X)) NIL))
        (SETQ FORALL-ENDPTR (CDR FORALL-ENDPTR))
        (GO LOOPLABEL)))
     ((EQCAR U 'QUOTE) (CADR U)) (T U))) 
(PUT 'AEVAL 'FANCY-PRIFN 'FANCY-REVALPRI) 
(PUT 'AEVAL* 'FANCY-PRIFN 'FANCY-REVALPRI) 
(PUT 'REVAL 'FANCY-PRIFN 'FANCY-REVALPRI) 
(PUT 'REVAL* 'FANCY-PRIFN 'FANCY-REVALPRI) 
(PUT '|AMINUSP:| 'FANCY-PRIFN 'FANCY-PATPRI) 
(PUT '|AMINUSP:| 'FANCY-PAT '(LESSP &1 0)) 
(PUT 'FANCY-HOLDPRI 'NUMBER-OF-ARGS 1) 
(PUT 'FANCY-HOLDPRI 'DEFINED-ON-LINE '843) 
(PUT 'FANCY-HOLDPRI 'DEFINED-IN-FILE 'RPRINT/FMPRINT.RED) 
(PUT 'FANCY-HOLDPRI 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE FANCY-HOLDPRI (U)
    (COND ((ATOM (CADR U)) (FANCY-MAPRIN0 (CADR U)))
          (T
           (FANCY-IN-BRACKETS (LIST 'FANCY-MAPRIN0 (MKQUOTE (CADR U))) '|(|
            '|)|)))) 
(PUT '*HOLD 'FANCY-PRIFN 'FANCY-HOLDPRI) 
(PUT 'FANCY-PATPRI 'NUMBER-OF-ARGS 1) 
(PUT 'FANCY-PATPRI 'DEFINED-ON-LINE '849) 
(PUT 'FANCY-PATPRI 'DEFINED-IN-FILE 'RPRINT/FMPRINT.RED) 
(PUT 'FANCY-PATPRI 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE FANCY-PATPRI (U)
    (PROG (P)
      (SETQ P (SUBST (FANCY-UNQUOTE (CADR U)) '&1 (GET (CAR U) 'FANCY-PAT)))
      (RETURN (FANCY-MAPRIN0 P)))) 
(PUT 'FANCY-BOOLVALPRI 'NUMBER-OF-ARGS 1) 
(PUT 'FANCY-BOOLVALPRI 'DEFINED-ON-LINE '856) 
(PUT 'FANCY-BOOLVALPRI 'DEFINED-IN-FILE 'RPRINT/FMPRINT.RED) 
(PUT 'FANCY-BOOLVALPRI 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE FANCY-BOOLVALPRI (U) (FANCY-MAPRIN0 (CADR U))) 
(PUT 'BOOLVALUE* 'FANCY-PRIFN 'FANCY-BOOLVALPRI) 
(PUT 'FANCY-QUOTPRI 'NUMBER-OF-ARGS 1) 
(PUT 'FANCY-QUOTPRI 'DEFINED-ON-LINE '861) 
(PUT 'FANCY-QUOTPRI 'DEFINED-IN-FILE 'RPRINT/FMPRINT.RED) 
(PUT 'FANCY-QUOTPRI 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE FANCY-QUOTPRI (U)
    (PROG (N1 N2 N1T N2T FL W POS TPOS TESTING-WIDTH* *LIST)
      (COND (OVERFLOWED* (RETURN 'FAILED)))
      (SETQ TESTING-WIDTH* T)
      (SETQ POS FANCY-POS*)
      (SETQ TPOS FANCY-TEXPOS)
      (SETQ FL FANCY-LINE*)
      (FANCY-PRIN2* "\\frac" 0)
      (SETQ W (FANCY-MAPRINT-TEX-BKT (CADR U) 0 T))
      (SETQ N1 FANCY-POS*)
      (SETQ N1T FANCY-TEXPOS)
      (COND ((EQUAL W 'FAILED) (RETURN (FANCY-FAIL POS TPOS FL))))
      (SETQ FANCY-POS* POS)
      (SETQ FANCY-TEXPOS TPOS)
      (SETQ W (FANCY-MAPRINT-TEX-BKT (CADDR U) 0 T))
      (SETQ N2 FANCY-POS*)
      (SETQ N2T FANCY-TEXPOS)
      (COND ((EQUAL W 'FAILED) (RETURN (FANCY-FAIL POS TPOS FL))))
      (SETQ FANCY-POS* (MAX N1 N2))
      (SETQ FANCY-TEXPOS (MAX N1T N2T))
      (RETURN T))) 
(PUT 'FANCY-MAPRINT-TEX-BKT 'NUMBER-OF-ARGS 3) 
(PUT 'FANCY-MAPRINT-TEX-BKT 'DEFINED-ON-LINE '886) 
(PUT 'FANCY-MAPRINT-TEX-BKT 'DEFINED-IN-FILE 'RPRINT/FMPRINT.RED) 
(PUT 'FANCY-MAPRINT-TEX-BKT 'PROCEDURE_TYPE
     '(ARROW (TIMES GENERAL GENERAL GENERAL) GENERAL)) 
(DE FANCY-MAPRINT-TEX-BKT (U P M)
    (PROG (W POS TPOS FL TESTING-WIDTH*)
      (SETQ TESTING-WIDTH* T)
      (SETQ POS FANCY-POS*)
      (SETQ TPOS FANCY-TEXPOS)
      (SETQ FL FANCY-LINE*)
      (COND
       ((AND (NOT M) (OR (AND (NUMBERP U) (LEQ 0 U) (LEQ U 9)) (LITER U)))
        (PROGN
         (FANCY-PRIN2* U T)
         (RETURN (COND (OVERFLOWED* (FANCY-FAIL POS TPOS FL))))
         NIL)))
      (FANCY-PRIN2* "{" 0)
      (SETQ W (FANCY-MAPRINT U P))
      (FANCY-PRIN2* "}" 0)
      (COND ((EQUAL W 'FAILED) (RETURN (FANCY-FAIL POS TPOS FL)))))) 
(PUT 'FANCY-FAIL 'NUMBER-OF-ARGS 3) 
(PUT 'FANCY-FAIL 'DEFINED-ON-LINE '905) 
(PUT 'FANCY-FAIL 'DEFINED-IN-FILE 'RPRINT/FMPRINT.RED) 
(PUT 'FANCY-FAIL 'PROCEDURE_TYPE
     '(ARROW (TIMES GENERAL GENERAL GENERAL) GENERAL)) 
(DE FANCY-FAIL (POS TPOS FL)
    (PROGN
     (SETQ OVERFLOWED* NIL)
     (SETQ FANCY-POS* POS)
     (SETQ FANCY-TEXPOS TPOS)
     (SETQ FANCY-LINE* FL)
     'FAILED)) 
(PUT 'QUOTIENT 'FANCY-PRIFN 'FANCY-QUOTPRI) 
(PUT 'FANCY-PRINFIT 'NUMBER-OF-ARGS 3) 
(PUT 'FANCY-PRINFIT 'DEFINED-ON-LINE '916) 
(PUT 'FANCY-PRINFIT 'DEFINED-IN-FILE 'RPRINT/FMPRINT.RED) 
(PUT 'FANCY-PRINFIT 'PROCEDURE_TYPE
     '(ARROW (TIMES GENERAL GENERAL GENERAL) GENERAL)) 
(DE FANCY-PRINFIT (U P OP)
    (PROG (POS TPOS FL W LL F)
      (COND
       ((AND (PAIRP U) (SETQ F (GET (CAR U) 'FANCY-PRINFIT)))
        (RETURN (APPLY F (LIST U P OP)))))
      (SETQ POS FANCY-POS*)
      (SETQ TPOS FANCY-TEXPOS)
      (SETQ FL FANCY-LINE*)
      (PROG (TESTING-WIDTH*)
        (SETQ TESTING-WIDTH* T)
        (COND (OP (SETQ W (FANCY-OPRIN OP))))
        (COND ((NEQ W 'FAILED) (SETQ W (FANCY-MAPRINT U P)))))
      (COND ((NEQ W 'FAILED) (RETURN T)))
      (SETQ FANCY-LINE* FL)
      (SETQ FANCY-POS* POS)
      (SETQ FANCY-TEXPOS TPOS)
      (COND ((AND TESTING-WIDTH* (EQ W 'FAILED)) (RETURN W)))
      (COND
       ((AND (EQUAL OP 'PLUS) (EQCAR U 'MINUS))
        (PROGN (SETQ OP 'MINUS) (SETQ U (CADR U)))))
      (SETQ W (COND (OP (FANCY-OPRIN OP))))
      (COND
       ((EQ W 'FAILED)
        (PROGN
         (FANCY-TERPRI* NIL)
         (COND (OP (FANCY-OPRIN OP)))
         (RETURN (FANCY-MAPRINT U P))
         NIL)))
      (COND
       ((LESSP FANCY-POS* (SETQ LL (LINELENGTH NIL)))
        (COND ((NUMBERP U) (RETURN (FANCY-PRIN2NUMBER U)))
              ((EQCAR U '|:RD:|) (RETURN (FANCY-RDPRIN U))))))
      (COND
       ((OR (GREATERP FANCY-POS* (QUOTIENT (LINELENGTH NIL) 2))
            (NOT (EQCAR (FANCY-LAST-SYMBOL) 'BKT)))
        (FANCY-TERPRI* NIL)))
      (RETURN (FANCY-MAPRINT U P)))) 
(PUT 'PRINT_FORMAT 'NUMBER-OF-ARGS 2) 
(PUT 'PRINT_FORMAT 'DEFINED-ON-LINE '961) 
(PUT 'PRINT_FORMAT 'DEFINED-IN-FILE 'RPRINT/FMPRINT.RED) 
(PUT 'PRINT_FORMAT 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE PRINT_FORMAT (F PAT)
    (PUT (CAR F) 'PRINT-FORMAT
         (CONS (CONS (CDR F) PAT) (GET (CAR F) 'PRINT-FORMAT)))) 
(FLAG '(PRINT_FORMAT) 'OPFN) 
(PUT 'FANCY-PRINT-FORMAT 'NUMBER-OF-ARGS 2) 
(PUT 'FANCY-PRINT-FORMAT 'DEFINED-ON-LINE '967) 
(PUT 'FANCY-PRINT-FORMAT 'DEFINED-IN-FILE 'RPRINT/FMPRINT.RED) 
(PUT 'FANCY-PRINT-FORMAT 'PROCEDURE_TYPE
     '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE FANCY-PRINT-FORMAT (U P)
    (PROG (POS TPOS FL W)
      (SETQ POS FANCY-POS*)
      (SETQ TPOS FANCY-TEXPOS)
      (SETQ FL FANCY-LINE*)
      (SETQ W
              (PROG (FMT FMTL A)
                (SETQ FMTL (GET (CAR U) 'PRINT-FORMAT))
               L
                (COND ((NULL FMTL) (RETURN 'FAILED)))
                (SETQ FMT (CAR FMTL))
                (SETQ FMTL (CDR FMTL))
                (COND ((NEQ (LENGTH (CAR FMT)) (LENGTH (CDR U))) (GO L)))
                (SETQ A (PAIR (CAR FMT) (CDR U)))
                (RETURN (FANCY-PRINT-FORMAT1 (CDR FMT) P A))))
      (COND
       ((EQ W 'FAILED) (SETQ FANCY-LINE* FL) (SETQ FANCY-TEXPOS TPOS)
        (SETQ FANCY-POS* POS)))
      (RETURN W))) 
(PUT 'FANCY-PRINT-FORMAT1 'NUMBER-OF-ARGS 3) 
(PUT 'FANCY-PRINT-FORMAT1 'DEFINED-ON-LINE '979) 
(PUT 'FANCY-PRINT-FORMAT1 'DEFINED-IN-FILE 'RPRINT/FMPRINT.RED) 
(PUT 'FANCY-PRINT-FORMAT1 'PROCEDURE_TYPE
     '(ARROW (TIMES GENERAL GENERAL GENERAL) GENERAL)) 
(DE FANCY-PRINT-FORMAT1 (U P A)
    (PROG (W X PL BKT OBKT Q)
      (COND ((EQCAR U 'LIST) (SETQ U (CDR U))))
      (PROG ()
       WHILELABEL
        (COND ((NOT (AND U (NEQ W 'FAILED))) (RETURN NIL)))
        (PROGN
         (SETQ X (CAR U))
         (SETQ U (CDR U))
         (COND ((EQCAR X 'LIST) (SETQ X (CDR X))))
         (SETQ OBKT BKT)
         (SETQ BKT NIL)
         (COND (OBKT (FANCY-PRIN2* '{ 0)))
         (SETQ W
                 (COND ((PAIRP X) (FANCY-PRINT-FORMAT1 X P A))
                       ((MEMQ X '(|(| |)| |,| |.| |\||))
                        (PROGN
                         (COND
                          ((EQ X '|(|)
                           (PROGN (SETQ PL (CONS P PL)) (SETQ P 0)))
                          ((EQ X '|)|)
                           (PROGN (SETQ P (CAR PL)) (SETQ PL (CDR PL)))))
                         (FANCY-PRIN2* X 1)))
                       ((OR (EQ X '_) (EQ X '^))
                        (PROGN (SETQ BKT T) (FANCY-PRIN2* X 0)))
                       ((SETQ Q (ASSOC X A)) (FANCY-MAPRINT (CDR Q) P))
                       (T (FANCY-MAPRINT X P))))
         (COND (OBKT (FANCY-PRIN2* '} 0)))
         NIL)
        (GO WHILELABEL))
      (RETURN W))) 
(PUT 'FANCY-PREFIX-OPERATOR 'NUMBER-OF-ARGS 1) 
(PUT 'FANCY-PREFIX-OPERATOR 'DEFINED-ON-LINE '1007) 
(PUT 'FANCY-PREFIX-OPERATOR 'DEFINED-IN-FILE 'RPRINT/FMPRINT.RED) 
(PUT 'FANCY-PREFIX-OPERATOR 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE FANCY-PREFIX-OPERATOR (U)
    (PROG (SY)
      (SETQ SY
              (OR (GET U 'FANCY-FUNCTIONSYMBOL) (GET U 'FANCY-SPECIAL-SYMBOL)))
      (COND (SY (FANCY-SPECIAL-SYMBOL SY (OR (GET U 'FANCY-SYMBOL-LENGTH) 2)))
            (T (FANCY-PRIN2* U T))))) 
(PUT 'SQRT 'FANCY-PRIFN 'FANCY-SQRTPRI) 
(PUT 'FANCY-SQRTPRI 'NUMBER-OF-ARGS 1) 
(PUT 'FANCY-SQRTPRI 'DEFINED-ON-LINE '1019) 
(PUT 'FANCY-SQRTPRI 'DEFINED-IN-FILE 'RPRINT/FMPRINT.RED) 
(PUT 'FANCY-SQRTPRI 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE FANCY-SQRTPRI (U) (FANCY-SQRTPRI* (CADR U) 2)) 
(PUT 'FANCY-SQRTPRI* 'NUMBER-OF-ARGS 2) 
(PUT 'FANCY-SQRTPRI* 'DEFINED-ON-LINE '1022) 
(PUT 'FANCY-SQRTPRI* 'DEFINED-IN-FILE 'RPRINT/FMPRINT.RED) 
(PUT 'FANCY-SQRTPRI* 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE FANCY-SQRTPRI* (U N)
    (PROG (POS TPOS FL W)
      (SETQ POS FANCY-POS*)
      (SETQ TPOS FANCY-TEXPOS)
      (SETQ FL FANCY-LINE*)
      (SETQ W
              (PROG ()
                (COND
                 ((AND (NOT (NUMBERP N)) (NOT (LITER N))) (RETURN 'FAILED)))
                (FANCY-PRIN2* "\\sqrt" 0)
                (COND
                 ((NEQ N 2)
                  (PROGN
                   (FANCY-PRIN2* "[" 0)
                   (FANCY-PRIN2* "\\," 1)
                   (FANCY-PRIN2* N T)
                   (FANCY-PRIN2* "]" 0)
                   NIL)))
                (RETURN (FANCY-MAPRINT-TEX-BKT U 0 T))))
      (COND
       ((EQ W 'FAILED) (SETQ FANCY-LINE* FL) (SETQ FANCY-TEXPOS TPOS)
        (SETQ FANCY-POS* POS)))
      (RETURN W))) 
(PUT 'FANCY-SUB 'NUMBER-OF-ARGS 2) 
(PUT 'FANCY-SUB 'DEFINED-ON-LINE '1037) 
(PUT 'FANCY-SUB 'DEFINED-IN-FILE 'RPRINT/FMPRINT.RED) 
(PUT 'FANCY-SUB 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE FANCY-SUB (L P)
    (COND
     ((LEQ (GET 'EXPT 'INFIX) P)
      (FANCY-IN-BRACKETS (LIST 'FANCY-SUB (MKQUOTE L) 0) '|(| '|)|))
     (T
      (PROG (POS TPOS FL W)
        (SETQ POS FANCY-POS*)
        (SETQ TPOS FANCY-TEXPOS)
        (SETQ FL FANCY-LINE*)
        (SETQ W
                (PROG (EQS W)
                  (SETQ L (CDR L))
                  (PROG ()
                   WHILELABEL
                    (COND ((NOT (CDR L)) (RETURN NIL)))
                    (PROGN
                     (SETQ EQS (APPEND EQS (LIST (CAR L))))
                     (SETQ L (CDR L)))
                    (GO WHILELABEL))
                  (SETQ L (CAR L))
                  (SETQ TESTING-WIDTH* T)
                  (SETQ W (FANCY-MAPRINT L (GET 'EXPT 'INFIX)))
                  (COND ((EQUAL W 'FAILED) (RETURN W)))
                  (FANCY-PRIN2* "\\bigl" 0)
                  (FANCY-PRIN2* "|" 1)
                  (FANCY-PRIN2* '_ 0)
                  (FANCY-PRIN2* "{" 0)
                  (SETQ W (FANCY-INPRINT '*COMMA* 0 EQS))
                  (FANCY-PRIN2* "}" 0)
                  (RETURN W)))
        (COND
         ((EQ W 'FAILED) (SETQ FANCY-LINE* FL) (SETQ FANCY-TEXPOS TPOS)
          (SETQ FANCY-POS* POS)))
        (RETURN W))))) 
(PUT 'SUB 'FANCY-PPRIFN 'FANCY-SUB) 
(PUT 'FACTORIAL 'FANCY-PPRIFN 'FANCY-FACTORIAL) 
(PUT 'FANCY-FACTORIAL 'NUMBER-OF-ARGS 2) 
(PUT 'FANCY-FACTORIAL 'DEFINED-ON-LINE '1064) 
(PUT 'FANCY-FACTORIAL 'DEFINED-IN-FILE 'RPRINT/FMPRINT.RED) 
(PUT 'FANCY-FACTORIAL 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE FANCY-FACTORIAL (U N)
    (PROG (POS TPOS FL W)
      (SETQ POS FANCY-POS*)
      (SETQ TPOS FANCY-TEXPOS)
      (SETQ FL FANCY-LINE*)
      (SETQ W
              (PROG (W)
                (SETQ W
                        (COND ((ATOM (CADR U)) (FANCY-MAPRINT (CADR U) 9999))
                              (T
                               (FANCY-IN-BRACKETS
                                (LIST 'FANCY-MAPRINT (MKQUOTE (CADR U)) 0) '|(|
                                '|)|))))
                (FANCY-PRIN2* "!" 2)
                (RETURN W)))
      (COND
       ((EQ W 'FAILED) (SETQ FANCY-LINE* FL) (SETQ FANCY-TEXPOS TPOS)
        (SETQ FANCY-POS* POS)))
      (RETURN W))) 
(PUT 'BINOMIAL 'FANCY-PRIFN 'FANCY-BINOMIAL) 
(PUT 'FANCY-BINOMIAL 'NUMBER-OF-ARGS 1) 
(PUT 'FANCY-BINOMIAL 'DEFINED-ON-LINE '1078) 
(PUT 'FANCY-BINOMIAL 'DEFINED-IN-FILE 'RPRINT/FMPRINT.RED) 
(PUT 'FANCY-BINOMIAL 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE FANCY-BINOMIAL (U)
    (PROG (POS TPOS FL W)
      (SETQ POS FANCY-POS*)
      (SETQ TPOS FANCY-TEXPOS)
      (SETQ FL FANCY-LINE*)
      (SETQ W
              (PROG (W1 W2 *LIST)
                (FANCY-PRIN2* "\\left(\\begin{array}{c}" 2)
                (SETQ W1 (FANCY-MAPRINT (CADR U) 0))
                (FANCY-PRIN2* "\\\\" 0)
                (SETQ W2 (FANCY-MAPRINT (CADDR U) 0))
                (FANCY-PRIN2* "\\end{array}\\right)" 2)
                (COND
                 ((OR (EQUAL W1 'FAILED) (EQUAL W2 'FAILED))
                  (RETURN 'FAILED)))))
      (COND
       ((EQ W 'FAILED) (SETQ FANCY-LINE* FL) (SETQ FANCY-TEXPOS TPOS)
        (SETQ FANCY-POS* POS)))
      (RETURN W))) 
(PUT 'FANCY-INTPRI 'NUMBER-OF-ARGS 2) 
(PUT 'FANCY-INTPRI 'DEFINED-ON-LINE '1089) 
(PUT 'FANCY-INTPRI 'DEFINED-IN-FILE 'RPRINT/FMPRINT.RED) 
(PUT 'FANCY-INTPRI 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE FANCY-INTPRI (U P)
    (COND
     ((GREATERP P (GET 'TIMES 'INFIX))
      (FANCY-IN-BRACKETS (LIST 'FANCY-INTPRI (MKQUOTE U) 0) '|(| '|)|))
     (T
      (PROG (POS TPOS FL W)
        (SETQ POS FANCY-POS*)
        (SETQ TPOS FANCY-TEXPOS)
        (SETQ FL FANCY-LINE*)
        (SETQ W
                (PROG (W1 W2 LO HI VAR)
                  (SETQ VAR (CADDR U))
                  (COND ((CDDDR U) (SETQ LO (CADDDR U))))
                  (COND ((AND LO (CDDDDR U)) (SETQ HI (CAR (CDDDDR U)))))
                  (COND
                   ((GREATERP (FANCY-HEIGHT (CADR U) 1.0) 3)
                    (FANCY-PRIN2* "\\Int " 0))
                   (T (FANCY-PRIN2* "\\int " 0)))
                  (COND
                   (LO
                    (PROGN
                     (FANCY-PRIN2* '_ 0)
                     ((LAMBDA (*LIST) (FANCY-MAPRINT-TEX-BKT LO 0 T)) NIL)
                     NIL)))
                  (COND
                   (HI
                    (PROGN
                     (FANCY-PRIN2* '^ 0)
                     ((LAMBDA (*LIST) (FANCY-MAPRINT-TEX-BKT HI 0 T)) NIL)
                     NIL)))
                  (SETQ W1 (FANCY-MAPRINT (CADR U) 0))
                  (FANCY-PRIN2* "\\,d\\," 2)
                  (SETQ W2 (FANCY-MAPRINT (CADDR U) 0))
                  (COND
                   ((OR (EQUAL W1 'FAILED) (EQUAL W2 'FAILED))
                    (RETURN 'FAILED)))))
        (COND
         ((EQ W 'FAILED) (SETQ FANCY-LINE* FL) (SETQ FANCY-TEXPOS TPOS)
          (SETQ FANCY-POS* POS)))
        (RETURN W))))) 
(PUT 'FANCY-HEIGHT 'NUMBER-OF-ARGS 2) 
(PUT 'FANCY-HEIGHT 'DEFINED-ON-LINE '1115) 
(PUT 'FANCY-HEIGHT 'DEFINED-IN-FILE 'RPRINT/FMPRINT.RED) 
(PUT 'FANCY-HEIGHT 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE FANCY-HEIGHT (U H)
    (COND ((ATOM U) H) ((EQUAL (CAR U) 'MINUS) (FANCY-HEIGHT (CADR U) H))
          ((OR (EQUAL (CAR U) 'PLUS) (EQUAL (CAR U) 'TIMES))
           (EVAL
            (CONS 'MAX
                  (PROG (W FORALL-RESULT FORALL-ENDPTR)
                    (SETQ W (CDR U))
                    (COND ((NULL W) (RETURN NIL)))
                    (SETQ FORALL-RESULT
                            (SETQ FORALL-ENDPTR
                                    (CONS
                                     ((LAMBDA (W) (FANCY-HEIGHT W H)) (CAR W))
                                     NIL)))
                   LOOPLABEL
                    (SETQ W (CDR W))
                    (COND ((NULL W) (RETURN FORALL-RESULT)))
                    (RPLACD FORALL-ENDPTR
                            (CONS ((LAMBDA (W) (FANCY-HEIGHT W H)) (CAR W))
                                  NIL))
                    (SETQ FORALL-ENDPTR (CDR FORALL-ENDPTR))
                    (GO LOOPLABEL)))))
          ((EQUAL (CAR U) 'EXPT)
           (PLUS (FANCY-HEIGHT (CADR U) H)
                 (FANCY-HEIGHT (CADDR U) (TIMES H 0.8))))
          ((EQUAL (CAR U) 'QUOTIENT)
           (PLUS (FANCY-HEIGHT (CADR U) H) (FANCY-HEIGHT (CADDR U) H)))
          ((GET (CAR U) 'SIMPFN) (FANCY-HEIGHT (CADR U) H)) (T H))) 
(PUT 'INT 'FANCY-PPRIFN 'FANCY-INTPRI) 
(PUT 'FANCY-SUMPRI* 'NUMBER-OF-ARGS 3) 
(PUT 'FANCY-SUMPRI* 'DEFINED-ON-LINE '1131) 
(PUT 'FANCY-SUMPRI* 'DEFINED-IN-FILE 'RPRINT/FMPRINT.RED) 
(PUT 'FANCY-SUMPRI* 'PROCEDURE_TYPE
     '(ARROW (TIMES GENERAL GENERAL GENERAL) GENERAL)) 
(DE FANCY-SUMPRI* (U P MODE)
    (COND
     ((GREATERP P (GET 'MINUS 'INFIX))
      (FANCY-IN-BRACKETS (LIST 'FANCY-SUMPRI* (MKQUOTE U) 0 (MKQUOTE MODE))
       '|(| '|)|))
     (T
      (PROG (POS TPOS FL W)
        (SETQ POS FANCY-POS*)
        (SETQ TPOS FANCY-TEXPOS)
        (SETQ FL FANCY-LINE*)
        (SETQ W
                (PROG (W W0 W1 LO HI VAR)
                  (SETQ VAR (CADDR U))
                  (COND ((CDDDR U) (SETQ LO (CADDDR U))))
                  (COND ((AND LO (CDDDDR U)) (SETQ HI (CAR (CDDDDR U)))))
                  (SETQ W (COND (LO (LIST 'EQUAL VAR LO)) (T VAR)))
                  (COND ((EQUAL MODE 'SUM) (FANCY-PRIN2* "\\sum" 0))
                        ((EQUAL MODE 'PROD) (FANCY-PRIN2* "\\prod" 0)))
                  (FANCY-PRIN2* '_ 0)
                  (FANCY-PRIN2* '{ 0)
                  (COND
                   (W ((LAMBDA (*LIST) (SETQ W0 (FANCY-MAPRINT W 0))) NIL)))
                  (FANCY-PRIN2* '} 0)
                  (COND
                   (HI
                    (PROGN
                     (FANCY-PRIN2* '^ 0)
                     ((LAMBDA (*LIST) (FANCY-MAPRINT-TEX-BKT HI 0 NIL)) NIL)
                     NIL)))
                  (FANCY-PRIN2* '|\\,| 1)
                  (SETQ W1 (FANCY-MAPRINT (CADR U) 0))
                  (COND
                   ((OR (EQUAL W0 'FAILED) (EQUAL W1 'FAILED))
                    (RETURN 'FAILED)))))
        (COND
         ((EQ W 'FAILED) (SETQ FANCY-LINE* FL) (SETQ FANCY-TEXPOS TPOS)
          (SETQ FANCY-POS* POS)))
        (RETURN W))))) 
(PUT 'FANCY-SUMPRI 'NUMBER-OF-ARGS 2) 
(PUT 'FANCY-SUMPRI 'DEFINED-ON-LINE '1158) 
(PUT 'FANCY-SUMPRI 'DEFINED-IN-FILE 'RPRINT/FMPRINT.RED) 
(PUT 'FANCY-SUMPRI 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE FANCY-SUMPRI (U P) (FANCY-SUMPRI* U P 'SUM)) 
(PUT 'SUM 'FANCY-PPRIFN 'FANCY-SUMPRI) 
(PUT 'INFSUM 'FANCY-PPRIFN 'FANCY-SUMPRI) 
(PUT 'FANCY-PRODPRI 'NUMBER-OF-ARGS 2) 
(PUT 'FANCY-PRODPRI 'DEFINED-ON-LINE '1163) 
(PUT 'FANCY-PRODPRI 'DEFINED-IN-FILE 'RPRINT/FMPRINT.RED) 
(PUT 'FANCY-PRODPRI 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE FANCY-PRODPRI (U P) (FANCY-SUMPRI* U P 'PROD)) 
(PUT 'PROD 'FANCY-PPRIFN 'FANCY-PRODPRI) 
(PUT 'FANCY-LIMPRI 'NUMBER-OF-ARGS 2) 
(PUT 'FANCY-LIMPRI 'DEFINED-ON-LINE '1167) 
(PUT 'FANCY-LIMPRI 'DEFINED-IN-FILE 'RPRINT/FMPRINT.RED) 
(PUT 'FANCY-LIMPRI 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE FANCY-LIMPRI (U P)
    (COND
     ((GREATERP P (GET 'MINUS 'INFIX))
      (FANCY-IN-BRACKETS (LIST 'FANCY-LIMPRI (MKQUOTE U) 0) '|(| '|)|))
     (T
      (PROG (POS TPOS FL W)
        (SETQ POS FANCY-POS*)
        (SETQ TPOS FANCY-TEXPOS)
        (SETQ FL FANCY-LINE*)
        (SETQ W
                (PROG (W LO VAR)
                  (SETQ VAR (CADDR U))
                  (COND ((CDDDR U) (SETQ LO (CADDDR U))))
                  (FANCY-PRIN2* "\\lim" 6)
                  (FANCY-PRIN2* '_ 0)
                  (FANCY-PRIN2* '{ 0)
                  (FANCY-MAPRINT VAR 0)
                  (FANCY-PRIN2* "\\to" 0)
                  (FANCY-PRIN2* BLANK 0)
                  ((LAMBDA (*LIST) (FANCY-MAPRINT LO 0)) NIL)
                  (FANCY-PRIN2* '} 0)
                  (SETQ W (FANCY-MAPRINT (CADR U) 0))
                  (RETURN W)))
        (COND
         ((EQ W 'FAILED) (SETQ FANCY-LINE* FL) (SETQ FANCY-TEXPOS TPOS)
          (SETQ FANCY-POS* POS)))
        (RETURN W))))) 
(PUT 'LIMIT 'FANCY-PPRIFN 'FANCY-LIMPRI) 
(PUT 'FANCY-LISTPRI 'NUMBER-OF-ARGS 1) 
(PUT 'FANCY-LISTPRI 'DEFINED-ON-LINE '1189) 
(PUT 'FANCY-LISTPRI 'DEFINED-IN-FILE 'RPRINT/FMPRINT.RED) 
(PUT 'FANCY-LISTPRI 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE FANCY-LISTPRI (U)
    (PROG (POS TPOS FL W)
      (SETQ POS FANCY-POS*)
      (SETQ TPOS FANCY-TEXPOS)
      (SETQ FL FANCY-LINE*)
      (SETQ W
              (COND ((NULL (CDR U)) (FANCY-MAPRINT 'EMPTY-SET 0))
                    (T
                     (FANCY-IN-BRACKETS
                      (LIST 'FANCY-INPRINTLIST (MKQUOTE '*WCOMMA*) 0
                            (MKQUOTE (CDR U)))
                      '{ '}))))
      (COND
       ((EQ W 'FAILED) (SETQ FANCY-LINE* FL) (SETQ FANCY-TEXPOS TPOS)
        (SETQ FANCY-POS* POS)))
      (RETURN W))) 
(PUT 'LIST 'FANCY-PRIFN 'FANCY-LISTPRI) 
(PUT 'LIST 'FANCY-FLATPRIFN 'FANCY-LISTPRI) 
(PUT '*SQ 'FANCY-REFORM 'FANCY-SQREFORM) 
(PUT 'FANCY-SQREFORM 'NUMBER-OF-ARGS 1) 
(PUT 'FANCY-SQREFORM 'DEFINED-ON-LINE '1203) 
(PUT 'FANCY-SQREFORM 'DEFINED-IN-FILE 'RPRINT/FMPRINT.RED) 
(PUT 'FANCY-SQREFORM 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE FANCY-SQREFORM (U)
    (PROGN
     (SETQ U (CADR U))
     (COND ((OR *PRI WTL*) (PREPREFORM (PREPSQ* (SQHORNER* U))))
           ((EQUAL (CDR U) 1) (FANCY-SFREFORM (CAR U)))
           (T
            (LIST 'QUOTIENT (FANCY-SFREFORM (CAR U))
                  (FANCY-SFREFORM (CDR U))))))) 
(PUT 'FANCY-SFREFORM 'NUMBER-OF-ARGS 1) 
(PUT 'FANCY-SFREFORM 'DEFINED-ON-LINE '1209) 
(PUT 'FANCY-SFREFORM 'DEFINED-IN-FILE 'RPRINT/FMPRINT.RED) 
(PUT 'FANCY-SFREFORM 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE FANCY-SFREFORM (U)
    (PROG (Z)
      (PROG ()
       WHILELABEL
        (COND ((NOT (NOT (OR (ATOM U) (ATOM (CAR U))))) (RETURN NIL)))
        (PROGN (SETQ Z (CONS (FANCY-TERMREFORM (CAR U)) Z)) (SETQ U (CDR U)))
        (GO WHILELABEL))
      (COND ((NOT (NULL U)) (SETQ Z (CONS (PREPD U) Z))))
      (RETURN (REPLUS (REVERSIP Z))))) 
(PUT 'FANCY-TERMREFORM 'NUMBER-OF-ARGS 1) 
(PUT 'FANCY-TERMREFORM 'DEFINED-ON-LINE '1217) 
(PUT 'FANCY-TERMREFORM 'DEFINED-IN-FILE 'RPRINT/FMPRINT.RED) 
(PUT 'FANCY-TERMREFORM 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE FANCY-TERMREFORM (U)
    (PROG (V W Z SGN)
      (SETQ V (CDR U))
      (SETQ U (CAR U))
      (COND
       ((AND (SETQ W (KERNLP V)) (NOT (|:ONEP| W)))
        (PROGN
         (SETQ V ((LAMBDA (*EXP) (QUOTF1 V W)) T))
         (COND ((MINUSF W) (PROGN (SETQ SGN T) (SETQ W (|:MINUS| W))))))))
      (COND
       ((AND W (NOT (|:ONEP| W)))
        (SETQ Z
                (CONS (COND ((OR (ATOM W) (ATOM (CAR W))) (PREPD W)) (T W))
                      Z))))
      (SETQ Z (CONS (FANCY-POWERREFORM U) Z))
      (COND
       ((NOT (AND (OR (ATOM V) (ATOM (CAR V))) (|:ONEP| V)))
        (SETQ Z (CONS (FANCY-SFREFORM V) Z))))
      (SETQ Z (RETIMES (REVERSIP Z)))
      (COND (SGN (SETQ Z (LIST 'MINUS Z))))
      (RETURN Z))) 
(PUT 'FANCY-POWERREFORM 'NUMBER-OF-ARGS 1) 
(PUT 'FANCY-POWERREFORM 'DEFINED-ON-LINE '1233) 
(PUT 'FANCY-POWERREFORM 'DEFINED-IN-FILE 'RPRINT/FMPRINT.RED) 
(PUT 'FANCY-POWERREFORM 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE FANCY-POWERREFORM (U)
    (PROG (B)
      (COND ((ATOM (CAR U)) (SETQ B (CAR U)))
            ((NOT (ATOM (CAAR U))) (SETQ B (FANCY-SFREFORM (CAR U))))
            ((EQ (CAAR U) '*SQ) (SETQ B (FANCY-SQREFORM (CADAR U))))
            (T (SETQ B (CAR U))))
      (COND ((EQUAL (SETQ U (CDR U)) 1) (RETURN B))
            (T (RETURN (LIST 'EXPT B U)))))) 
(PUT 'DF 'FANCY-PPRIFN 'FANCY-DFPRI) 
(PUT 'FANCY-DFPRI 'NUMBER-OF-ARGS 2) 
(PUT 'FANCY-DFPRI 'DEFINED-ON-LINE '1249) 
(PUT 'FANCY-DFPRI 'DEFINED-IN-FILE 'RPRINT/FMPRINT.RED) 
(PUT 'FANCY-DFPRI 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE FANCY-DFPRI (U L)
    ((LAMBDA (M)
       (COND
        ((OR (FLAGP (CADR U) 'PRINT-INDEXED)
             (AND (PAIRP (CADR U)) (FLAGP (CAADR U) 'PRINT-INDEXED)))
         (FANCY-DFPRIINDEXED U L))
        ((EQUAL M 'PARTIAL) (FANCY-DFPRI0 U L 'PARTIAL-DF))
        ((EQUAL M 'TOTAL) (FANCY-DFPRI0 U L 'D))
        ((EQUAL M 'INDEXED) (FANCY-DFPRIINDEXED U L))
        (T (REDERR "unknown print mode for DF"))))
     (FANCY-MODE 'FANCY_PRINT_DF))) 
(PUT 'FANCY-PARTIALDFPRI 'NUMBER-OF-ARGS 2) 
(PUT 'FANCY-PARTIALDFPRI 'DEFINED-ON-LINE '1259) 
(PUT 'FANCY-PARTIALDFPRI 'DEFINED-IN-FILE 'RPRINT/FMPRINT.RED) 
(PUT 'FANCY-PARTIALDFPRI 'PROCEDURE_TYPE
     '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE FANCY-PARTIALDFPRI (U L) (FANCY-DFPRI0 U L 'PARTIAL-DF)) 
(PUT 'FANCY-DFPRI0 'NUMBER-OF-ARGS 3) 
(PUT 'FANCY-DFPRI0 'DEFINED-ON-LINE '1262) 
(PUT 'FANCY-DFPRI0 'DEFINED-IN-FILE 'RPRINT/FMPRINT.RED) 
(PUT 'FANCY-DFPRI0 'PROCEDURE_TYPE
     '(ARROW (TIMES GENERAL GENERAL GENERAL) GENERAL)) 
(DE FANCY-DFPRI0 (U L SYMB)
    (COND ((NULL (CDDR U)) (FANCY-MAPRIN0 (LIST 'TIMES SYMB (CADR U))))
          ((GEQ L (GET 'EXPT 'INFIX))
           (FANCY-IN-BRACKETS (LIST 'FANCY-DFPRI0 (MKQUOTE U) 0 (MKQUOTE SYMB))
            '|(| '|)|))
          (T
           (PROG (POS TPOS FL W)
             (SETQ POS FANCY-POS*)
             (SETQ TPOS FANCY-TEXPOS)
             (SETQ FL FANCY-LINE*)
             (SETQ W
                     (PROG (X D Q N M)
                       (SETQ N 0)
                       (SETQ M 0)
                       (SETQ U (CDR U))
                       (SETQ Q (CAR U))
                       (SETQ U (CDR U))
                       (PROG ()
                        WHILELABEL
                         (COND ((NOT U) (RETURN NIL)))
                         (PROGN
                          (SETQ X (CAR U))
                          (SETQ U (CDR U))
                          (COND
                           ((AND U (NUMBERP (CAR U)))
                            (PROGN (SETQ M (CAR U)) (SETQ U (CDR U))))
                           (T (SETQ M 1)))
                          (SETQ N (PLUS N M))
                          (SETQ D
                                  (APPEND D
                                          (LIST SYMB
                                                (COND ((EQUAL M 1) X)
                                                      (T (LIST 'EXPT X M))))))
                          NIL)
                         (GO WHILELABEL))
                       (RETURN
                        (FANCY-MAPRIN0
                         (LIST 'QUOTIENT
                               (LIST 'TIMES
                                     (COND ((EQUAL N 1) SYMB)
                                           (T (LIST 'EXPT SYMB N)))
                                     Q)
                               (CONS 'TIMES D))))))
             (COND
              ((EQ W 'FAILED) (SETQ FANCY-LINE* FL) (SETQ FANCY-TEXPOS TPOS)
               (SETQ FANCY-POS* POS)))
             (RETURN W))))) 
(PUT 'FANCY-DFPRIINDEXED 'NUMBER-OF-ARGS 2) 
(PUT 'FANCY-DFPRIINDEXED 'DEFINED-ON-LINE '1286) 
(PUT 'FANCY-DFPRIINDEXED 'DEFINED-IN-FILE 'RPRINT/FMPRINT.RED) 
(PUT 'FANCY-DFPRIINDEXED 'PROCEDURE_TYPE
     '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE FANCY-DFPRIINDEXED (U L)
    (COND ((NULL (CDDR U)) (FANCY-MAPRIN0 (LIST 'TIMES 'PARTIAL-DF (CADR U))))
          (T
           (PROG (W)
             (SETQ W (FANCY-MAPRIN0 (CADR U)))
             (COND ((AND TESTING-WIDTH* (EQUAL W 'FAILED)) (RETURN W)))
             (SETQ W
                     (FANCY-PRINT-INDEXLIST
                      (FANCY-DFPRIINDEXEDX (CDDR U) NIL)))
             (RETURN W))))) 
(PUT 'FANCY-DFPRIINDEXEDX 'NUMBER-OF-ARGS 2) 
(PUT 'FANCY-DFPRIINDEXEDX 'DEFINED-ON-LINE '1295) 
(PUT 'FANCY-DFPRIINDEXEDX 'DEFINED-IN-FILE 'RPRINT/FMPRINT.RED) 
(PUT 'FANCY-DFPRIINDEXEDX 'PROCEDURE_TYPE
     '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE FANCY-DFPRIINDEXEDX (U P)
    (COND ((NULL U) NIL)
          ((NUMBERP (CAR U))
           (APPEND
            (PROG (I FORALL-RESULT FORALL-ENDPTR)
              (SETQ I 2)
              (COND ((MINUSP (DIFFERENCE (CAR U) I)) (RETURN NIL)))
              (SETQ FORALL-RESULT (SETQ FORALL-ENDPTR (CONS P NIL)))
             LOOPLABEL
              (SETQ I (PLUS2 I 1))
              (COND ((MINUSP (DIFFERENCE (CAR U) I)) (RETURN FORALL-RESULT)))
              (RPLACD FORALL-ENDPTR (CONS P NIL))
              (SETQ FORALL-ENDPTR (CDR FORALL-ENDPTR))
              (GO LOOPLABEL))
            (FANCY-DFPRIINDEXEDX (CDR U) P)))
          (T (CONS (CAR U) (FANCY-DFPRIINDEXEDX (CDR U) (CAR U)))))) 
(PUT '|:RD:| 'FANCY-PRIFN 'FANCY-RDPRIN) 
(PUT '|:RD:| 'FANCY-FLATPRIFN 'FANCY-RDPRIN) 
(PUT 'FANCY-RDPRIN 'NUMBER-OF-ARGS 1) 
(PUT 'FANCY-RDPRIN 'DEFINED-ON-LINE '1305) 
(PUT 'FANCY-RDPRIN 'DEFINED-IN-FILE 'RPRINT/FMPRINT.RED) 
(PUT 'FANCY-RDPRIN 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE FANCY-RDPRIN (U)
    (PROG (POS TPOS FL W)
      (SETQ POS FANCY-POS*)
      (SETQ TPOS FANCY-TEXPOS)
      (SETQ FL FANCY-LINE*)
      (SETQ W
              (PROG (DIGITS DOTPOS XP)
                (SETQ DOTPOS 0)
                (SETQ XP 0)
                (SETQ U (|RD:EXPLODE| U))
                (SETQ DIGITS (CAR U))
                (SETQ XP (CADR U))
                (SETQ DOTPOS (CADDR U))
                (RETURN (FANCY-RDPRIN1 DIGITS XP DOTPOS))))
      (COND
       ((EQ W 'FAILED) (SETQ FANCY-LINE* FL) (SETQ FANCY-TEXPOS TPOS)
        (SETQ FANCY-POS* POS)))
      (RETURN W))) 
(PUT 'FANCY-RDPRIN1 'NUMBER-OF-ARGS 3) 
(PUT 'FANCY-RDPRIN1 'DEFINED-ON-LINE '1313) 
(PUT 'FANCY-RDPRIN1 'DEFINED-IN-FILE 'RPRINT/FMPRINT.RED) 
(PUT 'FANCY-RDPRIN1 'PROCEDURE_TYPE
     '(ARROW (TIMES GENERAL GENERAL GENERAL) GENERAL)) 
(DE FANCY-RDPRIN1 (DIGITS XP DOTPOS)
    (PROG (STR)
      (COND
       ((AND (GREATERP XP 0)
             (LESSP (PLUS DOTPOS XP) (DIFFERENCE (LENGTH DIGITS) 1)))
        (PROGN (SETQ DOTPOS (PLUS DOTPOS XP)) (SETQ XP 0))))
      (PROG (I)
        (SETQ I 1)
       LAB
        (COND ((MINUSP (DIFFERENCE DOTPOS I)) (RETURN NIL)))
        (PROGN
         (SETQ STR (CONS (CAR DIGITS) STR))
         (SETQ DIGITS (CDR DIGITS))
         (COND ((NULL DIGITS) (SETQ DIGITS '(|0|))))
         NIL)
        (SETQ I (PLUS2 I 1))
        (GO LAB))
      (SETQ STR (CONS '|.| STR))
      (PROG (C)
        (SETQ C DIGITS)
       LAB
        (COND ((NULL C) (RETURN NIL)))
        ((LAMBDA (C) (SETQ STR (CONS C STR))) (CAR C))
        (SETQ C (CDR C))
        (GO LAB))
      (COND
       ((NOT (EQUAL XP 0))
        (PROGN
         (SETQ STR (CONS 'E STR))
         (PROG (C)
           (SETQ C (EXPLODE2 XP))
          LAB
           (COND ((NULL C) (RETURN NIL)))
           ((LAMBDA (C) (SETQ STR (CONS C STR))) (CAR C))
           (SETQ C (CDR C))
           (GO LAB)))))
      (COND
       ((AND TESTING-WIDTH*
             (GREATERP (PLUS FANCY-POS* (TIMES 2 (LENGTH STR)))
                       (TIMES 2 (LINELENGTH NIL))))
        (RETURN 'FAILED)))
      (FANCY-PRIN2NUMBER1 (REVERSIP STR)))) 
(PUT '|:CR:| 'FANCY-PPRIFN 'FANCY-CMPXPRIN) 
(PUT '|:CR:| 'FANCY-PPRIFN 'FANCY-CMPXPRIN) 
(PUT 'FANCY-CMPXPRIN 'NUMBER-OF-ARGS 2) 
(PUT 'FANCY-CMPXPRIN 'DEFINED-ON-LINE '1336) 
(PUT 'FANCY-CMPXPRIN 'DEFINED-IN-FILE 'RPRINT/FMPRINT.RED) 
(PUT 'FANCY-CMPXPRIN 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE FANCY-CMPXPRIN (U L)
    (PROG (RP IP)
      (SETQ RP (REVAL1 (LIST 'REPART U) T))
      (SETQ IP (REVAL1 (LIST 'IMPART U) T))
      (RETURN
       (FANCY-MAPRINT
        (COND ((EQUAL IP 0) RP) ((EQUAL RP 0) (LIST 'TIMES IP 'I))
              (T (LIST 'PLUS RP (LIST 'TIMES IP 'I))))
        L)))) 
(PUT '|FANCY-DN:PRIN| 'NUMBER-OF-ARGS 1) 
(PUT '|FANCY-DN:PRIN| 'DEFINED-ON-LINE '1345) 
(PUT '|FANCY-DN:PRIN| 'DEFINED-IN-FILE 'RPRINT/FMPRINT.RED) 
(PUT '|FANCY-DN:PRIN| 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE |FANCY-DN:PRIN| (U)
    (PROG (LST DOTPOS EX)
      (SETQ DOTPOS 0)
      (SETQ EX 0)
      (SETQ LST (BFEXPLODE0X (CADR U) (CDDR U)))
      (SETQ EX (CADR LST))
      (SETQ DOTPOS (CADDR LST))
      (SETQ LST (CAR LST))
      (RETURN (FANCY-RDPRIN1 LST EX DOTPOS)))) 
(PUT '|:DN:| 'FANCY-PRIFN '|FANCY-DN:PRIN|) 
(FMP-SWITCH T) 
(ENDMODULE) 
(MODULE (LIST 'F)) 
(FLUID '(*NAT)) 
(FLUID '(OBRKP*)) 
(PUT 'FANCY-SETMATPRI 'NUMBER-OF-ARGS 2) 
(PUT 'FANCY-SETMATPRI 'DEFINED-ON-LINE '1370) 
(PUT 'FANCY-SETMATPRI 'DEFINED-IN-FILE 'RPRINT/FMPRINT.RED) 
(PUT 'FANCY-SETMATPRI 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE FANCY-SETMATPRI (U V) (FANCY-MATPRI1 (CDR V) U)) 
(PUT 'MAT 'FANCY-SETPRIFN 'FANCY-SETMATPRI) 
(PUT 'FANCY-MATPRI 'NUMBER-OF-ARGS 1) 
(PUT 'FANCY-MATPRI 'DEFINED-ON-LINE '1375) 
(PUT 'FANCY-MATPRI 'DEFINED-IN-FILE 'RPRINT/FMPRINT.RED) 
(PUT 'FANCY-MATPRI 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE FANCY-MATPRI (U) (FANCY-MATPRI1 (CDR U) NIL)) 
(PUT 'MAT 'FANCY-PRIFN 'FANCY-MATPRI) 
(PUT 'FANCY-MATPRI1 'NUMBER-OF-ARGS 2) 
(PUT 'FANCY-MATPRI1 'DEFINED-ON-LINE '1381) 
(PUT 'FANCY-MATPRI1 'DEFINED-IN-FILE 'RPRINT/FMPRINT.RED) 
(PUT 'FANCY-MATPRI1 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE FANCY-MATPRI1 (U X)
    (PROG (W)
      (SETQ W (FANCY-MATPRI2 U X NIL))
      (COND ((OR (NEQ W 'FAILED) TESTING-WIDTH*) (RETURN W)))
      (FANCY-MATPRI3 U X))) 
(PUT 'FANCY-MATPRI2 'NUMBER-OF-ARGS 3) 
(PUT 'FANCY-MATPRI2 'DEFINED-ON-LINE '1390) 
(PUT 'FANCY-MATPRI2 'DEFINED-IN-FILE 'RPRINT/FMPRINT.RED) 
(PUT 'FANCY-MATPRI2 'PROCEDURE_TYPE
     '(ARROW (TIMES GENERAL GENERAL GENERAL) GENERAL)) 
(DE FANCY-MATPRI2 (U X BKT)
    (PROG (POS TPOS FL W)
      (SETQ POS FANCY-POS*)
      (SETQ TPOS FANCY-TEXPOS)
      (SETQ FL FANCY-LINE*)
      (SETQ W
              (PROG (W TESTING-WIDTH* FL FP FMAT ROW ELT FAIL COLS ROWS RW
                     MAXPOS)
                (SETQ COLS 0)
                (SETQ ROWS 0)
                (SETQ RW 0)
                (SETQ MAXPOS 0)
                (SETQ TESTING-WIDTH* T)
                (SETQ ROWS (LENGTH U))
                (SETQ COLS (LENGTH (CAR U)))
                (COND ((GREATERP (TIMES COLS ROWS) 400) (RETURN 'FAILED)))
                (COND (X (PROGN (FANCY-MAPRINT X 0) (FANCY-PRIN2* ":=" 4))))
                (SETQ FL FANCY-LINE*)
                (SETQ FP FANCY-POS*)
                (SETQ RW
                        (DIFFERENCE (DIFFERENCE (LINELENGTH NIL) 2)
                                    (PLUS FANCY-POS* 2)))
                (SETQ RW (QUOTIENT RW COLS))
                (SETQ FMAT
                        (PROG (ROW FORALL-RESULT FORALL-ENDPTR)
                          (SETQ ROW U)
                          (COND ((NULL ROW) (RETURN NIL)))
                          (SETQ FORALL-RESULT
                                  (SETQ FORALL-ENDPTR
                                          (CONS
                                           ((LAMBDA (ROW)
                                              (PROG (ELT FORALL-RESULT
                                                     FORALL-ENDPTR)
                                                (SETQ ELT ROW)
                                                (COND
                                                 ((NULL ELT) (RETURN NIL)))
                                                (SETQ FORALL-RESULT
                                                        (SETQ FORALL-ENDPTR
                                                                (CONS
                                                                 ((LAMBDA (ELT)
                                                                    (COND
                                                                     ((NOT
                                                                       FAIL)
                                                                      (PROGN
                                                                       (SETQ FANCY-LINE*
                                                                               NIL)
                                                                       (SETQ FANCY-POS*
                                                                               0)
                                                                       (SETQ W
                                                                               (FANCY-MAPRINT
                                                                                ELT
                                                                                0))
                                                                       (COND
                                                                        ((GREATERP
                                                                          FANCY-POS*
                                                                          MAXPOS)
                                                                         (SETQ MAXPOS
                                                                                 FANCY-POS*)))
                                                                       (COND
                                                                        ((OR
                                                                          (EQUAL
                                                                           W
                                                                           'FAILED)
                                                                          (GREATERP
                                                                           FANCY-POS*
                                                                           RW))
                                                                         (SETQ FAIL
                                                                                 T))
                                                                        (T
                                                                         (CONS
                                                                          FANCY-LINE*
                                                                          FANCY-POS*)))))))
                                                                  (CAR ELT))
                                                                 NIL)))
                                               LOOPLABEL
                                                (SETQ ELT (CDR ELT))
                                                (COND
                                                 ((NULL ELT)
                                                  (RETURN FORALL-RESULT)))
                                                (RPLACD FORALL-ENDPTR
                                                        (CONS
                                                         ((LAMBDA (ELT)
                                                            (COND
                                                             ((NOT FAIL)
                                                              (PROGN
                                                               (SETQ FANCY-LINE*
                                                                       NIL)
                                                               (SETQ FANCY-POS*
                                                                       0)
                                                               (SETQ W
                                                                       (FANCY-MAPRINT
                                                                        ELT 0))
                                                               (COND
                                                                ((GREATERP
                                                                  FANCY-POS*
                                                                  MAXPOS)
                                                                 (SETQ MAXPOS
                                                                         FANCY-POS*)))
                                                               (COND
                                                                ((OR
                                                                  (EQUAL W
                                                                         'FAILED)
                                                                  (GREATERP
                                                                   FANCY-POS*
                                                                   RW))
                                                                 (SETQ FAIL T))
                                                                (T
                                                                 (CONS
                                                                  FANCY-LINE*
                                                                  FANCY-POS*)))))))
                                                          (CAR ELT))
                                                         NIL))
                                                (SETQ FORALL-ENDPTR
                                                        (CDR FORALL-ENDPTR))
                                                (GO LOOPLABEL)))
                                            (CAR ROW))
                                           NIL)))
                         LOOPLABEL
                          (SETQ ROW (CDR ROW))
                          (COND ((NULL ROW) (RETURN FORALL-RESULT)))
                          (RPLACD FORALL-ENDPTR
                                  (CONS
                                   ((LAMBDA (ROW)
                                      (PROG (ELT FORALL-RESULT FORALL-ENDPTR)
                                        (SETQ ELT ROW)
                                        (COND ((NULL ELT) (RETURN NIL)))
                                        (SETQ FORALL-RESULT
                                                (SETQ FORALL-ENDPTR
                                                        (CONS
                                                         ((LAMBDA (ELT)
                                                            (COND
                                                             ((NOT FAIL)
                                                              (PROGN
                                                               (SETQ FANCY-LINE*
                                                                       NIL)
                                                               (SETQ FANCY-POS*
                                                                       0)
                                                               (SETQ W
                                                                       (FANCY-MAPRINT
                                                                        ELT 0))
                                                               (COND
                                                                ((GREATERP
                                                                  FANCY-POS*
                                                                  MAXPOS)
                                                                 (SETQ MAXPOS
                                                                         FANCY-POS*)))
                                                               (COND
                                                                ((OR
                                                                  (EQUAL W
                                                                         'FAILED)
                                                                  (GREATERP
                                                                   FANCY-POS*
                                                                   RW))
                                                                 (SETQ FAIL T))
                                                                (T
                                                                 (CONS
                                                                  FANCY-LINE*
                                                                  FANCY-POS*)))))))
                                                          (CAR ELT))
                                                         NIL)))
                                       LOOPLABEL
                                        (SETQ ELT (CDR ELT))
                                        (COND
                                         ((NULL ELT) (RETURN FORALL-RESULT)))
                                        (RPLACD FORALL-ENDPTR
                                                (CONS
                                                 ((LAMBDA (ELT)
                                                    (COND
                                                     ((NOT FAIL)
                                                      (PROGN
                                                       (SETQ FANCY-LINE* NIL)
                                                       (SETQ FANCY-POS* 0)
                                                       (SETQ W
                                                               (FANCY-MAPRINT
                                                                ELT 0))
                                                       (COND
                                                        ((GREATERP FANCY-POS*
                                                                   MAXPOS)
                                                         (SETQ MAXPOS
                                                                 FANCY-POS*)))
                                                       (COND
                                                        ((OR (EQUAL W 'FAILED)
                                                             (GREATERP
                                                              FANCY-POS* RW))
                                                         (SETQ FAIL T))
                                                        (T
                                                         (CONS FANCY-LINE*
                                                               FANCY-POS*)))))))
                                                  (CAR ELT))
                                                 NIL))
                                        (SETQ FORALL-ENDPTR
                                                (CDR FORALL-ENDPTR))
                                        (GO LOOPLABEL)))
                                    (CAR ROW))
                                   NIL))
                          (SETQ FORALL-ENDPTR (CDR FORALL-ENDPTR))
                          (GO LOOPLABEL)))
                (COND (FAIL (RETURN 'FAILED)))
                (SETQ TESTING-WIDTH* NIL)
                (SETQ FANCY-POS* FP)
                (SETQ FANCY-LINE* FL)
                (FANCY-PRIN2*
                 (BLDMSG_INTERNAL "\\left%w\\begin{array}{"
                                  (LIST (COND (BKT (CAR BKT)) (T "("))))
                 0)
                (PROG (I)
                  (SETQ I 1)
                 LAB
                  (COND ((MINUSP (DIFFERENCE COLS I)) (RETURN NIL)))
                  (FANCY-PRIN2* "c" 0)
                  (SETQ I (PLUS2 I 1))
                  (GO LAB))
                (FANCY-PRIN2* "}" 0)
                (PROG ()
                 WHILELABEL
                  (COND ((NOT FMAT) (RETURN NIL)))
                  (PROGN
                   (SETQ ROW (CAR FMAT))
                   (SETQ FMAT (CDR FMAT))
                   (PROG ()
                    WHILELABEL
                     (COND ((NOT ROW) (RETURN NIL)))
                     (PROGN
                      (SETQ ELT (CAR ROW))
                      (SETQ ROW (CDR ROW))
                      (SETQ FANCY-LINE* (APPEND (CAR ELT) FANCY-LINE*))
                      (COND (ROW (SETQ FANCY-LINE* (CONS '& FANCY-LINE*)))
                            (FMAT
                             (SETQ FANCY-LINE* (CONS "\\\\" FANCY-LINE*))))
                      NIL)
                     (GO WHILELABEL))
                   NIL)
                  (GO WHILELABEL))
                (FANCY-PRIN2*
                 (BLDMSG_INTERNAL "\\end{array}\\right%w"
                                  (LIST (COND (BKT (CDR BKT)) (T ")"))))
                 0)
                (SETQ FANCY-POS* (PLUS FP (TIMES MAXPOS (PLUS COLS 1))))
                (RETURN T)))
      (COND
       ((EQ W 'FAILED) (SETQ FANCY-LINE* FL) (SETQ FANCY-TEXPOS TPOS)
        (SETQ FANCY-POS* POS)))
      (RETURN W))) 
(PUT 'FANCY-MATPRI3 'NUMBER-OF-ARGS 2) 
(PUT 'FANCY-MATPRI3 'DEFINED-ON-LINE '1444) 
(PUT 'FANCY-MATPRI3 'DEFINED-IN-FILE 'RPRINT/FMPRINT.RED) 
(PUT 'FANCY-MATPRI3 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE FANCY-MATPRI3 (U X)
    (COND ((NULL X) (FANCY-MATPRIFLAT (CONS 'MAT U)))
          (T
           (PROG (OBRKP* *LIST R C)
             (SETQ R 0)
             (SETQ C 0)
             (SETQ OBRKP* NIL)
             (COND ((NULL X) (SETQ X 'MAT)))
            FANCY-TERPRI*
             (PROG (ROW)
               (SETQ ROW U)
              LAB
               (COND ((NULL ROW) (RETURN NIL)))
               ((LAMBDA (ROW)
                  (PROGN
                   (SETQ R (PLUS R 1))
                   (SETQ C 0)
                   (PROG (ELT)
                     (SETQ ELT ROW)
                    LAB
                     (COND ((NULL ELT) (RETURN NIL)))
                     ((LAMBDA (ELT)
                        (PROGN
                         (SETQ C (PLUS C 1))
                         (COND
                          ((NOT *NERO)
                           (PROGN
                            (FANCY-PRIN2* X T)
                            (FANCY-PRINT-INDEXLIST (LIST R C))
                            (FANCY-PRIN2* ":=" T)
                            (FANCY-MAPRINT ELT 0)
                            (FANCY-TERPRI* T)
                            NIL)))
                         NIL))
                      (CAR ELT))
                     (SETQ ELT (CDR ELT))
                     (GO LAB))
                   NIL))
                (CAR ROW))
               (SETQ ROW (CDR ROW))
               (GO LAB)))))) 
(PUT 'FANCY-MATPRIFLAT 'NUMBER-OF-ARGS 1) 
(PUT 'FANCY-MATPRIFLAT 'DEFINED-ON-LINE '1466) 
(PUT 'FANCY-MATPRIFLAT 'DEFINED-IN-FILE 'RPRINT/FMPRINT.RED) 
(PUT 'FANCY-MATPRIFLAT 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE FANCY-MATPRIFLAT (U)
    (PROG ()
      (FANCY-OPRIN 'MAT)
      (FANCY-IN-BRACKETS
       (LIST 'FANCY-MATPRIFLAT1 (MKQUOTE '*WCOMMA*) 0 (MKQUOTE (CDR U))) '|(|
       '|)|))) 
(PUT 'FANCY-MATPRIFLAT1 'NUMBER-OF-ARGS 3) 
(PUT 'FANCY-MATPRIFLAT1 'DEFINED-ON-LINE '1474) 
(PUT 'FANCY-MATPRIFLAT1 'DEFINED-IN-FILE 'RPRINT/FMPRINT.RED) 
(PUT 'FANCY-MATPRIFLAT1 'PROCEDURE_TYPE
     '(ARROW (TIMES GENERAL GENERAL GENERAL) GENERAL)) 
(DE FANCY-MATPRIFLAT1 (OP P L)
    (PROG (FST W)
      (PROG (V)
        (SETQ V L)
       LAB
        (COND ((NULL V) (RETURN NIL)))
        ((LAMBDA (V)
           (PROGN
            (COND
             (FST
              (PROGN
               (FANCY-PRIN2* "\\," 1)
               (FANCY-OPRIN OP)
               (FANCY-PRIN2* "\\," 1)
               NIL)))
            (COND
             (FST
              ((LAMBDA (TESTING-WIDTH*)
                 (SETQ W
                         (PROG (POS TPOS FL W)
                           (SETQ POS FANCY-POS*)
                           (SETQ TPOS FANCY-TEXPOS)
                           (SETQ FL FANCY-LINE*)
                           (SETQ W
                                   (FANCY-IN-BRACKETS
                                    (LIST 'FANCY-INPRINTLIST
                                          (MKQUOTE '*WCOMMA*) 0 (MKQUOTE V))
                                    '|(| '|)|))
                           (COND
                            ((EQ W 'FAILED) (SETQ FANCY-LINE* FL)
                             (SETQ FANCY-TEXPOS TPOS) (SETQ FANCY-POS* POS)))
                           (RETURN W))))
               T)))
            (COND ((EQ W 'FAILED) (FANCY-TERPRI* T)))
            (COND
             ((OR (NOT FST) (EQ W 'FAILED))
              (FANCY-IN-BRACKETS
               (LIST 'FANCY-INPRINTLIST (MKQUOTE '*WCOMMA*) 0 (MKQUOTE V)) '|(|
               '|)|)))
            (SETQ FST T)
            NIL))
         (CAR V))
        (SETQ V (CDR V))
        (GO LAB)))) 
(PUT 'MAT 'FANCY-FLATPRIFN 'FANCY-MATPRIFLAT) 
(PUT 'FANCY-MATFIT 'NUMBER-OF-ARGS 3) 
(PUT 'FANCY-MATFIT 'DEFINED-ON-LINE '1501) 
(PUT 'FANCY-MATFIT 'DEFINED-IN-FILE 'RPRINT/FMPRINT.RED) 
(PUT 'FANCY-MATFIT 'PROCEDURE_TYPE
     '(ARROW (TIMES GENERAL GENERAL GENERAL) GENERAL)) 
(DE FANCY-MATFIT (U P OP)
    (PROG (POS TPOS FL W)
      (SETQ POS FANCY-POS*)
      (SETQ TPOS FANCY-TEXPOS)
      (SETQ FL FANCY-LINE*)
      (SETQ W
              (PROG (POS TPOS FL FP W LL)
                (SETQ POS FANCY-POS*)
                (SETQ TPOS FANCY-TEXPOS)
                (SETQ FL FANCY-LINE*)
                (PROG (TESTING-WIDTH*)
                  (SETQ TESTING-WIDTH* T)
                  (COND (OP (SETQ W (FANCY-OPRIN OP))))
                  (COND ((NEQ W 'FAILED) (SETQ W (FANCY-MATPRI U)))))
                (COND
                 ((OR (NEQ W 'FAILED) (AND (EQ W 'FAILED) TESTING-WIDTH*))
                  (RETURN W)))
                (SETQ FANCY-LINE* FL)
                (SETQ FANCY-POS* POS)
                (SETQ FANCY-TEXPOS TPOS)
                (SETQ W NIL)
                (SETQ FP FANCY-PAGE*)
                (PROG (TESTING-WIDTH*)
                  (SETQ TESTING-WIDTH* T)
                  (COND (OP (SETQ W (FANCY-OPRIN OP))))
                  (FANCY-TERPRI* NIL)
                  (COND ((NEQ W 'FAILED) (SETQ W (FANCY-MATPRI U)))))
                (COND ((NEQ W 'FAILED) (RETURN T)))
                (SETQ FANCY-LINE* FL)
                (SETQ FANCY-POS* POS)
                (SETQ FANCY-TEXPOS TPOS)
                (SETQ FANCY-PAGE* FP)
                (SETQ LL (LINELENGTH NIL))
                (COND (OP (FANCY-OPRIN OP)))
                (COND
                 ((OR (ATOM U) (GREATERP FANCY-POS* (QUOTIENT LL 2)))
                  (FANCY-TERPRI* NIL)))
                (RETURN (FANCY-MATPRIFLAT U))))
      (COND
       ((EQ W 'FAILED) (SETQ FANCY-LINE* FL) (SETQ FANCY-TEXPOS TPOS)
        (SETQ FANCY-POS* POS)))
      (RETURN W))) 
(PUT 'MAT 'FANCY-PRINFIT 'FANCY-MATFIT) 
(PUT 'TAYLOR* 'FANCY-REFORM 'TAYLOR*PRINT1) 
(ENDMODULE) 
(MODULE (LIST 'FANCY_SPECFN)) 
(PUT 'EULER_GAMMA 'FANCY-SPECIAL-SYMBOL "\\gamma") 
(PUT 'BESSELI 'FANCY-PRIFN 'FANCY-BESSEL) 
(PUT 'BESSELJ 'FANCY-PRIFN 'FANCY-BESSEL) 
(PUT 'BESSELY 'FANCY-PRIFN 'FANCY-BESSEL) 
(PUT 'BESSELK 'FANCY-PRIFN 'FANCY-BESSEL) 
(PUT 'BESSELI 'FANCY-FUNCTIONSYMBOL '(ASCII 73)) 
(PUT 'BESSELJ 'FANCY-FUNCTIONSYMBOL '(ASCII 74)) 
(PUT 'BESSELY 'FANCY-FUNCTIONSYMBOL '(ASCII 89)) 
(PUT 'BESSELK 'FANCY-FUNCTIONSYMBOL '(ASCII 75)) 
(PUT 'FANCY-BESSEL 'NUMBER-OF-ARGS 1) 
(PUT 'FANCY-BESSEL 'DEFINED-ON-LINE '1553) 
(PUT 'FANCY-BESSEL 'DEFINED-IN-FILE 'RPRINT/FMPRINT.RED) 
(PUT 'FANCY-BESSEL 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE FANCY-BESSEL (U)
    (PROG (POS TPOS FL W)
      (SETQ POS FANCY-POS*)
      (SETQ TPOS FANCY-TEXPOS)
      (SETQ FL FANCY-LINE*)
      (SETQ W
              (PROG (W)
                (FANCY-PREFIX-OPERATOR (CAR U))
                (SETQ W (FANCY-PRINT-ONE-INDEX (CADR U)))
                (COND ((AND TESTING-WIDTH* (EQ W 'FAILED)) (RETURN W)))
                (RETURN (FANCY-PRINT-FUNCTION-ARGUMENTS (CDDR U)))))
      (COND
       ((EQ W 'FAILED) (SETQ FANCY-LINE* FL) (SETQ FANCY-TEXPOS TPOS)
        (SETQ FANCY-POS* POS)))
      (RETURN W))) 
(PUT 'POLYLOG 'FANCY-PRIFN 'FANCY-BESSEL) 
(PUT 'POLYLOG 'FANCY-FUNCTIONSYMBOL '|lI|) 
(PUT 'CHEBYSHEVU 'FANCY-PRIFN 'FANCY-BESSEL) 
(PUT 'CHEBYSHEVT 'FANCY-PRIFN 'FANCY-BESSEL) 
(PUT 'CHEBYSHEVU 'FANCY-FUNCTIONSYMBOL '(ASCII 85)) 
(PUT 'CHEBYSHEVT 'FANCY-FUNCTIONSYMBOL '(ASCII 84)) 
(PUT 'EMPTY* 'FANCY-SPECIAL-SYMBOL 32) 
(PUT 'FANCY-HYPERGEOMETRIC 'NUMBER-OF-ARGS 1) 
(PUT 'FANCY-HYPERGEOMETRIC 'DEFINED-ON-LINE '1574) 
(PUT 'FANCY-HYPERGEOMETRIC 'DEFINED-IN-FILE 'RPRINT/FMPRINT.RED) 
(PUT 'FANCY-HYPERGEOMETRIC 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE FANCY-HYPERGEOMETRIC (U)
    (PROG (POS TPOS FL W)
      (SETQ POS FANCY-POS*)
      (SETQ TPOS FANCY-TEXPOS)
      (SETQ FL FANCY-LINE*)
      (SETQ W
              (PROG (W A1 A2 A3)
                (SETQ A1 (CDR (CADR U)))
                (SETQ A2 (CDR (CADDR U)))
                (SETQ A3 (CADDDR U))
                (FANCY-SPECIAL-SYMBOL (GET 'EMPTY* 'FANCY-SPECIAL-SYMBOL) NIL)
                (SETQ W (FANCY-PRINT-ONE-INDEX (LENGTH A1)))
                (COND ((AND TESTING-WIDTH* (EQ W 'FAILED)) (RETURN W)))
                (FANCY-PRIN2* "F" NIL)
                (SETQ W (FANCY-PRINT-ONE-INDEX (LENGTH A2)))
                (COND ((AND TESTING-WIDTH* (EQ W 'FAILED)) (RETURN W)))
                (FANCY-PRIN2* "(" NIL)
                (COND ((NULL A1) (SETQ A1 (LIST '-))))
                (COND ((NULL A2) (SETQ A2 (LIST '-))))
                (SETQ W
                        (OR (EQ W 'FAILED)
                            (FANCY-PRINT-INDEXLIST1 A1 '^ '*COMMA*)))
                (SETQ W
                        (OR (EQ W 'FAILED)
                            (FANCY-PRINT-INDEXLIST1 A2 '_ '*COMMA*)))
                (FANCY-PRIN2* "\\," 1)
                (SETQ W (OR (EQ W 'FAILED) (FANCY-SPECIAL-SYMBOL 124 1)))
                (FANCY-PRIN2* "\\," 1)
                (SETQ W (OR (EQ W 'FAILED) (FANCY-PRINFIT A3 0 NIL)))
                (FANCY-PRIN2* ")" NIL)
                (RETURN W)))
      (COND
       ((EQ W 'FAILED) (SETQ FANCY-LINE* FL) (SETQ FANCY-TEXPOS TPOS)
        (SETQ FANCY-POS* POS)))
      (RETURN W))) 
(PUT 'HYPERGEOMETRIC 'FANCY-PRIFN 'FANCY-HYPERGEOMETRIC) 
(PUT 'FANCY-MEIJERG 'NUMBER-OF-ARGS 1) 
(PUT 'FANCY-MEIJERG 'DEFINED-ON-LINE '1603) 
(PUT 'FANCY-MEIJERG 'DEFINED-IN-FILE 'RPRINT/FMPRINT.RED) 
(PUT 'FANCY-MEIJERG 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE FANCY-MEIJERG (U)
    (PROG (POS TPOS FL W)
      (SETQ POS FANCY-POS*)
      (SETQ TPOS FANCY-TEXPOS)
      (SETQ FL FANCY-LINE*)
      (SETQ W
              (PROG (W A1 A2 A3 N M P Q)
                (SETQ N 0)
                (SETQ M 0)
                (SETQ P 0)
                (SETQ Q 0)
                (SETQ A1 (CDR (CADR U)))
                (SETQ A2 (CDR (CADDR U)))
                (SETQ A3 (CADDDR U))
                (SETQ M (LENGTH (CDAR A2)))
                (SETQ N (LENGTH (CDAR A1)))
                (SETQ A1 (APPEND (CDAR A1) (CDR A1)))
                (SETQ A2 (APPEND (CDAR A2) (CDR A2)))
                (SETQ P (LENGTH A1))
                (SETQ Q (LENGTH A2))
                (FANCY-PRIN2* "G" NIL)
                (SETQ W
                        (OR (EQ W 'FAILED)
                            (FANCY-PRINT-INDEXLIST1 (LIST M N) '^ NIL)))
                (SETQ W
                        (OR (EQ W 'FAILED)
                            (FANCY-PRINT-INDEXLIST1 (LIST P Q) '_ NIL)))
                (FANCY-PRIN2* "(" NIL)
                (SETQ W (OR (EQ W 'FAILED) (FANCY-PRINFIT A3 0 NIL)))
                (SETQ W (OR (EQ W 'FAILED) (FANCY-SPECIAL-SYMBOL 124 1)))
                (COND ((NULL A1) (SETQ A1 (LIST '-))))
                (COND ((NULL A2) (SETQ A2 (LIST '-))))
                (SETQ W
                        (OR (EQ W 'FAILED)
                            (FANCY-PRINT-INDEXLIST1 A1 '^ '*COMMA*)))
                (SETQ W
                        (OR (EQ W 'FAILED)
                            (FANCY-PRINT-INDEXLIST1 A2 '_ '*COMMA*)))
                (FANCY-PRIN2* ")" NIL)
                (RETURN W)))
      (COND
       ((EQ W 'FAILED) (SETQ FANCY-LINE* FL) (SETQ FANCY-TEXPOS TPOS)
        (SETQ FANCY-POS* POS)))
      (RETURN W))) 
(PUT 'MEIJERG 'FANCY-PRIFN 'FANCY-MEIJERG) 
(ENDMODULE) 