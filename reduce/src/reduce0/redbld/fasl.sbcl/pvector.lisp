(cl:declaim (cl:optimize cl:debug cl:safety))
(cl:declaim (sb-ext:muffle-conditions sb-ext:compiler-note cl:style-warning))
(COND ((NULL (GETD 'MKUNITP)) (IN (LIST "perm.red")))) 
NIL 
(MODULE (LIST 'PVECTOR)) 
(PUT 'PV_SIMP 'NUMBER-OF-ARGS 1) 
(PUT 'PV_SIMP 'DEFINED-ON-LINE '50) 
(PUT 'PV_SIMP 'DEFINED-IN-FILE 'ATENSOR/PVECTOR.RED) 
(PUT 'PV_SIMP 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE PV_SIMP (V) (CONS (CONS '|:PV| (LIST (CONS 1 (CAR V)))) 1)) 
(PUT 'PV 'SIMPFN 'PV_SIMP) 
(GLOBAL '(DOMAINLIST*)) 
(SWITCH (LIST 'PVECTOR)) 
(SETQ DOMAINLIST* (UNION '(|:PV|) DOMAINLIST*)) 
(PUT 'PVECTOR 'TAG '|:PV|) 
(PUT '|:PV| 'DNAME 'PVECTOR) 
(PUT '|:PV| 'MINUS 'PV_MINUS) 
(PUT '|:PV| 'MINUSP 'PV_MINUSP) 
(PUT '|:PV| 'PLUS 'PV_PLUS) 
(PUT '|:PV| 'TIMES 'PV_TIMES) 
(PUT '|:PV| 'DIFFERENCE 'PV_DIFFERENCE) 
(PUT '|:PV| 'ZEROP 'PV_ZEROP) 
(PUT '|:PV| 'ONEP 'PV_ONEP) 
(PUT '|:PV| 'PREPFN 'PV_PREP) 
(PUT '|:PV| 'PRIFN 'PV_PRI) 
(PUT '|:PV| 'INTEQUIVFN 'PV_INTEQUIV) 
(PUT '|:PV| 'I2D 'I2PVECTOR) 
(PUT '|:PV| 'EXPT 'PV_EXPT) 
(PUT '|:PV| 'QUOTIENT 'PV_QUOTIENT) 
(PUT '|:PV| 'DIVIDE 'PV_DIVIDE) 
(PUT '|:PV| 'GCD 'PV_GCD) 
(FLAG '(|:PV|) 'PVMODE) 
(PUT 'PV_MINUS 'NUMBER-OF-ARGS 1) 
(PUT 'PV_MINUS 'DEFINED-ON-LINE '81) 
(PUT 'PV_MINUS 'DEFINED-IN-FILE 'ATENSOR/PVECTOR.RED) 
(PUT 'PV_MINUS 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE PV_MINUS (U) (CONS (CAR U) (PV_NEG (CDR U)))) 
(PUT 'PV_MINUSP 'NUMBER-OF-ARGS 1) 
(PUT 'PV_MINUSP 'DEFINED-ON-LINE '84) 
(PUT 'PV_MINUSP 'DEFINED-IN-FILE 'ATENSOR/PVECTOR.RED) 
(PUT 'PV_MINUSP 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE PV_MINUSP (U) NIL) 
(PUT 'PV_PLUS 'NUMBER-OF-ARGS 2) 
(PUT 'PV_PLUS 'DEFINED-ON-LINE '86) 
(PUT 'PV_PLUS 'DEFINED-IN-FILE 'ATENSOR/PVECTOR.RED) 
(PUT 'PV_PLUS 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE PV_PLUS (U V)
    (COND
     ((AND (ATOM (CDR U)) (ATOM (CDR V)))
      (CONS (CAR U) (PLUS (CDR U) (CDR V))))
     ((ATOM (CDR U))
      (REDERR (LIST 'PV_PLUS "*** pvector can't be added to:" (CDR U))))
     ((ATOM (CDR V)) (PV_PLUS V U))
     (T (CONS (CAR U) (PV_ADD (CDR U) (CDR V)))))) 
(PUT 'PV_TIMES 'NUMBER-OF-ARGS 2) 
(PUT 'PV_TIMES 'DEFINED-ON-LINE '96) 
(PUT 'PV_TIMES 'DEFINED-IN-FILE 'ATENSOR/PVECTOR.RED) 
(PUT 'PV_TIMES 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE PV_TIMES (U V)
    (COND ((PV_INTEQUIV U) (PV_TIMES V U))
          ((ATOM (CDR V)) (CONS (CAR U) (PV_MULTC (CDR U) (CDR V))))
          (T (CONS (CAR U) (PV_TIMES1 (CDR U) (CDR V) NIL))))) 
(PUT 'PV_TIMES1 'NUMBER-OF-ARGS 3) 
(PUT 'PV_TIMES1 'DEFINED-ON-LINE '103) 
(PUT 'PV_TIMES1 'DEFINED-IN-FILE 'ATENSOR/PVECTOR.RED) 
(PUT 'PV_TIMES1 'PROCEDURE_TYPE
     '(ARROW (TIMES GENERAL GENERAL GENERAL) GENERAL)) 
(DE PV_TIMES1 (U V W)
    (COND ((NULL U) W) (T (PV_TIMES1 (CDR U) V (PV_TIMES2 (CAR U) V W))))) 
(PUT 'PV_TIMES2 'NUMBER-OF-ARGS 3) 
(PUT 'PV_TIMES2 'DEFINED-ON-LINE '108) 
(PUT 'PV_TIMES2 'DEFINED-IN-FILE 'ATENSOR/PVECTOR.RED) 
(PUT 'PV_TIMES2 'PROCEDURE_TYPE
     '(ARROW (TIMES GENERAL GENERAL GENERAL) GENERAL)) 
(DE PV_TIMES2 (X V W)
    (COND ((NULL V) W)
          (T (PV_TIMES2 X (CDR V) (PV_ADD (LIST (PV_TIMES3 X (CAR V))) W))))) 
(PUT 'PV_TIMES3 'NUMBER-OF-ARGS 2) 
(PUT 'PV_TIMES3 'DEFINED-ON-LINE '116) 
(PUT 'PV_TIMES3 'DEFINED-IN-FILE 'ATENSOR/PVECTOR.RED) 
(PUT 'PV_TIMES3 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE PV_TIMES3 (X Y) (CONS (TIMES (CAR X) (CAR Y)) (PAPPEND (CDR X) (CDR Y)))) 
(PUT 'PV_DIFFERENCE 'NUMBER-OF-ARGS 2) 
(PUT 'PV_DIFFERENCE 'DEFINED-ON-LINE '120) 
(PUT 'PV_DIFFERENCE 'DEFINED-IN-FILE 'ATENSOR/PVECTOR.RED) 
(PUT 'PV_DIFFERENCE 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE PV_DIFFERENCE (U V) (PV_PLUS U (PV_MINUS V))) 
(PUT 'PV_ZEROP 'NUMBER-OF-ARGS 1) 
(PUT 'PV_ZEROP 'DEFINED-ON-LINE '123) 
(PUT 'PV_ZEROP 'DEFINED-IN-FILE 'ATENSOR/PVECTOR.RED) 
(PUT 'PV_ZEROP 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE PV_ZEROP (U) (NULL (CDR U))) 
(PUT 'PV_ONEP 'NUMBER-OF-ARGS 1) 
(PUT 'PV_ONEP 'DEFINED-ON-LINE '126) 
(PUT 'PV_ONEP 'DEFINED-IN-FILE 'ATENSOR/PVECTOR.RED) 
(PUT 'PV_ONEP 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE PV_ONEP (U) NIL) 
(PUT 'PV_PREP 'NUMBER-OF-ARGS 1) 
(PUT 'PV_PREP 'DEFINED-ON-LINE '128) 
(PUT 'PV_PREP 'DEFINED-IN-FILE 'ATENSOR/PVECTOR.RED) 
(PUT 'PV_PREP 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE PV_PREP (U) U) 
(PUT 'PV_PRI 'NUMBER-OF-ARGS 1) 
(PUT 'PV_PRI 'DEFINED-ON-LINE '130) 
(PUT 'PV_PRI 'DEFINED-IN-FILE 'ATENSOR/PVECTOR.RED) 
(PUT 'PV_PRI 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE PV_PRI (U)
    (PROG (NOTFIRST)
      (PROG (X)
        (SETQ X (CDR U))
       LAB
        (COND ((NULL X) (RETURN NIL)))
        ((LAMBDA (X)
           (PROGN
            (COND ((AND NOTFIRST (GREATERP (CAR X) 0)) (PRIN2* " + "))
                  (T (SETQ NOTFIRST T)))
            (COND
             ((NULL (EQUAL (CAR X) 1)) (PROGN (PRIN2* (CAR X)) (PRIN2* "*"))))
            (PRIN2* 'PV)
            (PRIN2* '|(|)
            (PRIN2* (CDR X))
            (PRIN2* '|)|)
            NIL))
         (CAR X))
        (SETQ X (CDR X))
        (GO LAB)))) 
(PUT 'PV_INTEQUIV 'NUMBER-OF-ARGS 1) 
(PUT 'PV_INTEQUIV 'DEFINED-ON-LINE '140) 
(PUT 'PV_INTEQUIV 'DEFINED-IN-FILE 'ATENSOR/PVECTOR.RED) 
(PUT 'PV_INTEQUIV 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE PV_INTEQUIV (U) (COND ((ATOM (CDR U)) (CDR U)) (T NIL))) 
(PUT 'I2PVECTOR 'NUMBER-OF-ARGS 1) 
(PUT 'I2PVECTOR 'DEFINED-ON-LINE '143) 
(PUT 'I2PVECTOR 'DEFINED-IN-FILE 'ATENSOR/PVECTOR.RED) 
(PUT 'I2PVECTOR 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE I2PVECTOR (N) (CONS '|:PV| N)) 
(PUT 'PV_EXPT 'NUMBER-OF-ARGS 2) 
(PUT 'PV_EXPT 'DEFINED-ON-LINE '146) 
(PUT 'PV_EXPT 'DEFINED-IN-FILE 'ATENSOR/PVECTOR.RED) 
(PUT 'PV_EXPT 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE PV_EXPT (U N)
    (COND ((EQUAL N 1) U)
          (T (REDERR (LIST 'PV_EXPT "*** Can't powered pvector"))))) 
(PUT 'PV_QUOTIENT 'NUMBER-OF-ARGS 2) 
(PUT 'PV_QUOTIENT 'DEFINED-ON-LINE '150) 
(PUT 'PV_QUOTIENT 'DEFINED-IN-FILE 'ATENSOR/PVECTOR.RED) 
(PUT 'PV_QUOTIENT 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE PV_QUOTIENT (U C)
    (COND ((AND (PV_INTEQUIV C) (EQUAL (CDR C) 1)) U)
          (T
           (REDERR (LIST 'PV_QUOTIENT "*** pvector can't be divided by: " C))))) 
(PUT 'PV_DIVIDE 'NUMBER-OF-ARGS 2) 
(PUT 'PV_DIVIDE 'DEFINED-ON-LINE '154) 
(PUT 'PV_DIVIDE 'DEFINED-IN-FILE 'ATENSOR/PVECTOR.RED) 
(PUT 'PV_DIVIDE 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE PV_DIVIDE (U V)
    (REDERR (LIST 'PV_DIVIDE "*** Can't divide pvector by pvector"))) 
(PUT 'PV_GCD 'NUMBER-OF-ARGS 2) 
(PUT 'PV_GCD 'DEFINED-ON-LINE '157) 
(PUT 'PV_GCD 'DEFINED-IN-FILE 'ATENSOR/PVECTOR.RED) 
(PUT 'PV_GCD 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE PV_GCD (U V) (CONS (CAR U) 1)) 
(INITDMODE 'PVECTOR) 
(PUT 'PV_ADD 'NUMBER-OF-ARGS 2) 
(PUT 'PV_ADD 'DEFINED-ON-LINE '163) 
(PUT 'PV_ADD 'DEFINED-IN-FILE 'ATENSOR/PVECTOR.RED) 
(PUT 'PV_ADD 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE PV_ADD (V1 V2)
    (COND ((NULL V1) V2) ((NULL V2) V1)
          (T
           (PROG (R H)
             (PROG ()
              WHILELABEL
               (COND ((NOT (OR V1 V2)) (RETURN NIL)))
               (COND
                ((AND V1 V2 (EQUAL (CDAR V1) (CDAR V2)))
                 (PROGN
                  (SETQ H (PLUS (CAAR V1) (CAAR V2)))
                  (COND
                   ((NULL (EQUAL H 0)) (SETQ R (CONS (CONS H (CDAR V1)) R))))
                  (SETQ V1 (CDR V1))
                  (SETQ V2 (CDR V2))
                  NIL))
                ((OR (AND V1 (NULL V2))
                     (AND V1 V2 (GREATERP (CDAR V1) (CDAR V2))))
                 (PROGN (SETQ R (CONS (CAR V1) R)) (SETQ V1 (CDR V1))))
                (T (PROGN (SETQ R (CONS (CAR V2) R)) (SETQ V2 (CDR V2)))))
               (GO WHILELABEL))
             (RETURN (REVERSIP R)))))) 
(PUT 'PV_NEG 'NUMBER-OF-ARGS 1) 
(PUT 'PV_NEG 'DEFINED-ON-LINE '182) 
(PUT 'PV_NEG 'DEFINED-IN-FILE 'ATENSOR/PVECTOR.RED) 
(PUT 'PV_NEG 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE PV_NEG (V1)
    (PROG (R)
      (PROG ()
       WHILELABEL
        (COND ((NOT V1) (RETURN NIL)))
        (PROGN
         (SETQ R (CONS (CONS (MINUS (CAAR V1)) (CDAR V1)) R))
         (SETQ V1 (CDR V1))
         NIL)
        (GO WHILELABEL))
      (RETURN (REVERSIP R)))) 
(PUT 'PV_MULTC 'NUMBER-OF-ARGS 2) 
(PUT 'PV_MULTC 'DEFINED-ON-LINE '193) 
(PUT 'PV_MULTC 'DEFINED-IN-FILE 'ATENSOR/PVECTOR.RED) 
(PUT 'PV_MULTC 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE PV_MULTC (V C)
    (COND ((OR (EQUAL C 0) (NULL V)) NIL) ((EQUAL C 1) V)
          (T
           (PROG (R)
             (PROG ()
              WHILELABEL
               (COND ((NOT V) (RETURN NIL)))
               (PROGN
                (COND
                 ((NULL (EQUAL (CAAR V) 0))
                  (SETQ R (CONS (CONS (TIMES C (CAAR V)) (CDAR V)) R))))
                (SETQ V (CDR V))
                NIL)
               (GO WHILELABEL))
             (RETURN (REVERSIP R)))))) 
(PUT 'PV_SORT 'NUMBER-OF-ARGS 1) 
(PUT 'PV_SORT 'DEFINED-ON-LINE '206) 
(PUT 'PV_SORT 'DEFINED-IN-FILE 'ATENSOR/PVECTOR.RED) 
(PUT 'PV_SORT 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE PV_SORT (V) (COND ((NULL V) NIL) (T (PV_SORT1 (CDR V) (LIST (CAR V)))))) 
(PUT 'PV_SORT1 'NUMBER-OF-ARGS 2) 
(PUT 'PV_SORT1 'DEFINED-ON-LINE '210) 
(PUT 'PV_SORT1 'DEFINED-IN-FILE 'ATENSOR/PVECTOR.RED) 
(PUT 'PV_SORT1 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE PV_SORT1 (V V1)
    (COND ((NULL V) (REVERSIP V1))
          ((LESSP (CDAR V) (CDAR V1)) (PV_SORT1 (CDR V) (CONS (CAR V) V1)))
          (T (PV_SORT1 (CDR V) (PV_SORT2 (CAR V) V1))))) 
(PUT 'PV_SORT2 'NUMBER-OF-ARGS 2) 
(PUT 'PV_SORT2 'DEFINED-ON-LINE '215) 
(PUT 'PV_SORT2 'DEFINED-IN-FILE 'ATENSOR/PVECTOR.RED) 
(PUT 'PV_SORT2 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE PV_SORT2 (X V1) (PROGN (PV_SORT2A X V1) V1)) 
(PUT 'PV_SORT2A 'NUMBER-OF-ARGS 2) 
(PUT 'PV_SORT2A 'DEFINED-ON-LINE '218) 
(PUT 'PV_SORT2A 'DEFINED-IN-FILE 'ATENSOR/PVECTOR.RED) 
(PUT 'PV_SORT2A 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE PV_SORT2A (X V1)
    (COND
     ((NULL (CDR V1))
      (COND ((GREATERP (CDR X) (CDAR V1)) (RPLACD V1 (LIST X)))
            (T
             ((LAMBDA (W) (RPLACD (RPLACA V1 X) W))
              (CONS (CAR V1) (CDR V1))))))
     ((GREATERP (CDR X) (CDAR V1)) (PV_SORT2A X (CDR V1)))
     (T ((LAMBDA (W) (RPLACD (RPLACA V1 X) W)) (CONS (CAR V1) (CDR V1)))))) 
(PUT 'PV_COMPRESS 'NUMBER-OF-ARGS 1) 
(PUT 'PV_COMPRESS 'DEFINED-ON-LINE '228) 
(PUT 'PV_COMPRESS 'DEFINED-IN-FILE 'ATENSOR/PVECTOR.RED) 
(PUT 'PV_COMPRESS 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE PV_COMPRESS (V)
    (PROG (U)
      (PROG ()
       WHILELABEL
        (COND ((NOT V) (RETURN NIL)))
        (PROGN
         (COND ((NULL (EQUAL (CAAR V) 0)) (SETQ U (CONS (CAR V) U))))
         (SETQ V (CDR V))
         NIL)
        (GO WHILELABEL))
      (RETURN (REVERSIP U)))) 
(PUT 'PV_RENORM 'NUMBER-OF-ARGS 1) 
(PUT 'PV_RENORM 'DEFINED-ON-LINE '237) 
(PUT 'PV_RENORM 'DEFINED-IN-FILE 'ATENSOR/PVECTOR.RED) 
(PUT 'PV_RENORM 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE PV_RENORM (V)
    (COND ((NULL V) NIL)
          (T
           (PROG (R K)
             (PROG ()
              WHILELABEL
               (COND ((NOT (AND V (EQUAL (CAAR V) 0))) (RETURN NIL)))
               (SETQ V (CDR V))
               (GO WHILELABEL))
             (COND ((NULL V) (RETURN NIL)))
             (COND ((LESSP (CAAR V) 0) (SETQ V (PV_NEG V))))
             (SETQ K (CAAR V))
             (SETQ R (CDR V))
             (PROG ()
              WHILELABEL
               (COND ((NOT (AND R (NEQ K 1))) (RETURN NIL)))
               (PROGN (SETQ K (GCDF* K (CAAR R))) (SETQ R (CDR R)) NIL)
               (GO WHILELABEL))
             (SETQ R NIL)
             (PROG (X)
               (SETQ X V)
              LAB
               (COND ((NULL X) (RETURN NIL)))
               ((LAMBDA (X)
                  (COND
                   ((NULL (EQUAL (CAR X) 0))
                    (SETQ R
                            (CONS
                             (COND ((EQUAL K 1) X)
                                   (T (CONS (QUOTIENT (CAR X) K) (CDR X))))
                             R)))))
                (CAR X))
               (SETQ X (CDR X))
               (GO LAB))
             (RETURN (REVERSIP R)))))) 
(PUT 'PAPPL_PV 'NUMBER-OF-ARGS 2) 
(PUT 'PAPPL_PV 'DEFINED-ON-LINE '258) 
(PUT 'PAPPL_PV 'DEFINED-IN-FILE 'ATENSOR/PVECTOR.RED) 
(PUT 'PAPPL_PV 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE PAPPL_PV (P V)
    (PV_SORT
     (PROG (X FORALL-RESULT FORALL-ENDPTR)
       (SETQ X V)
       (COND ((NULL X) (RETURN NIL)))
       (SETQ FORALL-RESULT
               (SETQ FORALL-ENDPTR
                       (CONS
                        ((LAMBDA (X) (CONS (CAR X) (PAPPL0 P (CDR X))))
                         (CAR X))
                        NIL)))
      LOOPLABEL
       (SETQ X (CDR X))
       (COND ((NULL X) (RETURN FORALL-RESULT)))
       (RPLACD FORALL-ENDPTR
               (CONS ((LAMBDA (X) (CONS (CAR X) (PAPPL0 P (CDR X)))) (CAR X))
                     NIL))
       (SETQ FORALL-ENDPTR (CDR FORALL-ENDPTR))
       (GO LOOPLABEL)))) 
(PUT 'PV_APPLP 'NUMBER-OF-ARGS 2) 
(PUT 'PV_APPLP 'DEFINED-ON-LINE '261) 
(PUT 'PV_APPLP 'DEFINED-IN-FILE 'ATENSOR/PVECTOR.RED) 
(PUT 'PV_APPLP 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE PV_APPLP (V P)
    (PV_SORT
     (PROG (X FORALL-RESULT FORALL-ENDPTR)
       (SETQ X V)
       (COND ((NULL X) (RETURN NIL)))
       (SETQ FORALL-RESULT
               (SETQ FORALL-ENDPTR
                       (CONS
                        ((LAMBDA (X) (CONS (CAR X) (PAPPL0 (CDR X) P)))
                         (CAR X))
                        NIL)))
      LOOPLABEL
       (SETQ X (CDR X))
       (COND ((NULL X) (RETURN FORALL-RESULT)))
       (RPLACD FORALL-ENDPTR
               (CONS ((LAMBDA (X) (CONS (CAR X) (PAPPL0 (CDR X) P))) (CAR X))
                     NIL))
       (SETQ FORALL-ENDPTR (CDR FORALL-ENDPTR))
       (GO LOOPLABEL)))) 
(PUT 'PV_UPRIGHT 'NUMBER-OF-ARGS 2) 
(PUT 'PV_UPRIGHT 'DEFINED-ON-LINE '264) 
(PUT 'PV_UPRIGHT 'DEFINED-IN-FILE 'ATENSOR/PVECTOR.RED) 
(PUT 'PV_UPRIGHT 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE PV_UPRIGHT (V D)
    (PROG (X FORALL-RESULT FORALL-ENDPTR)
      (SETQ X V)
      (COND ((NULL X) (RETURN NIL)))
      (SETQ FORALL-RESULT
              (SETQ FORALL-ENDPTR
                      (CONS
                       ((LAMBDA (X) (CONS (CAR X) (PUPRIGHT (CDR X) D)))
                        (CAR X))
                       NIL)))
     LOOPLABEL
      (SETQ X (CDR X))
      (COND ((NULL X) (RETURN FORALL-RESULT)))
      (RPLACD FORALL-ENDPTR
              (CONS ((LAMBDA (X) (CONS (CAR X) (PUPRIGHT (CDR X) D))) (CAR X))
                    NIL))
      (SETQ FORALL-ENDPTR (CDR FORALL-ENDPTR))
      (GO LOOPLABEL))) 
(PUT 'VUPLEFT 'NUMBER-OF-ARGS 2) 
(PUT 'VUPLEFT 'DEFINED-ON-LINE '267) 
(PUT 'VUPLEFT 'DEFINED-IN-FILE 'ATENSOR/PVECTOR.RED) 
(PUT 'VUPLEFT 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE VUPLEFT (V D)
    (PROG (X FORALL-RESULT FORALL-ENDPTR)
      (SETQ X V)
      (COND ((NULL X) (RETURN NIL)))
      (SETQ FORALL-RESULT
              (SETQ FORALL-ENDPTR
                      (CONS
                       ((LAMBDA (X) (CONS (CAR X) (PUPLEFT (CDR X) D)))
                        (CAR X))
                       NIL)))
     LOOPLABEL
      (SETQ X (CDR X))
      (COND ((NULL X) (RETURN FORALL-RESULT)))
      (RPLACD FORALL-ENDPTR
              (CONS ((LAMBDA (X) (CONS (CAR X) (PUPLEFT (CDR X) D))) (CAR X))
                    NIL))
      (SETQ FORALL-ENDPTR (CDR FORALL-ENDPTR))
      (GO LOOPLABEL))) 
(ENDMODULE) 