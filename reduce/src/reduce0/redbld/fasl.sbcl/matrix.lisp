(cl:declaim (cl:optimize cl:debug cl:safety))
(cl:declaim (sb-ext:muffle-conditions sb-ext:compiler-note cl:style-warning))
(MODULE (LIST 'MATRIX)) 
(CREATE-PACKAGE
 '(MATRIX MATSM MATPRI MATPROC EXTOPS BAREISS DET GLMAT NULLSP RANK NESTDOM
          RESULTNT BRSLTNT_BMAP COFACTOR)
 NIL) 
(FLUID '(*SUB2 SUBFG*)) 
(GLOBAL '(NXTSYM*)) 
(PUT 'MATRIX 'NUMBER-OF-ARGS 1) 
(PUT 'MATRIX 'DEFINED-ON-LINE '41) 
(PUT 'MATRIX 'DEFINED-IN-FILE 'MATRIX/MATRIX.RED) 
(PUT 'MATRIX 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE MATRIX (U)
    (PROG (W X Y)
      (PROG (J)
        (SETQ J U)
       LAB
        (COND ((NULL J) (RETURN NIL)))
        ((LAMBDA (J)
           (COND
            ((ATOM J)
             (COND ((NULL (SETQ X (GETTYPE J))) (PUT J 'RTYPE 'MATRIX))
                   ((EQ X 'MATRIX)
                    (PROGN
                     (LPRIM (LIST X J "redefined"))
                     (PUT J 'RTYPE 'MATRIX)))
                   (T (TYPERR (LIST X J) "matrix"))))
            ((NOT (IDP (CAR J))) (ERRPRI2 J 'HOLD))
            ((OR (NOT (SETQ X (GETTYPE (CAR J)))) (EQ X 'MATRIX))
             (PROGN
              (COND ((NEQ (LENGTH J) 3) (TYPERR J 'MATRIX)))
              (SETQ X (REVAL_WITHOUT_MOD (CADR J)))
              (COND
               ((OR (NOT (FIXP X)) (LEQ X 0)) (TYPERR X "positive integer")))
              (SETQ Y (REVAL_WITHOUT_MOD (CADDR J)))
              (COND
               ((OR (NOT (FIXP Y)) (LEQ Y 0)) (TYPERR Y "positive integer")))
              (SETQ W NIL)
              (PROG (N)
                (SETQ N 1)
               LAB
                (COND ((MINUSP (DIFFERENCE X N)) (RETURN NIL)))
                (SETQ W (CONS (NZERO Y) W))
                (SETQ N (PLUS2 N 1))
                (GO LAB))
              (PUT (CAR J) 'RTYPE 'MATRIX)
              (PUT (CAR J) 'AVALUE (LIST 'MATRIX (CONS 'MAT W)))))
            (T (TYPERR (LIST X (CAR J)) "matrix"))))
         (CAR J))
        (SETQ J (CDR J))
        (GO LAB)))) 
(RLISTAT '(MATRIX)) 
(PUT 'NZERO 'NUMBER-OF-ARGS 1) 
(PUT 'NZERO 'DEFINED-ON-LINE '66) 
(PUT 'NZERO 'DEFINED-IN-FILE 'MATRIX/MATRIX.RED) 
(PUT 'NZERO 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE NZERO (N) (COND ((EQUAL N 0) NIL) (T (CONS 0 (NZERO (DIFFERENCE N 1)))))) 
(PUT 'MATSTAT 'NUMBER-OF-ARGS 0) 
(PUT 'MATSTAT 'DEFINED-ON-LINE '72) 
(PUT 'MATSTAT 'DEFINED-IN-FILE 'MATRIX/MATRIX.RED) 
(PUT 'MATSTAT 'PROCEDURE_TYPE '(ARROW UNIT GENERAL)) 
(DE MATSTAT NIL
    (PROG (X Y)
      (COND ((NOT (EQ NXTSYM* '|(|)) (SYMERR "Syntax error" NIL)))
     A
      (SCAN)
      (COND ((NOT (EQ (SCAN) '*LPAR*)) (SYMERR "Syntax error" NIL)))
      (SETQ Y (XREAD 'PAREN))
      (COND ((NOT (EQCAR Y '*COMMA*)) (SETQ Y (LIST Y)))
            (T (SETQ Y (REMCOMMA Y))))
      (SETQ X (CONS Y X))
      (COND
       ((EQ NXTSYM* '|)|)
        (RETURN (PROGN (SCAN) (SCAN) (CONS 'MAT (REVERSIP X)))))
       ((NOT (EQ NXTSYM* '|,|)) (SYMERR "Syntax error" NIL)))
      (GO A))) 
(PUT 'MAT 'STAT 'MATSTAT) 
(PUT 'FORMMAT 'NUMBER-OF-ARGS 3) 
(PUT 'FORMMAT 'DEFINED-ON-LINE '89) 
(PUT 'FORMMAT 'DEFINED-IN-FILE 'MATRIX/MATRIX.RED) 
(PUT 'FORMMAT 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL GENERAL) GENERAL)) 
(DE FORMMAT (U VARS MODE)
    (CONS 'LIST
          (CONS (MKQUOTE (CAR U))
                (PROG (X FORALL-RESULT FORALL-ENDPTR)
                  (SETQ X (CDR U))
                  (COND ((NULL X) (RETURN NIL)))
                  (SETQ FORALL-RESULT
                          (SETQ FORALL-ENDPTR
                                  (CONS
                                   ((LAMBDA (X)
                                      (CONS 'LIST (FORMLIS X VARS MODE)))
                                    (CAR X))
                                   NIL)))
                 LOOPLABEL
                  (SETQ X (CDR X))
                  (COND ((NULL X) (RETURN FORALL-RESULT)))
                  (RPLACD FORALL-ENDPTR
                          (CONS
                           ((LAMBDA (X) (CONS 'LIST (FORMLIS X VARS MODE)))
                            (CAR X))
                           NIL))
                  (SETQ FORALL-ENDPTR (CDR FORALL-ENDPTR))
                  (GO LOOPLABEL))))) 
(PUT 'MAT 'FORMFN 'FORMMAT) 
(PUT 'MAT 'I2D 'MKSCALMAT) 
(PUT 'MAT 'INVERSEFN 'MATINVERSE) 
(PUT 'MAT 'LNRSOLVEFN 'LNRSOLVE) 
(PUT 'MAT 'RTYPEFN 'QUOTEMATRIX) 
(PUT 'QUOTEMATRIX 'NUMBER-OF-ARGS 1) 
(PUT 'QUOTEMATRIX 'DEFINED-ON-LINE '103) 
(PUT 'QUOTEMATRIX 'DEFINED-IN-FILE 'MATRIX/MATRIX.RED) 
(PUT 'QUOTEMATRIX 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE QUOTEMATRIX (U) 'MATRIX) 
(FLAG '(MAT TP) 'MATFLG) 
(FLAG '(MAT) 'NONCOMMUTING) 
(PUT 'MAT 'PRIFN 'MATPRI) 
(FLAG '(MAT) 'STRUCT) 
(PUT 'MATRIX 'FN 'MATFLG) 
(PUT 'MATRIX 'EVFN 'MATSM*) 
(FLAG '(MATRIX) 'SPRIFN) 
(PUT 'MATRIX 'TAG 'MAT) 
(PUT 'MATRIX 'LENGTHFN 'MATLENGTH) 
(PUT 'MATRIX 'GETELEMFN 'GETMATELEM) 
(PUT 'MATRIX 'SETELEMFN 'SETMATELEM) 
(PUT 'MKSCALMAT 'NUMBER-OF-ARGS 1) 
(PUT 'MKSCALMAT 'DEFINED-ON-LINE '127) 
(PUT 'MKSCALMAT 'DEFINED-IN-FILE 'MATRIX/MATRIX.RED) 
(PUT 'MKSCALMAT 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE MKSCALMAT (U) (LIST 'MAT (LIST U))) 
(PUT 'GETMATELEM 'NUMBER-OF-ARGS 1) 
(PUT 'GETMATELEM 'DEFINED-ON-LINE '131) 
(PUT 'GETMATELEM 'DEFINED-IN-FILE 'MATRIX/MATRIX.RED) 
(PUT 'GETMATELEM 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE GETMATELEM (U)
    (PROG (X Y)
      (COND ((NEQ (LENGTH U) 3) (TYPERR U "matrix element")))
      (SETQ X (GET (CAR U) 'AVALUE))
      (COND
       ((OR (NULL X) (NOT (EQ (CAR X) 'MATRIX))) (TYPERR (CAR U) "matrix"))
       ((NOT (EQCAR (SETQ X (CADR X)) 'MAT))
        (COND ((IDP X) (RETURN (GETMATELEM (CONS X (CDR U)))))
              (T (RERROR 'MATRIX 1 (LIST "Matrix" (CAR U) "not set"))))))
      (SETQ Y (REVAL_WITHOUT_MOD (CADR U)))
      (COND ((OR (NOT (FIXP Y)) (LEQ Y 0)) (TYPERR Y "positive integer")))
      (COND
       ((GREATERP Y (LENGTH (CDR X)))
        (RERROR 'MATRIX 23 (LIST "Matrix row number" Y "out of range"))))
      (SETQ X (NTH (CDR X) Y))
      (SETQ Y (REVAL_WITHOUT_MOD (CADDR U)))
      (COND ((OR (NOT (FIXP Y)) (LEQ Y 0)) (TYPERR Y "positive integer")))
      (COND
       ((GREATERP Y (LENGTH X))
        (RERROR 'MATRIX 24 (LIST "Matrix column number" Y "out of range"))))
      (RETURN (NTH X Y)))) 
(PUT 'SETMATELEM 'NUMBER-OF-ARGS 2) 
(PUT 'SETMATELEM 'DEFINED-ON-LINE '151) 
(PUT 'SETMATELEM 'DEFINED-IN-FILE 'MATRIX/MATRIX.RED) 
(PUT 'SETMATELEM 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE SETMATELEM (U V)
    (PROG (X Y)
      (COND ((NEQ (LENGTH U) 3) (TYPERR U "matrix element")))
      (SETQ X (GET (CAR U) 'AVALUE))
      (COND
       ((OR (NULL X) (NOT (EQ (CAR X) 'MATRIX))) (TYPERR (CAR U) "matrix"))
       ((NOT (EQCAR (SETQ X (CADR X)) 'MAT))
        (RERROR 'MATRIX 10 (LIST "Matrix" (CAR U) "not set"))))
      (SETQ Y (REVAL_WITHOUT_MOD (CADR U)))
      (COND ((OR (NOT (FIXP Y)) (LEQ Y 0)) (TYPERR Y "positive integer")))
      (COND
       ((GREATERP Y (LENGTH (CDR X)))
        (RERROR 'MATRIX 25 (LIST "Matrix row number" Y "out of range"))))
      (SETQ X (NTH (CDR X) Y))
      (SETQ Y (REVAL_WITHOUT_MOD (CADDR U)))
      (COND ((OR (NOT (FIXP Y)) (LEQ Y 0)) (TYPERR Y "positive integer")))
      (COND
       ((GREATERP Y (LENGTH X))
        (RERROR 'MATRIX 26 (LIST "Matrix column number" Y "out of range"))))
      (RETURN (RPLACA (PNTH X Y) V)))) 
(PUT 'MATLENGTH 'NUMBER-OF-ARGS 1) 
(PUT 'MATLENGTH 'DEFINED-ON-LINE '168) 
(PUT 'MATLENGTH 'DEFINED-IN-FILE 'MATRIX/MATRIX.RED) 
(PUT 'MATLENGTH 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE MATLENGTH (U)
    (COND ((NOT (EQCAR U 'MAT)) (RERROR 'MATRIX 2 (LIST "Matrix" U "not set")))
          (T (LIST 'LIST (LENGTH (CDR U)) (LENGTH (CADR U)))))) 
(PUT 'MATRIXMAP 'NUMBER-OF-ARGS 2) 
(PUT 'MATRIXMAP 'DEFINED-ON-LINE '174) 
(PUT 'MATRIXMAP 'DEFINED-IN-FILE 'MATRIX/MATRIX.RED) 
(PUT 'MATRIXMAP 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE MATRIXMAP (U V)
    (COND
     ((FLAGP (CAR U) 'MATMAPFN)
      (MATSM*1
       (PROG (J FORALL-RESULT FORALL-ENDPTR)
         (SETQ J (MATSM (CADR U)))
         (COND ((NULL J) (RETURN NIL)))
         (SETQ FORALL-RESULT
                 (SETQ FORALL-ENDPTR
                         (CONS
                          ((LAMBDA (J)
                             (PROG (K FORALL-RESULT FORALL-ENDPTR)
                               (SETQ K J)
                               (COND ((NULL K) (RETURN NIL)))
                               (SETQ FORALL-RESULT
                                       (SETQ FORALL-ENDPTR
                                               (CONS
                                                ((LAMBDA (K)
                                                   (SIMP*
                                                    (CONS (CAR U)
                                                          (CONS (MK*SQ K)
                                                                (CDDR U)))))
                                                 (CAR K))
                                                NIL)))
                              LOOPLABEL
                               (SETQ K (CDR K))
                               (COND ((NULL K) (RETURN FORALL-RESULT)))
                               (RPLACD FORALL-ENDPTR
                                       (CONS
                                        ((LAMBDA (K)
                                           (SIMP*
                                            (CONS (CAR U)
                                                  (CONS (MK*SQ K) (CDDR U)))))
                                         (CAR K))
                                        NIL))
                               (SETQ FORALL-ENDPTR (CDR FORALL-ENDPTR))
                               (GO LOOPLABEL)))
                           (CAR J))
                          NIL)))
        LOOPLABEL
         (SETQ J (CDR J))
         (COND ((NULL J) (RETURN FORALL-RESULT)))
         (RPLACD FORALL-ENDPTR
                 (CONS
                  ((LAMBDA (J)
                     (PROG (K FORALL-RESULT FORALL-ENDPTR)
                       (SETQ K J)
                       (COND ((NULL K) (RETURN NIL)))
                       (SETQ FORALL-RESULT
                               (SETQ FORALL-ENDPTR
                                       (CONS
                                        ((LAMBDA (K)
                                           (SIMP*
                                            (CONS (CAR U)
                                                  (CONS (MK*SQ K) (CDDR U)))))
                                         (CAR K))
                                        NIL)))
                      LOOPLABEL
                       (SETQ K (CDR K))
                       (COND ((NULL K) (RETURN FORALL-RESULT)))
                       (RPLACD FORALL-ENDPTR
                               (CONS
                                ((LAMBDA (K)
                                   (SIMP*
                                    (CONS (CAR U) (CONS (MK*SQ K) (CDDR U)))))
                                 (CAR K))
                                NIL))
                       (SETQ FORALL-ENDPTR (CDR FORALL-ENDPTR))
                       (GO LOOPLABEL)))
                   (CAR J))
                  NIL))
         (SETQ FORALL-ENDPTR (CDR FORALL-ENDPTR))
         (GO LOOPLABEL))))
     ((FLAGP (CAR U) 'MATFN) (REVAL2 U V))
     (T (TYPERR (CAR U) "matrix operator")))) 
(PUT 'MATRIX 'AGGREGATEFN 'MATRIXMAP) 
(FLAG '(ABS DF INT TAYLOR) 'MATMAPFN) 
(FLAG '(DET TRACE) 'MATFN) 
(ENDMODULE) 