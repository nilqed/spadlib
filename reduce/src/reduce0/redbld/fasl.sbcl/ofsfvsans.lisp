(cl:declaim (cl:optimize cl:debug cl:safety))
(cl:declaim (sb-ext:muffle-conditions sb-ext:compiler-note cl:style-warning))
(MODULE (LIST 'OFSFVSANS)) 
(REVISION 'OFSFVSANS
          "$Id: ofsfvsans.red 5986 2021-08-28 13:35:27Z thomas-sturm $") 
(COPYRIGHT 'OFSFVSANS "(c) 2017 M. Kosta, T. Sturm") 
(FLUID '(DEG-TYPE-CODE-ALIST*)) 
(PUT 'VSDB_COMPUTEANS 'NUMBER-OF-ARGS 1) 
(DE VSDB_COMPUTEANS (DB)
    (PROG (ND)
      (COND ((NOT (EQN (VSCO_LENGTH (VSDB_SC DB)) 1)) (RETURN NIL)))
      (SETQ ND (VSDB_SCGET DB))
      (COND ((NEQ (VSND_F ND) 'TRUE) (RETURN NIL)))
      (COND (*RLVERBOSE (IOTO_PRIN2T "++++ Computing answers")))
      (RETURN (VSDB_ANS-MAIN DB ND NIL)))) 
(PUT 'VSDB_ANS-MAIN 'NUMBER-OF-ARGS 3) 
(DE VSDB_ANS-MAIN (DB ND CTX)
    (PROG (VS V ANU)
      (SETQ VS (VSND_VS ND))
      (COND ((NULL VS) (RETURN CTX)))
      (SETQ V (VSVS_V VS))
      (COND (*RLVERBOSE (IOTO_PRIN2T (LIST "++++ Computing answer for " V))))
      (COND ((VSVS_ARP VS) (SETQ ANU (VSND_ANS-ARB ND CTX))))
      (COND ((VSVS_DGP VS) (SETQ ANU (VSND_ANS-DGS ND CTX))))
      (COND ((VSVS_TSP VS) (SETQ ANU (VSND_ANS-TP ND CTX))))
      (RETURN (VSDB_ANS-MAIN DB (VSND_PARENT ND) (CONS (CONS V ANU) CTX))))) 
(PUT 'VSND_ANS-ARB 'NUMBER-OF-ARGS 2) 
(DE VSND_ANS-ARB (ND CTX)
    (PROG (V)
      (COND (NIL NIL))
      (SETQ V (VSVS_V (VSND_VS ND)))
      (RETURN (ANU_FROMRAT V (RAT_0))))) 
(PUT 'VSND_ANS-DGS 'NUMBER-OF-ARGS 2) 
(DE VSND_ANS-DGS (ND CTX)
    (PROG (V SV SVANU AEX BND G)
      (SETQ G 0)
      (COND (NIL NIL))
      (SETQ V (VSVS_V (VSND_VS ND)))
      (SETQ G (VSDG_G (VSND_VS ND)))
      (SETQ SV (VSDG_SV (VSND_VS ND)))
      (COND (NIL NIL))
      (SETQ SVANU (CDR (ATSOC SV CTX)))
      (SETQ AEX
              (AEX_FROMSF
               (ADDF (EXPTF (LIST (CONS (CONS V 1) 1)) G)
                     (NEGF (LIST (CONS (CONS SV 1) 1))))))
      (SETQ AEX (AEX_BIND AEX SV SVANU))
      (SETQ BND
              (RAT_MAX (RAT_ABS (IV_LB (ANU_IV SVANU)))
               (RAT_ABS (IV_RB (ANU_IV SVANU)))))
      (SETQ BND (RAT_ADD BND (RAT_1)))
      (COND ((EVENP G) (RETURN (ANU_MK AEX (IV_MK (RAT_0) BND)))))
      (RETURN (ANU_MK AEX (IV_MK (RAT_NEG BND) BND))))) 
(PUT 'VSND_ANS-TP 'NUMBER-OF-ARGS 2) 
(DE VSND_ANS-TP (ND CTX)
    (PROG (VS V TP)
      (SETQ VS (VSND_VS ND))
      (COND (NIL NIL))
      (SETQ V (VSVS_V VS))
      (SETQ TP (VSTS_TP VS))
      (COND
       ((MEMQ (VSTP_NP TP) '(MINF PINF)) (RETURN (VSND_ANS-INFINITY ND CTX))))
      (COND
       ((MEMQ (VSTP_NP TP) '(MEPS PEPS)) (RETURN (VSND_ANS-EPSILON ND CTX))))
      (COND (NIL NIL))
      (RETURN (VSND_ANS-ROOT ND CTX)))) 
(PUT 'VSND_ANS-INFINITY 'NUMBER-OF-ARGS 2) 
(DE VSND_ANS-INFINITY (ND CTX)
    (PROG (V F INF TVAL VVAL)
      (SETQ VVAL 0)
      (SETQ V (VSVS_V (VSND_VS ND)))
      (SETQ F (VSND_F (VSND_PARENT ND)))
      (SETQ INF (VSTP_NP (VSTS_TP (VSND_VS ND))))
      (COND (NIL NIL))
      (SETQ VVAL (COND ((EQ INF 'MINF) (MINUS 1)) (T 1)))
      (PROG ()
       REPEATLABEL
        (PROGN
         (SETQ VVAL (TIMES 2 VVAL))
         (SETQ TVAL
                 (QFF_EVALATP F
                  (CONS (CONS V (ANU_FROMRAT V (CONS VVAL 1))) CTX))))
        (COND ((NOT (EQ TVAL 'TRUE)) (GO REPEATLABEL))))
      (RETURN (ANU_FROMRAT V (CONS VVAL 1))))) 
(PUT 'VSND_ANS-EPSILON 'NUMBER-OF-ARGS 2) 
(DE VSND_ANS-EPSILON (ND CTX)
    (PROG (V F ROOT SC EPS STP LB RB VVAL TVAL)
      (SETQ V (VSVS_V (VSND_VS ND)))
      (SETQ F (VSND_F (VSND_PARENT ND)))
      (SETQ ROOT (VSND_ANS-ROOT ND CTX))
      (SETQ SC (AEX_STDSTURMCHAIN (ANU_DP ROOT) V))
      (SETQ EPS (VSTP_NP (VSTS_TP (VSND_VS ND))))
      (SETQ STP (RAT_1))
      (PROG ()
       REPEATLABEL
        (PROGN
         (ANU_REFINEIP ROOT SC)
         (SETQ LB (IV_LB (ANU_IV ROOT)))
         (SETQ RB (IV_RB (ANU_IV ROOT)))
         (COND
          ((RAT_EQ LB RB)
           (PROGN
            (SETQ VVAL
                    (COND ((EQ EPS 'MEPS) (RAT_MINUS LB STP))
                          (T (RAT_ADD LB STP))))
            (SETQ STP (RAT_QUOT STP (RAT_FROMNUM 2)))))
          (T (PROGN (SETQ VVAL (COND ((EQ EPS 'MEPS) LB) (T RB))))))
         (SETQ TVAL (QFF_EVALATP F (CONS (CONS V (ANU_FROMRAT V VVAL)) CTX))))
        (COND ((NOT (EQ TVAL 'TRUE)) (GO REPEATLABEL))))
      (RETURN (ANU_FROMRAT V VVAL)))) 
(PUT 'VSND_ANS-ROOT 'NUMBER-OF-ARGS 2) 
(DE VSND_ANS-ROOT (ND CTX)
    (PROG (V TP PR AEX RTCODE RINDEX)
      (SETQ RTCODE 0)
      (SETQ RINDEX 0)
      (COND (NIL NIL))
      (COND (NIL NIL))
      (SETQ V (VSVS_V (VSND_VS ND)))
      (SETQ TP (VSTS_TP (VSND_VS ND)))
      (SETQ PR (VSTP_PR TP))
      (SETQ AEX (AEX_FROMSF (VSPR_F (VSTP_PR TP))))
      (PROG (PAIR)
        (SETQ PAIR CTX)
       LAB
        (COND ((NULL PAIR) (RETURN NIL)))
        ((LAMBDA (PAIR) (SETQ AEX (AEX_BIND AEX (CAR PAIR) (CDR PAIR))))
         (CAR PAIR))
        (SETQ PAIR (CDR PAIR))
        (GO LAB))
      (SETQ RTCODE
              (CDR
               (ASSOC (CONS (VSPR_D PR) (AEX_REALTYPE AEX))
                      DEG-TYPE-CODE-ALIST*)))
      (SETQ RINDEX (CDR (ATSOC RTCODE (VSPR_RSL PR))))
      (RETURN (NTH (AEX_FINDROOTS AEX V) RINDEX)))) 
(PUT 'QFF_EVALATP 'NUMBER-OF-ARGS 2) 
(DE QFF_EVALATP (F CTX)
    (PROG (SP VARL)
      (SETQ SP
              (PROG (PR FORALL-RESULT FORALL-ENDPTR)
                (SETQ PR CTX)
                (COND ((NULL PR) (RETURN NIL)))
                (SETQ FORALL-RESULT
                        (SETQ FORALL-ENDPTR
                                (CONS ((LAMBDA (PR) (CDR PR)) (CAR PR)) NIL)))
               LOOPLABEL
                (SETQ PR (CDR PR))
                (COND ((NULL PR) (RETURN FORALL-RESULT)))
                (RPLACD FORALL-ENDPTR
                        (CONS ((LAMBDA (PR) (CDR PR)) (CAR PR)) NIL))
                (SETQ FORALL-ENDPTR (CDR FORALL-ENDPTR))
                (GO LOOPLABEL)))
      (SETQ VARL
              (PROG (PR FORALL-RESULT FORALL-ENDPTR)
                (SETQ PR CTX)
                (COND ((NULL PR) (RETURN NIL)))
                (SETQ FORALL-RESULT
                        (SETQ FORALL-ENDPTR
                                (CONS ((LAMBDA (PR) (CAR PR)) (CAR PR)) NIL)))
               LOOPLABEL
                (SETQ PR (CDR PR))
                (COND ((NULL PR) (RETURN FORALL-RESULT)))
                (RPLACD FORALL-ENDPTR
                        (CONS ((LAMBDA (PR) (CAR PR)) (CAR PR)) NIL))
                (SETQ FORALL-ENDPTR (CDR FORALL-ENDPTR))
                (GO LOOPLABEL)))
      (RETURN (OFSF_EVALQFF F SP (REVERSE VARL))))) 
(ENDMODULE) 