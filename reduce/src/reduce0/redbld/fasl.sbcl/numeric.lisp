(cl:declaim (cl:optimize cl:debug cl:safety))
(cl:declaim (sb-ext:muffle-conditions sb-ext:compiler-note cl:style-warning))
(MODULE (LIST 'NUMERIC)) 
(CREATE-PACKAGE
 '(NUMERIC NUMEVAL NUMSOLVE GAUSS NEWTON STEEPSTD BOUNDS NUMINT NUMFIT CHEBYSH
   RUNGEKU)
 '(CONTRIB NUMERIC)) 
(IMPORTS
 (LIST 'ADDSQ 'ACCURACYCONTROL 'BOUNDSERR 'DENR 'DOMAINPA 'ERRORP 'IMPARTF
       'LPRIM 'MATRIX 'MKQUOTE 'MKVECT 'MINUSF 'MULTSQ 'NEGSQ 'NUMR 'PRECISION
       'PREPF 'PREPSQ 'REDERR 'REVAL 'SETMATELEM 'SETMODE 'SIMP 'SIMP*
       'SQGREATERP 'SUBSQ 'SUBTRS 'SUBTRSQ 'TYPERR 'VALUECHK 'WRITEPRI
       '|:DIFFERENCE| '|:QUOTIENT| '|::QUOTIENT| '|:RECIP| '*EQN2A)) 
(EXPORTS
 (LIST 'BOUNDSEVAL 'BOUNDSEVALRD 'CHEBYSHEVEVAL 'FITEVAL 'INTRDEVAL
       'RDSOLVEEVAL 'RUNGEKUTTAEVAL 'RDMINEVAL)) 
(FLUID '(*NOEQUIV ACCURACY* MINUS-INFINITY*)) 
(GLOBAL '(ITERATIONS* *TRNUMERIC)) 
(SWITCH (LIST 'TRNUMERIC)) 
(PROG (*MSG) (NEWTOK '((|.| |.|) *INTERVAL*)) (PUT '*INTERVAL* 'PRTCH '| .. |)) 
(COND
 ((NULL (GET '*INTERVAL* 'SIMPFN))
  (PROGN
   (PRECEDENCE (LIST '*INTERVAL* 'OR))
   (AEVAL (OPERATOR (LIST '*INTERVAL*)))
   NIL))) 
(SETQ MINUS-INFINITY* '(MINUS INFINITY)) 
(PUT 'EVALGREATERPX 'NUMBER-OF-ARGS 2) 
(PUT 'EVALGREATERPX 'DEFINED-ON-LINE '91) 
(PUT 'EVALGREATERPX 'DEFINED-IN-FILE 'NUMERIC/NUMERIC.RED) 
(PUT 'EVALGREATERPX 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE EVALGREATERPX (A B)
    (COND ((OR (EQUAL A MINUS-INFINITY*) (EQUAL B 'INFINITY)) NIL)
          (T
           (OR (EQUAL A 'INFINITY) (EQUAL B MINUS-INFINITY*)
               (EVALGREATERP A B))))) 
(PUT 'MKINTERVAL 'NUMBER-OF-ARGS 2) 
(PUT 'MKINTERVAL 'DEFINED-ON-LINE '95) 
(PUT 'MKINTERVAL 'DEFINED-IN-FILE 'NUMERIC/NUMERIC.RED) 
(PUT 'MKINTERVAL 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE MKINTERVAL (U V) (LIST '*INTERVAL* U V)) 
(PUT '|DM:| 'DEFINED-ON-LINE '104) 
(PUT '|DM:| 'DEFINED-IN-FILE 'NUMERIC/NUMERIC.RED) 
(PUT '|DM:| 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DM |DM:| (U)
    (SUBLA
     '((PLUS2 . |:PLUS|) (TIMES2 . |:TIMES|) (PLUS . |:PLUSN|)
       (TIMES . |:TIMESN|) (QUOTIENT . |::QUOTIENT|)
       (DIFFERENCE . |:DIFFERENCE|) (MINUS . |:MINUS|) (MINUSP . |:MINUSP|)
       (ZEROP . |:ZEROP|) (LESSP LAMBDA (A B) (|:MINUSP| (|:DIFFERENCE| A B)))
       (GREATERP LAMBDA (A B) (|:MINUSP| (|:DIFFERENCE| B A)))
       (LEQ LAMBDA (A B) (NOT (|:MINUSP| (|:DIFFERENCE| B A))))
       (GEQ LAMBDA (A B) (NOT (|:MINUSP| (|:DIFFERENCE| A B))))
       (SQRT . NUM-SQRTF) (ABS . ABSF) (MIN2 . |DM:MIN|) (MAX2 . |DM:MAX|)
       (MIN . |DM:MIN|) (MAX . |DM:MAX|))
     (CADR U))) 
(PUT '|:PLUSN| 'DEFINED-ON-LINE '126) 
(PUT '|:PLUSN| 'DEFINED-IN-FILE 'NUMERIC/NUMERIC.RED) 
(PUT '|:PLUSN| 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DM |:PLUSN| (U)
    (COND ((NULL (CDDR U)) (CADR U))
          (T (LIST '|:PLUS| (CADR U) (CONS '|:PLUSN| (CDDR U)))))) 
(PUT '|:TIMESN| 'DEFINED-ON-LINE '130) 
(PUT '|:TIMESN| 'DEFINED-IN-FILE 'NUMERIC/NUMERIC.RED) 
(PUT '|:TIMESN| 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DM |:TIMESN| (U)
    (COND ((NULL (CDDR U)) (CADR U))
          (T (LIST '|:TIMES| (CADR U) (CONS '|:TIMESN| (CDDR U)))))) 
(ENDMODULE) 