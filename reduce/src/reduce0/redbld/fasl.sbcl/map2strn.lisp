(cl:declaim (cl:optimize cl:debug cl:safety))
(cl:declaim (sb-ext:muffle-conditions sb-ext:compiler-note cl:style-warning))
(MODULE (LIST 'MAP2STRN)) 
(EXPORTS (LIST 'COLOR-STRAND 'CONTRACT-STRAND)) 
(IMPORTS (LIST 'NIL)) 
(PUT 'CONSTIMES 'NUMBER-OF-ARGS 1) 
(PUT 'CONSTIMES 'DEFINED-ON-LINE '38) 
(PUT 'CONSTIMES 'DEFINED-IN-FILE 'HEPHYS/MAP2STRN.RED) 
(PUT 'CONSTIMES 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE CONSTIMES (U) (CSTIMES U NIL)) 
(PUT 'CSTIMES 'NUMBER-OF-ARGS 2) 
(PUT 'CSTIMES 'DEFINED-ON-LINE '44) 
(PUT 'CSTIMES 'DEFINED-IN-FILE 'HEPHYS/MAP2STRN.RED) 
(PUT 'CSTIMES 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE CSTIMES (U S)
    (COND
     ((NULL U)
      (COND ((NULL S) 1) ((NULL (CDR S)) (CAR S)) (T (CONS 'TIMES S))))
     ((EQUAL (CAR U) 1) (CSTIMES (CDR U) S))
     (T (CSTIMES (CDR U) (CONS (CAR U) S))))) 
(PUT 'CONSRECIP 'NUMBER-OF-ARGS 1) 
(PUT 'CONSRECIP 'DEFINED-ON-LINE '52) 
(PUT 'CONSRECIP 'DEFINED-IN-FILE 'HEPHYS/MAP2STRN.RED) 
(PUT 'CONSRECIP 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE CONSRECIP (U)
    (COND ((OR (EQUAL (CAR U) 1) (EQUAL (CAR U) (MINUS 1))) (CAR U))
          (T (CONS 'RECIP U)))) 
(PUT 'LISTQUOTIENT 'NUMBER-OF-ARGS 2) 
(PUT 'LISTQUOTIENT 'DEFINED-ON-LINE '57) 
(PUT 'LISTQUOTIENT 'DEFINED-IN-FILE 'HEPHYS/MAP2STRN.RED) 
(PUT 'LISTQUOTIENT 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE LISTQUOTIENT (U V)
    (COND ((EQUAL V 1) U) ((EQUAL V U) 1) (T (LIST 'QUOTIENT U V)))) 
(PUT 'CONSPLUS 'NUMBER-OF-ARGS 1) 
(PUT 'CONSPLUS 'DEFINED-ON-LINE '64) 
(PUT 'CONSPLUS 'DEFINED-IN-FILE 'HEPHYS/MAP2STRN.RED) 
(PUT 'CONSPLUS 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE CONSPLUS (U) (CSPLUS U NIL)) 
(PUT 'CSPLUS 'NUMBER-OF-ARGS 2) 
(PUT 'CSPLUS 'DEFINED-ON-LINE '70) 
(PUT 'CSPLUS 'DEFINED-IN-FILE 'HEPHYS/MAP2STRN.RED) 
(PUT 'CSPLUS 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE CSPLUS (U S)
    (COND
     ((NULL U) (COND ((NULL S) 0) ((NULL (CDR S)) (CAR S)) (T (CONS 'PLUS S))))
     ((EQUAL (CAR U) 0) (CSPLUS (CDR U) S))
     (T (CSPLUS (CDR U) (CONS (CAR U) S))))) 
(PUT 'MAP_-TO-STRAND 'NUMBER-OF-ARGS 2) 
(PUT 'MAP_-TO-STRAND 'DEFINED-ON-LINE '84) 
(PUT 'MAP_-TO-STRAND 'DEFINED-IN-FILE 'HEPHYS/MAP2STRN.RED) 
(PUT 'MAP_-TO-STRAND 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE MAP_-TO-STRAND (EDGES MAP_)
    (COND ((NULL EDGES) NIL)
          (T
           (CONS (MK-STRAND-VERTEX (CAR EDGES) MAP_)
                 (MAP_-TO-STRAND (CDR EDGES) MAP_))))) 
(PUT 'MK-STRAND-VERTEX 'NUMBER-OF-ARGS 2) 
(PUT 'MK-STRAND-VERTEX 'DEFINED-ON-LINE '104) 
(PUT 'MK-STRAND-VERTEX 'DEFINED-IN-FILE 'HEPHYS/MAP2STRN.RED) 
(PUT 'MK-STRAND-VERTEX 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE MK-STRAND-VERTEX (EDGE MAP_)
    (PROG (VERT1 VERT2 TAIL)
      (SETQ TAIL (INCIDENT EDGE MAP_ 1))
      (SETQ VERT1 (CAR TAIL))
      (SETQ TAIL (INCIDENT EDGE (CDR TAIL) (ADD1 (CDAR VERT1))))
      (SETQ VERT2 (COND ((NULL TAIL) (LIST (CONS EDGE 0))) (T (CAR TAIL))))
      (RETURN (MK-STRAND-VERTEX2 EDGE VERT1 VERT2)))) 
(PUT 'INCIDENT 'NUMBER-OF-ARGS 3) 
(PUT 'INCIDENT 'DEFINED-ON-LINE '116) 
(PUT 'INCIDENT 'DEFINED-IN-FILE 'HEPHYS/MAP2STRN.RED) 
(PUT 'INCIDENT 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL GENERAL) GENERAL)) 
(DE INCIDENT (EDGE MAP_ VERTNO)
    (COND ((NULL MAP_) NIL)
          (T
           ((LAMBDA (Z)
              (COND (Z (CONS Z (CDR MAP_)))
                    (T (INCIDENT EDGE (CDR MAP_) (ADD1 VERTNO)))))
            (INCIDENT1 EDGE (CAR MAP_) VERTNO))))) 
(PUT 'INCIDENT1 'NUMBER-OF-ARGS 3) 
(PUT 'INCIDENT1 'DEFINED-ON-LINE '122) 
(PUT 'INCIDENT1 'DEFINED-IN-FILE 'HEPHYS/MAP2STRN.RED) 
(PUT 'INCIDENT1 'PROCEDURE_TYPE
     '(ARROW (TIMES GENERAL GENERAL GENERAL) GENERAL)) 
(DE INCIDENT1 (EDNAME VERTEX VERTNO)
    (COND
     ((EQ EDNAME (CAR (CAR VERTEX)))
      (LIST (CONS (CAR (CADR VERTEX)) VERTNO)
            (CONS (CAR (CADDR VERTEX)) VERTNO)))
     ((EQ EDNAME (CAR (CADR VERTEX)))
      (LIST (CONS (CAR (CADDR VERTEX)) VERTNO)
            (CONS (CAR (CAR VERTEX)) VERTNO)))
     ((EQ EDNAME (CAR (CADDR VERTEX)))
      (LIST (CONS (CAR (CAR VERTEX)) VERTNO)
            (CONS (CAR (CADR VERTEX)) VERTNO)))
     (T NIL))) 
(PUT 'MK-STRAND-VERTEX2 'NUMBER-OF-ARGS 3) 
(PUT 'MK-STRAND-VERTEX2 'DEFINED-ON-LINE '131) 
(PUT 'MK-STRAND-VERTEX2 'DEFINED-IN-FILE 'HEPHYS/MAP2STRN.RED) 
(PUT 'MK-STRAND-VERTEX2 'PROCEDURE_TYPE
     '(ARROW (TIMES GENERAL GENERAL GENERAL) GENERAL)) 
(DE MK-STRAND-VERTEX2 (EDGE VERT1 VERT2) (LIST EDGE VERT1 VERT2)) 
(PUT 'COLOR-STRAND 'NUMBER-OF-ARGS 3) 
(PUT 'COLOR-STRAND 'DEFINED-ON-LINE '136) 
(PUT 'COLOR-STRAND 'DEFINED-IN-FILE 'HEPHYS/MAP2STRN.RED) 
(PUT 'COLOR-STRAND 'PROCEDURE_TYPE
     '(ARROW (TIMES GENERAL GENERAL GENERAL) GENERAL)) 
(DE COLOR-STRAND (ALST MAP_ COUNT)
    (COND ((NULL MAP_) NIL)
          (T
           (CONS (CONS (COLOR-ROADS ALST (CAR MAP_)) COUNT)
                 (COLOR-STRAND ALST (CDR MAP_) (ADD1 COUNT)))))) 
(PUT 'COLOR-ROADS 'NUMBER-OF-ARGS 2) 
(PUT 'COLOR-ROADS 'DEFINED-ON-LINE '148) 
(PUT 'COLOR-ROADS 'DEFINED-IN-FILE 'HEPHYS/MAP2STRN.RED) 
(PUT 'COLOR-ROADS 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE COLOR-ROADS (ALST VERTEX)
    (PROG (E1 E2 E3 LINES)
      (SETQ E1 (CDR (ASSOC (CAR (CAR VERTEX)) ALST)))
      (SETQ E2 (CDR (ASSOC (CAR (CADR VERTEX)) ALST)))
      (SETQ E3 (CDR (ASSOC (CAR (CADDR VERTEX)) ALST)))
      (SETQ LINES (QUOTIENT (PLUS E1 E2 E3) 2))
      (SETQ E1 (DIFFERENCE LINES E1))
      (SETQ E2 (DIFFERENCE LINES E2))
      (SETQ E3 (DIFFERENCE LINES E3))
      (RETURN
       (LIST (CONS (CAR (CAR VERTEX)) E1) (CONS (CAR (CADR VERTEX)) E2)
             (CONS (CAR (CADDR VERTEX)) E3))))) 
(PUT 'ZERO-ROADS 'NUMBER-OF-ARGS 1) 
(PUT 'ZERO-ROADS 'DEFINED-ON-LINE '164) 
(PUT 'ZERO-ROADS 'DEFINED-IN-FILE 'HEPHYS/MAP2STRN.RED) 
(PUT 'ZERO-ROADS 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE ZERO-ROADS (L)
    (COND ((NULL L) NIL)
          (T
           ((LAMBDA (Z)
              (COND (Z (CONS Z (ZERO-ROADS (CDR L))))
                    (T (ZERO-ROADS (CDR L)))))
            (Z-ROADS (CAR L)))))) 
(PUT 'Z-ROADS 'NUMBER-OF-ARGS 1) 
(PUT 'Z-ROADS 'DEFINED-ON-LINE '173) 
(PUT 'Z-ROADS 'DEFINED-IN-FILE 'HEPHYS/MAP2STRN.RED) 
(PUT 'Z-ROADS 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE Z-ROADS (Y)
    ((LAMBDA (W) (AND W (CONS (CAR W) (CDR Y))))
     (COND ((EQUAL 0 (CDR (CAAR Y))) (CAAR Y))
           ((EQUAL 0 (CDR (CADAR Y))) (CADAR Y))
           ((EQUAL 0 (CDR (CADDAR Y))) (CADDAR Y)) (T NIL)))) 
(PUT 'DELETEZ1 'NUMBER-OF-ARGS 2) 
(PUT 'DELETEZ1 'DEFINED-ON-LINE '182) 
(PUT 'DELETEZ1 'DEFINED-IN-FILE 'HEPHYS/MAP2STRN.RED) 
(PUT 'DELETEZ1 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE DELETEZ1 (STRAND ALST)
    (COND ((NULL STRAND) NIL)
          ((EQUAL 0 (CDR (ASSOC (CAAR STRAND) ALST)))
           (DELETEZ1 (CDR STRAND) ALST))
          (T (CONS (CAR STRAND) (DELETEZ1 (CDR STRAND) ALST))))) 
(PUT 'CONTRACT-STRAND 'NUMBER-OF-ARGS 2) 
(PUT 'CONTRACT-STRAND 'DEFINED-ON-LINE '192) 
(PUT 'CONTRACT-STRAND 'DEFINED-IN-FILE 'HEPHYS/MAP2STRN.RED) 
(PUT 'CONTRACT-STRAND 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE CONTRACT-STRAND (STRAND SLST) (CONTR-STRAND STRAND (ZERO-ROADS SLST))) 
(PUT 'CONTR-STRAND 'NUMBER-OF-ARGS 2) 
(PUT 'CONTR-STRAND 'DEFINED-ON-LINE '199) 
(PUT 'CONTR-STRAND 'DEFINED-IN-FILE 'HEPHYS/MAP2STRN.RED) 
(PUT 'CONTR-STRAND 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE CONTR-STRAND (STRAND ZLST)
    (COND ((NULL ZLST) STRAND)
          (T (CONTR-STRAND (CONTR1-STRAND STRAND (CAR ZLST)) (CDR ZLST))))) 
(PUT 'CONTR1-STRAND 'NUMBER-OF-ARGS 2) 
(PUT 'CONTR1-STRAND 'DEFINED-ON-LINE '203) 
(PUT 'CONTR1-STRAND 'DEFINED-IN-FILE 'HEPHYS/MAP2STRN.RED) 
(PUT 'CONTR1-STRAND 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE CONTR1-STRAND (STRAND RNAME) (CONTR2-STRAND STRAND RNAME NIL NIL)) 
(PUT 'CONTR2-STRAND 'NUMBER-OF-ARGS 4) 
(PUT 'CONTR2-STRAND 'DEFINED-ON-LINE '206) 
(PUT 'CONTR2-STRAND 'DEFINED-IN-FILE 'HEPHYS/MAP2STRN.RED) 
(PUT 'CONTR2-STRAND 'PROCEDURE_TYPE
     '(ARROW (TIMES GENERAL GENERAL GENERAL GENERAL) GENERAL)) 
(DE CONTR2-STRAND (ST RNAME RAND FLAG_)
    (COND ((NULL ST) RAND)
          (T
           ((LAMBDA (Z)
              (COND
               (Z
                (COND ((MEMBER (CAR Z) (CDR Z)) (APPEND ST RAND))
                      ((NULL FLAG_)
                       (CONTR2-STRAND (CONTR2 Z (CDR ST) RAND) RNAME NIL T))
                      (T (CONTR2 Z (CDR ST) RAND))))
               (T (CONTR2-STRAND (CDR ST) RNAME (CONS (CAR ST) RAND) NIL))))
            (CONTRSP (CAR ST) RNAME))))) 
(PUT 'CONTRSP 'NUMBER-OF-ARGS 2) 
(PUT 'CONTRSP 'DEFINED-ON-LINE '218) 
(PUT 'CONTRSP 'DEFINED-IN-FILE 'HEPHYS/MAP2STRN.RED) 
(PUT 'CONTRSP 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE CONTRSP (SVERTEX RNAME)
    (OR (CONTRSP2 (CADR SVERTEX) (CADDR SVERTEX) RNAME)
        (CONTRSP2 (CADDR SVERTEX) (CADR SVERTEX) RNAME))) 
(PUT 'CONTRSP2 'NUMBER-OF-ARGS 3) 
(PUT 'CONTRSP2 'DEFINED-ON-LINE '223) 
(PUT 'CONTRSP2 'DEFINED-IN-FILE 'HEPHYS/MAP2STRN.RED) 
(PUT 'CONTRSP2 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL GENERAL) GENERAL)) 
(DE CONTRSP2 (L1 L2 RNAME)
    (COND
     ((EQUAL 2 (LENGTH L1))
      (COND ((EQUAL RNAME (CAR L1)) (CONS (CADR L1) L2))
            ((EQUAL RNAME (CADR L1)) (CONS (CAR L1) L2)) (T NIL))))) 
(PUT 'CONTR2 'NUMBER-OF-ARGS 3) 
(PUT 'CONTR2 'DEFINED-ON-LINE '229) 
(PUT 'CONTR2 'DEFINED-IN-FILE 'HEPHYS/MAP2STRN.RED) 
(PUT 'CONTR2 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL GENERAL) GENERAL)) 
(DE CONTR2 (SINGLE ST RAND)
    (COND ((NULL ST) (CONTR SINGLE RAND)) ((NULL RAND) (CONTR SINGLE ST))
          (T
           (CONS (SPLIT-ROAD SINGLE (CAR ST)) (CONTR2 SINGLE (CDR ST) RAND))))) 
(PUT 'CONTR 'NUMBER-OF-ARGS 2) 
(PUT 'CONTR 'DEFINED-ON-LINE '234) 
(PUT 'CONTR 'DEFINED-IN-FILE 'HEPHYS/MAP2STRN.RED) 
(PUT 'CONTR 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE CONTR (SINGLE STRAND)
    (COND ((NULL STRAND) NIL)
          (T
           (CONS (SPLIT-ROAD SINGLE (CAR STRAND))
                 (CONTR SINGLE (CDR STRAND)))))) 
(PUT 'SPLIT-ROAD 'NUMBER-OF-ARGS 2) 
(PUT 'SPLIT-ROAD 'DEFINED-ON-LINE '238) 
(PUT 'SPLIT-ROAD 'DEFINED-IN-FILE 'HEPHYS/MAP2STRN.RED) 
(PUT 'SPLIT-ROAD 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE SPLIT-ROAD (SINGLE SVERTEX)
    (LIST (CAR SVERTEX) (SROAD (CAR SINGLE) (CDR SINGLE) (CADR SVERTEX))
          (SROAD (CAR SINGLE) (CDR SINGLE) (CADDR SVERTEX)))) 
(PUT 'SROAD 'NUMBER-OF-ARGS 3) 
(PUT 'SROAD 'DEFINED-ON-LINE '243) 
(PUT 'SROAD 'DEFINED-IN-FILE 'HEPHYS/MAP2STRN.RED) 
(PUT 'SROAD 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL GENERAL) GENERAL)) 
(DE SROAD (LINE_ LINES LST)
    (COND ((NULL LST) NIL) ((EQUAL LINE_ (CAR LST)) (APPEND LINES (CDR LST)))
          (T (CONS (CAR LST) (SROAD LINE_ LINES (CDR LST)))))) 
(ENDMODULE) 