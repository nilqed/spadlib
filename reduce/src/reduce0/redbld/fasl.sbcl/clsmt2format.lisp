(cl:declaim (cl:optimize cl:debug cl:safety))
(cl:declaim (sb-ext:muffle-conditions sb-ext:compiler-note cl:style-warning))
(MODULE (LIST 'CLSMT2FORMAT)) 
(REVISION 'CLSMT2FORMAT
          "$Id: clsmt2format.red 5982 2021-08-28 12:02:44Z thomas-sturm $") 
(COPYRIGHT 'CLSMT2FORMAT "(c) 2021 T. Sturm") 
(FLUID '(*SMTPLAIN)) 
(FLUID '(SMT_ASSERTIONL*)) 
(RL_PROVIDESERVICE 'RL_SMT2PRINT 'CL_SMT2PRINT
                   '(RL_SMT2PRINTAT RL_SMT2PRINTLOGIC)) 
(PUT 'CL_SMT2PRINT 'NUMBER-OF-ARGS 3) 
(PUT 'CL_SMT2PRINT 'DEFINED-ON-LINE '38) 
(PUT 'CL_SMT2PRINT 'DEFINED-IN-FILE 'REDLOG/CL/CLSMT2FORMAT.RED) 
(PUT 'CL_SMT2PRINT 'PROCEDURE_TYPE
     '(ARROW (TIMES GENERAL GENERAL GENERAL) GENERAL)) 
(DE CL_SMT2PRINT (F FNAME LINEL)
    (PROGN
     (COND ((NEQ FNAME "") (OUT (LIST FNAME))))
     (RL_SMT2PRINTLOGIC)
     (COND
      (LINEL
       (PROG (LINE)
         (SETQ LINE LINEL)
        LAB
         (COND ((NULL LINE) (RETURN NIL)))
         ((LAMBDA (LINE) (PRIN2T LINE)) (CAR LINE))
         (SETQ LINE (CDR LINE))
         (GO LAB)))
      (T (PRIN2T "(set-info :source | automatically generated by REDLOG |)")))
     (CL_SMT2PRINT1 F)
     (PRIN2T "(check-sat)")
     (COND ((NEQ FNAME "") (SHUT (LIST FNAME)))))) 
(PUT 'CL_SMT2PRINT1 'NUMBER-OF-ARGS 1) 
(PUT 'CL_SMT2PRINT1 'DEFINED-ON-LINE '56) 
(PUT 'CL_SMT2PRINT1 'DEFINED-IN-FILE 'REDLOG/CL/CLSMT2FORMAT.RED) 
(PUT 'CL_SMT2PRINT1 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE CL_SMT2PRINT1 (F)
    (PROG (VL)
      (SETQ VL (CL_VARL1 F))
      (COND
       ((CAR VL)
        (REDERR (LIST "cl_smt2Print1: found free variables " (CAR VL)))))
      (SETQ VL (CDR VL))
      (SETQ F (CL_MATRIX (CL_PNF F)))
      (PROG (V)
        (SETQ V VL)
       LAB
        (COND ((NULL V) (RETURN NIL)))
        ((LAMBDA (V) (IOTO_PRIN2T (LIST "(declare-const " V " Real)")))
         (CAR V))
        (SETQ V (CDR V))
        (GO LAB))
      (PRIN2 "(assert ")
      (CL_SMT2PRINTQFF F)
      (PRIN2T ")"))) 
(PUT 'CL_SMT2PRINTQFF 'NUMBER-OF-ARGS 1) 
(PUT 'CL_SMT2PRINTQFF 'DEFINED-ON-LINE '71) 
(PUT 'CL_SMT2PRINTQFF 'DEFINED-IN-FILE 'REDLOG/CL/CLSMT2FORMAT.RED) 
(PUT 'CL_SMT2PRINTQFF 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE CL_SMT2PRINTQFF (F)
    (PROG (OP)
      (SETQ OP (COND ((ATOM F) F) (T (CAR F))))
      (COND ((EQ OP 'IMPL) (CL_SMT2PREFIXPRINT "=>" (CDR F)))
            ((EQ OP 'REPL) (CL_SMT2PREFIXPRINT "=>" (LIST (CADDR F) (CADR F))))
            ((EQ OP 'EQUIV)
             (CL_SMT2PRINTQFF
              (CONS 'AND (LIST (CONS 'IMPL (CDR F)) (CONS 'REPL (CDR F))))))
            ((MEMQ OP '(NOT AND OR)) (CL_SMT2PREFIXPRINT OP (CDR F)))
            ((OR (EQ OP 'TRUE) (EQ OP 'FALSE)) (PRIN2 F))
            (T (RL_SMT2PRINTAT F))))) 
(PUT 'CL_SMT2PREFIXPRINT 'NUMBER-OF-ARGS 2) 
(PUT 'CL_SMT2PREFIXPRINT 'DEFINED-ON-LINE '89) 
(PUT 'CL_SMT2PREFIXPRINT 'DEFINED-IN-FILE 'REDLOG/CL/CLSMT2FORMAT.RED) 
(PUT 'CL_SMT2PREFIXPRINT 'PROCEDURE_TYPE
     '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE CL_SMT2PREFIXPRINT (OP ARGL)
    (PROGN
     (PRIN2 "(")
     (PRIN2 OP)
     (PRIN2 " ")
     (PROG (RARGL)
       (SETQ RARGL ARGL)
      LAB
       (COND ((NULL RARGL) (RETURN NIL)))
       (PROGN (CL_SMT2PRINTQFF (CAR RARGL)) (COND ((CDR RARGL) (PRIN2 " "))))
       (SETQ RARGL (CDR RARGL))
       (GO LAB))
     (PRIN2 ")"))) 
(RL_PROVIDESERVICE 'RL_SMT2READ 'CL_SMT2READ '(RL_SMT2READAT)) 
(PUT 'CL_SMT2READ 'NUMBER-OF-ARGS 1) 
(PUT 'CL_SMT2READ 'DEFINED-ON-LINE '104) 
(PUT 'CL_SMT2READ 'DEFINED-IN-FILE 'REDLOG/CL/CLSMT2FORMAT.RED) 
(PUT 'CL_SMT2READ 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE CL_SMT2READ (FILE)
    (PROG (FILECH OLDCH W FORM SMT_ASSERTIONL* *SMTPLAIN RAISE)
      (SETQ *SMTPLAIN T)
      (SETQ RAISE *RAISE)
      (SETQ *RAISE (SETQ *LOWER NIL))
      (SETQ FILECH (OPEN FILE 'INPUT))
      (SETQ OLDCH (RDS FILECH))
      (SETQ FORM (SMT_RREAD))
      (PROG ()
       WHILELABEL
        (COND ((NOT (NOT (CL_SMT2READLASTFORMP FORM))) (RETURN NIL)))
        (PROGN
         (SETQ W (ERRORSET (LIST 'SMT_PROCESSFORM (MKQUOTE FORM)) T T))
         (COND
          ((ERRORP W)
           (PROGN
            (RDS OLDCH)
            (CLOSE FILECH)
            (SETQ *RAISE RAISE)
            (REDERR NIL))))
         (SETQ FORM (SMT_RREAD)))
        (GO WHILELABEL))
      (RDS OLDCH)
      (CLOSE FILECH)
      (SETQ *RAISE RAISE)
      (RETURN
       ((LAMBDA (G183)
          (COND ((AND G183 (CDR G183)) (CONS 'AND G183))
                ((NULL G183) (COND ((EQ 'AND 'AND) 'TRUE) (T 'FALSE)))
                (T (CAR G183))))
        SMT_ASSERTIONL*)))) 
(PUT 'CL_SMT2READLASTFORMP 'NUMBER-OF-ARGS 1) 
(DE CL_SMT2READLASTFORMP (FORM)
    (OR (EQ FORM $EOF$) (EQCAR FORM 'CHECK-SAT) (EQCAR FORM 'EXIT))) 
(PUT 'CL_NRA2QF 'NUMBER-OF-ARGS 2) 
(DE CL_NRA2QF (INFILE OUTFILE)
    (PROG (W FL LINEL)
      (SETQ W (CL_QE (CL_SMT2READ INFILE) NIL))
      (SETQ LINEL
              (LIST
               (LTO_SCONCAT
                (LIST "(set-info :source | obtained from " INFILE
                      " by Redlog Qe |)"))))
      (CL_SMT2PRINT (RL_EX W NIL) OUTFILE LINEL))) 
(ENDMODULE) 