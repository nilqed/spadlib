(cl:declaim (cl:optimize cl:debug cl:safety))
(cl:declaim (sb-ext:muffle-conditions sb-ext:compiler-note cl:style-warning))
(MODULE (LIST 'PASF)) 
(REVISION 'PASF "$Id: pasf.red 6072 2021-09-28 13:07:18Z thomas-sturm $") 
(COPYRIGHT 'PASF
           "(c) 2002-2009 A. Dolzmann, A. Seidl, T. Sturm, 2010-2021 T. Sturm") 
(CREATE-PACKAGE
 '(PASF PASFPRINT PASFBNF PASFMISC PASFNF PASFSIAT PASFSIBQ PASFBQBB PASFQE
   PASFSUSI PASFRESOLVE)
 NIL) 
(FLUID '(*RLNZDEN *RLPOSDEN *RLADDCOND *RLSIFAC *RLBRKCXK *UTF8)) 
(LOAD-PACKAGE 'REDLOG) 
(LOADTIME (LOAD-PACKAGE 'CL)) 
(FLUID '(*RLVERBOSE SECONDVALUE*)) 
(FLAG '(PASF) 'RL_PACKAGE) 
(FLAG '(PASF_CHSIMPAT) 'FULL) 
(FLAG '(PASF_SIMPAT) 'FULL) 
(FLAG '(EQUAL NEQ LEQ GEQ LESSP GREATERP) 'SPACED) 
(SWITCH (LIST 'RLQEASRI)) 
(ON1 'RLQEASRI) 
(SWITCH (LIST 'RLPASFDNFQEEXBLOCK)) 
(OFF1 'RLPASFDNFQEEXBLOCK) 
(SWITCH (LIST 'RLPASFDNFFIRST)) 
(OFF1 'RLPASFDNFFIRST) 
(SWITCH (LIST 'RLPASFEXPAND)) 
(OFF1 'RLPASFEXPAND) 
(SWITCH (LIST 'RLPASFSIMPLIFY)) 
(ON1 'RLPASFSIMPLIFY) 
(SWITCH (LIST 'RLPASFBAPPROX)) 
(ON1 'RLPASFBAPPROX) 
(SWITCH (LIST 'RLPASFGAUSS)) 
(ON1 'RLPASFGAUSS) 
(SWITCH (LIST 'RLPASFGC)) 
(ON1 'RLPASFGC) 
(SWITCH (LIST 'RLPASFSC)) 
(ON1 'RLPASFSC) 
(SWITCH (LIST 'RLPASFSES)) 
(ON1 'RLPASFSES) 
(SWITCH (LIST 'RLPASFCONF)) 
(ON1 'RLPASFCONF) 
(SWITCH (LIST 'RLQESUBI)) 
(ON1 'RLQESUBI) 
(SWITCH (LIST 'RLPQEOLD)) 
(OFF1 'RLPQEOLD) 
(SWITCH (LIST 'RLQEPNF)) 
(ON1 'RLQEPNF) 
(OFF1 'RLQEVARSEL) 
(SWITCH (LIST 'RLPASFVB)) 
(OFF1 'RLPASFVB) 
(SWITCH (LIST 'RLSIVERBOSE)) 
(OFF1 'RLSIVERBOSE) 
(PUT 'PASF 'RL_PARAMS
     '((RL_BQAPPLY2ATS1* . PASF_BQAPPLY2ATS1) (RL_BQATNUM* . PASF_BQATNUM)
       (RL_BQQNUM* . PASF_BQQNUM) (RL_BQDEPTH* . PASF_BQDEPTH)
       (RL_BQF2ML* . PASF_BQF2ML) (RL_BQSUBFOF1* . PASF_BQSUBFOF1)
       (RL_BQREPLACE1* . PASF_BQREPLACE1) (RL_BQNNF1* . PASF_BQNNF1)
       (RL_BQRENAME-VARS1* . PASF_BQRENAME-VARS1) (RL_BQVARL2* . PASF_BQVARL2)
       (RL_BQQVARL1* . PASF_BQQVARL1) (RL_BQORDP* . PASF_BQORDP)
       (RL_SUBAT* . PASF_SUBAT) (RL_SUBALCHK* . PASF_SUBALCHK)
       (RL_EQNRHSKERNELS* . PASF_EQNRHSKERNELS) (RL_SIMPLAT1* . PASF_SIMPLAT1)
       (RL_SIMPLIFYBOUNDEDQUANTIFIER* . PASF_SIMPLIFYBOUNDEDQUANTIFIER)
       (RL_FCTRAT* . PASF_FCTRAT) (RL_ORDATP* . PASF_ORDATP) (RL_OP* . PASF_OP)
       (RL_VARSUBSTAT* . PASF_VARSUBSTAT) (RL_NEGATEAT* . PASF_NEGATEAT)
       (RL_BNFSIMPL* . CL_BNFSIMPL) (RL_TORDP* . ORDP)
       (RL_TERMMLAT* . PASF_TERMMLAT) (RL_SACAT* . PASF_SACAT)
       (RL_SACATLP* . CL_SACATLP) (RL_VARLAT* . PASF_VARLAT)
       (RL_SMUPDKNOWL* . CL_SUSIUPDKNOWL) (RL_SMRMKNOWL* . PASF_SUSIRMKNOWL)
       (RL_SMCPKNOWL* . CL_SUSICPKNOWL) (RL_SMMKATL* . CL_SUSIMKATL)
       (RL_SUSIBIN* . PASF_SUSIBIN) (RL_SUSIPOST* . PASF_SUSIPOST)
       (RL_SUSITF* . PASF_SUSITF) (RL_STRUCTAT* . PASF_STRUCTAT)
       (RL_RXFFN* . PASF_RXFFN) (RL_SMT2READAT* . PASF_SMT2READAT))) 
(PUT 'PASF 'RL_SERVICES
     '((RL_SUBFOF* . CL_SUBFOF) (RL_MINISCOPE* . CL_MINISCOPE)
       (RL_ATML* . CL_ATML) (RL_TERML* . CL_TERML) (RL_TERMML* . CL_TERMML)
       (RL_IFACL* . CL_IFACL) (RL_IFACML* . CL_IFACML) (RL_TNF* . CL_TNF)
       (RL_VARL* . CL_VARL) (RL_FVARL* . CL_FVARL) (RL_BVARL* . CL_BVARL)
       (RL_ALL* . CL_ALL) (RL_EX* . CL_EX) (RL_SIMPL* . CL_SIMPL)
       (RL_SIMPLBASIC* . CL_SIMPLBASIC) (RL_ATNUM* . CL_ATNUM)
       (RL_QNUM* . CL_QNUM) (RL_MATRIX* . CL_MATRIX) (RL_QE* . PASF_QE)
       (RL_WQE* . PASF_WQE) (RL_EXPAND* . PASF_EXPAND) (RL_ATL* . CL_ATL)
       (RL_PNF* . PASF_PNF) (RL_DNF* . PASF_DNF) (RL_CNF* . PASF_CNF)
       (RL_NNF* . CL_NNF) (RL_QEA* . PASF_QEA) (RL_PQEA* . PASF_PQEA)
       (RL_WQEA* . PASF_WQEA) (RL_PQE* . PASF_PQE) (RL_STEX* . PASF_STEX)
       (RL_EXPANDA* . PASF_EXPANDA) (RL_ZSIMPL* . PASF_ZSIMPL)
       (RL_RESOLVE* . PASF_RESOLVE) (RL_DEPTH* . CL_DEPTH)
       (RL_SMT2PRINT* . PASF_SMT2PRINT) (RL_STRUCT* . CL_STRUCT))) 
(PUT 'PASF 'RL_SIMPB 'PASF_SIMPB) 
(PUT 'PASF_SIMPB 'NUMBER-OF-ARGS 2) 
(DE PASF_SIMPB (U X)
    (PROG (W) (SETQ W (RL_SIMP1 U)) (PASF_BSATP W X) (RETURN W))) 
(PUT 'PASF 'RL_RESIMPB 'PASF_RESIMPB) 
(PUT 'PASF_RESIMPB 'NUMBER-OF-ARGS 1) 
(DE PASF_RESIMPB (B) (RL_RESIMP B)) 
(PUT 'PASF 'RL_PREPB 'PASF_PREPB) 
(PUT 'PASF_PREPB 'NUMBER-OF-ARGS 1) 
(DE PASF_PREPB (B) (RL_PREPFOF B)) 
(PUT 'PASF 'SIMPFNNAME 'PASF_SIMPFN) 
(PUT 'PASF 'RL_PREPAT 'PASF_PREPAT) 
(PUT 'PASF 'RL_RESIMPAT 'PASF_RESIMPAT) 
(PUT 'PASF 'RL_LENGTHAT 'PASF_LENGTHAT) 
(PUT 'PASF 'RL_PREPTERM 'PREPF) 
(PUT 'PASF 'RL_SIMPTERM 'PASF_SIMPTERM) 
(MKOP 'EQUAL) 
(INFIX (LIST 'EQUAL)) 
(PUT 'EQUAL 'PASF_SIMPFN 'PASF_CHSIMPAT) 
(PUT 'EQUAL 'NUMBER-OF-ARGS 2) 
(MKOP 'NEQ) 
(INFIX (LIST 'NEQ)) 
(PUT 'NEQ 'PASF_SIMPFN 'PASF_CHSIMPAT) 
(PUT 'NEQ 'NUMBER-OF-ARGS 2) 
(PUT 'NEQ 'RTYPEFN 'QUOTELOG) 
(NEWTOK '((< >) NEQ)) 
(MKOP 'LEQ) 
(INFIX (LIST 'LEQ)) 
(PUT 'LEQ 'PASF_SIMPFN 'PASF_CHSIMPAT) 
(PUT 'LEQ 'NUMBER-OF-ARGS 2) 
(PUT 'LEQ 'RTYPEFN 'QUOTELOG) 
(MKOP 'GEQ) 
(INFIX (LIST 'GEQ)) 
(PUT 'GEQ 'PASF_SIMPFN 'PASF_CHSIMPAT) 
(PUT 'GEQ 'NUMBER-OF-ARGS 2) 
(PUT 'GEQ 'RTYPEFN 'QUOTELOG) 
(MKOP 'LESSP) 
(INFIX (LIST 'LESSP)) 
(PUT 'LESSP 'PASF_SIMPFN 'PASF_CHSIMPAT) 
(PUT 'LESSP 'NUMBER-OF-ARGS 2) 
(PUT 'LESSP 'RTYPEFN 'QUOTELOG) 
(MKOP 'GREATERP) 
(INFIX (LIST 'GREATERP)) 
(PUT 'GREATERP 'PASF_SIMPFN 'PASF_CHSIMPAT) 
(PUT 'GREATERP 'NUMBER-OF-ARGS 2) 
(PUT 'GREATERP 'RTYPEFN 'QUOTELOG) 
(AEVAL (OPERATOR (LIST 'CONG))) 
(PUT 'CONG 'PASF_SIMPFN 'PASF_SIMPAT) 
(PUT 'CONG 'NUMBER-OF-ARGS 3) 
(PUT 'CONG 'RTYPEFN 'QUOTELOG) 
(AEVAL (OPERATOR (LIST 'NCONG))) 
(PUT 'NCONG 'PASF_SIMPFN 'PASF_SIMPAT) 
(PUT 'NCONG 'NUMBER-OF-ARGS 3) 
(PUT 'NCONG 'RTYPEFN 'QUOTELOG) 
(AEVAL (OPERATOR (LIST 'RND))) 
(PUT 'RND 'SIMPFN 'PASF_SIMPRND) 
(PUT 'RND 'NUMBER-OF-ARGS 2) 
(DE PASF_OP (ATF) (CAR ATF)) 
(PUT 'PASF_OP 'NUMBER-OF-ARGS 1) 
(PUT 'PASF_OP 'DEFINED-ON-LINE '277) 
(PUT 'PASF_OP 'DEFINED-IN-FILE 'REDLOG/PASF/PASF.RED) 
(PUT 'PASF_OP 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(PUTC 'PASF_OP 'INLINE '(LAMBDA (ATF) (CAR ATF))) 
(DE PASF_OPP (OP)
    (OR (MEMQ OP '(EQUAL NEQ LESSP LEQ GREATERP GEQ))
        (AND (PAIRP OP) (MEMQ (CAR OP) '(CONG NCONG))))) 
(PUT 'PASF_OPP 'NUMBER-OF-ARGS 1) 
(PUT 'PASF_OPP 'DEFINED-ON-LINE '283) 
(PUT 'PASF_OPP 'DEFINED-IN-FILE 'REDLOG/PASF/PASF.RED) 
(PUT 'PASF_OPP 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(PUTC 'PASF_OPP 'INLINE
      '(LAMBDA (OP)
         (OR (MEMQ OP '(EQUAL NEQ LESSP LEQ GREATERP GEQ))
             (AND (PAIRP OP) (MEMQ (CAR OP) '(CONG NCONG)))))) 
(DE PASF_M (ATF) (CDAR ATF)) 
(PUT 'PASF_M 'NUMBER-OF-ARGS 1) 
(PUT 'PASF_M 'DEFINED-ON-LINE '290) 
(PUT 'PASF_M 'DEFINED-IN-FILE 'REDLOG/PASF/PASF.RED) 
(PUT 'PASF_M 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(PUTC 'PASF_M 'INLINE '(LAMBDA (ATF) (CDAR ATF))) 
(DE PASF_ARG2L (ATF) (CADR ATF)) 
(PUT 'PASF_ARG2L 'NUMBER-OF-ARGS 1) 
(PUT 'PASF_ARG2L 'DEFINED-ON-LINE '295) 
(PUT 'PASF_ARG2L 'DEFINED-IN-FILE 'REDLOG/PASF/PASF.RED) 
(PUT 'PASF_ARG2L 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(PUTC 'PASF_ARG2L 'INLINE '(LAMBDA (ATF) (CADR ATF))) 
(DE PASF_ARG2R (ATF) (CADDR ATF)) 
(PUT 'PASF_ARG2R 'NUMBER-OF-ARGS 1) 
(PUT 'PASF_ARG2R 'DEFINED-ON-LINE '300) 
(PUT 'PASF_ARG2R 'DEFINED-IN-FILE 'REDLOG/PASF/PASF.RED) 
(PUT 'PASF_ARG2R 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(PUTC 'PASF_ARG2R 'INLINE '(LAMBDA (ATF) (CADDR ATF))) 
(DE PASF_MK2 (OP LHS RHS) (LIST OP LHS RHS)) 
(PUT 'PASF_MK2 'NUMBER-OF-ARGS 3) 
(PUT 'PASF_MK2 'DEFINED-ON-LINE '305) 
(PUT 'PASF_MK2 'DEFINED-IN-FILE 'REDLOG/PASF/PASF.RED) 
(PUT 'PASF_MK2 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL GENERAL) GENERAL)) 
(PUTC 'PASF_MK2 'INLINE '(LAMBDA (OP LHS RHS) (LIST OP LHS RHS))) 
(DE PASF_0MK2 (OP LHS) (LIST OP LHS NIL)) 
(PUT 'PASF_0MK2 'NUMBER-OF-ARGS 2) 
(PUT 'PASF_0MK2 'DEFINED-ON-LINE '311) 
(PUT 'PASF_0MK2 'DEFINED-IN-FILE 'REDLOG/PASF/PASF.RED) 
(PUT 'PASF_0MK2 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(PUTC 'PASF_0MK2 'INLINE '(LAMBDA (OP LHS) (LIST OP LHS NIL))) 
(DE PASF_OPN (ATF)
    (COND ((OR (EQ ATF 'TRUE) (EQ ATF 'FALSE)) ATF)
          ((PAIRP (CAR ATF)) (CAAR ATF)) (T (CAR ATF)))) 
(PUT 'PASF_OPN 'NUMBER-OF-ARGS 1) 
(PUT 'PASF_OPN 'DEFINED-ON-LINE '317) 
(PUT 'PASF_OPN 'DEFINED-IN-FILE 'REDLOG/PASF/PASF.RED) 
(PUT 'PASF_OPN 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(PUTC 'PASF_OPN 'INLINE
      '(LAMBDA (ATF)
         (COND ((OR (EQ ATF 'TRUE) (EQ ATF 'FALSE)) ATF)
               ((PAIRP (CAR ATF)) (CAAR ATF)) (T (CAR ATF))))) 
(DE PASF_ATFP (F)
    (MEMQ
     (COND ((OR (EQ F 'TRUE) (EQ F 'FALSE)) F) ((PAIRP (CAR F)) (CAAR F))
           (T (CAR F)))
     '(EQUAL NEQ LEQ GEQ LESSP GREATERP CONG NCONG))) 
(PUT 'PASF_ATFP 'NUMBER-OF-ARGS 1) 
(PUT 'PASF_ATFP 'DEFINED-ON-LINE '328) 
(PUT 'PASF_ATFP 'DEFINED-IN-FILE 'REDLOG/PASF/PASF.RED) 
(PUT 'PASF_ATFP 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(PUTC 'PASF_ATFP 'INLINE
      '(LAMBDA (F)
         (MEMQ
          (COND ((OR (EQ F 'TRUE) (EQ F 'FALSE)) F) ((PAIRP (CAR F)) (CAAR F))
                (T (CAR F)))
          '(EQUAL NEQ LEQ GEQ LESSP GREATERP CONG NCONG)))) 
(DE PASF_CONGOPP (OP) (MEMQ OP '(CONG NCONG))) 
(PUT 'PASF_CONGOPP 'NUMBER-OF-ARGS 1) 
(PUT 'PASF_CONGOPP 'DEFINED-ON-LINE '334) 
(PUT 'PASF_CONGOPP 'DEFINED-IN-FILE 'REDLOG/PASF/PASF.RED) 
(PUT 'PASF_CONGOPP 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(PUTC 'PASF_CONGOPP 'INLINE '(LAMBDA (OP) (MEMQ OP '(CONG NCONG)))) 
(DE PASF_EQUOPP (OP) (MEMQ OP '(EQUAL NEQ))) 
(PUT 'PASF_EQUOPP 'NUMBER-OF-ARGS 1) 
(PUT 'PASF_EQUOPP 'DEFINED-ON-LINE '337) 
(PUT 'PASF_EQUOPP 'DEFINED-IN-FILE 'REDLOG/PASF/PASF.RED) 
(PUT 'PASF_EQUOPP 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(PUTC 'PASF_EQUOPP 'INLINE '(LAMBDA (OP) (MEMQ OP '(EQUAL NEQ)))) 
(DE PASF_CONGP (ATF)
    (AND (PAIRP ATF) (PAIRP (CAR ATF)) (MEMQ (CAAR ATF) '(CONG NCONG)))) 
(PUT 'PASF_CONGP 'NUMBER-OF-ARGS 1) 
(PUT 'PASF_CONGP 'DEFINED-ON-LINE '340) 
(PUT 'PASF_CONGP 'DEFINED-IN-FILE 'REDLOG/PASF/PASF.RED) 
(PUT 'PASF_CONGP 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(PUTC 'PASF_CONGP 'INLINE
      '(LAMBDA (ATF)
         (AND (PAIRP ATF) (PAIRP (CAR ATF)) (MEMQ (CAAR ATF) '(CONG NCONG))))) 
(PUT 'PASF_MKOP 'NUMBER-OF-ARGS 2) 
(PUT 'PASF_MKOP 'DEFINED-ON-LINE '346) 
(PUT 'PASF_MKOP 'DEFINED-IN-FILE 'REDLOG/PASF/PASF.RED) 
(PUT 'PASF_MKOP 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE PASF_MKOP (OP M)
    (COND
     ((MEMQ OP '(CONG NCONG))
      (CONS OP
            (COND ((NULL M) (REDERR (LIST "Modulo 0 congruence created")))
                  (T M))))
     (T OP))) 
(PUT 'PASF_MKRNG 'NUMBER-OF-ARGS 3) 
(PUT 'PASF_MKRNG 'DEFINED-ON-LINE '359) 
(PUT 'PASF_MKRNG 'DEFINED-IN-FILE 'REDLOG/PASF/PASF.RED) 
(PUT 'PASF_MKRNG 'PROCEDURE_TYPE
     '(ARROW (TIMES GENERAL GENERAL GENERAL) GENERAL)) 
(DE PASF_MKRNG (V LB UB)
    (COND ((EQ LB UB) (LIST 'EQUAL (ADDF V (NEGF LB)) NIL))
          (T
           (CONS 'AND
                 (LIST (LIST 'GEQ (ADDF V (NEGF LB)) NIL)
                       (LIST 'LEQ (ADDF V (NEGF UB)) NIL)))))) 
(PUT 'PASF_SIMPRND 'NUMBER-OF-ARGS 1) 
(PUT 'PASF_SIMPRND 'DEFINED-ON-LINE '369) 
(PUT 'PASF_SIMPRND 'DEFINED-IN-FILE 'REDLOG/PASF/PASF.RED) 
(PUT 'PASF_SIMPRND 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE PASF_SIMPRND (U)
    (PROGN
     (COND
      ((OR (NULL U) (NULL (CDR U)) (CDDR U))
       (REDERR (LIST "rnd called with" (LENGTH U) "arguments instead of 2"))))
     (COND
      ((NOT (IDP (CADR U)))
       (REDERR (LIST "second argument of rnd must be an identifier"))))
     (MKSQ (LIST 'RND (REVAL1 (CAR U) T) (CADR U)) 1))) 
(PUT 'PASF_MKRNDF 'NUMBER-OF-ARGS 2) 
(PUT 'PASF_MKRNDF 'DEFINED-ON-LINE '379) 
(PUT 'PASF_MKRNDF 'DEFINED-IN-FILE 'REDLOG/PASF/PASF.RED) 
(PUT 'PASF_MKRNDF 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE PASF_MKRNDF (U KEY) (CAR (SIMP (LIST 'RND (PREPF U) KEY)))) 
(PUT 'PASF_VERBOSEP 'NUMBER-OF-ARGS 0) 
(PUT 'PASF_VERBOSEP 'DEFINED-ON-LINE '383) 
(PUT 'PASF_VERBOSEP 'DEFINED-IN-FILE 'REDLOG/PASF/PASF.RED) 
(PUT 'PASF_VERBOSEP 'PROCEDURE_TYPE '(ARROW UNIT GENERAL)) 
(DE PASF_VERBOSEP NIL (AND *RLVERBOSE *RLPASFVB)) 
(PUT 'PASF_SIMPTERM 'NUMBER-OF-ARGS 1) 
(PUT 'PASF_SIMPTERM 'DEFINED-ON-LINE '388) 
(PUT 'PASF_SIMPTERM 'DEFINED-IN-FILE 'REDLOG/PASF/PASF.RED) 
(PUT 'PASF_SIMPTERM 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE PASF_SIMPTERM (L) (CAR (SIMP L))) 
(PUT 'PASF_PREPAT 'NUMBER-OF-ARGS 1) 
(PUT 'PASF_PREPAT 'DEFINED-ON-LINE '393) 
(PUT 'PASF_PREPAT 'DEFINED-IN-FILE 'REDLOG/PASF/PASF.RED) 
(PUT 'PASF_PREPAT 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE PASF_PREPAT (ATF)
    (COND
     ((AND (PAIRP ATF) (PAIRP (CAR ATF)) (MEMQ (CAAR ATF) '(CONG NCONG)))
      (LIST
       (COND ((OR (EQ ATF 'TRUE) (EQ ATF 'FALSE)) ATF)
             ((PAIRP (CAR ATF)) (CAAR ATF)) (T (CAR ATF)))
       (PREPF (CADR ATF)) (PREPF (CADDR ATF)) (PREPF (CDAR ATF))))
     (T
      (CONS
       (COND ((OR (EQ ATF 'TRUE) (EQ ATF 'FALSE)) ATF)
             ((PAIRP (CAR ATF)) (CAAR ATF)) (T (CAR ATF)))
       (PROG (ARG FORALL-RESULT FORALL-ENDPTR)
         (SETQ ARG (CDR ATF))
         (COND ((NULL ARG) (RETURN NIL)))
         (SETQ FORALL-RESULT
                 (SETQ FORALL-ENDPTR
                         (CONS ((LAMBDA (ARG) (PREPF ARG)) (CAR ARG)) NIL)))
        LOOPLABEL
         (SETQ ARG (CDR ARG))
         (COND ((NULL ARG) (RETURN FORALL-RESULT)))
         (RPLACD FORALL-ENDPTR
                 (CONS ((LAMBDA (ARG) (PREPF ARG)) (CAR ARG)) NIL))
         (SETQ FORALL-ENDPTR (CDR FORALL-ENDPTR))
         (GO LOOPLABEL)))))) 
(PUT 'PASF_RESIMPAT 'NUMBER-OF-ARGS 1) 
(PUT 'PASF_RESIMPAT 'DEFINED-ON-LINE '402) 
(PUT 'PASF_RESIMPAT 'DEFINED-IN-FILE 'REDLOG/PASF/PASF.RED) 
(PUT 'PASF_RESIMPAT 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE PASF_RESIMPAT (ATF)
    (LIST
     (COND
      ((AND (PAIRP ATF) (PAIRP (CAR ATF)) (MEMQ (CAAR ATF) '(CONG NCONG)))
       (CONS
        (COND ((OR (EQ ATF 'TRUE) (EQ ATF 'FALSE)) ATF)
              ((PAIRP (CAR ATF)) (CAAR ATF)) (T (CAR ATF)))
        (CAR (RESIMP (CONS (CDAR ATF) 1)))))
      (T (CAR ATF)))
     (CAR (RESIMP (CONS (CADR ATF) 1))) (CAR (RESIMP (CONS (CADDR ATF) 1))))) 
(PUT 'PASF_LENGTHAT 'NUMBER-OF-ARGS 1) 
(PUT 'PASF_LENGTHAT 'DEFINED-ON-LINE '412) 
(PUT 'PASF_LENGTHAT 'DEFINED-IN-FILE 'REDLOG/PASF/PASF.RED) 
(PUT 'PASF_LENGTHAT 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE PASF_LENGTHAT (ATF) (LENGTH (CDR ATF))) 
(PUT 'PASF_CHSIMPAT 'NUMBER-OF-ARGS 1) 
(PUT 'PASF_CHSIMPAT 'DEFINED-ON-LINE '419) 
(PUT 'PASF_CHSIMPAT 'DEFINED-IN-FILE 'REDLOG/PASF/PASF.RED) 
(PUT 'PASF_CHSIMPAT 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE PASF_CHSIMPAT (L)
    ((LAMBDA (G125)
       (COND ((AND G125 (CDR G125)) (CONS 'AND G125))
             ((NULL G125) (COND ((EQ 'AND 'AND) 'TRUE) (T 'FALSE)))
             (T (CAR G125))))
     (PROG (X FORALL-RESULT FORALL-ENDPTR)
       (SETQ X (PASF_CHSIMPAT1 L))
       (COND ((NULL X) (RETURN NIL)))
       (SETQ FORALL-RESULT
               (SETQ FORALL-ENDPTR
                       (CONS ((LAMBDA (X) (PASF_SIMPAT X)) (CAR X)) NIL)))
      LOOPLABEL
       (SETQ X (CDR X))
       (COND ((NULL X) (RETURN FORALL-RESULT)))
       (RPLACD FORALL-ENDPTR (CONS ((LAMBDA (X) (PASF_SIMPAT X)) (CAR X)) NIL))
       (SETQ FORALL-ENDPTR (CDR FORALL-ENDPTR))
       (GO LOOPLABEL)))) 
(PUT 'PASF_CHSIMPAT1 'NUMBER-OF-ARGS 1) 
(PUT 'PASF_CHSIMPAT1 'DEFINED-ON-LINE '424) 
(PUT 'PASF_CHSIMPAT1 'DEFINED-IN-FILE 'REDLOG/PASF/PASF.RED) 
(PUT 'PASF_CHSIMPAT1 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE PASF_CHSIMPAT1 (L)
    (PROG (LEFTL RIGHTL LHS RHS)
      (SETQ LHS (CADR L))
      (COND
       ((AND (PAIRP LHS)
             (OR (MEMQ (CAR LHS) '(EQUAL NEQ LESSP LEQ GREATERP GEQ))
                 (AND (PAIRP (CAR LHS)) (MEMQ (CAR (CAR LHS)) '(CONG NCONG)))))
        (PROGN
         (SETQ LEFTL (PASF_CHSIMPAT1 LHS))
         (SETQ LHS (CADDR (LASTCAR LEFTL))))))
      (SETQ RHS (CADDR L))
      (COND
       ((AND (PAIRP RHS)
             (OR (MEMQ (CAR RHS) '(EQUAL NEQ LESSP LEQ GREATERP GEQ))
                 (AND (PAIRP (CAR RHS)) (MEMQ (CAR (CAR RHS)) '(CONG NCONG)))))
        (PROGN
         (SETQ RIGHTL (PASF_CHSIMPAT1 RHS))
         (SETQ RHS (CADR (CAR RIGHTL))))))
      (RETURN (NCONC LEFTL (CONS (LIST (CAR L) LHS RHS) RIGHTL))))) 
(PUT 'PASF_SIMPAT 'NUMBER-OF-ARGS 1) 
(PUT 'PASF_SIMPAT 'DEFINED-ON-LINE '441) 
(PUT 'PASF_SIMPAT 'DEFINED-IN-FILE 'REDLOG/PASF/PASF.RED) 
(PUT 'PASF_SIMPAT 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE PASF_SIMPAT (U)
    (PROG (OP LHS RHS NLHS F M)
      (SETQ OP (CAR U))
      (COND
       ((MEMQ OP '(CONG NCONG))
        (PROGN
         (COND ((NEQ (LENGTH U) 4) (REDERR "invalid length in congruence")))
         (SETQ LHS (ADDSQ (SIMP (CADR U)) (NEGSQ (SIMP (CADDR U)))))
         (SETQ M (SIMP (CADDDR U)))
         (COND
          ((OR (NEQ (CDR LHS) 1) (NEQ (CDR M) 1))
           (REDERR "denominators in congruence")))
         (RETURN (LIST (CONS OP (CAR M)) (CAR LHS) NIL)))))
      (SETQ LHS (SIMP (CADR U)))
      (COND
       ((NOT
         (OR *RLNZDEN *RLPOSDEN (OR (ATOM (CDR LHS)) (ATOM (CAR (CDR LHS))))))
        (TYPERR U "atomic formula")))
      (SETQ RHS (SIMP (CADDR U)))
      (COND
       ((NOT
         (OR *RLNZDEN *RLPOSDEN (OR (ATOM (CDR RHS)) (ATOM (CAR (CDR RHS))))))
        (TYPERR U "atomic formula")))
      (SETQ LHS (ADDSQ LHS (NEGSQ RHS)))
      (SETQ NLHS (CAR LHS))
      (COND
       ((AND *RLPOSDEN (NOT (OR (ATOM (CDR LHS)) (ATOM (CAR (CDR LHS))))))
        (PROGN
         (SETQ F (LIST OP NLHS NIL))
         (COND
          (*RLADDCOND
           (SETQ F
                   (COND
                    ((MEMQ OP '(LESSP LEQ GREATERP GEQ))
                     (CONS 'AND (LIST (LIST 'GREATERP (CDR LHS) NIL) F)))
                    (T (CONS 'AND (LIST (LIST 'NEQ (CDR LHS) NIL) F)))))))
         (RETURN F))))
      (COND
       ((AND *RLNZDEN (NOT (OR (ATOM (CDR LHS)) (ATOM (CAR (CDR LHS))))))
        (PROGN
         (COND
          ((MEMQ OP '(LESSP LEQ GREATERP GEQ))
           (SETQ NLHS
                   (COND (*PHYSOP-LOADED (PHYSOP-MULTF NLHS (CDR LHS)))
                         (T (POLY-MULTF NLHS (CDR LHS)))))))
         (SETQ F (LIST OP NLHS NIL))
         (COND
          (*RLADDCOND (SETQ F (CONS 'AND (LIST (LIST 'NEQ (CDR LHS) NIL) F)))))
         (RETURN F))))
      (RETURN (LIST OP NLHS NIL)))) 
(PUT 'PASF_TERMP 'NUMBER-OF-ARGS 2) 
(PUT 'PASF_TERMP 'DEFINED-ON-LINE '483) 
(PUT 'PASF_TERMP 'DEFINED-IN-FILE 'REDLOG/PASF/PASF.RED) 
(PUT 'PASF_TERMP 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE PASF_TERMP (EXPS EXCLST)
    (PROG (P ERRC OLDORD)
      (SETQ OLDORD (SETKORDER (LIST)))
      (PROG (VAR)
        (SETQ VAR (KERNELS EXPS))
       LAB
        (COND ((NULL VAR) (RETURN NIL)))
        ((LAMBDA (VAR)
           (PROGN
            (SETKORDER (LIST VAR))
            (SETQ P (REORDER EXPS))
            (COND
             ((MEMQ VAR EXCLST)
              (PROGN
               (PROG (V)
                 (SETQ V EXCLST)
                LAB
                 (COND ((NULL V) (RETURN NIL)))
                 ((LAMBDA (V)
                    (COND
                     ((AND (NEQ V VAR) (MEMQ V (KERNELS (CDAR P))))
                      (REDERR
                       (LIST "Illegal UPrA formula :" "Quantified variables"
                             VAR "and" V "multiplied")))))
                  (CAR V))
                 (SETQ V (CDR V))
                 (GO LAB)))))
            (COND
             ((NOT (OR (ATOM (CDAR P)) (ATOM (CAR (CDAR P)))))
              (SETQ ERRC T)))))
         (CAR VAR))
        (SETQ VAR (CDR VAR))
        (GO LAB))
      (SETKORDER OLDORD)
      (RETURN ERRC))) 
(PUT 'PASF_UPRAP 'NUMBER-OF-ARGS 1) 
(PUT 'PASF_UPRAP 'DEFINED-ON-LINE '513) 
(PUT 'PASF_UPRAP 'DEFINED-IN-FILE 'REDLOG/PASF/PASF.RED) 
(PUT 'PASF_UPRAP 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE PASF_UPRAP (F) (PASF_UPRAP1 F NIL)) 
(PUT 'PASF_UPRAP1 'NUMBER-OF-ARGS 2) 
(PUT 'PASF_UPRAP1 'DEFINED-ON-LINE '520) 
(PUT 'PASF_UPRAP1 'DEFINED-IN-FILE 'REDLOG/PASF/PASF.RED) 
(PUT 'PASF_UPRAP1 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE PASF_UPRAP1 (F BVARL)
    (PROG (S)
      (COND ((OR (EQ F 'TRUE) (EQ F 'FALSE)) (RETURN NIL)))
      (COND
       (((LAMBDA (X)
           (OR (OR (OR (EQ X 'OR) (EQ X 'AND)) (EQ X 'NOT))
               (OR (EQ X 'IMPL) (EQ X 'REPL) (EQ X 'EQUIV))))
         (COND ((ATOM F) F) (T (CAR F))))
        (PROGN
         (PROG (ARG)
           (SETQ ARG (CDR F))
          LAB
           (COND ((NULL ARG) (RETURN NIL)))
           ((LAMBDA (ARG) (SETQ S (OR S (PASF_UPRAP1 ARG BVARL)))) (CAR ARG))
           (SETQ ARG (CDR ARG))
           (GO LAB))
         (RETURN S))))
      (COND
       (((LAMBDA (X) (OR (EQ X 'EX) (EQ X 'ALL)))
         (COND ((ATOM F) F) (T (CAR F))))
        (RETURN (PASF_UPRAP1 (CADDR F) (CONS (CADR F) BVARL)))))
      (COND
       (((LAMBDA (X) (OR (EQ X 'BEX) (EQ X 'BALL)))
         (COND ((ATOM F) F) (T (CAR F))))
        (RETURN
         (OR (PASF_UPRAP1 (CADDR F) (CONS (CADR F) BVARL))
             (PASF_UPRAP1 (CADDDR F) BVARL)))))
      (RETURN
       (COND
        ((AND (PAIRP F) (PAIRP (CAR F)) (MEMQ (CAAR F) '(CONG NCONG)))
         (OR (PASF_TERMP (CADR F) BVARL)
             (NOT (OR (ATOM (CDAR F)) (ATOM (CAR (CDAR F)))))))
        (T (PASF_TERMP (CADR F) BVARL)))))) 
(PUT 'PASF_UNIVNLFP 'NUMBER-OF-ARGS 2) 
(PUT 'PASF_UNIVNLFP 'DEFINED-ON-LINE '546) 
(PUT 'PASF_UNIVNLFP 'DEFINED-IN-FILE 'REDLOG/PASF/PASF.RED) 
(PUT 'PASF_UNIVNLFP 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE PASF_UNIVNLFP (F X)
    (PROG (RES)
      (PROG (ATF)
        (SETQ ATF (RL_ATL F))
       LAB
        (COND ((NULL ATF) (RETURN NIL)))
        ((LAMBDA (ATF) (SETQ RES (OR RES (PASF_UNIVNLP ATF X)))) (CAR ATF))
        (SETQ ATF (CDR ATF))
        (GO LAB))
      (RETURN RES))) 
(PUT 'PASF_UNIVNLP 'NUMBER-OF-ARGS 2) 
(PUT 'PASF_UNIVNLP 'DEFINED-ON-LINE '556) 
(PUT 'PASF_UNIVNLP 'DEFINED-IN-FILE 'REDLOG/PASF/PASF.RED) 
(PUT 'PASF_UNIVNLP 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE PASF_UNIVNLP (ATF X)
    (PROG (OLDORD RES)
      (SETQ OLDORD (SETKORDER (LIST X)))
      (COND
       ((AND (NOT (OR (ATOM (CADR ATF)) (ATOM (CAR (CADR ATF)))))
             (GREATERP (CDAAR (REORDER (CADR ATF))) 1))
        (SETQ RES T)))
      (SETKORDER OLDORD)
      (RETURN RES))) 
(ENDMODULE) 