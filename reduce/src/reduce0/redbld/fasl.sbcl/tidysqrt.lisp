(cl:declaim (cl:optimize cl:debug cl:safety))
(cl:declaim (sb-ext:muffle-conditions sb-ext:compiler-note cl:style-warning))
(MODULE (LIST 'TIDYSQRT)) 
(EXPORTS (LIST 'SQRT2TOP 'TIDYSQRT)) 
(PUT 'TIDYSQRT 'NUMBER-OF-ARGS 1) 
(PUT 'TIDYSQRT 'DEFINED-ON-LINE '42) 
(PUT 'TIDYSQRT 'DEFINED-IN-FILE 'INT/TIDYSQRT.RED) 
(PUT 'TIDYSQRT 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE TIDYSQRT (Q)
    (PROG (N1 DD)
      (SETQ N1 (TIDYSQRTF (CAR Q)))
      (COND ((NULL N1) (RETURN (CONS NIL 1))))
      (SETQ DD (TIDYSQRTF (CDR Q)))
      (RETURN (MULTSQ N1 (INVSQ DD))))) 
(PUT 'TIDYSQRTF 'NUMBER-OF-ARGS 1) 
(PUT 'TIDYSQRTF 'DEFINED-ON-LINE '50) 
(PUT 'TIDYSQRTF 'DEFINED-IN-FILE 'INT/TIDYSQRT.RED) 
(PUT 'TIDYSQRTF 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE TIDYSQRTF (P)
    (COND ((OR (ATOM P) (ATOM (CAR P))) (CONS P 1))
          (T
           (PROG (V W)
             (SETQ V (CAAR P))
             (COND
              ((EQUAL (CAR V) 'I)
               (SETQ V (GETPOWER (FKERN '(SQRT -1)) (CDR V)))))
             (COND
              ((AND (EQCAR (CAR V) 'SQRT) (NOT (ONEP (CDR V))))
               (PROG (X)
                 (SETQ X (DIVIDE (CDR V) 2))
                 (SETQ W (EXPTSQ (SIMP (CADAR V)) (CAR X)))
                 (COND
                  ((NEQ (CDR X) 0)
                   (SETQ W
                           (MULTSQ W
                                   (CONS
                                    (CONS (CONS (GETPOWER (FKERN (CAR V)) 1) 1)
                                          NIL)
                                    1)))))
                 (SETQ W (TIDYSQRT W))))
              (T (SETQ W (CONS (CONS (CONS V 1) NIL) 1))))
             (SETQ V (MULTSQ W (TIDYSQRTF (CDAR P))))
             (RETURN (ADDSQ V (TIDYSQRTF (CDR P)))))))) 
(GLOBAL '(MULTOUTDENR*)) 
(SETQ MULTOUTDENR* 6) 
(PUT 'MULTOUTDENR 'NUMBER-OF-ARGS 1) 
(PUT 'MULTOUTDENR 'DEFINED-ON-LINE '77) 
(PUT 'MULTOUTDENR 'DEFINED-IN-FILE 'INT/TIDYSQRT.RED) 
(PUT 'MULTOUTDENR 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE MULTOUTDENR (Q)
    (PROG (N D ROOT CONJ COUNT)
      (SETQ COUNT 0)
      (SETQ N (CAR Q))
      (SETQ D (CDR Q))
      (PROG ()
       WHILELABEL
        (COND
         ((NOT (AND (SETQ ROOT (FINDSQUAREROOT D)) (LESSP COUNT MULTOUTDENR*)))
          (RETURN NIL)))
        (PROGN
         (SETQ COUNT (PLUS COUNT 1))
         (SETQ CONJ (CONJUGATEWRT D ROOT))
         (SETQ N (*MULTF N CONJ))
         (SETQ D (*MULTF D CONJ)))
        (GO WHILELABEL))
      (PROG ()
       WHILELABEL
        (COND
         ((NOT (AND (SETQ ROOT (FINDNTHROOT D)) (LESSP COUNT MULTOUTDENR*)))
          (RETURN NIL)))
        (PROGN
         (SETQ COUNT (PLUS COUNT 1))
         (SETQ CONJ (CONJUGATEEXPT D ROOT KORD*))
         (SETQ N (*MULTF N CONJ))
         (SETQ D (*MULTF D CONJ)))
        (GO WHILELABEL))
      (COND
       ((AND (NUMBERP D) (MINUSP D))
        (PROGN (SETQ N (NEGF N)) (SETQ D (NEGF D)))))
      (RETURN (CONS N D)))) 
(PUT 'CONJUGATEEXPT 'NUMBER-OF-ARGS 3) 
(PUT 'CONJUGATEEXPT 'DEFINED-ON-LINE '114) 
(PUT 'CONJUGATEEXPT 'DEFINED-IN-FILE 'INT/TIDYSQRT.RED) 
(PUT 'CONJUGATEEXPT 'PROCEDURE_TYPE
     '(ARROW (TIMES GENERAL GENERAL GENERAL) GENERAL)) 
(DE CONJUGATEEXPT (D ROOT KORD*)
    (PROG (ORD ANS REPL XI)
      (SETQ ORD (CADDR (CADDR ROOT)))
      (SETQ ANS 1)
      (SETQ KORD* (CONS (SETQ XI (GENSYM)) KORD*))
      (PROG (I)
        (SETQ I 1)
       LAB
        (COND ((MINUSP (DIFFERENCE (DIFFERENCE ORD 1) I)) (RETURN NIL)))
        (PROGN
         (SETQ ANS
                 (*MULTF ANS
                  (CAR
                   (SUBF D
                         (LIST
                          (CONS ROOT
                                (LIST 'TIMES ROOT (LIST 'EXPLT XI I))))))))
         (PROG ()
          WHILELABEL
           (COND
            ((NOT (AND (EQ (CAAAR ANS) XI) (GREATERP (CDAAR ANS) ORD)))
             (RETURN NIL)))
           (SETQ ANS
                   (ADDF (CDR ANS)
                         (CONS
                          (CONS (CONS XI (DIFFERENCE (CDAAR ANS) ORD))
                                (CDAR ANS))
                          NIL)))
           (GO WHILELABEL))
         (COND
          ((AND (EQ (CAAAR ANS) XI) (EQUAL (CDAAR ANS) ORD))
           (SETQ ANS (ADDF (CDR ANS) (CDAR ANS))))))
        (SETQ I (PLUS2 I 1))
        (GO LAB))
      (COND
       ((AND (EQ (CAAAR ANS) XI) (EQUAL (CDAAR ANS) (DIFFERENCE ORD 1)))
        (PROGN
         (SETQ REPL (MINUS 1))
         (PROG (I)
           (SETQ I 1)
          LAB
           (COND ((MINUSP (DIFFERENCE (DIFFERENCE ORD 2) I)) (RETURN NIL)))
           (SETQ REPL (CONS (CONS (CONS XI I) (MINUS 1)) REPL))
           (SETQ I (PLUS2 I 1))
           (GO LAB))
         (SETQ ANS (ADDF (CDR ANS) (*MULTF (CDAR ANS) REPL))))))
      (COND
       ((AND (NOT (OR (ATOM ANS) (ATOM (CAR ANS)))) (EQ (CAAAR ANS) XI))
        (INTERR "Conjugation failure")))
      (RETURN ANS))) 
(PUT 'SQRT2TOP 'NUMBER-OF-ARGS 1) 
(PUT 'SQRT2TOP 'DEFINED-ON-LINE '137) 
(PUT 'SQRT2TOP 'DEFINED-IN-FILE 'INT/TIDYSQRT.RED) 
(PUT 'SQRT2TOP 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE SQRT2TOP (Q)
    (PROG (N D)
      (SETQ N (MULTOUTDENR Q))
      (SETQ D (CDR N))
      (SETQ N (CAR N))
      (COND ((EQ D (CDR Q)) (RETURN Q)))
      (COND ((IEQUAL D 1) (RETURN (CONS N 1))))
      (SETQ Q (GCDCOEFFSOFSQRTS N))
      (COND
       ((IEQUAL Q 1)
        (COND ((MINUSF D) (RETURN (CONS (NEGF N) (NEGF D))))
              (T (RETURN (CONS N D))))))
      (SETQ Q (GCDF Q D))
      (SETQ N (QUOTF-FAIL N Q))
      (SETQ D (QUOTF-FAIL D Q))
      (COND ((MINUSF D) (RETURN (CONS (NEGF N) (NEGF D))))
            (T (RETURN (CONS N D)))))) 
(PUT 'FINDSQUAREROOT 'NUMBER-OF-ARGS 1) 
(PUT 'FINDSQUAREROOT 'DEFINED-ON-LINE '179) 
(PUT 'FINDSQUAREROOT 'DEFINED-IN-FILE 'INT/TIDYSQRT.RED) 
(PUT 'FINDSQUAREROOT 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE FINDSQUAREROOT (P)
    (COND ((OR (ATOM P) (ATOM (CAR P))) NIL)
          (T
           (PROG (W)
             (SETQ W (CAAAR P))
             (COND ((ATOM W) (RETURN NIL)))
             (COND ((EQCAR W 'SQRT) (RETURN W)))
             (SETQ W (FINDSQUAREROOT (CDAR P)))
             (COND ((NULL W) (SETQ W (FINDSQUAREROOT (CDR P)))))
             (RETURN W))))) 
(PUT 'FINDNTHROOT 'NUMBER-OF-ARGS 1) 
(PUT 'FINDNTHROOT 'DEFINED-ON-LINE '192) 
(PUT 'FINDNTHROOT 'DEFINED-IN-FILE 'INT/TIDYSQRT.RED) 
(PUT 'FINDNTHROOT 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE FINDNTHROOT (P) NIL) 
(PUT 'CONJUGATEWRT 'NUMBER-OF-ARGS 2) 
(PUT 'CONJUGATEWRT 'DEFINED-ON-LINE '208) 
(PUT 'CONJUGATEWRT 'DEFINED-IN-FILE 'INT/TIDYSQRT.RED) 
(PUT 'CONJUGATEWRT 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE CONJUGATEWRT (P VAR)
    (COND ((OR (ATOM P) (ATOM (CAR P))) P)
          ((EQUAL (CAAAR P) VAR)
           (PROG (X C R)
             (SETQ X (CDAR (CAR P)))
             (SETQ C (CDAR P))
             (SETQ R (CDR P))
             (SETQ X (REMAINDER X 2))
             (COND ((EQUAL X 1) (SETQ C (NEGF C))))
             (RETURN (CONS (CONS (CAAR P) C) (CONJUGATEWRT R VAR)))))
          ((ORDOP VAR (CAAAR P)) P)
          (T
           (CONS (CONS (CAAR P) (CONJUGATEWRT (CDAR P) VAR))
                 (CONJUGATEWRT (CDR P) VAR))))) 
(PUT 'GCDCOEFFSOFSQRTS 'NUMBER-OF-ARGS 1) 
(PUT 'GCDCOEFFSOFSQRTS 'DEFINED-ON-LINE '223) 
(PUT 'GCDCOEFFSOFSQRTS 'DEFINED-IN-FILE 'INT/TIDYSQRT.RED) 
(PUT 'GCDCOEFFSOFSQRTS 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE GCDCOEFFSOFSQRTS (U)
    (COND ((ATOM U) (COND ((AND (NUMBERP U) (MINUSP U)) (MINUS U)) (T U)))
          ((EQCAR (CAAAR U) 'SQRT)
           (PROG (V)
             (SETQ V (GCDCOEFFSOFSQRTS (CDAR U)))
             (COND ((IEQUAL V 1) (RETURN V))
                   (T (RETURN (GCDF V (GCDCOEFFSOFSQRTS (CDR U))))))))
          (T
           (PROG (ROOT)
             (SETQ ROOT (FINDSQUAREROOT U))
             (COND ((NULL ROOT) (RETURN U)))
             (SETQ U (MAKEMAINVAR U ROOT))
             (SETQ ROOT (GCDCOEFFSOFSQRTS (CDAR U)))
             (COND ((IEQUAL ROOT 1) (RETURN 1))
                   (T (RETURN (GCDF ROOT (GCDCOEFFSOFSQRTS (CDR U)))))))))) 
(ENDMODULE) 