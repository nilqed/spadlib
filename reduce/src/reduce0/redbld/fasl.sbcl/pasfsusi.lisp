(cl:declaim (cl:optimize cl:debug cl:safety))
(cl:declaim (sb-ext:muffle-conditions sb-ext:compiler-note cl:style-warning))
(MODULE (LIST 'PASFSUSI)) 
(REVISION 'PASFSUSI
          "$Id: pasfsusi.red 5986 2021-08-28 13:35:27Z thomas-sturm $") 
(COPYRIGHT 'PASFSUSI "(c) 2003-2021 A. Dolzmann, A. Seidl, and T. Sturm") 
(PUT 'PASF_SUSIRMKNOWL 'NUMBER-OF-ARGS 2) 
(PUT 'PASF_SUSIRMKNOWL 'DEFINED-ON-LINE '34) 
(PUT 'PASF_SUSIRMKNOWL 'DEFINED-IN-FILE 'REDLOG/PASF/PASFSUSI.RED) 
(PUT 'PASF_SUSIRMKNOWL 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE PASF_SUSIRMKNOWL (KNOWL V)
    (PROG (P FORALL-RESULT FORALL-ENDPTR)
      (SETQ P KNOWL)
     STARTOVER
      (COND ((NULL P) (RETURN NIL)))
      (SETQ FORALL-RESULT
              ((LAMBDA (P)
                 (COND ((MEMQ V (PASF_VARLAT (CAR P))) NIL) (T (LIST P))))
               (CAR P)))
      (SETQ FORALL-ENDPTR (LASTPAIR FORALL-RESULT))
      (SETQ P (CDR P))
      (COND ((ATOM FORALL-ENDPTR) (GO STARTOVER)))
     LOOPLABEL
      (COND ((NULL P) (RETURN FORALL-RESULT)))
      (RPLACD FORALL-ENDPTR
              ((LAMBDA (P)
                 (COND ((MEMQ V (PASF_VARLAT (CAR P))) NIL) (T (LIST P))))
               (CAR P)))
      (SETQ FORALL-ENDPTR (LASTPAIR FORALL-ENDPTR))
      (SETQ P (CDR P))
      (GO LOOPLABEL))) 
(PUT 'PASF_SUSIBIN 'NUMBER-OF-ARGS 2) 
(PUT 'PASF_SUSIBIN 'DEFINED-ON-LINE '41) 
(PUT 'PASF_SUSIBIN 'DEFINED-IN-FILE 'REDLOG/PASF/PASFSUSI.RED) 
(PUT 'PASF_SUSIBIN 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE PASF_SUSIBIN (OLD NEW) (PASF_SUSIBINAD OLD NEW)) 
(PUT 'PASF_SUSIBINAD 'NUMBER-OF-ARGS 2) 
(PUT 'PASF_SUSIBINAD 'DEFINED-ON-LINE '47) 
(PUT 'PASF_SUSIBINAD 'DEFINED-IN-FILE 'REDLOG/PASF/PASFSUSI.RED) 
(PUT 'PASF_SUSIBINAD 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE PASF_SUSIBINAD (OLD NEW)
    (PROG (OD ND LEVEL OLEVEL KN KO)
      (SETQ LEVEL (CL_SUSIMINLEVEL (CDR OLD) (CDR NEW)))
      (SETQ OLEVEL (CDR OLD))
      (SETQ OLD (CAR OLD))
      (SETQ NEW (CAR NEW))
      (COND ((EQ NEW 'FALSE) (RETURN 'FALSE)))
      (COND ((EQ NEW 'TRUE) (RETURN (LIST '(DELETE . T)))))
      (COND
       ((EQUAL (CADR OLD) (CADR NEW))
        (RETURN (PASF_SUSIBINEQ (CADR OLD) (CAR OLD) (CAR NEW) LEVEL))))
      (SETQ OD (PASF_DEC (CADR OLD)))
      (SETQ ND (PASF_DEC (CADR NEW)))
      (COND
       ((EQUAL (CAR OD) (CAR ND))
        (RETURN
         (PASF_SUSIBINORD (CAR OLD) (CAR OD) (COND ((CDR OD) (CDR OD)) (T 0))
          (CAR NEW) (CAR ND) (COND ((CDR ND) (CDR ND)) (T 0)) LEVEL))))
      (SETQ KO (KERNELS (CAR OD)))
      (SETQ KN (KERNELS (CAR ND)))
      (COND
       ((AND (EQ (CAR OLD) 'EQUAL) (NULL (CDR KO)) (MEMQ (CAR KO) KN))
        (RETURN
         (PASF_SUSIBINAD1 (PASF_SUBFOF1 NEW (CAR KO) (NEGF (CDR OD))) LEVEL
          T))))
      (COND
       ((AND (EQ (CAR NEW) 'EQUAL) (NULL (CDR KN)) (MEMQ (CAR KN) KO))
        (RETURN
         (PASF_SUSIBINAD1 (PASF_SUBFOF1 OLD (CAR KN) (NEGF (CDR ND))) LEVEL
          NIL))))
      (RETURN NIL))) 
(PUT 'PASF_SUSIBINAD1 'NUMBER-OF-ARGS 3) 
(PUT 'PASF_SUSIBINAD1 'DEFINED-ON-LINE '82) 
(PUT 'PASF_SUSIBINAD1 'DEFINED-IN-FILE 'REDLOG/PASF/PASFSUSI.RED) 
(PUT 'PASF_SUSIBINAD1 'PROCEDURE_TYPE
     '(ARROW (TIMES GENERAL GENERAL GENERAL) GENERAL)) 
(DE PASF_SUSIBINAD1 (SB LEVEL FLAG)
    (PROG (SSB)
      (SETQ SSB (PASF_SIMPLAT1 SB NIL))
      (COND
       ((EQ (COND ((ATOM SSB) SSB) (T (CAR SSB))) 'AND)
        (RETURN
         (LIST (CONS 'DELETE FLAG)
               (PROG (AT FORALL-RESULT FORALL-ENDPTR)
                 (SETQ AT (CDR SSB))
                 (COND ((NULL AT) (RETURN NIL)))
                 (SETQ FORALL-RESULT
                         (SETQ FORALL-ENDPTR
                                 (CONS
                                  ((LAMBDA (AT) (CONS 'ADD (CONS AT LEVEL)))
                                   (CAR AT))
                                  NIL)))
                LOOPLABEL
                 (SETQ AT (CDR AT))
                 (COND ((NULL AT) (RETURN FORALL-RESULT)))
                 (RPLACD FORALL-ENDPTR
                         (CONS
                          ((LAMBDA (AT) (CONS 'ADD (CONS AT LEVEL))) (CAR AT))
                          NIL))
                 (SETQ FORALL-ENDPTR (CDR FORALL-ENDPTR))
                 (GO LOOPLABEL))))))
      (COND
       (((LAMBDA (X)
           (OR (OR (EQ X 'TRUE) (EQ X 'FALSE))
               (OR (OR (OR (EQ X 'OR) (EQ X 'AND)) (EQ X 'NOT))
                   (OR (EQ X 'IMPL) (EQ X 'REPL) (EQ X 'EQUIV)))
               (OR (EQ X 'EX) (EQ X 'ALL)) (OR (EQ X 'BEX) (EQ X 'BALL))))
         (COND ((ATOM SSB) SSB) (T (CAR SSB))))
        ((LAMBDA (*RLSIFAC) (SETQ SSB (PASF_SIMPLAT1 SB NIL))) NIL)))
      (RETURN (LIST (CONS 'DELETE FLAG) (CONS 'ADD (CONS SSB LEVEL)))))) 
(PUT 'PASF_SUSIBINEQ 'NUMBER-OF-ARGS 4) 
(PUT 'PASF_SUSIBINEQ 'DEFINED-ON-LINE '93) 
(PUT 'PASF_SUSIBINEQ 'DEFINED-IN-FILE 'REDLOG/PASF/PASFSUSI.RED) 
(PUT 'PASF_SUSIBINEQ 'PROCEDURE_TYPE
     '(ARROW (TIMES GENERAL GENERAL GENERAL GENERAL) GENERAL)) 
(DE PASF_SUSIBINEQ (U OOP NOP LEVEL)
    (PROG (W)
      (COND
       ((AND (PAIRP OOP) (PAIRP NOP) (NEQ (CDR OOP) (CDR NOP)))
        (RETURN (PASF_SUSIBINEQCONG U OOP NOP LEVEL))))
      (SETQ W
              (PASF_SMEQTABLE (COND ((PAIRP OOP) (CAR OOP)) (T OOP))
               (COND ((PAIRP NOP) (CAR NOP)) (T NOP))))
      (COND ((EQ (CAR W) NIL) (RETURN NIL))
            ((EQ (CAR W) 'FALSE) (RETURN 'FALSE))
            ((EQN (CAR W) 1) (RETURN (LIST '(DELETE . T))))
            ((EQN (CAR W) 2) (RETURN (LIST '(DELETE))))
            ((EQN (CAR W) 3)
             (RETURN
              (LIST '(DELETE) '(DELETE . T)
                    (CONS 'ADD (CONS (LIST (CDR W) U NIL) LEVEL)))))
            ((EQN (CAR W) 4)
             (RETURN
              (LIST '(DELETE . T)
                    (CONS 'ADD (CONS (LIST (CDR W) U NIL) LEVEL)))))
            (T
             (RETURN
              (LIST '(DELETE)
                    (CONS 'ADD (CONS (LIST (CDR W) U NIL) LEVEL)))))))) 
(PUT 'PASF_SUSIBINEQCONG 'NUMBER-OF-ARGS 4) 
(PUT 'PASF_SUSIBINEQCONG 'DEFINED-ON-LINE '138) 
(PUT 'PASF_SUSIBINEQCONG 'DEFINED-IN-FILE 'REDLOG/PASF/PASFSUSI.RED) 
(PUT 'PASF_SUSIBINEQCONG 'PROCEDURE_TYPE
     '(ARROW (TIMES GENERAL GENERAL GENERAL GENERAL) GENERAL)) 
(DE PASF_SUSIBINEQCONG (U OOP NOP LEVEL)
    (PROG (N M MO ATF)
      (SETQ N (CDR OOP))
      (SETQ M (CDR NOP))
      (COND
       ((OR (NULL (OR (ATOM N) (ATOM (CAR N))))
            (NULL (OR (ATOM M) (ATOM (CAR M)))))
        (RETURN NIL)))
      (COND
       ((AND (EQ (CAR OOP) 'CONG) (EQ (CAR NOP) 'CONG))
        (RETURN
         (LIST '(DELETE) '(DELETE . T)
               (CONS 'ADD
                     (CONS (LIST (PASF_MKOP 'CONG (LCM M N)) U NIL) LEVEL))))))
      (COND
       ((AND (EQ (CAR OOP) 'CONG) (EQ (CAR NOP) 'NCONG))
        (PROGN
         (COND
          ((AND NIL (EQUAL M (TIMES 2 N)))
           (RETURN
            (LIST '(DELETE . T) (CONS 'DELETE NIL)
                  (CONS 'ADD
                        (CONS (LIST (PASF_MKOP 'NCONG M) (ADDF U (NEGF N)) NIL)
                              LEVEL)))))
          (T
           (PROGN
            (SETQ MO (PASF_SUSIBINEQCONG1 M N))
            (COND
             ((NEQ MO M)
              (PROGN
               ((LAMBDA (*RLSIFAC)
                  (SETQ ATF
                          (PASF_SIMPLAT1 (LIST (PASF_MKOP 'NCONG MO) U NIL)
                           NIL)))
                NIL)
               (COND ((EQ ATF 'FALSE) (RETURN ATF))
                     ((EQ ATF 'TRUE) (RETURN NIL))
                     (T
                      (RETURN
                       (LIST '(DELETE . T) (CONS 'ADD (CONS ATF LEVEL))))))))
             (T (RETURN NIL)))))))))
      (COND
       ((AND (EQ (CAR OOP) 'NCONG) (EQ (CAR NOP) 'CONG))
        (PROGN
         (COND
          ((AND NIL (EQUAL N (TIMES 2 M)))
           (RETURN
            (LIST '(DELETE) '(DELETE . T)
                  (CONS 'ADD
                        (CONS (LIST (PASF_MKOP 'NCONG N) (ADDF U (NEGF M)) NIL)
                              LEVEL)))))
          (T
           (PROGN
            (SETQ MO (PASF_SUSIBINEQCONG1 N M))
            (COND
             ((NEQ MO M)
              (PROGN
               ((LAMBDA (*RLSIFAC)
                  (SETQ ATF
                          (PASF_SIMPLAT1 (LIST (PASF_MKOP 'NCONG MO) U NIL)
                           NIL)))
                NIL)
               (COND ((EQ ATF 'FALSE) (RETURN ATF))
                     ((EQ ATF 'TRUE) (RETURN NIL))
                     (T
                      (RETURN
                       (LIST '(DELETE) (CONS 'ADD (CONS ATF LEVEL))))))))
             (T (RETURN NIL)))))))))
      (COND ((EQUAL (REMAINDER M N) 0) (RETURN (LIST '(DELETE . T))))
            ((EQUAL (REMAINDER N M) 0) (RETURN (LIST '(DELETE))))
            (T (RETURN NIL))))) 
(PUT 'PASF_SUSIBINEQCONG1 'NUMBER-OF-ARGS 2) 
(PUT 'PASF_SUSIBINEQCONG1 'DEFINED-ON-LINE '205) 
(PUT 'PASF_SUSIBINEQCONG1 'DEFINED-IN-FILE 'REDLOG/PASF/PASFSUSI.RED) 
(PUT 'PASF_SUSIBINEQCONG1 'PROCEDURE_TYPE
     '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE PASF_SUSIBINEQCONG1 (M N)
    (PROG (P)
      (COND
       ((OR (NULL (OR (ATOM N) (ATOM (CAR N))))
            (NULL (OR (ATOM M) (ATOM (CAR M)))))
        (RETURN NIL)))
      (COND
       ((OR (LEQ M 1) (LEQ N 1))
        (REDERR (LIST "pasf_susibineqcong1: wrong modulus in input"))))
      (SETQ P (ZFACTOR N))
      (PROG (F)
        (SETQ F P)
       LAB
        (COND ((NULL F) (RETURN NIL)))
        ((LAMBDA (F)
           (COND
            ((AND (EQUAL (REMAINDER M (CAR F)) 0)
                  (NEQ (REMAINDER M (EXPT (CAR F) (CDR F))) 0))
             (PROG ()
              WHILELABEL
               (COND ((NOT (EQUAL (REMAINDER M (CAR F)) 0)) (RETURN NIL)))
               (SETQ M (QUOTIENT M (CAR F)))
               (GO WHILELABEL)))))
         (CAR F))
        (SETQ F (CDR F))
        (GO LAB))
      (RETURN M))) 
(PUT 'PASF_SUSIBINORD 'NUMBER-OF-ARGS 7) 
(PUT 'PASF_SUSIBINORD 'DEFINED-ON-LINE '227) 
(PUT 'PASF_SUSIBINORD 'DEFINED-IN-FILE 'REDLOG/PASF/PASFSUSI.RED) 
(PUT 'PASF_SUSIBINORD 'PROCEDURE_TYPE
     '(ARROW (TIMES GENERAL GENERAL GENERAL GENERAL GENERAL GENERAL GENERAL)
       GENERAL)) 
(DE PASF_SUSIBINORD (OOP OT OABS NOP NT NABS LEVEL)
    (PROG (W OABSV NABSV)
      (COND
       ((AND (PAIRP OOP) (PAIRP NOP))
        (COND
         ((EQUAL (CDR OOP) (CDR NOP)) (RETURN (PASF_SUSIBINORDCONGEQ OOP NOP)))
         (T (RETURN (PASF_SUSIBINORDCONG OOP OT OABS NOP NT NABS LEVEL))))))
      (COND ((OR (PAIRP OOP) (PAIRP NOP)) (RETURN NIL)))
      (SETQ OABSV (COND ((NULL OABS) 0) (T OABS)))
      (SETQ NABSV (COND ((NULL NABS) 0) (T NABS)))
      (COND
       ((OR
         (AND (EQ OOP 'LESSP) (EQ NOP 'GREATERP) (EQUAL (PLUS OABSV 1) NABSV))
         (AND (EQ NOP 'LESSP) (EQ OOP 'GREATERP) (EQUAL (PLUS NABSV 1) OABSV)))
        (RETURN 'FALSE)))
      (COND
       ((AND (EQ OOP 'GEQ) (EQ NOP 'LESSP) (EQUAL (PLUS NABSV 1) OABSV))
        (RETURN
         (LIST '(DELETE . T) '(DELETE)
               (CONS 'ADD
                     (CONS (LIST 'EQUAL (ADDF OT (CAR (SIMP OABS))) NIL)
                           LEVEL))))))
      (COND
       ((AND (EQ NOP 'GEQ) (EQ OOP 'LESSP) (EQUAL (PLUS OABSV 1) NABSV))
        (RETURN
         (LIST '(DELETE . T) '(DELETE)
               (CONS 'ADD
                     (CONS (LIST 'EQUAL (ADDF OT (CAR (SIMP NABS))) NIL)
                           LEVEL))))))
      (COND
       ((AND (EQ OOP 'LEQ) (EQ NOP 'GREATERP) (EQUAL (PLUS OABSV 1) NABSV))
        (RETURN
         (LIST '(DELETE . T) '(DELETE)
               (CONS 'ADD
                     (CONS (LIST 'EQUAL (ADDF OT (CAR (SIMP OABS))) NIL)
                           LEVEL))))))
      (COND
       ((AND (EQ NOP 'LEQ) (EQ OOP 'GREATERP) (EQUAL (PLUS NABSV 1) OABSV))
        (RETURN
         (LIST '(DELETE . T) '(DELETE)
               (CONS 'ADD
                     (CONS (LIST 'EQUAL (ADDF OT (CAR (SIMP NABS))) NIL)
                           LEVEL))))))
      (SETQ W (PASF_SMORDTABLE OOP NOP OABS NABS))
      (COND ((EQ (CAR W) NIL) (RETURN NIL))
            ((EQ (CAR W) 'FALSE) (RETURN 'FALSE))
            ((EQN (CAR W) 1) (RETURN (LIST '(DELETE . T))))
            ((EQN (CAR W) 2) (RETURN (LIST '(DELETE)))))
      (REUTRN NIL))) 
(PUT 'PASF_SUSIBINORDCONGEQ 'NUMBER-OF-ARGS 2) 
(PUT 'PASF_SUSIBINORDCONGEQ 'DEFINED-ON-LINE '281) 
(PUT 'PASF_SUSIBINORDCONGEQ 'DEFINED-IN-FILE 'REDLOG/PASF/PASFSUSI.RED) 
(PUT 'PASF_SUSIBINORDCONGEQ 'PROCEDURE_TYPE
     '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE PASF_SUSIBINORDCONGEQ (OOP NOP)
    (PROG (N M)
      (SETQ N (CDR OOP))
      (SETQ M (CDR NOP))
      (COND
       ((OR (NULL (OR (ATOM N) (ATOM (CAR N))))
            (NULL (OR (ATOM M) (ATOM (CAR M)))))
        (RETURN NIL)))
      (COND ((AND (EQ (CAR OOP) 'CONG) (EQ (CAR NOP) 'CONG)) (RETURN 'FALSE)))
      (COND
       ((AND (EQ (CAR OOP) 'CONG) (EQ (CAR NOP) 'NCONG))
        (RETURN (LIST '(DELETE . T)))))
      (COND
       ((AND (EQ (CAR OOP) 'NCONG) (EQ (CAR NOP) 'CONG))
        (RETURN (LIST '(DELETE)))))
      (RETURN NIL))) 
(PUT 'PASF_SUSIBINORDCONG 'NUMBER-OF-ARGS 7) 
(PUT 'PASF_SUSIBINORDCONG 'DEFINED-ON-LINE '304) 
(PUT 'PASF_SUSIBINORDCONG 'DEFINED-IN-FILE 'REDLOG/PASF/PASFSUSI.RED) 
(PUT 'PASF_SUSIBINORDCONG 'PROCEDURE_TYPE
     '(ARROW (TIMES GENERAL GENERAL GENERAL GENERAL GENERAL GENERAL GENERAL)
       GENERAL)) 
(DE PASF_SUSIBINORDCONG (OOP OT OABS NOP NT NABS LEVEL)
    (PROG (N M EUCD LHS OP AT)
      (SETQ N (CDR OOP))
      (SETQ M (CDR NOP))
      (COND
       ((OR (NULL (OR (ATOM N) (ATOM (CAR N))))
            (NULL (OR (ATOM M) (ATOM (CAR M)))))
        (RETURN NIL)))
      (COND
       ((AND (EQ (CAR OOP) 'CONG) (EQ (CAR NOP) 'CONG) (EQUAL (GCDF N M) 1))
        (PROGN
         (SETQ OP (PASF_MKOP 'CONG (CAR (SIMP (TIMES N M)))))
         (SETQ EUCD (SFTO_EXTEUCD N M))
         (SETQ LHS
                 (ADDF OT
                       (CAR
                        (SIMP
                         (PLUS (TIMES N (CADR EUCD) NABS)
                               (TIMES M (CADDR EUCD) OABS))))))
         ((LAMBDA (*RLSIFAC) (SETQ AT (PASF_SIMPLAT1 (LIST OP LHS NIL) NIL)))
          NIL)
         (RETURN (LIST '(DELETE . T) '(DELETE) (CONS 'ADD (CONS AT LEVEL)))))))
      (RETURN NIL))) 
(PUT 'PASF_SUSIPOST 'NUMBER-OF-ARGS 2) 
(PUT 'PASF_SUSIPOST 'DEFINED-ON-LINE '327) 
(PUT 'PASF_SUSIPOST 'DEFINED-IN-FILE 'REDLOG/PASF/PASFSUSI.RED) 
(PUT 'PASF_SUSIPOST 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE PASF_SUSIPOST (ATL KNOWL) ATL) 
(PUT 'PASF_SUSITF 'NUMBER-OF-ARGS 2) 
(PUT 'PASF_SUSITF 'DEFINED-ON-LINE '334) 
(PUT 'PASF_SUSITF 'DEFINED-IN-FILE 'REDLOG/PASF/PASFSUSI.RED) 
(PUT 'PASF_SUSITF 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE PASF_SUSITF (AT KNOWL) AT) 
(PUT 'PASF_SMEQTABLE 'NUMBER-OF-ARGS 2) 
(PUT 'PASF_SMEQTABLE 'DEFINED-ON-LINE '342) 
(PUT 'PASF_SMEQTABLE 'DEFINED-IN-FILE 'REDLOG/PASF/PASFSUSI.RED) 
(PUT 'PASF_SMEQTABLE 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE PASF_SMEQTABLE (R_1 R_2)
    (PROG (AL)
      (SETQ AL
              '((EQUAL (EQUAL 1) (NEQ FALSE) (GEQ 1) (LEQ 1) (GREATERP FALSE)
                       (LESSP FALSE) (CONG 1) (NCONG FALSE))
                (NEQ (EQUAL FALSE) (NEQ 1) (GEQ 3 . GREATERP) (LEQ 3 . LESSP)
                     (GREATERP 2) (LESSP 2) (CONG NIL) (NCONG 2))
                (GEQ (EQUAL 2) (NEQ 3 . GREATERP) (GEQ 1) (LEQ 3 . EQUAL)
                     (GREATERP 2) (LESSP FALSE) (CONG NIL)
                     (NCONG 5 . GREATERP))
                (LEQ (EQUAL 2) (NEQ 3 . LESSP) (GEQ 3 . EQUAL) (LEQ 1)
                     (GREATERP FALSE) (LESSP 2) (CONG NIL) (NCONG 5 . LESSP))
                (GREATERP (EQUAL FALSE) (NEQ 1) (GEQ 1) (LEQ FALSE)
                          (GREATERP 1) (LESSP FALSE) (CONG NIL) (NCONG NIL))
                (LESSP (EQUAL FALSE) (NEQ 1) (GEQ FALSE) (LEQ 1)
                       (GREATERP FALSE) (LESSP 1) (CONG NIL) (NCONG NIL))
                (CONG (EQUAL 2) (NEQ NIL) (GEQ NIL) (LEQ NIL) (GREATERP NIL)
                 (LESSP NIL) (CONG 1) (NCONG FALSE))
                (NCONG (EQUAL FALSE) (NEQ 1) (GEQ 4 . GREATERP) (LEQ 4 . LESSP)
                 (GREATERP NIL) (LESSP NIL) (CONG FALSE) (NCONG 1))))
      (RETURN (CDR (ATSOC R_2 (ATSOC R_1 AL)))))) 
(PUT 'PASF_SMORDTABLE 'NUMBER-OF-ARGS 4) 
(PUT 'PASF_SMORDTABLE 'DEFINED-ON-LINE '424) 
(PUT 'PASF_SMORDTABLE 'DEFINED-IN-FILE 'REDLOG/PASF/PASFSUSI.RED) 
(PUT 'PASF_SMORDTABLE 'PROCEDURE_TYPE
     '(ARROW (TIMES GENERAL GENERAL GENERAL GENERAL) GENERAL)) 
(DE PASF_SMORDTABLE (R1 R2 S TT)
    (COND ((LESSP S TT) (PASF_SMORDTABLE2 R1 R2))
          ((GREATERP S TT) (PASF_SMORDTABLE1 R1 R2))
          (T (REDERR (LIST "abused smordtable"))))) 
(PUT 'PASF_SMORDTABLE1 'NUMBER-OF-ARGS 2) 
(PUT 'PASF_SMORDTABLE1 'DEFINED-ON-LINE '439) 
(PUT 'PASF_SMORDTABLE1 'DEFINED-IN-FILE 'REDLOG/PASF/PASFSUSI.RED) 
(PUT 'PASF_SMORDTABLE1 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE PASF_SMORDTABLE1 (R1 R2)
    (PROG (AL)
      (SETQ AL
              '((LESSP (LESSP 1) (LEQ 1) (EQUAL FALSE) (NEQ 1) (GEQ FALSE)
                       (GREATERP FALSE) (CONG NIL) (NCONG NIL))
                (LEQ (LESSP 1) (LEQ 1) (EQUAL FALSE) (NEQ 1) (GEQ FALSE)
                     (GREATERP FALSE) (CONG NIL) (NCONG NIL))
                (EQUAL (LESSP 1) (LEQ 1) (EQUAL FALSE) (NEQ 1) (GEQ FALSE)
                       (GREATERP FALSE) (CONG NIL) (NCONG NIL))
                (NEQ (LESSP NIL) (LEQ NIL) (EQUAL 2) (NEQ NIL) (GEQ 2)
                     (GREATERP 2) (CONG NIL) (NCONG NIL))
                (GEQ (LESSP NIL) (LEQ NIL) (EQUAL 2) (NEQ NIL) (GEQ 2)
                     (GREATERP 2) (CONG NIL) (NCONG NIL))
                (GREATERP (LESSP NIL) (LEQ NIL) (EQUAL 2) (NEQ NIL) (GEQ 2)
                          (GREATERP 2) (CONG NIL) (NCONG NIL))))
      (RETURN (CDR (ATSOC R2 (ATSOC R1 AL)))))) 
(PUT 'PASF_SMORDTABLE2 'NUMBER-OF-ARGS 2) 
(PUT 'PASF_SMORDTABLE2 'DEFINED-ON-LINE '505) 
(PUT 'PASF_SMORDTABLE2 'DEFINED-IN-FILE 'REDLOG/PASF/PASFSUSI.RED) 
(PUT 'PASF_SMORDTABLE2 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE PASF_SMORDTABLE2 (R1 R2)
    (PROG (AL)
      (SETQ AL
              '((LESSP (LESSP 2) (LEQ 2) (EQUAL 2) (NEQ NIL) (GEQ NIL)
                       (GREATERP NIL) (CONG NIL) (NCONG NIL))
                (LEQ (LESSP 2) (LEQ 2) (EQUAL 2) (NEQ NIL) (GEQ NIL)
                     (GREATERP NIL) (CONG NIL) (NCONG NIL))
                (EQUAL (LESSP FALSE) (LEQ FALSE) (EQUAL FALSE) (NEQ 1) (GEQ 1)
                       (GREATERP 1) (CONG NIL) (NCONG NIL))
                (NEQ (LESSP 2) (LEQ 2) (EQUAL 2) (NEQ NIL) (GEQ NIL)
                     (GREATERP NIL) (CONG NIL) (NCONG NIL))
                (GEQ (LESSP FALSE) (LEQ FALSE) (EQUAL FALSE) (NEQ 1) (GEQ 1)
                     (GREATERP 1) (CONG NIL) (NCONG NIL))
                (GREATERP (LESSP FALSE) (LEQ FALSE) (EQUAL FALSE) (NEQ 1)
                          (GEQ 1) (GREATERP 1) (CONG NIL) (NCONG NIL))))
      (RETURN (CDR (ATSOC R2 (ATSOC R1 AL)))))) 
(ENDMODULE) 