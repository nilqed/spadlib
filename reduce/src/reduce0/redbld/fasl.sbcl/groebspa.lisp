(cl:declaim (cl:optimize cl:debug cl:safety))
(cl:declaim (sb-ext:muffle-conditions sb-ext:compiler-note cl:style-warning))
(MODULE (LIST 'GROEBSPA)) 
(PUT 'VEVUNION 'NUMBER-OF-ARGS 2) 
(PUT 'VEVUNION 'DEFINED-ON-LINE '37) 
(PUT 'VEVUNION 'DEFINED-IN-FILE 'GROEBNER/GROEBSPA.RED) 
(PUT 'VEVUNION 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE VEVUNION (E1 E2)
    (COND ((NULL E2) (OR E1 (VEVUNION2)))
          (T
           (PROG (X Y)
             (SETQ Y (VEVUNION1 E1 E2))
             (SETQ X (REVERSE Y))
             (COND ((EQUAL (CAR X) 1) (RETURN Y)))
             (PROG ()
              WHILELABEL
               (COND ((NOT (AND X (EQUAL (CAR X) 0))) (RETURN NIL)))
               (SETQ X (CDR X))
               (GO WHILELABEL))
             (RETURN (REVERSIP X)))))) 
(PUT 'VEVUNION1 'NUMBER-OF-ARGS 2) 
(PUT 'VEVUNION1 'DEFINED-ON-LINE '43) 
(PUT 'VEVUNION1 'DEFINED-IN-FILE 'GROEBNER/GROEBSPA.RED) 
(PUT 'VEVUNION1 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE VEVUNION1 (E1 E2)
    (COND ((VDPSUBSPACEP E1 E2) E2) ((VDPSUBSPACEP E2 E1) E1)
          (T
           ((LAMBDA (Z)
              (COND ((OR (NEQ (CAR E1) 0) (NEQ (CAR E2) 0)) (CONS 1 Z))
                    (T (CONS 0 Z))))
            (VEVUNION1 (CDR E1) (CDR E2)))))) 
(PUT 'VEVUNION2 'NUMBER-OF-ARGS 0) 
(PUT 'VEVUNION2 'DEFINED-ON-LINE '49) 
(PUT 'VEVUNION2 'DEFINED-IN-FILE 'GROEBNER/GROEBSPA.RED) 
(PUT 'VEVUNION2 'PROCEDURE_TYPE '(ARROW UNIT GENERAL)) 
(DE VEVUNION2 NIL ((LAMBDA (Y) (PROGN (SETCAR Y 1) Y)) (VEVUNION3 VDPVARS*))) 
(PUT 'VEVUNION3 'NUMBER-OF-ARGS 1) 
(PUT 'VEVUNION3 'DEFINED-ON-LINE '52) 
(PUT 'VEVUNION3 'DEFINED-IN-FILE 'GROEBNER/GROEBSPA.RED) 
(PUT 'VEVUNION3 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE VEVUNION3 (X) (COND ((NULL X) NIL) (T (CONS 0 (VEVUNION3 (CDR X)))))) 
(PUT 'VDPSUBSPACEP 'NUMBER-OF-ARGS 2) 
(PUT 'VDPSUBSPACEP 'DEFINED-ON-LINE '55) 
(PUT 'VDPSUBSPACEP 'DEFINED-IN-FILE 'GROEBNER/GROEBSPA.RED) 
(PUT 'VDPSUBSPACEP 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE VDPSUBSPACEP (E1 E2)
    (COND ((NULL E1) T) ((NULL E2) (VDPSPACENULLP E1))
          ((GREATERP (CAR E1) (CAR E2)) NIL) ((EQUAL E1 E2) T)
          (T (VDPSUBSPACEP (CDR E1) (CDR E2))))) 
(PUT 'VDPORTHSPACEP 'NUMBER-OF-ARGS 2) 
(PUT 'VDPORTHSPACEP 'DEFINED-ON-LINE '62) 
(PUT 'VDPORTHSPACEP 'DEFINED-IN-FILE 'GROEBNER/GROEBSPA.RED) 
(PUT 'VDPORTHSPACEP 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE VDPORTHSPACEP (E1 E2)
    (COND ((OR (NULL E1) (NULL E2)) T)
          ((OR (EQUAL (CAR E2) 0) (EQUAL (CAR E1) 0))
           (VDPORTHSPACEP (CDR E1) (CDR E2)))
          (T NIL))) 
(PUT 'VDPSPACENULLP 'NUMBER-OF-ARGS 1) 
(PUT 'VDPSPACENULLP 'DEFINED-ON-LINE '67) 
(PUT 'VDPSPACENULLP 'DEFINED-IN-FILE 'GROEBNER/GROEBSPA.RED) 
(PUT 'VDPSPACENULLP 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE VDPSPACENULLP (E1)
    (COND ((NULL E1) T) ((EQUAL (CAR E1) 0) (VDPSPACENULLP (CDR E1))) (T NIL))) 
(PUT 'VDPSPACE 'NUMBER-OF-ARGS 1) 
(PUT 'VDPSPACE 'DEFINED-ON-LINE '72) 
(PUT 'VDPSPACE 'DEFINED-IN-FILE 'GROEBNER/GROEBSPA.RED) 
(PUT 'VDPSPACE 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE VDPSPACE (P)
    (PROG (X Y)
      (COND ((OR (NULL P) (NULL (CADR (CDDR P)))) (RETURN NIL)))
      (SETQ X (VDPGETPROP P 'SUBROOM))
      (COND (X (RETURN X)))
      (SETQ X (VEVUNION NIL (CADR P)))
      (SETQ Y (VDPRED P))
      (PROG ()
       WHILELABEL
        (COND ((NOT (NOT (OR (NULL Y) (NULL (CADR (CDDR Y)))))) (RETURN NIL)))
        (PROGN (SETQ X (VEVUNION X (CADR Y))) (SETQ Y (VDPRED Y)))
        (GO WHILELABEL))
      (VDPPUTPROP P 'SUBROOM X)
      (RETURN X))) 
(PUT 'VDPUNIVARIATE? 'NUMBER-OF-ARGS 1) 
(PUT 'VDPUNIVARIATE? 'DEFINED-ON-LINE '85) 
(PUT 'VDPUNIVARIATE? 'DEFINED-IN-FILE 'GROEBNER/GROEBSPA.RED) 
(PUT 'VDPUNIVARIATE? 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE VDPUNIVARIATE? (P)
    (COND ((VDPGETPROP P 'UNIVARIATE) T)
          (T
           (PROG (EV N)
             (SETQ N 0)
             (SETQ EV (CADR P))
             (PROG (X)
               (SETQ X EV)
              LAB
               (COND ((NULL X) (RETURN NIL)))
               ((LAMBDA (X) (COND ((NOT (EQUAL X 0)) (SETQ N (IPLUS2 N 1)))))
                (CAR X))
               (SETQ X (CDR X))
               (GO LAB))
             (COND ((NOT (EQUAL N 1)) (RETURN NIL)))
             (SETQ EV (VDPSPACE P))
             (PROG (X)
               (SETQ X EV)
              LAB
               (COND ((NULL X) (RETURN NIL)))
               ((LAMBDA (X) (COND ((NOT (EQUAL X 0)) (SETQ N (IPLUS2 N 1)))))
                (CAR X))
               (SETQ X (CDR X))
               (GO LAB))
             (COND ((NOT (EQUAL N 1)) (RETURN NIL)))
             (VDPPUTPROP P 'UNIVARIATE T)
             (RETURN T))))) 
(ENDMODULE) 