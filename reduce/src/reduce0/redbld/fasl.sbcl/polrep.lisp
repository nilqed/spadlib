(cl:declaim (cl:optimize cl:debug cl:safety))
(cl:declaim (sb-ext:muffle-conditions sb-ext:compiler-note cl:style-warning))
(MODULE (LIST 'POLREP)) 
(FLUID
 '(*ASYMP* *EXP *FACTOR *GCD *LCM *MCD *RATIONALIZE FRLIS* *ROUNDALL *ROUNDED
   *SQFREE *SUB2 ASYMPLIS* DMODE* SUBFG* NCMP* POWLIS* WTL* **PROCESSED *NCMP)) 
(GLOBAL '(*GROUP RD-TOLERANCE* CR-TOLERANCE* *PHYSOP-LOADED *SSTOOLS-LOADED)) 
(PUT 'ROUNDALL 'SIMPFG '((T (RMSUBS)))) 
(SWITCH (LIST (LIST 'EQUAL 'ROUNDALL 'ON))) 
(DE SUBTRSQ (U V) (ADDSQ U (NEGSQ V))) 
(PUT 'SUBTRSQ 'NUMBER-OF-ARGS 2) 
(PUT 'SUBTRSQ 'DEFINED-ON-LINE '43) 
(PUT 'SUBTRSQ 'DEFINED-IN-FILE 'POLY/POLREP.RED) 
(PUT 'SUBTRSQ 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(PUTC 'SUBTRSQ 'INLINE '(LAMBDA (U V) (ADDSQ U (NEGSQ V)))) 
(PUT 'ADDSQ 'NUMBER-OF-ARGS 2) 
(PUT 'ADDSQ 'DEFINED-ON-LINE '45) 
(PUT 'ADDSQ 'DEFINED-IN-FILE 'POLY/POLREP.RED) 
(PUT 'ADDSQ 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE ADDSQ (U V)
    (COND ((NULL (CAR U)) V) ((NULL (CAR V)) U)
          ((AND (EQUAL (CDR U) 1) (EQUAL (CDR V) 1))
           (CONS (ADDF (CAR U) (CAR V)) 1))
          (T
           (PROG (X Y Z)
             (COND
              ((NULL *EXP)
               (PROGN
                (SETQ U (CONS (CAR U) (MKPROD (CDR U))))
                (SETQ V (CONS (CAR V) (MKPROD (CDR V)))))))
             (COND (*LCM (SETQ X (GCDF* (CDR U) (CDR V))))
                   (T (SETQ X (GCDF (CDR U) (CDR V)))))
             (SETQ Z
                     (CANONSQ
                      (CONS (QUOTF-FAIL (CDR U) X) (QUOTF-FAIL (CDR V) X))))
             (SETQ Y
                     (ADDF
                      (COND (*PHYSOP-LOADED (PHYSOP-MULTF (CDR Z) (CAR U)))
                            (T (POLY-MULTF (CDR Z) (CAR U))))
                      (COND (*PHYSOP-LOADED (PHYSOP-MULTF (CAR Z) (CAR V)))
                            (T (POLY-MULTF (CAR Z) (CAR V))))))
             (COND ((NULL Y) (RETURN (CONS NIL 1))))
             (SETQ Z
                     (COND (*PHYSOP-LOADED (PHYSOP-MULTF (CDR U) (CDR Z)))
                           (T (POLY-MULTF (CDR U) (CDR Z)))))
             (COND
              ((NEQ (SETQ X (GCDF Y X)) 1)
               (PROGN (SETQ Y (QUOTF-FAIL Y X)) (SETQ Z (QUOTF-FAIL Z X)))))
             (COND
              (*GCD
               (RETURN
                (COND ((EQUAL X 1) (CONS Y Z)) (T (CANONSQ (CONS Y Z)))))))
             (RETURN
              (COND ((EQUAL (SETQ X (GCDF Y Z)) 1) (CANONSQ (CONS Y Z)))
                    (T (CANONSQ (CONS (QUOTF-FAIL Y X) (QUOTF-FAIL Z X)))))))))) 
(PUT 'MULTSQ 'NUMBER-OF-ARGS 2) 
(PUT 'MULTSQ 'DEFINED-ON-LINE '70) 
(PUT 'MULTSQ 'DEFINED-IN-FILE 'POLY/POLREP.RED) 
(PUT 'MULTSQ 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE MULTSQ (U V)
    (COND ((OR (NULL (CAR U)) (NULL (CAR V))) (CONS NIL 1))
          ((AND (EQUAL (CDR U) 1) (EQUAL (CDR V) 1))
           (CONS
            (COND (*PHYSOP-LOADED (PHYSOP-MULTF (CAR U) (CAR V)))
                  (T (POLY-MULTF (CAR U) (CAR V))))
            1))
          (T
           (PROG (X Y Z)
             (SETQ X (GCDF (CAR U) (CDR V)))
             (SETQ Y (GCDF (CAR V) (CDR U)))
             (SETQ Z
                     ((LAMBDA (G540 G541)
                        (COND (*PHYSOP-LOADED (PHYSOP-MULTF G540 G541))
                              (T (POLY-MULTF G540 G541))))
                      (QUOTF-FAIL (CAR U) X) (QUOTF-FAIL (CAR V) Y)))
             (SETQ X
                     ((LAMBDA (G542 G543)
                        (COND (*PHYSOP-LOADED (PHYSOP-MULTF G542 G543))
                              (T (POLY-MULTF G542 G543))))
                      (QUOTF-FAIL (CDR U) Y) (QUOTF-FAIL (CDR V) X)))
             (RETURN (CANONSQ (CONS Z X))))))) 
(PUT 'NEGSQ 'NUMBER-OF-ARGS 1) 
(PUT 'NEGSQ 'DEFINED-ON-LINE '83) 
(PUT 'NEGSQ 'DEFINED-IN-FILE 'POLY/POLREP.RED) 
(PUT 'NEGSQ 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE NEGSQ (U) (CONS (NEGF (CAR U)) (CDR U))) 
(DE MULTPQ (U V) (MULTSQ (CONS (LIST (CONS U 1)) 1) V)) 
(PUT 'MULTPQ 'NUMBER-OF-ARGS 2) 
(PUT 'MULTPQ 'DEFINED-ON-LINE '85) 
(PUT 'MULTPQ 'DEFINED-IN-FILE 'POLY/POLREP.RED) 
(PUT 'MULTPQ 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(PUTC 'MULTPQ 'INLINE '(LAMBDA (U V) (MULTSQ (CONS (LIST (CONS U 1)) 1) V))) 
(PUT 'CANCEL 'NUMBER-OF-ARGS 1) 
(PUT 'CANCEL 'DEFINED-ON-LINE '88) 
(PUT 'CANCEL 'DEFINED-IN-FILE 'POLY/POLREP.RED) 
(PUT 'CANCEL 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE CANCEL (U)
    (COND
     ((OR *MCD (EQUAL (CDR U) 1)) (MULTSQ (CONS (CAR U) 1) (CONS 1 (CDR U))))
     (T
      (MULTSQ (CONS (CAR U) 1)
              ((LAMBDA (U)
                 (COND (*QSUM-SIMPEXPT (QSUM-SIMPEXPT U))
                       (T (BASIC-SIMPEXPT U))))
               (LIST (MK*SQ (CONS (CDR U) 1)) (MINUS 1))))))) 
(DE PEQ (U V) (AND (EQ (CAR U) (CAR V)) (EQN (CDR U) (CDR V)))) 
(PUT 'PEQ 'NUMBER-OF-ARGS 2) 
(PUT 'PEQ 'DEFINED-ON-LINE '96) 
(PUT 'PEQ 'DEFINED-IN-FILE 'POLY/POLREP.RED) 
(PUT 'PEQ 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(PUTC 'PEQ 'INLINE
      '(LAMBDA (U V) (AND (EQ (CAR U) (CAR V)) (EQN (CDR U) (CDR V))))) 
(PUT 'ADDF 'NUMBER-OF-ARGS 2) 
(PUT 'ADDF 'DEFINED-ON-LINE '120) 
(PUT 'ADDF 'DEFINED-IN-FILE 'POLY/POLREP.RED) 
(PUT 'ADDF 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE ADDF (U V)
    (PROG (R W)
     TOP
      (COND ((NULL U) (PROGN (SETQ W V) (GO EXIT)))
            ((NULL V) (PROGN (SETQ W U) (GO EXIT)))
            ((OR (ATOM U) (ATOM (CAR U)))
             (PROGN (SETQ W (ADDD U V)) (GO EXIT)))
            ((OR (ATOM V) (ATOM (CAR V)))
             (PROGN (SETQ W (ADDD V U)) (GO EXIT)))
            ((AND (EQ (CAR (CAAR U)) (CAR (CAAR V)))
                  (EQN (CDR (CAAR U)) (CDR (CAAR V))))
             (PROGN
              (SETQ W (ADDF (CDAR U) (CDAR V)))
              (COND ((NOT (NULL W)) (SETQ R (CONS (CONS (CAAR U) W) R))))
              (SETQ U (CDR U))
              (SETQ V (CDR V))))
            ((ORDPP (CAAR U) (CAAR V))
             (PROGN (SETQ R (CONS (CAR U) R)) (SETQ U (CDR U))))
            (T (PROGN (SETQ R (CONS (CAR V) R)) (SETQ V (CDR V)))))
      (GO TOP)
     EXIT
      (PROG ()
       WHILELABEL
        (COND ((NOT R) (RETURN NIL)))
        (PROGN (SETQ U (CDR R)) (RPLACD R W) (SETQ W R) (SETQ R U))
        (GO WHILELABEL))
      (RETURN W))) 
(PUT 'ADDD 'NUMBER-OF-ARGS 2) 
(PUT 'ADDD 'DEFINED-ON-LINE '152) 
(PUT 'ADDD 'DEFINED-IN-FILE 'POLY/POLREP.RED) 
(PUT 'ADDD 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE ADDD (U V)
    (COND ((NULL V) U) ((OR (ATOM V) (ATOM (CAR V))) (ADDDM U V))
          (T (CONS (CAR V) (ADDD U (CDR V)))))) 
(PUT 'ADDDM 'NUMBER-OF-ARGS 2) 
(PUT 'ADDDM 'DEFINED-ON-LINE '159) 
(PUT 'ADDDM 'DEFINED-IN-FILE 'POLY/POLREP.RED) 
(PUT 'ADDDM 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE ADDDM (U V)
    (COND
     ((AND (ATOM U) (ATOM V))
      ((LAMBDA (X)
         (COND
          ((OR (NULL DMODE*) (NOT (FLAGP DMODE* 'CONVERT)))
           (COND ((ZEROP X) NIL) (T X)))
          (T (INT-EQUIV-CHK (APPLY1 (GET DMODE* 'I2D) X)))))
       (PLUS2 U V)))
     (T (DCOMBINE U V 'PLUS)))) 
(DE NONCOMP (U) (AND *NCMP (NONCOMP1 U))) 
(PUT 'NONCOMP 'NUMBER-OF-ARGS 1) 
(PUT 'NONCOMP 'DEFINED-ON-LINE '173) 
(PUT 'NONCOMP 'DEFINED-IN-FILE 'POLY/POLREP.RED) 
(PUT 'NONCOMP 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(PUTC 'NONCOMP 'INLINE '(LAMBDA (U) (AND *NCMP (NONCOMP1 U)))) 
(PUT 'NONCOMP1 'NUMBER-OF-ARGS 1) 
(PUT 'NONCOMP1 'DEFINED-ON-LINE '176) 
(PUT 'NONCOMP1 'DEFINED-IN-FILE 'POLY/POLREP.RED) 
(PUT 'NONCOMP1 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE NONCOMP1 (U)
    (COND ((NULL (PAIRP U)) NIL) ((PAIRP (CAR U)) (AND *NCMP (NONCOMFP1 U)))
          ((EQ (CAR U) '*SQ) (AND *NCMP (NONCOMFP1 (CAR (CADR U)))))
          ((EQ (CAR U) 'TAYLOR*) NIL)
          ((EQ (CAR U) 'MAT) (NONCOMLISTP (CADR U)))
          (T (OR (FLAGP (CAR U) 'NONCOM) (NONCOMLISTP (CDR U)))))) 
(PUT 'NONCOMLISTP 'NUMBER-OF-ARGS 1) 
(PUT 'NONCOMLISTP 'DEFINED-ON-LINE '184) 
(PUT 'NONCOMLISTP 'DEFINED-IN-FILE 'POLY/POLREP.RED) 
(PUT 'NONCOMLISTP 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE NONCOMLISTP (U)
    (AND (PAIRP U) (OR (NONCOMP1 (CAR U)) (NONCOMLISTP (CDR U))))) 
(DE MULTF (U V) (COND (*PHYSOP-LOADED (PHYSOP-MULTF U V)) (T (POLY-MULTF U V)))) 
(PUT 'MULTF 'NUMBER-OF-ARGS 2) 
(PUT 'MULTF 'DEFINED-ON-LINE '195) 
(PUT 'MULTF 'DEFINED-IN-FILE 'POLY/POLREP.RED) 
(PUT 'MULTF 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(PUTC 'MULTF 'INLINE
      '(LAMBDA (U V)
         (COND (*PHYSOP-LOADED (PHYSOP-MULTF U V)) (T (POLY-MULTF U V))))) 
(PUT 'POLY-MULTF 'NUMBER-OF-ARGS 2) 
(PUT 'POLY-MULTF 'DEFINED-ON-LINE '199) 
(PUT 'POLY-MULTF 'DEFINED-IN-FILE 'POLY/POLREP.RED) 
(PUT 'POLY-MULTF 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE POLY-MULTF (U V)
    (PROG (X Y)
     A
      (COND ((OR (NULL U) (NULL V)) (RETURN NIL)) ((EQUAL U 1) (RETURN V))
            ((EQUAL V 1) (RETURN U))
            ((OR (ATOM U) (ATOM (CAR U))) (RETURN (MULTD U V)))
            ((OR (ATOM V) (ATOM (CAR V))) (RETURN (MULTD V U)))
            ((NOT (OR *EXP NCMP* WTL* X))
             (PROGN
              (SETQ U (MKPROD U))
              (SETQ V (MKPROD V))
              (SETQ X T)
              (GO A))))
      (SETQ X (CAAAR U))
      (SETQ Y (CAAAR V))
      (COND
       ((AND (AND *NCMP (NONCOMFP1 V))
             (OR (AND *NCMP (NONCOMP1 X)) (NULL **PROCESSED)))
        (RETURN (POLY-MULTFNC U V)))
       ((EQ X Y)
        (PROGN
         (COND
          ((OR (NOT (FIXP (CDAAR U))) (NOT (FIXP (CDAAR V))))
           (SETQ X (CONS X (REVAL1 (LIST 'PLUS (CDAAR U) (CDAAR V)) T))))
          (T (SETQ X (MKSPM X (PLUS (CDAAR U) (CDAAR V))))))
         (SETQ Y
                 (ADDF (POLY-MULTF (CDR U) V)
                       (POLY-MULTF (LIST (CAR U)) (CDR V))))
         (RETURN
          (COND
           ((OR (NULL X) (NULL (SETQ U (POLY-MULTF (CDAR U) (CDAR V)))))
            (PROGN (SETQ *ASYMP* T) Y))
           ((EQUAL X 1) (ADDF U Y)) ((NULL *MCD) (ADDF (LIST (CONS X U)) Y))
           (T (CONS (CONS X U) Y))))))
       ((ORDOP X Y)
        (PROGN
         (SETQ X (POLY-MULTF (CDAR U) V))
         (SETQ Y (POLY-MULTF (CDR U) V))
         (RETURN (COND ((NULL X) Y) (T (CONS (CONS (CAAR U) X) Y)))))))
      (SETQ X (POLY-MULTF U (CDAR V)))
      (SETQ Y (POLY-MULTF U (CDR V)))
      (RETURN (COND ((NULL X) Y) (T (CONS (CONS (CAAR V) X) Y)))))) 
(DE NONCOMFP (U) (AND *NCMP (NONCOMFP1 U))) 
(PUT 'NONCOMFP 'NUMBER-OF-ARGS 1) 
(PUT 'NONCOMFP 'DEFINED-ON-LINE '236) 
(PUT 'NONCOMFP 'DEFINED-IN-FILE 'POLY/POLREP.RED) 
(PUT 'NONCOMFP 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(PUTC 'NONCOMFP 'INLINE '(LAMBDA (U) (AND *NCMP (NONCOMFP1 U)))) 
(PUT 'NONCOMFP1 'NUMBER-OF-ARGS 1) 
(PUT 'NONCOMFP1 'DEFINED-ON-LINE '240) 
(PUT 'NONCOMFP1 'DEFINED-IN-FILE 'POLY/POLREP.RED) 
(PUT 'NONCOMFP1 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE NONCOMFP1 (U)
    (AND (NOT (OR (ATOM U) (ATOM (CAR U))))
         (OR (AND *NCMP (NONCOMP1 (CAAAR U))) (NONCOMFP1 (CDAR U))
             (NONCOMFP1 (CDR U))))) 
(PUT 'MULTFNC 'NUMBER-OF-ARGS 2) 
(PUT 'MULTFNC 'DEFINED-ON-LINE '244) 
(PUT 'MULTFNC 'DEFINED-IN-FILE 'POLY/POLREP.RED) 
(PUT 'MULTFNC 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE MULTFNC (U V)
    (COND (*PHYSOP-LOADED (PHYSOP-MULTFNC U V))
          (*SSTOOLS-LOADED (SSTOOLS-MULTFNC U V)) (T (POLY-MULTFNC U V)))) 
(PUT 'POLY-MULTFNC 'NUMBER-OF-ARGS 2) 
(PUT 'POLY-MULTFNC 'DEFINED-ON-LINE '249) 
(PUT 'POLY-MULTFNC 'DEFINED-IN-FILE 'POLY/POLREP.RED) 
(PUT 'POLY-MULTFNC 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE POLY-MULTFNC (U V)
    (COND (*SSTOOLS-LOADED (SSTOOLS-MULTFNC U V))
          (T
           (PROG (X Y)
             (SETQ X (POLY-MULTF (CDAR U) (LIST (CAR V))))
             (COND ((NULL X) NIL)
                   ((AND (NOT (OR (ATOM X) (ATOM (CAR X))))
                         (EQ (CAAAR X) (CAAAR U)))
                    (SETQ X
                            (ADDF
                             (COND
                              ((NULL
                                (SETQ Y
                                        (MKSPM (CAAAR U)
                                               (PLUS (CDAAR U) (CDAAR X)))))
                               NIL)
                              ((EQUAL Y 1) (CDAR X))
                              (T (LIST (CONS Y (CDAR X)))))
                             (POLY-MULTF (LIST (CONS (CAAR U) 1)) (CDR X)))))
                   ((AND *NCMP (NONCOMP1 (CAAAR U)))
                    (SETQ X (LIST (CONS (CAAR U) X))))
                   (T
                    ((LAMBDA (**PROCESSED)
                       (SETQ X (POLY-MULTF (LIST (CONS (CAAR U) 1)) X)))
                     T)))
             (RETURN
              (ADDF X
                    (ADDF (POLY-MULTF (CDR U) V)
                          (POLY-MULTF (LIST (CAR U)) (CDR V))))))))) 
(PUT 'MULTD 'NUMBER-OF-ARGS 2) 
(PUT 'MULTD 'DEFINED-ON-LINE '267) 
(PUT 'MULTD 'DEFINED-IN-FILE 'POLY/POLREP.RED) 
(PUT 'MULTD 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE MULTD (U V)
    (COND ((NULL V) NIL) ((EQUAL V 1) U)
          ((OR (ATOM V) (ATOM (CAR V))) (MULTDM U V))
          (T (CONS (CONS (CAAR V) (MULTD U (CDAR V))) (MULTD U (CDR V)))))) 
(PUT 'MULTDM 'NUMBER-OF-ARGS 2) 
(PUT 'MULTDM 'DEFINED-ON-LINE '275) 
(PUT 'MULTDM 'DEFINED-IN-FILE 'POLY/POLREP.RED) 
(PUT 'MULTDM 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE MULTDM (U V)
    (COND
     ((AND (ATOM U) (ATOM V))
      ((LAMBDA (X)
         (COND ((OR (NULL DMODE*) (NOT (FLAGP DMODE* 'CONVERT))) X)
               (T (APPLY1 (GET DMODE* 'I2D) X))))
       (TIMES2 U V)))
     (T (DCOMBINE U V 'TIMES)))) 
(DE MULTPF (U V)
    ((LAMBDA (G544)
       (COND (*PHYSOP-LOADED (PHYSOP-MULTF G544 V)) (T (POLY-MULTF G544 V))))
     (LIST (CONS U 1)))) 
(PUT 'MULTPF 'NUMBER-OF-ARGS 2) 
(PUT 'MULTPF 'DEFINED-ON-LINE '286) 
(PUT 'MULTPF 'DEFINED-IN-FILE 'POLY/POLREP.RED) 
(PUT 'MULTPF 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(PUTC 'MULTPF 'INLINE
      '(LAMBDA (U V)
         ((LAMBDA (G544)
            (COND (*PHYSOP-LOADED (PHYSOP-MULTF G544 V))
                  (T (POLY-MULTF G544 V))))
          (LIST (CONS U 1))))) 
(PUT 'NEGF 'NUMBER-OF-ARGS 1) 
(PUT 'NEGF 'DEFINED-ON-LINE '288) 
(PUT 'NEGF 'DEFINED-IN-FILE 'POLY/POLREP.RED) 
(PUT 'NEGF 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE NEGF (U)
    (COND ((NULL U) NIL)
          ((OR (ATOM U) (ATOM (CAR U)))
           (|:MINUS|
            (COND
             ((AND (ATOM U) (FLAGP DMODE* 'CONVERT))
              (APPLY1 (GET DMODE* 'I2D) U))
             (T U))))
          (T (CONS (CONS (CAAR U) (NEGF (CDAR U))) (NEGF (CDR U)))))) 
(PUT 'DEGREEF 'NUMBER-OF-ARGS 2) 
(PUT 'DEGREEF 'DEFINED-ON-LINE '296) 
(PUT 'DEGREEF 'DEFINED-IN-FILE 'POLY/POLREP.RED) 
(PUT 'DEGREEF 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE DEGREEF (POL VAR)
    (COND ((OR (ATOM POL) (ATOM (CAR POL))) 0)
          ((EQ (CAAAR POL) VAR) (CDAAR POL))
          (T (MAX (DEGREEF (CDAR POL) VAR) (DEGREEF (CDR POL) VAR))))) 
(PUT '*SQ 'LENGTHFN '*SQLENGTH) 
(PUT '*SQLENGTH 'NUMBER-OF-ARGS 1) 
(PUT '*SQLENGTH 'DEFINED-ON-LINE '305) 
(PUT '*SQLENGTH 'DEFINED-IN-FILE 'POLY/POLREP.RED) 
(PUT '*SQLENGTH 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE *SQLENGTH (U)
    ((LAMBDA (X)
       (COND ((EQUAL (CDR (CAR U)) 1) X) (T (PLUS X (TERMSF (CDR (CAR U)))))))
     (TERMSF (CAR (CAR U))))) 
(PUT 'TERMS 'NUMBER-OF-ARGS 1) 
(PUT 'TERMS 'DEFINED-ON-LINE '309) 
(PUT 'TERMS 'DEFINED-IN-FILE 'POLY/POLREP.RED) 
(PUT 'TERMS 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE TERMS (U)
    (PROGN (LPRIM "Please use LENGTH instead") (TERMSF (CAR (SIMP* U))))) 
(FLAG '(TERMS) 'OPFN) 
(FLAG '(TERMS) 'NOVAL) 
(PUT 'TERMSF 'NUMBER-OF-ARGS 1) 
(PUT 'TERMSF 'DEFINED-ON-LINE '316) 
(PUT 'TERMSF 'DEFINED-IN-FILE 'POLY/POLREP.RED) 
(PUT 'TERMSF 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE TERMSF (U)
    (PROG (N)
      (SETQ N 0)
      (PROG ()
       WHILELABEL
        (COND ((NOT (NOT (OR (ATOM U) (ATOM (CAR U))))) (RETURN NIL)))
        (PROGN (SETQ N (PLUS N (TERMSF (CDAR U)))) (SETQ U (CDR U)))
        (GO WHILELABEL))
      (RETURN (COND ((NULL U) N) (T (PLUS N 1)))))) 
(PUT 'TMSF 'NUMBER-OF-ARGS 1) 
(PUT 'TMSF 'DEFINED-ON-LINE '324) 
(PUT 'TMSF 'DEFINED-IN-FILE 'POLY/POLREP.RED) 
(PUT 'TMSF 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE TMSF (U)
    (PROG (N X)
      (SETQ N 0)
      (PROG ()
       WHILELABEL
        (COND ((NOT (NOT (OR (ATOM U) (ATOM (CAR U))))) (RETURN NIL)))
        (PROGN
         (SETQ N
                 (PLUS N (COND ((SFP (SETQ X (CAAAR U))) (TMSF X)) (T 1))
                       (TMSF* (CDAR U))))
         (COND
          ((NEQ (CDAAR U) 1)
           (COND ((EQUAL (CDAAR U) 2) (SETQ N (PLUS N 1)))
                 (T (SETQ N (PLUS N 2))))))
         (SETQ U (CDR U)))
        (GO WHILELABEL))
      (RETURN (COND ((NULL U) N) (T (PLUS N 1)))))) 
(PUT 'TMSF* 'NUMBER-OF-ARGS 1) 
(PUT 'TMSF* 'DEFINED-ON-LINE '337) 
(PUT 'TMSF* 'DEFINED-IN-FILE 'POLY/POLREP.RED) 
(PUT 'TMSF* 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE TMSF* (U) (COND ((AND (NUMBERP U) (EQUAL (ABS (FIX U)) 1)) 0) (T (TMSF U)))) 
(PUT 'TMS 'NUMBER-OF-ARGS 1) 
(PUT 'TMS 'DEFINED-ON-LINE '340) 
(PUT 'TMS 'DEFINED-IN-FILE 'POLY/POLREP.RED) 
(PUT 'TMS 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE TMS (U) (TMSF (CAR (SIMP* U)))) 
(FLAG '(TMS) 'OPFN) 
(FLAG '(TMS) 'NOVAL) 
(FLUID '(*REALLY_OFF_EXP)) 
(PUT 'OFFEXPCHK 'NUMBER-OF-ARGS 1) 
(PUT 'OFFEXPCHK 'DEFINED-ON-LINE '351) 
(PUT 'OFFEXPCHK 'DEFINED-IN-FILE 'POLY/POLREP.RED) 
(PUT 'OFFEXPCHK 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE OFFEXPCHK (U)
    (COND
     ((OR *REALLY_OFF_EXP (AND FRLIS* (FREEVARINEXPTCHK (CAR U)))
          (FREEVARINEXPTCHK (CDR U)))
      U)
     (T (CANPROD (MKPROD (CAR U)) (MKPROD (CDR U)))))) 
(PUT 'FREEVARINEXPTCHK 'NUMBER-OF-ARGS 1) 
(PUT 'FREEVARINEXPTCHK 'DEFINED-ON-LINE '360) 
(PUT 'FREEVARINEXPTCHK 'DEFINED-IN-FILE 'POLY/POLREP.RED) 
(PUT 'FREEVARINEXPTCHK 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE FREEVARINEXPTCHK (U)
    (AND (NOT (OR (ATOM U) (ATOM (CAR U))))
         (OR (NOT (NUMBERP (CDAAR U))) (FREEVARINEXPTCHK (CDAR U))
             (FREEVARINEXPTCHK (CDR U))))) 
(PUT 'MKPROD 'NUMBER-OF-ARGS 1) 
(PUT 'MKPROD 'DEFINED-ON-LINE '364) 
(PUT 'MKPROD 'DEFINED-IN-FILE 'POLY/POLREP.RED) 
(PUT 'MKPROD 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE MKPROD (U)
    (PROG (W X Y Z *EXP *SUB2)
      (COND ((OR (NULL U) (KERNLP U)) (RETURN U)))
      (SETQ *SUB2 T)
      (SETQ X (SUBS2 (CONS U 1)))
      (COND ((NEQ (CDR X) 1) (RETURN U))
            ((NEQ (CAR X) U)
             (PROGN
              (SETQ U (CAR X))
              (COND ((OR (NULL U) (KERNLP U)) (RETURN U))))))
      (SETQ *EXP T)
      (SETQ W (CKRN U))
      (SETQ U ((LAMBDA (*EXP) (QUOTF1 U W)) T))
      (SETQ X (EXPND U))
      (COND
       ((OR (NULL X) (KERNLP X))
        (RETURN
         (COND (*PHYSOP-LOADED (PHYSOP-MULTF W X)) (T (POLY-MULTF W X))))))
      (COND ((AND *MCD (OR *SQFREE *FACTOR *GCD)) (SETQ Y (FCTRF X)))
            (T
             (PROGN
              (SETQ Y (CKRN X))
              (SETQ X ((LAMBDA (*EXP) (QUOTF1 X Y)) T))
              (SETQ Y (LIST Y (CONS X 1))))))
      (COND
       ((OR (GREATERP (CDADR Y) 1) (CDDR Y))
        (PROGN
         (SETQ Z (CAR Y))
         (PROG (J)
           (SETQ J (CDR Y))
          LAB
           (COND ((NULL J) (RETURN NIL)))
           ((LAMBDA (J)
              (SETQ Z
                      ((LAMBDA (G547)
                         (COND (*PHYSOP-LOADED (PHYSOP-MULTF G547 Z))
                               (T (POLY-MULTF G547 Z))))
                       (MKSP* (CAR J) (CDR J)))))
            (CAR J))
           (SETQ J (CDR J))
           (GO LAB))))
       ((AND (NOT *GROUP) (GREATERP (TMSF U) (TMSF (CAADR Y))))
        (SETQ Z
                ((LAMBDA (G549)
                   (COND (*PHYSOP-LOADED (PHYSOP-MULTF G549 (CAR Y)))
                         (T (POLY-MULTF G549 (CAR Y)))))
                 (MKSP* (CAADR Y) (CDADR Y)))))
       (T (SETQ Z (MKSP* U 1))))
      (RETURN (COND (*PHYSOP-LOADED (PHYSOP-MULTF W Z)) (T (POLY-MULTF W Z)))))) 
(PUT 'EXPND 'NUMBER-OF-ARGS 1) 
(PUT 'EXPND 'DEFINED-ON-LINE '395) 
(PUT 'EXPND 'DEFINED-IN-FILE 'POLY/POLREP.RED) 
(PUT 'EXPND 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE EXPND (U)
    (COND (*REALLY_OFF_EXP U)
          (T
           (PROG (*SUB2 V)
             (SETQ U (EXPND1 U))
             (RETURN
              (COND ((AND *SUB2 (EQUAL (CDR (SETQ V (SUBS2F U))) 1)) (CAR V))
                    (T U))))))) 
(PUT 'EXPND1 'NUMBER-OF-ARGS 1) 
(PUT 'EXPND1 'DEFINED-ON-LINE '403) 
(PUT 'EXPND1 'DEFINED-IN-FILE 'POLY/POLREP.RED) 
(PUT 'EXPND1 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE EXPND1 (U)
    (COND ((OR (ATOM U) (ATOM (CAR U))) U)
          (T
           (ADDF
            (COND
             ((OR (NOT (SFP (CAAAR U))) (LESSP (CDAAR U) 0))
              ((LAMBDA (G552)
                 ((LAMBDA (G544)
                    (COND (*PHYSOP-LOADED (PHYSOP-MULTF G544 G552))
                          (T (POLY-MULTF G544 G552))))
                  (LIST (CONS (CAAR U) 1))))
               (EXPND1 (CDAR U))))
             (T
              ((LAMBDA (G553 G554)
                 (COND (*PHYSOP-LOADED (PHYSOP-MULTF G553 G554))
                       (T (POLY-MULTF G553 G554))))
               (EXPTF (EXPND1 (CAAAR U)) (CDAAR U)) (EXPND1 (CDAR U)))))
            (EXPND1 (CDR U)))))) 
(PUT 'CANPROD 'NUMBER-OF-ARGS 2) 
(PUT 'CANPROD 'DEFINED-ON-LINE '410) 
(PUT 'CANPROD 'DEFINED-IN-FILE 'POLY/POLREP.RED) 
(PUT 'CANPROD 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE CANPROD (P Q)
    (PROG (V W X Y Z)
      (COND
       ((OR (OR (ATOM Q) (ATOM (CAR Q))) (CDR Q)
            (AND (NOT (OR (ATOM P) (ATOM (CAR P)))) (CDR P)))
        (RETURN (CANCEL (CONS P Q)))))
      (PROG ()
       WHILELABEL
        (COND
         ((NOT
           (OR (NOT (OR (ATOM P) (ATOM (CAR P))))
               (NOT (OR (ATOM Q) (ATOM (CAR Q))))))
          (RETURN NIL)))
        (COND
         ((SFPF P)
          (PROGN
           (SETQ Z (CPROD1 (CAAAR P) (CDAAR P) V W))
           (SETQ V (CAR Z))
           (SETQ W (CDR Z))
           (SETQ P (CDAR P))))
         ((SFPF Q)
          (PROGN
           (SETQ Z (CPROD1 (CAAAR Q) (CDAAR Q) W V))
           (SETQ W (CAR Z))
           (SETQ V (CDR Z))
           (SETQ Q (CDAR Q))))
         ((OR (ATOM P) (ATOM (CAR P)))
          (PROGN (SETQ Y (CONS (CAAR Q) Y)) (SETQ Q (CDAR Q))))
         ((OR (ATOM Q) (ATOM (CAR Q)))
          (PROGN (SETQ X (CONS (CAAR P) X)) (SETQ P (CDAR P))))
         (T
          (PROGN
           (SETQ X (CONS (CAAR P) X))
           (SETQ Y (CONS (CAAR Q) Y))
           (SETQ P (CDAR P))
           (SETQ Q (CDAR Q)))))
        (GO WHILELABEL))
      (SETQ V (REPROD V (REPROD X P)))
      (SETQ W (REPROD W (REPROD Y Q)))
      (COND ((MINUSF W) (PROGN (SETQ V (NEGF V)) (SETQ W (NEGF W)))))
      (SETQ W (CANCEL (CONS V W)))
      (SETQ V (CAR W))
      (COND
       ((AND (NOT (OR (ATOM V) (ATOM (CAR V)))) (NULL (CDR V))
             (EQUAL (CDAR V) 1) (EQUAL (CDAAR V) 1) (SFP (SETQ X (CAAAR V))))
        (SETQ V X)))
      (SETQ W (CDR W))
      (COND
       ((AND (NOT (OR (ATOM W) (ATOM (CAR W)))) (NULL (CDR W))
             (EQUAL (CDAR W) 1) (EQUAL (CDAAR W) 1) (SFP (SETQ X (CAAAR W))))
        (SETQ W X)))
      (RETURN (CANONSQ (CONS V W))))) 
(PUT 'SFPF 'NUMBER-OF-ARGS 1) 
(PUT 'SFPF 'DEFINED-ON-LINE '443) 
(PUT 'SFPF 'DEFINED-IN-FILE 'POLY/POLREP.RED) 
(PUT 'SFPF 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE SFPF (U) (AND (NOT (OR (ATOM U) (ATOM (CAR U)))) (SFP (CAAAR U)))) 
(PUT 'SFP 'NUMBER-OF-ARGS 1) 
(PUT 'SFP 'DEFINED-ON-LINE '446) 
(PUT 'SFP 'DEFINED-IN-FILE 'POLY/POLREP.RED) 
(PUT 'SFP 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE SFP (U) (AND (NOT (ATOM U)) (NOT (ATOM (CAR U))))) 
(PUT 'REPROD 'NUMBER-OF-ARGS 2) 
(PUT 'REPROD 'DEFINED-ON-LINE '450) 
(PUT 'REPROD 'DEFINED-IN-FILE 'POLY/POLREP.RED) 
(PUT 'REPROD 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE REPROD (U V)
    (PROGN
     (PROG ()
      WHILELABEL
       (COND ((NOT U) (RETURN NIL)))
       (PROGN
        (SETQ V
                ((LAMBDA (G544)
                   (COND (*PHYSOP-LOADED (PHYSOP-MULTF G544 V))
                         (T (POLY-MULTF G544 V))))
                 (LIST (CONS (CAR U) 1))))
        (SETQ U (CDR U)))
       (GO WHILELABEL))
     V)) 
(PUT 'CPROD1 'NUMBER-OF-ARGS 4) 
(PUT 'CPROD1 'DEFINED-ON-LINE '455) 
(PUT 'CPROD1 'DEFINED-IN-FILE 'POLY/POLREP.RED) 
(PUT 'CPROD1 'PROCEDURE_TYPE
     '(ARROW (TIMES GENERAL GENERAL GENERAL GENERAL) GENERAL)) 
(DE CPROD1 (P M V W)
    (PROG (Z)
      (SETQ Z (CPROD2 P M W NIL))
      (SETQ W (CADR Z))
      (SETQ V (APPEND (CDDR Z) V))
      (SETQ Z (CPROD2 (CAR Z) M V T))
      (SETQ V (CADR Z))
      (SETQ W (APPEND (CDDR Z) W))
      (COND ((NEQ (CAR Z) 1) (SETQ V (CONS (GETPOWER (FKERN (CAR Z)) M) V))))
      (RETURN (CONS V W)))) 
(PUT 'CPROD2 'NUMBER-OF-ARGS 4) 
(PUT 'CPROD2 'DEFINED-ON-LINE '471) 
(PUT 'CPROD2 'DEFINED-IN-FILE 'POLY/POLREP.RED) 
(PUT 'CPROD2 'PROCEDURE_TYPE
     '(ARROW (TIMES GENERAL GENERAL GENERAL GENERAL) GENERAL)) 
(DE CPROD2 (P M U B)
    (PROG (N V W Y Z)
      (PROG ()
       WHILELABEL
        (COND ((NOT (AND U (NEQ P 1))) (RETURN NIL)))
        (PROGN
         (COND
          ((NEQ (SETQ Z (GCDF P (CAAR U))) 1)
           (PROGN
            (SETQ P (QUOTF-FAIL P Z))
            (SETQ Y (QUOTF-FAIL (CAAR U) Z))
            (COND ((NEQ Y 1) (SETQ V (CONS (GETPOWER (FKERN Y) (CDAR U)) V))))
            (COND (B (SETQ V (CONS (GETPOWER (FKERN Z) (PLUS M (CDAR U))) V)))
                  ((GREATERP (SETQ N (DIFFERENCE M (CDAR U))) 0)
                   (SETQ W (CONS (GETPOWER (FKERN Z) N) W)))
                  ((LESSP N 0)
                   (SETQ V (CONS (GETPOWER (FKERN Z) (MINUS N)) V))))))
          (T (SETQ V (CONS (CAR U) V))))
         (SETQ U (CDR U)))
        (GO WHILELABEL))
      (RETURN (CONS P (CONS (NCONC* U V) W))))) 
(PUT 'MKSPM 'NUMBER-OF-ARGS 2) 
(PUT 'MKSPM 'DEFINED-ON-LINE '493) 
(PUT 'MKSPM 'DEFINED-IN-FILE 'POLY/POLREP.RED) 
(PUT 'MKSPM 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE MKSPM (U P)
    (COND ((EQUAL P 0) 1)
          (T
           (PROG (X)
             (COND
              ((AND SUBFG* (SETQ X (ATSOC U ASYMPLIS*)) (LEQ (CDR X) P))
               (RETURN NIL)))
             (SUB2CHK U)
             (RETURN (CONS U P)))))) 
(PUT 'SUB2CHK 'NUMBER-OF-ARGS 1) 
(PUT 'SUB2CHK 'DEFINED-ON-LINE '505) 
(PUT 'SUB2CHK 'DEFINED-IN-FILE 'POLY/POLREP.RED) 
(PUT 'SUB2CHK 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE SUB2CHK (U)
    (COND
     ((AND SUBFG*
           (OR (ATSOC U POWLIS*)
               (AND (NOT (ATOM U)) (MEMQ (CAR U) '(EXPT SQRT)))))
      (SETQ *SUB2 T)))) 
(DE QUOTSQ (U V) (MULTSQ U (INVSQ V))) 
(PUT 'QUOTSQ 'NUMBER-OF-ARGS 2) 
(PUT 'QUOTSQ 'DEFINED-ON-LINE '515) 
(PUT 'QUOTSQ 'DEFINED-IN-FILE 'POLY/POLREP.RED) 
(PUT 'QUOTSQ 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(PUTC 'QUOTSQ 'INLINE '(LAMBDA (U V) (MULTSQ U (INVSQ V)))) 
(PUT 'QUOTF* 'NUMBER-OF-ARGS 2) 
(PUT 'QUOTF* 'DEFINED-ON-LINE '518) 
(PUT 'QUOTF* 'DEFINED-IN-FILE 'POLY/POLREP.RED) 
(PUT 'QUOTF* 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE QUOTF* (U V)
    (COND ((NULL U) NIL)
          (T
           ((LAMBDA (X)
              (COND (X X)
                    (T
                     ((LAMBDA (Y)
                        (COND ((EQUAL (CDR Y) 1) (CAR Y))
                              (T (ERRACH (LIST "DIVISION FAILED" U V)))))
                      (RATIONALIZESQ (CONS U V))))))
            ((LAMBDA (*EXP) (QUOTF1 U V)) T))))) 
(DE QUOTF (U V) ((LAMBDA (*EXP) (QUOTF1 U V)) T)) 
(PUT 'QUOTF 'NUMBER-OF-ARGS 2) 
(PUT 'QUOTF 'DEFINED-ON-LINE '527) 
(PUT 'QUOTF 'DEFINED-IN-FILE 'POLY/POLREP.RED) 
(PUT 'QUOTF 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(PUTC 'QUOTF 'INLINE '(LAMBDA (U V) ((LAMBDA (*EXP) (QUOTF1 U V)) T))) 
(PUT 'QUOTF1 'NUMBER-OF-ARGS 2) 
(PUT 'QUOTF1 'DEFINED-ON-LINE '530) 
(PUT 'QUOTF1 'DEFINED-IN-FILE 'POLY/POLREP.RED) 
(PUT 'QUOTF1 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE QUOTF1 (P Q)
    (COND ((NULL P) NIL) ((EQUAL P Q) 1) ((EQUAL Q 1) P)
          ((OR (ATOM Q) (ATOM (CAR Q))) (QUOTFD P Q))
          ((OR (ATOM P) (ATOM (CAR P))) NIL)
          ((EQ (CAAAR P) (CAAAR Q))
           (PROG (U V W X XX Y Z Z1 N)
             (SETQ N 0)
            A
             (COND
              ((OR (IDP (SETQ U (RANK P))) (IDP (SETQ V (RANK Q))) (LESSP U V))
               (RETURN NIL)))
             (SETQ U (LT* P))
             (SETQ V (LT* Q))
             (SETQ W (CAAAR Q))
             (SETQ X (QUOTF1 (CDR U) (CDR V)))
             (COND ((NULL X) (RETURN NIL)))
             (SETQ N (DIFFERENCE (CDAR U) (CDAR V)))
             (COND ((NEQ N 0) (SETQ Y (CONS W N))))
             (SETQ XX
                     ((LAMBDA (G555)
                        (COND (*PHYSOP-LOADED (PHYSOP-MULTF G555 (CDR Q)))
                              (T (POLY-MULTF G555 (CDR Q)))))
                      (NEGF X)))
             (SETQ P
                     (ADDF (CDR P)
                           (COND ((EQUAL N 0) XX)
                                 (T
                                  ((LAMBDA (G544)
                                     (COND
                                      (*PHYSOP-LOADED (PHYSOP-MULTF G544 XX))
                                      (T (POLY-MULTF G544 XX))))
                                   (LIST (CONS Y 1)))))))
             (COND
              ((AND P (OR (OR (ATOM P) (ATOM (CAR P))) (NOT (EQ (CAAAR P) W))))
               (RETURN NIL))
              ((EQUAL N 0) (GO B)))
             (SETQ Z (ACONC* Z (CONS Y X)))
             (COND ((NULL P) (RETURN (COND (Z1 (RNCONC Z Z1)) (T Z)))))
             (GO A)
            B
             (COND ((NULL P) (RETURN (RNCONC Z X))) (*MCD (RETURN NIL))
                   (T (SETQ Z1 X)))
             (GO A)))
          ((ORDOP (CAAAR P) (CAAAR Q)) (QUOTK P Q)) (T NIL))) 
(PUT 'RNCONC 'NUMBER-OF-ARGS 2) 
(PUT 'RNCONC 'DEFINED-ON-LINE '586) 
(PUT 'RNCONC 'DEFINED-IN-FILE 'POLY/POLREP.RED) 
(PUT 'RNCONC 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE RNCONC (U V)
    (COND ((NULL U) V) ((AND *NCMP (NONCOMFP1 U) (NONCOMFP1 V)) (ADDF U V))
          (T
           (PROG (W)
             (SETQ W U)
             (PROG ()
              WHILELABEL
               (COND ((NOT (CDR W)) (RETURN NIL)))
               (PROGN (SETQ W (CDR W)))
               (GO WHILELABEL))
             (RPLACD W V)
             (RETURN U))))) 
(PUT 'QUOTFD 'NUMBER-OF-ARGS 2) 
(PUT 'QUOTFD 'DEFINED-ON-LINE '598) 
(PUT 'QUOTFD 'DEFINED-IN-FILE 'POLY/POLREP.RED) 
(PUT 'QUOTFD 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE QUOTFD (P Q)
    (COND ((EQUAL P Q) 1) ((FLAGP DMODE* 'FIELD) (DIVD P Q))
          ((OR (ATOM P) (ATOM (CAR P))) (QUOTDD P Q)) (T (QUOTK P Q)))) 
(PUT 'DIVD 'NUMBER-OF-ARGS 2) 
(PUT 'DIVD 'DEFINED-ON-LINE '606) 
(PUT 'DIVD 'DEFINED-IN-FILE 'POLY/POLREP.RED) 
(PUT 'DIVD 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE DIVD (V U)
    (COND
     ((NULL U)
      (COND ((NULL V) (RERROR 'POLY 1 "0/0 formed"))
            (T (RERROR 'POLY 2 "Zero divisor"))))
     ((NULL V) NIL) ((OR (ATOM V) (ATOM (CAR V))) (DIVDM V U))
     (T (CONS (CONS (CAAR V) (DIVD (CDAR V) U)) (DIVD (CDR V) U))))) 
(PUT 'DIVDM 'NUMBER-OF-ARGS 2) 
(PUT 'DIVDM 'DEFINED-ON-LINE '616) 
(PUT 'DIVDM 'DEFINED-IN-FILE 'POLY/POLREP.RED) 
(PUT 'DIVDM 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE DIVDM (V U)
    (COND
     ((AND (ATOM V) (ATOM U))
      (COND ((EQUAL (REMAINDER V U) 0) (QUOTIENT V U))
            (T (|:RN2RD| (MKRN V U)))))
     (T ((LAMBDA (Y) Y) (DCOMBINE V U 'QUOTIENT))))) 
(PUT 'QUOTDD 'NUMBER-OF-ARGS 2) 
(PUT 'QUOTDD 'DEFINED-ON-LINE '625) 
(PUT 'QUOTDD 'DEFINED-IN-FILE 'POLY/POLREP.RED) 
(PUT 'QUOTDD 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE QUOTDD (U V)
    (PROG (W)
      (COND
       ((ATOM U)
        (COND
         ((ATOM V)
          (PROGN
           (SETQ W (DIVIDE U V))
           (RETURN (COND ((EQUAL (CDR W) 0) (CAR W)) (T NIL)))))
         ((SETQ W (GET (CAR V) 'I2D)) (SETQ U (APPLY1 W U)))
         ((AND (ATOM V) (SETQ W (GET (CAR U) 'I2D))) (SETQ V (APPLY1 W V))))))
      (RETURN (DCOMBINE U V 'QUOTIENT)))) 
(PUT 'QUOTK 'NUMBER-OF-ARGS 2) 
(PUT 'QUOTK 'DEFINED-ON-LINE '637) 
(PUT 'QUOTK 'DEFINED-IN-FILE 'POLY/POLREP.RED) 
(PUT 'QUOTK 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE QUOTK (P Q)
    ((LAMBDA (W)
       (COND
        (W
         (COND ((NULL (CDR P)) (LIST (CONS (CAAR P) W)))
               (T
                ((LAMBDA (Y) (COND (Y (CONS (CONS (CAAR P) W) Y)) (T NIL)))
                 (QUOTF1 (CDR P) Q)))))
        (T NIL)))
     (QUOTF1 (CDAR P) Q))) 
(PUT 'QUOTF-FAIL 'NUMBER-OF-ARGS 2) 
(PUT 'QUOTF-FAIL 'DEFINED-ON-LINE '645) 
(PUT 'QUOTF-FAIL 'DEFINED-IN-FILE 'POLY/POLREP.RED) 
(PUT 'QUOTF-FAIL 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE QUOTF-FAIL (A B)
    (COND ((NULL A) NIL)
          (T
           (PROG (W)
             (SETQ W ((LAMBDA (*EXP) (QUOTF1 A B)) T))
             (COND
              ((AND (NULL W) *ROUNDED *ROUNDALL)
               ((LAMBDA (*ROUNDALL) (SETQ W ((LAMBDA (*EXP) (QUOTF1 A B)) T)))
                NIL)))
             (COND
              ((NULL W)
               (RERROR 'POLY 99 (LIST "Unexpected division failure" A B)))
              (T (RETURN W))))))) 
(PUT 'RANK 'NUMBER-OF-ARGS 1) 
(PUT 'RANK 'DEFINED-ON-LINE '657) 
(PUT 'RANK 'DEFINED-IN-FILE 'POLY/POLREP.RED) 
(PUT 'RANK 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE RANK (P)
    (COND ((OR *MCD (GREATERP (CDAAR P) 0)) (CDAAR P))
          (T
           (PROG (M N Y)
             (SETQ M 0)
             (SETQ N 0)
             (SETQ N (CDAAR P))
             (SETQ Y (CAAAR P))
            A
             (SETQ M (CDAAR P))
             (COND ((NULL (CDR P)) (RETURN (DIFFERENCE N M))))
             (SETQ P (CDR P))
             (COND
              ((EQUAL (DEGR P Y) 0)
               (RETURN
                (COND
                 ((LESSP M 0)
                  (COND ((LESSP N 0) (MINUS M)) (T (DIFFERENCE N M))))
                 (T N)))))
             (GO A))))) 
(PUT 'LT* 'NUMBER-OF-ARGS 1) 
(PUT 'LT* 'DEFINED-ON-LINE '672) 
(PUT 'LT* 'DEFINED-IN-FILE 'POLY/POLREP.RED) 
(PUT 'LT* 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE LT* (P)
    (COND ((OR *MCD (GREATERP (CDAAR P) 0)) (CAR P))
          (T
           (PROG (X Y)
             (SETQ X (CAR P))
             (SETQ Y (CAAAR P))
            A
             (SETQ P (CDR P))
             (COND ((NULL P) (RETURN X))
                   ((EQUAL (DEGR P Y) 0) (RETURN (CONS (CONS Y 0) P))))
             (GO A))))) 
(PUT 'REMF 'NUMBER-OF-ARGS 2) 
(PUT 'REMF 'DEFINED-ON-LINE '684) 
(PUT 'REMF 'DEFINED-IN-FILE 'POLY/POLREP.RED) 
(PUT 'REMF 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE REMF (U V)
    (COND ((NULL V) (RERROR 'POLY 201 "Zero divisor")) (T (CDR (QREMF U V))))) 
(PUT 'QREMF 'NUMBER-OF-ARGS 2) 
(PUT 'QREMF 'DEFINED-ON-LINE '688) 
(PUT 'QREMF 'DEFINED-IN-FILE 'POLY/POLREP.RED) 
(PUT 'QREMF 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE QREMF (U V)
    (PROG (N *EXP X Y Z)
      (SETQ N 0)
      (SETQ *EXP T)
      (COND ((OR (ATOM V) (ATOM (CAR V))) (RETURN (QREMD U V))))
      (SETQ Z (LIST NIL))
     A
      (COND ((OR (ATOM U) (ATOM (CAR U))) (RETURN (PRADDF Z (CONS NIL U))))
            ((EQ (CAAAR U) (CAAAR V))
             (COND
              ((LESSP (SETQ N (DIFFERENCE (CDAAR U) (CDAAR V))) 0)
               (RETURN (PRADDF Z (CONS NIL U))))
              (T
               (PROGN
                (SETQ X (QREMF (CDAR U) (CDAR V)))
                (SETQ Y
                        ((LAMBDA (G544)
                           (COND (*PHYSOP-LOADED (PHYSOP-MULTF G544 (CDR X)))
                                 (T (POLY-MULTF G544 (CDR X)))))
                         (LIST (CONS (CAAR U) 1))))
                (SETQ Z
                        (PRADDF Z
                                (CONS
                                 (COND ((EQUAL N 0) (CAR X))
                                       (T
                                        ((LAMBDA (G544)
                                           (COND
                                            (*PHYSOP-LOADED
                                             (PHYSOP-MULTF G544 (CAR X)))
                                            (T (POLY-MULTF G544 (CAR X)))))
                                         (LIST (CONS (CONS (CAAAR U) N) 1)))))
                                 Y)))
                (SETQ U
                        (COND ((NULL (CAR X)) (CDR U))
                              (T
                               (ADDF
                                (ADDF U
                                      ((LAMBDA (G561 G562)
                                         (COND
                                          (*PHYSOP-LOADED
                                           (PHYSOP-MULTF G561 G562))
                                          (T (POLY-MULTF G561 G562))))
                                       (COND ((EQUAL N 0) V)
                                             (T
                                              ((LAMBDA (G544)
                                                 (COND
                                                  (*PHYSOP-LOADED
                                                   (PHYSOP-MULTF G544 V))
                                                  (T (POLY-MULTF G544 V))))
                                               (LIST
                                                (CONS (CONS (CAAAR U) N) 1)))))
                                       (NEGF (CAR X))))
                                (NEGF Y)))))
                (GO A)))))
            ((NOT (ORDOP (CAAAR U) (CAAAR V)))
             (RETURN (PRADDF Z (CONS NIL U)))))
      (SETQ X (QREMF (CDAR U) V))
      (SETQ Z
              (PRADDF Z
                      (CONS
                       ((LAMBDA (G544)
                          (COND (*PHYSOP-LOADED (PHYSOP-MULTF G544 (CAR X)))
                                (T (POLY-MULTF G544 (CAR X)))))
                        (LIST (CONS (CAAR U) 1)))
                       ((LAMBDA (G544)
                          (COND (*PHYSOP-LOADED (PHYSOP-MULTF G544 (CDR X)))
                                (T (POLY-MULTF G544 (CDR X)))))
                        (LIST (CONS (CAAR U) 1))))))
      (SETQ U (CDR U))
      (GO A))) 
(PUT 'PRADDF 'NUMBER-OF-ARGS 2) 
(PUT 'PRADDF 'DEFINED-ON-LINE '717) 
(PUT 'PRADDF 'DEFINED-IN-FILE 'POLY/POLREP.RED) 
(PUT 'PRADDF 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE PRADDF (U V) (CONS (ADDF (CAR U) (CAR V)) (ADDF (CDR U) (CDR V)))) 
(PUT 'QREMD 'NUMBER-OF-ARGS 2) 
(PUT 'QREMD 'DEFINED-ON-LINE '721) 
(PUT 'QREMD 'DEFINED-IN-FILE 'POLY/POLREP.RED) 
(PUT 'QREMD 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE QREMD (U V)
    (COND ((NULL U) (CONS U U)) ((EQUAL V 1) (LIST U))
          ((FLAGP DMODE* 'FIELD) (LIST (MULTD (|:RECIP| V) U)))
          ((OR (ATOM U) (ATOM (CAR U))) (|:DIVIDE| U V))
          (T
           (PROG (X)
             (SETQ X (QREMF (CDAR U) V))
             (RETURN
              (PRADDF
               (CONS
                ((LAMBDA (G544)
                   (COND (*PHYSOP-LOADED (PHYSOP-MULTF G544 (CAR X)))
                         (T (POLY-MULTF G544 (CAR X)))))
                 (LIST (CONS (CAAR U) 1)))
                ((LAMBDA (G544)
                   (COND (*PHYSOP-LOADED (PHYSOP-MULTF G544 (CDR X)))
                         (T (POLY-MULTF G544 (CDR X)))))
                 (LIST (CONS (CAAR U) 1))))
               (QREMD (CDR U) V))))))) 
(PUT 'LQREMF 'NUMBER-OF-ARGS 2) 
(PUT 'LQREMF 'DEFINED-ON-LINE '734) 
(PUT 'LQREMF 'DEFINED-IN-FILE 'POLY/POLREP.RED) 
(PUT 'LQREMF 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE LQREMF (U V)
    (PROG (X Y)
      (SETQ Y (LIST U))
      (PROG ()
       WHILELABEL
        (COND ((NOT (CAR (SETQ X (QREMF (CAR Y) V)))) (RETURN NIL)))
        (SETQ Y (CONS (CAR X) (CONS (CDR X) (CDR Y))))
        (GO WHILELABEL))
      (RETURN (REVERSIP* Y)))) 
(PUT 'MINUSF 'NUMBER-OF-ARGS 1) 
(PUT 'MINUSF 'DEFINED-ON-LINE '742) 
(PUT 'MINUSF 'DEFINED-IN-FILE 'POLY/POLREP.RED) 
(PUT 'MINUSF 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE MINUSF (U)
    (COND ((NULL U) NIL)
          ((OR (ATOM U) (ATOM (CAR U)))
           (COND ((ATOM U) (LESSP U 0)) (T (APPLY1 (GET (CAR U) 'MINUSP) U))))
          (T (MINUSF (CDAR U))))) 
(PUT 'ABSF* 'NUMBER-OF-ARGS 1) 
(PUT 'ABSF* 'DEFINED-ON-LINE '751) 
(PUT 'ABSF* 'DEFINED-IN-FILE 'POLY/POLREP.RED) 
(PUT 'ABSF* 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE ABSF* (U)
    ((LAMBDA (X)
       (COND ((OR (ATOM U) (ATOM (CAR U))) X)
             (T (LIST (CONS (GETPOWER (FKERN (LIST 'ABS (PREPF X))) 1) 1)))))
     (ABSF U))) 
(PUT 'ABSF 'NUMBER-OF-ARGS 1) 
(PUT 'ABSF 'DEFINED-ON-LINE '756) 
(PUT 'ABSF 'DEFINED-IN-FILE 'POLY/POLREP.RED) 
(PUT 'ABSF 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE ABSF (U) (COND ((MINUSF U) (NEGF U)) (T U))) 
(PUT 'CANONSQ 'NUMBER-OF-ARGS 1) 
(PUT 'CANONSQ 'DEFINED-ON-LINE '759) 
(PUT 'CANONSQ 'DEFINED-IN-FILE 'POLY/POLREP.RED) 
(PUT 'CANONSQ 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE CANONSQ (U)
    (COND ((EQUAL (CDR U) 1) U) ((NULL (CAR U)) (CONS NIL 1))
          (T
           (PROG (X Y)
             (COND
              ((AND ASYMPLIS* (NEQ (SETQ X (GCDF (CAR U) (CDR U))) 1))
               (SETQ U (CONS (QUOTF-FAIL (CAR U) X) (QUOTF-FAIL (CDR U) X)))))
             (SETQ X (LNC (CDR U)))
             (COND ((EQUAL X 1) (RETURN U))
                   ((ATOM X)
                    (COND
                     ((MINUSP X)
                      (PROGN
                       (SETQ U (CONS (NEGF (CAR U)) (NEGF (CDR U))))
                       (SETQ X (MINUS X))))
                     (T NIL)))
                   ((APPLY1 (GET (CAR X) 'MINUSP) X)
                    (PROGN
                     (SETQ U (CONS (NEGF (CAR U)) (NEGF (CDR U))))
                     (SETQ X
                             (APPLY2 (GET (CAR X) 'DIFFERENCE)
                                     (APPLY1 (GET (CAR X) 'I2D) 0) X)))))
             (RETURN
              (COND
               ((AND (NOT (NUMBERP X)) (SETQ Y (GET DMODE* 'UNITSFN)))
                (APPLY2 Y U X))
               ((OR (FLAGP DMODE* 'FIELD)
                    (AND (NOT (ATOM X)) (FLAGP (CAR X) 'FIELD)))
                (FIELDCONV X U))
               (T U))))))) 
(PUT 'FIELDCONV 'NUMBER-OF-ARGS 2) 
(PUT 'FIELDCONV 'DEFINED-ON-LINE '795) 
(PUT 'FIELDCONV 'DEFINED-IN-FILE 'POLY/POLREP.RED) 
(PUT 'FIELDCONV 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE FIELDCONV (X U)
    (PROG (N D Y)
      (SETQ N (CAR U))
      (SETQ D (CDR U))
      (COND
       ((NULL DMODE*)
        (PROGN
         (COND
          ((NOT (EQCAR X '|:RN:|))
           (COND
            ((AND (SETQ Y (GET (CAR X) '|:RN:|)) (ATOM Y))
             (SETQ X (APPLY1 Y X)))
            ((GET (CAR X) 'QUOTIENT)
             (PROGN
              (SETQ X (DCOMBINE 1 X 'QUOTIENT))
              (RETURN (CONS (MULTD X (CAR U)) (MULTD X (CDR U))))))
            (T (ERRACH (LIST "field conversion" X))))))
         (SETQ X (CONS (CAR X) (CONS (CDDR X) (CADR X))))
         (RETURN
          (SIMPGD
           (COND ((OR (ATOM D) (ATOM (CAR D))) (CONS (MULTD X N) 1))
                 (T (CONS (MULTD X N) (MULTD X D)))))))))
      (RETURN
       (COND ((OR (ATOM D) (ATOM (CAR D))) (CONS (DIVD N D) 1))
             (T (CONS (DIVD N X) (DIVD D X))))))) 
(PUT 'SIMPGD 'NUMBER-OF-ARGS 1) 
(PUT 'SIMPGD 'DEFINED-ON-LINE '815) 
(PUT 'SIMPGD 'DEFINED-IN-FILE 'POLY/POLREP.RED) 
(PUT 'SIMPGD 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE SIMPGD (U)
    (COND ((NULL (FLAGP DMODE* 'FIELD)) U)
          (T
           (PROG (X)
             (COND
              ((NEQ (SETQ X (GCDF (CAR U) (CDR U))) 1)
               (SETQ U (CONS (QUOTF-FAIL (CAR U) X) (QUOTF-FAIL (CDR U) X)))))
             (RETURN U))))) 
(PUT 'LNC 'NUMBER-OF-ARGS 1) 
(PUT 'LNC 'DEFINED-ON-LINE '823) 
(PUT 'LNC 'DEFINED-IN-FILE 'POLY/POLREP.RED) 
(PUT 'LNC 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE LNC (U)
    (COND ((NULL U) 0) ((OR (ATOM U) (ATOM (CAR U))) U) (T (LNC (CDAR U))))) 
(PUT 'INVSQ 'NUMBER-OF-ARGS 1) 
(PUT 'INVSQ 'DEFINED-ON-LINE '829) 
(PUT 'INVSQ 'DEFINED-IN-FILE 'POLY/POLREP.RED) 
(PUT 'INVSQ 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE INVSQ (U)
    (PROG ()
      (COND ((NULL (CAR U)) (RERROR 'POLY 3 "Zero divisor")))
      (SETQ U (CONS (CDR U) (CAR U)))
      (COND (*RATIONALIZE (SETQ U (GCDCHK U))))
      (RETURN (CANONSQ U)))) 
(PUT 'GCDCHK 'NUMBER-OF-ARGS 1) 
(PUT 'GCDCHK 'DEFINED-ON-LINE '838) 
(PUT 'GCDCHK 'DEFINED-IN-FILE 'POLY/POLREP.RED) 
(PUT 'GCDCHK 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE GCDCHK (U)
    ((LAMBDA (X)
       (COND ((NEQ X 1) (CONS (QUOTF-FAIL (CAR U) X) (QUOTF-FAIL (CDR U) X)))
             (T U)))
     (GCDF (CAR U) (CDR U)))) 
(ENDMODULE) 