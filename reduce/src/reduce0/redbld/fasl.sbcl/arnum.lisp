(cl:declaim (cl:optimize cl:debug cl:safety))
(cl:declaim (sb-ext:muffle-conditions sb-ext:compiler-note cl:style-warning))
(MODULE (LIST 'ARNUM)) 
(CREATE-PACKAGE '(ARNUM ARINV) '(CONTRIB ARNUM)) 
(FLUID '(*BEZOUT)) 
(GLOBAL
 '(DOMAINLIST* ARBASE* ARVARS* REPOWL* CURDEFPOL* *ACOUNTER* *EXTVAR*
   REEXPRESSL*)) 
(SETQ *ACOUNTER* 0) 
(SETQ *BEZOUT T) 
(SETQ *EXTVAR* 'A) 
(FLUID
 '(*ARNUM DMODE* *EXP *CHK-REDUCIBILITY *REEXPRESS *ARINV *ARQUOT *ARQ
   ALGLIST*)) 
(GLOBAL '(TIMER TIMEF)) 
(SWITCH (LIST 'ARNUM)) 
(SETQ TIMER (SETQ TIMEF 0)) 
(SETQ DOMAINLIST* (UNION '(|:AR:|) DOMAINLIST*)) 
(PUT 'DEFPOLY 'NUMBER-OF-ARGS 1) 
(PUT 'DEFPOLY 'DEFINED-ON-LINE '56) 
(PUT 'DEFPOLY 'DEFINED-IN-FILE 'ARNUM/ARNUM.RED) 
(PUT 'DEFPOLY 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE DEFPOLY (U)
    (PROG ()
      (COND ((NULL (EQ DMODE* '|:AR:|)) (ON (LIST 'ARNUM))))
      (PROG (J)
        (SETQ J U)
       LAB
        (COND ((NULL J) (RETURN NIL)))
        ((LAMBDA (J)
           (COND
            ((EQEXPR J)
             (COND ((EQUAL (CADR J) 0) (DEFPOLY1 (CADDR J)))
                   ((EQUAL (CADDR J) 0) (DEFPOLY1 (CADR J)))
                   (T
                    (RERROR 'ARNUM 1
                            (LIST (CADR J) "=" (CADDR J)
                                  "  is not a proper defining polynomial")))))
            (T (DEFPOLY1 J))))
         (CAR J))
        (SETQ J (CDR J))
        (GO LAB)))) 
(PUT 'DEFPOLY1 'NUMBER-OF-ARGS 1) 
(PUT 'DEFPOLY1 'DEFINED-ON-LINE '68) 
(PUT 'DEFPOLY1 'DEFINED-IN-FILE 'ARNUM/ARNUM.RED) 
(PUT 'DEFPOLY1 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE DEFPOLY1 (U)
    (PROG (X ALGLIST*)
      (SETQ ALGLIST* (CONS NIL NIL))
      (SETQ X (REVAL1 U NIL))
      (COND ((EQUAL X 0) (MKEXTENSION U)) (T (MKEXTENSION X))))) 
(RLISTAT '(DEFPOLY)) 
(PUT 'MKEXTENSION 'NUMBER-OF-ARGS 1) 
(PUT 'MKEXTENSION 'DEFINED-ON-LINE '76) 
(PUT 'MKEXTENSION 'DEFINED-IN-FILE 'ARNUM/ARNUM.RED) 
(PUT 'MKEXTENSION 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE MKEXTENSION (U)
    (COND ((NULL CURDEFPOL*) (INITALGNUM U))
          (T (PROG (*EXP) (SETQ *EXP T) (PRIMITIVE_ELEM (*Q2F (SIMP* U))))))) 
(PUT 'INITALGNUM 'NUMBER-OF-ARGS 1) 
(PUT 'INITALGNUM 'DEFINED-ON-LINE '83) 
(PUT 'INITALGNUM 'DEFINED-IN-FILE 'ARNUM/ARNUM.RED) 
(PUT 'INITALGNUM 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE INITALGNUM (U)
    (PROG (DMODE* ALGLIST* *EXP X)
      (SETQ ALGLIST* (CONS NIL NIL))
      (SETQ *EXP T)
      (SETQ ARBASE* NIL)
      (SETQ U (CAR (SIMP0 U)))
      (COND ((SETQ X (NOT_IN_EXTENSION U)) (SETQ U X)) (T (RETURN NIL)))
      (COND ((NEQ (CDAR U) 1) (SETQ U (MONICIZE U))))
      (SETQ CURDEFPOL* U)
      (PROG (J)
        (SETQ J 0)
       LAB
        (COND ((MINUSP (DIFFERENCE (DIFFERENCE (CDAAR U) 1) J)) (RETURN NIL)))
        (SETQ ARBASE*
                (CONS (COND ((EQUAL J 0) 1) (T (GETPOWER (FKERN (CAAAR U)) J)))
                      ARBASE*))
        (SETQ J (PLUS2 J 1))
        (GO LAB))
      (SETQ ARVARS* (CONS (CAAAR U) ARVARS*))
      (MK-ALGEBRAIC-NUMBER-VARS (LIST (CAAAR U)))
      (SETQ REPOWL* (CONS (CAAR U) (NEGF (CDR U)))))) 
(PUT 'PUT-CURRENT-REPRESENTATION 'NUMBER-OF-ARGS 2) 
(PUT 'PUT-CURRENT-REPRESENTATION 'DEFINED-ON-LINE '101) 
(PUT 'PUT-CURRENT-REPRESENTATION 'DEFINED-IN-FILE 'ARNUM/ARNUM.RED) 
(PUT 'PUT-CURRENT-REPRESENTATION 'PROCEDURE_TYPE
     '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE PUT-CURRENT-REPRESENTATION (U V) (PUT U 'CURREP V)) 
(PUT 'GET-CURRENT-REPRESENTATION 'NUMBER-OF-ARGS 1) 
(PUT 'GET-CURRENT-REPRESENTATION 'DEFINED-ON-LINE '104) 
(PUT 'GET-CURRENT-REPRESENTATION 'DEFINED-IN-FILE 'ARNUM/ARNUM.RED) 
(PUT 'GET-CURRENT-REPRESENTATION 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE GET-CURRENT-REPRESENTATION (U) (GET U 'CURREP)) 
(PUT 'MKDAR 'NUMBER-OF-ARGS 1) 
(PUT 'MKDAR 'DEFINED-ON-LINE '107) 
(PUT 'MKDAR 'DEFINED-IN-FILE 'ARNUM/ARNUM.RED) 
(PUT 'MKDAR 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE MKDAR (U)
    ((LAMBDA (X)
       (CONS (COND (X X) (T (CONS '|:AR:| (LIST (CONS (CONS U 1) 1))))) 1))
     (GET-CURRENT-REPRESENTATION U))) 
(PUT 'RELEASE 'NUMBER-OF-ARGS 1) 
(PUT 'RELEASE 'DEFINED-ON-LINE '113) 
(PUT 'RELEASE 'DEFINED-IN-FILE 'ARNUM/ARNUM.RED) 
(PUT 'RELEASE 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE RELEASE (U)
    (PROG (J)
      (SETQ J U)
     LAB
      (COND ((NULL J) (RETURN NIL)))
      ((LAMBDA (J)
         (COND ((ATOM J) (REMPROP J 'IDVALFN)) (T (CLEAR1 (LIST (*A2K J))))))
       (CAR J))
      (SETQ J (CDR J))
      (GO LAB))) 
(PUT 'MK-ALGEBRAIC-NUMBER-VARS 'NUMBER-OF-ARGS 1) 
(PUT 'MK-ALGEBRAIC-NUMBER-VARS 'DEFINED-ON-LINE '119) 
(PUT 'MK-ALGEBRAIC-NUMBER-VARS 'DEFINED-IN-FILE 'ARNUM/ARNUM.RED) 
(PUT 'MK-ALGEBRAIC-NUMBER-VARS 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE MK-ALGEBRAIC-NUMBER-VARS (U)
    (PROG (J)
      (SETQ J U)
     LAB
      (COND ((NULL J) (RETURN NIL)))
      ((LAMBDA (J)
         (COND ((ATOM J) (PUT J 'IDVALFN 'MKDAR))
               (T (SETK (*A2K J) (MK*SQ (MKDAR J))))))
       (CAR J))
      (SETQ J (CDR J))
      (GO LAB))) 
(PUT 'UNCURREP 'NUMBER-OF-ARGS 1) 
(PUT 'UNCURREP 'DEFINED-ON-LINE '125) 
(PUT 'UNCURREP 'DEFINED-IN-FILE 'ARNUM/ARNUM.RED) 
(PUT 'UNCURREP 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE UNCURREP (U)
    (PROG (J)
      (SETQ J U)
     LAB
      (COND ((NULL J) (RETURN NIL)))
      ((LAMBDA (J) (REMPROP J 'CURREP)) (CAR J))
      (SETQ J (CDR J))
      (GO LAB))) 
(PUT 'UPDATE-EXTENSION 'NUMBER-OF-ARGS 1) 
(PUT 'UPDATE-EXTENSION 'DEFINED-ON-LINE '128) 
(PUT 'UPDATE-EXTENSION 'DEFINED-IN-FILE 'ARNUM/ARNUM.RED) 
(PUT 'UPDATE-EXTENSION 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE UPDATE-EXTENSION (U)
    (PROG (J)
      (SETQ J U)
     LAB
      (COND ((NULL J) (RETURN NIL)))
      ((LAMBDA (J)
         ((LAMBDA (X) (AND X (PUT J 'CURREP (CAR (SIMP (PREPF (CDR X)))))))
          (GET J 'CURREP)))
       (CAR J))
      (SETQ J (CDR J))
      (GO LAB))) 
(PUT 'EXPRESS-IN-ARVARS 'NUMBER-OF-ARGS 1) 
(PUT 'EXPRESS-IN-ARVARS 'DEFINED-ON-LINE '134) 
(PUT 'EXPRESS-IN-ARVARS 'DEFINED-IN-FILE 'ARNUM/ARNUM.RED) 
(PUT 'EXPRESS-IN-ARVARS 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE EXPRESS-IN-ARVARS (U)
    (RERROR 'ARNUM 2 "Switch reexpress not yet implemented")) 
(PUT 'MKREEXPRESSL 'NUMBER-OF-ARGS 0) 
(PUT 'MKREEXPRESSL 'DEFINED-ON-LINE '144) 
(PUT 'MKREEXPRESSL 'DEFINED-IN-FILE 'ARNUM/ARNUM.RED) 
(PUT 'MKREEXPRESSL 'PROCEDURE_TYPE '(ARROW UNIT GENERAL)) 
(DE MKREEXPRESSL NIL (SETQ REEXPRESSL* NIL)) 
(PUT 'REEXPRESS 'SIMPFG '((T (MKREEXPRESSL)) (NIL (SETQ REEXPRESSL* NIL)))) 
(FLAG '(|:AR:|) 'FIELD) 
(PUT 'ARNUM 'TAG '|:AR:|) 
(PUT '|:AR:| 'DNAME 'ARNUM) 
(PUT '|:AR:| 'I2D '*I2AR) 
(PUT '|:AR:| '|:RD:| 'ARCONV) 
(PUT '|:AR;| '|:CR:| 'ARCONV) 
(PUT '|:AR:| '|:MOD:| 'ARCONV) 
(PUT '|:AR:| 'MINUSP '|ARMINUSP:|) 
(PUT '|:AR:| 'ZEROP '|ARZEROP:|) 
(PUT '|:AR:| 'ONEP '|ARONEP:|) 
(PUT '|:AR:| 'PLUS '|ARPLUS:|) 
(PUT '|:AR:| 'DIFFERENCE '|ARDIFFERENCE:|) 
(PUT '|:AR:| 'TIMES '|ARTIMES:|) 
(PUT '|:AR:| 'QUOTIENT '|ARQUOTIENT:|) 
(PUT '|:AR:| 'FACTORFN '|ARFACTOR:|) 
(PUT '|:AR:| 'RATIONALIZEFN '|ARRATIONALIZE:|) 
(PUT '|:AR:| 'PREPFN '|ARPREP:|) 
(PUT '|:AR:| 'INTEQUIVFN '|ARINTEQUIV:|) 
(PUT '|:AR:| 'PRIFN '|ARPRN:|) 
(PUT '|:RN:| '|:AR:| 'RN2AR) 
(FLAG '(|:AR:|) 'RATMODE) 
(PUT 'RN2AR 'NUMBER-OF-ARGS 1) 
(PUT 'RN2AR 'DEFINED-ON-LINE '181) 
(PUT 'RN2AR 'DEFINED-IN-FILE 'ARNUM/ARNUM.RED) 
(PUT 'RN2AR 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE RN2AR (U) (CONS '|:AR:| (COND ((EQUAL (CDDR U) 1) (CADR U)) (T U)))) 
(PUT 'AR2RN 'NUMBER-OF-ARGS 1) 
(PUT 'AR2RN 'DEFINED-ON-LINE '184) 
(PUT 'AR2RN 'DEFINED-IN-FILE 'ARNUM/ARNUM.RED) 
(PUT 'AR2RN 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE AR2RN (U)
    (COND ((EQ (CADR U) '|:RN:|) (CDR U))
          ((NUMBERP (CDR U)) (CONS '|:RN:| (CONS (CDR U) 1)))
          (T (RERROR 'ARNUM 3 (LIST "Conversion to rational not possible"))))) 
(PUT '*I2AR 'NUMBER-OF-ARGS 1) 
(PUT '*I2AR 'DEFINED-ON-LINE '189) 
(PUT '*I2AR 'DEFINED-IN-FILE 'ARNUM/ARNUM.RED) 
(PUT '*I2AR 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE *I2AR (U) (CONS '|:AR:| U)) 
(PUT 'ARCONV 'NUMBER-OF-ARGS 1) 
(PUT 'ARCONV 'DEFINED-ON-LINE '192) 
(PUT 'ARCONV 'DEFINED-IN-FILE 'ARNUM/ARNUM.RED) 
(PUT 'ARCONV 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE ARCONV (U)
    (RERROR 'ARNUM 4
            (LIST "Conversion between current extension and"
                  (GET (CAR U) 'DNAME) "not possible"))) 
(PUT '|ARMINUSP:| 'NUMBER-OF-ARGS 1) 
(PUT '|ARMINUSP:| 'DEFINED-ON-LINE '197) 
(PUT '|ARMINUSP:| 'DEFINED-IN-FILE 'ARNUM/ARNUM.RED) 
(PUT '|ARMINUSP:| 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE |ARMINUSP:| (U) (MINUSF (CDR U))) 
(PUT '|ARZEROP:| 'NUMBER-OF-ARGS 1) 
(PUT '|ARZEROP:| 'DEFINED-ON-LINE '200) 
(PUT '|ARZEROP:| 'DEFINED-IN-FILE 'ARNUM/ARNUM.RED) 
(PUT '|ARZEROP:| 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE |ARZEROP:| (U) (NULL (CDR U))) 
(PUT '|ARONEP:| 'NUMBER-OF-ARGS 1) 
(PUT '|ARONEP:| 'DEFINED-ON-LINE '203) 
(PUT '|ARONEP:| 'DEFINED-IN-FILE 'ARNUM/ARNUM.RED) 
(PUT '|ARONEP:| 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE |ARONEP:| (U) (EQUAL (CDR U) 1)) 
(PUT '|ARINTEQUIV:| 'NUMBER-OF-ARGS 1) 
(PUT '|ARINTEQUIV:| 'DEFINED-ON-LINE '206) 
(PUT '|ARINTEQUIV:| 'DEFINED-IN-FILE 'ARNUM/ARNUM.RED) 
(PUT '|ARINTEQUIV:| 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE |ARINTEQUIV:| (U)
    (COND ((NUMBERP (CDR U)) (CDR U))
          ((AND (EQ (CADR U) '|:RN:|) (EQUAL (CDDDR U) 1)) (CADDR U)) (T NIL))) 
(DE MKAR (U) (CONS '|:AR:| U)) 
(PUT 'MKAR 'NUMBER-OF-ARGS 1) 
(PUT 'MKAR 'DEFINED-ON-LINE '211) 
(PUT 'MKAR 'DEFINED-IN-FILE 'ARNUM/ARNUM.RED) 
(PUT 'MKAR 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(PUTC 'MKAR 'INLINE '(LAMBDA (U) (CONS '|:AR:| U))) 
(PUT '|ARPLUS:| 'NUMBER-OF-ARGS 2) 
(PUT '|ARPLUS:| 'DEFINED-ON-LINE '214) 
(PUT '|ARPLUS:| 'DEFINED-IN-FILE 'ARNUM/ARNUM.RED) 
(PUT '|ARPLUS:| 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE |ARPLUS:| (U V)
    (PROG (DMODE* *EXP)
      (SETQ *EXP T)
      (RETURN (CONS '|:AR:| (ADDF (CDR U) (CDR V)))))) 
(PUT '|ARDIFFERENCE:| 'NUMBER-OF-ARGS 2) 
(PUT '|ARDIFFERENCE:| 'DEFINED-ON-LINE '220) 
(PUT '|ARDIFFERENCE:| 'DEFINED-IN-FILE 'ARNUM/ARNUM.RED) 
(PUT '|ARDIFFERENCE:| 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE |ARDIFFERENCE:| (U V)
    (PROG (DMODE* *EXP)
      (SETQ *EXP T)
      (RETURN (CONS '|:AR:| (ADDF (CDR U) (NEGF (CDR V))))))) 
(PUT '|ARTIMES:| 'NUMBER-OF-ARGS 2) 
(PUT '|ARTIMES:| 'DEFINED-ON-LINE '226) 
(PUT '|ARTIMES:| 'DEFINED-IN-FILE 'ARNUM/ARNUM.RED) 
(PUT '|ARTIMES:| 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE |ARTIMES:| (U V)
    (PROG (DMODE* *EXP)
      (SETQ *EXP T)
      (RETURN
       (CONS '|:AR:|
             (REDUCEPOWERS
              (COND (*PHYSOP-LOADED (PHYSOP-MULTF (CDR U) (CDR V)))
                    (T (POLY-MULTF (CDR U) (CDR V))))))))) 
(PUT '|ARQUOTIENT:| 'NUMBER-OF-ARGS 2) 
(PUT '|ARQUOTIENT:| 'DEFINED-ON-LINE '232) 
(PUT '|ARQUOTIENT:| 'DEFINED-IN-FILE 'ARNUM/ARNUM.RED) 
(PUT '|ARQUOTIENT:| 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE |ARQUOTIENT:| (U V)
    (PROG (R S Y Z DMODE* *EXP)
      (SETQ *EXP T)
      (COND
       ((OR (ATOM (CDR V)) (ATOM (CAR (CDR V))))
        (RETURN
         (CONS '|:AR:|
               (MULTD
                (PROGN
                 (SETQ DMODE* '|:RN:|)
                 (SETQ S (|:RECIP| (CDR V)))
                 (SETQ DMODE* NIL)
                 S)
                (CDR U))))))
      (COND
       (*ARINV
        (RETURN
         (CONS '|:AR:|
               (REDUCEPOWERS
                ((LAMBDA (G542)
                   (COND (*PHYSOP-LOADED (PHYSOP-MULTF (CDR U) G542))
                         (T (POLY-MULTF (CDR U) G542))))
                 (ARINV (CDR V))))))))
      (COND (*ARQUOT (RETURN (CONS '|:AR:| (ARQUOT (CDR V) (CDR U))))))
      (COND
       (*ARQ
        (RETURN
         (CONS '|:AR:|
               (REDUCEPOWERS
                ((LAMBDA (G544)
                   (COND (*PHYSOP-LOADED (PHYSOP-MULTF U G544))
                         (T (POLY-MULTF U G544))))
                 (ARQUOT1 V)))))))
      (SETQ R (ILNRSOLVE (MKQMATR (CDR V)) (MKQCOL (CDR U))))
      (SETQ Z ARBASE*)
      (SETQ DMODE* '|:RN:|)
      (PROG (J)
        (SETQ J R)
       LAB
        (COND ((NULL J) (RETURN NIL)))
        ((LAMBDA (J)
           (SETQ S
                   (ADDF
                    ((LAMBDA (G545 G546)
                       (COND (*PHYSOP-LOADED (PHYSOP-MULTF G545 G546))
                             (T (POLY-MULTF G545 G546))))
                     (INT-EQUIV-CHK (CAR J))
                     (PROGN
                      (SETQ Y
                              (COND ((ATOM (CAR Z)) 1)
                                    (T (LIST (CONS (CAR Z) 1)))))
                      (SETQ Z (CDR Z))
                      Y))
                    S)))
         (CAR J))
        (SETQ J (CDR J))
        (GO LAB))
      (RETURN (CONS '|:AR:| S)))) 
(PUT '|ARFACTOR:| 'NUMBER-OF-ARGS 1) 
(PUT '|ARFACTOR:| 'DEFINED-ON-LINE '254) 
(PUT '|ARFACTOR:| 'DEFINED-IN-FILE 'ARNUM/ARNUM.RED) 
(PUT '|ARFACTOR:| 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE |ARFACTOR:| (V)
    (COND ((OR (ATOM V) (ATOM (CAR V))) (LIST V))
          ((NULL CURDEFPOL*) (INTERNAL-FACTORF V))
          (T
           (PROG (W X Y Z AFTRS IFCTR FTRS MVA MVU DMODE* *EXP)
             (SETQ TIMER (SETQ TIMEF 0))
             (SETQ *EXP T)
             (SETQ MVA (CAAAR CURDEFPOL*))
             (SETQ MVU (CAAAR V))
             (SETQ IFCTR (FACTORFT (CAR (SETQ V (FD2Q V)))))
             (SETQ DMODE* '|:AR:|)
             (SETQ W
                     (COND ((NEQ (CDR V) 1) (MKRN (CAR IFCTR) (CDR V)))
                           (T (CAR IFCTR))))
             (PROG (F)
               (SETQ F (CDR IFCTR))
              LAB
               (COND ((NULL F) (RETURN NIL)))
               ((LAMBDA (F)
                  (PROG (L)
                    (SETQ Y (CAR (SUBF1 (CAR F) NIL)))
                    (COND
                     ((OR (ATOM Y) (ATOM (CAR Y)))
                      (PROGN (SETQ W (MULTD Y W)) (RETURN NIL))))
                    (SETQ Y (SQFRNORM Y))
                    (SETQ DMODE* NIL)
                    (SETQ FTRS (FACTORFT (CAR Y)))
                    (SETQ DMODE* '|:AR:|)
                    (COND
                     ((NEQ (CADR Y) 0)
                      (SETQ L
                              (LIST
                               (CONS MVU
                                     (PREPF
                                      (ADDF (LIST (CONS (CONS MVU 1) 1))
                                            (NEGF
                                             (MULTD (CADR Y)
                                                    (LIST
                                                     (CONS (CONS MVA 1)
                                                           1)))))))))))
                    (SETQ Y (CDDR Y))
                    (PROG (J)
                      (SETQ J (CDR FTRS))
                     LAB
                      (COND ((NULL J) (RETURN NIL)))
                      ((LAMBDA (J)
                         (PROGN
                          (SETQ X (GCDF* (CAR J) Y))
                          (SETQ Y (QUOTF* Y X))
                          (SETQ Z (COND (L (CAR (SUBF1 X L))) (T X)))
                          (SETQ X (LNC (CKRN Z)))
                          (SETQ Z ((LAMBDA (*EXP) (QUOTF1 Z X)) T))
                          (SETQ W
                                  ((LAMBDA (G548)
                                     (COND
                                      (*PHYSOP-LOADED (PHYSOP-MULTF W G548))
                                      (T (POLY-MULTF W G548))))
                                   (EXPTF X (CDR F))))
                          (SETQ AFTRS (CONS (CONS Z (CDR F)) AFTRS))))
                       (CAR J))
                      (SETQ J (CDR J))
                      (GO LAB))))
                (CAR F))
               (SETQ F (CDR F))
               (GO LAB))
             (RETURN (CONS W (SORT-FACTORS AFTRS))))))) 
(PUT 'AFACTORIZE 'NUMBER-OF-ARGS 1) 
(PUT 'AFACTORIZE 'DEFINED-ON-LINE '293) 
(PUT 'AFACTORIZE 'DEFINED-IN-FILE 'ARNUM/ARNUM.RED) 
(PUT 'AFACTORIZE 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE AFACTORIZE (U)
    (PROG (FTRS X *EXP N)
      (SETQ N 0)
      (SETQ *EXP T)
      (COND
       ((CDR U) (PROGN (OFF (LIST 'ARNUM)) (DEFPOLY (LIST (LIST 'CDR U))))))
      (SETQ X (|ARFACTOR:| (*Q2F (SIMP* (CAR U)))))
      (SETQ FTRS (CONS (CONS 0 (MK*SQ (CONS (CAR X) 1))) NIL))
      (PROG (J)
        (SETQ J (CDR X))
       LAB
        (COND ((NULL J) (RETURN NIL)))
        ((LAMBDA (J)
           (PROG (K)
             (SETQ K 1)
            LAB
             (COND ((MINUSP (DIFFERENCE (CDR J) K)) (RETURN NIL)))
             (SETQ FTRS
                     (CONS (CONS (SETQ N (PLUS N 1)) (MK*SQ (CONS (CAR J) 1)))
                           FTRS))
             (SETQ K (PLUS2 K 1))
             (GO LAB)))
         (CAR J))
        (SETQ J (CDR J))
        (GO LAB))
      (RETURN (MULTIPLE-RESULT FTRS NIL)))) 
(PUT 'ALGEB_FACTORIZE 'PSOPFN 'AFACTORIZE) 
(PUT '|ARPREP:| 'NUMBER-OF-ARGS 1) 
(PUT '|ARPREP:| 'DEFINED-ON-LINE '308) 
(PUT '|ARPREP:| 'DEFINED-IN-FILE 'ARNUM/ARNUM.RED) 
(PUT '|ARPREP:| 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE |ARPREP:| (U)
    (PREPF (COND (*REEXPRESS (EXPRESS-IN-ARVARS (CDR U))) (T (CDR U))))) 
(PUT '|ARPRN:| 'NUMBER-OF-ARGS 1) 
(PUT '|ARPRN:| 'DEFINED-ON-LINE '318) 
(PUT '|ARPRN:| 'DEFINED-IN-FILE 'ARNUM/ARNUM.RED) 
(PUT '|ARPRN:| 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE |ARPRN:| (V)
    ((LAMBDA (U)
       (COND ((OR (ATOM U) (MEMQ (CAR U) '(TIMES EXPT))) (MAPRIN U))
             (T (PROGN (PRIN2* "(") (MAPRIN U) (PRIN2* ")")))))
     (PREPSQ* (CONS (CDR V) 1)))) 
(PUT 'MONICIZE 'NUMBER-OF-ARGS 1) 
(PUT 'MONICIZE 'DEFINED-ON-LINE '327) 
(PUT 'MONICIZE 'DEFINED-IN-FILE 'ARNUM/ARNUM.RED) 
(PUT 'MONICIZE 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE MONICIZE (U)
    (PROG (A MVU X N)
      (SETQ N 0)
      (SETQ X (CDAR U))
      (SETQ MVU (CAAAR U))
      (SETQ N (CDAAR U))
      (SETQ *ACOUNTER* (PLUS *ACOUNTER* 1))
      (SETQ A
              (INTERN
               (COMPRESS (APPEND (EXPLODE *EXTVAR*) (EXPLODE *ACOUNTER*)))))
      (SETQ U
              (MULTSQ (SUBF U (LIST (CONS MVU (LIST 'QUOTIENT A X))))
                      (CONS (EXPT X (DIFFERENCE N 1)) 1)))
      (MK-ALGEBRAIC-NUMBER-VARS (LIST MVU))
      (PUT-CURRENT-REPRESENTATION MVU
       (CONS '|:AR:| (CONS (CONS (CONS A 1) (CONS '|:RN:| (CONS 1 X))) NIL)))
      (TERPRI)
      (PRIN2 "defining polynomial has been monicized")
      (TERPRI)
      (MAPRIN (PREPSQ U))
      (TERPRI* T)
      (RETURN (*Q2F U)))) 
(PUT 'POLYNORM 'NUMBER-OF-ARGS 1) 
(PUT 'POLYNORM 'DEFINED-ON-LINE '352) 
(PUT 'POLYNORM 'DEFINED-IN-FILE 'ARNUM/ARNUM.RED) 
(PUT 'POLYNORM 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE POLYNORM (U)
    (PROG (DMODE* X Y N)
      (SETQ N 0)
      (SETQ N (CDAAR CURDEFPOL*))
      (SETQ X (FD2Q U))
      (SETQ Y (RESULTANTFT CURDEFPOL* (CAR X) (CAAAR CURDEFPOL*)))
      (SETQ DMODE* '|:AR:|)
      (RETURN
       (COND ((EQUAL (CDR X) 1) Y)
             (T (*Q2F (MULTSQ (CONS Y 1) (CONS 1 (EXPT (CDR X) N))))))))) 
(PUT 'RESULTANTFT 'NUMBER-OF-ARGS 3) 
(PUT 'RESULTANTFT 'DEFINED-ON-LINE '363) 
(PUT 'RESULTANTFT 'DEFINED-IN-FILE 'ARNUM/ARNUM.RED) 
(PUT 'RESULTANTFT 'PROCEDURE_TYPE
     '(ARROW (TIMES GENERAL GENERAL GENERAL) GENERAL)) 
(DE RESULTANTFT (U V W) (RESULTANT U V W)) 
(PUT 'FACTORFT 'NUMBER-OF-ARGS 1) 
(PUT 'FACTORFT 'DEFINED-ON-LINE '366) 
(PUT 'FACTORFT 'DEFINED-IN-FILE 'ARNUM/ARNUM.RED) 
(PUT 'FACTORFT 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE FACTORFT (U) (PROG (DMODE*) (RETURN (FCTRF U)))) 
(PUT 'FD2Q 'NUMBER-OF-ARGS 1) 
(PUT 'FD2Q 'DEFINED-ON-LINE '369) 
(PUT 'FD2Q 'DEFINED-IN-FILE 'ARNUM/ARNUM.RED) 
(PUT 'FD2Q 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE FD2Q (U)
    (COND ((ATOM U) (CONS U 1)) ((EQ (CAR U) '|:AR:|) (FD2Q (CDR U)))
          ((EQ (CAR U) '|:RN:|) (CDR U))
          (T
           (ADDSQ (MULTSQ (CONS (LIST (CONS (CAAR U) 1)) 1) (FD2Q (CDAR U)))
                  (FD2Q (CDR U)))))) 
(PUT 'SQFRNORM 'NUMBER-OF-ARGS 1) 
(PUT 'SQFRNORM 'DEFINED-ON-LINE '376) 
(PUT 'SQFRNORM 'DEFINED-IN-FILE 'ARNUM/ARNUM.RED) 
(PUT 'SQFRNORM 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE SQFRNORM (U)
    (PROG (L NORM Y S)
      (SETQ S 0)
      (SETQ Y U)
      (COND ((ALGEBNP U) (GO B)))
     A
      (SETQ S (DIFFERENCE S 1))
      (SETQ L
              (LIST
               (CONS (CAAAR U)
                     (PREPF
                      (ADDF (LIST (CONS (CONS (CAAAR U) 1) 1))
                            (MULTD S
                                   (LIST
                                    (CONS (CONS (CAAAR CURDEFPOL*) 1) 1))))))))
      (SETQ Y (CAR (SUBF1 U L)))
      (COND ((NULL (ALGEBNP Y)) (GO A)))
     B
      (SETQ NORM (POLYNORM Y))
      (COND ((NOT (AR-SQFRP NORM)) (GO A)))
      (RETURN (CONS NORM (CONS S Y))))) 
(PUT 'ALGEBNP 'NUMBER-OF-ARGS 1) 
(PUT 'ALGEBNP 'DEFINED-ON-LINE '390) 
(PUT 'ALGEBNP 'DEFINED-IN-FILE 'ARNUM/ARNUM.RED) 
(PUT 'ALGEBNP 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE ALGEBNP (U)
    (COND ((ATOM U) NIL) ((EQ (CAR U) '|:AR:|) T)
          ((OR (ATOM U) (ATOM (CAR U))) NIL)
          (T (OR (ALGEBNP (CDAR U)) (ALGEBNP (CDR U)))))) 
(PUT 'AR-SQFRP 'NUMBER-OF-ARGS 1) 
(PUT 'AR-SQFRP 'DEFINED-ON-LINE '396) 
(PUT 'AR-SQFRP 'DEFINED-IN-FILE 'ARNUM/ARNUM.RED) 
(PUT 'AR-SQFRP 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE AR-SQFRP (U)
    ((LAMBDA (U) (OR (ATOM U) (ATOM (CAR U)))) (GCDF* U (DIFF U (CAAAR U))))) 
(PUT 'PRIMITIVE_ELEM 'NUMBER-OF-ARGS 1) 
(PUT 'PRIMITIVE_ELEM 'DEFINED-ON-LINE '400) 
(PUT 'PRIMITIVE_ELEM 'DEFINED-IN-FILE 'ARNUM/ARNUM.RED) 
(PUT 'PRIMITIVE_ELEM 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE PRIMITIVE_ELEM (U)
    (PROG (A X Y Z NEWU NEWDEFPOLY OLDDEFPOLY)
      (COND ((SETQ X (NOT_IN_EXTENSION U)) (SETQ U X)) (T (RETURN NIL)))
      (SETQ *ACOUNTER* (PLUS *ACOUNTER* 1))
      (SETQ A
              (INTERN
               (COMPRESS (APPEND (EXPLODE *EXTVAR*) (EXPLODE *ACOUNTER*)))))
      (SETQ X (SQFRNORM U))
      (SETQ NEWDEFPOLY (*Q2F (SUBF (CAR X) (LIST (CONS (CAAAR (CAR X)) A)))))
      (SETQ OLDDEFPOLY CURDEFPOL*)
      (SETQ NEWU (*Q2F (SUBF (CDDR X) (LIST (CONS (CAAAR (CAR X)) A)))))
      (RMSUBS)
      (RELEASE ARVARS*)
      (PROG (*CHK-REDUCIBILITY) (INITALGNUM (PREPF NEWDEFPOLY)))
      (SETQ Y (GCDF* (CAR (SIMP (PREPF NEWU))) OLDDEFPOLY))
      (SETQ ARVARS* (CONS (CAAAR (CAR X)) ARVARS*))
      (MK-ALGEBRAIC-NUMBER-VARS ARVARS*)
      (PUT-CURRENT-REPRESENTATION (CAAAR OLDDEFPOLY)
       (SETQ Z (QUOTF* (NEGF (CDR Y)) (CDAR Y))))
      (PUT-CURRENT-REPRESENTATION (CAAAR (CAR X))
       (ADDF (CONS '|:AR:| (LIST (CONS (CONS A 1) 1)))
             ((LAMBDA (G549)
                (COND (*PHYSOP-LOADED (PHYSOP-MULTF G549 Z))
                      (T (POLY-MULTF G549 Z))))
              (COND ((ZEROP (CADR X)) NIL) (T (CADR X))))))
      (RMSUBS)
      (UPDATE-EXTENSION ARVARS*)
      (TERPRI* T)
      (PRIN2* "*** Defining polynomial for primitive element:")
      (TERPRI* T)
      (MAPRIN (PREPF CURDEFPOL*))
      (TERPRI* T))) 
(PUT 'NOT_IN_EXTENSION 'NUMBER-OF-ARGS 1) 
(PUT 'NOT_IN_EXTENSION 'DEFINED-ON-LINE '432) 
(PUT 'NOT_IN_EXTENSION 'DEFINED-IN-FILE 'ARNUM/ARNUM.RED) 
(PUT 'NOT_IN_EXTENSION 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE NOT_IN_EXTENSION (U)
    (PROG (NDP X CLD)
      (SETQ CLD 0)
      (COND ((NULL *CHK-REDUCIBILITY) (RETURN U)))
      (SETQ CLD (CDAAR U))
      (SETQ NDP U)
      (SETQ X (COND (CURDEFPOL* (|ARFACTOR:| U)) (T (INTERNAL-FACTORF U))))
      (PROG (J)
        (SETQ J (CDR X))
       LAB
        (COND ((NULL J) (RETURN NIL)))
        ((LAMBDA (J)
           (COND
            ((LESSP (CDAAR (CAR J)) CLD)
             (PROGN (SETQ NDP (CAR J)) (SETQ CLD (CDAAR NDP))))))
         (CAR J))
        (SETQ J (CDR J))
        (GO LAB))
      (COND
       ((EQUAL CLD 1)
        (PROGN
         (MK-ALGEBRAIC-NUMBER-VARS (LIST (CAAAR U)))
         (SETQ ARVARS* (CONS (CAAAR U) ARVARS*))
         (PUT-CURRENT-REPRESENTATION (CAAAR U)
          (QUOTF* (NEGF (CDR NDP)) (CDAR NDP)))
         (RETURN NIL)))
       (T (RETURN NDP))))) 
(PUT 'SPLIT_FIELD1 'NUMBER-OF-ARGS 2) 
(PUT 'SPLIT_FIELD1 'DEFINED-ON-LINE '453) 
(PUT 'SPLIT_FIELD1 'DEFINED-IN-FILE 'ARNUM/ARNUM.RED) 
(PUT 'SPLIT_FIELD1 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE SPLIT_FIELD1 (U V)
    (PROG (A FTRS MVU Q X Y Z ROOTS BPOLY MINPOLY NEWMINPOLY POLYS NEWFACTORS
           DMODE* *EXP *CHK-REDUCIBILITY INDX LCU K N NEW_S)
      (SETQ INDX 0)
      (SETQ LCU 0)
      (SETQ K 0)
      (SETQ N 0)
      (SETQ NEW_S 0)
      (OFF (LIST 'ARNUM))
      (SETQ *EXP T)
      (SETQ U (*Q2F (SIMP* U)))
      (SETQ MVU (CAAAR U))
      (SETQ LCU (CDAR U))
      (COND
       ((NEQ LCU 1)
        (SETQ U
                (*Q2F
                 (MULTSQ (SUBF U (LIST (CONS MVU (LIST 'QUOTIENT MVU LCU))))
                         (CONS (EXPT LCU (DIFFERENCE (CDAAR U) 1)) 1))))))
      (SETQ INDX 1)
      (SETQ POLYS (CONS (CONS 1 U) POLYS))
      (SETQ *ACOUNTER* (PLUS *ACOUNTER* 1))
      (SETQ A
              (INTERN
               (COMPRESS (APPEND (EXPLODE *EXTVAR*) (EXPLODE *ACOUNTER*)))))
      (SETQ MINPOLY (SETQ NEWMINPOLY (CAR (SUBF U (LIST (CONS MVU A))))))
      (SETQ DMODE* '|:AR:|)
      (MKEXTENSION (PREPF MINPOLY))
      (SETQ ROOTS (CONS (CONS '|:AR:| (LIST (CONS (CONS A 1) 1))) ROOTS))
     B
      (SETQ POLYS
              (PROG (J FORALL-RESULT FORALL-ENDPTR)
                (SETQ J POLYS)
                (COND ((NULL J) (RETURN NIL)))
                (SETQ FORALL-RESULT
                        (SETQ FORALL-ENDPTR
                                (CONS
                                 ((LAMBDA (J)
                                    (COND
                                     ((EQUAL INDX (CAR J))
                                      (CONS (CAR J)
                                            (QUOTF* (CDR J)
                                                    (ADDF
                                                     (LIST
                                                      (CONS (CONS MVU 1) 1))
                                                     (NEGF (CAR ROOTS))))))
                                     (T J)))
                                  (CAR J))
                                 NIL)))
               LOOPLABEL
                (SETQ J (CDR J))
                (COND ((NULL J) (RETURN FORALL-RESULT)))
                (RPLACD FORALL-ENDPTR
                        (CONS
                         ((LAMBDA (J)
                            (COND
                             ((EQUAL INDX (CAR J))
                              (CONS (CAR J)
                                    (QUOTF* (CDR J)
                                            (ADDF (LIST (CONS (CONS MVU 1) 1))
                                                  (NEGF (CAR ROOTS))))))
                             (T J)))
                          (CAR J))
                         NIL))
                (SETQ FORALL-ENDPTR (CDR FORALL-ENDPTR))
                (GO LOOPLABEL)))
      (SETQ K 1)
      (SETQ INDX 0)
      (PROG (J)
        (SETQ J POLYS)
       LAB
        (COND ((NULL J) (RETURN NIL)))
        ((LAMBDA (J)
           (PROG (L)
             (SETQ X (SQFRNORM (CDR J)))
             (COND
              ((NEQ (CADR X) 0)
               (SETQ L
                       (LIST
                        (CONS MVU
                              (PREPF
                               (ADDF (LIST (CONS (CONS MVU 1) 1))
                                     (NEGF
                                      (MULTD (CADR X)
                                             (LIST
                                              (CONS (CONS A 1) 1)))))))))))
             (SETQ Z (CDDR X))
             (SETQ DMODE* NIL)
             (SETQ FTRS (CDR (INTERNAL-FACTORF (CAR X))))
             (SETQ DMODE* '|:AR:|)
             (PROG (QQ)
               (SETQ QQ FTRS)
              LAB
               (COND ((NULL QQ) (RETURN NIL)))
               ((LAMBDA (QQ)
                  (PROGN
                   (SETQ Y (GCDF* Z (SETQ Q (CAR QQ))))
                   (COND
                    ((GREATERP (CDAAR Q) (CDAAR NEWMINPOLY))
                     (PROGN
                      (SETQ NEWMINPOLY Q)
                      (SETQ NEW_S (CADR X))
                      (SETQ INDX K)
                      (SETQ BPOLY Y))))
                   (SETQ Z (QUOTF* Z Y))
                   (COND (L (SETQ Y (CAR (SUBF Y L)))))
                   (COND
                    ((EQUAL (CDAAR Y) 1)
                     (SETQ ROOTS
                             (CONS
                              ((LAMBDA (*EXP) (QUOTF1 (NEGF (CDR Y)) (CDAR Y)))
                               T)
                              ROOTS)))
                    (T
                     (PROGN
                      (SETQ NEWFACTORS (CONS (CONS K Y) NEWFACTORS))
                      (SETQ K (PLUS K 1)))))))
                (CAR QQ))
               (SETQ QQ (CDR QQ))
               (GO LAB))))
         (CAR J))
        (SETQ J (CDR J))
        (GO LAB))
      (COND
       ((NULL NEWFACTORS)
        (PROGN
         (TERPRI)
         (PRIN2T "*** Splitting field is generated by:")
         (TERPRI)
         (MAPRIN (PREPF NEWMINPOLY))
         (TERPRI* T)
         (SETQ N (LENGTH ROOTS))
         (RETURN
          (MULTIPLE-RESULT
           (PROG (J FORALL-RESULT FORALL-ENDPTR)
             (SETQ J ROOTS)
             (COND ((NULL J) (RETURN NIL)))
             (SETQ FORALL-RESULT
                     (SETQ FORALL-ENDPTR
                             (CONS
                              ((LAMBDA (J)
                                 (CONS (SETQ N (DIFFERENCE N 1))
                                       (MK*SQ (CANCEL (CONS J LCU)))))
                               (CAR J))
                              NIL)))
            LOOPLABEL
             (SETQ J (CDR J))
             (COND ((NULL J) (RETURN FORALL-RESULT)))
             (RPLACD FORALL-ENDPTR
                     (CONS
                      ((LAMBDA (J)
                         (CONS (SETQ N (DIFFERENCE N 1))
                               (MK*SQ (CANCEL (CONS J LCU)))))
                       (CAR J))
                      NIL))
             (SETQ FORALL-ENDPTR (CDR FORALL-ENDPTR))
             (GO LOOPLABEL))
           V)))))
      (SETQ *ACOUNTER* (PLUS *ACOUNTER* 1))
      (SETQ A
              (INTERN
               (COMPRESS (APPEND (EXPLODE *EXTVAR*) (EXPLODE *ACOUNTER*)))))
      (SETQ NEWMINPOLY (CAR (SUBF NEWMINPOLY (LIST (CONS MVU A)))))
      (SETQ BPOLY (CAR (SUBF BPOLY (LIST (CONS MVU A)))))
      (RMSUBS)
      (RELEASE ARVARS*)
      (INITALGNUM (PREPF NEWMINPOLY))
      (SETQ X (GCDF* MINPOLY (CAR (SIMP (PREPF BPOLY)))))
      (MK-ALGEBRAIC-NUMBER-VARS ARVARS*)
      (PUT-CURRENT-REPRESENTATION (CAAAR MINPOLY)
       (SETQ Z (QUOTF* (NEGF (CDR X)) (CDAR X))))
      (RMSUBS)
      (SETQ ROOTS
              (CONS
               (ADDF (CONS '|:AR:| (LIST (CONS (CONS A 1) 1)))
                     ((LAMBDA (G551)
                        (COND (*PHYSOP-LOADED (PHYSOP-MULTF G551 Z))
                              (T (POLY-MULTF G551 Z))))
                      (COND ((ZEROP NEW_S) NIL) (T NEW_S))))
               (PROG (J FORALL-RESULT FORALL-ENDPTR)
                 (SETQ J ROOTS)
                 (COND ((NULL J) (RETURN NIL)))
                 (SETQ FORALL-RESULT
                         (SETQ FORALL-ENDPTR
                                 (CONS
                                  ((LAMBDA (J) (CAR (SUBF (CDR J) NIL)))
                                   (CAR J))
                                  NIL)))
                LOOPLABEL
                 (SETQ J (CDR J))
                 (COND ((NULL J) (RETURN FORALL-RESULT)))
                 (RPLACD FORALL-ENDPTR
                         (CONS ((LAMBDA (J) (CAR (SUBF (CDR J) NIL))) (CAR J))
                               NIL))
                 (SETQ FORALL-ENDPTR (CDR FORALL-ENDPTR))
                 (GO LOOPLABEL))))
      (SETQ POLYS
              (PROG (J FORALL-RESULT FORALL-ENDPTR)
                (SETQ J NEWFACTORS)
                (COND ((NULL J) (RETURN NIL)))
                (SETQ FORALL-RESULT
                        (SETQ FORALL-ENDPTR
                                (CONS
                                 ((LAMBDA (J)
                                    (CONS (CAR J)
                                          (CAR (SIMP (PREPF (CDR J))))))
                                  (CAR J))
                                 NIL)))
               LOOPLABEL
                (SETQ J (CDR J))
                (COND ((NULL J) (RETURN FORALL-RESULT)))
                (RPLACD FORALL-ENDPTR
                        (CONS
                         ((LAMBDA (J)
                            (CONS (CAR J) (CAR (SIMP (PREPF (CDR J))))))
                          (CAR J))
                         NIL))
                (SETQ FORALL-ENDPTR (CDR FORALL-ENDPTR))
                (GO LOOPLABEL)))
      (SETQ NEWFACTORS NIL)
      (SETQ MINPOLY NEWMINPOLY)
      (GO B))) 
(PUT 'SPLIT-FIELD-EVAL 'NUMBER-OF-ARGS 1) 
(PUT 'SPLIT-FIELD-EVAL 'DEFINED-ON-LINE '539) 
(PUT 'SPLIT-FIELD-EVAL 'DEFINED-IN-FILE 'ARNUM/ARNUM.RED) 
(PUT 'SPLIT-FIELD-EVAL 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE SPLIT-FIELD-EVAL (U)
    (PROG (X)
      (COND
       ((GREATERP (LENGTH U) 2)
        (RERROR 'ARNUM 5
                "Split!_field called with wrong number of arguments")))
      (SETQ X (SPLIT_FIELD1 (CAR U) (COND ((CDR U) (CADR U)) (T NIL))))
      (SETQ DMODE* '|:AR:|)
      (RETURN X))) 
(PUT 'SPLIT_FIELD 'PSOPFN 'SPLIT-FIELD-EVAL) 
(PUT '|ARRATIONALIZE:| 'NUMBER-OF-ARGS 1) 
(PUT '|ARRATIONALIZE:| 'DEFINED-ON-LINE '552) 
(PUT '|ARRATIONALIZE:| 'DEFINED-IN-FILE 'ARNUM/ARNUM.RED) 
(PUT '|ARRATIONALIZE:| 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE |ARRATIONALIZE:| (U)
    (PROG (X Y Z DMODE*)
      (COND
       ((OR (ATOM (CDR U)) (ATOM (CAR (CDR U))))
        (RETURN (CONS ((LAMBDA (*EXP) (QUOTF1 (CAR U) (CDR U))) T) 1))))
      (COND ((NULL (ALGEBNP (CDR U))) (RETURN U)))
      (SETQ X (POLYNORM (CAR (FD2Q (CDR U)))))
      (SETQ Y
              (MULTSQ
               (FD2Q
                ((LAMBDA (G554)
                   (COND (*PHYSOP-LOADED (PHYSOP-MULTF (CAR U) G554))
                         (T (POLY-MULTF (CAR U) G554))))
                 (QUOTF* X (CDR U))))
               (CONS 1 X)))
      (SETQ DMODE* '|:AR:|)
      (SETQ X (CAR (SUBF (CDR Y) NIL)))
      (SETQ Y (CAR (SUBF (CAR Y) NIL)))
      (SETQ Z (LNC X))
      (RETURN
       (CONS ((LAMBDA (*EXP) (QUOTF1 Y Z)) T)
             ((LAMBDA (*EXP) (QUOTF1 X Z)) T))))) 
(PUT 'POLYNORM 'POLYFN 'POLYNORM) 
(PUT 'REDUCEPOWERS 'NUMBER-OF-ARGS 1) 
(PUT 'REDUCEPOWERS 'DEFINED-ON-LINE '577) 
(PUT 'REDUCEPOWERS 'DEFINED-IN-FILE 'ARNUM/ARNUM.RED) 
(PUT 'REDUCEPOWERS 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE REDUCEPOWERS (U)
    (COND
     ((OR (OR (ATOM U) (ATOM (CAR U))) (LESSP (CDAAR U) (CDR (CAR REPOWL*))))
      U)
     ((EQUAL (CDAAR U) (CDR (CAR REPOWL*)))
      (ADDF
       ((LAMBDA (G555)
          (COND (*PHYSOP-LOADED (PHYSOP-MULTF G555 (CDAR U)))
                (T (POLY-MULTF G555 (CDAR U)))))
        (CDR REPOWL*))
       (CDR U)))
     (T
      (REDUCEPOWERS
       (ADDF
        ((LAMBDA (G559 G560)
           (COND (*PHYSOP-LOADED (PHYSOP-MULTF G559 G560))
                 (T (POLY-MULTF G559 G560))))
         ((LAMBDA (G544)
            (COND (*PHYSOP-LOADED (PHYSOP-MULTF G544 (CDAR U)))
                  (T (POLY-MULTF G544 (CDAR U)))))
          (LIST
           (CONS (CONS (CAAAR U) (DIFFERENCE (CDAAR U) (CDR (CAR REPOWL*))))
                 1)))
         (CDR REPOWL*))
        (CDR U)))))) 
(PUT 'MKQMATR 'NUMBER-OF-ARGS 1) 
(PUT 'MKQMATR 'DEFINED-ON-LINE '586) 
(PUT 'MKQMATR 'DEFINED-IN-FILE 'ARNUM/ARNUM.RED) 
(PUT 'MKQMATR 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE MKQMATR (U)
    (PROG (R X V W)
      (SETQ V (MKQCOL U))
      (PROG (K)
        (SETQ K (CDR (REVERSE ARBASE*)))
       LAB
        (COND ((NULL K) (RETURN NIL)))
        ((LAMBDA (K)
           (PROGN
            (SETQ W
                    (REDUCEPOWERS
                     ((LAMBDA (G544)
                        (COND (*PHYSOP-LOADED (PHYSOP-MULTF G544 U))
                              (T (POLY-MULTF G544 U))))
                      (LIST (CONS K 1)))))
            (SETQ V
                    (PROG (J FORALL-RESULT FORALL-ENDPTR)
                      (SETQ J ARBASE*)
                      (COND ((NULL J) (RETURN NIL)))
                      (SETQ FORALL-RESULT
                              (SETQ FORALL-ENDPTR
                                      (CONS
                                       ((LAMBDA (J)
                                          (PROGN
                                           (SETQ R
                                                   (CONS
                                                    (COND ((ATOM J) (RATN W))
                                                          ((OR (ATOM W)
                                                               (ATOM (CAR W)))
                                                           (CONS 0 1))
                                                          ((EQUAL J (CAAR W))
                                                           (PROGN
                                                            (SETQ X
                                                                    (RATN
                                                                     (CDAR W)))
                                                            (SETQ W (CDR W))
                                                            X))
                                                          (T (CONS 0 1)))
                                                    (CAR V)))
                                           (SETQ V (CDR V))
                                           R))
                                        (CAR J))
                                       NIL)))
                     LOOPLABEL
                      (SETQ J (CDR J))
                      (COND ((NULL J) (RETURN FORALL-RESULT)))
                      (RPLACD FORALL-ENDPTR
                              (CONS
                               ((LAMBDA (J)
                                  (PROGN
                                   (SETQ R
                                           (CONS
                                            (COND ((ATOM J) (RATN W))
                                                  ((OR (ATOM W) (ATOM (CAR W)))
                                                   (CONS 0 1))
                                                  ((EQUAL J (CAAR W))
                                                   (PROGN
                                                    (SETQ X (RATN (CDAR W)))
                                                    (SETQ W (CDR W))
                                                    X))
                                                  (T (CONS 0 1)))
                                            (CAR V)))
                                   (SETQ V (CDR V))
                                   R))
                                (CAR J))
                               NIL))
                      (SETQ FORALL-ENDPTR (CDR FORALL-ENDPTR))
                      (GO LOOPLABEL)))))
         (CAR K))
        (SETQ K (CDR K))
        (GO LAB))
      (RETURN V))) 
(PUT 'MKQCOL 'NUMBER-OF-ARGS 1) 
(PUT 'MKQCOL 'DEFINED-ON-LINE '604) 
(PUT 'MKQCOL 'DEFINED-IN-FILE 'ARNUM/ARNUM.RED) 
(PUT 'MKQCOL 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE MKQCOL (U)
    (PROG (X V)
      (SETQ V
              (PROG (J FORALL-RESULT FORALL-ENDPTR)
                (SETQ J ARBASE*)
                (COND ((NULL J) (RETURN NIL)))
                (SETQ FORALL-RESULT
                        (SETQ FORALL-ENDPTR
                                (CONS
                                 ((LAMBDA (J)
                                    (COND ((ATOM J) (LIST (RATN U)))
                                          ((OR (ATOM U) (ATOM (CAR U)))
                                           (LIST (CONS 0 1)))
                                          ((EQUAL J (CAAR U))
                                           (PROGN
                                            (SETQ X (LIST (RATN (CDAR U))))
                                            (SETQ U (CDR U))
                                            X))
                                          (T (LIST (CONS 0 1)))))
                                  (CAR J))
                                 NIL)))
               LOOPLABEL
                (SETQ J (CDR J))
                (COND ((NULL J) (RETURN FORALL-RESULT)))
                (RPLACD FORALL-ENDPTR
                        (CONS
                         ((LAMBDA (J)
                            (COND ((ATOM J) (LIST (RATN U)))
                                  ((OR (ATOM U) (ATOM (CAR U)))
                                   (LIST (CONS 0 1)))
                                  ((EQUAL J (CAAR U))
                                   (PROGN
                                    (SETQ X (LIST (RATN (CDAR U))))
                                    (SETQ U (CDR U))
                                    X))
                                  (T (LIST (CONS 0 1)))))
                          (CAR J))
                         NIL))
                (SETQ FORALL-ENDPTR (CDR FORALL-ENDPTR))
                (GO LOOPLABEL)))
      (RETURN V))) 
(PUT 'RATN 'NUMBER-OF-ARGS 1) 
(PUT 'RATN 'DEFINED-ON-LINE '616) 
(PUT 'RATN 'DEFINED-IN-FILE 'ARNUM/ARNUM.RED) 
(PUT 'RATN 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE RATN (U)
    (COND ((NULL U) (CONS 0 1)) ((ATOM U) (CONS U 1))
          ((EQ (CAR U) '|:RN:|) (CDR U))
          (T (RERROR 'ARNUM 6 "Illegal domain in :ar:")))) 
(PUT 'INORMMAT 'NUMBER-OF-ARGS 1) 
(PUT 'INORMMAT 'DEFINED-ON-LINE '622) 
(PUT 'INORMMAT 'DEFINED-IN-FILE 'ARNUM/ARNUM.RED) 
(PUT 'INORMMAT 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE INORMMAT (U)
    (PROG (Y Z)
      (SETQ Y 0)
      (PROG (V)
        (SETQ V U)
       LAB
        (COND ((NULL V) (RETURN NIL)))
        ((LAMBDA (V)
           (PROGN
            (SETQ Y 1)
            (PROG (W)
              (SETQ W V)
             LAB
              (COND ((NULL W) (RETURN NIL)))
              ((LAMBDA (W) (SETQ Y (ILCM Y (CDR W)))) (CAR W))
              (SETQ W (CDR W))
              (GO LAB))
            (SETQ Z
                    (CONS
                     (PROG (W FORALL-RESULT FORALL-ENDPTR)
                       (SETQ W V)
                       (COND ((NULL W) (RETURN NIL)))
                       (SETQ FORALL-RESULT
                               (SETQ FORALL-ENDPTR
                                       (CONS
                                        ((LAMBDA (W)
                                           (TIMES (CAR W)
                                                  (QUOTIENT Y (CDR W))))
                                         (CAR W))
                                        NIL)))
                      LOOPLABEL
                       (SETQ W (CDR W))
                       (COND ((NULL W) (RETURN FORALL-RESULT)))
                       (RPLACD FORALL-ENDPTR
                               (CONS
                                ((LAMBDA (W)
                                   (TIMES (CAR W) (QUOTIENT Y (CDR W))))
                                 (CAR W))
                                NIL))
                       (SETQ FORALL-ENDPTR (CDR FORALL-ENDPTR))
                       (GO LOOPLABEL))
                     Z))))
         (CAR V))
        (SETQ V (CDR V))
        (GO LAB))
      (RETURN (REVERSE Z)))) 
(PUT 'ILCM 'NUMBER-OF-ARGS 2) 
(PUT 'ILCM 'DEFINED-ON-LINE '633) 
(PUT 'ILCM 'DEFINED-IN-FILE 'ARNUM/ARNUM.RED) 
(PUT 'ILCM 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE ILCM (U V)
    (COND ((OR (EQUAL U 0) (EQUAL V 0)) 0) ((EQUAL U 1) V) ((EQUAL V 1) U)
          (T (TIMES U (QUOTIENT V (GCDN U V)))))) 
(PUT 'ILNRSOLVE 'NUMBER-OF-ARGS 2) 
(PUT 'ILNRSOLVE 'DEFINED-ON-LINE '639) 
(PUT 'ILNRSOLVE 'DEFINED-IN-FILE 'ARNUM/ARNUM.RED) 
(PUT 'ILNRSOLVE 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE ILNRSOLVE (U V)
    (PROG (N)
      (SETQ N 0)
      (SETQ N (LENGTH U))
      (SETQ V (IBACKSUB (IBAREISS (INORMMAT (AR-AUGMENT U V))) N))
      (SETQ U (AR-RHSIDE (CAR V) N))
      (SETQ V (CDR V))
      (RETURN
       (PROG (J FORALL-RESULT FORALL-ENDPTR)
         (SETQ J U)
         (COND ((NULL J) (RETURN NIL)))
         (SETQ FORALL-RESULT
                 (SETQ FORALL-ENDPTR
                         (CONS
                          ((LAMBDA (J)
                             (PROG (K FORALL-RESULT FORALL-ENDPTR)
                               (SETQ K J)
                               (COND ((NULL K) (RETURN NIL)))
                               (SETQ FORALL-RESULT
                                       (SETQ FORALL-ENDPTR
                                               (CONS
                                                ((LAMBDA (K) (MKRN K V))
                                                 (CAR K))
                                                NIL)))
                              LOOPLABEL
                               (SETQ K (CDR K))
                               (COND ((NULL K) (RETURN FORALL-RESULT)))
                               (RPLACD FORALL-ENDPTR
                                       (CONS ((LAMBDA (K) (MKRN K V)) (CAR K))
                                             NIL))
                               (SETQ FORALL-ENDPTR (CDR FORALL-ENDPTR))
                               (GO LOOPLABEL)))
                           (CAR J))
                          NIL)))
        LOOPLABEL
         (SETQ J (CDR J))
         (COND ((NULL J) (RETURN FORALL-RESULT)))
         (RPLACD FORALL-ENDPTR
                 (CONS
                  ((LAMBDA (J)
                     (PROG (K FORALL-RESULT FORALL-ENDPTR)
                       (SETQ K J)
                       (COND ((NULL K) (RETURN NIL)))
                       (SETQ FORALL-RESULT
                               (SETQ FORALL-ENDPTR
                                       (CONS ((LAMBDA (K) (MKRN K V)) (CAR K))
                                             NIL)))
                      LOOPLABEL
                       (SETQ K (CDR K))
                       (COND ((NULL K) (RETURN FORALL-RESULT)))
                       (RPLACD FORALL-ENDPTR
                               (CONS ((LAMBDA (K) (MKRN K V)) (CAR K)) NIL))
                       (SETQ FORALL-ENDPTR (CDR FORALL-ENDPTR))
                       (GO LOOPLABEL)))
                   (CAR J))
                  NIL))
         (SETQ FORALL-ENDPTR (CDR FORALL-ENDPTR))
         (GO LOOPLABEL))))) 
(PUT 'AR-AUGMENT 'NUMBER-OF-ARGS 2) 
(PUT 'AR-AUGMENT 'DEFINED-ON-LINE '651) 
(PUT 'AR-AUGMENT 'DEFINED-IN-FILE 'ARNUM/ARNUM.RED) 
(PUT 'AR-AUGMENT 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE AR-AUGMENT (U V)
    (COND ((NULL U) NIL)
          (T (CONS (APPEND (CAR U) (CAR V)) (AR-AUGMENT (CDR U) (CDR V)))))) 
(PUT 'AR-RHSIDE 'NUMBER-OF-ARGS 2) 
(PUT 'AR-RHSIDE 'DEFINED-ON-LINE '657) 
(PUT 'AR-RHSIDE 'DEFINED-IN-FILE 'ARNUM/ARNUM.RED) 
(PUT 'AR-RHSIDE 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE AR-RHSIDE (U M)
    (COND ((NULL U) NIL)
          (T (CONS (PNTH (CAR U) (PLUS M 1)) (AR-RHSIDE (CDR U) M))))) 
(PUT 'IBAREISS 'NUMBER-OF-ARGS 1) 
(PUT 'IBAREISS 'DEFINED-ON-LINE '661) 
(PUT 'IBAREISS 'DEFINED-IN-FILE 'ARNUM/ARNUM.RED) 
(PUT 'IBAREISS 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE IBAREISS (U)
    (PROG (IK1 IJ KK1 KJ K1J K1K1 UI U1 X K K1 AA C0 CI1 CI2)
      (SETQ K 0)
      (SETQ K1 0)
      (SETQ AA 0)
      (SETQ C0 0)
      (SETQ CI1 0)
      (SETQ CI2 0)
      (SETQ AA 1)
      (SETQ K 2)
      (SETQ K1 1)
      (SETQ U1 U)
      (GO PIVOT)
     AGN
      (SETQ U1 (CDR U1))
      (COND ((OR (NULL (CDR U1)) (NULL (CDDR U1))) (RETURN U)))
      (SETQ AA (NTH (CAR U1) K))
      (SETQ K (PLUS K 2))
      (SETQ K1 (DIFFERENCE K 1))
      (SETQ U1 (CDR U1))
     PIVOT
      (SETQ K1J (SETQ K1K1 (PNTH (CAR U1) K1)))
      (COND ((NEQ (CAR K1K1) 0) (GO L2)))
      (SETQ UI (CDR U1))
     L
      (COND ((NULL UI) (RETURN NIL))
            ((EQUAL (CAR (SETQ IJ (PNTH (CAR UI) K1))) 0) (GO L1)))
     L0
      (COND ((NULL IJ) (GO L2)))
      (SETQ X (CAR IJ))
      (RPLACA IJ (MINUS (CAR K1J)))
      (RPLACA K1J X)
      (SETQ IJ (CDR IJ))
      (SETQ K1J (CDR K1J))
      (GO L0)
     L1
      (SETQ UI (CDR UI))
      (GO L)
     L2
      (SETQ UI (CDR U1))
     L21
      (COND ((NULL UI) (RETURN NIL)))
      (SETQ IJ (PNTH (CAR UI) K1))
      (SETQ C0
              (DIFFERENCE (TIMES (CAR K1K1) (CADR IJ))
                          (TIMES (CADR K1K1) (CAR IJ))))
      (COND ((NEQ C0 0) (GO L3)))
      (SETQ UI (CDR UI))
      (GO L21)
     L3
      (SETQ C0 (QUOTIENT C0 AA))
      (SETQ KK1 (SETQ KJ (PNTH (CADR U1) K1)))
      (COND ((AND (CDR U1) (NULL (CDDR U1))) (GO EV0))
            ((EQ UI (CDR U1)) (GO COMP)))
     L31
      (COND ((NULL IJ) (GO COMP)))
      (SETQ X (CAR IJ))
      (RPLACA IJ (MINUS (CAR KJ)))
      (RPLACA KJ X)
      (SETQ IJ (CDR IJ))
      (SETQ KJ (CDR KJ))
      (GO L31)
     COMP
      (COND ((NULL (CDR U1)) (GO EV)))
      (SETQ UI (CDDR U1))
     COMP1
      (COND ((NULL UI) (GO EV)))
      (SETQ IK1 (PNTH (CAR UI) K1))
      (SETQ CI1
              (QUOTIENT
               (DIFFERENCE (TIMES (CADR K1K1) (CAR IK1))
                           (TIMES (CAR K1K1) (CADR IK1)))
               AA))
      (SETQ CI2
              (QUOTIENT
               (DIFFERENCE (TIMES (CAR KK1) (CADR IK1))
                           (TIMES (CADR KK1) (CAR IK1)))
               AA))
      (COND ((NULL (CDDR K1K1)) (GO COMP3)))
      (SETQ IJ (CDDR IK1))
      (SETQ KJ (CDDR KK1))
      (SETQ K1J (CDDR K1K1))
     COMP2
      (COND ((NULL IJ) (GO COMP3)))
      (RPLACA IJ
              (QUOTIENT
               (PLUS (TIMES (CAR IJ) C0) (TIMES (CAR KJ) CI1)
                     (TIMES (CAR K1J) CI2))
               AA))
      (SETQ IJ (CDR IJ))
      (SETQ KJ (CDR KJ))
      (SETQ K1J (CDR K1J))
      (GO COMP2)
     COMP3
      (SETQ UI (CDR UI))
      (GO COMP1)
     EV0
      (COND ((EQUAL C0 0) (RETURN NIL)))
     EV
      (SETQ KJ (CDR KK1))
      (SETQ X (CDDR K1K1))
      (RPLACA KJ C0)
     EV1
      (SETQ KJ (CDR KJ))
      (COND ((NULL KJ) (GO AGN)))
      (RPLACA KJ
              (QUOTIENT
               (DIFFERENCE (TIMES (CAR K1K1) (CAR KJ))
                           (TIMES (CAR KK1) (CAR X)))
               AA))
      (SETQ X (CDR X))
      (GO EV1))) 
(PUT 'IBACKSUB 'NUMBER-OF-ARGS 2) 
(PUT 'IBACKSUB 'DEFINED-ON-LINE '744) 
(PUT 'IBACKSUB 'DEFINED-IN-FILE 'ARNUM/ARNUM.RED) 
(PUT 'IBACKSUB 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE IBACKSUB (U M)
    (PROG (IJ IJJ RI UJ UR I JJ SUMM DETM DET1)
      (SETQ I 0)
      (SETQ JJ 0)
      (SETQ SUMM 0)
      (SETQ DETM 0)
      (SETQ DET1 0)
      (COND ((NULL U) (RERROR 'ARNUM 7 "Singular matrix")))
      (SETQ UR (REVERSE U))
      (SETQ DETM (CAR (PNTH (CAR UR) M)))
      (COND ((EQUAL DETM 0) (RERROR 'ARNUM 8 "Singular matrix")))
      (SETQ I M)
     ROWS
      (SETQ I (DIFFERENCE I 1))
      (SETQ UR (CDR UR))
      (COND ((NULL UR) (RETURN (CONS U DETM))))
      (SETQ RI (CAR UR))
      (SETQ JJ (PLUS M 1))
      (SETQ IJJ (PNTH RI JJ))
     R2
      (COND ((NULL IJJ) (GO ROWS)))
      (SETQ IJ (PNTH RI I))
      (SETQ DET1 (CAR IJ))
      (SETQ UJ (PNTH U I))
      (SETQ SUMM 0)
     R3
      (SETQ UJ (CDR UJ))
      (COND ((NULL UJ) (GO R4)))
      (SETQ IJ (CDR IJ))
      (SETQ SUMM (PLUS SUMM (TIMES (CAR IJ) (NTH (CAR UJ) JJ))))
      (GO R3)
     R4
      (RPLACA IJJ (QUOTIENT (DIFFERENCE (TIMES DETM (CAR IJJ)) SUMM) DET1))
      (SETQ JJ (PLUS JJ 1))
      (SETQ IJJ (CDR IJJ))
      (GO R2))) 
(INITDMODE 'ARNUM) 
(PUT 'ARNUM 'SIMPFG
     '((T (SETDMODE 'ARNUM T))
       (NIL (SETDMODE 'ARNUM NIL) (RELEASE ARVARS*) (UNCURREP ARVARS*)
        (SETQ CURDEFPOL* NIL) (SETQ ARVARS* NIL)))) 
(ENDMODULE) 