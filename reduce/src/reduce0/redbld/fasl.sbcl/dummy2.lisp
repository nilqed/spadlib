(cl:declaim (cl:optimize cl:debug cl:safety))
(cl:declaim (sb-ext:muffle-conditions sb-ext:compiler-note cl:style-warning))
(MODULE (LIST 'DUMMY2)) 
(GLOBAL '(*BASIS)) 
(FLUID '(*DEBUG)) 
(PUT 'ADDDUMMY 'NUMBER-OF-ARGS 1) 
(PUT 'ADDDUMMY 'DEFINED-ON-LINE '40) 
(PUT 'ADDDUMMY 'DEFINED-IN-FILE 'ATENSOR/DUMMY2.RED) 
(PUT 'ADDDUMMY 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE ADDDUMMY (TT) (ADDDUMMY0 (CDR TT) *BASIS)) 
(PUT 'ADDDUMMY0 'NUMBER-OF-ARGS 2) 
(PUT 'ADDDUMMY0 'DEFINED-ON-LINE '45) 
(PUT 'ADDDUMMY0 'DEFINED-IN-FILE 'ATENSOR/DUMMY2.RED) 
(PUT 'ADDDUMMY0 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE ADDDUMMY0 (TT B)
    (COND ((NULL TT) (REVERSIP B))
          (T (ADDDUMMY0 (CDR TT) (ADDDUMMY0B (MK_DSYM0 (CAR TT)) B))))) 
(PUT 'ADDDUMMY0B 'NUMBER-OF-ARGS 2) 
(PUT 'ADDDUMMY0B 'DEFINED-ON-LINE '51) 
(PUT 'ADDDUMMY0B 'DEFINED-IN-FILE 'ATENSOR/DUMMY2.RED) 
(PUT 'ADDDUMMY0B 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE ADDDUMMY0B (U B)
    (COND ((NULL (CDR U)) B)
          (T
           (ADDDUMMY0B (CONS (CAR U) (CDDR U))
            (ADDDUMMY0A (CONS (CAR U) (CADR U)) B NIL))))) 
(PUT 'ADDDUMMY0A 'NUMBER-OF-ARGS 3) 
(PUT 'ADDDUMMY0A 'DEFINED-ON-LINE '57) 
(PUT 'ADDDUMMY0A 'DEFINED-IN-FILE 'ATENSOR/DUMMY2.RED) 
(PUT 'ADDDUMMY0A 'PROCEDURE_TYPE
     '(ARROW (TIMES GENERAL GENERAL GENERAL) GENERAL)) 
(DE ADDDUMMY0A (T1 B B1)
    (COND
     ((NULL B)
      (COND ((NULL T1) (REVERSIP B1))
            (T
             (REVERSIP
              (CONS (ADDDUMMY1 T1 (GPERM (LENGTH (CADAR T1))) NIL) B1)))))
     ((NULL T1) (ADDDUMMY0A NIL (CDR B) (CONS (CAR B) B1)))
     ((TH_MATCH0 (CAR T1) (CAAR B))
      (ADDDUMMY0A NIL (CDR B)
       (CONS
        (ADDDUMMY1 T1 (GPERM (LENGTH (CADAR T1))) (CONS (CAR T1) (CDAR B)))
        B1)))
     (T (ADDDUMMY0A T1 (CDR B) (CONS (CAR B) B1))))) 
(PUT 'ADDDUMMY1 'NUMBER-OF-ARGS 3) 
(PUT 'ADDDUMMY1 'DEFINED-ON-LINE '76) 
(PUT 'ADDDUMMY1 'DEFINED-IN-FILE 'ATENSOR/DUMMY2.RED) 
(PUT 'ADDDUMMY1 'PROCEDURE_TYPE
     '(ARROW (TIMES GENERAL GENERAL GENERAL) GENERAL)) 
(DE ADDDUMMY1 (T1 PLIST B)
    ((LAMBDA (X)
       (PROGN
        (COND
         (*DEBUG
          (PROGN
           (TERPRI)
           (PROGN (PRIN2 " DEBUG: adddummy1") NIL)
           (TERPRI)
           (T_PRI1 (CONS '|:TENSOR| (LIST T1)) T)
           (TERPRI)
           (PROG (Z)
             (SETQ Z (CDR X))
            LAB
             (COND ((NULL Z) (RETURN NIL)))
             ((LAMBDA (Z) (T_PRI1 (CONS '|:TENSOR| (LIST (CONS (CAR X) Z))) T))
              (CAR Z))
             (SETQ Z (CDR Z))
             (GO LAB))
           (PROGN (PRIN2 " DEBUG=") (PRIN2 (LENGTH (CDR X))) NIL)
           (TERPRI)
           NIL)))
        X))
     (ADDDUMMY1A T1 PLIST B))) 
(PUT 'ADDDUMMY1A 'NUMBER-OF-ARGS 3) 
(PUT 'ADDDUMMY1A 'DEFINED-ON-LINE '90) 
(PUT 'ADDDUMMY1A 'DEFINED-IN-FILE 'ATENSOR/DUMMY2.RED) 
(PUT 'ADDDUMMY1A 'PROCEDURE_TYPE
     '(ARROW (TIMES GENERAL GENERAL GENERAL) GENERAL)) 
(DE ADDDUMMY1A (T1 PLIST B)
    (COND ((NULL PLIST) B)
          (T
           (ADDDUMMY1A T1 (CDR PLIST)
            (CONS (COND ((NULL B) (CAR T1)) (T (CAR B)))
                  (INSERT_PV (PAPPL_PV (CAR PLIST) (CDR T1))
                   (COND ((NULL B) B) (T (CDR B))))))))) 
(PUT 'MK_DSYM0 'NUMBER-OF-ARGS 1) 
(PUT 'MK_DSYM0 'DEFINED-ON-LINE '103) 
(PUT 'MK_DSYM0 'DEFINED-IN-FILE 'ATENSOR/DUMMY2.RED) 
(PUT 'MK_DSYM0 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE MK_DSYM0 (T1)
    (CONS (CAR T1) (APPEND (CDR (MK_DSYM T1)) (CDR (MK_DDSYM T1))))) 
(PUT 'MK_DSYM 'NUMBER-OF-ARGS 1) 
(PUT 'MK_DSYM 'DEFINED-ON-LINE '106) 
(PUT 'MK_DSYM 'DEFINED-IN-FILE 'ATENSOR/DUMMY2.RED) 
(PUT 'MK_DSYM 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE MK_DSYM (T1)
    (CONS (CAR T1)
          (MK_DSYM1 (CDR T1) NIL
           (MK_FLIPS (CADAR T1) (DL_GET (CADAR T1)) NIL)))) 
(PUT 'MK_DSYM1 'NUMBER-OF-ARGS 3) 
(PUT 'MK_DSYM1 'DEFINED-ON-LINE '113) 
(PUT 'MK_DSYM1 'DEFINED-IN-FILE 'ATENSOR/DUMMY2.RED) 
(PUT 'MK_DSYM1 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL GENERAL) GENERAL)) 
(DE MK_DSYM1 (PV1 PV2 FS)
    (COND ((NULL FS) PV2)
          (T
           (MK_DSYM1 PV1
            (CONS (PV_ADD PV1 (PV_NEG (PV_APPLP PV1 (CAR FS)))) PV2)
            (CDR FS))))) 
(PUT 'DL_GET 'NUMBER-OF-ARGS 1) 
(PUT 'DL_GET 'DEFINED-ON-LINE '123) 
(PUT 'DL_GET 'DEFINED-IN-FILE 'ATENSOR/DUMMY2.RED) 
(PUT 'DL_GET 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE DL_GET (IL) (DL_GET2 IL NIL)) 
(PUT 'DL_GET2 'NUMBER-OF-ARGS 2) 
(PUT 'DL_GET2 'DEFINED-ON-LINE '125) 
(PUT 'DL_GET2 'DEFINED-IN-FILE 'ATENSOR/DUMMY2.RED) 
(PUT 'DL_GET2 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE DL_GET2 (IL D_ALST)
    (COND ((NULL IL) D_ALST)
          ((GET (CAR IL) 'DUMMY)
           (DL_GET2 (CDR IL) (DI_INSERT (CAR IL) D_ALST NIL)))
          (T (DL_GET2 (CDR IL) D_ALST)))) 
(PUT 'EQDUMMY 'NUMBER-OF-ARGS 2) 
(PUT 'EQDUMMY 'DEFINED-ON-LINE '131) 
(PUT 'EQDUMMY 'DEFINED-IN-FILE 'ATENSOR/DUMMY2.RED) 
(PUT 'EQDUMMY 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE EQDUMMY (X Y) (AND X (EQ (CAR (GET X 'DUMMY)) (CAR (GET Y 'DUMMY))))) 
(PUT 'DI_INSERT 'NUMBER-OF-ARGS 3) 
(PUT 'DI_INSERT 'DEFINED-ON-LINE '134) 
(PUT 'DI_INSERT 'DEFINED-IN-FILE 'ATENSOR/DUMMY2.RED) 
(PUT 'DI_INSERT 'PROCEDURE_TYPE
     '(ARROW (TIMES GENERAL GENERAL GENERAL) GENERAL)) 
(DE DI_INSERT (DI D_ALST1 D_ALST2)
    (COND ((NULL D_ALST1) (COND (DI (CONS (CONS DI NIL) D_ALST2)) (T D_ALST2)))
          ((EQDUMMY DI (CAAR D_ALST1))
           (DI_INSERT NIL (CDR D_ALST1)
            (CONS (CONS (CAAR D_ALST1) DI) D_ALST2)))
          (T (DI_INSERT DI (CDR D_ALST1) (CONS (CAR D_ALST1) D_ALST2))))) 
(PUT 'IL_UPDATE 'NUMBER-OF-ARGS 2) 
(PUT 'IL_UPDATE 'DEFINED-ON-LINE '141) 
(PUT 'IL_UPDATE 'DEFINED-IN-FILE 'ATENSOR/DUMMY2.RED) 
(PUT 'IL_UPDATE 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE IL_UPDATE (IL D_ALST) (IL_UPDATE1 IL D_ALST NIL)) 
(PUT 'IL_UPDATE1 'NUMBER-OF-ARGS 3) 
(PUT 'IL_UPDATE1 'DEFINED-ON-LINE '144) 
(PUT 'IL_UPDATE1 'DEFINED-IN-FILE 'ATENSOR/DUMMY2.RED) 
(PUT 'IL_UPDATE1 'PROCEDURE_TYPE
     '(ARROW (TIMES GENERAL GENERAL GENERAL) GENERAL)) 
(DE IL_UPDATE1 (IL D_ALST IL1)
    (COND ((NULL IL) (REVERSIP IL1))
          (T
           ((LAMBDA (Y)
              (COND ((NULL Y) (IL_UPDATE1 (CDR IL) D_ALST (CONS (CAR IL) IL1)))
                    (T
                     ((LAMBDA (X)
                        (COND
                         (X
                          (IL_UPDATE1 (CDR IL) (DELETE X D_ALST)
                           (CONS (CDR X) IL1)))
                         (T
                          (PROG (Z U)
                            (SETQ Z (DI_NEXT D_ALST))
                            (SETQ U (CAR Z))
                            (RPLACA Z Y)
                            (RETURN
                             (IL_UPDATE1 (CDR IL) D_ALST (CONS U IL1)))))))
                      (ASSOC Y D_ALST)))))
            (GET (CAR IL) 'DUMMY))))) 
(PUT 'DI_NEXT 'NUMBER-OF-ARGS 1) 
(PUT 'DI_NEXT 'DEFINED-ON-LINE '161) 
(PUT 'DI_NEXT 'DEFINED-IN-FILE 'ATENSOR/DUMMY2.RED) 
(PUT 'DI_NEXT 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE DI_NEXT (DL)
    (COND ((NULL DL) (REDERR (LIST 'DI_NEXT "+++ Can't find next dummy")))
          ((GET (CAAR DL) 'DUMMY) (CAR DL)) (T (DI_NEXT (CDR DL))))) 
(PUT 'MK_FLIPS 'NUMBER-OF-ARGS 3) 
(PUT 'MK_FLIPS 'DEFINED-ON-LINE '166) 
(PUT 'MK_FLIPS 'DEFINED-IN-FILE 'ATENSOR/DUMMY2.RED) 
(PUT 'MK_FLIPS 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL GENERAL) GENERAL)) 
(DE MK_FLIPS (IL DL FS)
    (COND ((NULL DL) (REVERSIP FS))
          (T (MK_FLIPS IL (CDR DL) (CONS (MK_FLIP IL (CAR DL)) FS))))) 
(PUT 'MK_FLIP 'NUMBER-OF-ARGS 2) 
(PUT 'MK_FLIP 'DEFINED-ON-LINE '170) 
(PUT 'MK_FLIP 'DEFINED-IN-FILE 'ATENSOR/DUMMY2.RED) 
(PUT 'MK_FLIP 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE MK_FLIP (IL X) (PFIND IL (MK_FLIP1 IL X NIL))) 
(PUT 'MK_FLIP1 'NUMBER-OF-ARGS 3) 
(PUT 'MK_FLIP1 'DEFINED-ON-LINE '173) 
(PUT 'MK_FLIP1 'DEFINED-IN-FILE 'ATENSOR/DUMMY2.RED) 
(PUT 'MK_FLIP1 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL GENERAL) GENERAL)) 
(DE MK_FLIP1 (IL X W)
    (COND ((NULL IL) (REVERSE W))
          ((EQ (CAR X) (CAR IL))
           (MK_FLIP1 (CDR IL) (CONS (CDR X) (CAR X)) (CONS (CDR X) W)))
          (T (MK_FLIP1 (CDR IL) X (CONS (CAR IL) W))))) 
(PUT 'MK_FLIP_ 'NUMBER-OF-ARGS 2) 
(PUT 'MK_FLIP_ 'DEFINED-ON-LINE '179) 
(PUT 'MK_FLIP_ 'DEFINED-IN-FILE 'ATENSOR/DUMMY2.RED) 
(PUT 'MK_FLIP_ 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE MK_FLIP_ (IL DI)
    (PROG (IL1 IL2 W W1 OK X)
      (SETQ W IL)
      (PROG ()
       WHILELABEL
        (COND ((NOT (AND W (NULL OK))) (RETURN NIL)))
        (COND
         ((EQ (NULL (CAR W)) (CAAR DI))
          (PROGN (SETQ IL1 (CONS (CAR W) IL1)) (SETQ W (CDR W))))
         (T (SETQ OK T)))
        (GO WHILELABEL))
      (COND ((NULL W) (REDERR 1)))
      (SETQ IL1 (CONS (CAR W) IL1))
      (SETQ IL2 IL1)
      (SETQ W (CDR W))
      (SETQ OK NIL)
      (PROG ()
       WHILELABEL
        (COND ((NOT W) (RETURN NIL)))
        (COND
         ((EQ (NULL (CAR W)) (CDAR DI))
          (PROGN (SETQ IL2 (CONS (CAR W) IL2)) (SETQ W (CDR W))))
         (T (SETQ OK T)))
        (GO WHILELABEL))
      (COND ((NULL W) (REDERR 2)))
      (SETQ IL2 (CONS (CAR W) IL2))
      (SETQ W (CDR W))
      (SETQ W1 IL2)
      (PROG ()
       WHILELABEL
        (COND ((NOT W) (RETURN NIL)))
        (PROGN (SETQ W1 (CONS (CAR W) W1)) (SETQ W (CDR W)))
        (GO WHILELABEL))
      (SETQ X (CAR IL1))
      (RPLACA IL1 (CAR IL2))
      (RPLACA IL2 X)
      (RETURN (PFIND IL (REVERSIP W))))) 
(PUT 'MK_DDSYM 'NUMBER-OF-ARGS 1) 
(PUT 'MK_DDSYM 'DEFINED-ON-LINE '206) 
(PUT 'MK_DDSYM 'DEFINED-IN-FILE 'ATENSOR/DUMMY2.RED) 
(PUT 'MK_DDSYM 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE MK_DDSYM (T1)
    (CONS (CAR T1)
          (MK_DDSYM1 (CDR T1) NIL
           (MK_FFLIPS (CADAR T1) (DL_GET (CADAR T1)) NIL)))) 
(PUT 'MK_DDSYM1 'NUMBER-OF-ARGS 3) 
(PUT 'MK_DDSYM1 'DEFINED-ON-LINE '214) 
(PUT 'MK_DDSYM1 'DEFINED-IN-FILE 'ATENSOR/DUMMY2.RED) 
(PUT 'MK_DDSYM1 'PROCEDURE_TYPE
     '(ARROW (TIMES GENERAL GENERAL GENERAL) GENERAL)) 
(DE MK_DDSYM1 (PV PVS FS)
    (COND ((NULL FS) PVS)
          (T
           (MK_DDSYM1 PV (CONS (PV_ADD PV (PV_NEG (PV_APPLP PV (CAR FS)))) PVS)
            (CDR FS))))) 
(PUT 'MK_FFLIPS 'NUMBER-OF-ARGS 3) 
(PUT 'MK_FFLIPS 'DEFINED-ON-LINE '222) 
(PUT 'MK_FFLIPS 'DEFINED-IN-FILE 'ATENSOR/DUMMY2.RED) 
(PUT 'MK_FFLIPS 'PROCEDURE_TYPE
     '(ARROW (TIMES GENERAL GENERAL GENERAL) GENERAL)) 
(DE MK_FFLIPS (IL DL FS)
    (COND ((NULL DL) FS)
          (T (MK_FFLIPS IL (CDR DL) (MK_FFLIPS1 IL (CAR DL) (CDR DL) FS))))) 
(PUT 'MK_FFLIPS1 'NUMBER-OF-ARGS 4) 
(PUT 'MK_FFLIPS1 'DEFINED-ON-LINE '226) 
(PUT 'MK_FFLIPS1 'DEFINED-IN-FILE 'ATENSOR/DUMMY2.RED) 
(PUT 'MK_FFLIPS1 'PROCEDURE_TYPE
     '(ARROW (TIMES GENERAL GENERAL GENERAL GENERAL) GENERAL)) 
(DE MK_FFLIPS1 (IL DP DL FS)
    (COND ((NULL DL) FS)
          (T (MK_FFLIPS1 IL DP (CDR DL) (CONS (MK_FFLIP1 IL DP (CAR DL)) FS))))) 
(PUT 'MK_FFLIP1 'NUMBER-OF-ARGS 3) 
(PUT 'MK_FFLIP1 'DEFINED-ON-LINE '230) 
(PUT 'MK_FFLIP1 'DEFINED-IN-FILE 'ATENSOR/DUMMY2.RED) 
(PUT 'MK_FFLIP1 'PROCEDURE_TYPE
     '(ARROW (TIMES GENERAL GENERAL GENERAL) GENERAL)) 
(DE MK_FFLIP1 (IL DP1 DP2) (PFIND IL (MK_FFLIP2 IL DP1 DP2 NIL))) 
(PUT 'MK_FFLIP2 'NUMBER-OF-ARGS 4) 
(PUT 'MK_FFLIP2 'DEFINED-ON-LINE '233) 
(PUT 'MK_FFLIP2 'DEFINED-IN-FILE 'ATENSOR/DUMMY2.RED) 
(PUT 'MK_FFLIP2 'PROCEDURE_TYPE
     '(ARROW (TIMES GENERAL GENERAL GENERAL GENERAL) GENERAL)) 
(DE MK_FFLIP2 (IL DP1 DP2 IL1)
    (COND ((NULL IL) (REVERSE IL1))
          (T
           ((LAMBDA (X)
              (COND
               ((AND (NULL (EQUAL X (GET (CAR DP1) 'DUMMY)))
                     (NULL (EQUAL X (GET (CAR DP2) 'DUMMY))))
                (MK_FFLIP2 (CDR IL) DP1 DP2 (CONS (CAR IL) IL1)))
               ((EQUAL X (GET (CAR DP2) 'DUMMY)) (MK_FFLIP2 IL DP2 DP1 IL1))
               (T
                (MK_FFLIP2 (CDR IL) DP1 (CONS (CDR DP2) (CAR DP2))
                 (CONS (CAR DP2) IL1)))))
            (GET (CAR IL) 'DUMMY))))) 
(ENDMODULE) 