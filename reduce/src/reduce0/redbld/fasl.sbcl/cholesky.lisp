(cl:declaim (cl:optimize cl:debug cl:safety))
(cl:declaim (sb-ext:muffle-conditions sb-ext:compiler-note cl:style-warning))
(MODULE (LIST 'CHOLESKY)) 
(PUT 'CHOLESKY 'NUMBER-OF-ARGS 1) 
(PUT 'CHOLESKY 'DEFINED-ON-LINE '46) 
(PUT 'CHOLESKY 'DEFINED-IN-FILE 'LINALG/CHOLESKY.RED) 
(PUT 'CHOLESKY 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE CHOLESKY (MAT1)
    (PROG (X P IN_MAT L U I_TURNED_ROUNDED_ON I J N)
      (SETQ I 0)
      (SETQ J 0)
      (SETQ N 0)
      (COND
       ((NOT *ROUNDED)
        (PROGN (SETQ I_TURNED_ROUNDED_ON T) (ON (LIST 'ROUNDED)) NIL)))
      (COND
       ((NOT (MATRIXP MAT1)) (REDERR "Error in cholesky:  non matrix input.")))
      (COND
       ((NOT (SYMMETRICP MAT1))
        (REDERR "Error in cholesky: input matrix is not symmetric.")))
      (SETQ IN_MAT (COPY_MAT MAT1))
      (SETQ N (FIRST (SIZE_OF_MATRIX IN_MAT)))
      (SETQ P (MKVECT N))
      (PROG (I)
        (SETQ I 1)
       LAB
        (COND ((MINUSP (DIFFERENCE N I)) (RETURN NIL)))
        (PROGN
         (PROG (J)
           (SETQ J I)
          LAB
           (COND ((MINUSP (DIFFERENCE N J)) (RETURN NIL)))
           (PROGN
            (SETQ X
                    (INNERPROD 1 1 (DIFFERENCE I 1)
                     (LIST 'MINUS (GETMAT IN_MAT I J)) (ROW_VEC IN_MAT I N)
                     (ROW_VEC IN_MAT J N)))
            (SETQ X (REVAL1 (LIST 'MINUS X) T))
            (COND
             ((EQUAL J I)
              (PROGN
               (COND
                ((LEQ (GET_NUM_PART (COND ((FIXP X) X) (T (REVAL1 X T)))) 0)
                 (REDERR
                  "Error in cholesky: input matrix is not positive definite.")))
               (PUTV P I (REVAL1 (LIST 'QUOTIENT 1 (LIST 'SQRT X)) T))
               NIL))
             (T
              (PROGN
               (SETMAT IN_MAT J I (REVAL1 (LIST 'TIMES X (GETV P I)) T))
               NIL)))
            NIL)
           (SETQ J (PLUS2 J 1))
           (GO LAB))
         NIL)
        (SETQ I (PLUS2 I 1))
        (GO LAB))
      (SETQ L (GET_L IN_MAT P N))
      (SETQ U (AEVAL (LIST 'TP L)))
      (COND (I_TURNED_ROUNDED_ON (OFF (LIST 'ROUNDED))))
      (RETURN (LIST 'LIST L U)))) 
(FLAG '(CHOLESKY) 'OPFN) 
(PUT 'GET_L 'NUMBER-OF-ARGS 3) 
(PUT 'GET_L 'DEFINED-ON-LINE '113) 
(PUT 'GET_L 'DEFINED-IN-FILE 'LINALG/CHOLESKY.RED) 
(PUT 'GET_L 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL GENERAL) GENERAL)) 
(DE GET_L (IN_MAT P SQ_SIZE)
    (PROG (L I J)
      (SETQ I 0)
      (SETQ J 0)
      (SETQ L (MKMATRIX SQ_SIZE SQ_SIZE))
      (PROG (I)
        (SETQ I 1)
       LAB
        (COND ((MINUSP (DIFFERENCE SQ_SIZE I)) (RETURN NIL)))
        (PROGN
         (SETMAT L I I (LIST 'QUOTIENT 1 (GETV P I)))
         (PROG (J)
           (SETQ J 1)
          LAB
           (COND ((MINUSP (DIFFERENCE (DIFFERENCE I 1) J)) (RETURN NIL)))
           (PROGN (SETMAT L I J (GETMAT IN_MAT I J)) NIL)
           (SETQ J (PLUS2 J 1))
           (GO LAB))
         NIL)
        (SETQ I (PLUS2 I 1))
        (GO LAB))
      (RETURN L))) 
(PUT 'SYMMETRICP 'NUMBER-OF-ARGS 1) 
(PUT 'SYMMETRICP 'DEFINED-ON-LINE '134) 
(PUT 'SYMMETRICP 'DEFINED-IN-FILE 'LINALG/CHOLESKY.RED) 
(PUT 'SYMMETRICP 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE SYMMETRICP (IN_MAT)
    (COND ((NEQ (AEVAL (LIST 'TP IN_MAT)) IN_MAT) NIL) (T T))) 
(FLAG '(SYMMETRICP) 'BOOLEAN) 
(FLAG '(SYMMETRICP) 'OPFN) 
(ENDMODULE) 