(cl:declaim (cl:optimize cl:debug cl:safety))
(cl:declaim (sb-ext:muffle-conditions sb-ext:compiler-note cl:style-warning))
(FLUID '(*BACKTRACE *MODE *FASLP)) 
(GLOBAL
 '(EXPORTSLIST* IMPORTSLIST* LOADED-PACKAGES* LOADED-MODULES* MODE-LIST*)) 
(SETQ *MODE (PROGN (SETQ ALGLIST* (CONS NIL NIL)) 'SYMBOLIC)) 
(REMPROP 'EXPORTS 'STAT) 
(REMPROP 'IMPORTS 'STAT) 
(REMPROP 'MODULE 'STAT) 
(PUT 'EXPORTS 'NUMBER-OF-ARGS 1) 
(PUT 'EXPORTS 'DEFINED-ON-LINE '50) 
(PUT 'EXPORTS 'DEFINED-IN-FILE 'RLISP/MODULE.RED) 
(PUT 'EXPORTS 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE EXPORTS (U) (PROG () (SETQ EXPORTSLIST* (UNION U EXPORTSLIST*)))) 
(PUT 'IMPORTS 'NUMBER-OF-ARGS 1) 
(PUT 'IMPORTS 'DEFINED-ON-LINE '53) 
(PUT 'IMPORTS 'DEFINED-IN-FILE 'RLISP/MODULE.RED) 
(PUT 'IMPORTS 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE IMPORTS (U) (PROG () (SETQ IMPORTSLIST* (UNION U IMPORTSLIST*)))) 
(PUT 'MODULE 'NUMBER-OF-ARGS 1) 
(PUT 'MODULE 'DEFINED-ON-LINE '56) 
(PUT 'MODULE 'DEFINED-IN-FILE 'RLISP/MODULE.RED) 
(PUT 'MODULE 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE MODULE (U)
    (PROG ()
      (SETQ MODE-LIST* (CONS *MODE MODE-LIST*))
      (SETQ *MODE (PROGN (SETQ ALGLIST* (CONS NIL NIL)) 'SYMBOLIC)))) 
(PUT 'ENDMODULE 'NUMBER-OF-ARGS 0) 
(PUT 'ENDMODULE 'DEFINED-ON-LINE '63) 
(PUT 'ENDMODULE 'DEFINED-IN-FILE 'RLISP/MODULE.RED) 
(PUT 'ENDMODULE 'PROCEDURE_TYPE '(ARROW UNIT GENERAL)) 
(DE ENDMODULE NIL
    (PROG ()
      (COND ((NULL MODE-LIST*) (REDERR "ENDMODULE called outside module")))
      (SETQ EXPORTSLIST* NIL)
      (SETQ IMPORTSLIST* NIL)
      (SETQ *MODE (PROGN (SETQ ALGLIST* (CONS NIL NIL)) (CAR MODE-LIST*)))
      (SETQ MODE-LIST* (CDR MODE-LIST*)))) 
(DEFLIST '((EXPORTS RLIS) (IMPORTS RLIS) (MODULE RLIS)) 'STAT) 
(PUT 'ENDMODULE 'STAT 'ENDSTAT) 
(FLAG '(ENDMODULE) 'GO) 
(FLAG '(MODULE ENDMODULE) 'EVAL) 
(PUT 'XMODULE 'NEWNAM 'MODULE) 
(PUT 'LOAD 'STAT 'RLIS) 
(PUT 'LOAD 'FORMFN 'FORMLOAD) 
(PUT 'FORMLOAD 'NUMBER-OF-ARGS 3) 
(PUT 'FORMLOAD 'DEFINED-ON-LINE '90) 
(PUT 'FORMLOAD 'DEFINED-IN-FILE 'RLISP/MODULE.RED) 
(PUT 'FORMLOAD 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL GENERAL) GENERAL)) 
(DE FORMLOAD (U VARS MODE)
    (COND
     ((EQUAL MODE 'SYMBOLIC)
      (LIST 'PROGN
            (LIST 'SETQ 'LOADED-MODULES*
                  (LIST 'UNION 'LOADED-MODULES* (MKQUOTE (CDR U))))
            (LIST 'EVLOAD (MKQUOTE (CDR U)))))
     (T (LIST 'LOAD_PACKAGE (MKQUOTE (CDR U)))))) 
(PUT 'LOAD-PACKAGE 'NUMBER-OF-ARGS 1) 
(PUT 'LOAD-PACKAGE 'DEFINED-ON-LINE '99) 
(PUT 'LOAD-PACKAGE 'DEFINED-IN-FILE 'RLISP/MODULE.RED) 
(PUT 'LOAD-PACKAGE 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE LOAD-PACKAGE (U)
    (PROG (X Y)
      (COND ((STRINGP U) (RETURN (LOAD-PACKAGE (INTERN U))))
            ((NULL (IDP U)) (REDERR (LIST U "is not a package name")))
            ((MEMQ U LOADED-PACKAGES*) (RETURN U))
            ((OR
              (ATOM
               (SETQ X
                       (ERRORSET (LIST 'EVLOAD (LIST 'QUOTE (LIST U))) NIL
                                 *BACKTRACE)))
              (CDR X))
             (REDERR
              (LIST "error in loading package" U "or package not found"))))
      (SETQ LOADED-PACKAGES* (CONS U LOADED-PACKAGES*))
      (SETQ LOADED-MODULES* (UNION LOADED-MODULES* (LIST U)))
      (SETQ X (GET U 'PACKAGE))
      (COND (X (SETQ X (CDR X))))
      (PROG ()
       WHILELABEL
        (COND ((NOT X) (RETURN NIL)))
        (PROGN
         (COND ((NULL (ATOM (GET (CAR X) 'PACKAGE))) (LOAD-PACKAGE (CAR X)))
               ((OR
                 (ATOM
                  (SETQ Y
                          (ERRORSET (LIST 'EVLOAD (LIST 'QUOTE (LIST (CAR X))))
                                    NIL *BACKTRACE)))
                 (CDR Y))
                (REDERR
                 (LIST "module" (CAR X) "of package" U "cannot be loaded"))))
         (SETQ LOADED-MODULES* (UNION LOADED-MODULES* (LIST (CAR X))))
         (SETQ X (CDR X)))
        (GO WHILELABEL)))) 
(REMPROP 'LOAD_PACKAGE 'STAT) 
(REMPROP 'PACKAGES_TO_LOAD 'STAT) 
(PUT 'LOAD_PACKAGE 'NUMBER-OF-ARGS 1) 
(PUT 'LOAD_PACKAGE 'DEFINED-ON-LINE '136) 
(PUT 'LOAD_PACKAGE 'DEFINED-IN-FILE 'RLISP/MODULE.RED) 
(PUT 'LOAD_PACKAGE 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE LOAD_PACKAGE (U)
    (PROG ()
      (PROG ()
       WHILELABEL
        (COND ((NOT U) (RETURN NIL)))
        (PROGN (LOAD-PACKAGE (CAR U)) (SETQ U (CDR U)))
        (GO WHILELABEL)))) 
(PUT 'PACKAGES_TO_LOAD 'NUMBER-OF-ARGS 1) 
(PUT 'PACKAGES_TO_LOAD 'DEFINED-ON-LINE '143) 
(PUT 'PACKAGES_TO_LOAD 'DEFINED-IN-FILE 'RLISP/MODULE.RED) 
(PUT 'PACKAGES_TO_LOAD 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE PACKAGES_TO_LOAD (U) (COND ((NULL *FASLP) (LOAD_PACKAGE U)))) 
(PUT 'LOAD_PACKAGE 'STAT 'RLIS) 
(PUT 'PACKAGES_TO_LOAD 'STAT 'RLIS) 
(FLAG '(LOAD-PACKAGE LOAD_PACKAGE) 'EVAL) 