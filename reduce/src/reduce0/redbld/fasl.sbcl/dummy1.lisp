(cl:declaim (cl:optimize cl:debug cl:safety))
(cl:declaim (sb-ext:muffle-conditions sb-ext:compiler-note cl:style-warning))
(MODULE (LIST 'DUMMY1)) 
(GLOBAL '(*BASIS)) 
(PUT 'CROSS 'NUMBER-OF-ARGS 2) 
(PUT 'CROSS 'DEFINED-ON-LINE '38) 
(PUT 'CROSS 'DEFINED-IN-FILE 'ATENSOR/DUMMY1.RED) 
(PUT 'CROSS 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE CROSS (S1 S2) (CROSS1 S1 S2 NIL)) 
(PUT 'CROSS1 'NUMBER-OF-ARGS 3) 
(PUT 'CROSS1 'DEFINED-ON-LINE '40) 
(PUT 'CROSS1 'DEFINED-IN-FILE 'ATENSOR/DUMMY1.RED) 
(PUT 'CROSS1 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL GENERAL) GENERAL)) 
(DE CROSS1 (S1 S2 W)
    (COND ((NULL S1) W)
          ((MEMQ (CAR S1) S2)
           (CROSS1 (CDR S1) (DELETE (CAR S1) S2) (CONS (CAR S1) W)))
          (T (CROSS1 (CDR S1) S2 W)))) 
(PUT 'SUPPL 'NUMBER-OF-ARGS 2) 
(PUT 'SUPPL 'DEFINED-ON-LINE '46) 
(PUT 'SUPPL 'DEFINED-IN-FILE 'ATENSOR/DUMMY1.RED) 
(PUT 'SUPPL 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE SUPPL (S1 S2) (SUPPL1 S1 S2 NIL)) 
(PUT 'SUPPL1 'NUMBER-OF-ARGS 3) 
(PUT 'SUPPL1 'DEFINED-ON-LINE '48) 
(PUT 'SUPPL1 'DEFINED-IN-FILE 'ATENSOR/DUMMY1.RED) 
(PUT 'SUPPL1 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL GENERAL) GENERAL)) 
(DE SUPPL1 (S1 S2 W)
    (COND ((NULL S1) W)
          ((NULL (MEMQ (CAR S1) S2)) (SUPPL1 (CDR S1) S2 (CONS (CAR S1) W)))
          (T (SUPPL1 (CDR S1) (DELETE (CAR S1) S2) W)))) 
(PUT 'SUPPL2 'NUMBER-OF-ARGS 3) 
(PUT 'SUPPL2 'DEFINED-ON-LINE '53) 
(PUT 'SUPPL2 'DEFINED-IN-FILE 'ATENSOR/DUMMY1.RED) 
(PUT 'SUPPL2 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL GENERAL) GENERAL)) 
(DE SUPPL2 (S1 S2 W)
    (COND ((NULL S1) (CONS S2 W))
          ((NULL (MEMQ (CAR S1) S2)) (SUPPL1 (CDR S1) S2 (CONS (CAR S1) W)))
          (T (SUPPL1 (CDR S1) (DELETE (CAR S1) S2) W)))) 
(PUT 'TN_EQUAL 'NUMBER-OF-ARGS 2) 
(PUT 'TN_EQUAL 'DEFINED-ON-LINE '58) 
(PUT 'TN_EQUAL 'DEFINED-IN-FILE 'ATENSOR/DUMMY1.RED) 
(PUT 'TN_EQUAL 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE TN_EQUAL (TN1 TN2)
    ((LAMBDA (X) (AND (CAR X) (CDR X))) (SUPPL2 TN1 TN2 NIL))) 
(PUT 'TH_EQUAL 'NUMBER-OF-ARGS 2) 
(PUT 'TH_EQUAL 'DEFINED-ON-LINE '62) 
(PUT 'TH_EQUAL 'DEFINED-IN-FILE 'ATENSOR/DUMMY1.RED) 
(PUT 'TH_EQUAL 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE TH_EQUAL (TH1 TH2)
    (COND ((TN_EQUAL (CAR TH1) (CAR TH2)) (IL_EQUAL (CADR TH1) (CADR TH2)))
          (T NIL))) 
(PUT 'IL_EQUAL 'NUMBER-OF-ARGS 2) 
(PUT 'IL_EQUAL 'DEFINED-ON-LINE '67) 
(PUT 'IL_EQUAL 'DEFINED-IN-FILE 'ATENSOR/DUMMY1.RED) 
(PUT 'IL_EQUAL 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE IL_EQUAL (IL1 IL2) (IL_EQUAL1 IL2 (SUPPL IL1 IL2) NIL)) 
(PUT 'IL_EQUAL1 'NUMBER-OF-ARGS 3) 
(PUT 'IL_EQUAL1 'DEFINED-ON-LINE '70) 
(PUT 'IL_EQUAL1 'DEFINED-IN-FILE 'ATENSOR/DUMMY1.RED) 
(PUT 'IL_EQUAL1 'PROCEDURE_TYPE
     '(ARROW (TIMES GENERAL GENERAL GENERAL) GENERAL)) 
(DE IL_EQUAL1 (IL DL W)
    (COND ((NULL IL) (REVERSIP W))
          ((NULL (GET (CAR IL) 'DUMMY))
           (IL_EQUAL1 (CDR IL) DL (CONS (CAR IL) W)))
          (T
           ((LAMBDA (X)
              (COND
               ((NULL (CDR X))
                ((LAMBDA (Z) (IL_EQUAL1 (CDR IL) (CDR DL) (CONS (CAR DL) W)))
                 (RPLACD (RPLACA X (CAR (GET (CAR DL) 'DUMMY))) T)))
               (T
                ((LAMBDA (Z) (IL_EQUAL1 (CDR IL) (DELETE Z DL) (CONS Z W)))
                 (DFIND (CAR X) DL)))))
            (GET (CAR IL) 'DUMMY))))) 
(PUT 'DFIND 'NUMBER-OF-ARGS 2) 
(PUT 'DFIND 'DEFINED-ON-LINE '85) 
(PUT 'DFIND 'DEFINED-IN-FILE 'ATENSOR/DUMMY1.RED) 
(PUT 'DFIND 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE DFIND (DI DL)
    (COND ((NULL DL) NIL) ((EQ DI (GET (CAR DL) 'DUMMY)) (CAR DL))
          (T (DFIND DI (CDR DL))))) 
(PUT 'IL_SIMP 'NUMBER-OF-ARGS 1) 
(PUT 'IL_SIMP 'DEFINED-ON-LINE '90) 
(PUT 'IL_SIMP 'DEFINED-IN-FILE 'ATENSOR/DUMMY1.RED) 
(PUT 'IL_SIMP 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE IL_SIMP (IL) (IL_SIMP1 IL NIL)) 
(PUT 'IL_SIMP1 'NUMBER-OF-ARGS 2) 
(PUT 'IL_SIMP1 'DEFINED-ON-LINE '92) 
(PUT 'IL_SIMP1 'DEFINED-IN-FILE 'ATENSOR/DUMMY1.RED) 
(PUT 'IL_SIMP1 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE IL_SIMP1 (IL W)
    (COND ((NULL IL) (REVERSIP W))
          ((MEMQ (CAR IL) (CDR IL))
           (IL_SIMP1 (DI_SUBST (CONS (CAR IL) (DI_NEW (CAR IL))) (CDR IL))
            (CONS (DI_NEW (CAR IL)) W)))
          (T (IL_SIMP1 (CDR IL) (CONS (CAR IL) W))))) 
(PUT 'DI_SUBST 'NUMBER-OF-ARGS 2) 
(PUT 'DI_SUBST 'DEFINED-ON-LINE '100) 
(PUT 'DI_SUBST 'DEFINED-IN-FILE 'ATENSOR/DUMMY1.RED) 
(PUT 'DI_SUBST 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE DI_SUBST (X IL) (DI_SUBST1 X IL NIL)) 
(PUT 'DI_SUBST1 'NUMBER-OF-ARGS 3) 
(PUT 'DI_SUBST1 'DEFINED-ON-LINE '102) 
(PUT 'DI_SUBST1 'DEFINED-IN-FILE 'ATENSOR/DUMMY1.RED) 
(PUT 'DI_SUBST1 'PROCEDURE_TYPE
     '(ARROW (TIMES GENERAL GENERAL GENERAL) GENERAL)) 
(DE DI_SUBST1 (X IL W)
    (COND ((NULL IL) (REVERSIP W))
          ((EQ (CAR X) (CAR IL)) (DI_SUBST1 X (CDR IL) (CONS (CDR X) W)))
          (T (DI_SUBST1 X (CDR IL) (CONS (CAR IL) W))))) 
(GLOBAL '(D_NUMBER)) 
(COND ((NULL D_NUMBER) (SETQ D_NUMBER 0))) 
(PUT 'DI_NEW 'NUMBER-OF-ARGS 1) 
(PUT 'DI_NEW 'DEFINED-ON-LINE '110) 
(PUT 'DI_NEW 'DEFINED-IN-FILE 'ATENSOR/DUMMY1.RED) 
(PUT 'DI_NEW 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE DI_NEW (X)
    (PROG (Z)
      (SETQ D_NUMBER (PLUS D_NUMBER 1))
      (SETQ Z (MKID '_ D_NUMBER))
      (PUT Z 'DUMMY (LIST X))
      (RETURN Z))) 
(GLOBAL '(*DUMMYPRI *WINDEXPRI)) 
(SWITCH (LIST 'DUMMYPRI 'WINDEXPRI)) 
(PUT 'DI_RESTORE 'NUMBER-OF-ARGS 1) 
(PUT 'DI_RESTORE 'DEFINED-ON-LINE '121) 
(PUT 'DI_RESTORE 'DEFINED-IN-FILE 'ATENSOR/DUMMY1.RED) 
(PUT 'DI_RESTORE 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE DI_RESTORE (IL) (DI_RESTORE1 IL NIL)) 
(PUT 'DI_RESTORE1 'NUMBER-OF-ARGS 2) 
(PUT 'DI_RESTORE1 'DEFINED-ON-LINE '123) 
(PUT 'DI_RESTORE1 'DEFINED-IN-FILE 'ATENSOR/DUMMY1.RED) 
(PUT 'DI_RESTORE1 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE DI_RESTORE1 (IL W)
    (COND ((NULL IL) (REVERSIP W))
          (T
           ((LAMBDA (X)
              (COND
               ((NULL X)
                ((LAMBDA (Y)
                   (COND ((NULL Y) (DI_RESTORE1 (CDR IL) (CONS (CAR IL) W)))
                         (T
                          (DI_RESTORE1 (CDR IL)
                           (CONS
                            (COND (*WINDEXPRI (MKID (CAR Y) (CAR IL)))
                                  (T (CAR Y)))
                            W)))))
                 (GET (CAR IL) 'WINDEX)))
               (T
                (DI_RESTORE1 (CDR IL)
                 (CONS (COND (*DUMMYPRI (MKID (CAR X) (CAR IL))) (T (CAR X)))
                       W)))))
            (GET (CAR IL) 'DUMMY))))) 
(ENDMODULE) 