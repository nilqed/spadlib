(cl:declaim (cl:optimize cl:debug cl:safety))
(cl:declaim (sb-ext:muffle-conditions sb-ext:compiler-note cl:style-warning))
(MODULE (LIST 'IBALPQSAT)) 
(REVISION 'IBALPQSAT
          "$Id: ibalpqsat.red 6668 2023-12-29 14:53:18Z arthurcnorman $") 
(COPYRIGHT 'IBALPQSAT "(c) 2007-2009 A. Dolzmann, T. Sturm, 2017 T. Sturm") 
(FLUID '(IBALP_QSATOPTIONS* *RLVERBOSE)) 
(FLUID '(DONEL* NUMCDCL* NUMLOCS*)) 
(PUT 'MY_MKVECT 'NUMBER-OF-ARGS 1) 
(PUT 'MY_MKVECT 'DEFINED-ON-LINE '36) 
(PUT 'MY_MKVECT 'DEFINED-IN-FILE 'REDLOG/IBALP/IBALPQSAT.RED) 
(PUT 'MY_MKVECT 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE MY_MKVECT (N)
    (PROGN
     (IOTO_TPRIN2T (LIST "entering mkvect n=" N))
     (PROG (I FORALL-RESULT FORALL-ENDPTR)
       (SETQ I 0)
       (COND ((MINUSP (DIFFERENCE N I)) (RETURN NIL)))
       (SETQ FORALL-RESULT (SETQ FORALL-ENDPTR (CONS (CONS I NIL) NIL)))
      LOOPLABEL
       (SETQ I (PLUS2 I 1))
       (COND ((MINUSP (DIFFERENCE N I)) (RETURN FORALL-RESULT)))
       (RPLACD FORALL-ENDPTR (CONS (CONS I NIL) NIL))
       (SETQ FORALL-ENDPTR (CDR FORALL-ENDPTR))
       (GO LOOPLABEL)))) 
(PUT 'MY_PUTV 'NUMBER-OF-ARGS 3) 
(PUT 'MY_PUTV 'DEFINED-ON-LINE '42) 
(PUT 'MY_PUTV 'DEFINED-IN-FILE 'REDLOG/IBALP/IBALPQSAT.RED) 
(PUT 'MY_PUTV 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL GENERAL) GENERAL)) 
(DE MY_PUTV (V N A)
    (PROG (W)
      (IOTO_TPRIN2T (LIST "entering putv n=" N " size=" (LENGTH V)))
      (SETQ W (ASSOC N V))
      (SETCDR W A)
      (RETURN V))) 
(PUT 'MY_GETV 'NUMBER-OF-ARGS 2) 
(PUT 'MY_GETV 'DEFINED-ON-LINE '50) 
(PUT 'MY_GETV 'DEFINED-IN-FILE 'REDLOG/IBALP/IBALPQSAT.RED) 
(PUT 'MY_GETV 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE MY_GETV (V N)
    (PROGN
     (IOTO_TPRIN2T (LIST "entering getv n=" N " size=" (LENGTH V)))
     (CDR (ASSOC N V)))) 
(PUT 'MY_MKVECT 'NUMBER-OF-ARGS 1) 
(PUT 'MY_MKVECT 'DEFINED-ON-LINE '56) 
(PUT 'MY_MKVECT 'DEFINED-IN-FILE 'REDLOG/IBALP/IBALPQSAT.RED) 
(PUT 'MY_MKVECT 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE MY_MKVECT (N)
    (PROGN (IOTO_TPRIN2T (LIST "entering mkvect n=" N)) (MKVECT N))) 
(PUT 'MY_PUTV 'NUMBER-OF-ARGS 3) 
(PUT 'MY_PUTV 'DEFINED-ON-LINE '62) 
(PUT 'MY_PUTV 'DEFINED-IN-FILE 'REDLOG/IBALP/IBALPQSAT.RED) 
(PUT 'MY_PUTV 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL GENERAL) GENERAL)) 
(DE MY_PUTV (V N A)
    (PROG (W)
      (IOTO_TPRIN2T (LIST "entering putv n=" N " size=" (UPBV V)))
      (PUTV V N A)
      (IOTO_TPRIN2T (LIST "leaving putv n=" N " size=" (UPBV V))))) 
(PUT 'MY_GETV 'NUMBER-OF-ARGS 2) 
(PUT 'MY_GETV 'DEFINED-ON-LINE '69) 
(PUT 'MY_GETV 'DEFINED-IN-FILE 'REDLOG/IBALP/IBALPQSAT.RED) 
(PUT 'MY_GETV 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE MY_GETV (V N)
    (PROGN
     (IOTO_TPRIN2T (LIST "entering getv n=" N " size=" (UPBV V)))
     (GETV V N))) 
(DE IBALP_QSAT-INITOPTIONS NIL (IBALP_QSAT-SETOPTIONL (LIST 'ZMOM 5 1 1.2 200))) 
(PUT 'IBALP_QSAT-INITOPTIONS 'NUMBER-OF-ARGS 0) 
(PUT 'IBALP_QSAT-INITOPTIONS 'DEFINED-ON-LINE '75) 
(PUT 'IBALP_QSAT-INITOPTIONS 'DEFINED-IN-FILE 'REDLOG/IBALP/IBALPQSAT.RED) 
(PUT 'IBALP_QSAT-INITOPTIONS 'PROCEDURE_TYPE '(ARROW UNIT GENERAL)) 
(PUTC 'IBALP_QSAT-INITOPTIONS 'INLINE
      '(LAMBDA () (IBALP_QSAT-SETOPTIONL (LIST 'ZMOM 5 1 1.2 200)))) 
(PUT 'IBALP_QSAT-GETOPTIONL 'NUMBER-OF-ARGS 0) 
(PUT 'IBALP_QSAT-GETOPTIONL 'DEFINED-ON-LINE '79) 
(PUT 'IBALP_QSAT-GETOPTIONL 'DEFINED-IN-FILE 'REDLOG/IBALP/IBALPQSAT.RED) 
(PUT 'IBALP_QSAT-GETOPTIONL 'PROCEDURE_TYPE '(ARROW UNIT GENERAL)) 
(DE IBALP_QSAT-GETOPTIONL NIL
    (PROG (TLIST)
      (SETQ TLIST (CONS (LTO_CATSOC 'CLAUSE_DEL IBALP_QSATOPTIONS*) NIL))
      (SETQ TLIST (CONS (LTO_CATSOC 'RES_INC IBALP_QSATOPTIONS*) TLIST))
      (SETQ TLIST (CONS (LTO_CATSOC 'FIRST_VAL IBALP_QSATOPTIONS*) TLIST))
      (SETQ TLIST (CONS (LTO_CATSOC 'RES_START IBALP_QSATOPTIONS*) TLIST))
      (SETQ TLIST (CONS (LTO_CATSOC 'HEURISTIC IBALP_QSATOPTIONS*) TLIST))
      (RETURN TLIST))) 
(PUT 'IBALP_QSAT-SETOPTIONL 'NUMBER-OF-ARGS 1) 
(PUT 'IBALP_QSAT-SETOPTIONL 'DEFINED-ON-LINE '91) 
(PUT 'IBALP_QSAT-SETOPTIONL 'DEFINED-IN-FILE 'REDLOG/IBALP/IBALPQSAT.RED) 
(PUT 'IBALP_QSAT-SETOPTIONL 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE IBALP_QSAT-SETOPTIONL (OPTIONL)
    (PROG (TEMP)
      (COND ((NULL OPTIONL) (RETURN (IBALP_QSAT-GETOPTIONL))))
      (SETQ TEMP (CAR OPTIONL))
      (SETQ IBALP_QSATOPTIONS* (CONS (CONS 'HEURISTIC TEMP) NIL))
      (SETQ TEMP (CADR OPTIONL))
      (SETQ IBALP_QSATOPTIONS*
              (CONS (CONS 'RES_START TEMP) IBALP_QSATOPTIONS*))
      (SETQ TEMP (CADDR OPTIONL))
      (SETQ IBALP_QSATOPTIONS*
              (CONS (CONS 'FIRST_VAL TEMP) IBALP_QSATOPTIONS*))
      (SETQ TEMP (CADDDR OPTIONL))
      (SETQ IBALP_QSATOPTIONS* (CONS (CONS 'RES_INC TEMP) IBALP_QSATOPTIONS*))
      (SETQ TEMP (CAR (CDDDDR OPTIONL)))
      (SETQ IBALP_QSATOPTIONS*
              (CONS (CONS 'CLAUSE_DEL TEMP) IBALP_QSATOPTIONS*))
      (RETURN (IBALP_QSAT-GETOPTIONL)))) 
(DE IBALP_QSAT-GETOPTION (OPT) (LTO_CATSOC OPT IBALP_QSATOPTIONS*)) 
(PUT 'IBALP_QSAT-GETOPTION 'NUMBER-OF-ARGS 1) 
(PUT 'IBALP_QSAT-GETOPTION 'DEFINED-ON-LINE '113) 
(PUT 'IBALP_QSAT-GETOPTION 'DEFINED-IN-FILE 'REDLOG/IBALP/IBALPQSAT.RED) 
(PUT 'IBALP_QSAT-GETOPTION 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(PUTC 'IBALP_QSAT-GETOPTION 'INLINE
      '(LAMBDA (OPT) (LTO_CATSOC OPT IBALP_QSATOPTIONS*))) 
(DE IBALP_VAR-NEW (ID)
    (LIST ID NIL NIL NIL 0 0 (MINUS 1) NIL 0 0 NIL 0 NIL 0 NIL)) 
(PUT 'IBALP_VAR-NEW 'NUMBER-OF-ARGS 1) 
(PUT 'IBALP_VAR-NEW 'DEFINED-ON-LINE '121) 
(PUT 'IBALP_VAR-NEW 'DEFINED-IN-FILE 'REDLOG/IBALP/IBALPQSAT.RED) 
(PUT 'IBALP_VAR-NEW 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(PUTC 'IBALP_VAR-NEW 'INLINE
      '(LAMBDA (ID)
         (LIST ID NIL NIL NIL 0 0 (MINUS 1) NIL 0 0 NIL 0 NIL 0 NIL))) 
(DE IBALP_VAR-SETVAL (VAR VAL) (SETCAR (CDR VAR) VAL)) 
(PUT 'IBALP_VAR-SETVAL 'NUMBER-OF-ARGS 2) 
(PUT 'IBALP_VAR-SETVAL 'DEFINED-ON-LINE '138) 
(PUT 'IBALP_VAR-SETVAL 'DEFINED-IN-FILE 'REDLOG/IBALP/IBALPQSAT.RED) 
(PUT 'IBALP_VAR-SETVAL 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(PUTC 'IBALP_VAR-SETVAL 'INLINE '(LAMBDA (VAR VAL) (SETCAR (CDR VAR) VAL))) 
(DE IBALP_VAR-SETPOSOCC (VAR POSOCC)
    (SETCAR (CDDR VAR) (CONS POSOCC (CADDR VAR)))) 
(PUT 'IBALP_VAR-SETPOSOCC 'NUMBER-OF-ARGS 2) 
(PUT 'IBALP_VAR-SETPOSOCC 'DEFINED-ON-LINE '143) 
(PUT 'IBALP_VAR-SETPOSOCC 'DEFINED-IN-FILE 'REDLOG/IBALP/IBALPQSAT.RED) 
(PUT 'IBALP_VAR-SETPOSOCC 'PROCEDURE_TYPE
     '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(PUTC 'IBALP_VAR-SETPOSOCC 'INLINE
      '(LAMBDA (VAR POSOCC) (SETCAR (CDDR VAR) (CONS POSOCC (CADDR VAR))))) 
(DE IBALP_VAR-SETNEGOCC (VAR NEGOCC)
    (SETCAR (CDDDR VAR) (CONS NEGOCC (CADDDR VAR)))) 
(PUT 'IBALP_VAR-SETNEGOCC 'NUMBER-OF-ARGS 2) 
(PUT 'IBALP_VAR-SETNEGOCC 'DEFINED-ON-LINE '148) 
(PUT 'IBALP_VAR-SETNEGOCC 'DEFINED-IN-FILE 'REDLOG/IBALP/IBALPQSAT.RED) 
(PUT 'IBALP_VAR-SETNEGOCC 'PROCEDURE_TYPE
     '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(PUTC 'IBALP_VAR-SETNEGOCC 'INLINE
      '(LAMBDA (VAR NEGOCC) (SETCAR (CDDDR VAR) (CONS NEGOCC (CADDDR VAR))))) 
(DE IBALP_VAR-SETPOSOCCABS (VAR POSOCC) (SETCAR (CDDR VAR) POSOCC)) 
(PUT 'IBALP_VAR-SETPOSOCCABS 'NUMBER-OF-ARGS 2) 
(PUT 'IBALP_VAR-SETPOSOCCABS 'DEFINED-ON-LINE '153) 
(PUT 'IBALP_VAR-SETPOSOCCABS 'DEFINED-IN-FILE 'REDLOG/IBALP/IBALPQSAT.RED) 
(PUT 'IBALP_VAR-SETPOSOCCABS 'PROCEDURE_TYPE
     '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(PUTC 'IBALP_VAR-SETPOSOCCABS 'INLINE
      '(LAMBDA (VAR POSOCC) (SETCAR (CDDR VAR) POSOCC))) 
(DE IBALP_VAR-SETNEGOCCABS (VAR NEGOCC) (SETCAR (CDDDR VAR) NEGOCC)) 
(PUT 'IBALP_VAR-SETNEGOCCABS 'NUMBER-OF-ARGS 2) 
(PUT 'IBALP_VAR-SETNEGOCCABS 'DEFINED-ON-LINE '158) 
(PUT 'IBALP_VAR-SETNEGOCCABS 'DEFINED-IN-FILE 'REDLOG/IBALP/IBALPQSAT.RED) 
(PUT 'IBALP_VAR-SETNEGOCCABS 'PROCEDURE_TYPE
     '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(PUTC 'IBALP_VAR-SETNEGOCCABS 'INLINE
      '(LAMBDA (VAR NEGOCC) (SETCAR (CDDDR VAR) NEGOCC))) 
(DE IBALP_VAR-SETNUMPOS (VAR NUMPOS) (SETCAR (CDDDDR VAR) NUMPOS)) 
(PUT 'IBALP_VAR-SETNUMPOS 'NUMBER-OF-ARGS 2) 
(PUT 'IBALP_VAR-SETNUMPOS 'DEFINED-ON-LINE '163) 
(PUT 'IBALP_VAR-SETNUMPOS 'DEFINED-IN-FILE 'REDLOG/IBALP/IBALPQSAT.RED) 
(PUT 'IBALP_VAR-SETNUMPOS 'PROCEDURE_TYPE
     '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(PUTC 'IBALP_VAR-SETNUMPOS 'INLINE
      '(LAMBDA (VAR NUMPOS) (SETCAR (CDDDDR VAR) NUMPOS))) 
(DE IBALP_VAR-SETNUMNEG (VAR NUMNEG) (SETCAR (CDR (CDDDDR VAR)) NUMNEG)) 
(PUT 'IBALP_VAR-SETNUMNEG 'NUMBER-OF-ARGS 2) 
(PUT 'IBALP_VAR-SETNUMNEG 'DEFINED-ON-LINE '169) 
(PUT 'IBALP_VAR-SETNUMNEG 'DEFINED-IN-FILE 'REDLOG/IBALP/IBALPQSAT.RED) 
(PUT 'IBALP_VAR-SETNUMNEG 'PROCEDURE_TYPE
     '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(PUTC 'IBALP_VAR-SETNUMNEG 'INLINE
      '(LAMBDA (VAR NUMNEG) (SETCAR (CDR (CDDDDR VAR)) NUMNEG))) 
(DE IBALP_VAR-SETLEV (VAR LEV) (SETCAR (CDDR (CDDDDR VAR)) LEV)) 
(PUT 'IBALP_VAR-SETLEV 'NUMBER-OF-ARGS 2) 
(PUT 'IBALP_VAR-SETLEV 'DEFINED-ON-LINE '175) 
(PUT 'IBALP_VAR-SETLEV 'DEFINED-IN-FILE 'REDLOG/IBALP/IBALPQSAT.RED) 
(PUT 'IBALP_VAR-SETLEV 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(PUTC 'IBALP_VAR-SETLEV 'INLINE
      '(LAMBDA (VAR LEV) (SETCAR (CDDR (CDDDDR VAR)) LEV))) 
(DE IBALP_VAR-SETREAS (VAR REAS) (SETCAR (CDDDR (CDDDDR VAR)) REAS)) 
(PUT 'IBALP_VAR-SETREAS 'NUMBER-OF-ARGS 2) 
(PUT 'IBALP_VAR-SETREAS 'DEFINED-ON-LINE '180) 
(PUT 'IBALP_VAR-SETREAS 'DEFINED-IN-FILE 'REDLOG/IBALP/IBALPQSAT.RED) 
(PUT 'IBALP_VAR-SETREAS 'PROCEDURE_TYPE
     '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(PUTC 'IBALP_VAR-SETREAS 'INLINE
      '(LAMBDA (VAR REAS) (SETCAR (CDDDR (CDDDDR VAR)) REAS))) 
(DE IBALP_VAR-SETPOSCC (VAR NUM) (SETCAR (CDDDDR (CDDDDR VAR)) NUM)) 
(PUT 'IBALP_VAR-SETPOSCC 'NUMBER-OF-ARGS 2) 
(PUT 'IBALP_VAR-SETPOSCC 'DEFINED-ON-LINE '186) 
(PUT 'IBALP_VAR-SETPOSCC 'DEFINED-IN-FILE 'REDLOG/IBALP/IBALPQSAT.RED) 
(PUT 'IBALP_VAR-SETPOSCC 'PROCEDURE_TYPE
     '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(PUTC 'IBALP_VAR-SETPOSCC 'INLINE
      '(LAMBDA (VAR NUM) (SETCAR (CDDDDR (CDDDDR VAR)) NUM))) 
(DE IBALP_VAR-SETNEGCC (VAR NUM) (SETCAR (CDR (CDDDDR (CDDDDR VAR))) NUM)) 
(PUT 'IBALP_VAR-SETNEGCC 'NUMBER-OF-ARGS 2) 
(PUT 'IBALP_VAR-SETNEGCC 'DEFINED-ON-LINE '192) 
(PUT 'IBALP_VAR-SETNEGCC 'DEFINED-IN-FILE 'REDLOG/IBALP/IBALPQSAT.RED) 
(PUT 'IBALP_VAR-SETNEGCC 'PROCEDURE_TYPE
     '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(PUTC 'IBALP_VAR-SETNEGCC 'INLINE
      '(LAMBDA (VAR NUM) (SETCAR (CDR (CDDDDR (CDDDDR VAR))) NUM))) 
(DE IBALP_VAR-SETWC (VAR WC)
    (SETCAR (CDDR (CDDDDR (CDDDDR VAR)))
            (CONS WC (CADDR (CDDDDR (CDDDDR VAR)))))) 
(PUT 'IBALP_VAR-SETWC 'NUMBER-OF-ARGS 2) 
(PUT 'IBALP_VAR-SETWC 'DEFINED-ON-LINE '198) 
(PUT 'IBALP_VAR-SETWC 'DEFINED-IN-FILE 'REDLOG/IBALP/IBALPQSAT.RED) 
(PUT 'IBALP_VAR-SETWC 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(PUTC 'IBALP_VAR-SETWC 'INLINE
      '(LAMBDA (VAR WC)
         (SETCAR (CDDR (CDDDDR (CDDDDR VAR)))
                 (CONS WC (CADDR (CDDDDR (CDDDDR VAR))))))) 
(DE IBALP_VAR-SETMOM (VAR MOM) (SETCAR (CDDDR (CDDDDR (CDDDDR VAR))) MOM)) 
(PUT 'IBALP_VAR-SETMOM 'NUMBER-OF-ARGS 2) 
(PUT 'IBALP_VAR-SETMOM 'DEFINED-ON-LINE '203) 
(PUT 'IBALP_VAR-SETMOM 'DEFINED-IN-FILE 'REDLOG/IBALP/IBALPQSAT.RED) 
(PUT 'IBALP_VAR-SETMOM 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(PUTC 'IBALP_VAR-SETMOM 'INLINE
      '(LAMBDA (VAR MOM) (SETCAR (CDDDR (CDDDDR (CDDDDR VAR))) MOM))) 
(DE IBALP_VAR-SETQUANT (VAR QUANT)
    (SETCAR (CDDDDR (CDDDDR (CDDDDR VAR))) QUANT)) 
(PUT 'IBALP_VAR-SETQUANT 'NUMBER-OF-ARGS 2) 
(PUT 'IBALP_VAR-SETQUANT 'DEFINED-ON-LINE '208) 
(PUT 'IBALP_VAR-SETQUANT 'DEFINED-IN-FILE 'REDLOG/IBALP/IBALPQSAT.RED) 
(PUT 'IBALP_VAR-SETQUANT 'PROCEDURE_TYPE
     '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(PUTC 'IBALP_VAR-SETQUANT 'INLINE
      '(LAMBDA (VAR QUANT) (SETCAR (CDDDDR (CDDDDR (CDDDDR VAR))) QUANT))) 
(DE IBALP_VAR-SETQLEVEL (VAR QLEVEL)
    (SETCAR (CDR (CDDDDR (CDDDDR (CDDDDR VAR)))) QLEVEL)) 
(PUT 'IBALP_VAR-SETQLEVEL 'NUMBER-OF-ARGS 2) 
(PUT 'IBALP_VAR-SETQLEVEL 'DEFINED-ON-LINE '215) 
(PUT 'IBALP_VAR-SETQLEVEL 'DEFINED-IN-FILE 'REDLOG/IBALP/IBALPQSAT.RED) 
(PUT 'IBALP_VAR-SETQLEVEL 'PROCEDURE_TYPE
     '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(PUTC 'IBALP_VAR-SETQLEVEL 'INLINE
      '(LAMBDA (VAR QLEVEL)
         (SETCAR (CDR (CDDDDR (CDDDDR (CDDDDR VAR)))) QLEVEL))) 
(DE IBALP_VAR-SETFLIP (VAR FLIP)
    (SETCAR (CDDR (CDDDDR (CDDDDR (CDDDDR VAR)))) FLIP)) 
(PUT 'IBALP_VAR-SETFLIP 'NUMBER-OF-ARGS 2) 
(PUT 'IBALP_VAR-SETFLIP 'DEFINED-ON-LINE '220) 
(PUT 'IBALP_VAR-SETFLIP 'DEFINED-IN-FILE 'REDLOG/IBALP/IBALPQSAT.RED) 
(PUT 'IBALP_VAR-SETFLIP 'PROCEDURE_TYPE
     '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(PUTC 'IBALP_VAR-SETFLIP 'INLINE
      '(LAMBDA (VAR FLIP) (SETCAR (CDDR (CDDDDR (CDDDDR (CDDDDR VAR)))) FLIP))) 
(DE IBALP_VAR-GETID (VAR) (CAR VAR)) 
(PUT 'IBALP_VAR-GETID 'NUMBER-OF-ARGS 1) 
(PUT 'IBALP_VAR-GETID 'DEFINED-ON-LINE '225) 
(PUT 'IBALP_VAR-GETID 'DEFINED-IN-FILE 'REDLOG/IBALP/IBALPQSAT.RED) 
(PUT 'IBALP_VAR-GETID 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(PUTC 'IBALP_VAR-GETID 'INLINE '(LAMBDA (VAR) (CAR VAR))) 
(DE IBALP_VAR-GETVAL (VAR) (CADR VAR)) 
(PUT 'IBALP_VAR-GETVAL 'NUMBER-OF-ARGS 1) 
(PUT 'IBALP_VAR-GETVAL 'DEFINED-ON-LINE '230) 
(PUT 'IBALP_VAR-GETVAL 'DEFINED-IN-FILE 'REDLOG/IBALP/IBALPQSAT.RED) 
(PUT 'IBALP_VAR-GETVAL 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(PUTC 'IBALP_VAR-GETVAL 'INLINE '(LAMBDA (VAR) (CADR VAR))) 
(DE IBALP_VAR-GETPOSOCC (VAR) (CADDR VAR)) 
(PUT 'IBALP_VAR-GETPOSOCC 'NUMBER-OF-ARGS 1) 
(PUT 'IBALP_VAR-GETPOSOCC 'DEFINED-ON-LINE '236) 
(PUT 'IBALP_VAR-GETPOSOCC 'DEFINED-IN-FILE 'REDLOG/IBALP/IBALPQSAT.RED) 
(PUT 'IBALP_VAR-GETPOSOCC 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(PUTC 'IBALP_VAR-GETPOSOCC 'INLINE '(LAMBDA (VAR) (CADDR VAR))) 
(DE IBALP_VAR-GETNEGOCC (VAR) (CADDDR VAR)) 
(PUT 'IBALP_VAR-GETNEGOCC 'NUMBER-OF-ARGS 1) 
(PUT 'IBALP_VAR-GETNEGOCC 'DEFINED-ON-LINE '241) 
(PUT 'IBALP_VAR-GETNEGOCC 'DEFINED-IN-FILE 'REDLOG/IBALP/IBALPQSAT.RED) 
(PUT 'IBALP_VAR-GETNEGOCC 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(PUTC 'IBALP_VAR-GETNEGOCC 'INLINE '(LAMBDA (VAR) (CADDDR VAR))) 
(DE IBALP_VAR-GETNUMPOS (VAR) (CAR (CDDDDR VAR))) 
(PUT 'IBALP_VAR-GETNUMPOS 'NUMBER-OF-ARGS 1) 
(PUT 'IBALP_VAR-GETNUMPOS 'DEFINED-ON-LINE '246) 
(PUT 'IBALP_VAR-GETNUMPOS 'DEFINED-IN-FILE 'REDLOG/IBALP/IBALPQSAT.RED) 
(PUT 'IBALP_VAR-GETNUMPOS 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(PUTC 'IBALP_VAR-GETNUMPOS 'INLINE '(LAMBDA (VAR) (CAR (CDDDDR VAR)))) 
(DE IBALP_VAR-GETNUMNEG (VAR) (CADR (CDDDDR VAR))) 
(PUT 'IBALP_VAR-GETNUMNEG 'NUMBER-OF-ARGS 1) 
(PUT 'IBALP_VAR-GETNUMNEG 'DEFINED-ON-LINE '252) 
(PUT 'IBALP_VAR-GETNUMNEG 'DEFINED-IN-FILE 'REDLOG/IBALP/IBALPQSAT.RED) 
(PUT 'IBALP_VAR-GETNUMNEG 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(PUTC 'IBALP_VAR-GETNUMNEG 'INLINE '(LAMBDA (VAR) (CADR (CDDDDR VAR)))) 
(DE IBALP_VAR-GETLEV (VAR) (CADDR (CDDDDR VAR))) 
(PUT 'IBALP_VAR-GETLEV 'NUMBER-OF-ARGS 1) 
(PUT 'IBALP_VAR-GETLEV 'DEFINED-ON-LINE '258) 
(PUT 'IBALP_VAR-GETLEV 'DEFINED-IN-FILE 'REDLOG/IBALP/IBALPQSAT.RED) 
(PUT 'IBALP_VAR-GETLEV 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(PUTC 'IBALP_VAR-GETLEV 'INLINE '(LAMBDA (VAR) (CADDR (CDDDDR VAR)))) 
(DE IBALP_VAR-GETREAS (VAR) (CADDDR (CDDDDR VAR))) 
(PUT 'IBALP_VAR-GETREAS 'NUMBER-OF-ARGS 1) 
(PUT 'IBALP_VAR-GETREAS 'DEFINED-ON-LINE '263) 
(PUT 'IBALP_VAR-GETREAS 'DEFINED-IN-FILE 'REDLOG/IBALP/IBALPQSAT.RED) 
(PUT 'IBALP_VAR-GETREAS 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(PUTC 'IBALP_VAR-GETREAS 'INLINE '(LAMBDA (VAR) (CADDDR (CDDDDR VAR)))) 
(DE IBALP_VAR-GETPOSCC (VAR) (CAR (CDDDDR (CDDDDR VAR)))) 
(PUT 'IBALP_VAR-GETPOSCC 'NUMBER-OF-ARGS 1) 
(PUT 'IBALP_VAR-GETPOSCC 'DEFINED-ON-LINE '269) 
(PUT 'IBALP_VAR-GETPOSCC 'DEFINED-IN-FILE 'REDLOG/IBALP/IBALPQSAT.RED) 
(PUT 'IBALP_VAR-GETPOSCC 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(PUTC 'IBALP_VAR-GETPOSCC 'INLINE '(LAMBDA (VAR) (CAR (CDDDDR (CDDDDR VAR))))) 
(DE IBALP_VAR-GETNEGCC (VAR) (CADR (CDDDDR (CDDDDR VAR)))) 
(PUT 'IBALP_VAR-GETNEGCC 'NUMBER-OF-ARGS 1) 
(PUT 'IBALP_VAR-GETNEGCC 'DEFINED-ON-LINE '275) 
(PUT 'IBALP_VAR-GETNEGCC 'DEFINED-IN-FILE 'REDLOG/IBALP/IBALPQSAT.RED) 
(PUT 'IBALP_VAR-GETNEGCC 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(PUTC 'IBALP_VAR-GETNEGCC 'INLINE '(LAMBDA (VAR) (CADR (CDDDDR (CDDDDR VAR))))) 
(DE IBALP_VAR-GETWC (VAR) (CADDR (CDDDDR (CDDDDR VAR)))) 
(PUT 'IBALP_VAR-GETWC 'NUMBER-OF-ARGS 1) 
(PUT 'IBALP_VAR-GETWC 'DEFINED-ON-LINE '281) 
(PUT 'IBALP_VAR-GETWC 'DEFINED-IN-FILE 'REDLOG/IBALP/IBALPQSAT.RED) 
(PUT 'IBALP_VAR-GETWC 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(PUTC 'IBALP_VAR-GETWC 'INLINE '(LAMBDA (VAR) (CADDR (CDDDDR (CDDDDR VAR))))) 
(DE IBALP_VAR-DELWC (VAR WC)
    (SETCAR (CDDR (CDDDDR (CDDDDR VAR)))
            (LTO_DELQ WC (CADDR (CDDDDR (CDDDDR VAR)))))) 
(PUT 'IBALP_VAR-DELWC 'NUMBER-OF-ARGS 2) 
(PUT 'IBALP_VAR-DELWC 'DEFINED-ON-LINE '285) 
(PUT 'IBALP_VAR-DELWC 'DEFINED-IN-FILE 'REDLOG/IBALP/IBALPQSAT.RED) 
(PUT 'IBALP_VAR-DELWC 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(PUTC 'IBALP_VAR-DELWC 'INLINE
      '(LAMBDA (VAR WC)
         (SETCAR (CDDR (CDDDDR (CDDDDR VAR)))
                 (LTO_DELQ WC (CADDR (CDDDDR (CDDDDR VAR))))))) 
(DE IBALP_VAR-DELALLWC (VAR) (SETCAR (CDDR (CDDDDR (CDDDDR VAR))) NIL)) 
(PUT 'IBALP_VAR-DELALLWC 'NUMBER-OF-ARGS 1) 
(PUT 'IBALP_VAR-DELALLWC 'DEFINED-ON-LINE '290) 
(PUT 'IBALP_VAR-DELALLWC 'DEFINED-IN-FILE 'REDLOG/IBALP/IBALPQSAT.RED) 
(PUT 'IBALP_VAR-DELALLWC 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(PUTC 'IBALP_VAR-DELALLWC 'INLINE
      '(LAMBDA (VAR) (SETCAR (CDDR (CDDDDR (CDDDDR VAR))) NIL))) 
(DE IBALP_VAR-GETMOM (VAR) (CADDDR (CDDDDR (CDDDDR VAR)))) 
(PUT 'IBALP_VAR-GETMOM 'NUMBER-OF-ARGS 1) 
(PUT 'IBALP_VAR-GETMOM 'DEFINED-ON-LINE '295) 
(PUT 'IBALP_VAR-GETMOM 'DEFINED-IN-FILE 'REDLOG/IBALP/IBALPQSAT.RED) 
(PUT 'IBALP_VAR-GETMOM 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(PUTC 'IBALP_VAR-GETMOM 'INLINE '(LAMBDA (VAR) (CADDDR (CDDDDR (CDDDDR VAR))))) 
(DE IBALP_VAR-GETQUANT (VAR) (CAR (CDDDDR (CDDDDR (CDDDDR VAR))))) 
(PUT 'IBALP_VAR-GETQUANT 'NUMBER-OF-ARGS 1) 
(PUT 'IBALP_VAR-GETQUANT 'DEFINED-ON-LINE '299) 
(PUT 'IBALP_VAR-GETQUANT 'DEFINED-IN-FILE 'REDLOG/IBALP/IBALPQSAT.RED) 
(PUT 'IBALP_VAR-GETQUANT 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(PUTC 'IBALP_VAR-GETQUANT 'INLINE
      '(LAMBDA (VAR) (CAR (CDDDDR (CDDDDR (CDDDDR VAR)))))) 
(DE IBALP_VAR-ISEX (VAR) (EQ (CAR (CDDDDR (CDDDDR (CDDDDR VAR)))) 'EX)) 
(PUT 'IBALP_VAR-ISEX 'NUMBER-OF-ARGS 1) 
(PUT 'IBALP_VAR-ISEX 'DEFINED-ON-LINE '306) 
(PUT 'IBALP_VAR-ISEX 'DEFINED-IN-FILE 'REDLOG/IBALP/IBALPQSAT.RED) 
(PUT 'IBALP_VAR-ISEX 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(PUTC 'IBALP_VAR-ISEX 'INLINE
      '(LAMBDA (VAR) (EQ (CAR (CDDDDR (CDDDDR (CDDDDR VAR)))) 'EX))) 
(DE IBALP_VAR-ISUNI (VAR) (EQ (CAR (CDDDDR (CDDDDR (CDDDDR VAR)))) 'ALL)) 
(PUT 'IBALP_VAR-ISUNI 'NUMBER-OF-ARGS 1) 
(PUT 'IBALP_VAR-ISUNI 'DEFINED-ON-LINE '311) 
(PUT 'IBALP_VAR-ISUNI 'DEFINED-IN-FILE 'REDLOG/IBALP/IBALPQSAT.RED) 
(PUT 'IBALP_VAR-ISUNI 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(PUTC 'IBALP_VAR-ISUNI 'INLINE
      '(LAMBDA (VAR) (EQ (CAR (CDDDDR (CDDDDR (CDDDDR VAR)))) 'ALL))) 
(DE IBALP_VAR-GETQLEVEL (VAR) (CADR (CDDDDR (CDDDDR (CDDDDR VAR))))) 
(PUT 'IBALP_VAR-GETQLEVEL 'NUMBER-OF-ARGS 1) 
(PUT 'IBALP_VAR-GETQLEVEL 'DEFINED-ON-LINE '316) 
(PUT 'IBALP_VAR-GETQLEVEL 'DEFINED-IN-FILE 'REDLOG/IBALP/IBALPQSAT.RED) 
(PUT 'IBALP_VAR-GETQLEVEL 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(PUTC 'IBALP_VAR-GETQLEVEL 'INLINE
      '(LAMBDA (VAR) (CADR (CDDDDR (CDDDDR (CDDDDR VAR)))))) 
(DE IBALP_VAR-GETFLIP (VAR) (CADDR (CDDDDR (CDDDDR (CDDDDR VAR))))) 
(PUT 'IBALP_VAR-GETFLIP 'NUMBER-OF-ARGS 1) 
(PUT 'IBALP_VAR-GETFLIP 'DEFINED-ON-LINE '321) 
(PUT 'IBALP_VAR-GETFLIP 'DEFINED-IN-FILE 'REDLOG/IBALP/IBALPQSAT.RED) 
(PUT 'IBALP_VAR-GETFLIP 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(PUTC 'IBALP_VAR-GETFLIP 'INLINE
      '(LAMBDA (VAR) (CADDR (CDDDDR (CDDDDR (CDDDDR VAR)))))) 
(DE IBALP_CLAUSE-NEW NIL (LIST NIL NIL 0 0 NIL NIL NIL)) 
(PUT 'IBALP_CLAUSE-NEW 'NUMBER-OF-ARGS 0) 
(PUT 'IBALP_CLAUSE-NEW 'DEFINED-ON-LINE '327) 
(PUT 'IBALP_CLAUSE-NEW 'DEFINED-IN-FILE 'REDLOG/IBALP/IBALPQSAT.RED) 
(PUT 'IBALP_CLAUSE-NEW 'PROCEDURE_TYPE '(ARROW UNIT GENERAL)) 
(PUTC 'IBALP_CLAUSE-NEW 'INLINE '(LAMBDA () (LIST NIL NIL 0 0 NIL NIL NIL))) 
(DE IBALP_CLAUSE-SETSAT (CLAUSE SAT)
    (SETCAR (CDDDDR CLAUSE) (CONS SAT (CAR (CDDDDR CLAUSE))))) 
(PUT 'IBALP_CLAUSE-SETSAT 'NUMBER-OF-ARGS 2) 
(PUT 'IBALP_CLAUSE-SETSAT 'DEFINED-ON-LINE '338) 
(PUT 'IBALP_CLAUSE-SETSAT 'DEFINED-IN-FILE 'REDLOG/IBALP/IBALPQSAT.RED) 
(PUT 'IBALP_CLAUSE-SETSAT 'PROCEDURE_TYPE
     '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(PUTC 'IBALP_CLAUSE-SETSAT 'INLINE
      '(LAMBDA (CLAUSE SAT)
         (SETCAR (CDDDDR CLAUSE) (CONS SAT (CAR (CDDDDR CLAUSE)))))) 
(DE IBALP_CLAUSE-DELALLSAT (CLAUSE) (SETCAR (CDDDDR CLAUSE) NIL)) 
(PUT 'IBALP_CLAUSE-DELALLSAT 'NUMBER-OF-ARGS 1) 
(PUT 'IBALP_CLAUSE-DELALLSAT 'DEFINED-ON-LINE '343) 
(PUT 'IBALP_CLAUSE-DELALLSAT 'DEFINED-IN-FILE 'REDLOG/IBALP/IBALPQSAT.RED) 
(PUT 'IBALP_CLAUSE-DELALLSAT 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(PUTC 'IBALP_CLAUSE-DELALLSAT 'INLINE
      '(LAMBDA (CLAUSE) (SETCAR (CDDDDR CLAUSE) NIL))) 
(DE IBALP_CLAUSE-SETPOSLIT (CLAUSE VAR) (SETCAR CLAUSE (CONS VAR (CAR CLAUSE)))) 
(PUT 'IBALP_CLAUSE-SETPOSLIT 'NUMBER-OF-ARGS 2) 
(PUT 'IBALP_CLAUSE-SETPOSLIT 'DEFINED-ON-LINE '348) 
(PUT 'IBALP_CLAUSE-SETPOSLIT 'DEFINED-IN-FILE 'REDLOG/IBALP/IBALPQSAT.RED) 
(PUT 'IBALP_CLAUSE-SETPOSLIT 'PROCEDURE_TYPE
     '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(PUTC 'IBALP_CLAUSE-SETPOSLIT 'INLINE
      '(LAMBDA (CLAUSE VAR) (SETCAR CLAUSE (CONS VAR (CAR CLAUSE))))) 
(DE IBALP_CLAUSE-SETNEGLIT (CLAUSE VAR)
    (SETCAR (CDR CLAUSE) (CONS VAR (CADR CLAUSE)))) 
(PUT 'IBALP_CLAUSE-SETNEGLIT 'NUMBER-OF-ARGS 2) 
(PUT 'IBALP_CLAUSE-SETNEGLIT 'DEFINED-ON-LINE '353) 
(PUT 'IBALP_CLAUSE-SETNEGLIT 'DEFINED-IN-FILE 'REDLOG/IBALP/IBALPQSAT.RED) 
(PUT 'IBALP_CLAUSE-SETNEGLIT 'PROCEDURE_TYPE
     '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(PUTC 'IBALP_CLAUSE-SETNEGLIT 'INLINE
      '(LAMBDA (CLAUSE VAR) (SETCAR (CDR CLAUSE) (CONS VAR (CADR CLAUSE))))) 
(DE IBALP_CLAUSE-SETPOSLITABS (CLAUSE VAR) (SETCAR CLAUSE VAR)) 
(PUT 'IBALP_CLAUSE-SETPOSLITABS 'NUMBER-OF-ARGS 2) 
(PUT 'IBALP_CLAUSE-SETPOSLITABS 'DEFINED-ON-LINE '358) 
(PUT 'IBALP_CLAUSE-SETPOSLITABS 'DEFINED-IN-FILE 'REDLOG/IBALP/IBALPQSAT.RED) 
(PUT 'IBALP_CLAUSE-SETPOSLITABS 'PROCEDURE_TYPE
     '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(PUTC 'IBALP_CLAUSE-SETPOSLITABS 'INLINE
      '(LAMBDA (CLAUSE VAR) (SETCAR CLAUSE VAR))) 
(DE IBALP_CLAUSE-SETNEGLITABS (CLAUSE VAR) (SETCAR (CDR CLAUSE) VAR)) 
(PUT 'IBALP_CLAUSE-SETNEGLITABS 'NUMBER-OF-ARGS 2) 
(PUT 'IBALP_CLAUSE-SETNEGLITABS 'DEFINED-ON-LINE '363) 
(PUT 'IBALP_CLAUSE-SETNEGLITABS 'DEFINED-IN-FILE 'REDLOG/IBALP/IBALPQSAT.RED) 
(PUT 'IBALP_CLAUSE-SETNEGLITABS 'PROCEDURE_TYPE
     '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(PUTC 'IBALP_CLAUSE-SETNEGLITABS 'INLINE
      '(LAMBDA (CLAUSE VAR) (SETCAR (CDR CLAUSE) VAR))) 
(DE IBALP_CLAUSE-SETACTPOS (CLAUSE ACTPOS) (SETCAR (CDDR CLAUSE) ACTPOS)) 
(PUT 'IBALP_CLAUSE-SETACTPOS 'NUMBER-OF-ARGS 2) 
(PUT 'IBALP_CLAUSE-SETACTPOS 'DEFINED-ON-LINE '368) 
(PUT 'IBALP_CLAUSE-SETACTPOS 'DEFINED-IN-FILE 'REDLOG/IBALP/IBALPQSAT.RED) 
(PUT 'IBALP_CLAUSE-SETACTPOS 'PROCEDURE_TYPE
     '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(PUTC 'IBALP_CLAUSE-SETACTPOS 'INLINE
      '(LAMBDA (CLAUSE ACTPOS) (SETCAR (CDDR CLAUSE) ACTPOS))) 
(DE IBALP_CLAUSE-SETACTNEG (CLAUSE ACTNEG) (SETCAR (CDDDR CLAUSE) ACTNEG)) 
(PUT 'IBALP_CLAUSE-SETACTNEG 'NUMBER-OF-ARGS 2) 
(PUT 'IBALP_CLAUSE-SETACTNEG 'DEFINED-ON-LINE '374) 
(PUT 'IBALP_CLAUSE-SETACTNEG 'DEFINED-IN-FILE 'REDLOG/IBALP/IBALPQSAT.RED) 
(PUT 'IBALP_CLAUSE-SETACTNEG 'PROCEDURE_TYPE
     '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(PUTC 'IBALP_CLAUSE-SETACTNEG 'INLINE
      '(LAMBDA (CLAUSE ACTNEG) (SETCAR (CDDDR CLAUSE) ACTNEG))) 
(DE IBALP_CLAUSE-SETCOUNT (CLAUSE COUNT) (SETCAR (CDR (CDDDDR CLAUSE)) COUNT)) 
(PUT 'IBALP_CLAUSE-SETCOUNT 'NUMBER-OF-ARGS 2) 
(PUT 'IBALP_CLAUSE-SETCOUNT 'DEFINED-ON-LINE '380) 
(PUT 'IBALP_CLAUSE-SETCOUNT 'DEFINED-IN-FILE 'REDLOG/IBALP/IBALPQSAT.RED) 
(PUT 'IBALP_CLAUSE-SETCOUNT 'PROCEDURE_TYPE
     '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(PUTC 'IBALP_CLAUSE-SETCOUNT 'INLINE
      '(LAMBDA (CLAUSE COUNT) (SETCAR (CDR (CDDDDR CLAUSE)) COUNT))) 
(DE IBALP_CLAUSE-SETWL (CLAUSE WL)
    (SETCAR (CDDR (CDDDDR CLAUSE)) (CONS WL (CADDR (CDDDDR CLAUSE))))) 
(PUT 'IBALP_CLAUSE-SETWL 'NUMBER-OF-ARGS 2) 
(PUT 'IBALP_CLAUSE-SETWL 'DEFINED-ON-LINE '385) 
(PUT 'IBALP_CLAUSE-SETWL 'DEFINED-IN-FILE 'REDLOG/IBALP/IBALPQSAT.RED) 
(PUT 'IBALP_CLAUSE-SETWL 'PROCEDURE_TYPE
     '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(PUTC 'IBALP_CLAUSE-SETWL 'INLINE
      '(LAMBDA (CLAUSE WL)
         (SETCAR (CDDR (CDDDDR CLAUSE)) (CONS WL (CADDR (CDDDDR CLAUSE)))))) 
(DE IBALP_CLAUSE-DELALLWL (CLAUSE) (SETCAR (CDDR (CDDDDR CLAUSE)) NIL)) 
(PUT 'IBALP_CLAUSE-DELALLWL 'NUMBER-OF-ARGS 1) 
(PUT 'IBALP_CLAUSE-DELALLWL 'DEFINED-ON-LINE '390) 
(PUT 'IBALP_CLAUSE-DELALLWL 'DEFINED-IN-FILE 'REDLOG/IBALP/IBALPQSAT.RED) 
(PUT 'IBALP_CLAUSE-DELALLWL 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(PUTC 'IBALP_CLAUSE-DELALLWL 'INLINE
      '(LAMBDA (CLAUSE) (SETCAR (CDDR (CDDDDR CLAUSE)) NIL))) 
(DE IBALP_CLAUSE-DELWL (CLAUSE WL)
    (SETCAR (CDDR (CDDDDR CLAUSE)) (LTO_DELQ WL (CADDR (CDDDDR CLAUSE))))) 
(PUT 'IBALP_CLAUSE-DELWL 'NUMBER-OF-ARGS 2) 
(PUT 'IBALP_CLAUSE-DELWL 'DEFINED-ON-LINE '395) 
(PUT 'IBALP_CLAUSE-DELWL 'DEFINED-IN-FILE 'REDLOG/IBALP/IBALPQSAT.RED) 
(PUT 'IBALP_CLAUSE-DELWL 'PROCEDURE_TYPE
     '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(PUTC 'IBALP_CLAUSE-DELWL 'INLINE
      '(LAMBDA (CLAUSE WL)
         (SETCAR (CDDR (CDDDDR CLAUSE)) (LTO_DELQ WL (CADDR (CDDDDR CLAUSE)))))) 
(DE IBALP_CLAUSE-GETPOSLIT (CLAUSE) (CAR CLAUSE)) 
(PUT 'IBALP_CLAUSE-GETPOSLIT 'NUMBER-OF-ARGS 1) 
(PUT 'IBALP_CLAUSE-GETPOSLIT 'DEFINED-ON-LINE '400) 
(PUT 'IBALP_CLAUSE-GETPOSLIT 'DEFINED-IN-FILE 'REDLOG/IBALP/IBALPQSAT.RED) 
(PUT 'IBALP_CLAUSE-GETPOSLIT 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(PUTC 'IBALP_CLAUSE-GETPOSLIT 'INLINE '(LAMBDA (CLAUSE) (CAR CLAUSE))) 
(DE IBALP_CLAUSE-GETNEGLIT (CLAUSE) (CADR CLAUSE)) 
(PUT 'IBALP_CLAUSE-GETNEGLIT 'NUMBER-OF-ARGS 1) 
(PUT 'IBALP_CLAUSE-GETNEGLIT 'DEFINED-ON-LINE '406) 
(PUT 'IBALP_CLAUSE-GETNEGLIT 'DEFINED-IN-FILE 'REDLOG/IBALP/IBALPQSAT.RED) 
(PUT 'IBALP_CLAUSE-GETNEGLIT 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(PUTC 'IBALP_CLAUSE-GETNEGLIT 'INLINE '(LAMBDA (CLAUSE) (CADR CLAUSE))) 
(DE IBALP_CLAUSE-GETACTPOS (CLAUSE) (CADDR CLAUSE)) 
(PUT 'IBALP_CLAUSE-GETACTPOS 'NUMBER-OF-ARGS 1) 
(PUT 'IBALP_CLAUSE-GETACTPOS 'DEFINED-ON-LINE '412) 
(PUT 'IBALP_CLAUSE-GETACTPOS 'DEFINED-IN-FILE 'REDLOG/IBALP/IBALPQSAT.RED) 
(PUT 'IBALP_CLAUSE-GETACTPOS 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(PUTC 'IBALP_CLAUSE-GETACTPOS 'INLINE '(LAMBDA (CLAUSE) (CADDR CLAUSE))) 
(DE IBALP_CLAUSE-GETACTNEG (CLAUSE) (CADDDR CLAUSE)) 
(PUT 'IBALP_CLAUSE-GETACTNEG 'NUMBER-OF-ARGS 1) 
(PUT 'IBALP_CLAUSE-GETACTNEG 'DEFINED-ON-LINE '417) 
(PUT 'IBALP_CLAUSE-GETACTNEG 'DEFINED-IN-FILE 'REDLOG/IBALP/IBALPQSAT.RED) 
(PUT 'IBALP_CLAUSE-GETACTNEG 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(PUTC 'IBALP_CLAUSE-GETACTNEG 'INLINE '(LAMBDA (CLAUSE) (CADDDR CLAUSE))) 
(DE IBALP_CLAUSE-GETSAT (CLAUSE) (CAR (CDDDDR CLAUSE))) 
(PUT 'IBALP_CLAUSE-GETSAT 'NUMBER-OF-ARGS 1) 
(PUT 'IBALP_CLAUSE-GETSAT 'DEFINED-ON-LINE '422) 
(PUT 'IBALP_CLAUSE-GETSAT 'DEFINED-IN-FILE 'REDLOG/IBALP/IBALPQSAT.RED) 
(PUT 'IBALP_CLAUSE-GETSAT 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(PUTC 'IBALP_CLAUSE-GETSAT 'INLINE '(LAMBDA (CLAUSE) (CAR (CDDDDR CLAUSE)))) 
(DE IBALP_CLAUSE-DELSAT (CLAUSE SAT)
    (SETCAR (CDDDDR CLAUSE) (LTO_DELQ SAT (CAR (CDDDDR CLAUSE))))) 
(PUT 'IBALP_CLAUSE-DELSAT 'NUMBER-OF-ARGS 2) 
(PUT 'IBALP_CLAUSE-DELSAT 'DEFINED-ON-LINE '427) 
(PUT 'IBALP_CLAUSE-DELSAT 'DEFINED-IN-FILE 'REDLOG/IBALP/IBALPQSAT.RED) 
(PUT 'IBALP_CLAUSE-DELSAT 'PROCEDURE_TYPE
     '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(PUTC 'IBALP_CLAUSE-DELSAT 'INLINE
      '(LAMBDA (CLAUSE SAT)
         (SETCAR (CDDDDR CLAUSE) (LTO_DELQ SAT (CAR (CDDDDR CLAUSE)))))) 
(DE IBALP_CLAUSE-GETCOUNT (CLAUSE) (CADR (CDDDDR CLAUSE))) 
(PUT 'IBALP_CLAUSE-GETCOUNT 'NUMBER-OF-ARGS 1) 
(PUT 'IBALP_CLAUSE-GETCOUNT 'DEFINED-ON-LINE '432) 
(PUT 'IBALP_CLAUSE-GETCOUNT 'DEFINED-IN-FILE 'REDLOG/IBALP/IBALPQSAT.RED) 
(PUT 'IBALP_CLAUSE-GETCOUNT 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(PUTC 'IBALP_CLAUSE-GETCOUNT 'INLINE '(LAMBDA (CLAUSE) (CADR (CDDDDR CLAUSE)))) 
(DE IBALP_CLAUSE-GETWL (CLAUSE) (CADDR (CDDDDR CLAUSE))) 
(PUT 'IBALP_CLAUSE-GETWL 'NUMBER-OF-ARGS 1) 
(PUT 'IBALP_CLAUSE-GETWL 'DEFINED-ON-LINE '437) 
(PUT 'IBALP_CLAUSE-GETWL 'DEFINED-IN-FILE 'REDLOG/IBALP/IBALPQSAT.RED) 
(PUT 'IBALP_CLAUSE-GETWL 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(PUTC 'IBALP_CLAUSE-GETWL 'INLINE '(LAMBDA (CLAUSE) (CADDR (CDDDDR CLAUSE)))) 
(PUT 'IBALP_PRINTCLAUSE 'NUMBER-OF-ARGS 1) 
(PUT 'IBALP_PRINTCLAUSE 'DEFINED-ON-LINE '783) 
(PUT 'IBALP_PRINTCLAUSE 'DEFINED-IN-FILE 'REDLOG/IBALP/IBALPQSAT.RED) 
(PUT 'IBALP_PRINTCLAUSE 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE IBALP_PRINTCLAUSE (CLAUSE)
    (PROG (POSLIT NEGLIT SAT)
      (PROG (V)
        (SETQ V (CAR CLAUSE))
       LAB
        (COND ((NULL V) (RETURN NIL)))
        ((LAMBDA (V) (SETQ POSLIT (CONS (CAR V) POSLIT))) (CAR V))
        (SETQ V (CDR V))
        (GO LAB))
      (PROG (V)
        (SETQ V (CADR CLAUSE))
       LAB
        (COND ((NULL V) (RETURN NIL)))
        ((LAMBDA (V) (SETQ NEGLIT (CONS (CAR V) NEGLIT))) (CAR V))
        (SETQ V (CDR V))
        (GO LAB))
      (PROG (V)
        (SETQ V (CAR (CDDDDR CLAUSE)))
       LAB
        (COND ((NULL V) (RETURN NIL)))
        ((LAMBDA (V) (SETQ SAT (CONS V SAT))) (CAR V))
        (SETQ V (CDR V))
        (GO LAB))
      (IOTO_TPRIN2T (LIST "Clause " POSLIT " " NEGLIT " " "SAT: " SAT)))) 
(PUT 'IBALP_PRINTCLAUSES 'NUMBER-OF-ARGS 1) 
(PUT 'IBALP_PRINTCLAUSES 'DEFINED-ON-LINE '795) 
(PUT 'IBALP_PRINTCLAUSES 'DEFINED-IN-FILE 'REDLOG/IBALP/IBALPQSAT.RED) 
(PUT 'IBALP_PRINTCLAUSES 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE IBALP_PRINTCLAUSES (CLAUSEL)
    (PROG (C)
      (SETQ C CLAUSEL)
     LAB
      (COND ((NULL C) (RETURN NIL)))
      ((LAMBDA (C) (IBALP_PRINTCLAUSE C)) (CAR C))
      (SETQ C (CDR C))
      (GO LAB))) 
(PUT 'IBALP_PRINTVARAL 'NUMBER-OF-ARGS 1) 
(PUT 'IBALP_PRINTVARAL 'DEFINED-ON-LINE '800) 
(PUT 'IBALP_PRINTVARAL 'DEFINED-IN-FILE 'REDLOG/IBALP/IBALPQSAT.RED) 
(PUT 'IBALP_PRINTVARAL 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE IBALP_PRINTVARAL (VARAL)
    (PROG (V)
      (SETQ V VARAL)
     LAB
      (COND ((NULL V) (RETURN NIL)))
      ((LAMBDA (V)
         (IOTO_TPRIN2T
          (LIST (CAR (CDR V)) " " (CADR (CDR V)) " "
                (CAR (CDDDDR (CDDDDR (CDDDDR (CDR V))))))))
       (CAR V))
      (SETQ V (CDR V))
      (GO LAB))) 
(PUT 'IBALP_QSAT-DIMACS 'NUMBER-OF-ARGS 1) 
(PUT 'IBALP_QSAT-DIMACS 'DEFINED-ON-LINE '805) 
(PUT 'IBALP_QSAT-DIMACS 'DEFINED-IN-FILE 'REDLOG/IBALP/IBALPQSAT.RED) 
(PUT 'IBALP_QSAT-DIMACS 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE IBALP_QSAT-DIMACS (INPUT)
    (PROG (PAIR CLAUSEL VARAL)
      (COND
       ((NULL IBALP_QSATOPTIONS*)
        (IBALP_QSAT-SETOPTIONL (LIST 'ZMOM 5 1 1.2 200))))
      (SETQ PAIR (IBALP_QSAT-READDIMACS2 INPUT))
      (SETQ CLAUSEL (CADR PAIR))
      (SETQ VARAL (CDDR PAIR))
      (RETURN
       (COND ((CAR PAIR) (CAR (IBALP_QSAT-CDCL CLAUSEL VARAL NIL T)))
             (T (IBALP_START-SAT CLAUSEL VARAL)))))) 
(PUT 'IBALP_QSAT-READDIMACS 'NUMBER-OF-ARGS 1) 
(PUT 'IBALP_QSAT-READDIMACS 'DEFINED-ON-LINE '819) 
(PUT 'IBALP_QSAT-READDIMACS 'DEFINED-IN-FILE 'REDLOG/IBALP/IBALPQSAT.RED) 
(PUT 'IBALP_QSAT-READDIMACS 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE IBALP_QSAT-READDIMACS (INPUT)
    (PROG (PAIR CLAUSEL VARAL)
      (SETQ PAIR (IBALP_QSAT-READDIMACS2 INPUT))
      (SETQ CLAUSEL (CADR PAIR))
      (SETQ VARAL (CDDR PAIR))
      (RETURN (IBALP_CONVCNF CLAUSEL VARAL (CAR PAIR))))) 
(PUT 'IBALP_QSAT 'NUMBER-OF-ARGS 1) 
(PUT 'IBALP_QSAT 'DEFINED-ON-LINE '830) 
(PUT 'IBALP_QSAT 'DEFINED-IN-FILE 'REDLOG/IBALP/IBALPQSAT.RED) 
(PUT 'IBALP_QSAT 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE IBALP_QSAT (F)
    (PROG (PAIR CLAUSEL VARAL READFORM QSAT PQSAT)
      (COND
       ((NULL IBALP_QSATOPTIONS*)
        (IBALP_QSAT-SETOPTIONL (LIST 'ZMOM 5 1 1.2 200))))
      (SETQ QSAT (CL_BVARL F))
      (SETQ PQSAT (CL_FVARL F))
      (SETQ READFORM (COND (QSAT (CL_MATRIX (CL_PNF F))) (T F)))
      (COND
       ((NOT (IBALP_ISCNF READFORM))
        (PROGN
         (COND (*RLVERBOSE (IOTO_TPRIN2T "Formula was not in CNF. Using QE")))
         (RETURN (CL_QE F NIL)))))
      (SETQ PAIR (IBALP_READFORM READFORM))
      (SETQ CLAUSEL (CAR PAIR))
      (SETQ VARAL (CDR PAIR))
      (COND ((NULL CLAUSEL) (RETURN 'TRUE)))
      (COND ((IBALP_EMPTYCLAUSEP (CAR CLAUSEL)) (RETURN 'FALSE)))
      (COND
       ((AND QSAT (NULL PQSAT)) (RETURN (IBALP_START-QSAT CLAUSEL VARAL F)))
       ((AND QSAT PQSAT) (RETURN (IBALP_START-PQSAT CLAUSEL VARAL F PQSAT)))
       (T (RETURN (IBALP_START-SAT CLAUSEL VARAL)))))) 
(PUT 'IBALP_START-SAT 'NUMBER-OF-ARGS 2) 
(PUT 'IBALP_START-SAT 'DEFINED-ON-LINE '860) 
(PUT 'IBALP_START-SAT 'DEFINED-IN-FILE 'REDLOG/IBALP/IBALPQSAT.RED) 
(PUT 'IBALP_START-SAT 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE IBALP_START-SAT (CLAUSEL VARAL)
    (PROG (RESSTART FIRSTVAL INC HEUR)
      (COND (*RLVERBOSE (IOTO_TPRIN2T (LIST "Starting SAT Algorithm"))))
      (PROG (V)
        (SETQ V VARAL)
       LAB
        (COND ((NULL V) (RETURN NIL)))
        ((LAMBDA (V)
           (SETCAR (CDDDR (CDDDDR (CDDDDR (CDR V)))) (IBALP_CALCMOM (CDR V))))
         (CAR V))
        (SETQ V (CDR V))
        (GO LAB))
      (SETQ RESSTART (LTO_CATSOC 'RES_START IBALP_QSATOPTIONS*))
      (SETQ FIRSTVAL (LTO_CATSOC 'FIRST_VAL IBALP_QSATOPTIONS*))
      (SETQ INC (LTO_CATSOC 'RES_INC IBALP_QSATOPTIONS*))
      (SETQ HEUR (LTO_CATSOC 'HEURISTIC IBALP_QSATOPTIONS*))
      (RETURN (IBALP_CDCL CLAUSEL VARAL RESSTART FIRSTVAL 1 INC HEUR)))) 
(PUT 'IBALP_START-QSAT 'NUMBER-OF-ARGS 3) 
(PUT 'IBALP_START-QSAT 'DEFINED-ON-LINE '876) 
(PUT 'IBALP_START-QSAT 'DEFINED-IN-FILE 'REDLOG/IBALP/IBALPQSAT.RED) 
(PUT 'IBALP_START-QSAT 'PROCEDURE_TYPE
     '(ARROW (TIMES GENERAL GENERAL GENERAL) GENERAL)) 
(DE IBALP_START-QSAT (CLAUSEL VARAL F)
    (PROG (PAIR)
      (COND (*RLVERBOSE (IOTO_TPRIN2T (LIST "Starting QSAT Algorithm"))))
      (SETQ PAIR (IBALP_READQUANTAL (CL_PNF F) VARAL))
      (SETQ VARAL (CDR PAIR))
      (COND
       ((AND (EQN (CAR PAIR) 1)
             (EQ (CAR (CDDDDR (CDDDDR (CDDDDR (CDAR VARAL))))) 'EX))
        (RETURN (IBALP_START-SAT CLAUSEL VARAL)))
       (T (RETURN (CAR (IBALP_QSAT-CDCL CLAUSEL VARAL NIL T))))))) 
(PUT 'IBALP_START-PQSAT 'NUMBER-OF-ARGS 4) 
(PUT 'IBALP_START-PQSAT 'DEFINED-ON-LINE '891) 
(PUT 'IBALP_START-PQSAT 'DEFINED-IN-FILE 'REDLOG/IBALP/IBALPQSAT.RED) 
(PUT 'IBALP_START-PQSAT 'PROCEDURE_TYPE
     '(ARROW (TIMES GENERAL GENERAL GENERAL GENERAL) GENERAL)) 
(DE IBALP_START-PQSAT (CLAUSEL VARAL F PQSAT)
    (PROG (PAIR PSAT)
      (COND
       (*RLVERBOSE
        (IOTO_TPRIN2T
         (LIST "Starting PQSAT Algorithm with " (LENGTH PQSAT)
               " free variables..."))))
      (SETQ PAIR (IBALP_READQUANTAL (CL_PNF F) VARAL))
      (SETQ VARAL (CDR PAIR))
      (SETQ PAIR (IBALP_SPLITVARS PQSAT VARAL))
      (SETQ VARAL (CAR PAIR))
      (SETQ PQSAT (CDR PAIR))
      (SETQ PSAT (IBALP_PSATP VARAL))
      (COND ((AND *RLVERBOSE PSAT) (IOTO_TPRIN2T (LIST "**PSAT Problem"))))
      (SETQ DONEL* NIL)
      (SETQ NUMCDCL* 0)
      (SETQ NUMLOCS* 0)
      (COND (NIL (RETURN (CL_QE F NIL)))
            (T
             (PROGN
              (SETQ VARAL (CDR (IBALP_READQUANTAL (CL_PNF F) VARAL)))
              (SETQ PAIR (IBALP_QSAT-PAR PQSAT CLAUSEL VARAL NIL PSAT))
              (COND
               (*RLVERBOSE
                (PROGN
                 (IOTO_TPRIN2T (LIST "Runs of CDCL: " NUMCDCL*))
                 (IOTO_TPRIN2T (LIST "Local Search Successes: " NUMLOCS*))
                 NIL)))
              (RETURN (IBALP_EXRES2 (CAR PAIR) PQSAT))))))) 
(PUT 'IBALP_CDCL 'NUMBER-OF-ARGS 7) 
(PUT 'IBALP_CDCL 'DEFINED-ON-LINE '925) 
(PUT 'IBALP_CDCL 'DEFINED-IN-FILE 'REDLOG/IBALP/IBALPQSAT.RED) 
(PUT 'IBALP_CDCL 'PROCEDURE_TYPE
     '(ARROW (TIMES GENERAL GENERAL GENERAL GENERAL GENERAL GENERAL GENERAL)
       GENERAL)) 
(DE IBALP_CDCL (CLAUSEL VARAL C SETVAL RESCOUNT INC HEUR)
    (PROG (RES FIN PAIR EC LV UPL LEVEL COUNT)
      (SETQ LEVEL 0)
      (SETQ COUNT 0)
      (SETQ PAIR (IBALP_PREPROCESS CLAUSEL VARAL))
      (SETQ CLAUSEL (CAR PAIR))
      (SETQ VARAL (CDR PAIR))
      (COND ((NULL CLAUSEL) (RETURN (LIST 'TRUE))))
      (SETQ UPL (IBALP_INITWL CLAUSEL))
      (PROG ()
       WHILELABEL
        (COND ((NOT (NULL FIN)) (RETURN NIL)))
        (PROGN
         (SETQ EC (IBALP_CEC CLAUSEL))
         (COND
          ((NULL EC)
           (PROGN
            (SETQ UPL (IBALP_GETUPL CLAUSEL))
            (SETQ PAIR (IBALP_UNITPROP UPL CLAUSEL LEVEL))
            (SETQ EC (CAR PAIR))
            (SETQ LV (CDR PAIR))
            NIL)))
         (COND
          (EC
           (PROGN
            (COND ((EQN LEVEL 0) (PROGN (SETQ FIN T) (SETQ RES (LIST 'FALSE))))
                  (T
                   (PROGN
                    (IBALP_RECALCV VARAL)
                    (SETQ COUNT (PLUS COUNT 1))
                    (IBALP_DIMCOUNT CLAUSEL)
                    (SETQ PAIR (IBALP_ANALCONF EC LEVEL LV CLAUSEL VARAL))
                    (SETQ LEVEL (CAR PAIR))
                    (SETQ CLAUSEL (CDR PAIR))
                    (SETQ PAIR (IBALP_DOSIMPL CLAUSEL VARAL))
                    (SETQ CLAUSEL (CAR PAIR))
                    (SETQ VARAL (CDR PAIR)))))))
          (T
           (PROGN
            (COND
             ((OR (IBALP_ISTOTAL VARAL) (IBALP_CSAT CLAUSEL))
              (PROGN (SETQ FIN T) (SETQ RES (LIST 'TRUE))))
             (T
              (PROGN
               (SETQ PAIR (IBALP_GETVAR VARAL CLAUSEL HEUR))
               (SETQ LEVEL (PLUS LEVEL 1))
               (COND ((EQUAL HEUR 'ACTIVITY) (SETQ SETVAL (CDR PAIR))))
               (IBALP_VAR-SET (CAR PAIR) SETVAL LEVEL NIL)
               (COND
                ((GREATERP COUNT C)
                 (PROGN
                  (SETQ RES
                          (IBALP_RESTART CLAUSEL VARAL C RESCOUNT SETVAL INC
                           HEUR))
                  (SETQ FIN T)))))))))))
        (GO WHILELABEL))
      (RETURN RES))) 
(PUT 'IBALP_PREPROCESS 'NUMBER-OF-ARGS 2) 
(PUT 'IBALP_PREPROCESS 'DEFINED-ON-LINE '982) 
(PUT 'IBALP_PREPROCESS 'DEFINED-IN-FILE 'REDLOG/IBALP/IBALPQSAT.RED) 
(PUT 'IBALP_PREPROCESS 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE IBALP_PREPROCESS (CLAUSEL VARAL)
    (PROG (PAIR COUNT)
      (SETQ COUNT 0)
      (PROG (V)
        (SETQ V VARAL)
       LAB
        (COND ((NULL V) (RETURN NIL)))
        ((LAMBDA (V)
           (PROGN
            (COND
             ((EQN (CAR (CDDDDR (CDR V))) 0)
              (PROGN
               (SETQ COUNT (PLUS COUNT 1))
               (SETQ PAIR (IBALP_SIMPLIFY (CDR V) 0 NIL CLAUSEL VARAL))
               (SETQ CLAUSEL (CAR PAIR))
               (SETQ VARAL (CDR PAIR))))
             ((EQN (CADR (CDDDDR (CDR V))) 0)
              (PROGN
               (SETQ COUNT (PLUS COUNT 1))
               (SETQ PAIR (IBALP_SIMPLIFY (CDR V) 1 NIL CLAUSEL VARAL))
               (SETQ CLAUSEL (CAR PAIR))
               (SETQ VARAL (CDR PAIR)))))))
         (CAR V))
        (SETQ V (CDR V))
        (GO LAB))
      (COND
       (*RLVERBOSE
        (IOTO_TPRIN2T (LIST "deleted variables in pre-processing " COUNT))))
      (RETURN (CONS CLAUSEL VARAL)))) 
(PUT 'IBALP_GETVAR 'NUMBER-OF-ARGS 3) 
(PUT 'IBALP_GETVAR 'DEFINED-ON-LINE '1005) 
(PUT 'IBALP_GETVAR 'DEFINED-IN-FILE 'REDLOG/IBALP/IBALPQSAT.RED) 
(PUT 'IBALP_GETVAR 'PROCEDURE_TYPE
     '(ARROW (TIMES GENERAL GENERAL GENERAL) GENERAL)) 
(DE IBALP_GETVAR (VARAL CLAUSEL HEUR)
    (COND ((EQUAL HEUR 'ZMOM) (IBALP_GETVAR-ZMOM VARAL CLAUSEL))
          ((EQUAL HEUR 'ACTIVITY) (IBALP_GETMACVEXT VARAL))
          (T (IBALP_GETVAR-DLCS VARAL)))) 
(PUT 'IBALP_RESTART 'NUMBER-OF-ARGS 7) 
(PUT 'IBALP_RESTART 'DEFINED-ON-LINE '1016) 
(PUT 'IBALP_RESTART 'DEFINED-IN-FILE 'REDLOG/IBALP/IBALPQSAT.RED) 
(PUT 'IBALP_RESTART 'PROCEDURE_TYPE
     '(ARROW (TIMES GENERAL GENERAL GENERAL GENERAL GENERAL GENERAL GENERAL)
       GENERAL)) 
(DE IBALP_RESTART (CLAUSEL VARAL C RESCOUNT SETVAL INC HEUR)
    (PROGN
     (COND (*RLVERBOSE (IOTO_TPRIN2T (LIST "restart " RESCOUNT))))
     (IBALP_DAV VARAL CLAUSEL)
     (COND
      ((GREATERP C (LTO_CATSOC 'CLAUSE_DEL IBALP_QSATOPTIONS*))
       (SETQ CLAUSEL (IBALP_KILLCOUNT CLAUSEL))))
     (IBALP_CDCL CLAUSEL VARAL (TIMES C INC) (DIFFERENCE 1 SETVAL)
      (PLUS RESCOUNT 1) INC HEUR))) 
(PUT 'IBALP_ANALCONF 'NUMBER-OF-ARGS 5) 
(PUT 'IBALP_ANALCONF 'DEFINED-ON-LINE '1033) 
(PUT 'IBALP_ANALCONF 'DEFINED-IN-FILE 'REDLOG/IBALP/IBALPQSAT.RED) 
(PUT 'IBALP_ANALCONF 'PROCEDURE_TYPE
     '(ARROW (TIMES GENERAL GENERAL GENERAL GENERAL GENERAL) GENERAL)) 
(DE IBALP_ANALCONF (EC LEVEL LV CLAUSEL VARAL)
    (PROG (PAIR NEWLEV CC P VAL)
      (SETQ CC (IBALP_CALCCC-FUIP EC LEVEL LV))
      (SETQ PAIR (IBALP_CALCCVAR CC LEVEL))
      (SETQ P (CAR PAIR))
      (SETQ NEWLEV (CDR PAIR))
      (SETQ VAL (CADR P))
      (SETQ CLAUSEL (CONS CC CLAUSEL))
      (IBALP_TVB VARAL NEWLEV)
      (IBALP_RENEWWL CLAUSEL)
      (IBALP_VAR-SET P (DIFFERENCE 1 VAL) NEWLEV NIL)
      (RETURN (CONS NEWLEV CLAUSEL)))) 
(PUT 'IBALP_DOSIMPL 'NUMBER-OF-ARGS 2) 
(PUT 'IBALP_DOSIMPL 'DEFINED-ON-LINE '1051) 
(PUT 'IBALP_DOSIMPL 'DEFINED-IN-FILE 'REDLOG/IBALP/IBALPQSAT.RED) 
(PUT 'IBALP_DOSIMPL 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE IBALP_DOSIMPL (CLAUSEL VARAL)
    (PROG (H PAIR)
      (PROG ()
       WHILELABEL
        (COND ((NOT (SETQ H (IBALP_HASSIMPLE CLAUSEL))) (RETURN NIL)))
        (PROGN
         (SETQ PAIR (IBALP_SIMPLIFY NIL NIL H CLAUSEL VARAL))
         (SETQ CLAUSEL (CAR PAIR))
         (SETQ VARAL (CDR PAIR)))
        (GO WHILELABEL))
      (RETURN (CONS CLAUSEL VARAL)))) 
(PUT 'IBALP_SIMPLIFY 'NUMBER-OF-ARGS 5) 
(PUT 'IBALP_SIMPLIFY 'DEFINED-ON-LINE '1064) 
(PUT 'IBALP_SIMPLIFY 'DEFINED-IN-FILE 'REDLOG/IBALP/IBALPQSAT.RED) 
(PUT 'IBALP_SIMPLIFY 'PROCEDURE_TYPE
     '(ARROW (TIMES GENERAL GENERAL GENERAL GENERAL GENERAL) GENERAL)) 
(DE IBALP_SIMPLIFY (DVAR DVAL CLAUSE CLAUSEL VARAL)
    (PROG (VAR VAL)
      (COND
       ((NULL DVAR)
        (PROGN
         (COND
          ((IBALP_LENISONE (CAR CLAUSE))
           (PROGN (SETQ VAR (CAR (CAR CLAUSE))) (SETQ VAL 1)))
          (T (PROGN (SETQ VAR (CAR (CADR CLAUSE))) (SETQ VAL 0))))
         (COND ((CADR VAR) (IBALP_VAR-UNSET VAR (CADR VAR))))
         (IBALP_VAR-SET VAR VAL 0 NIL)
         NIL))
       (T (PROGN (SETQ VAR DVAR) (SETQ VAL DVAL))))
      (COND
       ((EQN VAL 1)
        (PROGN
         (PROG (CLAUSE)
           (SETQ CLAUSE (CADDR VAR))
          LAB
           (COND ((NULL CLAUSE) (RETURN NIL)))
           ((LAMBDA (CLAUSE) (SETQ CLAUSEL (IBALP_DELCLAUSE CLAUSE CLAUSEL)))
            (CAR CLAUSE))
           (SETQ CLAUSE (CDR CLAUSE))
           (GO LAB))
         (PROG (CLAUSE)
           (SETQ CLAUSE (CADDDR VAR))
          LAB
           (COND ((NULL CLAUSE) (RETURN NIL)))
           ((LAMBDA (CLAUSE) (IBALP_DELLIT VAR CLAUSE NIL)) (CAR CLAUSE))
           (SETQ CLAUSE (CDR CLAUSE))
           (GO LAB))
         NIL))
       (T
        (PROGN
         (PROG (CLAUSE)
           (SETQ CLAUSE (CADDDR VAR))
          LAB
           (COND ((NULL CLAUSE) (RETURN NIL)))
           ((LAMBDA (CLAUSE) (SETQ CLAUSEL (IBALP_DELCLAUSE CLAUSE CLAUSEL)))
            (CAR CLAUSE))
           (SETQ CLAUSE (CDR CLAUSE))
           (GO LAB))
         (PROG (CLAUSE)
           (SETQ CLAUSE (CADDR VAR))
          LAB
           (COND ((NULL CLAUSE) (RETURN NIL)))
           ((LAMBDA (CLAUSE) (IBALP_DELLIT VAR CLAUSE T)) (CAR CLAUSE))
           (SETQ CLAUSE (CDR CLAUSE))
           (GO LAB))
         NIL)))
      (SETQ VARAL (LTO_DELQ (ATSOC (CAR VAR) VARAL) VARAL))
      (RETURN (CONS CLAUSEL VARAL)))) 
(DE IBALP_LENISONE (L) (AND L (NULL (CDR L)))) 
(PUT 'IBALP_LENISONE 'NUMBER-OF-ARGS 1) 
(PUT 'IBALP_LENISONE 'DEFINED-ON-LINE '1101) 
(PUT 'IBALP_LENISONE 'DEFINED-IN-FILE 'REDLOG/IBALP/IBALPQSAT.RED) 
(PUT 'IBALP_LENISONE 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(PUTC 'IBALP_LENISONE 'INLINE '(LAMBDA (L) (AND L (NULL (CDR L))))) 
(DE IBALP_COMMONLENISONE (L1 L2)
    (OR (AND (NULL L1) (AND L2 (NULL (CDR L2))))
        (AND (NULL L2) (AND L1 (NULL (CDR L1)))))) 
(PUT 'IBALP_COMMONLENISONE 'NUMBER-OF-ARGS 2) 
(PUT 'IBALP_COMMONLENISONE 'DEFINED-ON-LINE '1104) 
(PUT 'IBALP_COMMONLENISONE 'DEFINED-IN-FILE 'REDLOG/IBALP/IBALPQSAT.RED) 
(PUT 'IBALP_COMMONLENISONE 'PROCEDURE_TYPE
     '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(PUTC 'IBALP_COMMONLENISONE 'INLINE
      '(LAMBDA (L1 L2)
         (OR (AND (NULL L1) (AND L2 (NULL (CDR L2))))
             (AND (NULL L2) (AND L1 (NULL (CDR L1))))))) 
(PUT 'IBALP_HASSIMPLE 'NUMBER-OF-ARGS 1) 
(PUT 'IBALP_HASSIMPLE 'DEFINED-ON-LINE '1108) 
(PUT 'IBALP_HASSIMPLE 'DEFINED-IN-FILE 'REDLOG/IBALP/IBALPQSAT.RED) 
(PUT 'IBALP_HASSIMPLE 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE IBALP_HASSIMPLE (CLAUSEL)
    (PROG (RET TL)
      (SETQ TL CLAUSEL)
      (PROG ()
       WHILELABEL
        (COND ((NOT (AND TL (NULL RET))) (RETURN NIL)))
        (PROGN
         (COND
          (((LAMBDA (G134 G135)
              (OR (AND (NULL G134) (AND G135 (NULL (CDR G135))))
                  (AND (NULL G135) (AND G134 (NULL (CDR G134))))))
            (CAR (CAR TL)) (CADR (CAR TL)))
           (SETQ RET (CAR TL))))
         (SETQ TL (CDR TL)))
        (GO WHILELABEL))
      (RETURN RET))) 
(PUT 'IBALP_GETUPL 'NUMBER-OF-ARGS 1) 
(PUT 'IBALP_GETUPL 'DEFINED-ON-LINE '1123) 
(PUT 'IBALP_GETUPL 'DEFINED-IN-FILE 'REDLOG/IBALP/IBALPQSAT.RED) 
(PUT 'IBALP_GETUPL 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE IBALP_GETUPL (CLAUSEL)
    (PROG (UPL)
      (PROG (C)
        (SETQ C CLAUSEL)
       LAB
        (COND ((NULL C) (RETURN NIL)))
        ((LAMBDA (C)
           (COND
            ((AND (NULL (CAR (CDDDDR C))) (EQN (PLUS (CADDR C) (CADDDR C)) 1))
             (SETQ UPL (CONS C UPL)))))
         (CAR C))
        (SETQ C (CDR C))
        (GO LAB))
      (RETURN UPL))) 
(PUT 'IBALP_UNITPROP 'NUMBER-OF-ARGS 3) 
(PUT 'IBALP_UNITPROP 'DEFINED-ON-LINE '1134) 
(PUT 'IBALP_UNITPROP 'DEFINED-IN-FILE 'REDLOG/IBALP/IBALPQSAT.RED) 
(PUT 'IBALP_UNITPROP 'PROCEDURE_TYPE
     '(ARROW (TIMES GENERAL GENERAL GENERAL) GENERAL)) 
(DE IBALP_UNITPROP (CLIST CLAUSEL LEVEL)
    (PROG (TL CLAUSE ACTPOS ACTNEG VAR EC UPL W)
      (SETQ W (SETQ TL CLIST))
      (PROG ()
       WHILELABEL
        (COND ((NOT (AND TL (NULL EC))) (RETURN NIL)))
        (PROGN
         (SETQ CLAUSE (CAR TL))
         (COND
          ((NULL (CAR (CDDDDR CLAUSE)))
           (PROGN
            (SETQ ACTPOS (CADDR CLAUSE))
            (SETQ ACTNEG (CADDDR CLAUSE))
            (COND
             ((IEQUAL ACTPOS 1)
              (PROGN
               (SETQ VAR (CAR (CADDR (CDDDDR CLAUSE))))
               (COND
                ((NULL (CADR VAR))
                 (PROGN
                  (SETQ UPL (IBALP_VAR-SET VAR 1 LEVEL CLAUSE))
                  (NCONC W UPL)
                  (SETQ W (OR UPL W)))))))
             (T
              (PROGN
               (SETQ VAR (CAR (CADDR (CDDDDR CLAUSE))))
               (COND
                ((NULL (CADR VAR))
                 (PROGN
                  (SETQ UPL (IBALP_VAR-SET VAR 0 LEVEL CLAUSE))
                  (NCONC W UPL)
                  (SETQ W (OR UPL W)))))))))))
         (SETQ TL (CDR TL))
         (SETQ EC (IBALP_CEC CLAUSEL)))
        (GO WHILELABEL))
      (RETURN (CONS EC VAR)))) 
(PUT 'IBALP_INITWL 'NUMBER-OF-ARGS 1) 
(PUT 'IBALP_INITWL 'DEFINED-ON-LINE '1171) 
(PUT 'IBALP_INITWL 'DEFINED-IN-FILE 'REDLOG/IBALP/IBALPQSAT.RED) 
(PUT 'IBALP_INITWL 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE IBALP_INITWL (CLAUSEL)
    (PROG (COUNT UPL TL)
      (PROG (C)
        (SETQ C CLAUSEL)
       LAB
        (COND ((NULL C) (RETURN NIL)))
        ((LAMBDA (C)
           (PROGN
            (SETQ COUNT 0)
            (SETQ TL (CAR C))
            (PROG ()
             WHILELABEL
              (COND ((NOT (AND (NOT (EQN COUNT 2)) TL)) (RETURN NIL)))
              (PROGN
               (SETCAR (CDDR (CDDDDR C)) (CONS (CAR TL) (CADDR (CDDDDR C))))
               (SETCAR (CDDR (CDDDDR (CDDDDR (CAR TL))))
                       (CONS C (CADDR (CDDDDR (CDDDDR (CAR TL))))))
               (SETQ COUNT (PLUS COUNT 1))
               (SETQ TL (CDR TL)))
              (GO WHILELABEL))
            (SETQ TL (CADR C))
            (PROG ()
             WHILELABEL
              (COND ((NOT (AND (NOT (EQN COUNT 2)) TL)) (RETURN NIL)))
              (PROGN
               (SETCAR (CDDR (CDDDDR C)) (CONS (CAR TL) (CADDR (CDDDDR C))))
               (SETCAR (CDDR (CDDDDR (CDDDDR (CAR TL))))
                       (CONS C (CADDR (CDDDDR (CDDDDR (CAR TL))))))
               (SETQ COUNT (PLUS COUNT 1))
               (SETQ TL (CDR TL)))
              (GO WHILELABEL))
            (COND ((LESSP COUNT 2) (SETQ UPL (CONS C UPL))))))
         (CAR C))
        (SETQ C (CDR C))
        (GO LAB))
      (RETURN UPL))) 
(PUT 'IBALP_RENEWWL 'NUMBER-OF-ARGS 1) 
(PUT 'IBALP_RENEWWL 'DEFINED-ON-LINE '1196) 
(PUT 'IBALP_RENEWWL 'DEFINED-IN-FILE 'REDLOG/IBALP/IBALPQSAT.RED) 
(PUT 'IBALP_RENEWWL 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE IBALP_RENEWWL (CLAUSEL)
    (PROG (WL)
      (PROG (C)
        (SETQ C CLAUSEL)
       LAB
        (COND ((NULL C) (RETURN NIL)))
        ((LAMBDA (C)
           (PROGN
            (COND
             ((NULL (CAR (CDDDDR C)))
              (PROGN
               (COND
                ((AND (EQN (LENGTH (CADDR (CDDDDR C))) 1)
                      (GREATERP (PLUS (LENGTH (CAR C)) (LENGTH (CADR C))) 1))
                 (PROGN
                  (SETQ WL (IBALP_GETNEWWL C))
                  (COND
                   (WL
                    (PROGN
                     (SETCAR (CDDR (CDDDDR C)) (CONS WL (CADDR (CDDDDR C))))
                     (SETCAR (CDDR (CDDDDR (CDDDDR WL)))
                             (CONS C (CADDR (CDDDDR (CDDDDR WL))))))))
                  NIL))
                ((AND (NULL (CADDR (CDDDDR C)))
                      (GREATERP (PLUS (LENGTH (CAR C)) (LENGTH (CADR C))) 1))
                 (PROGN
                  (SETQ WL (IBALP_GETNEWWL C))
                  (COND
                   (WL
                    (PROGN
                     (SETCAR (CDDR (CDDDDR C)) (CONS WL (CADDR (CDDDDR C))))
                     (SETCAR (CDDR (CDDDDR (CDDDDR WL)))
                             (CONS C (CADDR (CDDDDR (CDDDDR WL))))))))
                  (SETQ WL (IBALP_GETNEWWL C))
                  (COND
                   (WL
                    (PROGN
                     (SETCAR (CDDR (CDDDDR C)) (CONS WL (CADDR (CDDDDR C))))
                     (SETCAR (CDDR (CDDDDR (CDDDDR WL)))
                             (CONS C (CADDR (CDDDDR (CDDDDR WL))))))))))))))))
         (CAR C))
        (SETQ C (CDR C))
        (GO LAB)))) 
(PUT 'IBALP_RESOLVE 'NUMBER-OF-ARGS 4) 
(PUT 'IBALP_RESOLVE 'DEFINED-ON-LINE '1228) 
(PUT 'IBALP_RESOLVE 'DEFINED-IN-FILE 'REDLOG/IBALP/IBALPQSAT.RED) 
(PUT 'IBALP_RESOLVE 'PROCEDURE_TYPE
     '(ARROW (TIMES GENERAL GENERAL GENERAL GENERAL) GENERAL)) 
(DE IBALP_RESOLVE (NEWCLAUSE CLAUSE1 CLAUSE2 CV)
    (PROGN
     (PROG (V)
       (SETQ V (CAR CLAUSE1))
      LAB
       (COND ((NULL V) (RETURN NIL)))
       ((LAMBDA (V)
          (COND
           ((AND (NULL (EQ V CV)) (NULL (MEMQ V (CAR NEWCLAUSE))))
            (PROGN
             (SETCAR NEWCLAUSE (CONS V (CAR NEWCLAUSE)))
             (SETCAR (CDDR V) (CONS NEWCLAUSE (CADDR V)))
             (SETCAR (CDDDDR V) (PLUS (CAR (CDDDDR V)) 1))))))
        (CAR V))
       (SETQ V (CDR V))
       (GO LAB))
     (PROG (V)
       (SETQ V (CAR CLAUSE2))
      LAB
       (COND ((NULL V) (RETURN NIL)))
       ((LAMBDA (V)
          (COND
           ((AND (NULL (EQ V CV)) (NULL (MEMQ V (CAR NEWCLAUSE))))
            (PROGN
             (SETCAR NEWCLAUSE (CONS V (CAR NEWCLAUSE)))
             (SETCAR (CDDR V) (CONS NEWCLAUSE (CADDR V)))
             (SETCAR (CDDDDR V) (PLUS (CAR (CDDDDR V)) 1))))))
        (CAR V))
       (SETQ V (CDR V))
       (GO LAB))
     (PROG (V)
       (SETQ V (CADR CLAUSE1))
      LAB
       (COND ((NULL V) (RETURN NIL)))
       ((LAMBDA (V)
          (COND
           ((AND (NULL (EQ V CV)) (NULL (MEMQ V (CADR NEWCLAUSE))))
            (PROGN
             (SETCAR (CDR NEWCLAUSE) (CONS V (CADR NEWCLAUSE)))
             (SETCAR (CDDDR V) (CONS NEWCLAUSE (CADDDR V)))
             (SETCAR (CDR (CDDDDR V)) (PLUS (CADR (CDDDDR V)) 1))))))
        (CAR V))
       (SETQ V (CDR V))
       (GO LAB))
     (PROG (V)
       (SETQ V (CADR CLAUSE2))
      LAB
       (COND ((NULL V) (RETURN NIL)))
       ((LAMBDA (V)
          (COND
           ((AND (NULL (EQ V CV)) (NULL (MEMQ V (CADR NEWCLAUSE))))
            (PROGN
             (SETCAR (CDR NEWCLAUSE) (CONS V (CADR NEWCLAUSE)))
             (SETCAR (CDDDR V) (CONS NEWCLAUSE (CADDDR V)))
             (SETCAR (CDR (CDDDDR V)) (PLUS (CADR (CDDDDR V)) 1))))))
        (CAR V))
       (SETQ V (CDR V))
       (GO LAB))
     NIL)) 
(PUT 'IBALP_DAV 'NUMBER-OF-ARGS 2) 
(PUT 'IBALP_DAV 'DEFINED-ON-LINE '1264) 
(PUT 'IBALP_DAV 'DEFINED-IN-FILE 'REDLOG/IBALP/IBALPQSAT.RED) 
(PUT 'IBALP_DAV 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE IBALP_DAV (VARAL CLAUSEL)
    (PROGN
     (PROG (V)
       (SETQ V VARAL)
      LAB
       (COND ((NULL V) (RETURN NIL)))
       ((LAMBDA (V)
          (PROGN
           (COND
            ((CADR (CDR V))
             (PROGN
              (IBALP_VAR-UNSET (CDR V) (CADR (CDR V)))
              (SETCAR (CDDR (CDDDDR (CDDDDR (CDDDDR (CDR V))))) NIL))))))
        (CAR V))
       (SETQ V (CDR V))
       (GO LAB))
     (PROG (V)
       (SETQ V VARAL)
      LAB
       (COND ((NULL V) (RETURN NIL)))
       ((LAMBDA (V) (PROGN (SETCAR (CDDR (CDDDDR (CDDDDR (CDR V)))) NIL)))
        (CAR V))
       (SETQ V (CDR V))
       (GO LAB))
     (PROG (C)
       (SETQ C CLAUSEL)
      LAB
       (COND ((NULL C) (RETURN NIL)))
       ((LAMBDA (C) (SETCAR (CDDR (CDDDDR C)) NIL)) (CAR C))
       (SETQ C (CDR C))
       (GO LAB)))) 
(PUT 'IBALP_CALCCC-FUIP 'NUMBER-OF-ARGS 3) 
(PUT 'IBALP_CALCCC-FUIP 'DEFINED-ON-LINE '1281) 
(PUT 'IBALP_CALCCC-FUIP 'DEFINED-IN-FILE 'REDLOG/IBALP/IBALPQSAT.RED) 
(PUT 'IBALP_CALCCC-FUIP 'PROCEDURE_TYPE
     '(ARROW (TIMES GENERAL GENERAL GENERAL) GENERAL)) 
(DE IBALP_CALCCC-FUIP (EC LEVEL LV)
    (PROG (NEWCLAUSE TV REAS)
      (SETQ NEWCLAUSE (LIST NIL NIL 0 0 NIL NIL NIL))
      (IBALP_RESOLVE NEWCLAUSE EC (CADDDR (CDDDDR LV)) LV)
      (PROG ()
       WHILELABEL
        (COND
         ((NOT (SETQ TV (IBALP_COUNTGETLEV NEWCLAUSE LEVEL))) (RETURN NIL)))
        (PROGN
         (COND ((EQN (CADR TV) 0) (IBALP_DELLIT TV NEWCLAUSE T))
               (T (IBALP_DELLIT TV NEWCLAUSE NIL)))
         (SETQ REAS (CADDDR (CDDDDR TV)))
         (COND
          ((CADR (CDDDDR REAS))
           (SETCAR (CDR (CDDDDR REAS)) (PLUS (CADR (CDDDDR REAS)) 1))))
         (IBALP_RESOLVE NEWCLAUSE NEWCLAUSE REAS TV)
         NIL)
        (GO WHILELABEL))
      (PROG (V)
        (SETQ V (CAR NEWCLAUSE))
       LAB
        (COND ((NULL V) (RETURN NIL)))
        ((LAMBDA (V)
           (SETCAR (CDDDDR (CDDDDR V)) (PLUS (CAR (CDDDDR (CDDDDR V))) 1)))
         (CAR V))
        (SETQ V (CDR V))
        (GO LAB))
      (PROG (V)
        (SETQ V (CADR NEWCLAUSE))
       LAB
        (COND ((NULL V) (RETURN NIL)))
        ((LAMBDA (V)
           (SETCAR (CDR (CDDDDR (CDDDDR V)))
                   (PLUS (CADR (CDDDDR (CDDDDR V))) 1)))
         (CAR V))
        (SETQ V (CDR V))
        (GO LAB))
      (SETCAR (CDR (CDDDDR NEWCLAUSE)) 1)
      (RETURN NEWCLAUSE))) 
(PUT 'IBALP_COUNTGETLEV 'NUMBER-OF-ARGS 2) 
(PUT 'IBALP_COUNTGETLEV 'DEFINED-ON-LINE '1307) 
(PUT 'IBALP_COUNTGETLEV 'DEFINED-IN-FILE 'REDLOG/IBALP/IBALPQSAT.RED) 
(PUT 'IBALP_COUNTGETLEV 'PROCEDURE_TYPE
     '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE IBALP_COUNTGETLEV (CLAUSE LEVEL)
    (PROG (TEMP TV RET)
      (SETQ TV (CAR CLAUSE))
      (PROG ()
       WHILELABEL
        (COND ((NOT (AND TV (NULL RET))) (RETURN NIL)))
        (PROGN
         (SETQ TEMP (CAR TV))
         (COND
          ((AND (EQUAL (CADDR (CDDDDR TEMP)) LEVEL) (CADDDR (CDDDDR TEMP)))
           (SETQ RET TEMP)))
         (SETQ TV (CDR TV))
         NIL)
        (GO WHILELABEL))
      (SETQ TV (CADR CLAUSE))
      (PROG ()
       WHILELABEL
        (COND ((NOT (AND TV (NULL RET))) (RETURN NIL)))
        (PROGN
         (SETQ TEMP (CAR TV))
         (COND
          ((AND (EQUAL (CADDR (CDDDDR TEMP)) LEVEL) (CADDDR (CDDDDR TEMP)))
           (SETQ RET TEMP)))
         (SETQ TV (CDR TV))
         NIL)
        (GO WHILELABEL))
      (RETURN RET))) 
(PUT 'IBALP_DELLIT 'NUMBER-OF-ARGS 3) 
(PUT 'IBALP_DELLIT 'DEFINED-ON-LINE '1332) 
(PUT 'IBALP_DELLIT 'DEFINED-IN-FILE 'REDLOG/IBALP/IBALPQSAT.RED) 
(PUT 'IBALP_DELLIT 'PROCEDURE_TYPE
     '(ARROW (TIMES GENERAL GENERAL GENERAL) GENERAL)) 
(DE IBALP_DELLIT (LIT CLAUSE POSNEG)
    (COND
     (POSNEG
      (PROGN
       (SETCAR (CDDR LIT) (LTO_DELQ CLAUSE (CADDR LIT)))
       (SETCAR CLAUSE (LTO_DELQ LIT (CAR CLAUSE)))))
     (T
      (PROGN
       (SETCAR (CDDDR LIT) (LTO_DELQ CLAUSE (CADDDR LIT)))
       (SETCAR (CDR CLAUSE) (LTO_DELQ LIT (CADR CLAUSE))))))) 
(PUT 'IBALP_DIMCOUNT 'NUMBER-OF-ARGS 1) 
(PUT 'IBALP_DIMCOUNT 'DEFINED-ON-LINE '1346) 
(PUT 'IBALP_DIMCOUNT 'DEFINED-IN-FILE 'REDLOG/IBALP/IBALPQSAT.RED) 
(PUT 'IBALP_DIMCOUNT 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE IBALP_DIMCOUNT (CLAUSEL)
    (PROG (DOIT TC C)
      (SETQ DOIT T)
      (SETQ TC CLAUSEL)
      (PROG ()
       WHILELABEL
        (COND ((NOT DOIT) (RETURN NIL)))
        (PROGN
         (SETQ C (CAR TC))
         (COND ((NULL (CADR (CDDDDR C))) (SETQ DOIT NIL))
               (T
                (SETCAR (CDR (CDDDDR C)) (DIFFERENCE (CADR (CDDDDR C)) 0.05))))
         (SETQ TC (CDR TC)))
        (GO WHILELABEL)))) 
(PUT 'IBALP_KILLCOUNT 'NUMBER-OF-ARGS 1) 
(PUT 'IBALP_KILLCOUNT 'DEFINED-ON-LINE '1362) 
(PUT 'IBALP_KILLCOUNT 'DEFINED-IN-FILE 'REDLOG/IBALP/IBALPQSAT.RED) 
(PUT 'IBALP_KILLCOUNT 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE IBALP_KILLCOUNT (CLAUSEL)
    (PROG (DOIT TC C)
      (SETQ DOIT T)
      (SETQ TC CLAUSEL)
      (PROG ()
       WHILELABEL
        (COND ((NOT DOIT) (RETURN NIL)))
        (PROGN
         (SETQ C (CAR TC))
         (COND ((NULL (CADR (CDDDDR C))) (SETQ DOIT NIL))
               (T
                (PROGN
                 (SETQ TC (CDR TC))
                 (COND
                  ((LESSP (CADR (CDDDDR C)) 1)
                   (SETQ CLAUSEL (IBALP_DELCLAUSE C CLAUSEL))))
                 NIL))))
        (GO WHILELABEL))
      (RETURN CLAUSEL))) 
(PUT 'IBALP_DELCLAUSE 'NUMBER-OF-ARGS 2) 
(PUT 'IBALP_DELCLAUSE 'DEFINED-ON-LINE '1379) 
(PUT 'IBALP_DELCLAUSE 'DEFINED-IN-FILE 'REDLOG/IBALP/IBALPQSAT.RED) 
(PUT 'IBALP_DELCLAUSE 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE IBALP_DELCLAUSE (C CLAUSEL)
    (PROGN
     (PROG (V)
       (SETQ V (CAR C))
      LAB
       (COND ((NULL V) (RETURN NIL)))
       ((LAMBDA (V)
          (PROGN
           (SETCAR (CDDR V) (LTO_DELQ C (CADDR V)))
           (COND
            ((CADR (CDDDDR C))
             (SETCAR (CDDDDR (CDDDDR V))
                     (DIFFERENCE (CAR (CDDDDR (CDDDDR V))) 1))))
           (COND
            ((NULL (CAR (CDDDDR C)))
             (SETCAR (CDDDDR V) (DIFFERENCE (CAR (CDDDDR V)) 1))))
           (SETCAR (CDDDR (CDDDDR (CDDDDR V))) (IBALP_CALCMOM V))))
        (CAR V))
       (SETQ V (CDR V))
       (GO LAB))
     (PROG (V)
       (SETQ V (CADR C))
      LAB
       (COND ((NULL V) (RETURN NIL)))
       ((LAMBDA (V)
          (PROGN
           (SETCAR (CDDDR V) (LTO_DELQ C (CADDDR V)))
           (COND
            ((CADR (CDDDDR C))
             (SETCAR (CDR (CDDDDR (CDDDDR V)))
                     (DIFFERENCE (CADR (CDDDDR (CDDDDR V))) 1))))
           (COND
            ((NULL (CAR (CDDDDR C)))
             (SETCAR (CDR (CDDDDR V)) (DIFFERENCE (CADR (CDDDDR V)) 1))))
           (SETCAR (CDDDR (CDDDDR (CDDDDR V))) (IBALP_CALCMOM V))))
        (CAR V))
       (SETQ V (CDR V))
       (GO LAB))
     (PROG (V)
       (SETQ V (CADDR (CDDDDR C)))
      LAB
       (COND ((NULL V) (RETURN NIL)))
       ((LAMBDA (V)
          (PROGN
           (SETCAR (CDDR (CDDDDR (CDDDDR V)))
                   (LTO_DELQ C (CADDR (CDDDDR (CDDDDR V)))))
           NIL))
        (CAR V))
       (SETQ V (CDR V))
       (GO LAB))
     (SETQ CLAUSEL (LTO_DELQ C CLAUSEL))
     CLAUSEL)) 
(PUT 'IBALP_GETMACVEXT 'NUMBER-OF-ARGS 1) 
(PUT 'IBALP_GETMACVEXT 'DEFINED-ON-LINE '1406) 
(PUT 'IBALP_GETMACVEXT 'DEFINED-IN-FILE 'REDLOG/IBALP/IBALPQSAT.RED) 
(PUT 'IBALP_GETMACVEXT 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE IBALP_GETMACVEXT (VARAL)
    (PROG (TV TM VAL)
      (SETQ TV (IBALP_CV VARAL))
      (COND
       ((GREATERP (CAR (CDDDDR (CDDDDR TV))) (CADR (CDDDDR (CDDDDR TV))))
        (PROGN (SETQ TM (CAR (CDDDDR (CDDDDR TV)))) (SETQ VAL 1)))
       (T (PROGN (SETQ TM (CADR (CDDDDR (CDDDDR TV)))) (SETQ VAL 0))))
      (PROG (V)
        (SETQ V VARAL)
       LAB
        (COND ((NULL V) (RETURN NIL)))
        ((LAMBDA (V)
           (COND
            ((NULL (CADR (CDR V)))
             (PROGN
              (COND
               ((GREATERP (CAR (CDDDDR (CDDDDR (CDR V)))) TM)
                (PROGN
                 (SETQ TV (CDR V))
                 (SETQ VAL 1)
                 (SETQ TM (CAR (CDDDDR (CDDDDR TV)))))))
              (COND
               ((GREATERP (CADR (CDDDDR (CDDDDR (CDR V)))) TM)
                (PROGN
                 (SETQ TV (CDR V))
                 (SETQ VAL 0)
                 (SETQ TM (CADR (CDDDDR (CDDDDR TV)))))))))))
         (CAR V))
        (SETQ V (CDR V))
        (GO LAB))
      (RETURN (CONS TV VAL)))) 
(PUT 'IBALP_RECALCV 'NUMBER-OF-ARGS 1) 
(PUT 'IBALP_RECALCV 'DEFINED-ON-LINE '1435) 
(PUT 'IBALP_RECALCV 'DEFINED-IN-FILE 'REDLOG/IBALP/IBALPQSAT.RED) 
(PUT 'IBALP_RECALCV 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE IBALP_RECALCV (VARAL)
    (PROG (V)
      (SETQ V VARAL)
     LAB
      (COND ((NULL V) (RETURN NIL)))
      ((LAMBDA (V)
         (PROGN
          (SETCAR (CDDDDR (CDDDDR (CDR V)))
                  (DIFFERENCE (CAR (CDDDDR (CDDDDR (CDR V)))) 0.05))
          (SETCAR (CDR (CDDDDR (CDDDDR (CDR V))))
                  (DIFFERENCE (CADR (CDDDDR (CDDDDR (CDR V)))) 0.05))))
       (CAR V))
      (SETQ V (CDR V))
      (GO LAB))) 
(PUT 'IBALP_CALCCVAR 'NUMBER-OF-ARGS 2) 
(PUT 'IBALP_CALCCVAR 'DEFINED-ON-LINE '1443) 
(PUT 'IBALP_CALCCVAR 'DEFINED-IN-FILE 'REDLOG/IBALP/IBALPQSAT.RED) 
(PUT 'IBALP_CALCCVAR 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE IBALP_CALCCVAR (CC LEVEL)
    (PROG (V RV LEV)
      (SETQ LEV 0)
      (PROG (V)
        (SETQ V (CAR CC))
       LAB
        (COND ((NULL V) (RETURN NIL)))
        ((LAMBDA (V)
           (PROGN
            (COND ((EQN (CADDR (CDDDDR V)) LEVEL) (SETQ RV V))
                  ((GREATERP (CADDR (CDDDDR V)) LEV)
                   (SETQ LEV (CADDR (CDDDDR V)))))))
         (CAR V))
        (SETQ V (CDR V))
        (GO LAB))
      (PROG (V)
        (SETQ V (CADR CC))
       LAB
        (COND ((NULL V) (RETURN NIL)))
        ((LAMBDA (V)
           (PROGN
            (COND ((EQN (CADDR (CDDDDR V)) LEVEL) (SETQ RV V))
                  ((GREATERP (CADDR (CDDDDR V)) LEV)
                   (SETQ LEV (CADDR (CDDDDR V)))))))
         (CAR V))
        (SETQ V (CDR V))
        (GO LAB))
      (RETURN (CONS RV LEV)))) 
(PUT 'IBALP_TVB 'NUMBER-OF-ARGS 2) 
(PUT 'IBALP_TVB 'DEFINED-ON-LINE '1465) 
(PUT 'IBALP_TVB 'DEFINED-IN-FILE 'REDLOG/IBALP/IBALPQSAT.RED) 
(PUT 'IBALP_TVB 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE IBALP_TVB (VARAL LEVEL)
    (PROG (V)
      (SETQ V VARAL)
     LAB
      (COND ((NULL V) (RETURN NIL)))
      ((LAMBDA (V)
         (COND
          ((GEQ (CADDR (CDDDDR (CDR V))) LEVEL)
           (IBALP_VAR-UNSET (CDR V) (CADR (CDR V))))))
       (CAR V))
      (SETQ V (CDR V))
      (GO LAB))) 
(PUT 'IBALP_ISTOTAL 'NUMBER-OF-ARGS 1) 
(PUT 'IBALP_ISTOTAL 'DEFINED-ON-LINE '1472) 
(PUT 'IBALP_ISTOTAL 'DEFINED-IN-FILE 'REDLOG/IBALP/IBALPQSAT.RED) 
(PUT 'IBALP_ISTOTAL 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE IBALP_ISTOTAL (VARAL)
    (OR (NULL VARAL) (AND (CADR (CDAR VARAL)) (IBALP_ISTOTAL (CDR VARAL))))) 
(PUT 'IBALP_GETVAR-ZMOM 'NUMBER-OF-ARGS 2) 
(PUT 'IBALP_GETVAR-ZMOM 'DEFINED-ON-LINE '1478) 
(PUT 'IBALP_GETVAR-ZMOM 'DEFINED-IN-FILE 'REDLOG/IBALP/IBALPQSAT.RED) 
(PUT 'IBALP_GETVAR-ZMOM 'PROCEDURE_TYPE
     '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE IBALP_GETVAR-ZMOM (VARAL CLAUSEL)
    (PROG (MINC TV TMAX H VAL)
      (SETQ MINC (IBALP_MINCLNR CLAUSEL))
      (SETQ TMAX (MINUS 1))
      (PROG (V)
        (SETQ V VARAL)
       LAB
        (COND ((NULL V) (RETURN NIL)))
        ((LAMBDA (V)
           (PROGN
            (COND
             ((AND (NULL (CADR (CDR V)))
                   (GREATERP (SETQ H (CADDDR (CDDDDR (CDDDDR (CDR V))))) TMAX))
              (COND
               ((IBALP_ISINMINCLAUSE (CDR V) MINC)
                (PROGN (SETQ TV (CDR V)) (SETQ TMAX H))))))))
         (CAR V))
        (SETQ V (CDR V))
        (GO LAB))
      (SETQ VAL
              (COND
               ((GREATERP (CAR (CDDDDR (CDDDDR TV)))
                          (CADR (CDDDDR (CDDDDR TV))))
                1)
               (T 0)))
      (RETURN (CONS TV VAL)))) 
(PUT 'IBALP_ISINMINCLAUSE 'NUMBER-OF-ARGS 2) 
(PUT 'IBALP_ISINMINCLAUSE 'DEFINED-ON-LINE '1498) 
(PUT 'IBALP_ISINMINCLAUSE 'DEFINED-IN-FILE 'REDLOG/IBALP/IBALPQSAT.RED) 
(PUT 'IBALP_ISINMINCLAUSE 'PROCEDURE_TYPE
     '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE IBALP_ISINMINCLAUSE (VAR MINC)
    (PROG (TV RET)
      (SETQ TV (CADDR VAR))
      (PROG ()
       WHILELABEL
        (COND ((NOT (AND TV (NULL RET))) (RETURN NIL)))
        (PROGN
         (COND
          ((AND (NULL (CAR (CDDDDR (CAR TV))))
                (EQN (PLUS (CADDDR (CAR TV)) (CADDR (CAR TV))) MINC))
           (SETQ RET T)))
         (SETQ TV (CDR TV))
         NIL)
        (GO WHILELABEL))
      (SETQ TV (CADDDR VAR))
      (PROG ()
       WHILELABEL
        (COND ((NOT (AND TV (NULL RET))) (RETURN NIL)))
        (PROGN
         (COND
          ((AND (NULL (CAR (CDDDDR (CAR TV))))
                (EQN (PLUS (CADDDR (CAR TV)) (CADDR (CAR TV))) MINC))
           (SETQ RET T)))
         (SETQ TV (CDR TV))
         NIL)
        (GO WHILELABEL))
      (RETURN RET))) 
(PUT 'IBALP_GETVAR-DLCS 'NUMBER-OF-ARGS 1) 
(PUT 'IBALP_GETVAR-DLCS 'DEFINED-ON-LINE '1522) 
(PUT 'IBALP_GETVAR-DLCS 'DEFINED-IN-FILE 'REDLOG/IBALP/IBALPQSAT.RED) 
(PUT 'IBALP_GETVAR-DLCS 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE IBALP_GETVAR-DLCS (VARAL)
    (PROG (TV MAX VAL)
      (SETQ TV (IBALP_CV VARAL))
      (SETQ MAX (PLUS (CADR (CDDDDR TV)) (CAR (CDDDDR TV))))
      (PROG (VAR)
        (SETQ VAR VARAL)
       LAB
        (COND ((NULL VAR) (RETURN NIL)))
        ((LAMBDA (VAR)
           (COND
            ((NULL (CADR (CDR VAR)))
             (COND
              ((GREATERP
                (PLUS (CADR (CDDDDR (CDR VAR))) (CAR (CDDDDR (CDR VAR)))) MAX)
               (PROGN
                (SETQ TV (CDR VAR))
                (SETQ MAX
                        (PLUS (CADR (CDDDDR (CDR VAR)))
                              (CAR (CDDDDR (CDR VAR)))))))))))
         (CAR VAR))
        (SETQ VAR (CDR VAR))
        (GO LAB))
      (SETQ VAL
              (COND ((GREATERP (CAR (CDDDDR TV)) (CADR (CDDDDR TV))) 1) (T 0)))
      (RETURN (CONS TV VAL)))) 
(PUT 'IBALP_MINCLNR 'NUMBER-OF-ARGS 1) 
(PUT 'IBALP_MINCLNR 'DEFINED-ON-LINE '1545) 
(PUT 'IBALP_MINCLNR 'DEFINED-IN-FILE 'REDLOG/IBALP/IBALPQSAT.RED) 
(PUT 'IBALP_MINCLNR 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE IBALP_MINCLNR (CLAUSEL)
    (PROG (MIN)
      (SETQ MIN 100000)
      (PROG (C)
        (SETQ C CLAUSEL)
       LAB
        (COND ((NULL C) (RETURN NIL)))
        ((LAMBDA (C)
           (COND
            ((NULL (CAR (CDDDDR C)))
             (COND
              ((LESSP (PLUS (CADDR C) (CADDDR C)) MIN)
               (SETQ MIN (PLUS (CADDR C) (CADDDR C))))))))
         (CAR C))
        (SETQ C (CDR C))
        (GO LAB))
      (RETURN MIN))) 
(PUT 'IBALP_CALCMOM 'NUMBER-OF-ARGS 1) 
(PUT 'IBALP_CALCMOM 'DEFINED-ON-LINE '1560) 
(PUT 'IBALP_CALCMOM 'DEFINED-IN-FILE 'REDLOG/IBALP/IBALPQSAT.RED) 
(PUT 'IBALP_CALCMOM 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE IBALP_CALCMOM (VAR)
    (PLUS (TIMES (PLUS (CAR (CDDDDR VAR)) (CADR (CDDDDR VAR))) 32)
          (TIMES (CAR (CDDDDR VAR)) (CADR (CDDDDR VAR))))) 
(PUT 'IBALP_CEC 'NUMBER-OF-ARGS 1) 
(PUT 'IBALP_CEC 'DEFINED-ON-LINE '1566) 
(PUT 'IBALP_CEC 'DEFINED-IN-FILE 'REDLOG/IBALP/IBALPQSAT.RED) 
(PUT 'IBALP_CEC 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE IBALP_CEC (CLAUSEL)
    (COND ((NULL CLAUSEL) NIL)
          ((IBALP_EMPTYCLAUSEP (CAR CLAUSEL)) (CAR CLAUSEL))
          (T (IBALP_CEC (CDR CLAUSEL))))) 
(DE IBALP_EMPTYCLAUSEP (CLAUSE)
    (AND (NULL (CAR (CDDDDR CLAUSE))) (EQN (CADDR CLAUSE) 0)
         (EQN (CADDDR CLAUSE) 0))) 
(PUT 'IBALP_EMPTYCLAUSEP 'NUMBER-OF-ARGS 1) 
(PUT 'IBALP_EMPTYCLAUSEP 'DEFINED-ON-LINE '1577) 
(PUT 'IBALP_EMPTYCLAUSEP 'DEFINED-IN-FILE 'REDLOG/IBALP/IBALPQSAT.RED) 
(PUT 'IBALP_EMPTYCLAUSEP 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(PUTC 'IBALP_EMPTYCLAUSEP 'INLINE
      '(LAMBDA (CLAUSE)
         (AND (NULL (CAR (CDDDDR CLAUSE))) (EQN (CADDR CLAUSE) 0)
              (EQN (CADDDR CLAUSE) 0)))) 
(DE IBALP_CSAT (CLAUSEL)
    (OR (NULL CLAUSEL)
        (AND (CAR (CDDDDR (CAR CLAUSEL))) (IBALP_CSAT (CDR CLAUSEL))))) 
(PUT 'IBALP_CSAT 'NUMBER-OF-ARGS 1) 
(PUT 'IBALP_CSAT 'DEFINED-ON-LINE '1582) 
(PUT 'IBALP_CSAT 'DEFINED-IN-FILE 'REDLOG/IBALP/IBALPQSAT.RED) 
(PUT 'IBALP_CSAT 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(PUTC 'IBALP_CSAT 'INLINE
      '(LAMBDA (CLAUSEL)
         (OR (NULL CLAUSEL)
             (AND (CAR (CDDDDR (CAR CLAUSEL))) (IBALP_CSAT (CDR CLAUSEL)))))) 
(DE IBALP_CV (VARAL)
    (COND ((NULL (CADR (CDAR VARAL))) (CDAR VARAL)) (T (IBALP_CV (CDR VARAL))))) 
(PUT 'IBALP_CV 'NUMBER-OF-ARGS 1) 
(PUT 'IBALP_CV 'DEFINED-ON-LINE '1588) 
(PUT 'IBALP_CV 'DEFINED-IN-FILE 'REDLOG/IBALP/IBALPQSAT.RED) 
(PUT 'IBALP_CV 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(PUTC 'IBALP_CV 'INLINE
      '(LAMBDA (VARAL)
         (COND ((NULL (CADR (CDAR VARAL))) (CDAR VARAL))
               (T (IBALP_CV (CDR VARAL)))))) 
(PUT 'IBALP_VAR-SET 'NUMBER-OF-ARGS 4) 
(PUT 'IBALP_VAR-SET 'DEFINED-ON-LINE '1596) 
(PUT 'IBALP_VAR-SET 'DEFINED-IN-FILE 'REDLOG/IBALP/IBALPQSAT.RED) 
(PUT 'IBALP_VAR-SET 'PROCEDURE_TYPE
     '(ARROW (TIMES GENERAL GENERAL GENERAL GENERAL) GENERAL)) 
(DE IBALP_VAR-SET (VAR VAL LEVEL REAS)
    (PROG (ID SC UPL)
      (SETCAR (CDR VAR) VAL)
      (SETCAR (CDDR (CDDDDR VAR)) LEVEL)
      (SETCAR (CDDDR (CDDDDR VAR)) REAS)
      (SETQ ID (CAR VAR))
      (SETQ SC (COND ((EQN VAL 0) (CADDDR VAR)) (T (CADDR VAR))))
      (IBALP_VAR-SATLIST SC ID)
      (SETQ SC (COND ((EQN VAL 1) (CADDDR VAR)) (T (CADDR VAR))))
      (IBALP_VAR-UNSATLIST SC VAL)
      (SETQ UPL (IBALP_VAR-WCLIST VAR))
      (SETCAR (CDDDR (CDDDDR (CDDDDR VAR))) (IBALP_CALCMOM VAR))
      (RETURN UPL))) 
(PUT 'IBALP_VAR-SATLIST 'NUMBER-OF-ARGS 2) 
(PUT 'IBALP_VAR-SATLIST 'DEFINED-ON-LINE '1622) 
(PUT 'IBALP_VAR-SATLIST 'DEFINED-IN-FILE 'REDLOG/IBALP/IBALPQSAT.RED) 
(PUT 'IBALP_VAR-SATLIST 'PROCEDURE_TYPE
     '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE IBALP_VAR-SATLIST (SC ID)
    (PROG (CLAUSE)
      (SETQ CLAUSE SC)
     LAB
      (COND ((NULL CLAUSE) (RETURN NIL)))
      ((LAMBDA (CLAUSE)
         (PROGN
          (COND
           ((NULL (CAR (CDDDDR CLAUSE)))
            (PROGN
             (PROG (V)
               (SETQ V (CAR CLAUSE))
              LAB
               (COND ((NULL V) (RETURN NIL)))
               ((LAMBDA (V)
                  (PROGN
                   (SETCAR (CDDDDR V) (DIFFERENCE (CAR (CDDDDR V)) 1))
                   (SETCAR (CDDDR (CDDDDR (CDDDDR V))) (IBALP_CALCMOM V))))
                (CAR V))
               (SETQ V (CDR V))
               (GO LAB))
             (PROG (V)
               (SETQ V (CADR CLAUSE))
              LAB
               (COND ((NULL V) (RETURN NIL)))
               ((LAMBDA (V)
                  (PROGN
                   (SETCAR (CDR (CDDDDR V)) (DIFFERENCE (CADR (CDDDDR V)) 1))
                   (SETCAR (CDDDR (CDDDDR (CDDDDR V))) (IBALP_CALCMOM V))))
                (CAR V))
               (SETQ V (CDR V))
               (GO LAB))
             (PROG (V)
               (SETQ V (CADDR (CDDDDR CLAUSE)))
              LAB
               (COND ((NULL V) (RETURN NIL)))
               ((LAMBDA (V)
                  (PROGN
                   (SETCAR (CDDR (CDDDDR (CDDDDR V)))
                           (LTO_DELQ CLAUSE (CADDR (CDDDDR (CDDDDR V)))))))
                (CAR V))
               (SETQ V (CDR V))
               (GO LAB))
             (SETCAR (CDDR (CDDDDR CLAUSE)) NIL)
             NIL)))
          (SETCAR (CDDDDR CLAUSE) (CONS ID (CAR (CDDDDR CLAUSE))))))
       (CAR CLAUSE))
      (SETQ CLAUSE (CDR CLAUSE))
      (GO LAB))) 
(PUT 'IBALP_VAR-UNSATLIST 'NUMBER-OF-ARGS 2) 
(PUT 'IBALP_VAR-UNSATLIST 'DEFINED-ON-LINE '1644) 
(PUT 'IBALP_VAR-UNSATLIST 'DEFINED-IN-FILE 'REDLOG/IBALP/IBALPQSAT.RED) 
(PUT 'IBALP_VAR-UNSATLIST 'PROCEDURE_TYPE
     '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE IBALP_VAR-UNSATLIST (SC VAL)
    (PROG (CLAUSE)
      (SETQ CLAUSE SC)
     LAB
      (COND ((NULL CLAUSE) (RETURN NIL)))
      ((LAMBDA (CLAUSE)
         (COND
          ((EQN VAL 1) (SETCAR (CDDDR CLAUSE) (DIFFERENCE (CADDDR CLAUSE) 1)))
          (T (SETCAR (CDDR CLAUSE) (DIFFERENCE (CADDR CLAUSE) 1)))))
       (CAR CLAUSE))
      (SETQ CLAUSE (CDR CLAUSE))
      (GO LAB))) 
(PUT 'IBALP_VAR-WCLIST 'NUMBER-OF-ARGS 1) 
(PUT 'IBALP_VAR-WCLIST 'DEFINED-ON-LINE '1656) 
(PUT 'IBALP_VAR-WCLIST 'DEFINED-IN-FILE 'REDLOG/IBALP/IBALPQSAT.RED) 
(PUT 'IBALP_VAR-WCLIST 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE IBALP_VAR-WCLIST (VAR)
    (PROG (NEWWL UPL)
      (PROG (C)
        (SETQ C (CADDR (CDDDDR (CDDDDR VAR))))
       LAB
        (COND ((NULL C) (RETURN NIL)))
        ((LAMBDA (C)
           (COND
            ((NULL (CAR (CDDDDR C)))
             (PROGN
              (SETCAR (CDDR (CDDDDR C)) (LTO_DELQ VAR (CADDR (CDDDDR C))))
              (SETCAR (CDDR (CDDDDR (CDDDDR VAR)))
                      (LTO_DELQ C (CADDR (CDDDDR (CDDDDR VAR)))))
              (SETQ NEWWL (IBALP_GETNEWWL C))
              (COND ((NULL NEWWL) (SETQ UPL (CONS C UPL)))
                    (T
                     (PROGN
                      (SETCAR (CDDR (CDDDDR C))
                              (CONS NEWWL (CADDR (CDDDDR C))))
                      (SETCAR (CDDR (CDDDDR (CDDDDR NEWWL)))
                              (CONS C (CADDR (CDDDDR (CDDDDR NEWWL))))))))))))
         (CAR C))
        (SETQ C (CDR C))
        (GO LAB))
      (RETURN UPL))) 
(PUT 'IBALP_VAR-SETQ 'NUMBER-OF-ARGS 4) 
(PUT 'IBALP_VAR-SETQ 'DEFINED-ON-LINE '1675) 
(PUT 'IBALP_VAR-SETQ 'DEFINED-IN-FILE 'REDLOG/IBALP/IBALPQSAT.RED) 
(PUT 'IBALP_VAR-SETQ 'PROCEDURE_TYPE
     '(ARROW (TIMES GENERAL GENERAL GENERAL GENERAL) GENERAL)) 
(DE IBALP_VAR-SETQ (VAR VAL LEVEL REAS)
    (PROG (CLAUSE ID SC UPL H EC)
      (SETCAR (CDR VAR) VAL)
      (SETCAR (CDDR (CDDDDR VAR)) LEVEL)
      (SETCAR (CDDDR (CDDDDR VAR)) REAS)
      (SETQ ID (CAR VAR))
      (SETQ SC (COND ((EQN VAL 0) (CADDDR VAR)) (T (CADDR VAR))))
      (IBALP_VAR-SATLISTQ SC ID)
      (SETQ SC (COND ((EQN VAL 1) (CADDDR VAR)) (T (CADDR VAR))))
      (PROG (CLAUSE)
        (SETQ CLAUSE SC)
       LAB
        (COND ((NULL CLAUSE) (RETURN NIL)))
        ((LAMBDA (CLAUSE)
           (PROGN
            (COND
             ((EQN VAL 1)
              (SETCAR (CDDDR CLAUSE) (DIFFERENCE (CADDDR CLAUSE) 1)))
             (T (SETCAR (CDDR CLAUSE) (DIFFERENCE (CADDR CLAUSE) 1))))
            (COND
             ((SETQ H (IBALP_QSAT-ISUNIT CLAUSE))
              (SETQ UPL (CONS (CONS H CLAUSE) UPL))))
            (COND ((IBALP_QSAT-ISEC CLAUSE) (SETQ EC CLAUSE)))))
         (CAR CLAUSE))
        (SETQ CLAUSE (CDR CLAUSE))
        (GO LAB))
      (SETCAR (CDDDR (CDDDDR (CDDDDR VAR))) (IBALP_CALCMOM VAR))
      (RETURN (CONS UPL EC)))) 
(PUT 'IBALP_VAR-SATLISTQ 'NUMBER-OF-ARGS 2) 
(PUT 'IBALP_VAR-SATLISTQ 'DEFINED-ON-LINE '1710) 
(PUT 'IBALP_VAR-SATLISTQ 'DEFINED-IN-FILE 'REDLOG/IBALP/IBALPQSAT.RED) 
(PUT 'IBALP_VAR-SATLISTQ 'PROCEDURE_TYPE
     '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE IBALP_VAR-SATLISTQ (SC ID)
    (PROG (CLAUSE)
      (SETQ CLAUSE SC)
     LAB
      (COND ((NULL CLAUSE) (RETURN NIL)))
      ((LAMBDA (CLAUSE)
         (PROGN
          (COND
           ((NULL (CAR (CDDDDR CLAUSE)))
            (PROGN
             (PROG (V)
               (SETQ V (CAR CLAUSE))
              LAB
               (COND ((NULL V) (RETURN NIL)))
               ((LAMBDA (V)
                  (PROGN
                   (SETCAR (CDDDDR V) (DIFFERENCE (CAR (CDDDDR V)) 1))
                   (SETCAR (CDDDR (CDDDDR (CDDDDR V))) (IBALP_CALCMOM V))))
                (CAR V))
               (SETQ V (CDR V))
               (GO LAB))
             (PROG (V)
               (SETQ V (CADR CLAUSE))
              LAB
               (COND ((NULL V) (RETURN NIL)))
               ((LAMBDA (V)
                  (PROGN
                   (SETCAR (CDR (CDDDDR V)) (DIFFERENCE (CADR (CDDDDR V)) 1))
                   (SETCAR (CDDDR (CDDDDR (CDDDDR V))) (IBALP_CALCMOM V))))
                (CAR V))
               (SETQ V (CDR V))
               (GO LAB))
             NIL)))
          (SETCAR (CDDDDR CLAUSE) (CONS ID (CAR (CDDDDR CLAUSE))))))
       (CAR CLAUSE))
      (SETQ CLAUSE (CDR CLAUSE))
      (GO LAB))) 
(PUT 'IBALP_VAR-UNSET 'NUMBER-OF-ARGS 2) 
(PUT 'IBALP_VAR-UNSET 'DEFINED-ON-LINE '1728) 
(PUT 'IBALP_VAR-UNSET 'DEFINED-IN-FILE 'REDLOG/IBALP/IBALPQSAT.RED) 
(PUT 'IBALP_VAR-UNSET 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE IBALP_VAR-UNSET (VAR VAL)
    (PROG (CLAUSE ID SC)
      (SETCAR (CDR VAR) NIL)
      (SETCAR (CDDR (CDDDDR VAR)) (MINUS 1))
      (SETCAR (CDDDR (CDDDDR VAR)) NIL)
      (SETQ ID (CAR VAR))
      (SETQ SC (COND ((EQN VAL 1) (CADDDR VAR)) (T (CADDR VAR))))
      (PROG (CLAUSE)
        (SETQ CLAUSE SC)
       LAB
        (COND ((NULL CLAUSE) (RETURN NIL)))
        ((LAMBDA (CLAUSE)
           (PROGN
            (COND
             ((EQN VAL 1) (SETCAR (CDDDR CLAUSE) (PLUS (CADDDR CLAUSE) 1)))
             (T (SETCAR (CDDR CLAUSE) (PLUS (CADDR CLAUSE) 1))))))
         (CAR CLAUSE))
        (SETQ CLAUSE (CDR CLAUSE))
        (GO LAB))
      (SETQ SC (COND ((EQN VAL 0) (CADDDR VAR)) (T (CADDR VAR))))
      (IBALP_UNVAR-UNSATLIST SC ID)
      (SETCAR (CDDDR (CDDDDR (CDDDDR VAR))) (IBALP_CALCMOM VAR)))) 
(PUT 'IBALP_UNVAR-UNSATLIST 'NUMBER-OF-ARGS 2) 
(PUT 'IBALP_UNVAR-UNSATLIST 'DEFINED-ON-LINE '1757) 
(PUT 'IBALP_UNVAR-UNSATLIST 'DEFINED-IN-FILE 'REDLOG/IBALP/IBALPQSAT.RED) 
(PUT 'IBALP_UNVAR-UNSATLIST 'PROCEDURE_TYPE
     '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE IBALP_UNVAR-UNSATLIST (SC ID)
    (PROG (NEWWL)
      (PROG (CLAUSE)
        (SETQ CLAUSE SC)
       LAB
        (COND ((NULL CLAUSE) (RETURN NIL)))
        ((LAMBDA (CLAUSE)
           (PROGN
            (SETCAR (CDDDDR CLAUSE) (LTO_DELQ ID (CAR (CDDDDR CLAUSE))))
            (COND
             ((NULL (CAR (CDDDDR CLAUSE)))
              (PROGN
               (PROG (V)
                 (SETQ V (CAR CLAUSE))
                LAB
                 (COND ((NULL V) (RETURN NIL)))
                 ((LAMBDA (V)
                    (PROGN
                     (SETCAR (CDDDDR V) (PLUS (CAR (CDDDDR V)) 1))
                     (SETCAR (CDDDR (CDDDDR (CDDDDR V))) (IBALP_CALCMOM V))))
                  (CAR V))
                 (SETQ V (CDR V))
                 (GO LAB))
               (PROG (V)
                 (SETQ V (CADR CLAUSE))
                LAB
                 (COND ((NULL V) (RETURN NIL)))
                 ((LAMBDA (V)
                    (PROGN
                     (SETCAR (CDR (CDDDDR V)) (PLUS (CADR (CDDDDR V)) 1))
                     (SETCAR (CDDDR (CDDDDR (CDDDDR V))) (IBALP_CALCMOM V))))
                  (CAR V))
                 (SETQ V (CDR V))
                 (GO LAB))
               (PROG (V)
                 (SETQ V (CADDR (CDDDDR CLAUSE)))
                LAB
                 (COND ((NULL V) (RETURN NIL)))
                 ((LAMBDA (V)
                    (PROGN
                     (SETCAR (CDDR (CDDDDR (CDDDDR V)))
                             (LTO_DELQ CLAUSE (CADDR (CDDDDR (CDDDDR V)))))))
                  (CAR V))
                 (SETQ V (CDR V))
                 (GO LAB))
               (SETCAR (CDDR (CDDDDR CLAUSE)) NIL)
               (SETQ NEWWL (IBALP_GETNEWWL CLAUSE))
               (SETCAR (CDDR (CDDDDR CLAUSE))
                       (CONS NEWWL (CADDR (CDDDDR CLAUSE))))
               (SETCAR (CDDR (CDDDDR (CDDDDR NEWWL)))
                       (CONS CLAUSE (CADDR (CDDDDR (CDDDDR NEWWL)))))
               (SETQ NEWWL (IBALP_GETNEWWL CLAUSE))
               (COND
                (NEWWL
                 (PROGN
                  (SETCAR (CDDR (CDDDDR CLAUSE))
                          (CONS NEWWL (CADDR (CDDDDR CLAUSE))))
                  (SETCAR (CDDR (CDDDDR (CDDDDR NEWWL)))
                          (CONS CLAUSE
                                (CADDR (CDDDDR (CDDDDR NEWWL)))))))))))))
         (CAR CLAUSE))
        (SETQ CLAUSE (CDR CLAUSE))
        (GO LAB)))) 
(PUT 'IBALP_VAR-UNSETQ 'NUMBER-OF-ARGS 2) 
(PUT 'IBALP_VAR-UNSETQ 'DEFINED-ON-LINE '1789) 
(PUT 'IBALP_VAR-UNSETQ 'DEFINED-IN-FILE 'REDLOG/IBALP/IBALPQSAT.RED) 
(PUT 'IBALP_VAR-UNSETQ 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE IBALP_VAR-UNSETQ (VAR VAL)
    (PROG (CLAUSE V ID SC)
      (SETCAR (CDR VAR) NIL)
      (SETCAR (CDDR (CDDDDR VAR)) (MINUS 1))
      (SETCAR (CDDDR (CDDDDR VAR)) NIL)
      (SETQ ID (CAR VAR))
      (SETQ SC (COND ((EQN VAL 1) (CADDDR VAR)) (T (CADDR VAR))))
      (IBALP_UNVAR-UNSATLISTQ SC VAL)
      (SETQ SC (COND ((EQN VAL 0) (CADDDR VAR)) (T (CADDR VAR))))
      (PROG (CLAUSE)
        (SETQ CLAUSE SC)
       LAB
        (COND ((NULL CLAUSE) (RETURN NIL)))
        ((LAMBDA (CLAUSE)
           (PROGN
            (SETCAR (CDDDDR CLAUSE) (LTO_DELQ ID (CAR (CDDDDR CLAUSE))))
            (COND
             ((NULL (CAR (CDDDDR CLAUSE)))
              (PROGN
               (PROG (V)
                 (SETQ V (CAR CLAUSE))
                LAB
                 (COND ((NULL V) (RETURN NIL)))
                 ((LAMBDA (V)
                    (PROGN
                     (SETCAR (CDDDDR V) (PLUS (CAR (CDDDDR V)) 1))
                     (SETCAR (CDDDR (CDDDDR (CDDDDR V))) (IBALP_CALCMOM V))))
                  (CAR V))
                 (SETQ V (CDR V))
                 (GO LAB))
               (PROG (V)
                 (SETQ V (CADR CLAUSE))
                LAB
                 (COND ((NULL V) (RETURN NIL)))
                 ((LAMBDA (V)
                    (PROGN
                     (SETCAR (CDR (CDDDDR V)) (PLUS (CADR (CDDDDR V)) 1))
                     (SETCAR (CDDDR (CDDDDR (CDDDDR V))) (IBALP_CALCMOM V))))
                  (CAR V))
                 (SETQ V (CDR V))
                 (GO LAB))
               NIL)))))
         (CAR CLAUSE))
        (SETQ CLAUSE (CDR CLAUSE))
        (GO LAB))
      (SETCAR (CDDDR (CDDDDR (CDDDDR VAR))) (IBALP_CALCMOM VAR)))) 
(PUT 'IBALP_UNVAR-UNSATLISTQ 'NUMBER-OF-ARGS 2) 
(PUT 'IBALP_UNVAR-UNSATLISTQ 'DEFINED-ON-LINE '1823) 
(PUT 'IBALP_UNVAR-UNSATLISTQ 'DEFINED-IN-FILE 'REDLOG/IBALP/IBALPQSAT.RED) 
(PUT 'IBALP_UNVAR-UNSATLISTQ 'PROCEDURE_TYPE
     '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE IBALP_UNVAR-UNSATLISTQ (SC VAL)
    (PROG (CLAUSE)
      (SETQ CLAUSE SC)
     LAB
      (COND ((NULL CLAUSE) (RETURN NIL)))
      ((LAMBDA (CLAUSE)
         (PROGN
          (COND ((EQN VAL 1) (SETCAR (CDDDR CLAUSE) (PLUS (CADDDR CLAUSE) 1)))
                (T (SETCAR (CDDR CLAUSE) (PLUS (CADDR CLAUSE) 1))))))
       (CAR CLAUSE))
      (SETQ CLAUSE (CDR CLAUSE))
      (GO LAB))) 
(PUT 'IBALP_GETNEWWL 'NUMBER-OF-ARGS 1) 
(PUT 'IBALP_GETNEWWL 'DEFINED-ON-LINE '1836) 
(PUT 'IBALP_GETNEWWL 'DEFINED-IN-FILE 'REDLOG/IBALP/IBALPQSAT.RED) 
(PUT 'IBALP_GETNEWWL 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE IBALP_GETNEWWL (CLAUSE)
    (PROG (TL WL)
      (SETQ TL (CAR CLAUSE))
      (PROG ()
       WHILELABEL
        (COND ((NOT (AND TL (NULL WL))) (RETURN NIL)))
        (PROGN
         (COND
          ((AND (NULL (CADR (CAR TL)))
                (NULL (MEMQ (CAR TL) (CADDR (CDDDDR CLAUSE)))))
           (SETQ WL (CAR TL))))
         (SETQ TL (CDR TL)))
        (GO WHILELABEL))
      (SETQ TL (CADR CLAUSE))
      (PROG ()
       WHILELABEL
        (COND ((NOT (AND TL (NULL WL))) (RETURN NIL)))
        (PROGN
         (COND
          ((AND (NULL (CADR (CAR TL)))
                (NULL (MEMQ (CAR TL) (CADDR (CDDDDR CLAUSE)))))
           (SETQ WL (CAR TL))))
         (SETQ TL (CDR TL)))
        (GO WHILELABEL))
      (RETURN WL))) 
(DE IBALP_ISCNF (F)
    (OR (IBALP_CLAUSEP F)
        (AND (EQ (COND ((ATOM F) F) (T (CAR F))) 'AND)
             (IBALP_CLAUSELP (CDR F))))) 
(PUT 'IBALP_ISCNF 'NUMBER-OF-ARGS 1) 
(PUT 'IBALP_ISCNF 'DEFINED-ON-LINE '1859) 
(PUT 'IBALP_ISCNF 'DEFINED-IN-FILE 'REDLOG/IBALP/IBALPQSAT.RED) 
(PUT 'IBALP_ISCNF 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(PUTC 'IBALP_ISCNF 'INLINE
      '(LAMBDA (F)
         (OR (IBALP_CLAUSEP F)
             (AND (EQ (COND ((ATOM F) F) (T (CAR F))) 'AND)
                  (IBALP_CLAUSELP (CDR F)))))) 
(PUT 'IBALP_CLAUSELP 'NUMBER-OF-ARGS 1) 
(PUT 'IBALP_CLAUSELP 'DEFINED-ON-LINE '1862) 
(PUT 'IBALP_CLAUSELP 'DEFINED-IN-FILE 'REDLOG/IBALP/IBALPQSAT.RED) 
(PUT 'IBALP_CLAUSELP 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE IBALP_CLAUSELP (L)
    (OR (NULL L) (AND (IBALP_CLAUSEP (CAR L)) (IBALP_CLAUSELP (CDR L))))) 
(DE IBALP_CLAUSEP (S)
    (OR (IBALP_LITP S)
        (AND (EQ (COND ((ATOM S) S) (T (CAR S))) 'OR) (IBALP_LITLP (CDR S))))) 
(PUT 'IBALP_CLAUSEP 'NUMBER-OF-ARGS 1) 
(PUT 'IBALP_CLAUSEP 'DEFINED-ON-LINE '1865) 
(PUT 'IBALP_CLAUSEP 'DEFINED-IN-FILE 'REDLOG/IBALP/IBALPQSAT.RED) 
(PUT 'IBALP_CLAUSEP 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(PUTC 'IBALP_CLAUSEP 'INLINE
      '(LAMBDA (S)
         (OR (IBALP_LITP S)
             (AND (EQ (COND ((ATOM S) S) (T (CAR S))) 'OR)
                  (IBALP_LITLP (CDR S)))))) 
(PUT 'IBALP_LITLP 'NUMBER-OF-ARGS 1) 
(PUT 'IBALP_LITLP 'DEFINED-ON-LINE '1868) 
(PUT 'IBALP_LITLP 'DEFINED-IN-FILE 'REDLOG/IBALP/IBALPQSAT.RED) 
(PUT 'IBALP_LITLP 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE IBALP_LITLP (L)
    (OR (NULL L) (AND (IBALP_LITP (CAR L)) (IBALP_LITLP (CDR L))))) 
(DE IBALP_LITP (S)
    (OR (IBALP_ATOMP S)
        (AND (EQ (COND ((ATOM S) S) (T (CAR S))) 'NOT) (IBALP_ATOMP (CADR S))))) 
(PUT 'IBALP_LITP 'NUMBER-OF-ARGS 1) 
(PUT 'IBALP_LITP 'DEFINED-ON-LINE '1871) 
(PUT 'IBALP_LITP 'DEFINED-IN-FILE 'REDLOG/IBALP/IBALPQSAT.RED) 
(PUT 'IBALP_LITP 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(PUTC 'IBALP_LITP 'INLINE
      '(LAMBDA (S)
         (OR (IBALP_ATOMP S)
             (AND (EQ (COND ((ATOM S) S) (T (CAR S))) 'NOT)
                  (IBALP_ATOMP (CADR S)))))) 
(PUT 'IBALP_ATOMP 'NUMBER-OF-ARGS 1) 
(PUT 'IBALP_ATOMP 'DEFINED-ON-LINE '1874) 
(PUT 'IBALP_ATOMP 'DEFINED-IN-FILE 'REDLOG/IBALP/IBALPQSAT.RED) 
(PUT 'IBALP_ATOMP 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE IBALP_ATOMP (S)
    (OR (OR (EQ S 'TRUE) (EQ S 'FALSE))
        (AND (EQ (COND ((ATOM S) S) (T (CAR S))) 'EQUAL) (IDP (CADR S))
             (NUMBERP (CADDR S))))) 
(PUT 'IBALP_READFORM 'NUMBER-OF-ARGS 1) 
(PUT 'IBALP_READFORM 'DEFINED-ON-LINE '1878) 
(PUT 'IBALP_READFORM 'DEFINED-IN-FILE 'REDLOG/IBALP/IBALPQSAT.RED) 
(PUT 'IBALP_READFORM 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE IBALP_READFORM (F)
    (PROG (PAIR CLAUSEL VARAL CLAUSE ARGN X C COUNT)
      (SETQ COUNT 0)
      (SETQ F (CL_MKSTRICT F 'AND))
      (SETQ ARGN (CDR F))
      (SETQ C T)
      (PROG ()
       WHILELABEL
        (COND ((NOT (AND C ARGN)) (RETURN NIL)))
        (PROGN
         (SETQ X (CAR ARGN))
         (SETQ ARGN (CDR ARGN))
         (SETQ PAIR (IBALP_READCLAUSE X VARAL))
         (SETQ CLAUSE (CAR PAIR))
         (SETQ VARAL (CDR PAIR))
         (COND
          ((NEQ CLAUSE 'TRUE)
           (PROGN
            (COND
             ((AND (NULL (CAR (CDDDDR CLAUSE))) (EQN (CADDR CLAUSE) 0)
                   (EQN (CADDDR CLAUSE) 0))
              (SETQ C NIL))
             (T
              (COND
               ((OR (IBALP_CLMEMBER CLAUSE CLAUSEL) (IBALP_REDCLAUSE CLAUSE))
                (PROGN (IBALP_UNDOCLAUSE CLAUSE) (SETQ COUNT (PLUS COUNT 1))))
               (T (SETQ CLAUSEL (CONS (CAR PAIR) CLAUSEL))))))))))
        (GO WHILELABEL))
      (COND
       ((NULL C)
        (PROGN
         (COND (*RLVERBOSE (IOTO_TPRIN2T (LIST "Detected empty clause"))))
         (RETURN (CONS (LIST CLAUSE) NIL)))))
      (COND
       ((NULL CLAUSEL)
        (PROGN
         (COND (*RLVERBOSE (IOTO_TPRIN2T (LIST "Tautology detected"))))
         (RETURN (CONS NIL NIL)))))
      (COND
       (*RLVERBOSE (IOTO_TPRIN2T (LIST "Deleted redundant clauses: " COUNT))))
      (RETURN (CONS CLAUSEL VARAL)))) 
(PUT 'IBALP_CLMEMBER 'NUMBER-OF-ARGS 2) 
(PUT 'IBALP_CLMEMBER 'DEFINED-ON-LINE '1917) 
(PUT 'IBALP_CLMEMBER 'DEFINED-IN-FILE 'REDLOG/IBALP/IBALPQSAT.RED) 
(PUT 'IBALP_CLMEMBER 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE IBALP_CLMEMBER (X L)
    (AND L (OR (IBALP_CEQUAL X (CAR L)) (IBALP_CLMEMBER X (CDR L))))) 
(PUT 'IBALP_CEQUAL 'NUMBER-OF-ARGS 2) 
(PUT 'IBALP_CEQUAL 'DEFINED-ON-LINE '1941) 
(PUT 'IBALP_CEQUAL 'DEFINED-IN-FILE 'REDLOG/IBALP/IBALPQSAT.RED) 
(PUT 'IBALP_CEQUAL 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE IBALP_CEQUAL (C1 C2)
    (PROG (POSLITL1 NEGLITL1 POSLITL2 NEGLITL2)
      (PROG (V)
        (SETQ V (CAR C1))
       LAB
        (COND ((NULL V) (RETURN NIL)))
        ((LAMBDA (V) (SETQ POSLITL1 (CONS (CAR V) POSLITL1))) (CAR V))
        (SETQ V (CDR V))
        (GO LAB))
      (PROG (V)
        (SETQ V (CAR C2))
       LAB
        (COND ((NULL V) (RETURN NIL)))
        ((LAMBDA (V) (SETQ POSLITL2 (CONS (CAR V) POSLITL2))) (CAR V))
        (SETQ V (CDR V))
        (GO LAB))
      (COND ((NOT (LTO_SETEQUALQ POSLITL1 POSLITL2)) (RETURN NIL)))
      (PROG (V)
        (SETQ V (CADR C1))
       LAB
        (COND ((NULL V) (RETURN NIL)))
        ((LAMBDA (V) (SETQ NEGLITL1 (CONS (CAR V) NEGLITL1))) (CAR V))
        (SETQ V (CDR V))
        (GO LAB))
      (PROG (V)
        (SETQ V (CADR C2))
       LAB
        (COND ((NULL V) (RETURN NIL)))
        ((LAMBDA (V) (SETQ NEGLITL2 (CONS (CAR V) NEGLITL2))) (CAR V))
        (SETQ V (CDR V))
        (GO LAB))
      (RETURN (LTO_SETEQUALQ NEGLITL1 NEGLITL2)))) 
(PUT 'IBALP_UNDOCLAUSE 'NUMBER-OF-ARGS 1) 
(PUT 'IBALP_UNDOCLAUSE 'DEFINED-ON-LINE '1955) 
(PUT 'IBALP_UNDOCLAUSE 'DEFINED-IN-FILE 'REDLOG/IBALP/IBALPQSAT.RED) 
(PUT 'IBALP_UNDOCLAUSE 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE IBALP_UNDOCLAUSE (CLAUSE)
    (PROGN
     (PROG (V)
       (SETQ V (CAR CLAUSE))
      LAB
       (COND ((NULL V) (RETURN NIL)))
       ((LAMBDA (V)
          (PROGN
           (SETCAR (CDDR V) (LTO_DELQ CLAUSE (CADDR V)))
           (SETCAR (CDDDDR V) (DIFFERENCE (CAR (CDDDDR V)) 1))
           (SETCAR (CDDDDR (CDDDDR V))
                   (DIFFERENCE (CAR (CDDDDR (CDDDDR V))) 1))))
        (CAR V))
       (SETQ V (CDR V))
       (GO LAB))
     (PROG (V)
       (SETQ V (CADR CLAUSE))
      LAB
       (COND ((NULL V) (RETURN NIL)))
       ((LAMBDA (V)
          (PROGN
           (SETCAR (CDDDR V) (LTO_DELQ CLAUSE (CADDDR V)))
           (SETCAR (CDR (CDDDDR V)) (DIFFERENCE (CADR (CDDDDR V)) 1))
           (SETCAR (CDR (CDDDDR (CDDDDR V)))
                   (DIFFERENCE (CADR (CDDDDR (CDDDDR V))) 1))))
        (CAR V))
       (SETQ V (CDR V))
       (GO LAB)))) 
(PUT 'IBALP_REDCLAUSE 'NUMBER-OF-ARGS 1) 
(PUT 'IBALP_REDCLAUSE 'DEFINED-ON-LINE '1970) 
(PUT 'IBALP_REDCLAUSE 'DEFINED-IN-FILE 'REDLOG/IBALP/IBALPQSAT.RED) 
(PUT 'IBALP_REDCLAUSE 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE IBALP_REDCLAUSE (CLAUSE)
    (PROG (TV RET)
      (SETQ TV (CAR CLAUSE))
      (PROG ()
       WHILELABEL
        (COND ((NOT (AND TV (NULL RET))) (RETURN NIL)))
        (PROGN
         (COND ((IBALP_VMEMBER (CAR TV) (CADR CLAUSE)) (SETQ RET T)))
         (SETQ TV (CDR TV)))
        (GO WHILELABEL))
      (RETURN RET))) 
(PUT 'IBALP_VMEMBER 'NUMBER-OF-ARGS 2) 
(PUT 'IBALP_VMEMBER 'DEFINED-ON-LINE '1983) 
(PUT 'IBALP_VMEMBER 'DEFINED-IN-FILE 'REDLOG/IBALP/IBALPQSAT.RED) 
(PUT 'IBALP_VMEMBER 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE IBALP_VMEMBER (V VL)
    (AND VL (OR (IBALP_VEQUAL V (CAR VL)) (IBALP_VMEMBER V (CDR VL))))) 
(DE IBALP_VEQUAL (V1 V2) (EQ (CAR V1) (CAR V2))) 
(PUT 'IBALP_VEQUAL 'NUMBER-OF-ARGS 2) 
(PUT 'IBALP_VEQUAL 'DEFINED-ON-LINE '1986) 
(PUT 'IBALP_VEQUAL 'DEFINED-IN-FILE 'REDLOG/IBALP/IBALPQSAT.RED) 
(PUT 'IBALP_VEQUAL 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(PUTC 'IBALP_VEQUAL 'INLINE '(LAMBDA (V1 V2) (EQ (CAR V1) (CAR V2)))) 
(PUT 'IBALP_READCLAUSE 'NUMBER-OF-ARGS 2) 
(PUT 'IBALP_READCLAUSE 'DEFINED-ON-LINE '1989) 
(PUT 'IBALP_READCLAUSE 'DEFINED-IN-FILE 'REDLOG/IBALP/IBALPQSAT.RED) 
(PUT 'IBALP_READCLAUSE 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE IBALP_READCLAUSE (C VARAL)
    (PROG (X ID VAL CLAUSE NC POSIDS NEGIDS CNT)
      (SETQ NC (CDR C))
      (SETQ CLAUSE (LIST NIL NIL 0 0 NIL NIL NIL))
      (SETQ CNT T)
      (PROG ()
       WHILELABEL
        (COND ((NOT (AND CNT NC)) (RETURN NIL)))
        (PROGN
         (SETQ X (CAR NC))
         (COND ((EQ X 'TRUE) (SETQ CNT NIL))
               (T
                (PROGN
                 (SETQ NC (CDR NC))
                 (COND
                  ((NEQ X 'FALSE)
                   (PROGN
                    (COND
                     ((EQ (COND ((ATOM X) X) (T (CAR X))) 'NOT)
                      (PROGN
                       (SETQ ID (CADR (CADR X)))
                       (SETQ VAL (IDIFFERENCE 1 (CADDR (CADR X))))))
                     (T (PROGN (SETQ ID (CADR X)) (SETQ VAL (CADDR X)))))
                    (COND
                     ((IEQUAL VAL 1)
                      (PROGN
                       (COND
                        ((NOT (MEMQ ID POSIDS))
                         (PROGN
                          (SETCAR (CDDR CLAUSE) (PLUS (CADDR CLAUSE) 1))
                          (SETQ POSIDS (CONS ID POSIDS))
                          (SETQ VARAL
                                  (IBALP_PROCESS-VAR CLAUSE VARAL ID 1)))))))
                     (T
                      (PROGN
                       (COND
                        ((NOT (MEMQ ID NEGIDS))
                         (PROGN
                          (SETCAR (CDDDR CLAUSE) (PLUS (CADDDR CLAUSE) 1))
                          (SETQ NEGIDS (CONS ID NEGIDS))
                          (SETQ VARAL
                                  (IBALP_PROCESS-VAR CLAUSE VARAL ID
                                   0)))))))))))))))
        (GO WHILELABEL))
      (COND ((NOT CNT) (RETURN (CONS 'TRUE VARAL))))
      (RETURN (CONS CLAUSE VARAL)))) 
(PUT 'IBALP_QSAT-READDIMACS2 'NUMBER-OF-ARGS 1) 
(PUT 'IBALP_QSAT-READDIMACS2 'DEFINED-ON-LINE '2034) 
(PUT 'IBALP_QSAT-READDIMACS2 'DEFINED-IN-FILE 'REDLOG/IBALP/IBALPQSAT.RED) 
(PUT 'IBALP_QSAT-READDIMACS2 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE IBALP_QSAT-READDIMACS2 (FILE)
    (PROG (CH TOK DOIT NUMVARS NUMCLAUSES VARAL CLAUSEL PAIR QSAT)
      (SETQ CH (OPEN FILE 'INPUT))
      (RDS CH)
      (SETQ TOK (READ))
      (COND
       ((NOT (OR (EQ TOK 'P) (EQ TOK 'C)))
        (PROGN
         (REDERR "Invalid input format")
         (RDS NIL)
         (CLOSE CH)
         (RETURN (LIST 'FALSE)))))
      (COND ((EQ TOK 'C) (SETQ DOIT T)))
      (PROG ()
       WHILELABEL
        (COND ((NOT DOIT) (RETURN NIL)))
        (PROGN (SETQ TOK (READ)) (COND ((EQ TOK 'P) (SETQ DOIT NIL))))
        (GO WHILELABEL))
      (SETQ TOK (READ))
      (COND ((NOT (EQ TOK 'CNF)) (REDERR "Invalid input format")))
      (SETQ NUMVARS (READ))
      (SETQ NUMCLAUSES (READ))
      (COND
       (*RLVERBOSE
        (IOTO_TPRIN2T
         (LIST "Reading " NUMVARS " variables and " NUMCLAUSES " clauses"))))
      (SETQ TOK (READ))
      (COND
       ((OR (EQ TOK 'E) (EQ TOK 'A))
        (PROGN
         (SETQ QSAT T)
         (COND (*RLVERBOSE (IOTO_TPRIN2T "Q-SAT: Reading quantifiers")))
         (SETQ PAIR (IBALP_READQUANT-CNF TOK))
         (SETQ TOK (CAR PAIR))
         (SETQ VARAL (CDR PAIR)))))
      (SETQ PAIR (IBALP_READCLAUSE-CNF NUMCLAUSES VARAL TOK))
      (SETQ CLAUSEL (CAR PAIR))
      (SETQ VARAL (CDR PAIR))
      (RDS NIL)
      (CLOSE CH)
      (RETURN (CONS QSAT (CONS CLAUSEL VARAL))))) 
(PUT 'IBALP_READQUANT-CNF 'NUMBER-OF-ARGS 1) 
(PUT 'IBALP_READQUANT-CNF 'DEFINED-ON-LINE '2076) 
(PUT 'IBALP_READQUANT-CNF 'DEFINED-IN-FILE 'REDLOG/IBALP/IBALPQSAT.RED) 
(PUT 'IBALP_READQUANT-CNF 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE IBALP_READQUANT-CNF (TOK)
    (PROG (VARAL QUANT LEVEL DOIT QSWITCH VAR)
      (COND ((EQ TOK 'E) (SETQ QUANT 'EX)) (T (SETQ QUANT 'ALL)))
      (SETQ LEVEL 1)
      (SETQ DOIT T)
      (PROG ()
       WHILELABEL
        (COND ((NOT (OR DOIT QSWITCH)) (RETURN NIL)))
        (PROGN
         (SETQ TOK (READ))
         (COND
          ((EQN TOK 0)
           (PROGN
            (SETQ DOIT NIL)
            (SETQ TOK (READ))
            (COND
             ((OR (EQ TOK 'A) (EQ TOK 'E))
              (PROGN
               (SETQ QSWITCH T)
               (SETQ QUANT (COND ((EQ TOK 'A) 'ALL) (T 'EX)))
               (SETQ LEVEL (PLUS LEVEL 1))))
             (T (SETQ QSWITCH NIL)))
            NIL))
          (T
           (PROGN
            (SETQ VAR
                    (LIST TOK NIL NIL NIL 0 0 (MINUS 1) NIL 0 0 NIL 0 NIL 0
                          NIL))
            (SETCAR (CDR (CDDDDR (CDDDDR (CDDDDR VAR)))) LEVEL)
            (SETCAR (CDDDDR (CDDDDR (CDDDDR VAR))) QUANT)
            (SETQ VARAL (CONS (CONS TOK VAR) VARAL))
            NIL))))
        (GO WHILELABEL))
      (SETQ VARAL (REVERSE VARAL))
      (RETURN (CONS TOK VARAL)))) 
(PUT 'IBALP_READCLAUSE-CNF 'NUMBER-OF-ARGS 3) 
(PUT 'IBALP_READCLAUSE-CNF 'DEFINED-ON-LINE '2106) 
(PUT 'IBALP_READCLAUSE-CNF 'DEFINED-IN-FILE 'REDLOG/IBALP/IBALPQSAT.RED) 
(PUT 'IBALP_READCLAUSE-CNF 'PROCEDURE_TYPE
     '(ARROW (TIMES GENERAL GENERAL GENERAL) GENERAL)) 
(DE IBALP_READCLAUSE-CNF (NUMCLAUSES VARAL LT)
    (PROG (DOIT POSLIT NEGLIT CLAUSE TOK CLAUSEL FIRST COUNT)
      (SETQ COUNT 0)
      (SETQ FIRST T)
      (PROG (I)
        (SETQ I 1)
       LAB
        (COND ((MINUSP (DIFFERENCE NUMCLAUSES I)) (RETURN NIL)))
        (PROGN
         (SETQ DOIT T)
         (SETQ POSLIT NIL)
         (SETQ NEGLIT NIL)
         (SETQ CLAUSE (LIST NIL NIL 0 0 NIL NIL NIL))
         (PROG ()
          WHILELABEL
           (COND ((NOT DOIT) (RETURN NIL)))
           (PROGN
            (COND (FIRST (PROGN (SETQ TOK LT) (SETQ FIRST NIL)))
                  (T (SETQ TOK (READ))))
            (COND ((EQUAL TOK 0) (SETQ DOIT NIL))
                  ((AND (LESSP TOK 0) (NULL (MEMQ (MINUS TOK) NEGLIT)))
                   (PROGN
                    (SETCAR (CDDDR CLAUSE) (PLUS (CADDDR CLAUSE) 1))
                    (SETQ VARAL
                            (IBALP_PROCESS-VAR CLAUSE VARAL (MINUS TOK) 0))))
                  ((AND (GREATERP TOK 0) (NULL (MEMQ TOK POSLIT)))
                   (PROGN
                    (SETCAR (CDDR CLAUSE) (PLUS (CADDR CLAUSE) 1))
                    (SETQ VARAL (IBALP_PROCESS-VAR CLAUSE VARAL TOK 1))))))
           (GO WHILELABEL))
         (COND
          ((OR (IBALP_CLMEMBER CLAUSE CLAUSEL) (IBALP_REDCLAUSE CLAUSE))
           (PROGN (IBALP_UNDOCLAUSE CLAUSE) (SETQ COUNT (PLUS COUNT 1))))
          (T (SETQ CLAUSEL (CONS CLAUSE CLAUSEL))))
         NIL)
        (SETQ I (PLUS2 I 1))
        (GO LAB))
      (COND
       (*RLVERBOSE (IOTO_TPRIN2T (LIST "Deleted Redundant Clauses: " COUNT))))
      (RETURN (CONS CLAUSEL VARAL)))) 
(PUT 'IBALP_PROCESS-VAR 'NUMBER-OF-ARGS 4) 
(PUT 'IBALP_PROCESS-VAR 'DEFINED-ON-LINE '2148) 
(PUT 'IBALP_PROCESS-VAR 'DEFINED-IN-FILE 'REDLOG/IBALP/IBALPQSAT.RED) 
(PUT 'IBALP_PROCESS-VAR 'PROCEDURE_TYPE
     '(ARROW (TIMES GENERAL GENERAL GENERAL GENERAL) GENERAL)) 
(DE IBALP_PROCESS-VAR (CLAUSE VARAL ID VAL)
    (PROG (H VAR)
      (SETQ ID (INTERN (LIST2STRING (EXPLODE2 ID))))
      (COND ((SETQ H (ATSOC ID VARAL)) (SETQ VAR (CDR H)))
            (T
             (PROGN
              (SETQ VAR
                      (LIST ID NIL NIL NIL 0 0 (MINUS 1) NIL 0 0 NIL 0 NIL 0
                            NIL))
              (SETQ VARAL (CONS (CONS ID VAR) VARAL)))))
      (COND
       ((EQN VAL 1)
        (PROGN
         (SETCAR (CDDR VAR) (CONS CLAUSE (CADDR VAR)))
         (SETCAR (CDDDDR VAR) (PLUS (CAR (CDDDDR VAR)) 1))
         (SETCAR (CDDDDR (CDDDDR VAR)) (PLUS (CAR (CDDDDR (CDDDDR VAR))) 1))
         (SETCAR CLAUSE (CONS VAR (CAR CLAUSE)))))
       (T
        (PROGN
         (SETCAR (CDDDR VAR) (CONS CLAUSE (CADDDR VAR)))
         (SETCAR (CDR (CDDDDR VAR)) (PLUS (CADR (CDDDDR VAR)) 1))
         (SETCAR (CDR (CDDDDR (CDDDDR VAR)))
                 (PLUS (CADR (CDDDDR (CDDDDR VAR))) 1))
         (SETCAR (CDR CLAUSE) (CONS VAR (CADR CLAUSE))))))
      (RETURN VARAL))) 
(PUT 'IBALP_GET3CNF 'NUMBER-OF-ARGS 1) 
(PUT 'IBALP_GET3CNF 'DEFINED-ON-LINE '2175) 
(PUT 'IBALP_GET3CNF 'DEFINED-IN-FILE 'REDLOG/IBALP/IBALPQSAT.RED) 
(PUT 'IBALP_GET3CNF 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE IBALP_GET3CNF (F)
    (PROG (NEWF NEWFORM)
      (SETQ NEWF F)
      (SETQ NEWF (IBALP_PSET3KNFNF NEWF))
      (SETQ NEWF (IBALP_PSET3KNF2 NEWF NIL))
      (SETQ NEWF
              (COND
               ((EQ (COND ((ATOM NEWF) NEWF) (T (CAR NEWF))) 'AND)
                (CONS 'AND
                      (PROG (J FORALL-RESULT FORALL-ENDPTR)
                        (SETQ J (CDR NEWF))
                       STARTOVER
                        (COND ((NULL J) (RETURN NIL)))
                        (SETQ FORALL-RESULT
                                ((LAMBDA (J) (IBALP_PSET3KNF3 J NIL)) (CAR J)))
                        (SETQ FORALL-ENDPTR (LASTPAIR FORALL-RESULT))
                        (SETQ J (CDR J))
                        (COND ((ATOM FORALL-ENDPTR) (GO STARTOVER)))
                       LOOPLABEL
                        (COND ((NULL J) (RETURN FORALL-RESULT)))
                        (RPLACD FORALL-ENDPTR
                                ((LAMBDA (J) (IBALP_PSET3KNF3 J NIL)) (CAR J)))
                        (SETQ FORALL-ENDPTR (LASTPAIR FORALL-ENDPTR))
                        (SETQ J (CDR J))
                        (GO LOOPLABEL))))
               (T
                ((LAMBDA (G137)
                   (COND ((AND G137 (CDR G137)) (CONS 'AND G137))
                         ((NULL G137) (COND ((EQ 'AND 'AND) 'TRUE) (T 'FALSE)))
                         (T (CAR G137))))
                 (IBALP_PSET3KNF3 NEWF NIL)))))
      (SETQ NEWFORM
              (PROG (C FORALL-RESULT FORALL-ENDPTR)
                (SETQ C (CDR NEWF))
               STARTOVER
                (COND ((NULL C) (RETURN NIL)))
                (SETQ FORALL-RESULT
                        ((LAMBDA (C)
                           (COND
                            ((OR (EQUAL (COND ((ATOM C) C) (T (CAR C))) 'EQUAL)
                                 (EQUAL (COND ((ATOM C) C) (T (CAR C))) 'NOT))
                             (LIST C))
                            (T (CDR (IBALP_CNF C)))))
                         (CAR C)))
                (SETQ FORALL-ENDPTR (LASTPAIR FORALL-RESULT))
                (SETQ C (CDR C))
                (COND ((ATOM FORALL-ENDPTR) (GO STARTOVER)))
               LOOPLABEL
                (COND ((NULL C) (RETURN FORALL-RESULT)))
                (RPLACD FORALL-ENDPTR
                        ((LAMBDA (C)
                           (COND
                            ((OR (EQUAL (COND ((ATOM C) C) (T (CAR C))) 'EQUAL)
                                 (EQUAL (COND ((ATOM C) C) (T (CAR C))) 'NOT))
                             (LIST C))
                            (T (CDR (IBALP_CNF C)))))
                         (CAR C)))
                (SETQ FORALL-ENDPTR (LASTPAIR FORALL-ENDPTR))
                (SETQ C (CDR C))
                (GO LOOPLABEL)))
      (SETQ NEWFORM (CONS 'AND NEWFORM))
      (RETURN NEWFORM))) 
(PUT 'IBALP_CONVCNF 'NUMBER-OF-ARGS 3) 
(PUT 'IBALP_CONVCNF 'DEFINED-ON-LINE '2198) 
(PUT 'IBALP_CONVCNF 'DEFINED-IN-FILE 'REDLOG/IBALP/IBALPQSAT.RED) 
(PUT 'IBALP_CONVCNF 'PROCEDURE_TYPE
     '(ARROW (TIMES GENERAL GENERAL GENERAL) GENERAL)) 
(DE IBALP_CONVCNF (CLAUSEL VARAL QSAT)
    (PROG (FORMULA TEMPCL ID NEWVARAL RVARAL)
      (PROG (V)
        (SETQ V VARAL)
       LAB
        (COND ((NULL V) (RETURN NIL)))
        ((LAMBDA (V)
           (PROGN
            (SETQ ID (IBALP_VAR-MKID (CAR (CDR V))))
            (SETQ NEWVARAL (CONS (CONS (CAR (CDR V)) ID) NEWVARAL))))
         (CAR V))
        (SETQ V (CDR V))
        (GO LAB))
      (PROG (CLAUSE)
        (SETQ CLAUSE CLAUSEL)
       LAB
        (COND ((NULL CLAUSE) (RETURN NIL)))
        ((LAMBDA (CLAUSE)
           (PROGN
            (SETQ TEMPCL NIL)
            (PROG (V)
              (SETQ V (CAR CLAUSE))
             LAB
              (COND ((NULL V) (RETURN NIL)))
              ((LAMBDA (V)
                 (PROGN
                  (SETQ ID (CDR (ATSOC (CAR V) NEWVARAL)))
                  (SETQ TEMPCL (CONS (LIST 'EQUAL ID 1) TEMPCL))
                  NIL))
               (CAR V))
              (SETQ V (CDR V))
              (GO LAB))
            (PROG (V)
              (SETQ V (CADR CLAUSE))
             LAB
              (COND ((NULL V) (RETURN NIL)))
              ((LAMBDA (V)
                 (PROGN
                  (SETQ ID (CDR (ATSOC (CAR V) NEWVARAL)))
                  (SETQ TEMPCL (CONS (LIST 'EQUAL ID 0) TEMPCL))))
               (CAR V))
              (SETQ V (CDR V))
              (GO LAB))
            (COND
             ((GREATERP (LENGTH TEMPCL) 1) (SETQ TEMPCL (CONS 'OR TEMPCL)))
             (T (SETQ TEMPCL (LIST 'EQUAL (CADAR TEMPCL) (CADDAR TEMPCL)))))
            (SETQ FORMULA (CONS TEMPCL FORMULA))
            NIL))
         (CAR CLAUSE))
        (SETQ CLAUSE (CDR CLAUSE))
        (GO LAB))
      (COND ((GREATERP (LENGTH FORMULA) 1) (SETQ FORMULA (CONS 'AND FORMULA))))
      (COND
       (QSAT
        (PROGN
         (SETQ RVARAL (REVERSE VARAL))
         (PROG (V)
           (SETQ V RVARAL)
          LAB
           (COND ((NULL V) (RETURN NIL)))
           ((LAMBDA (V)
              (PROGN
               (SETQ ID (CDR (ATSOC (CAR V) NEWVARAL)))
               (COND
                ((EQ (CAR (CDDDDR (CDDDDR (CDDDDR (CDR V))))) 'EX)
                 (SETQ FORMULA (LIST 'EX ID FORMULA)))
                (T (SETQ FORMULA (LIST 'ALL ID FORMULA))))))
            (CAR V))
           (SETQ V (CDR V))
           (GO LAB)))))
      (RETURN FORMULA))) 
(PUT 'IBALP_VAR-MKID 'NUMBER-OF-ARGS 1) 
(PUT 'IBALP_VAR-MKID 'DEFINED-ON-LINE '2239) 
(PUT 'IBALP_VAR-MKID 'DEFINED-IN-FILE 'REDLOG/IBALP/IBALPQSAT.RED) 
(PUT 'IBALP_VAR-MKID 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE IBALP_VAR-MKID (TOK)
    (INTERN (LIST2STRING (CONS 'V (CONS 'A (CONS 'R (EXPLODE2 TOK))))))) 
(PUT 'IBALP_QSAT-CDCL 'NUMBER-OF-ARGS 4) 
(PUT 'IBALP_QSAT-CDCL 'DEFINED-ON-LINE '2246) 
(PUT 'IBALP_QSAT-CDCL 'DEFINED-IN-FILE 'REDLOG/IBALP/IBALPQSAT.RED) 
(PUT 'IBALP_QSAT-CDCL 'PROCEDURE_TYPE
     '(ARROW (TIMES GENERAL GENERAL GENERAL GENERAL) GENERAL)) 
(DE IBALP_QSAT-CDCL (CLAUSEL VARAL ORIGUPL QSAT)
    (PROG (FIN BREAK RES LEVEL PAIR EC LV UPL)
      (SETQ PAIR (IBALP_QSAT-PREPROCESS CLAUSEL VARAL ORIGUPL QSAT))
      (COND ((CAR PAIR) (RETURN (CAR PAIR))))
      (SETQ CLAUSEL (CADR PAIR))
      (SETQ VARAL (CDDR PAIR))
      (SETQ LEVEL 1)
      (PROG ()
       WHILELABEL
        (COND ((NOT (NULL FIN)) (RETURN NIL)))
        (PROGN
         (SETQ BREAK NIL)
         (SETQ PAIR (IBALP_QSAT-CV CLAUSEL VARAL LEVEL))
         (COND
          ((AND (CDR PAIR) (EQN LEVEL 1))
           (PROGN (SETQ RES (LIST 'FALSE)) (SETQ BREAK T) (SETQ FIN T)))
          (T (SETQ UPL (CAR PAIR))))
         (PROG ()
          WHILELABEL
           (COND ((NOT (NULL BREAK)) (RETURN NIL)))
           (PROGN
            (SETQ PAIR (IBALP_QSAT-CDCLUP UPL LEVEL))
            (SETQ EC (CAR PAIR))
            (SETQ LV (CDR PAIR))
            (COND
             (EC
              (PROGN
               (SETQ PAIR (IBALP_QSAT-ANALCONF EC LV LEVEL CLAUSEL VARAL))
               (COND
                ((LESSP (CDDR PAIR) 0)
                 (PROGN (SETQ RES (LIST 'FALSE)) (SETQ BREAK T) (SETQ FIN T)))
                (T
                 (PROGN
                  (SETQ CLAUSEL (CAR PAIR))
                  (SETQ LEVEL (CDDR PAIR))
                  (SETQ UPL
                          (CAR
                           (IBALP_QSAT-BTCASE LEVEL (CADR PAIR) VARAL
                            (CAR CLAUSEL) T)))
                  (SETQ EC NIL))))))
             ((IBALP_QSAT-CSAT CLAUSEL)
              (PROGN
               (SETQ PAIR (IBALP_QSAT-ANALSATNAIV VARAL))
               (COND
                ((LEQ (CDR PAIR) 0)
                 (PROGN (SETQ RES (LIST 'TRUE)) (SETQ BREAK T) (SETQ FIN T)))
                (T
                 (PROGN
                  (SETQ LEVEL (CDR PAIR))
                  (SETQ UPL
                          (CAR
                           (IBALP_QSAT-BTCASE LEVEL (CAR PAIR) VARAL NIL NIL)))
                  NIL)))))
             (T (PROGN (SETQ BREAK T) (SETQ LEVEL (PLUS LEVEL 1))))))
           (GO WHILELABEL)))
        (GO WHILELABEL))
      (RETURN (CONS RES (CONS CLAUSEL VARAL))))) 
(PUT 'IBALP_QSAT-PREPROCESS 'NUMBER-OF-ARGS 4) 
(PUT 'IBALP_QSAT-PREPROCESS 'DEFINED-ON-LINE '2303) 
(PUT 'IBALP_QSAT-PREPROCESS 'DEFINED-IN-FILE 'REDLOG/IBALP/IBALPQSAT.RED) 
(PUT 'IBALP_QSAT-PREPROCESS 'PROCEDURE_TYPE
     '(ARROW (TIMES GENERAL GENERAL GENERAL GENERAL) GENERAL)) 
(DE IBALP_QSAT-PREPROCESS (CLAUSEL VARAL ORIGUPL QSAT)
    (PROG (PAIR RES)
      (SETQ PAIR (IBALP_QSAT-CDCLUP ORIGUPL (MINUS 1)))
      (COND ((CAR PAIR) (SETQ RES (CONS (LIST 'FALSE) (CONS CLAUSEL VARAL)))))
      (COND
       (QSAT
        (PROGN
         (SETQ PAIR (IBALP_QSAT-DOSIMPL CLAUSEL VARAL))
         (SETQ CLAUSEL (CAR PAIR))
         (SETQ VARAL (CDR PAIR)))))
      (COND
       ((IBALP_QSAT-CSAT CLAUSEL)
        (SETQ RES (CONS (LIST 'TRUE) (CONS CLAUSEL VARAL)))))
      (COND
       ((NULL CLAUSEL) (SETQ RES (CONS (LIST 'TRUE) (CONS CLAUSEL VARAL)))))
      (COND
       ((IBALP_QSAT-ABORT CLAUSEL)
        (SETQ RES (CONS (LIST 'FALSE) (CONS CLAUSEL VARAL)))))
      (RETURN (CONS RES (CONS CLAUSEL VARAL))))) 
(PUT 'IBALP_QSAT-DOSIMPL 'NUMBER-OF-ARGS 2) 
(PUT 'IBALP_QSAT-DOSIMPL 'DEFINED-ON-LINE '2323) 
(PUT 'IBALP_QSAT-DOSIMPL 'DEFINED-IN-FILE 'REDLOG/IBALP/IBALPQSAT.RED) 
(PUT 'IBALP_QSAT-DOSIMPL 'PROCEDURE_TYPE
     '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE IBALP_QSAT-DOSIMPL (CLAUSEL VARAL)
    (PROG (H PAIR COUNT)
      (SETQ COUNT 0)
      (PROG ()
       WHILELABEL
        (COND ((NOT (SETQ H (IBALP_HASSIMPLE CLAUSEL))) (RETURN NIL)))
        (PROGN
         (SETQ PAIR (IBALP_SIMPLIFY NIL NIL H CLAUSEL VARAL))
         (SETQ CLAUSEL (CAR PAIR))
         (SETQ VARAL (CDR PAIR)))
        (GO WHILELABEL))
      (PROG (V)
        (SETQ V VARAL)
       LAB
        (COND ((NULL V) (RETURN NIL)))
        ((LAMBDA (V)
           (PROGN
            (COND
             ((AND (EQ (CAR (CDDDDR (CDDDDR (CDDDDR (CDR V))))) 'EX)
                   (EQN (CAR (CDDDDR (CDR V))) 0))
              (PROGN
               (SETQ COUNT (PLUS COUNT 1))
               (IBALP_VAR-SETQ (CDR V) 0 0 NIL)
               (SETQ PAIR (IBALP_SIMPLIFY (CDR V) 0 NIL CLAUSEL VARAL))
               (SETQ CLAUSEL (CAR PAIR))
               (SETQ VARAL (CDR PAIR))
               NIL))
             ((AND (EQ (CAR (CDDDDR (CDDDDR (CDDDDR (CDR V))))) 'EX)
                   (EQN (CADR (CDDDDR (CDR V))) 0))
              (PROGN
               (SETQ COUNT (PLUS COUNT 1))
               (IBALP_VAR-SETQ (CDR V) 1 0 NIL)
               (SETQ PAIR (IBALP_SIMPLIFY (CDR V) 1 NIL CLAUSEL VARAL))
               (SETQ CLAUSEL (CAR PAIR))
               (SETQ VARAL (CDR PAIR))
               NIL)))))
         (CAR V))
        (SETQ V (CDR V))
        (GO LAB))
      (COND
       (*RLVERBOSE
        (IOTO_TPRIN2T (LIST "Deleted variables in pre-processing: " COUNT))))
      (RETURN (CONS CLAUSEL VARAL)))) 
(PUT 'IBALP_QSAT-CV 'NUMBER-OF-ARGS 3) 
(PUT 'IBALP_QSAT-CV 'DEFINED-ON-LINE '2355) 
(PUT 'IBALP_QSAT-CV 'DEFINED-IN-FILE 'REDLOG/IBALP/IBALPQSAT.RED) 
(PUT 'IBALP_QSAT-CV 'PROCEDURE_TYPE
     '(ARROW (TIMES GENERAL GENERAL GENERAL) GENERAL)) 
(DE IBALP_QSAT-CV (CLAUSEL VARAL LEVEL)
    (PROG (CV TEMP)
      (SETQ CV (IBALP_QSAT-MOM VARAL CLAUSEL))
      (SETQ TEMP (IBALP_VAR-SETQ CV 1 LEVEL NIL))
      (COND
       ((CDR TEMP)
        (PROGN
         (IBALP_VAR-UNSETQ CV 1)
         (SETQ TEMP (IBALP_VAR-SETQ CV 0 LEVEL NIL)))))
      (SETCAR (CDDR (CDDDDR (CDDDDR (CDDDDR CV)))) 0)
      (RETURN TEMP))) 
(PUT 'IBALP_QSAT-BTCASE 'NUMBER-OF-ARGS 5) 
(PUT 'IBALP_QSAT-BTCASE 'DEFINED-ON-LINE '2370) 
(PUT 'IBALP_QSAT-BTCASE 'DEFINED-IN-FILE 'REDLOG/IBALP/IBALPQSAT.RED) 
(PUT 'IBALP_QSAT-BTCASE 'PROCEDURE_TYPE
     '(ARROW (TIMES GENERAL GENERAL GENERAL GENERAL GENERAL) GENERAL)) 
(DE IBALP_QSAT-BTCASE (BLEVEL BVAR VARAL CC VAL)
    (PROG (TVAL TEMP)
      (SETQ TVAL (CADR BVAR))
      (IBALP_QSAT-BACKTRACK BLEVEL VARAL VAL)
      (SETQ TEMP (IBALP_VAR-SETQ BVAR (DIFFERENCE 1 TVAL) BLEVEL CC))
      (SETCAR (CDDR (CDDDDR (CDDDDR (CDDDDR BVAR)))) 1)
      (RETURN TEMP))) 
(PUT 'IBALP_QSAT-ANALCONF 'NUMBER-OF-ARGS 5) 
(PUT 'IBALP_QSAT-ANALCONF 'DEFINED-ON-LINE '2385) 
(PUT 'IBALP_QSAT-ANALCONF 'DEFINED-IN-FILE 'REDLOG/IBALP/IBALPQSAT.RED) 
(PUT 'IBALP_QSAT-ANALCONF 'PROCEDURE_TYPE
     '(ARROW (TIMES GENERAL GENERAL GENERAL GENERAL GENERAL) GENERAL)) 
(DE IBALP_QSAT-ANALCONF (EC LV LEVEL CLAUSEL VARAL)
    (PROG (CL CC CV)
      (COND ((EQN LEVEL 0) (RETURN (CONS CLAUSEL (CONS NIL (MINUS 1))))))
      (SETQ CC (IBALP_QSAT-CALCCC VARAL EC LV))
      (COND ((NULL CC) (RETURN (CONS CLAUSEL (CONS NIL (MINUS 1)))))
            (T
             (PROGN
              (SETQ CV (IBALP_QSAT-CALCCVAR CC))
              (SETQ CL (IBALP_QSAT-GETBTLEVEL CC LEVEL))
              (SETQ CLAUSEL (CONS CC CLAUSEL))
              (RETURN (CONS CLAUSEL (CONS CV CL)))))))) 
(PUT 'IBALP_QSAT-MOM 'NUMBER-OF-ARGS 2) 
(PUT 'IBALP_QSAT-MOM 'DEFINED-ON-LINE '2405) 
(PUT 'IBALP_QSAT-MOM 'DEFINED-IN-FILE 'REDLOG/IBALP/IBALPQSAT.RED) 
(PUT 'IBALP_QSAT-MOM 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE IBALP_QSAT-MOM (VARAL CLAUSEL)
    (PROG (MIN TV H QLEVEL TMOM)
      (SETQ MIN (IBALP_MINCLNR CLAUSEL))
      (SETQ QLEVEL (IBALP_QSAT-QLEVEL VARAL))
      (SETQ TMOM (MINUS 1))
      (PROG (V)
        (SETQ V VARAL)
       LAB
        (COND ((NULL V) (RETURN NIL)))
        ((LAMBDA (V)
           (COND
            ((AND (EQN (CADR (CDDDDR (CDDDDR (CDDDDR (CDR V))))) QLEVEL)
                  (NULL (CADR (CDR V)))
                  (CAR (CDDDDR (CDDDDR (CDDDDR (CDR V))))))
             (COND
              ((GREATERP (SETQ H (IBALP_QSAT-CALCMOM (CDR V) MIN)) TMOM)
               (PROGN (SETQ TMOM H) (SETQ TV (CDR V))))))))
         (CAR V))
        (SETQ V (CDR V))
        (GO LAB))
      (RETURN TV))) 
(PUT 'IBALP_QSAT-CALCMOM 'NUMBER-OF-ARGS 2) 
(PUT 'IBALP_QSAT-CALCMOM 'DEFINED-ON-LINE '2424) 
(PUT 'IBALP_QSAT-CALCMOM 'DEFINED-IN-FILE 'REDLOG/IBALP/IBALPQSAT.RED) 
(PUT 'IBALP_QSAT-CALCMOM 'PROCEDURE_TYPE
     '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE IBALP_QSAT-CALCMOM (VAR MIN)
    (PROG (MINPOS MINNEG)
      (SETQ MINPOS 0)
      (SETQ MINNEG 0)
      (PROG (CLAUSE)
        (SETQ CLAUSE (CADDR VAR))
       LAB
        (COND ((NULL CLAUSE) (RETURN NIL)))
        ((LAMBDA (CLAUSE)
           (COND
            ((AND (NULL CLAUSE)
                  (EQN (PLUS (CADDR CLAUSE) (CADDDR CLAUSE)) MIN))
             (SETQ MINPOS (PLUS MINPOS 1)))))
         (CAR CLAUSE))
        (SETQ CLAUSE (CDR CLAUSE))
        (GO LAB))
      (PROG (CLAUSE)
        (SETQ CLAUSE (CADDDR VAR))
       LAB
        (COND ((NULL CLAUSE) (RETURN NIL)))
        ((LAMBDA (CLAUSE)
           (COND
            ((AND (NULL CLAUSE)
                  (EQN (PLUS (CADDR CLAUSE) (CADDDR CLAUSE)) MIN))
             (SETQ MINNEG (PLUS MINNEG 1)))))
         (CAR CLAUSE))
        (SETQ CLAUSE (CDR CLAUSE))
        (GO LAB))
      (RETURN (PLUS (TIMES (PLUS MINPOS MINNEG) 64) (TIMES MINPOS MINNEG))))) 
(PUT 'IBALP_QSAT-QLEVEL 'NUMBER-OF-ARGS 1) 
(PUT 'IBALP_QSAT-QLEVEL 'DEFINED-ON-LINE '2439) 
(PUT 'IBALP_QSAT-QLEVEL 'DEFINED-IN-FILE 'REDLOG/IBALP/IBALPQSAT.RED) 
(PUT 'IBALP_QSAT-QLEVEL 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE IBALP_QSAT-QLEVEL (VARAL)
    (COND
     ((NULL (CADR (CDAR VARAL)))
      (CADR (CDDDDR (CDDDDR (CDDDDR (CDAR VARAL))))))
     (T (IBALP_QSAT-QLEVEL (CDR VARAL))))) 
(PUT 'IBALP_QSAT-HASSIMPLE 'NUMBER-OF-ARGS 1) 
(PUT 'IBALP_QSAT-HASSIMPLE 'DEFINED-ON-LINE '2447) 
(PUT 'IBALP_QSAT-HASSIMPLE 'DEFINED-IN-FILE 'REDLOG/IBALP/IBALPQSAT.RED) 
(PUT 'IBALP_QSAT-HASSIMPLE 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE IBALP_QSAT-HASSIMPLE (CLAUSEL)
    (PROG (RET TL TV)
      (SETQ TL CLAUSEL)
      (PROG ()
       WHILELABEL
        (COND ((NOT (AND TL (NULL RET))) (RETURN NIL)))
        (PROGN
         (COND
          ((EQN (PLUS (LENGTH (CAR (CAR TL))) (LENGTH (CADR (CAR TL)))) 1)
           (PROGN
            (SETQ TV
                    (COND ((NULL (CAR (CAR TL))) (CAR (CADR (CAR TL))))
                          (T (CAR (CAR (CAR TL))))))
            (COND
             ((AND (EQ (CAR (CDDDDR (CDDDDR (CDDDDR TV)))) 'EX)
                   (CADDDR (CDDDDR TV)))
              (SETQ RET
                      (CAR
                       (TL
                        (COND
                         ((AND (EQ (CAR (CDDDDR (CDDDDR (CDDDDR TV)))) 'EX)
                               (CADDDR (CDDDDR TV)))
                          (SETQ RET (CAR TL)))))))))
            NIL)))
         (SETQ TL (CDR TL))
         NIL)
        (GO WHILELABEL))
      (RETURN RET))) 
(PUT 'IBALP_QSAT-ABORT 'NUMBER-OF-ARGS 1) 
(PUT 'IBALP_QSAT-ABORT 'DEFINED-ON-LINE '2469) 
(PUT 'IBALP_QSAT-ABORT 'DEFINED-IN-FILE 'REDLOG/IBALP/IBALPQSAT.RED) 
(PUT 'IBALP_QSAT-ABORT 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE IBALP_QSAT-ABORT (CLAUSEL)
    (COND ((NULL CLAUSEL) NIL)
          ((AND (NULL (CAR (CAR CLAUSEL))) (NULL (CADR (CAR CLAUSEL)))) T)
          (T (IBALP_QSAT-ABORT (CDR CLAUSEL))))) 
(PUT 'IBALP_QSAT-CALCCVAR 'NUMBER-OF-ARGS 1) 
(PUT 'IBALP_QSAT-CALCCVAR 'DEFINED-ON-LINE '2479) 
(PUT 'IBALP_QSAT-CALCCVAR 'DEFINED-IN-FILE 'REDLOG/IBALP/IBALPQSAT.RED) 
(PUT 'IBALP_QSAT-CALCCVAR 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE IBALP_QSAT-CALCCVAR (CLAUSE)
    (PROG (TL TV CV LEVEL)
      (SETQ LEVEL (MINUS 1))
      (SETQ TL (CAR CLAUSE))
      (PROG ()
       WHILELABEL
        (COND ((NOT TL) (RETURN NIL)))
        (PROGN
         (SETQ TV (CAR TL))
         (COND
          ((AND (EQ (CAR (CDDDDR (CDDDDR (CDDDDR TV)))) 'EX)
                (GREATERP (CADDR (CDDDDR TV)) LEVEL))
           (PROGN (SETQ LEVEL (CADDR (CDDDDR TV))) (SETQ CV TV))))
         (SETQ TL (CDR TL)))
        (GO WHILELABEL))
      (SETQ TL (CADR CLAUSE))
      (PROG ()
       WHILELABEL
        (COND ((NOT TL) (RETURN NIL)))
        (PROGN
         (SETQ TV (CAR TL))
         (COND
          ((AND (EQ (CAR (CDDDDR (CDDDDR (CDDDDR TV)))) 'EX)
                (GREATERP (CADDR (CDDDDR TV)) LEVEL))
           (PROGN (SETQ LEVEL (CADDR (CDDDDR TV))) (SETQ CV TV))))
         (SETQ TL (CDR TL)))
        (GO WHILELABEL))
      (RETURN CV))) 
(PUT 'IBALP_QSAT-GETBTLEVEL 'NUMBER-OF-ARGS 2) 
(PUT 'IBALP_QSAT-GETBTLEVEL 'DEFINED-ON-LINE '2505) 
(PUT 'IBALP_QSAT-GETBTLEVEL 'DEFINED-IN-FILE 'REDLOG/IBALP/IBALPQSAT.RED) 
(PUT 'IBALP_QSAT-GETBTLEVEL 'PROCEDURE_TYPE
     '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE IBALP_QSAT-GETBTLEVEL (CLAUSE OLDLEV)
    (PROG (TL TV LEVEL TLEVEL)
      (SETQ LEVEL (MINUS 1))
      (SETQ TL (CAR CLAUSE))
      (SETQ TLEVEL (CADDR (CDDDDR (IBALP_QSAT-CALCCVAR CLAUSE))))
      (PROG ()
       WHILELABEL
        (COND ((NOT TL) (RETURN NIL)))
        (PROGN
         (SETQ TV (CAR TL))
         (COND
          ((AND (EQ (CAR (CDDDDR (CDDDDR (CDDDDR TV)))) 'EX)
                (GREATERP (CADDR (CDDDDR TV)) LEVEL)
                (LESSP (CADDR (CDDDDR TV)) TLEVEL))
           (SETQ LEVEL (CADDR (CDDDDR TV)))))
         (SETQ TL (CDR TL)))
        (GO WHILELABEL))
      (SETQ TL (CADR CLAUSE))
      (PROG ()
       WHILELABEL
        (COND ((NOT TL) (RETURN NIL)))
        (PROGN
         (SETQ TV (CAR TL))
         (COND
          ((AND (EQ (CAR (CDDDDR (CDDDDR (CDDDDR TV)))) 'EX)
                (GREATERP (CADDR (CDDDDR TV)) LEVEL)
                (LESSP (CADDR (CDDDDR TV)) TLEVEL))
           (SETQ LEVEL (CADDR (CDDDDR TV)))))
         (SETQ TL (CDR TL)))
        (GO WHILELABEL))
      (RETURN (COND ((EQN LEVEL (MINUS 1)) (DIFFERENCE OLDLEV 1)) (T LEVEL))))) 
(PUT 'IBALP_QSAT-CALCCC 'NUMBER-OF-ARGS 3) 
(PUT 'IBALP_QSAT-CALCCC 'DEFINED-ON-LINE '2531) 
(PUT 'IBALP_QSAT-CALCCC 'DEFINED-IN-FILE 'REDLOG/IBALP/IBALPQSAT.RED) 
(PUT 'IBALP_QSAT-CALCCC 'PROCEDURE_TYPE
     '(ARROW (TIMES GENERAL GENERAL GENERAL) GENERAL)) 
(DE IBALP_QSAT-CALCCC (VARAL EC LV)
    (PROG (NEWCLAUSE TV REAS DOIT RES)
      (SETQ NEWCLAUSE (LIST NIL NIL 0 0 NIL NIL NIL))
      (SETQ RES T)
      (IBALP_RESOLVE NEWCLAUSE EC (CADDDR (CDDDDR LV)) LV)
      (SETQ DOIT (IBALP_QSAT-DORESOLVE NEWCLAUSE VARAL))
      (COND ((CDR DOIT) (RETURN NIL)))
      (PROG ()
       WHILELABEL
        (COND ((NOT (AND (CAR DOIT) RES)) (RETURN NIL)))
        (PROGN
         (SETQ TV (IBALP_QSAT-GETRESVAR NEWCLAUSE))
         (COND ((EQN (CADR TV) 0) (IBALP_DELLIT TV NEWCLAUSE T))
               (T (IBALP_DELLIT TV NEWCLAUSE NIL)))
         (SETQ REAS (CADDDR (CDDDDR TV)))
         (COND ((IBALP_CLAUSETEST REAS NEWCLAUSE) (SETQ RES NIL)))
         (COND
          ((NOT (NULL (CADR (CDDDDR REAS))))
           (SETCAR (CDR (CDDDDR REAS)) (PLUS (CADR (CDDDDR REAS)) 1))))
         (IBALP_RESOLVE NEWCLAUSE NEWCLAUSE REAS TV)
         (SETQ DOIT (IBALP_QSAT-DORESOLVE NEWCLAUSE VARAL))
         (COND ((CDR DOIT) (SETQ RES NIL))))
        (GO WHILELABEL))
      (SETCAR (CDR (CDDDDR NEWCLAUSE)) 1)
      (RETURN (COND (RES NEWCLAUSE) (T NIL))))) 
(PUT 'IBALP_CLAUSETEST 'NUMBER-OF-ARGS 2) 
(PUT 'IBALP_CLAUSETEST 'DEFINED-ON-LINE '2560) 
(PUT 'IBALP_CLAUSETEST 'DEFINED-IN-FILE 'REDLOG/IBALP/IBALPQSAT.RED) 
(PUT 'IBALP_CLAUSETEST 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE IBALP_CLAUSETEST (CLAUSE1 CLAUSE2)
    (AND (EQUAL (CAR CLAUSE1) (CAR CLAUSE2))
         (EQUAL (CADR CLAUSE1) (CADR CLAUSE2)))) 
(PUT 'IBALP_QSAT-DORESOLVE 'NUMBER-OF-ARGS 2) 
(PUT 'IBALP_QSAT-DORESOLVE 'DEFINED-ON-LINE '2567) 
(PUT 'IBALP_QSAT-DORESOLVE 'DEFINED-IN-FILE 'REDLOG/IBALP/IBALPQSAT.RED) 
(PUT 'IBALP_QSAT-DORESOLVE 'PROCEDURE_TYPE
     '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE IBALP_QSAT-DORESOLVE (NEWCLAUSE VARAL)
    (PROG (HL CL HV DECV AC1 AC2)
      (SETQ HL (MINUS 2))
      (PROG (V)
        (SETQ V (CAR NEWCLAUSE))
       LAB
        (COND ((NULL V) (RETURN NIL)))
        ((LAMBDA (V)
           (PROGN
            (COND
             ((EQ (CAR (CDDDDR (CDDDDR (CDDDDR V)))) 'EX)
              (PROGN
               (SETQ AC1 T)
               (COND
                ((GREATERP (CADDR (CDDDDR V)) HL)
                 (PROGN (SETQ HL (CADDR (CDDDDR V))) (SETQ HV V) (SETQ CL 1)))
                ((EQN (CADDR (CDDDDR V)) HL) (SETQ CL (PLUS CL 1))))
               (COND ((GREATERP (CADDR (CDDDDR V)) 0) (SETQ AC2 T))))))))
         (CAR V))
        (SETQ V (CDR V))
        (GO LAB))
      (PROG (V)
        (SETQ V (CADR NEWCLAUSE))
       LAB
        (COND ((NULL V) (RETURN NIL)))
        ((LAMBDA (V)
           (PROGN
            (COND
             ((EQ (CAR (CDDDDR (CDDDDR (CDDDDR V)))) 'EX)
              (PROGN
               (SETQ AC1 T)
               (COND
                ((GREATERP (CADDR (CDDDDR V)) HL)
                 (PROGN (SETQ HL (CADDR (CDDDDR V))) (SETQ HV V) (SETQ CL 1)))
                ((EQN (CADDR (CDDDDR V)) HL) (SETQ CL (PLUS CL 1))))
               (COND ((GREATERP (CADDR (CDDDDR V)) 0) (SETQ AC2 T))))))))
         (CAR V))
        (SETQ V (CDR V))
        (GO LAB))
      (COND ((OR (NULL AC1) (NULL AC2)) (RETURN (CONS NIL T))))
      (COND ((GREATERP CL 1) (RETURN (CONS T NIL))))
      (SETQ DECV (IBALP_QSAT-SEARCHDEC HL VARAL))
      (COND
       ((NOT (EQ (CAR (CDDDDR (CDDDDR (CDDDDR DECV)))) 'EX))
        (RETURN (CONS T NIL))))
      (RETURN (IBALP_QSAT-UNICHECK NEWCLAUSE HV)))) 
(PUT 'IBALP_QSAT-SEARCHDEC 'NUMBER-OF-ARGS 2) 
(PUT 'IBALP_QSAT-SEARCHDEC 'DEFINED-ON-LINE '2605) 
(PUT 'IBALP_QSAT-SEARCHDEC 'DEFINED-IN-FILE 'REDLOG/IBALP/IBALPQSAT.RED) 
(PUT 'IBALP_QSAT-SEARCHDEC 'PROCEDURE_TYPE
     '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE IBALP_QSAT-SEARCHDEC (LEVEL VARAL)
    (COND ((NULL VARAL) NIL)
          ((AND (EQN (CADDR (CDDDDR (CDAR VARAL))) LEVEL)
                (NULL (CADDDR (CDDDDR (CDAR VARAL)))))
           (CDAR VARAL))
          (T (IBALP_QSAT-SEARCHDEC LEVEL (CDR VARAL))))) 
(PUT 'IBALP_QSAT-UNICHECK 'NUMBER-OF-ARGS 2) 
(PUT 'IBALP_QSAT-UNICHECK 'DEFINED-ON-LINE '2615) 
(PUT 'IBALP_QSAT-UNICHECK 'DEFINED-IN-FILE 'REDLOG/IBALP/IBALPQSAT.RED) 
(PUT 'IBALP_QSAT-UNICHECK 'PROCEDURE_TYPE
     '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE IBALP_QSAT-UNICHECK (CLAUSE VAR)
    (PROG (TL RES TV QL DL)
      (SETQ QL (CADR (CDDDDR (CDDDDR (CDDDDR VAR)))))
      (SETQ DL (CADDR (CDDDDR VAR)))
      (SETQ TL (CAR CLAUSE))
      (PROG ()
       WHILELABEL
        (COND ((NOT (AND TL (NULL RES))) (RETURN NIL)))
        (PROGN
         (SETQ TV (CAR TL))
         (COND
          ((AND (EQ (CAR (CDDDDR (CDDDDR (CDDDDR TV)))) 'ALL)
                (LESSP (CADR (CDDDDR (CDDDDR (CDDDDR TV)))) QL))
           (COND
            ((NOT (AND (EQN (CADR TV) 0) (LESSP (CADDR (CDDDDR TV)) DL)))
             (SETQ RES T)))))
         (SETQ TL (CDR TL))
         NIL)
        (GO WHILELABEL))
      (SETQ TL (CADR CLAUSE))
      (PROG ()
       WHILELABEL
        (COND ((NOT (AND TL (NULL RES))) (RETURN NIL)))
        (PROGN
         (SETQ TV (CAR TL))
         (COND
          ((AND (EQ (CAR (CDDDDR (CDDDDR (CDDDDR TV)))) 'ALL)
                (LESSP (CADR (CDDDDR (CDDDDR (CDDDDR TV)))) QL))
           (COND
            ((NOT (AND (EQN (CADR TV) 0) (LESSP (CADDR (CDDDDR TV)) DL)))
             (SETQ RES T)))))
         (SETQ TL (CDR TL))
         NIL)
        (GO WHILELABEL))
      (RETURN (CONS RES NIL)))) 
(PUT 'IBALP_QSAT-GETRESVAR 'NUMBER-OF-ARGS 1) 
(PUT 'IBALP_QSAT-GETRESVAR 'DEFINED-ON-LINE '2645) 
(PUT 'IBALP_QSAT-GETRESVAR 'DEFINED-IN-FILE 'REDLOG/IBALP/IBALPQSAT.RED) 
(PUT 'IBALP_QSAT-GETRESVAR 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE IBALP_QSAT-GETRESVAR (CLAUSE)
    (PROG (TL TV RES LEV)
      (SETQ TL (CAR CLAUSE))
      (SETQ LEV (MINUS 2))
      (PROG ()
       WHILELABEL
        (COND ((NOT TL) (RETURN NIL)))
        (PROGN
         (SETQ TV (CAR TL))
         (COND
          ((AND (CADDDR (CDDDDR TV)) (GREATERP (CADDR (CDDDDR TV)) LEV))
           (PROGN (SETQ RES TV) (SETQ LEV (CADDR (CDDDDR TV))))))
         (SETQ TL (CDR TL))
         NIL)
        (GO WHILELABEL))
      (SETQ TL (CADR CLAUSE))
      (PROG ()
       WHILELABEL
        (COND ((NOT TL) (RETURN NIL)))
        (PROGN
         (SETQ TV (CAR TL))
         (COND
          ((AND (CADDDR (CDDDDR TV)) (GREATERP (CADDR (CDDDDR TV)) LEV))
           (PROGN (SETQ RES TV) (SETQ LEV (CADDR (CDDDDR TV))))))
         (SETQ TL (CDR TL))
         NIL)
        (GO WHILELABEL))
      (RETURN RES))) 
(PUT 'IBALP_QSAT-ANALSATNAIV 'NUMBER-OF-ARGS 1) 
(PUT 'IBALP_QSAT-ANALSATNAIV 'DEFINED-ON-LINE '2671) 
(PUT 'IBALP_QSAT-ANALSATNAIV 'DEFINED-IN-FILE 'REDLOG/IBALP/IBALPQSAT.RED) 
(PUT 'IBALP_QSAT-ANALSATNAIV 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE IBALP_QSAT-ANALSATNAIV (VARAL)
    (PROG (CV CL)
      (SETQ CL (MINUS 1))
      (PROG (V)
        (SETQ V VARAL)
       LAB
        (COND ((NULL V) (RETURN NIL)))
        ((LAMBDA (V)
           (PROGN
            (COND
             ((AND (EQ (CAR (CDDDDR (CDDDDR (CDDDDR (CDR V))))) 'ALL)
                   (EQN (CADDR (CDDDDR (CDDDDR (CDDDDR (CDR V))))) 0))
              (COND
               ((GREATERP (CADDR (CDDDDR (CDR V))) CL)
                (PROGN
                 (SETQ CL (CADDR (CDDDDR (CDR V))))
                 (SETQ CV (CDR V)))))))))
         (CAR V))
        (SETQ V (CDR V))
        (GO LAB))
      (RETURN (CONS CV CL)))) 
(PUT 'IBALP_QSAT-BACKTRACK 'NUMBER-OF-ARGS 3) 
(PUT 'IBALP_QSAT-BACKTRACK 'DEFINED-ON-LINE '2687) 
(PUT 'IBALP_QSAT-BACKTRACK 'DEFINED-IN-FILE 'REDLOG/IBALP/IBALPQSAT.RED) 
(PUT 'IBALP_QSAT-BACKTRACK 'PROCEDURE_TYPE
     '(ARROW (TIMES GENERAL GENERAL GENERAL) GENERAL)) 
(DE IBALP_QSAT-BACKTRACK (LEVEL VARAL VAL)
    (COND
     (VAL
      (PROGN
       (PROG (V)
         (SETQ V VARAL)
        LAB
         (COND ((NULL V) (RETURN NIL)))
         ((LAMBDA (V)
            (COND
             ((GREATERP (CADDR (CDDDDR (CDR V))) LEVEL)
              (PROGN
               (IBALP_VAR-UNSETQ (CDR V) (CADR (CDR V)))
               (SETCAR (CDDR (CDDDDR (CDDDDR (CDDDDR (CDR V))))) NIL)))))
          (CAR V))
         (SETQ V (CDR V))
         (GO LAB))))
     (T
      (PROGN
       (PROG (V)
         (SETQ V VARAL)
        LAB
         (COND ((NULL V) (RETURN NIL)))
         ((LAMBDA (V)
            (COND
             ((GEQ (CADDR (CDDDDR (CDR V))) LEVEL)
              (PROGN
               (IBALP_VAR-UNSETQ (CDR V) (CADR (CDR V)))
               (SETCAR (CDDR (CDDDDR (CDDDDR (CDDDDR (CDR V))))) NIL)))))
          (CAR V))
         (SETQ V (CDR V))
         (GO LAB)))))) 
(PUT 'IBALP_QSAT-CDCLUP 'NUMBER-OF-ARGS 2) 
(PUT 'IBALP_QSAT-CDCLUP 'DEFINED-ON-LINE '2705) 
(PUT 'IBALP_QSAT-CDCLUP 'DEFINED-IN-FILE 'REDLOG/IBALP/IBALPQSAT.RED) 
(PUT 'IBALP_QSAT-CDCLUP 'PROCEDURE_TYPE
     '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE IBALP_QSAT-CDCLUP (CLIST LEVEL)
    (PROG (TL TV LV EC UPL TEMP)
      (SETQ TL CLIST)
      (PROG ()
       WHILELABEL
        (COND ((NOT (AND TL (NULL EC))) (RETURN NIL)))
        (PROGN
         (SETQ TV (CAR TL))
         (COND
          ((NULL (CAR (CDDDDR (CDR TV))))
           (PROGN
            (SETQ TEMP (IBALP_VAR-SETQ (CAAR TV) (CDAR TV) LEVEL (CDR TV)))
            (SETQ UPL (CAR TEMP))
            (NCONC TL UPL))))
         (SETQ TL (CDR TL))
         (SETQ LV (CAAR TV))
         (SETQ EC (CDR TEMP))
         NIL)
        (GO WHILELABEL))
      (RETURN (CONS EC LV)))) 
(PUT 'IBALP_QSAT-ISUNIT 'NUMBER-OF-ARGS 1) 
(PUT 'IBALP_QSAT-ISUNIT 'DEFINED-ON-LINE '2726) 
(PUT 'IBALP_QSAT-ISUNIT 'DEFINED-IN-FILE 'REDLOG/IBALP/IBALPQSAT.RED) 
(PUT 'IBALP_QSAT-ISUNIT 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE IBALP_QSAT-ISUNIT (CLAUSE)
    (PROG (TL TV MIN TE CE)
      (SETQ CE 0)
      (COND ((CAR (CDDDDR CLAUSE)) (RETURN NIL)))
      (SETQ MIN 10000)
      (SETQ TL (CAR CLAUSE))
      (PROG ()
       WHILELABEL
        (COND ((NOT (AND TL (LESSP CE 2))) (RETURN NIL)))
        (PROGN
         (SETQ TV (CAR TL))
         (COND
          ((AND (EQ (CAR (CDDDDR (CDDDDR (CDDDDR TV)))) 'EX) (NULL (CADR TV)))
           (PROGN (SETQ CE (PLUS CE 1)) (SETQ TE (CONS TV 1)))))
         (COND
          ((AND (EQ (CAR (CDDDDR (CDDDDR (CDDDDR TV)))) 'ALL) (NULL (CADR TV))
                (LESSP (CADR (CDDDDR (CDDDDR (CDDDDR TV)))) MIN))
           (SETQ MIN (CADR (CDDDDR (CDDDDR (CDDDDR TV)))))))
         (SETQ TL (CDR TL)))
        (GO WHILELABEL))
      (SETQ TL (CADR CLAUSE))
      (PROG ()
       WHILELABEL
        (COND ((NOT (AND TL (LESSP CE 2))) (RETURN NIL)))
        (PROGN
         (SETQ TV (CAR TL))
         (COND
          ((AND (EQ (CAR (CDDDDR (CDDDDR (CDDDDR TV)))) 'EX) (NULL (CADR TV)))
           (PROGN (SETQ CE (PLUS CE 1)) (SETQ TE (CONS TV 0)))))
         (COND
          ((AND (EQ (CAR (CDDDDR (CDDDDR (CDDDDR TV)))) 'ALL) (NULL (CADR TV))
                (LESSP (CADR (CDDDDR (CDDDDR (CDDDDR TV)))) MIN))
           (SETQ MIN (CADR (CDDDDR (CDDDDR (CDDDDR TV)))))))
         (SETQ TL (CDR TL)))
        (GO WHILELABEL))
      (RETURN
       (COND
        ((AND (EQN CE 1)
              (LESSP (CADR (CDDDDR (CDDDDR (CDDDDR (CAR TE))))) MIN))
         TE)
        (T NIL))))) 
(PUT 'IBALP_QSAT-ISEC 'NUMBER-OF-ARGS 1) 
(PUT 'IBALP_QSAT-ISEC 'DEFINED-ON-LINE '2762) 
(PUT 'IBALP_QSAT-ISEC 'DEFINED-IN-FILE 'REDLOG/IBALP/IBALPQSAT.RED) 
(PUT 'IBALP_QSAT-ISEC 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE IBALP_QSAT-ISEC (CLAUSE)
    (PROG (EC TL TV)
      (COND ((CAR (CDDDDR CLAUSE)) (RETURN NIL)))
      (SETQ EC T)
      (SETQ TL (CAR CLAUSE))
      (PROG ()
       WHILELABEL
        (COND ((NOT (AND EC TL)) (RETURN NIL)))
        (PROGN
         (SETQ TV (CAR TL))
         (COND
          ((AND (EQ (CAR (CDDDDR (CDDDDR (CDDDDR TV)))) 'EX)
                (NOT (EQN (CADR TV) 0)))
           (SETQ EC NIL)))
         (COND
          ((AND (EQ (CAR (CDDDDR (CDDDDR (CDDDDR TV)))) 'ALL)
                (EQN (CADR TV) 1))
           (SETQ EC NIL)))
         (COND
          ((AND (NULL (CAR (CDDDDR (CDDDDR (CDDDDR TV))))) (NULL (CADR TV)))
           (SETQ EC NIL)))
         (SETQ TL (CDR TL)))
        (GO WHILELABEL))
      (SETQ TL (CADR CLAUSE))
      (PROG ()
       WHILELABEL
        (COND ((NOT (AND EC TL)) (RETURN NIL)))
        (PROGN
         (SETQ TV (CAR TL))
         (COND
          ((AND (EQ (CAR (CDDDDR (CDDDDR (CDDDDR TV)))) 'EX)
                (NOT (EQN (CADR TV) 1)))
           (SETQ EC NIL)))
         (COND
          ((AND (EQ (CAR (CDDDDR (CDDDDR (CDDDDR TV)))) 'ALL)
                (EQN (CADR TV) 0))
           (SETQ EC NIL)))
         (COND
          ((AND (NULL (CAR (CDDDDR (CDDDDR (CDDDDR TV))))) (NULL (CADR TV)))
           (SETQ EC NIL)))
         (SETQ TL (CDR TL)))
        (GO WHILELABEL))
      (RETURN EC))) 
(DE IBALP_QSAT-CSAT (CLAUSEL)
    (OR (NULL CLAUSEL)
        (AND (CAR (CDDDDR (CAR CLAUSEL))) (IBALP_CSAT (CDR CLAUSEL))))) 
(PUT 'IBALP_QSAT-CSAT 'NUMBER-OF-ARGS 1) 
(PUT 'IBALP_QSAT-CSAT 'DEFINED-ON-LINE '2793) 
(PUT 'IBALP_QSAT-CSAT 'DEFINED-IN-FILE 'REDLOG/IBALP/IBALPQSAT.RED) 
(PUT 'IBALP_QSAT-CSAT 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(PUTC 'IBALP_QSAT-CSAT 'INLINE
      '(LAMBDA (CLAUSEL)
         (OR (NULL CLAUSEL)
             (AND (CAR (CDDDDR (CAR CLAUSEL))) (IBALP_CSAT (CDR CLAUSEL)))))) 
(PUT 'IBALP_READQUANTAL 'NUMBER-OF-ARGS 2) 
(PUT 'IBALP_READQUANTAL 'DEFINED-ON-LINE '2798) 
(PUT 'IBALP_READQUANTAL 'DEFINED-IN-FILE 'REDLOG/IBALP/IBALPQSAT.RED) 
(PUT 'IBALP_READQUANTAL 'PROCEDURE_TYPE
     '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE IBALP_READQUANTAL (FORMULA VARAL)
    (PROG (HL TL)
      (SETQ TL
              (IBALP_READQUANTAL2 FORMULA VARAL
               (COND ((ATOM FORMULA) FORMULA) (T (CAR FORMULA))) 1 NIL))
      (SETQ HL (CADR (CDDDDR (CDDDDR (CDDDDR (CDAR TL))))))
      (PROG (V)
        (SETQ V VARAL)
       LAB
        (COND ((NULL V) (RETURN NIL)))
        ((LAMBDA (V)
           (COND
            ((NULL (CAR (CDDDDR (CDDDDR (CDDDDR (CDR V))))))
             (SETQ TL (CONS V TL)))))
         (CAR V))
        (SETQ V (CDR V))
        (GO LAB))
      (SETQ TL (REVERSE TL))
      (RETURN (CONS HL TL)))) 
(PUT 'IBALP_READQUANTAL2 'NUMBER-OF-ARGS 5) 
(PUT 'IBALP_READQUANTAL2 'DEFINED-ON-LINE '2815) 
(PUT 'IBALP_READQUANTAL2 'DEFINED-IN-FILE 'REDLOG/IBALP/IBALPQSAT.RED) 
(PUT 'IBALP_READQUANTAL2 'PROCEDURE_TYPE
     '(ARROW (TIMES GENERAL GENERAL GENERAL GENERAL GENERAL) GENERAL)) 
(DE IBALP_READQUANTAL2 (FORMULA VARAL QUANT LEVEL NEWVARAL)
    (COND
     (((LAMBDA (X) (OR (EQ X 'EX) (EQ X 'ALL)))
       (COND ((ATOM FORMULA) FORMULA) (T (CAR FORMULA))))
      (PROGN
       (COND
        ((NOT (EQ (COND ((ATOM FORMULA) FORMULA) (T (CAR FORMULA))) QUANT))
         (SETQ LEVEL (PLUS LEVEL 1))))
       (COND
        ((ATSOC (CADR FORMULA) VARAL)
         (PROGN
          (SETCAR (CDDDDR (CDDDDR (CDDDDR (CDR (ATSOC (CADR FORMULA) VARAL)))))
                  (COND ((ATOM FORMULA) FORMULA) (T (CAR FORMULA))))
          (SETCAR
           (CDR (CDDDDR (CDDDDR (CDDDDR (CDR (ATSOC (CADR FORMULA) VARAL))))))
           LEVEL)
          (SETQ NEWVARAL
                  (CONS
                   (CONS (CAR (CDR (ATSOC (CADR FORMULA) VARAL)))
                         (CDR (ATSOC (CADR FORMULA) VARAL)))
                   NEWVARAL)))))
       (IBALP_READQUANTAL2 (CADDR FORMULA) VARAL
        (COND ((ATOM FORMULA) FORMULA) (T (CAR FORMULA))) LEVEL NEWVARAL)))
     (T NEWVARAL))) 
(PUT 'IBALP_QSAT-PAR 'NUMBER-OF-ARGS 5) 
(PUT 'IBALP_QSAT-PAR 'DEFINED-ON-LINE '2835) 
(PUT 'IBALP_QSAT-PAR 'DEFINED-IN-FILE 'REDLOG/IBALP/IBALPQSAT.RED) 
(PUT 'IBALP_QSAT-PAR 'PROCEDURE_TYPE
     '(ARROW (TIMES GENERAL GENERAL GENERAL GENERAL GENERAL) GENERAL)) 
(DE IBALP_QSAT-PAR (FVL CLAUSEL VARAL RESULT PSAT)
    (PROG (TV RES PAIR EC UPL PAIR2 EC2)
      (SETQ TV (IBALP_GETFREE-DLCS FVL))
      (COND
       ((NULL TV)
        (PROGN
         (COND
          ((NOT (MEMBER (IBALP_QSAT-CALCBIN FVL) DONEL*))
           (PROGN
            (SETQ UPL (IBALP_QSAT-GETUPL CLAUSEL))
            (SETQ RES (IBALP_QSAT-CDCL CLAUSEL VARAL UPL NIL))
            (SETQ NUMCDCL* (PLUS NUMCDCL* 1))
            (SETQ DONEL* (CONS (IBALP_QSAT-CALCBIN FVL) DONEL*))
            (COND
             ((EQUAL (CAR RES) (LIST 'TRUE))
              (PROGN
               (SETQ RESULT (CONS (IBALP_EXRES FVL) RESULT))
               (COND
                (PSAT
                 (SETQ RESULT
                         (IBALP_QSAT-LOCALSEARCH CLAUSEL VARAL (LENGTH FVL) FVL
                          RESULT))))
               NIL)))
            (RETURN (CONS RESULT (CONS (CADR RES) (CDDR RES))))
            NIL))
          (T (RETURN (CONS RESULT (CONS CLAUSEL VARAL)))))
         NIL))
       (T
        (PROGN
         (SETQ EC (IBALP_VAR-SETQ TV 1 (MINUS 42) NIL))
         (COND
          ((NULL (CDR EC))
           (PROGN
            (SETQ PAIR (IBALP_QSAT-PAR FVL CLAUSEL VARAL RESULT PSAT))
            (SETQ RESULT (CAR PAIR))
            (SETQ CLAUSEL (CADR PAIR))
            (SETQ VARAL (CDDR PAIR))
            (IBALP_QSAT-DAV VARAL)
            NIL)))
         (IBALP_VAR-UNSETQ TV 1)
         (SETQ EC (IBALP_VAR-SETQ TV 0 (MINUS 42) NIL))
         (COND
          ((NULL (CDR EC))
           (PROGN
            (SETQ PAIR (IBALP_QSAT-PAR FVL CLAUSEL VARAL RESULT PSAT))
            (SETQ RESULT (CAR PAIR))
            (SETQ CLAUSEL (CADR PAIR))
            (SETQ VARAL (CDDR PAIR))
            (IBALP_QSAT-DAV VARAL)
            NIL)))
         (IBALP_VAR-UNSETQ TV 0)
         (RETURN (CONS RESULT (CONS CLAUSEL VARAL)))))))) 
(PUT 'IBALP_QSAT-LOCALSEARCH 'NUMBER-OF-ARGS 5) 
(PUT 'IBALP_QSAT-LOCALSEARCH 'DEFINED-ON-LINE '2881) 
(PUT 'IBALP_QSAT-LOCALSEARCH 'DEFINED-IN-FILE 'REDLOG/IBALP/IBALPQSAT.RED) 
(PUT 'IBALP_QSAT-LOCALSEARCH 'PROCEDURE_TYPE
     '(ARROW (TIMES GENERAL GENERAL GENERAL GENERAL GENERAL) GENERAL)) 
(DE IBALP_QSAT-LOCALSEARCH (CLAUSEL VARAL RADIUS FVL RESULT)
    (PROG (V OLDL VARL)
      (SETQ VARL (IBALP_QSAT-GETLOCVARS-LAST FVL RADIUS))
      (PROG (V)
        (SETQ V VARL)
       LAB
        (COND ((NULL V) (RETURN NIL)))
        ((LAMBDA (V)
           (PROGN
            (SETQ OLDL (CONS (CADR V) OLDL))
            (IBALP_VAR-UNSETQ V (CADR V))
            NIL))
         (CAR V))
        (SETQ V (CDR V))
        (GO LAB))
      (SETQ RESULT (IBALP_QSAT-LOCALSEARCHREC CLAUSEL VARAL VARL FVL RESULT))
      (PROG (I)
        (SETQ I 1)
       LAB
        (COND ((MINUSP (DIFFERENCE (LENGTH VARL) I)) (RETURN NIL)))
        (PROGN
         (SETQ V (NTH VARL I))
         (COND
          ((EQN (NTH OLDL (PLUS (DIFFERENCE (LENGTH OLDL) I) 1)) 0)
           (IBALP_VAR-SETQ V 0 (MINUS 42) NIL))
          (T (IBALP_VAR-SETQ V 1 (MINUS 42) NIL))))
        (SETQ I (PLUS2 I 1))
        (GO LAB))
      (RETURN RESULT))) 
(PUT 'IBALP_QSAT-GETLOCVARS-LAST 'NUMBER-OF-ARGS 2) 
(PUT 'IBALP_QSAT-GETLOCVARS-LAST 'DEFINED-ON-LINE '2903) 
(PUT 'IBALP_QSAT-GETLOCVARS-LAST 'DEFINED-IN-FILE 'REDLOG/IBALP/IBALPQSAT.RED) 
(PUT 'IBALP_QSAT-GETLOCVARS-LAST 'PROCEDURE_TYPE
     '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE IBALP_QSAT-GETLOCVARS-LAST (FVL NUMBER)
    (PROG (L VARL)
      (SETQ L (LENGTH FVL))
      (PROG (I)
        (SETQ I (PLUS (DIFFERENCE L NUMBER) 1))
       LAB
        (COND ((MINUSP (DIFFERENCE L I)) (RETURN NIL)))
        (SETQ VARL (CONS (NTH FVL I) VARL))
        (SETQ I (PLUS2 I 1))
        (GO LAB))
      (RETURN VARL))) 
(PUT 'IBALP_QSAT-GETLOCVARS-RAND 'NUMBER-OF-ARGS 2) 
(PUT 'IBALP_QSAT-GETLOCVARS-RAND 'DEFINED-ON-LINE '2912) 
(PUT 'IBALP_QSAT-GETLOCVARS-RAND 'DEFINED-IN-FILE 'REDLOG/IBALP/IBALPQSAT.RED) 
(PUT 'IBALP_QSAT-GETLOCVARS-RAND 'PROCEDURE_TYPE
     '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE IBALP_QSAT-GETLOCVARS-RAND (FVL NUMBER)
    (PROG (V R VARL)
      (PROG ()
       WHILELABEL
        (COND ((NOT (NOT (EQN (LENGTH VARL) NUMBER))) (RETURN NIL)))
        (PROGN
         (SETQ R (RANDOM (LENGTH FVL)))
         (SETQ V (NTH FVL (PLUS R 1)))
         (COND ((NOT (MEMQ V VARL)) (SETQ VARL (CONS V VARL)))))
        (GO WHILELABEL))
      (RETURN VARL))) 
(PUT 'IBALP_QSAT-LOCALSEARCHREC 'NUMBER-OF-ARGS 5) 
(PUT 'IBALP_QSAT-LOCALSEARCHREC 'DEFINED-ON-LINE '2924) 
(PUT 'IBALP_QSAT-LOCALSEARCHREC 'DEFINED-IN-FILE 'REDLOG/IBALP/IBALPQSAT.RED) 
(PUT 'IBALP_QSAT-LOCALSEARCHREC 'PROCEDURE_TYPE
     '(ARROW (TIMES GENERAL GENERAL GENERAL GENERAL GENERAL) GENERAL)) 
(DE IBALP_QSAT-LOCALSEARCHREC (CLAUSEL VARAL SELVARS FVL RESULT)
    (PROG (TV RES PAIR EC UPL PAIR2)
      (SETQ TV (IBALP_GETFREE SELVARS))
      (COND
       ((NULL TV)
        (PROGN
         (COND
          ((AND
            (OR (NULL CLAUSEL)
                (AND (CAR (CDDDDR (CAR CLAUSEL))) (IBALP_CSAT (CDR CLAUSEL))))
            (NOT (MEMBER (IBALP_QSAT-CALCBIN FVL) DONEL*)))
           (PROGN
            (SETQ DONEL* (CONS (IBALP_QSAT-CALCBIN FVL) DONEL*))
            (SETQ NUMLOCS* (PLUS NUMLOCS* 1))
            (SETQ RESULT (CONS (IBALP_EXRES FVL) RESULT))
            NIL)))))
       (T
        (PROGN
         (SETQ EC (IBALP_VAR-SETQ TV 1 (MINUS 42) NIL))
         (COND
          ((NULL (CDR EC))
           (SETQ RESULT
                   (IBALP_QSAT-LOCALSEARCHREC CLAUSEL VARAL SELVARS FVL
                    RESULT))))
         (IBALP_VAR-UNSETQ TV 1)
         (SETQ EC (IBALP_VAR-SETQ TV 0 (MINUS 42) NIL))
         (COND
          ((NULL (CDR EC))
           (SETQ RESULT
                   (IBALP_QSAT-LOCALSEARCHREC CLAUSEL VARAL SELVARS FVL
                    RESULT))))
         (IBALP_VAR-UNSETQ TV 0))))
      (RETURN RESULT))) 
(PUT 'IBALP_QSAT-CALCBIN 'NUMBER-OF-ARGS 1) 
(PUT 'IBALP_QSAT-CALCBIN 'DEFINED-ON-LINE '2950) 
(PUT 'IBALP_QSAT-CALCBIN 'DEFINED-IN-FILE 'REDLOG/IBALP/IBALPQSAT.RED) 
(PUT 'IBALP_QSAT-CALCBIN 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE IBALP_QSAT-CALCBIN (FVL)
    (COND ((NULL FVL) 0)
          (T
           (PLUS (TIMES (CADR (CAR FVL)) (EXPT 2 (DIFFERENCE (LENGTH FVL) 1)))
                 (IBALP_QSAT-CALCBIN (CDR FVL)))))) 
(PUT 'IBALP_PRINTVARS 'NUMBER-OF-ARGS 1) 
(PUT 'IBALP_PRINTVARS 'DEFINED-ON-LINE '2957) 
(PUT 'IBALP_PRINTVARS 'DEFINED-IN-FILE 'REDLOG/IBALP/IBALPQSAT.RED) 
(PUT 'IBALP_PRINTVARS 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE IBALP_PRINTVARS (FVL)
    (PROG (V)
      (SETQ V FVL)
     LAB
      (COND ((NULL V) (RETURN NIL)))
      ((LAMBDA (V) (IOTO_TPRIN2T (LIST (CAR V) " " (CADR V)))) (CAR V))
      (SETQ V (CDR V))
      (GO LAB))) 
(PUT 'IBALP_QSAT-GETUPL 'NUMBER-OF-ARGS 1) 
(PUT 'IBALP_QSAT-GETUPL 'DEFINED-ON-LINE '2962) 
(PUT 'IBALP_QSAT-GETUPL 'DEFINED-IN-FILE 'REDLOG/IBALP/IBALPQSAT.RED) 
(PUT 'IBALP_QSAT-GETUPL 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE IBALP_QSAT-GETUPL (CLAUSEL)
    (PROG (UPL H)
      (PROG (CLAUSE)
        (SETQ CLAUSE CLAUSEL)
       LAB
        (COND ((NULL CLAUSE) (RETURN NIL)))
        ((LAMBDA (CLAUSE)
           (COND
            ((SETQ H (IBALP_QSAT-ISUNIT CLAUSE))
             (SETQ UPL (CONS (CONS H CLAUSE) UPL)))))
         (CAR CLAUSE))
        (SETQ CLAUSE (CDR CLAUSE))
        (GO LAB))
      (RETURN UPL))) 
(PUT 'IBALP_EXRES2 'NUMBER-OF-ARGS 2) 
(PUT 'IBALP_EXRES2 'DEFINED-ON-LINE '2972) 
(PUT 'IBALP_EXRES2 'DEFINED-IN-FILE 'REDLOG/IBALP/IBALPQSAT.RED) 
(PUT 'IBALP_EXRES2 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE IBALP_EXRES2 (RESULTL FVL)
    (PROG (L TL)
      (SETQ L (LENGTH FVL))
      (COND ((EQN (LENGTH RESULTL) 0) (RETURN (LIST 'FALSE))))
      (COND ((EQN (LENGTH RESULTL) 1) (RETURN (CAR RESULTL))))
      (COND ((EQN (LENGTH RESULTL) (EXPT 2 L)) (RETURN (LIST 'TRUE))))
      (PROG (RES)
        (SETQ RES RESULTL)
       LAB
        (COND ((NULL RES) (RETURN NIL)))
        ((LAMBDA (RES) (PROGN (SETQ TL (CONS RES TL)))) (CAR RES))
        (SETQ RES (CDR RES))
        (GO LAB))
      (SETQ TL (CONS 'OR TL))
      (RETURN TL))) 
(PUT 'IBALP_EXRES 'NUMBER-OF-ARGS 1) 
(PUT 'IBALP_EXRES 'DEFINED-ON-LINE '2988) 
(PUT 'IBALP_EXRES 'DEFINED-IN-FILE 'REDLOG/IBALP/IBALPQSAT.RED) 
(PUT 'IBALP_EXRES 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE IBALP_EXRES (VL)
    (PROG (TL VAR RES)
      (PROG (V)
        (SETQ V VL)
       LAB
        (COND ((NULL V) (RETURN NIL)))
        ((LAMBDA (V)
           (PROGN
            (SETQ VAR (LIST 'EQUAL (CAR V) (CADR V)))
            (SETQ TL (CONS VAR TL))
            NIL))
         (CAR V))
        (SETQ V (CDR V))
        (GO LAB))
      (COND
       ((GREATERP (LENGTH TL) 1)
        (PROGN
         (PROG (V)
           (SETQ V TL)
          LAB
           (COND ((NULL V) (RETURN NIL)))
           ((LAMBDA (V) (SETQ RES (CONS V RES))) (CAR V))
           (SETQ V (CDR V))
           (GO LAB))
         (SETQ RES (CONS 'AND RES))))
       (T (SETQ RES (CAR TL))))
      (RETURN RES))) 
(PUT 'IBALP_GETFREE 'NUMBER-OF-ARGS 1) 
(PUT 'IBALP_GETFREE 'DEFINED-ON-LINE '3005) 
(PUT 'IBALP_GETFREE 'DEFINED-IN-FILE 'REDLOG/IBALP/IBALPQSAT.RED) 
(PUT 'IBALP_GETFREE 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE IBALP_GETFREE (LIST)
    (COND ((NULL LIST) NIL) ((NULL (CADR (CAR LIST))) (CAR LIST))
          (T (IBALP_GETFREE (CDR LIST))))) 
(PUT 'IBALP_GETFREE-DLCS 'NUMBER-OF-ARGS 1) 
(PUT 'IBALP_GETFREE-DLCS 'DEFINED-ON-LINE '3014) 
(PUT 'IBALP_GETFREE-DLCS 'DEFINED-IN-FILE 'REDLOG/IBALP/IBALPQSAT.RED) 
(PUT 'IBALP_GETFREE-DLCS 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE IBALP_GETFREE-DLCS (LIST)
    (PROG (TV MAX)
      (SETQ TV (IBALP_GETFREE LIST))
      (COND ((NULL TV) (RETURN NIL)))
      (SETQ MAX (PLUS (CADR (CDDDDR TV)) (CAR (CDDDDR TV))))
      (PROG (VAR)
        (SETQ VAR LIST)
       LAB
        (COND ((NULL VAR) (RETURN NIL)))
        ((LAMBDA (VAR)
           (COND
            ((NULL (CADR VAR))
             (COND
              ((GREATERP (PLUS (CADR (CDDDDR VAR)) (CAR (CDDDDR VAR))) MAX)
               (PROGN
                (SETQ TV VAR)
                (SETQ MAX (PLUS (CADR (CDDDDR VAR)) (CAR (CDDDDR VAR))))))))))
         (CAR VAR))
        (SETQ VAR (CDR VAR))
        (GO LAB))
      (RETURN TV))) 
(PUT 'IBALP_PSATP 'NUMBER-OF-ARGS 1) 
(PUT 'IBALP_PSATP 'DEFINED-ON-LINE '3032) 
(PUT 'IBALP_PSATP 'DEFINED-IN-FILE 'REDLOG/IBALP/IBALPQSAT.RED) 
(PUT 'IBALP_PSATP 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE IBALP_PSATP (VARAL)
    (PROG (RET)
      (SETQ RET T)
      (PROG (V)
        (SETQ V VARAL)
       LAB
        (COND ((NULL V) (RETURN NIL)))
        ((LAMBDA (V)
           (PROGN
            (COND
             ((EQ (CAR (CDDDDR (CDDDDR (CDDDDR (CDR V))))) 'ALL)
              (SETQ RET NIL)))
            NIL))
         (CAR V))
        (SETQ V (CDR V))
        (GO LAB))
      (RETURN RET))) 
(PUT 'IBALP_SPLITVARS 'NUMBER-OF-ARGS 2) 
(PUT 'IBALP_SPLITVARS 'DEFINED-ON-LINE '3047) 
(PUT 'IBALP_SPLITVARS 'DEFINED-IN-FILE 'REDLOG/IBALP/IBALPQSAT.RED) 
(PUT 'IBALP_SPLITVARS 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE IBALP_SPLITVARS (PQSAT VARAL)
    (PROG (FVL TV)
      (PROG (V)
        (SETQ V PQSAT)
       LAB
        (COND ((NULL V) (RETURN NIL)))
        ((LAMBDA (V)
           (PROGN
            (SETQ TV (CDR (ATSOC V VARAL)))
            (SETQ FVL (CONS TV FVL))
            (SETQ VARAL (DELETE (CONS V TV) VARAL))))
         (CAR V))
        (SETQ V (CDR V))
        (GO LAB))
      (RETURN (CONS VARAL FVL)))) 
(PUT 'IBALP_QSAT-DAV 'NUMBER-OF-ARGS 1) 
(PUT 'IBALP_QSAT-DAV 'DEFINED-ON-LINE '3061) 
(PUT 'IBALP_QSAT-DAV 'DEFINED-IN-FILE 'REDLOG/IBALP/IBALPQSAT.RED) 
(PUT 'IBALP_QSAT-DAV 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE IBALP_QSAT-DAV (VARAL)
    (PROG (V)
      (SETQ V VARAL)
     LAB
      (COND ((NULL V) (RETURN NIL)))
      ((LAMBDA (V)
         (PROGN
          (COND ((CADR (CDR V)) (IBALP_VAR-UNSETQ (CDR V) (CADR (CDR V)))))
          (SETCAR (CDDR (CDDDDR (CDDDDR (CDDDDR (CDR V))))) NIL)))
       (CAR V))
      (SETQ V (CDR V))
      (GO LAB))) 
(ENDMODULE) 