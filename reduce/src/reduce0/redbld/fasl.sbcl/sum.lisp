(cl:declaim (cl:optimize cl:debug cl:safety))
(cl:declaim (sb-ext:muffle-conditions sb-ext:compiler-note cl:style-warning))
(MODULE (LIST 'SUM)) 
(CREATE-PACKAGE '(SUM SUM2 COMPLX PROD) '(CONTRIB SUM)) 
(FLUID '(*ZEILBERG)) 
(SWITCH (LIST 'ZEILBERG)) 
(PUT 'SUM 'SIMPFN 'SIMP-SUM) 
(PUT 'FREEOF-DF 'NUMBER-OF-ARGS 2) 
(PUT 'FREEOF-DF 'DEFINED-ON-LINE '39) 
(PUT 'FREEOF-DF 'DEFINED-IN-FILE 'SUM/SUM.RED) 
(PUT 'FREEOF-DF 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE FREEOF-DF (U V)
    (COND ((OR (ATOM U) (EQ (CAR U) '|:DN:|) (GET (CAR U) 'DNAME)) T)
          ((EQ (CAR U) '*SQ) (FREEOF-DF (PREPSQ (CADR U)) V))
          ((EQ (CAR U) 'DF)
           (AND (FREEOF-DF (CADR U) V) (NOT (SMEMBER V (CDDR U)))))
          (T (FREEOF-DFL (CDR U) V)))) 
(PUT 'FREEOF-DFL 'NUMBER-OF-ARGS 2) 
(PUT 'FREEOF-DFL 'DEFINED-ON-LINE '47) 
(PUT 'FREEOF-DFL 'DEFINED-IN-FILE 'SUM/SUM.RED) 
(PUT 'FREEOF-DFL 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE FREEOF-DFL (U V)
    (OR (ATOM U) (AND (FREEOF-DF (CAR U) V) (FREEOF-DFL (CDR U) V)))) 
(PUT 'SIMP-SUM 'NUMBER-OF-ARGS 1) 
(PUT 'SIMP-SUM 'DEFINED-ON-LINE '50) 
(PUT 'SIMP-SUM 'DEFINED-IN-FILE 'SUM/SUM.RED) 
(PUT 'SIMP-SUM 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE SIMP-SUM (U)
    (COND ((SMEMQLP FRLIS* U) (MKSQ (CONS 'SUM U) 1))
          (T
           (PROG (Y)
             (SETQ Y (CDR U))
             (SETQ U (REVAL1 (CAR U) NIL))
             (COND
              ((AND (NOT (ATOM Y)) (NOT (FREEOF-DF U (CAR Y))))
               (COND
                ((ATOM Y)
                 (RETURN
                  (CONS (LIST (CONS (CONS (CAR (FKERN (LIST 'SUM U))) 1) 1))
                        1)))
                (T (RETURN (SUM-DF U Y))))))
             (SETQ U (SIMP* U))
             (RETURN
              (COND ((NULL (CAR U)) U)
                    ((ATOM Y)
                     (CONS
                      (LIST
                       (CONS (CONS (CAR (FKERN (LIST 'SUM (PREPSQ U)))) 1) 1))
                      1))
                    (*ZEILBERG (GOSPER* (MK*SQ U) Y)) (T (SIMP-SUM0 U Y)))))))) 
(ENDMODULE) 