(cl:declaim (cl:optimize cl:debug cl:safety))
(cl:declaim (sb-ext:muffle-conditions sb-ext:compiler-note cl:style-warning))
(MODULE (LIST 'MINLNGTH)) 
(FLAG '(SETLENGTH RESETLENGTH) 'OPFN) 
(PUT 'RESETLENGTH 'STAT 'ENDSTAT) 
(PUT 'SETLENGTH 'NUMBER-OF-ARGS 1) 
(PUT 'SETLENGTH 'DEFINED-ON-LINE '38) 
(PUT 'SETLENGTH 'DEFINED-IN-FILE 'SCOPE/MINLNGTH.RED) 
(PUT 'SETLENGTH 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE SETLENGTH (L)
    (COND
     ((NOT (FIXP (REVAL1 L T)))
      (REDERR "Please use integer values for minimum length setting!!"))
     (T (SETQ MIN-EXPR-LENGTH* (REVAL1 L T))))) 
(PUT 'RESETLENGTH 'NUMBER-OF-ARGS 0) 
(PUT 'RESETLENGTH 'DEFINED-ON-LINE '48) 
(PUT 'RESETLENGTH 'DEFINED-IN-FILE 'SCOPE/MINLNGTH.RED) 
(PUT 'RESETLENGTH 'PROCEDURE_TYPE '(ARROW UNIT GENERAL)) 
(DE RESETLENGTH NIL
    (COND (MIN-EXPR-LENGTH* (PROGN (SETQ MIN-EXPR-LENGTH* NIL) NIL)))) 
(PUT 'COUNTSILENT 'NUMBER-OF-ARGS 1) 
(PUT 'COUNTSILENT 'DEFINED-ON-LINE '57) 
(PUT 'COUNTSILENT 'DEFINED-IN-FILE 'SCOPE/MINLNGTH.RED) 
(PUT 'COUNTSILENT 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE COUNTSILENT (PRF)
    (PROG (TOTCTS RES)
      (SETQ TOTCTS '(0 0 0 0 0 0))
      (SETQ TOTCTS (COUNTS2 (CDR PRF) TOTCTS NIL))
      (SETQ RES 0)
      (PROG (EL)
        (SETQ EL TOTCTS)
       LAB
        (COND ((NULL EL) (RETURN NIL)))
        ((LAMBDA (EL) (SETQ RES (PLUS RES EL))) (CAR EL))
        (SETQ EL (CDR EL))
        (GO LAB))
      (RETURN RES))) 
(PUT 'COUNTS2 'NUMBER-OF-ARGS 3) 
(PUT 'COUNTS2 'DEFINED-ON-LINE '76) 
(PUT 'COUNTS2 'DEFINED-IN-FILE 'SCOPE/MINLNGTH.RED) 
(PUT 'COUNTS2 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL GENERAL) GENERAL)) 
(DE COUNTS2 (EXPRESSION LOCS ROOT)
    (PROG (N+ N- N* N^ N/ NF TLOCS LOPER OPERANDS)
      (COND ((OR (IDP EXPRESSION) (CONSTP EXPRESSION)) (SETQ TLOCS LOCS))
            (T
             (PROGN
              (SETQ N+ (CAR LOCS))
              (SETQ N- (CADR LOCS))
              (SETQ N* (CADDR LOCS))
              (SETQ N^ (CADDDR LOCS))
              (SETQ N/ (CAR (CDDDDR LOCS)))
              (SETQ NF (CAR (REVERSE LOCS)))
              (SETQ LOPER (CAR EXPRESSION))
              (SETQ OPERANDS (CDR EXPRESSION))
              (COND
               ((MEMQ LOPER '(PLUS DIFFERENCE))
                (SETQ N+ (PLUS (DIFFERENCE (LENGTH OPERANDS) 1) N+)))
               ((EQ LOPER 'MINUS)
                (COND ((NEQ ROOT 'PLUS) (SETQ N- (PLUS 1 N-)))))
               ((EQ LOPER 'TIMES)
                (SETQ N* (PLUS (DIFFERENCE (LENGTH OPERANDS) 1) N*)))
               ((EQ LOPER 'EXPT)
                (COND ((INTEGERP (CADR OPERANDS)) (SETQ N^ (PLUS 1 N^)))
                      (T (SETQ NF MIN-EXPR-LENGTH*))))
               ((EQ LOPER 'QUOTIENT) (SETQ N/ (PLUS 1 N/)))
               ((NOT (SUBSCRIPTEDVARP LOPER)) (SETQ NF MIN-EXPR-LENGTH*)))
              (SETQ TLOCS (LIST N+ N- N* N^ N/ NF))
              (COND
               ((NOT (SUBSCRIPTEDVARP LOPER))
                (PROG (OP)
                  (SETQ OP OPERANDS)
                 LAB
                  (COND ((NULL OP) (RETURN NIL)))
                  ((LAMBDA (OP) (SETQ TLOCS (COUNTS2 OP TLOCS LOPER)))
                   (CAR OP))
                  (SETQ OP (CDR OP))
                  (GO LAB))))
              NIL)))
      (RETURN TLOCS))) 
(DE PROTECTED (A PN) (MEMBER (COND ((ATOM A) A) (T (CAR A))) PN)) 
(PUT 'PROTECTED 'NUMBER-OF-ARGS 2) 
(PUT 'PROTECTED 'DEFINED-ON-LINE '116) 
(PUT 'PROTECTED 'DEFINED-IN-FILE 'SCOPE/MINLNGTH.RED) 
(PUT 'PROTECTED 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(PUTC 'PROTECTED 'INLINE
      '(LAMBDA (A PN) (MEMBER (COND ((ATOM A) A) (T (CAR A))) PN))) 
(PUT 'MAKE_MIN_LENGTH 'NUMBER-OF-ARGS 2) 
(PUT 'MAKE_MIN_LENGTH 'DEFINED-ON-LINE '119) 
(PUT 'MAKE_MIN_LENGTH 'DEFINED-IN-FILE 'SCOPE/MINLNGTH.RED) 
(PUT 'MAKE_MIN_LENGTH 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE MAKE_MIN_LENGTH (PREFIXLIST PROTECTEDNAMES)
    (PROG (EXP LHS RHS NPFL DELLST ASS)
      (SETQ EXP *EXP)
      (SETQ *EXP NIL)
      (PROG ()
       WHILELABEL
        (COND ((NOT PREFIXLIST) (RETURN NIL)))
        (PROGN
         (SETQ ASS (CAR PREFIXLIST))
         (SETQ PREFIXLIST (CDR PREFIXLIST))
         (COND
          (DELLST
           (PROGN
            (SETQ LHS (CAR ASS))
            (SETQ RHS (REPLACEIN (CDR ASS) DELLST))
            (CHECK_INFO RHS)
            (SETQ ASS (CONS LHS (REVAL1 RHS T))))))
         (COND
          ((AND
            (NOT
             (MEMBER (COND ((ATOM (CAR ASS)) (CAR ASS)) (T (CAR (CAR ASS))))
                     PROTECTEDNAMES))
            (LESSP (COUNTSILENT ASS) MIN-EXPR-LENGTH*))
           (SETQ DELLST (CONS ASS DELLST)))
          (T (SETQ NPFL (CONS ASS NPFL))))
         NIL)
        (GO WHILELABEL))
      (SETQ *EXP EXP)
      (RETURN (REVERSE NPFL)))) 
(PUT 'SCOPE_SWITCHES2 'NUMBER-OF-ARGS 1) 
(PUT 'SCOPE_SWITCHES2 'DEFINED-ON-LINE '145) 
(PUT 'SCOPE_SWITCHES2 'DEFINED-IN-FILE 'SCOPE/MINLNGTH.RED) 
(PUT 'SCOPE_SWITCHES2 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE SCOPE_SWITCHES2 (CHOICE)
    (PROG (SWITCHES TWOBLANKS EIGHTBLANKS PRTLIST LEN FIRSTPART)
      (SETQ SWITCHES
              '(*ACINFO *AGAIN *DOUBLE *EVALLHSEQP *EXP *FORT *FTCH *GENTRANOPT
                *INPUTC *INTERN *NAT *PERIOD *PREFIX *PRIALL *PRIMAT *ROUNDBF
                *ROUNDED *SIDREL *VECTORC))
      (SETQ TWOBLANKS '(! | | ! | |))
      (SETQ EIGHTBLANKS
              (APPEND (APPEND (APPEND TWOBLANKS TWOBLANKS) TWOBLANKS)
                      TWOBLANKS))
      (PROG (SWTCH)
        (SETQ SWTCH (REVERSE SWITCHES))
       LAB
        (COND ((NULL SWTCH) (RETURN NIL)))
        ((LAMBDA (SWTCH)
           (COND
            ((EQUAL CHOICE (EVAL SWTCH))
             (SETQ PRTLIST
                     (APPEND (APPEND (CDDR (EXPLODE SWTCH)) TWOBLANKS)
                             PRTLIST)))))
         (CAR SWTCH))
        (SETQ SWTCH (CDR SWTCH))
        (GO LAB))
      (PROG ()
       WHILELABEL
        (COND ((NOT (GREATERP (SETQ LEN (LENGTH PRTLIST)) 72)) (RETURN NIL)))
        (PROGN
         (SETQ FIRSTPART (PNTH (REVERSE PRTLIST) (DIFFERENCE LEN 71)))
         (SETQ PRTLIST (PNTH PRTLIST 73))
         (PROG ()
          WHILELABEL
           (COND ((NOT (NEQ (CAR FIRSTPART) (CAR '(!)))) (RETURN NIL)))
           (PROGN
            (SETQ FIRSTPART (CONS (CAR PRTLIST) FIRSTPART))
            (SETQ PRTLIST (CDR PRTLIST))
            NIL)
           (GO WHILELABEL))
         (SETQ PRTLIST (CONS (CAR FIRSTPART) PRTLIST))
         (SETQ FIRSTPART (REVERSE (CDR FIRSTPART)))
         (PROG ()
          WHILELABEL
           (COND ((NOT (MEMBER (CAR FIRSTPART) '(! | |))) (RETURN NIL)))
           (SETQ FIRSTPART (CDR FIRSTPART))
           (GO WHILELABEL))
         (PROGN (PRIN2 (COMPRESS FIRSTPART)) NIL)
         (TERPRI)
         (PROGN (PRIN2 (COMPRESS EIGHTBLANKS)) NIL)
         NIL)
        (GO WHILELABEL))
      (COND
       (PRTLIST
        (PROG ()
         WHILELABEL
          (COND
           ((NOT
             (OR (EQ (CAR PRTLIST) (CAR '(!)))
                 (EQ (CAR PRTLIST) (CAR '(| |)))))
            (RETURN NIL)))
          (SETQ PRTLIST (CDR PRTLIST))
          (GO WHILELABEL))))
      (COND (PRTLIST (PROGN (PRIN2 (COMPRESS PRTLIST)) NIL)))
      (TERPRI))) 
(PUT 'SCOPE_ONS 'NUMBER-OF-ARGS 0) 
(PUT 'SCOPE_ONS 'DEFINED-ON-LINE '185) 
(PUT 'SCOPE_ONS 'DEFINED-IN-FILE 'SCOPE/MINLNGTH.RED) 
(PUT 'SCOPE_ONS 'PROCEDURE_TYPE '(ARROW UNIT GENERAL)) 
(DE SCOPE_ONS NIL (PROGN (PROGN (PRIN2 " ON  :  ") NIL) (SCOPE_SWITCHES2 'T))) 
(PUT 'SCOPE_OFFS 'NUMBER-OF-ARGS 0) 
(PUT 'SCOPE_OFFS 'DEFINED-ON-LINE '191) 
(PUT 'SCOPE_OFFS 'DEFINED-IN-FILE 'SCOPE/MINLNGTH.RED) 
(PUT 'SCOPE_OFFS 'PROCEDURE_TYPE '(ARROW UNIT GENERAL)) 
(DE SCOPE_OFFS NIL
    (PROGN (PROGN (PRIN2 " OFF :  ") NIL) (SCOPE_SWITCHES2 'NIL))) 
(PUT 'SCOPE_SWITCHES 'NUMBER-OF-ARGS 0) 
(PUT 'SCOPE_SWITCHES 'DEFINED-ON-LINE '196) 
(PUT 'SCOPE_SWITCHES 'DEFINED-IN-FILE 'SCOPE/MINLNGTH.RED) 
(PUT 'SCOPE_SWITCHES 'PROCEDURE_TYPE '(ARROW UNIT GENERAL)) 
(DE SCOPE_SWITCHES NIL (PROG () (TERPRI) (SCOPE_ONS) (SCOPE_OFFS))) 
(FLAG '(SCOPE_SWITCHES) 'OPFN) 
(PUT 'SCOPE_SWITCHES 'STAT 'ENDSTAT) 
(FLAG '(SCOPE_ONS) 'OPFN) 
(PUT 'SCOPE_ONS 'STAT 'ENDSTAT) 
(FLAG '(SCOPE_OFFS) 'OPFN) 
(PUT 'SCOPE_OFFS 'STAT 'ENDSTAT) 
(ENDMODULE) 