(cl:declaim (cl:optimize cl:debug cl:safety))
(cl:declaim (sb-ext:muffle-conditions sb-ext:compiler-note cl:style-warning))
(MODULE (LIST 'CDIFFX)) 
(FLUID '(ALLOWED_OPR FORBIDDEN_OPR)) 
(FLAG '(LOSOP) 'OPFN) 
(PUT 'LOSOP 'NUMBER-OF-ARGS 4) 
(PUT 'LOSOP 'DEFINED-ON-LINE '71) 
(PUT 'LOSOP 'DEFINED-IN-FILE 'CDIFF/CDIFFX.RED) 
(PUT 'LOSOP 'PROCEDURE_TYPE
     '(ARROW (TIMES GENERAL GENERAL GENERAL GENERAL) GENERAL)) 
(DE LOSOP (M N KOPLIST COPLIST)
    (PROG ()
      (SETQ KOPLIST (COND ((ATOM KOPLIST) (LIST KOPLIST)) (T KOPLIST)))
      (PROG (I)
        (SETQ I M)
       LAB
        (COND ((MINUSP (DIFFERENCE N I)) (RETURN NIL)))
        (PROG () (ASSGNPRI I NIL 'ONLY) (ELIM I KOPLIST COPLIST))
        (SETQ I (PLUS2 I 1))
        (GO LAB))
      (PROGN
       (ASSGNPRI (AEVAL "Totaal ") NIL 'FIRST)
       (ASSGNPRI (AEVAL (LIST 'TOTAAL KOPLIST)) NIL NIL)
       (ASSGNPRI (AEVAL " coefficienten opgelost") NIL 'LAST)))) 
(FLAG '(TOTAAL) 'OPFN) 
(PUT 'TOTAAL 'NUMBER-OF-ARGS 1) 
(PUT 'TOTAAL 'DEFINED-ON-LINE '80) 
(PUT 'TOTAAL 'DEFINED-IN-FILE 'CDIFF/CDIFFX.RED) 
(PUT 'TOTAAL 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE TOTAAL (OPLIST)
    (PROG (EL FORALL-RESULT)
      (SETQ EL OPLIST)
      (SETQ FORALL-RESULT 0)
     LAB1
      (COND ((NULL EL) (RETURN FORALL-RESULT)))
      (SETQ FORALL-RESULT
              (PLUS ((LAMBDA (EL) (LENGTH (GET EL 'KVALUE))) (CAR EL))
                    FORALL-RESULT))
      (SETQ EL (CDR EL))
      (GO LAB1))) 
(FLAG '(OPLOSMOGELIJKHEID) 'OPFN) 
(PUT 'OPLOSMOGELIJKHEID 'NUMBER-OF-ARGS 3) 
(PUT 'OPLOSMOGELIJKHEID 'DEFINED-ON-LINE '84) 
(PUT 'OPLOSMOGELIJKHEID 'DEFINED-IN-FILE 'CDIFF/CDIFFX.RED) 
(PUT 'OPLOSMOGELIJKHEID 'PROCEDURE_TYPE
     '(ARROW (TIMES GENERAL GENERAL GENERAL) GENERAL)) 
(DE OPLOSMOGELIJKHEID (M N L)
    (CONS 'LIST
          (PROG (I FORALL-RESULT FORALL-ENDPTR)
            (SETQ I M)
           STARTOVER
            (COND ((MINUSP (DIFFERENCE N I)) (RETURN NIL)))
            (SETQ FORALL-RESULT
                    (COND
                     ((NEQ
                       (SOLVABLE_KERNELS (LIST 'NUM (LIST 'EQU I))
                        (REVAL1 'ALLOWED_OPR T) (REVAL1 'FORBIDDEN_OPR T))
                       '(LIST))
                      (COND
                       ((LEQ (AEVAL* (LIST 'LENGTH (LIST 'NUM (LIST 'EQU I))))
                             L)
                        (LIST
                         (LIST 'LIST I
                               (AEVAL*
                                (LIST 'NUM (LIST 'LENGTH (LIST 'EQU I)))))))
                       (T NIL)))))
            (SETQ FORALL-ENDPTR (LASTPAIR FORALL-RESULT))
            (SETQ I (PLUS2 I 1))
            (COND ((ATOM FORALL-ENDPTR) (GO STARTOVER)))
           LOOPLABEL
            (COND ((MINUSP (DIFFERENCE N I)) (RETURN FORALL-RESULT)))
            (RPLACD FORALL-ENDPTR
                    (COND
                     ((NEQ
                       (SOLVABLE_KERNELS (LIST 'NUM (LIST 'EQU I))
                        (REVAL1 'ALLOWED_OPR T) (REVAL1 'FORBIDDEN_OPR T))
                       '(LIST))
                      (COND
                       ((LEQ (AEVAL* (LIST 'LENGTH (LIST 'NUM (LIST 'EQU I))))
                             L)
                        (LIST
                         (LIST 'LIST I
                               (AEVAL*
                                (LIST 'NUM (LIST 'LENGTH (LIST 'EQU I)))))))
                       (T NIL)))))
            (SETQ FORALL-ENDPTR (LASTPAIR FORALL-ENDPTR))
            (SETQ I (PLUS2 I 1))
            (GO LOOPLABEL)))) 
(PUT 'PROPL 'NUMBER-OF-ARGS 1) 
(FLAG '(PROPL) 'OPFN) 
(PUT 'PROPL 'DEFINED-ON-LINE '91) 
(PUT 'PROPL 'DEFINED-IN-FILE 'CDIFF/CDIFFX.RED) 
(PUT 'PROPL 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE PROPL (L)
    (PROG (EL)
      (SETQ EL (GETRLIST (AEVAL L)))
     LAB
      (COND ((NULL EL) (RETURN NIL)))
      ((LAMBDA (EL)
         (PROGN
          (ASSGNPRI (AEVAL (LIST 'FIRST EL)) NIL 'FIRST)
          (ASSGNPRI (AEVAL "  ") NIL NIL)
          (ASSGNPRI (AEVAL (LIST 'EQU (LIST 'FIRST EL))) NIL 'LAST)))
       (CAR EL))
      (SETQ EL (CDR EL))
      (GO LAB))) 
(FLAG '(ELIM) 'OPFN) 
(PUT 'ELIM 'NUMBER-OF-ARGS 3) 
(PUT 'ELIM 'DEFINED-ON-LINE '95) 
(PUT 'ELIM 'DEFINED-IN-FILE 'CDIFF/CDIFFX.RED) 
(PUT 'ELIM 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL GENERAL) GENERAL)) 
(DE ELIM (I KOPLIST COPLIST)
    (PROG (LIJST)
      (SETQ LIJST (CDR (SOLVABLE_KERNELS (LIST 'EQU I) KOPLIST COPLIST)))
      (COND
       (LIJST
        (COND
         ((SETQ LIJST (ORDLIST LIJST))
          (PROGN
           (LINEAR_SOLVE_AND_ASSIGN (LIST 'EQU I) (CAR LIJST))
           (SETK (LIST 'EQU I) 0)
           (SETQ LIJST (CAR LIJST))
           (TERPRI)
           (ASSIGNPRI (LIST 'LIST I LIJST) NIL T)
           NIL))))))) 
(PUT 'ORDLIST 'NUMBER-OF-ARGS 1) 
(PUT 'ORDLIST 'DEFINED-ON-LINE '113) 
(PUT 'ORDLIST 'DEFINED-IN-FILE 'CDIFF/CDIFFX.RED) 
(PUT 'ORDLIST 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE ORDLIST (U) (ORDLIST1 U NIL)) 
(PUT 'ORDLIST1 'NUMBER-OF-ARGS 2) 
(PUT 'ORDLIST1 'DEFINED-ON-LINE '116) 
(PUT 'ORDLIST1 'DEFINED-IN-FILE 'CDIFF/CDIFFX.RED) 
(PUT 'ORDLIST1 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE ORDLIST1 (U V)
    (COND ((NULL U) V) (T (ORDLIST1 (CDR U) (ORDLIST2 (CAR U) V))))) 
(PUT 'ORDLIST2 'NUMBER-OF-ARGS 2) 
(PUT 'ORDLIST2 'DEFINED-ON-LINE '120) 
(PUT 'ORDLIST2 'DEFINED-IN-FILE 'CDIFF/CDIFFX.RED) 
(PUT 'ORDLIST2 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE ORDLIST2 (X V)
    (COND ((ORDP X (CAR V)) (CONS X V))
          (T (CONS (CAR V) (ORDLIST2 X (CDR V)))))) 
(FLAG '(SCHOONOP) 'OPFN) 
(PUT 'SCHOONOP 'NUMBER-OF-ARGS 1) 
(PUT 'SCHOONOP 'DEFINED-ON-LINE '125) 
(PUT 'SCHOONOP 'DEFINED-IN-FILE 'CDIFF/CDIFFX.RED) 
(PUT 'SCHOONOP 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE SCHOONOP (I)
    (PROG (OL)
      (SETQ OL (CDR (MULTI_COEFF (LIST 'EQU I) (CDR (REVAL1 'VARS T)))))
      (COND ((EQUAL (LENGTH OL) 1) (RETURN I)))
      (COND
       ((NEQ (CAR OL) 0)
        (SETK
         (LIST 'EQU
               (LIST 'PUT_EQUATIONS_USED
                     (LIST 'PLUS (LIST 'EQUATIONS_USED) 1)))
         (CAR OL))))
      (PROG (EL)
        (SETQ EL (CDR OL))
       LAB
        (COND ((NULL EL) (RETURN NIL)))
        ((LAMBDA (EL)
           (SETK
            (LIST 'EQU
                  (LIST 'PUT_EQUATIONS_USED
                        (LIST 'PLUS (LIST 'EQUATIONS_USED) 1)))
            (CADDR EL)))
         (CAR EL))
        (SETQ EL (CDR EL))
        (GO LAB))
      (SETK (LIST 'EQU I) 0)
      (RETURN (EQUATIONS_USED)))) 
(PUT 'HL 'NUMBER-OF-ARGS 3) 
(PUT 'HL 'DEFINED-ON-LINE '135) 
(PUT 'HL 'DEFINED-IN-FILE 'CDIFF/CDIFFX.RED) 
(PUT 'HL 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL GENERAL) GENERAL)) 
(DE HL (M N L)
    (PROG (I)
      (SETQ I M)
     LAB
      (COND ((MINUSP (DIFFERENCE N I)) (RETURN NIL)))
      (COND
       ((AND (LEQ (LENGTH (NUM (EQU I))) L) (NEQ (EQU I) 0))
        (ELIM I ALLOWED_OPR FORBIDDEN_OPR))
       ((EQUAL (REMAINDER I 10) 0) (PROGN (PRIN2 I) NIL)))
      (SETQ I (PLUS2 I 1))
      (GO LAB))) 
(PUT 'H 'NUMBER-OF-ARGS 1) 
(PUT 'H 'DEFINED-ON-LINE '139) 
(PUT 'H 'DEFINED-IN-FILE 'CDIFF/CDIFFX.RED) 
(PUT 'H 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE H (I) (ELIM I ALLOWED_OPR FORBIDDEN_OPR)) 
(FLAG '(CLEAN) 'OPFN) 
(PUT 'CLEAN 'NUMBER-OF-ARGS 1) 
(PUT 'CLEAN 'DEFINED-ON-LINE '142) 
(PUT 'CLEAN 'DEFINED-IN-FILE 'CDIFF/CDIFFX.RED) 
(PUT 'CLEAN 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE CLEAN (I)
    (PROG (OL)
      (SETQ OL (CDR (OPERATOR_COEFF (LIST 'EQU I) 'EXT)))
      (COND
       ((NEQ (CAR OL) 0)
        (SETK (LIST 'EQU (LIST 'PTE (LIST 'PLUS (LIST 'EQUATIONS_USED) 1)))
              (CAR OL))))
      (PROG (EL)
        (SETQ EL (CDR OL))
       LAB
        (COND ((NULL EL) (RETURN NIL)))
        ((LAMBDA (EL)
           (SETK (LIST 'EQU (LIST 'PTE (LIST 'PLUS 'TE 1))) (CADDR EL)))
         (CAR EL))
        (SETQ EL (CDR EL))
        (GO LAB))
      (SETK (LIST 'EQU I) 0)
      (RETURN (EQUATIONS_USED)))) 
(PUT 'PRL 'NUMBER-OF-ARGS 3) 
(PUT 'PRL 'DEFINED-ON-LINE '152) 
(PUT 'PRL 'DEFINED-IN-FILE 'CDIFF/CDIFFX.RED) 
(PUT 'PRL 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL GENERAL) GENERAL)) 
(DE PRL (M N L)
    (PROG (I)
      (SETQ I M)
     LAB
      (COND ((MINUSP (DIFFERENCE N I)) (RETURN NIL)))
      (COND
       ((AND (LEQ (LENGTH (EQU I)) L) (NEQ (EQU I) 0))
        (PROGN (PRIN2 I) (PRIN2 "  ") (PRIN2 (EQU I)) NIL)))
      (SETQ I (PLUS2 I 1))
      (GO LAB))) 
(PUT 'MKPARTITIONS 'NUMBER-OF-ARGS 6) 
(PUT 'MKPARTITIONS 'DEFINED-ON-LINE '158) 
(PUT 'MKPARTITIONS 'DEFINED-IN-FILE 'CDIFF/CDIFFX.RED) 
(PUT 'MKPARTITIONS 'PROCEDURE_TYPE
     '(ARROW (TIMES GENERAL GENERAL GENERAL GENERAL GENERAL GENERAL) GENERAL)) 
(DE MKPARTITIONS (M Q MIN MAX PARTITIE PARTITIELIST)
    (COND
     ((EQUAL Q 1)
      (COND ((GEQ M MIN) (CONS (REVERSE (CONS M PARTITIE)) PARTITIELIST))
            (T PARTITIELIST)))
     ((GREATERP MIN MAX) PARTITIELIST)
     (T
      (MKPARTITIONS (DIFFERENCE M MIN) (DIFFERENCE Q 1) MIN
       (QUOTIENT (DIFFERENCE M MIN) (DIFFERENCE Q 1)) (CONS MIN PARTITIE)
       (MKPARTITIONS M Q (PLUS MIN 1) MAX PARTITIE PARTITIELIST))))) 
(PUT 'PARTITIES 'NUMBER-OF-ARGS 3) 
(PUT 'PARTITIES 'DEFINED-ON-LINE '167) 
(PUT 'PARTITIES 'DEFINED-IN-FILE 'CDIFF/CDIFFX.RED) 
(PUT 'PARTITIES 'PROCEDURE_TYPE
     '(ARROW (TIMES GENERAL GENERAL GENERAL) GENERAL)) 
(DE PARTITIES (M Q MIN) (MKPARTITIONS M Q MIN (QUOTIENT M Q) NIL NIL)) 
(PUT 'MKALLPARTITIONS 'NUMBER-OF-ARGS 1) 
(PUT 'MKALLPARTITIONS 'DEFINED-ON-LINE '170) 
(PUT 'MKALLPARTITIONS 'DEFINED-IN-FILE 'CDIFF/CDIFFX.RED) 
(PUT 'MKALLPARTITIONS 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE MKALLPARTITIONS (M)
    (PROG (I FORALL-RESULT FORALL-ENDPTR)
      (SETQ I M)
     STARTOVER
      (COND ((MINUSP (TIMES (MINUS 1) (DIFFERENCE 1 I))) (RETURN NIL)))
      (SETQ FORALL-RESULT (PARTITIES M I 1))
      (SETQ FORALL-ENDPTR (LASTPAIR FORALL-RESULT))
      (SETQ I (PLUS2 I (MINUS 1)))
      (COND ((ATOM FORALL-ENDPTR) (GO STARTOVER)))
     LOOPLABEL
      (COND
       ((MINUSP (TIMES (MINUS 1) (DIFFERENCE 1 I))) (RETURN FORALL-RESULT)))
      (RPLACD FORALL-ENDPTR (PARTITIES M I 1))
      (SETQ FORALL-ENDPTR (LASTPAIR FORALL-ENDPTR))
      (SETQ I (PLUS2 I (MINUS 1)))
      (GO LOOPLABEL))) 
(FLAG '(MKVARLIST) 'OPFN) 
(PUT 'MKVARLIST 'NUMBER-OF-ARGS 2) 
(PUT 'MKVARLIST 'DEFINED-ON-LINE '174) 
(PUT 'MKVARLIST 'DEFINED-IN-FILE 'CDIFF/CDIFFX.RED) 
(PUT 'MKVARLIST 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE MKVARLIST (M Q) (CONS 'LIST (PROCESSPARTITIELIST (PARTITIES M Q 0) NIL))) 
(PUT 'PROCESSPARTITIELIST 'NUMBER-OF-ARGS 2) 
(PUT 'PROCESSPARTITIELIST 'DEFINED-ON-LINE '177) 
(PUT 'PROCESSPARTITIELIST 'DEFINED-IN-FILE 'CDIFF/CDIFFX.RED) 
(PUT 'PROCESSPARTITIELIST 'PROCEDURE_TYPE
     '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE PROCESSPARTITIELIST (PARTITIELIST VARLIST)
    (COND ((NULL PARTITIELIST) VARLIST)
          (T
           (PROCESSPARTITIELIST (CDR PARTITIELIST)
            (PROCESSPARTITIE (CAR PARTITIELIST) 0 NIL (CONS NIL NIL)
             VARLIST))))) 
(PUT 'PROCESSPARTITIE 'NUMBER-OF-ARGS 5) 
(PUT 'PROCESSPARTITIE 'DEFINED-ON-LINE '182) 
(PUT 'PROCESSPARTITIE 'DEFINED-IN-FILE 'CDIFF/CDIFFX.RED) 
(PUT 'PROCESSPARTITIE 'PROCEDURE_TYPE
     '(ARROW (TIMES GENERAL GENERAL GENERAL GENERAL GENERAL) GENERAL)) 
(DE PROCESSPARTITIE (PARTITIE OLDI OLDILIST VAR VARLIST)
    (COND
     ((NULL PARTITIE)
      (COND ((NULL (CAR VAR)) (CONS (CONS 'TIMES (CDR VAR)) VARLIST))
            (T
             (CONS
              (CONS 'TIMES
                    (CONS (CONS 'EXT (REVERSE (ORDN (CAR VAR)))) (CDR VAR)))
              VARLIST))))
     ((EQUAL (CAR PARTITIE) 0)
      (PROCESSPARTITIE (CDR PARTITIE) OLDI OLDILIST VAR VARLIST))
     ((EQUAL (CAR PARTITIE) OLDI)
      (PROCESSCARPARTITIE OLDI OLDILIST (CDR PARTITIE) VAR VARLIST))
     (T
      (PROCESSCARPARTITIE (CAR PARTITIE)
       (CDR (NTH (CDR (REVAL1 ALL_GRADED_DER NIL)) (CAR PARTITIE)))
       (CDR PARTITIE) VAR VARLIST)))) 
(PUT 'PROCESSCARPARTITIE 'NUMBER-OF-ARGS 5) 
(PUT 'PROCESSCARPARTITIE 'DEFINED-ON-LINE '192) 
(PUT 'PROCESSCARPARTITIE 'DEFINED-IN-FILE 'CDIFF/CDIFFX.RED) 
(PUT 'PROCESSCARPARTITIE 'PROCEDURE_TYPE
     '(ARROW (TIMES GENERAL GENERAL GENERAL GENERAL GENERAL) GENERAL)) 
(DE PROCESSCARPARTITIE (I ILIST RESTPARTITIE VAR VARLIST)
    (COND ((NULL ILIST) VARLIST)
          ((EVENP I)
           (PROCESSCARPARTITIE I (CDR ILIST) RESTPARTITIE VAR
            (PROCESSPARTITIE RESTPARTITIE I ILIST
             (CONS (CAR VAR) (CONS (CAR ILIST) (CDR VAR))) VARLIST)))
          (T
           (PROCESSCARPARTITIE I (CDR ILIST) RESTPARTITIE VAR
            (PROCESSPARTITIE RESTPARTITIE I (CDR ILIST)
             (CONS (CONS (CAR ILIST) (CAR VAR)) (CDR VAR)) VARLIST))))) 
(PUT 'MKPARTITIONS1 'NUMBER-OF-ARGS 6) 
(PUT 'MKPARTITIONS1 'DEFINED-ON-LINE '204) 
(PUT 'MKPARTITIONS1 'DEFINED-IN-FILE 'CDIFF/CDIFFX.RED) 
(PUT 'MKPARTITIONS1 'PROCEDURE_TYPE
     '(ARROW (TIMES GENERAL GENERAL GENERAL GENERAL GENERAL GENERAL) GENERAL)) 
(DE MKPARTITIONS1 (M Q MIN MAX PARTITIE PARTITIELIST)
    (COND
     ((EQUAL Q 1)
      (COND ((GEQ M MIN) (CONS (REVERSE (CONS M PARTITIE)) PARTITIELIST))
            (T PARTITIELIST)))
     ((GREATERP MIN MAX) PARTITIELIST)
     (T
      (MKPARTITIONS1 (DIFFERENCE M MIN) (DIFFERENCE Q 1) MIN
       (QUOTIENT (DIFFERENCE M MIN) (DIFFERENCE Q 1)) (CONS MIN PARTITIE)
       (MKPARTITIONS1 M Q (PLUS MIN 1) MAX PARTITIE PARTITIELIST))))) 
(PUT 'PARTITIES1 'NUMBER-OF-ARGS 3) 
(PUT 'PARTITIES1 'DEFINED-ON-LINE '213) 
(PUT 'PARTITIES1 'DEFINED-IN-FILE 'CDIFF/CDIFFX.RED) 
(PUT 'PARTITIES1 'PROCEDURE_TYPE
     '(ARROW (TIMES GENERAL GENERAL GENERAL) GENERAL)) 
(DE PARTITIES1 (M Q MIN) (MKPARTITIONS1 M Q MIN (QUOTIENT M Q) NIL NIL)) 
(PUT 'MKALLPARTITIONS1 'NUMBER-OF-ARGS 1) 
(PUT 'MKALLPARTITIONS1 'DEFINED-ON-LINE '216) 
(PUT 'MKALLPARTITIONS1 'DEFINED-IN-FILE 'CDIFF/CDIFFX.RED) 
(PUT 'MKALLPARTITIONS1 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE MKALLPARTITIONS1 (M)
    (PROG (I FORALL-RESULT FORALL-ENDPTR)
      (SETQ I M)
     STARTOVER
      (COND ((MINUSP (TIMES (MINUS 1) (DIFFERENCE 1 I))) (RETURN NIL)))
      (SETQ FORALL-RESULT (PARTITIES1 M I 1))
      (SETQ FORALL-ENDPTR (LASTPAIR FORALL-RESULT))
      (SETQ I (PLUS2 I (MINUS 1)))
      (COND ((ATOM FORALL-ENDPTR) (GO STARTOVER)))
     LOOPLABEL
      (COND
       ((MINUSP (TIMES (MINUS 1) (DIFFERENCE 1 I))) (RETURN FORALL-RESULT)))
      (RPLACD FORALL-ENDPTR (PARTITIES1 M I 1))
      (SETQ FORALL-ENDPTR (LASTPAIR FORALL-ENDPTR))
      (SETQ I (PLUS2 I (MINUS 1)))
      (GO LOOPLABEL))) 
(FLAG '(MKVARLIST1) 'OPFN) 
(PUT 'MKVARLIST1 'NUMBER-OF-ARGS 2) 
(PUT 'MKVARLIST1 'DEFINED-ON-LINE '220) 
(PUT 'MKVARLIST1 'DEFINED-IN-FILE 'CDIFF/CDIFFX.RED) 
(PUT 'MKVARLIST1 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE MKVARLIST1 (M Q)
    (CONS 'LIST (PROCESSPARTITIE1LIST1 (PARTITIES1 M Q 0) NIL))) 
(PUT 'PROCESSPARTITIE1LIST1 'NUMBER-OF-ARGS 2) 
(PUT 'PROCESSPARTITIE1LIST1 'DEFINED-ON-LINE '223) 
(PUT 'PROCESSPARTITIE1LIST1 'DEFINED-IN-FILE 'CDIFF/CDIFFX.RED) 
(PUT 'PROCESSPARTITIE1LIST1 'PROCEDURE_TYPE
     '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE PROCESSPARTITIE1LIST1 (PARTITIELIST VARLIST)
    (COND ((NULL PARTITIELIST) VARLIST)
          (T
           (PROCESSPARTITIE1LIST1 (CDR PARTITIELIST)
            (PROCESSPARTITIE1 (CAR PARTITIELIST) 0 NIL (CONS NIL NIL)
             VARLIST))))) 
(PUT 'PROCESSPARTITIE1 'NUMBER-OF-ARGS 5) 
(PUT 'PROCESSPARTITIE1 'DEFINED-ON-LINE '228) 
(PUT 'PROCESSPARTITIE1 'DEFINED-IN-FILE 'CDIFF/CDIFFX.RED) 
(PUT 'PROCESSPARTITIE1 'PROCEDURE_TYPE
     '(ARROW (TIMES GENERAL GENERAL GENERAL GENERAL GENERAL) GENERAL)) 
(DE PROCESSPARTITIE1 (PARTITIE OLDI OLDILIST VAR VARLIST)
    (COND
     ((NULL PARTITIE)
      (COND ((NULL (CAR VAR)) (CONS (CONS 'TIMES (CDR VAR)) VARLIST))
            (T
             (CONS
              (CONS 'TIMES
                    (CONS (CONS 'EXT (REVERSE (ORDN (CAR VAR)))) (CDR VAR)))
              VARLIST))))
     ((EQUAL (CAR PARTITIE) 0)
      (PROCESSPARTITIE1 (CDR PARTITIE) OLDI OLDILIST VAR VARLIST))
     ((EQUAL (CAR PARTITIE) OLDI)
      (PROCESSCARPARTITIE1 OLDI OLDILIST (CDR PARTITIE) VAR VARLIST))
     (T
      (PROCESSCARPARTITIE1 (CAR PARTITIE)
       (CDR (NTH (CDR (REVAL1 ALL_GRADED_DER NIL)) (CAR PARTITIE)))
       (CDR PARTITIE) VAR VARLIST)))) 
(PUT 'PROCESSCARPARTITIE1 'NUMBER-OF-ARGS 5) 
(PUT 'PROCESSCARPARTITIE1 'DEFINED-ON-LINE '238) 
(PUT 'PROCESSCARPARTITIE1 'DEFINED-IN-FILE 'CDIFF/CDIFFX.RED) 
(PUT 'PROCESSCARPARTITIE1 'PROCEDURE_TYPE
     '(ARROW (TIMES GENERAL GENERAL GENERAL GENERAL GENERAL) GENERAL)) 
(DE PROCESSCARPARTITIE1 (I ILIST RESTPARTITIE VAR VARLIST)
    (COND ((NULL ILIST) VARLIST)
          (T
           (PROCESSCARPARTITIE1 I (CDR ILIST) RESTPARTITIE VAR
            (PROCESSPARTITIE1 RESTPARTITIE I ILIST
             (CONS (CAR VAR) (CONS (CAR ILIST) (CDR VAR))) VARLIST))))) 
(PUT 'GRADED_MON 'NUMBER-OF-ARGS 3) 
(FLAG '(GRADED_MON) 'OPFN) 
(PUT 'GRADED_MON 'DEFINED-ON-LINE '245) 
(PUT 'GRADED_MON 'DEFINED-IN-FILE 'CDIFF/CDIFFX.RED) 
(PUT 'GRADED_MON 'PROCEDURE_TYPE
     '(ARROW (TIMES GENERAL GENERAL GENERAL) GENERAL)) 
(DE GRADED_MON (I J L_GRAD_VAR)
    (PROG ()
      (SETQ ALL_GRADED_DER
              (PROGN (SETQ ALGLIST* (CONS NIL NIL)) (AEVAL L_GRAD_VAR)))
      (RETURN
       (PROG (IIT FORALL-RESULT FORALL-ENDPTR)
         (SETQ IIT (AEVAL* I))
         (COND
          ((|AMINUSP:| (LIST 'DIFFERENCE (AEVAL* J) IIT))
           (RETURN (MAKELIST NIL))))
         (SETQ FORALL-RESULT
                 (SETQ FORALL-ENDPTR
                         (CONS (AEVAL* (LIST 'MKVARLIST1 IIT IIT)) NIL)))
        LOOPLABEL
         (SETQ IIT
                 ((LAMBDA (FORALL-RESULT)
                    (AEVAL* (LIST 'PLUS FORALL-RESULT 1)))
                  IIT))
         (COND
          ((|AMINUSP:| (LIST 'DIFFERENCE (AEVAL* J) IIT))
           (RETURN (CONS 'LIST FORALL-RESULT))))
         (RPLACD FORALL-ENDPTR (CONS (AEVAL* (LIST 'MKVARLIST1 IIT IIT)) NIL))
         (SETQ FORALL-ENDPTR (CDR FORALL-ENDPTR))
         (GO LOOPLABEL))))) 
(ENDMODULE) 