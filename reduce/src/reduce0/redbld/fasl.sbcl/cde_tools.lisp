(cl:declaim (cl:optimize cl:debug cl:safety))
(cl:declaim (sb-ext:muffle-conditions sb-ext:compiler-note cl:style-warning))
(MODULE (LIST 'CDE_TOOLS)) 
(DE CDE_ALGLISTP (L) (AND (LISTP L) (EQUAL (CAR L) 'LIST))) 
(PUT 'CDE_ALGLISTP 'NUMBER-OF-ARGS 1) 
(PUT 'CDE_ALGLISTP 'DEFINED-ON-LINE '41) 
(PUT 'CDE_ALGLISTP 'DEFINED-IN-FILE 'CDE/CDE_TOOLS.RED) 
(PUT 'CDE_ALGLISTP 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(PUTC 'CDE_ALGLISTP 'INLINE '(LAMBDA (L) (AND (LISTP L) (EQUAL (CAR L) 'LIST)))) 
(PUT 'CDE_MKSET 'NUMBER-OF-ARGS 1) 
(PUT 'CDE_MKSET 'DEFINED-ON-LINE '45) 
(PUT 'CDE_MKSET 'DEFINED-IN-FILE 'CDE/CDE_TOOLS.RED) 
(PUT 'CDE_MKSET 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE CDE_MKSET (L)
    (COND
     (L
      (COND ((MEMBER (CAR L) (CDR L)) (CDE_MKSET (CDR L)))
            (T (CONS (CAR L) (CDE_MKSET (CDR L)))))))) 
(FLAG '(CDE_MKSET) 'OPFN) 
(PUT 'CDE_LIST2ID 'NUMBER-OF-ARGS 1) 
(PUT 'CDE_LIST2ID 'DEFINED-ON-LINE '54) 
(PUT 'CDE_LIST2ID 'DEFINED-IN-FILE 'CDE/CDE_TOOLS.RED) 
(PUT 'CDE_LIST2ID 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE CDE_LIST2ID (L)
    (COND ((ATOM L) (REDERR "argument for cde_list2id must be a list"))
          (T
           (INTERN
            (COMPRESS
             (PROG (I FORALL-RESULT FORALL-ENDPTR)
               (SETQ I L)
              STARTOVER
               (COND ((NULL I) (RETURN NIL)))
               (SETQ FORALL-RESULT ((LAMBDA (I) (EXPLODE I)) (CAR I)))
               (SETQ FORALL-ENDPTR (LASTPAIR FORALL-RESULT))
               (SETQ I (CDR I))
               (COND ((ATOM FORALL-ENDPTR) (GO STARTOVER)))
              LOOPLABEL
               (COND ((NULL I) (RETURN FORALL-RESULT)))
               (RPLACD FORALL-ENDPTR ((LAMBDA (I) (EXPLODE I)) (CAR I)))
               (SETQ FORALL-ENDPTR (LASTPAIR FORALL-ENDPTR))
               (SETQ I (CDR I))
               (GO LOOPLABEL))))))) 
(DE CDE_LIST_TO_IDS (L) (CDE_LIST2ID (CDR L))) 
(PUT 'CDE_LIST_TO_IDS 'NUMBER-OF-ARGS 1) 
(PUT 'CDE_LIST_TO_IDS 'DEFINED-ON-LINE '60) 
(PUT 'CDE_LIST_TO_IDS 'DEFINED-IN-FILE 'CDE/CDE_TOOLS.RED) 
(PUT 'CDE_LIST_TO_IDS 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(PUTC 'CDE_LIST_TO_IDS 'INLINE '(LAMBDA (L) (CDE_LIST2ID (CDR L)))) 
(FLAG '(CDE_LIST_TO_IDS) 'OPFN) 
(PUT 'CDE_MKZERO 'NUMBER-OF-ARGS 1) 
(PUT 'CDE_MKZERO 'DEFINED-ON-LINE '66) 
(PUT 'CDE_MKZERO 'DEFINED-IN-FILE 'CDE/CDE_TOOLS.RED) 
(PUT 'CDE_MKZERO 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE CDE_MKZERO (N)
    (PROG (I FORALL-RESULT FORALL-ENDPTR)
      (SETQ I 1)
      (COND ((MINUSP (DIFFERENCE N I)) (RETURN NIL)))
      (SETQ FORALL-RESULT (SETQ FORALL-ENDPTR (CONS 0 NIL)))
     LOOPLABEL
      (SETQ I (PLUS2 I 1))
      (COND ((MINUSP (DIFFERENCE N I)) (RETURN FORALL-RESULT)))
      (RPLACD FORALL-ENDPTR (CONS 0 NIL))
      (SETQ FORALL-ENDPTR (CDR FORALL-ENDPTR))
      (GO LOOPLABEL))) 
(PUT 'CLEAN_ALGEBRAIC_LIST 'NUMBER-OF-ARGS 1) 
(PUT 'CLEAN_ALGEBRAIC_LIST 'DEFINED-ON-LINE '69) 
(PUT 'CLEAN_ALGEBRAIC_LIST 'DEFINED-IN-FILE 'CDE/CDE_TOOLS.RED) 
(PUT 'CLEAN_ALGEBRAIC_LIST 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE CLEAN_ALGEBRAIC_LIST (L)
    (PROG (LL)
      (COND
       ((NOT (EQUAL (CAR L) 'LIST))
        (REDERR "Input of clean_algebraic_list is not an algebraic list")))
      (SETQ LL (CDR L))
      (RETURN
       (PROG (EL FORALL-RESULT FORALL-ENDPTR)
         (SETQ EL LL)
         (COND ((NULL EL) (RETURN NIL)))
         (SETQ FORALL-RESULT
                 (SETQ FORALL-ENDPTR
                         (CONS ((LAMBDA (EL) (*A2K EL)) (CAR EL)) NIL)))
        LOOPLABEL
         (SETQ EL (CDR EL))
         (COND ((NULL EL) (RETURN FORALL-RESULT)))
         (RPLACD FORALL-ENDPTR (CONS ((LAMBDA (EL) (*A2K EL)) (CAR EL)) NIL))
         (SETQ FORALL-ENDPTR (CDR FORALL-ENDPTR))
         (GO LOOPLABEL))))) 
(PUT 'CDE_REPLACE_NTH 'NUMBER-OF-ARGS 3) 
(PUT 'CDE_REPLACE_NTH 'DEFINED-ON-LINE '86) 
(PUT 'CDE_REPLACE_NTH 'DEFINED-IN-FILE 'CDE/CDE_TOOLS.RED) 
(PUT 'CDE_REPLACE_NTH 'PROCEDURE_TYPE
     '(ARROW (TIMES GENERAL GENERAL GENERAL) GENERAL)) 
(DE CDE_REPLACE_NTH (L IND EL)
    (COND
     (L
      (COND ((EQUAL IND 1) (CONS EL (CDR L)))
            (T
             (CONS (CAR L) (CDE_REPLACE_NTH (CDR L) (DIFFERENCE IND 1) EL))))))) 
(PUT 'CDE_DELETE 'NUMBER-OF-ARGS 2) 
(PUT 'CDE_DELETE 'DEFINED-ON-LINE '91) 
(PUT 'CDE_DELETE 'DEFINED-IN-FILE 'CDE/CDE_TOOLS.RED) 
(PUT 'CDE_DELETE 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE CDE_DELETE (EL L)
    (PROG (DL)
      (PROG (ELL)
        (SETQ ELL L)
       LAB
        (COND ((NULL ELL) (RETURN NIL)))
        ((LAMBDA (ELL) (COND ((NOT (EQUAL ELL EL)) (SETQ DL (CONS ELL DL)))))
         (CAR ELL))
        (SETQ ELL (CDR ELL))
        (GO LAB))
      (RETURN (REVERSIP DL)))) 
(PUT 'CDE_INSERT 'NUMBER-OF-ARGS 3) 
(PUT 'CDE_INSERT 'DEFINED-ON-LINE '98) 
(PUT 'CDE_INSERT 'DEFINED-IN-FILE 'CDE/CDE_TOOLS.RED) 
(PUT 'CDE_INSERT 'PROCEDURE_TYPE
     '(ARROW (TIMES GENERAL GENERAL GENERAL) GENERAL)) 
(DE CDE_INSERT (EL L N)
    (PROG (FIRSTL)
      (COND ((NOT (LISTP L)) (TYPERR L "must be a list"))
            ((LEQ N 0) (REDERR "third argument must be a positive integer")))
      (PROG (I)
        (SETQ I 1)
       LAB
        (COND ((MINUSP (DIFFERENCE (DIFFERENCE N 1) I)) (RETURN NIL)))
        (PROGN (SETQ FIRSTL (CONS (CAR L) FIRSTL)) (SETQ L (CDR L)))
        (SETQ I (PLUS2 I 1))
        (GO LAB))
      (RETURN (APPEND (REVERSIP FIRSTL) (CONS EL L))))) 
(PUT 'CDE_DIFFSET 'NUMBER-OF-ARGS 2) 
(PUT 'CDE_DIFFSET 'DEFINED-ON-LINE '110) 
(PUT 'CDE_DIFFSET 'DEFINED-IN-FILE 'CDE/CDE_TOOLS.RED) 
(PUT 'CDE_DIFFSET 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE CDE_DIFFSET (SET REM)
    (COND ((NOT REM) SET)
          (T (CDE_DIFFSET (CDE_DELETE (CAR REM) SET) (CDR REM))))) 
(PUT 'CDE_DIFFLIST 'NUMBER-OF-ARGS 2) 
(PUT 'CDE_DIFFLIST 'DEFINED-ON-LINE '114) 
(PUT 'CDE_DIFFLIST 'DEFINED-IN-FILE 'CDE/CDE_TOOLS.RED) 
(PUT 'CDE_DIFFLIST 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE CDE_DIFFLIST (SET REM) (CONS 'LIST (CDE_DIFFSET (CDR SET) (CDR REM)))) 
(FLAG '(CDE_DIFFLIST) 'OPFN) 
(PUT 'CDE_LASSOC 'NUMBER-OF-ARGS 2) 
(PUT 'CDE_LASSOC 'DEFINED-ON-LINE '120) 
(PUT 'CDE_LASSOC 'DEFINED-IN-FILE 'CDE/CDE_TOOLS.RED) 
(PUT 'CDE_LASSOC 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE CDE_LASSOC (EL L)
    (COND ((NOT L) NIL) ((ATOM (CAR L)) (REDERR "Error: bad alist"))
          ((EQUAL EL (CADAR L)) (CAR L)) (T (CDE_LASSOC EL (CDR L))))) 
(PUT 'CDE_LASSOC2 'NUMBER-OF-ARGS 2) 
(PUT 'CDE_LASSOC2 'DEFINED-ON-LINE '127) 
(PUT 'CDE_LASSOC2 'DEFINED-IN-FILE 'CDE/CDE_TOOLS.RED) 
(PUT 'CDE_LASSOC2 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE CDE_LASSOC2 (EL L)
    (COND ((NOT L) NIL) ((ATOM (CAR L)) (REDERR "Error: bad alist"))
          ((EQUAL EL (CDAR L)) (CAR L)) (T (CDE_LASSOC2 EL (CDR L))))) 
(PUT 'CDE_POSITION 'NUMBER-OF-ARGS 2) 
(PUT 'CDE_POSITION 'DEFINED-ON-LINE '135) 
(PUT 'CDE_POSITION 'DEFINED-IN-FILE 'CDE/CDE_TOOLS.RED) 
(PUT 'CDE_POSITION 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE CDE_POSITION (EL L) (COND ((MEMBER EL L) (CDE_POSITION2 EL L)) (T 0))) 
(PUT 'CDE_POSITION2 'NUMBER-OF-ARGS 2) 
(PUT 'CDE_POSITION2 'DEFINED-ON-LINE '139) 
(PUT 'CDE_POSITION2 'DEFINED-IN-FILE 'CDE/CDE_TOOLS.RED) 
(PUT 'CDE_POSITION2 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE CDE_POSITION2 (EL L)
    (COND ((EQUAL EL (CAR L)) 1) (T (PLUS 1 (CDE_POSITION2 EL (CDR L)))))) 
(PUT 'CDE_SUBLIS 'NUMBER-OF-ARGS 2) 
(PUT 'CDE_SUBLIS 'DEFINED-ON-LINE '144) 
(PUT 'CDE_SUBLIS 'DEFINED-IN-FILE 'CDE/CDE_TOOLS.RED) 
(PUT 'CDE_SUBLIS 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE CDE_SUBLIS (L N)
    (COND ((EQN N 0) NIL)
          (T (CONS (CAR L) (CDE_SUBLIS (CDR L) (DIFFERENCE N 1)))))) 
(PUT 'CDE_MEMBERL 'NUMBER-OF-ARGS 2) 
(PUT 'CDE_MEMBERL 'DEFINED-ON-LINE '154) 
(PUT 'CDE_MEMBERL 'DEFINED-IN-FILE 'CDE/CDE_TOOLS.RED) 
(PUT 'CDE_MEMBERL 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE CDE_MEMBERL (A B)
    (COND
     ((AND A B)
      (COND ((MEMBER (CAR A) B) (CONS (CAR A) (CDE_MEMBERL (CDR A) B)))
            (T (CDE_MEMBERL (CDR A) B)))))) 
(PUT 'CDE_FREEOF 'NUMBER-OF-ARGS 2) 
(PUT 'CDE_FREEOF 'DEFINED-ON-LINE '160) 
(PUT 'CDE_FREEOF 'DEFINED-IN-FILE 'CDE/CDE_TOOLS.RED) 
(PUT 'CDE_FREEOF 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE CDE_FREEOF (U V) (AND (NOT (SMEMBER V U)) (CDE_FREEOFDEPL DEPL* U V))) 
(FLAG '(MY_FREEOF) 'BOOLEAN) 
(FLAG '(CDE_FREEOF) 'OPFN) 
(PUT 'CDE_FREEOFL 'NUMBER-OF-ARGS 2) 
(PUT 'CDE_FREEOFL 'DEFINED-ON-LINE '168) 
(PUT 'CDE_FREEOFL 'DEFINED-IN-FILE 'CDE/CDE_TOOLS.RED) 
(PUT 'CDE_FREEOFL 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE CDE_FREEOFL (L M)
    (COND ((NULL M) T) ((CDE_FREEOF L (CAR M)) (CDE_FREEOFL L (CDR M)))
          (T NIL))) 
(FLAG '(CDE_FREEOFL) 'OPFN) 
(PUT 'CDE_FREEOFDEPL 'NUMBER-OF-ARGS 3) 
(PUT 'CDE_FREEOFDEPL 'DEFINED-ON-LINE '176) 
(PUT 'CDE_FREEOFDEPL 'DEFINED-IN-FILE 'CDE/CDE_TOOLS.RED) 
(PUT 'CDE_FREEOFDEPL 'PROCEDURE_TYPE
     '(ARROW (TIMES GENERAL GENERAL GENERAL) GENERAL)) 
(DE CDE_FREEOFDEPL (DE U V)
    (COND ((NULL DE) T) ((AND (SMEMBER V (CDAR DE)) (SMEMBER (CAAR DE) U)) NIL)
          (T (CDE_FREEOFDEPL (CDR DE) U V)))) 
(PUT 'CDE_DEPENDON 'NUMBER-OF-ARGS 2) 
(PUT 'CDE_DEPENDON 'DEFINED-ON-LINE '186) 
(PUT 'CDE_DEPENDON 'DEFINED-IN-FILE 'CDE/CDE_TOOLS.RED) 
(PUT 'CDE_DEPENDON 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE CDE_DEPENDON (L V) (COND ((NULL V) NIL) (T (NOT (CDE_FREEOF L V))))) 
(FLAG '(CDE_DEPENDON) 'OPFN) 
(PUT 'CDE_DEPENDONL 'NUMBER-OF-ARGS 2) 
(PUT 'CDE_DEPENDONL 'DEFINED-ON-LINE '192) 
(PUT 'CDE_DEPENDONL 'DEFINED-IN-FILE 'CDE/CDE_TOOLS.RED) 
(PUT 'CDE_DEPENDONL 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE CDE_DEPENDONL (L D)
    (COND ((NULL D) NIL)
          ((CDE_DEPENDON L (CAR D)) (CONS (CAR D) (CDE_DEPENDONL L (CDR D))))
          (T (CDE_DEPENDONL L (CDR D))))) 
(FLAG '(CDE_DEPENDONL) 'OPFN) 
(PUT 'EV_OPERATOR2 'NUMBER-OF-ARGS 2) 
(PUT 'EV_OPERATOR2 'DEFINED-ON-LINE '207) 
(PUT 'EV_OPERATOR2 'DEFINED-IN-FILE 'CDE/CDE_TOOLS.RED) 
(PUT 'EV_OPERATOR2 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE EV_OPERATOR2 (OP_NAME L_ARG)
    (PROG ()
      (COND ((ATOM L_ARG) (RETURN (CONS OP_NAME (LIST L_ARG))))
            (T (RETURN (CONS OP_NAME (CDR L_ARG))))))) 
(PUT 'CDE_FORALL_FORM 'NUMBER-OF-ARGS 4) 
(PUT 'CDE_FORALL_FORM 'DEFINED-ON-LINE '216) 
(PUT 'CDE_FORALL_FORM 'DEFINED-IN-FILE 'CDE/CDE_TOOLS.RED) 
(PUT 'CDE_FORALL_FORM 'PROCEDURE_TYPE
     '(ARROW (TIMES GENERAL GENERAL GENERAL GENERAL) GENERAL)) 
(DE CDE_FORALL_FORM (OPNAME LPARS LFVARS RHS_OPDEF)
    (CONS 'LIST
          (LIST (MKQUOTE LFVARS) (MKQUOTE 'T)
                (MKQUOTE
                 (LIST 'LET00
                       (MKQUOTE
                        (LIST
                         (LIST 'EQUAL (CONS OPNAME (APPEND LPARS LFVARS))
                               RHS_OPDEF)))))))) 
(PUT 'CDE_EV_FORALL 'NUMBER-OF-ARGS 1) 
(PUT 'CDE_EV_FORALL 'DEFINED-ON-LINE '227) 
(PUT 'CDE_EV_FORALL 'DEFINED-IN-FILE 'CDE/CDE_TOOLS.RED) 
(PUT 'CDE_EV_FORALL 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE CDE_EV_FORALL (U) (EVAL (LIST 'FORALL U))) 
(PUT 'CHECK_LETOP 'NUMBER-OF-ARGS 1) 
(PUT 'CHECK_LETOP 'DEFINED-ON-LINE '231) 
(PUT 'CHECK_LETOP 'DEFINED-IN-FILE 'CDE/CDE_TOOLS.RED) 
(PUT 'CHECK_LETOP 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE CHECK_LETOP (LIST_EXPR)
    (COND
     ((NOT (FREEOF LIST_EXPR 'LETOP))
      (REDERR "Presence of letop, jetspace too small!")))) 
(FLAG '(CHECK_LETOP) 'OPFN) 
(PUT 'CDE_CREATE_INDICES 'NUMBER-OF-ARGS 1) 
(PUT 'CDE_CREATE_INDICES 'DEFINED-ON-LINE '239) 
(PUT 'CDE_CREATE_INDICES 'DEFINED-IN-FILE 'CDE/CDE_TOOLS.RED) 
(PUT 'CDE_CREATE_INDICES 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE CDE_CREATE_INDICES (L)
    (PROG (LL)
      (COND
       (L
        (PROGN
         (SETQ LL (FIRST L))
         (RETURN
          (PROG (I FORALL-RESULT FORALL-ENDPTR)
            (SETQ I 1)
           STARTOVER
            (COND ((MINUSP (DIFFERENCE LL I)) (RETURN NIL)))
            (SETQ FORALL-RESULT (CONS I (CDE_CREATE_INDICES (REST L))))
            (SETQ FORALL-ENDPTR (LASTPAIR FORALL-RESULT))
            (SETQ I (PLUS2 I 1))
            (COND ((ATOM FORALL-ENDPTR) (GO STARTOVER)))
           LOOPLABEL
            (COND ((MINUSP (DIFFERENCE LL I)) (RETURN FORALL-RESULT)))
            (RPLACD FORALL-ENDPTR (CONS I (CDE_CREATE_INDICES (REST L))))
            (SETQ FORALL-ENDPTR (LASTPAIR FORALL-ENDPTR))
            (SETQ I (PLUS2 I 1))
            (GO LOOPLABEL)))))
       (T NIL)))) 
(DE CDE_MAL (LL) (CONS 'LIST LL)) 
(PUT 'CDE_MAL 'NUMBER-OF-ARGS 1) 
(PUT 'CDE_MAL 'DEFINED-ON-LINE '253) 
(PUT 'CDE_MAL 'DEFINED-IN-FILE 'CDE/CDE_TOOLS.RED) 
(PUT 'CDE_MAL 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(PUTC 'CDE_MAL 'INLINE '(LAMBDA (LL) (CONS 'LIST LL))) 
(DE CDE_TOOLS NIL NIL) 
(PUT 'CDE_TOOLS 'NUMBER-OF-ARGS 0) 
(PUT 'CDE_TOOLS 'DEFINED-ON-LINE '257) 
(PUT 'CDE_TOOLS 'DEFINED-IN-FILE 'CDE/CDE_TOOLS.RED) 
(PUT 'CDE_TOOLS 'PROCEDURE_TYPE '(ARROW UNIT GENERAL)) 
(PUTC 'CDE_TOOLS 'INLINE '(LAMBDA () NIL)) 
(ENDMODULE) 