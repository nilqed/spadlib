(cl:declaim (cl:optimize cl:debug cl:safety))
(cl:declaim (sb-ext:muffle-conditions sb-ext:compiler-note cl:style-warning))
(MODULE (LIST 'RCREF)) 
(CREATE-PACKAGE '(RCREF REDIO) '(UTIL)) 
(FLUID
 '(*BACKTRACE *CREF *DEFN *MODE *NOCREFPRI CALLS* CURFUN* DFPRINT* GLOBS*
   LOCLS* TOPLV* *RAISE *COMP)) 
(GLOBAL
 '(UNDEFG* GSEEN* BTIME* EXPAND* HAVEARGS* NOTUSE* NOLIST* DCLGLB* ENTPTS*
   UNDEFNS* SEEN* TSEEN* XSEEN* OP** CLOC* PFILES* CURLIN* PRETITL* *CREFTIME
   *SAVEPROPS MAXARG* *CREFSUMMARY *RLISP *GLOBALS *ALGEBRAICS)) 
(SWITCH (LIST 'CREF)) 
(SETQ *ALGEBRAICS 'T) 
(SETQ *GLOBALS 'T) 
(SETQ MAXARG* 15) 
(DEFLIST '((ANLFN PROCSTAT) (CRFLAPO PROCSTAT)) 'STAT) 
(FLAG '(ANLFN CRFLAPO) 'COMPILE) 
(FLAG '(BLDMSG PRINTF) 'NARYARGS) 
(SETQ EXPAND* '(FOR FOREACH REPEAT WHILE)) 
(SETQ NOLIST*
        (NCONC
         (PROG (J FORALL-RESULT FORALL-ENDPTR)
           (SETQ J SLFNS*)
           (COND ((NULL J) (RETURN NIL)))
           (SETQ FORALL-RESULT
                   (SETQ FORALL-ENDPTR
                           (CONS ((LAMBDA (J) (CAR J)) (CAR J)) NIL)))
          LOOPLABEL
           (SETQ J (CDR J))
           (COND ((NULL J) (RETURN FORALL-RESULT)))
           (RPLACD FORALL-ENDPTR (CONS ((LAMBDA (J) (CAR J)) (CAR J)) NIL))
           (SETQ FORALL-ENDPTR (CDR FORALL-ENDPTR))
           (GO LOOPLABEL))
         NOLIST*)) 
(SETQ NOLIST*
        (APPEND
         '(AND COND ENDMODULE LAMBDA LIST MAX MIN MODULE OR PLUS PROG PROG2
               PROGN PUTC SWITCH TIMES)
         NOLIST*)) 
(FLAG '(PLUS TIMES AND OR LAMBDA PROGN MAX MIN COND PROG CASE LIST) 'NARYARGS) 
(SETQ DCLGLB* '(EMSG*)) 
(COND
 ((NOT (GETD 'BEGIN))
  (FLAG '(RDS DEFLIST FLAG FLUID GLOBAL REMPROP REMFLAG UNFLUID SETQ CREFOFF)
        'EVAL))) 
(PUT 'CREFON 'NUMBER-OF-ARGS 0) 
(PUT 'CREFON 'DEFINED-ON-LINE '76) 
(PUT 'CREFON 'DEFINED-IN-FILE 'MISC/RCREF.RED) 
(PUT 'CREFON 'PROCEDURE_TYPE '(ARROW UNIT GENERAL)) 
(DE CREFON NIL
    (PROG ()
      (SETQ BTIME* (TIME))
      (SETQ DFPRINT* 'REFPRINT)
      (SETQ *DEFN T)
      (COND ((NOT *ALGEBRAICS) (PUT 'ALGEBRAIC 'NEWNAM 'SYMBOLIC)))
      (FLAG NOLIST* 'NOLIST)
      (FLAG EXPAND* 'EXPAND)
      (FLAG DCLGLB* 'DCLGLB)
      (SETQ ENTPTS* NIL)
      (SETQ UNDEFNS* NIL)
      (SETQ SEEN* NIL)
      (SETQ TSEEN* NIL)
      (SETQ GSEEN* NIL)
      (SETQ PFILES* NIL)
      (SETQ UNDEFG* NIL)
      (SETQ CURLIN* NIL)
      (SETQ PRETITL* NIL)
      (SETQ GLOBS* NIL)
      (SETQ CALLS* NIL)
      (SETQ LOCLS* NIL)
      (SETQ TOPLV* T)
      (SETQ CURFUN* NIL)
      (SETQ OP** NIL)
      (COND ((NOT *NOCREFPRI) (SETPAGE "  Errors or questionables" NIL)))
      (COND ((NOT (GETD 'BEGIN)) (CREFONLSP))))) 
(PUT 'UNDEFDCHK 'NUMBER-OF-ARGS 1) 
(PUT 'UNDEFDCHK 'DEFINED-ON-LINE '107) 
(PUT 'UNDEFDCHK 'DEFINED-IN-FILE 'MISC/RCREF.RED) 
(PUT 'UNDEFDCHK 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE UNDEFDCHK (FN)
    (COND ((NOT (FLAGP FN 'DEFD)) (SETQ UNDEFNS* (CONS FN UNDEFNS*))))) 
(PUT 'PRINCNG 'NUMBER-OF-ARGS 1) 
(PUT 'PRINCNG 'DEFINED-ON-LINE '110) 
(PUT 'PRINCNG 'DEFINED-IN-FILE 'MISC/RCREF.RED) 
(PUT 'PRINCNG 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE PRINCNG (U) (PRINCN (GETES U))) 
(PUT 'CREFOFF 'NUMBER-OF-ARGS 0) 
(PUT 'CREFOFF 'DEFINED-ON-LINE '113) 
(PUT 'CREFOFF 'DEFINED-IN-FILE 'MISC/RCREF.RED) 
(PUT 'CREFOFF 'PROCEDURE_TYPE '(ARROW UNIT GENERAL)) 
(DE CREFOFF NIL
    (COND
     (*CREF
      (PROG (TIM X)
        (CREFOFF1)
        (SETQ TIM (DIFFERENCE (TIME) BTIME*))
        (SETPAGE "  Summary" NIL)
        (NEWPAGE)
        (SETQ PFILES*
                (PUNUSED "Crossreference listing for files:"
                 (PROG (Z FORALL-RESULT FORALL-ENDPTR)
                   (SETQ Z PFILES*)
                   (COND ((NULL Z) (RETURN NIL)))
                   (SETQ FORALL-RESULT
                           (SETQ FORALL-ENDPTR
                                   (CONS ((LAMBDA (Z) (CDR Z)) (CAR Z)) NIL)))
                  LOOPLABEL
                   (SETQ Z (CDR Z))
                   (COND ((NULL Z) (RETURN FORALL-RESULT)))
                   (RPLACD FORALL-ENDPTR
                           (CONS ((LAMBDA (Z) (CDR Z)) (CAR Z)) NIL))
                   (SETQ FORALL-ENDPTR (CDR FORALL-ENDPTR))
                   (GO LOOPLABEL))))
        (SETQ ENTPTS* (PUNUSED "Entry Points:" ENTPTS*))
        (SETQ UNDEFNS* (PUNUSED "Undefined Functions:" UNDEFNS*))
        (SETQ UNDEFG* (PUNUSED "Undeclared Global Variables:" UNDEFG*))
        (SETQ GSEEN* (PUNUSED "Global variables:" GSEEN*))
        (SETQ SEEN* (PUNUSED "Functions:" SEEN*))
        (PROG (Z)
          (SETQ Z TSEEN*)
         LAB
          (COND ((NULL Z) (RETURN NIL)))
          ((LAMBDA (Z)
             (PROGN
              (RPLACD Z (PUNUSED (LIST (CAR Z) " procedures:") (CDR Z)))
              (SETQ X (CONS '|(| (NCONC (EXPLODE (CAR Z)) (LIST '|)|))))
              (PROG (FN)
                (SETQ FN (CDR Z))
               LAB
                (COND ((NULL FN) (RETURN NIL)))
                ((LAMBDA (FN)
                   (PROGN
                    (SETQ FN (GETES FN))
                    (RPLACD FN (APPEND X (CDR FN)))
                    (RPLACA FN (LENGTH (CDR FN)))))
                 (CAR FN))
                (SETQ FN (CDR FN))
                (GO LAB))))
           (CAR Z))
          (SETQ Z (CDR Z))
          (GO LAB))
        (COND (*CREFSUMMARY (GO XY)))
        (COND
         ((AND *GLOBALS GSEEN*)
          (PROGN
           (SETPAGE "  Global Variable Usage" 1)
           (NEWPAGE)
           (PROG (Z)
             (SETQ Z GSEEN*)
            LAB
             (COND ((NULL Z) (RETURN NIL)))
             ((LAMBDA (Z) (CREF6 Z)) (CAR Z))
             (SETQ Z (CDR Z))
             (GO LAB)))))
        (COND (SEEN* (CREF52 "  Function Usage" SEEN*)))
        (PROG (Z)
          (SETQ Z TSEEN*)
         LAB
          (COND ((NULL Z) (RETURN NIL)))
          ((LAMBDA (Z) (CREF52 (LIST "  " (CAR Z) " procedures") (CDR Z)))
           (CAR Z))
          (SETQ Z (CDR Z))
          (GO LAB))
        (SETPAGE "  Toplevel calls:" NIL)
        (SETQ X T)
        (PROG (Z)
          (SETQ Z PFILES*)
         LAB
          (COND ((NULL Z) (RETURN NIL)))
          ((LAMBDA (Z)
             (COND
              ((OR (GET Z 'CALLS) (GET Z 'GLOBS))
               (PROGN
                (COND (X (PROGN (NEWPAGE) (SETQ X NIL))))
                (NEWLINE 0)
                (NEWLINE 0)
                (PRINCNG Z)
                (SPACES-TO 15)
                (UNDERLINE2 (DIFFERENCE (LINELENGTH NIL) 10))
                (CREF51 Z 'CALLS "Calls:")
                (COND (*GLOBALS (CREF51 Z 'GLOBS "Globals:")))))))
           (CAR Z))
          (SETQ Z (CDR Z))
          (GO LAB))
       XY
        (COND (*SAVEPROPS (GO XX)))
        (REMPROPSS SEEN* '(GALL CALLS GLOBS CALLEDBY ALSOIS SAMEAS))
        (REMFLAGSS SEEN* '(SEEN CINTHIS DEFD))
        (REMPROPSS GSEEN* '(USEDBY USEDUNBY BOUNDBY SETBY))
        (REMFLAGSS GSEEN* '(DCLGLB GSEEN GLB2RF GLB2BD GLB2ST))
        (PROG (Z)
          (SETQ Z TSEEN*)
         LAB
          (COND ((NULL Z) (RETURN NIL)))
          ((LAMBDA (Z) (REMPROP (CAR Z) 'FUNS)) (CAR Z))
          (SETQ Z (CDR Z))
          (GO LAB))
        (SETQ HAVEARGS* (SETQ GSEEN* (SETQ SEEN* (SETQ TSEEN* NIL))))
       XX
        (NEWLINE 2)
        (COND ((NOT *CREFTIME) (RETURN NIL)))
        (SETQ BTIME* (DIFFERENCE (TIME) BTIME*))
        (SETPAGE " Timing Information" NIL)
        (NEWPAGE)
        (NEWLINE 0)
        (PRTATM " Total Time=")
        (PRTNUM BTIME*)
        (PRTATM " (ms)")
        (NEWLINE 0)
        (PRTATM " Analysis Time=")
        (PRTNUM TIM)
        (NEWLINE 0)
        (PRTATM " Sorting Time=")
        (PRTNUM (DIFFERENCE BTIME* TIM))
        (NEWLINE 0)
        (NEWLINE 0))))) 
(PUT 'CREFOFF1 'NUMBER-OF-ARGS 0) 
(PUT 'CREFOFF1 'DEFINED-ON-LINE '173) 
(PUT 'CREFOFF1 'DEFINED-IN-FILE 'MISC/RCREF.RED) 
(PUT 'CREFOFF1 'PROCEDURE_TYPE '(ARROW UNIT GENERAL)) 
(DE CREFOFF1 NIL
    (PROG (X)
      (SETQ DFPRINT* NIL)
      (SETQ *DEFN NIL)
      (COND ((NOT *ALGEBRAICS) (REMPROP 'ALGEBRAIC 'NEWNAM)))
      (PROG (FN)
        (SETQ FN SEEN*)
       LAB
        (COND ((NULL FN) (RETURN NIL)))
        ((LAMBDA (FN)
           (PROGN
            (COND ((NULL (GET FN 'CALLEDBY)) (SETQ ENTPTS* (CONS FN ENTPTS*))))
            (UNDEFDCHK FN)))
         (CAR FN))
        (SETQ FN (CDR FN))
        (GO LAB))
      (SETQ TSEEN*
              (PROG (Z FORALL-RESULT FORALL-ENDPTR)
                (SETQ Z (IDSORT TSEEN*))
                (COND ((NULL Z) (RETURN NIL)))
                (SETQ FORALL-RESULT
                        (SETQ FORALL-ENDPTR
                                (CONS
                                 ((LAMBDA (Z)
                                    (PROGN
                                     (REMPROP Z 'TSEEN)
                                     (PROG (FN)
                                       (SETQ FN (SETQ X (GET Z 'FUNS)))
                                      LAB
                                       (COND ((NULL FN) (RETURN NIL)))
                                       ((LAMBDA (FN)
                                          (PROGN
                                           (UNDEFDCHK FN)
                                           (REMPROP FN 'RCCNAM)))
                                        (CAR FN))
                                       (SETQ FN (CDR FN))
                                       (GO LAB))
                                     (CONS Z X)))
                                  (CAR Z))
                                 NIL)))
               LOOPLABEL
                (SETQ Z (CDR Z))
                (COND ((NULL Z) (RETURN FORALL-RESULT)))
                (RPLACD FORALL-ENDPTR
                        (CONS
                         ((LAMBDA (Z)
                            (PROGN
                             (REMPROP Z 'TSEEN)
                             (PROG (FN)
                               (SETQ FN (SETQ X (GET Z 'FUNS)))
                              LAB
                               (COND ((NULL FN) (RETURN NIL)))
                               ((LAMBDA (FN)
                                  (PROGN (UNDEFDCHK FN) (REMPROP FN 'RCCNAM)))
                                (CAR FN))
                               (SETQ FN (CDR FN))
                               (GO LAB))
                             (CONS Z X)))
                          (CAR Z))
                         NIL))
                (SETQ FORALL-ENDPTR (CDR FORALL-ENDPTR))
                (GO LOOPLABEL)))
      (PROG (Z)
        (SETQ Z GSEEN*)
       LAB
        (COND ((NULL Z) (RETURN NIL)))
        ((LAMBDA (Z)
           (COND ((GET Z 'USEDUNBY) (SETQ UNDEFG* (CONS Z UNDEFG*)))))
         (CAR Z))
        (SETQ Z (CDR Z))
        (GO LAB)))) 
(PUT 'PUNUSED 'NUMBER-OF-ARGS 2) 
(PUT 'PUNUSED 'DEFINED-ON-LINE '191) 
(PUT 'PUNUSED 'DEFINED-IN-FILE 'MISC/RCREF.RED) 
(PUT 'PUNUSED 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE PUNUSED (X Y)
    (COND
     (Y
      (PROGN
       (NEWLINE 2)
       (PRTLST X)
       (NEWLINE 0)
       (LPRINT (SETQ Y (IDSORT Y)) 8)
       (NEWLINE 0)
       Y)))) 
(PUT 'CREF52 'NUMBER-OF-ARGS 2) 
(PUT 'CREF52 'DEFINED-ON-LINE '196) 
(PUT 'CREF52 'DEFINED-IN-FILE 'MISC/RCREF.RED) 
(PUT 'CREF52 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE CREF52 (X Y)
    (PROGN
     (SETPAGE X 1)
     (NEWPAGE)
     (PROG (Z)
       (SETQ Z Y)
      LAB
       (COND ((NULL Z) (RETURN NIL)))
       ((LAMBDA (Z) (CREF5 Z)) (CAR Z))
       (SETQ Z (CDR Z))
       (GO LAB)))) 
(PUT 'CREF5 'NUMBER-OF-ARGS 1) 
(PUT 'CREF5 'DEFINED-ON-LINE '199) 
(PUT 'CREF5 'DEFINED-IN-FILE 'MISC/RCREF.RED) 
(PUT 'CREF5 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE CREF5 (FN)
    (PROG (X Y)
      (NEWLINE 0)
      (NEWLINE 0)
      (PRIN1 FN)
      (SPACES-TO 15)
      (SETQ Y (GET FN 'GALL))
      (COND (Y (PROGN (PRIN1 (CDR Y)) (SETQ X (CAR Y))))
            (T (PRIN2 "Undefined")))
      (SPACES-TO 25)
      (COND ((FLAGP FN 'NARYARGS) (PRIN2 "  Nary Args  "))
            ((SETQ Y (GET FN 'NUMBER-OF-ARGS))
             (PROGN (PRIN2 "  ") (PRIN2 Y) (PRIN2 " Args  "))))
      (UNDERLINE2 (DIFFERENCE (LINELENGTH NIL) 10))
      (COND
       (X
        (PROGN
         (NEWLINE 15)
         (PRTATM "Line:")
         (SPACES-TO 27)
         (PRTNUM (CDDR X))
         (PRTATM '/)
         (PRTNUM (CADR X))
         (PRTATM " in ")
         (PRTATM (CAR X)))))
      (CREF51 FN 'CALLEDBY "Called by:")
      (CREF51 FN 'CALLS "Calls:")
      (CREF51 FN 'ALSOIS "Is also:")
      (CREF51 FN 'SAMEAS "Same as:")
      (COND (*GLOBALS (CREF51 FN 'GLOBS "Globals:"))))) 
(PUT 'CREF51 'NUMBER-OF-ARGS 3) 
(PUT 'CREF51 'DEFINED-ON-LINE '223) 
(PUT 'CREF51 'DEFINED-IN-FILE 'MISC/RCREF.RED) 
(PUT 'CREF51 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL GENERAL) GENERAL)) 
(DE CREF51 (X Y Z)
    (COND
     ((SETQ X (GET X Y))
      (PROGN (NEWLINE 15) (PRTATM Z) (LPRINT (IDSORT X) 27))))) 
(PUT 'CREF6 'NUMBER-OF-ARGS 1) 
(PUT 'CREF6 'DEFINED-ON-LINE '226) 
(PUT 'CREF6 'DEFINED-IN-FILE 'MISC/RCREF.RED) 
(PUT 'CREF6 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE CREF6 (GLB)
    (PROGN
     (NEWLINE 0)
     (PRIN1 GLB)
     (SPACES-TO 15)
     (SETQ NOTUSE* T)
     (CREF61 GLB 'USEDBY "Global in:")
     (CREF61 GLB 'USEDUNBY "Undeclared:")
     (CREF61 GLB 'BOUNDBY "Bound in:")
     (CREF61 GLB 'SETBY "Set by:")
     (COND (NOTUSE* (PRTATM "*** Not Used ***"))))) 
(PUT 'CREF61 'NUMBER-OF-ARGS 3) 
(PUT 'CREF61 'DEFINED-ON-LINE '236) 
(PUT 'CREF61 'DEFINED-IN-FILE 'MISC/RCREF.RED) 
(PUT 'CREF61 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL GENERAL) GENERAL)) 
(DE CREF61 (X Y Z)
    (COND
     ((SETQ X (GET X Y))
      (PROGN
       (COND ((NOT NOTUSE*) (NEWLINE 15)) (T (SETQ NOTUSE* NIL)))
       (PRTATM Z)
       (LPRINT (IDSORT X) 27))))) 
(DE FLAG1 (U V) (FLAG (LIST U) V)) 
(PUT 'FLAG1 'NUMBER-OF-ARGS 2) 
(PUT 'FLAG1 'DEFINED-ON-LINE '244) 
(PUT 'FLAG1 'DEFINED-IN-FILE 'MISC/RCREF.RED) 
(PUT 'FLAG1 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(PUTC 'FLAG1 'INLINE '(LAMBDA (U V) (FLAG (LIST U) V))) 
(DE REMFLAG1 (U V) (REMFLAG (LIST U) V)) 
(PUT 'REMFLAG1 'NUMBER-OF-ARGS 2) 
(PUT 'REMFLAG1 'DEFINED-ON-LINE '246) 
(PUT 'REMFLAG1 'DEFINED-IN-FILE 'MISC/RCREF.RED) 
(PUT 'REMFLAG1 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(PUTC 'REMFLAG1 'INLINE '(LAMBDA (U V) (REMFLAG (LIST U) V))) 
(DE ISGLOB (U) (FLAGP U 'DCLGLB)) 
(PUT 'ISGLOB 'NUMBER-OF-ARGS 1) 
(PUT 'ISGLOB 'DEFINED-ON-LINE '248) 
(PUT 'ISGLOB 'DEFINED-IN-FILE 'MISC/RCREF.RED) 
(PUT 'ISGLOB 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(PUTC 'ISGLOB 'INLINE '(LAMBDA (U) (FLAGP U 'DCLGLB))) 
(DE CHKSEEN (S)
    (COND
     ((NOT (FLAGP S 'SEEN))
      (PROGN (FLAG (LIST S) 'SEEN) (SETQ SEEN* (CONS S SEEN*)))))) 
(PUT 'CHKSEEN 'NUMBER-OF-ARGS 1) 
(PUT 'CHKSEEN 'DEFINED-ON-LINE '251) 
(PUT 'CHKSEEN 'DEFINED-IN-FILE 'MISC/RCREF.RED) 
(PUT 'CHKSEEN 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(PUTC 'CHKSEEN 'INLINE
      '(LAMBDA (S)
         (COND
          ((NOT (FLAGP S 'SEEN))
           (PROGN (FLAG (LIST S) 'SEEN) (SETQ SEEN* (CONS S SEEN*))))))) 
(DE GLOBREF (U)
    (COND
     ((NOT (FLAGP U 'GLB2RF))
      (PROGN (FLAG (LIST U) 'GLB2RF) (SETQ GLOBS* (CONS U GLOBS*)))))) 
(PUT 'GLOBREF 'NUMBER-OF-ARGS 1) 
(PUT 'GLOBREF 'DEFINED-ON-LINE '256) 
(PUT 'GLOBREF 'DEFINED-IN-FILE 'MISC/RCREF.RED) 
(PUT 'GLOBREF 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(PUTC 'GLOBREF 'INLINE
      '(LAMBDA (U)
         (COND
          ((NOT (FLAGP U 'GLB2RF))
           (PROGN (FLAG (LIST U) 'GLB2RF) (SETQ GLOBS* (CONS U GLOBS*))))))) 
(DE ANATOM (U)
    (COND
     ((AND *GLOBALS U (NOT (EQ U 'T)) (IDP U) (NOT (ASSOC U LOCLS*)))
      (COND
       ((NOT (FLAGP U 'GLB2RF))
        (PROGN (FLAG (LIST U) 'GLB2RF) (SETQ GLOBS* (CONS U GLOBS*)))))))) 
(PUT 'ANATOM 'NUMBER-OF-ARGS 1) 
(PUT 'ANATOM 'DEFINED-ON-LINE '260) 
(PUT 'ANATOM 'DEFINED-IN-FILE 'MISC/RCREF.RED) 
(PUT 'ANATOM 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(PUTC 'ANATOM 'INLINE
      '(LAMBDA (U)
         (COND
          ((AND *GLOBALS U (NOT (EQ U 'T)) (IDP U) (NOT (ASSOC U LOCLS*)))
           (COND
            ((NOT (FLAGP U 'GLB2RF))
             (PROGN (FLAG (LIST U) 'GLB2RF) (SETQ GLOBS* (CONS U GLOBS*))))))))) 
(DE CHKGSEEN (G)
    (COND
     ((NOT (FLAGP G 'GSEEN))
      (PROGN (SETQ GSEEN* (CONS G GSEEN*)) (FLAG (LIST G) 'GSEEN))))) 
(PUT 'CHKGSEEN 'NUMBER-OF-ARGS 1) 
(PUT 'CHKGSEEN 'DEFINED-ON-LINE '266) 
(PUT 'CHKGSEEN 'DEFINED-IN-FILE 'MISC/RCREF.RED) 
(PUT 'CHKGSEEN 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(PUTC 'CHKGSEEN 'INLINE
      '(LAMBDA (G)
         (COND
          ((NOT (FLAGP G 'GSEEN))
           (PROGN (SETQ GSEEN* (CONS G GSEEN*)) (FLAG (LIST G) 'GSEEN)))))) 
(PUT 'DO-GLOBAL 'NUMBER-OF-ARGS 1) 
(PUT 'DO-GLOBAL 'DEFINED-ON-LINE '270) 
(PUT 'DO-GLOBAL 'DEFINED-IN-FILE 'MISC/RCREF.RED) 
(PUT 'DO-GLOBAL 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE DO-GLOBAL (L)
    (COND
     ((AND (PAIRP (SETQ L (QCRF (CAR L)))) *GLOBALS TOPLV*)
      (PROGN
       (PROG (V)
         (SETQ V L)
        LAB
         (COND ((NULL V) (RETURN NIL)))
         ((LAMBDA (V)
            (COND
             ((NOT (FLAGP V 'GSEEN))
              (PROGN (SETQ GSEEN* (CONS V GSEEN*)) (FLAG (LIST V) 'GSEEN)))))
          (CAR V))
         (SETQ V (CDR V))
         (GO LAB))
       (FLAG L 'DCLGLB))))) 
(PUT 'GLOBAL 'ANLFN 'DO-GLOBAL) 
(PUT 'FLUID 'ANLFN 'DO-GLOBAL) 
(PUT 'UNFLUID 'DEFINED-ON-LINE '280) 
(PUT 'UNFLUID 'DEFINED-IN-FILE 'MISC/RCREF.RED) 
(PUT 'UNFLUID 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(PUTC 'UNFLUID 'ANLFN
      '(LAMBDA (L)
         (COND
          ((AND (PAIRP (SETQ L (QCRF (CAR L)))) *GLOBALS TOPLV*)
           (PROGN
            (PROG (V)
              (SETQ V L)
             LAB
              (COND ((NULL V) (RETURN NIL)))
              ((LAMBDA (V)
                 (COND
                  ((NOT (FLAGP V 'GSEEN))
                   (PROGN
                    (SETQ GSEEN* (CONS V GSEEN*))
                    (FLAG (LIST V) 'GSEEN)))))
               (CAR V))
              (SETQ V (CDR V))
              (GO LAB))
            (REMFLAG L 'DCLGLB)))))) 
(PUT 'ADD2LOCS 'NUMBER-OF-ARGS 1) 
(PUT 'ADD2LOCS 'DEFINED-ON-LINE '284) 
(PUT 'ADD2LOCS 'DEFINED-IN-FILE 'MISC/RCREF.RED) 
(PUT 'ADD2LOCS 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE ADD2LOCS (LL)
    (PROG (OLDLOC)
      (COND
       (*GLOBALS
        (PROG (GG)
          (SETQ GG LL)
         LAB
          (COND ((NULL GG) (RETURN NIL)))
          ((LAMBDA (GG)
             (PROGN
              (SETQ OLDLOC (ASSOC GG LOCLS*))
              (COND
               ((AND OLDLOC (FLAGP GG 'DCLGLB))
                (PROGN
                 (QERLINE 0)
                 (PRIN2 "*** Variable ")
                 (PRIN1 GG)
                 (PRIN2 " nested declaration in ")
                 (PRINCNG CURFUN*)
                 (NEWLINE 0)
                 (RPLACD OLDLOC (CONS NIL OLDLOC))))
               (T (SETQ LOCLS* (CONS (CONS GG (LIST NIL)) LOCLS*))))
              (COND ((OR (FLAGP GG 'DCLGLB) (FLAGP GG 'GLB2RF)) (GLOBIND GG)))
              (COND
               ((FLAGP GG 'SEEN)
                (PROGN
                 (QERLINE 0)
                 (PRIN2 "*** Function ")
                 (PRINCNG GG)
                 (PRIN2 " used as variable in ")
                 (PRINCNG CURFUN*)
                 (NEWLINE 0))))))
           (CAR GG))
          (SETQ GG (CDR GG))
          (GO LAB)))))) 
(PUT 'QERLINE 'NUMBER-OF-ARGS 1) 
(PUT 'QERLINE 'DEFINED-ON-LINE '308) 
(PUT 'QERLINE 'DEFINED-IN-FILE 'MISC/RCREF.RED) 
(PUT 'QERLINE 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE QERLINE (U)
    (COND (*NOCREFPRI NIL) (PRETITL* (NEWLINE U))
          (T (PROGN (SETQ PRETITL* T) (NEWPAGE))))) 
(PUT 'GLOBIND 'NUMBER-OF-ARGS 1) 
(PUT 'GLOBIND 'DEFINED-ON-LINE '313) 
(PUT 'GLOBIND 'DEFINED-IN-FILE 'MISC/RCREF.RED) 
(PUT 'GLOBIND 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE GLOBIND (GG)
    (PROGN
     (FLAG (LIST GG) 'GLB2BD)
     (COND
      ((NOT (FLAGP GG 'GLB2RF))
       (PROGN (FLAG (LIST GG) 'GLB2RF) (SETQ GLOBS* (CONS GG GLOBS*))))))) 
(PUT 'REMLOCS 'NUMBER-OF-ARGS 1) 
(PUT 'REMLOCS 'DEFINED-ON-LINE '316) 
(PUT 'REMLOCS 'DEFINED-IN-FILE 'MISC/RCREF.RED) 
(PUT 'REMLOCS 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE REMLOCS (LLN)
    (PROG (OLDLOC)
      (COND
       (*GLOBALS
        (PROG (LL)
          (SETQ LL LLN)
         LAB
          (COND ((NULL LL) (RETURN NIL)))
          ((LAMBDA (LL)
             (PROGN
              (SETQ OLDLOC (ASSOC LL LOCLS*))
              (COND
               ((NULL OLDLOC)
                (COND ((GETD 'BEGIN) (REDERR (LIST " Lvar confused" LL)))
                      (T (ERROR 0 (LIST " Lvar confused" LL))))))
              (COND ((CDDR OLDLOC) (RPLACD OLDLOC (CDDR OLDLOC)))
                    (T (SETQ LOCLS* (EFFACE1 OLDLOC LOCLS*))))))
           (CAR LL))
          (SETQ LL (CDR LL))
          (GO LAB)))))) 
(PUT 'EFFACE1 'NUMBER-OF-ARGS 2) 
(PUT 'EFFACE1 'DEFINED-ON-LINE '327) 
(PUT 'EFFACE1 'DEFINED-IN-FILE 'MISC/RCREF.RED) 
(PUT 'EFFACE1 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE EFFACE1 (U V)
    (COND ((NULL V) NIL) ((EQ U (CAR V)) (CDR V))
          (T (RPLACD V (EFFACE1 U (CDR V)))))) 
(PUT 'ADD2CALLS 'NUMBER-OF-ARGS 1) 
(PUT 'ADD2CALLS 'DEFINED-ON-LINE '332) 
(PUT 'ADD2CALLS 'DEFINED-IN-FILE 'MISC/RCREF.RED) 
(PUT 'ADD2CALLS 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE ADD2CALLS (FN)
    (AND (NOT (FLAGP FN 'CINTHIS))
         (PROGN
          (COND ((FLAGP FN 'NOLIST) (SETQ XSEEN* (CONS FN XSEEN*)))
                (T (SETQ CALLS* (CONS FN CALLS*))))
          (FLAG (LIST FN) 'CINTHIS)))) 
(PUT 'ANFORM 'NUMBER-OF-ARGS 1) 
(PUT 'ANFORM 'DEFINED-ON-LINE '339) 
(PUT 'ANFORM 'DEFINED-IN-FILE 'MISC/RCREF.RED) 
(PUT 'ANFORM 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE ANFORM (U)
    (COND
     ((ATOM U)
      (COND
       ((AND *GLOBALS U (NOT (EQ U 'T)) (IDP U) (NOT (ASSOC U LOCLS*)))
        (COND
         ((NOT (FLAGP U 'GLB2RF))
          (PROGN (FLAG (LIST U) 'GLB2RF) (SETQ GLOBS* (CONS U GLOBS*))))))))
     (T (ANFORM1 U)))) 
(PUT 'ANFORML 'NUMBER-OF-ARGS 1) 
(PUT 'ANFORML 'DEFINED-ON-LINE '342) 
(PUT 'ANFORML 'DEFINED-IN-FILE 'MISC/RCREF.RED) 
(PUT 'ANFORML 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE ANFORML (L)
    (PROG ()
      (PROG ()
       WHILELABEL
        (COND ((NOT (NOT (ATOM L))) (RETURN NIL)))
        (PROGN (ANFORM (CAR L)) (SETQ L (CDR L)))
        (GO WHILELABEL))
      (COND
       (L
        (COND
         ((AND *GLOBALS L (NOT (EQ L 'T)) (IDP L) (NOT (ASSOC L LOCLS*)))
          (COND
           ((NOT (FLAGP L 'GLB2RF))
            (PROGN
             (FLAG (LIST L) 'GLB2RF)
             (SETQ GLOBS* (CONS L GLOBS*))))))))))) 
(PUT 'ANFORM1 'NUMBER-OF-ARGS 1) 
(PUT 'ANFORM1 'DEFINED-ON-LINE '348) 
(PUT 'ANFORM1 'DEFINED-IN-FILE 'MISC/RCREF.RED) 
(PUT 'ANFORM1 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE ANFORM1 (U)
    (PROG (FN X)
      (SETQ FN (CAR U))
      (SETQ U (CDR U))
      (COND ((NOT (ATOM FN)) (RETURN (PROGN (ANFORM1 FN) (ANFORML U)))))
      (COND ((NOT (IDP FN)) (RETURN NIL))
            ((FLAGP FN 'DCLGLB)
             (PROGN
              (COND
               ((NOT (FLAGP FN 'GLB2RF))
                (PROGN
                 (FLAG (LIST FN) 'GLB2RF)
                 (SETQ GLOBS* (CONS FN GLOBS*)))))
              (RETURN (ANFORML U))))
            ((ASSOC FN LOCLS*) (RETURN (ANFORML U))))
      (ADD2CALLS FN)
      (CHECKARGCOUNT FN (LENGTH U))
      (COND ((FLAGP FN 'NOANL) NIL) ((SETQ X (GET FN 'ANLFN)) (APPLY1 X U))
            (T (ANFORML U))))) 
(PUT 'LAMBDA 'DEFINED-ON-LINE '362) 
(PUT 'LAMBDA 'DEFINED-IN-FILE 'MISC/RCREF.RED) 
(PUT 'LAMBDA 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(PUTC 'LAMBDA 'ANLFN
      '(LAMBDA (U)
         (PROGN (ADD2LOCS (CAR U)) (ANFORML (CDR U)) (REMLOCS (CAR U))))) 
(PUT 'ANLSETQ 'NUMBER-OF-ARGS 1) 
(PUT 'ANLSETQ 'DEFINED-ON-LINE '365) 
(PUT 'ANLSETQ 'DEFINED-IN-FILE 'MISC/RCREF.RED) 
(PUT 'ANLSETQ 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE ANLSETQ (U)
    (PROGN
     (ANFORML U)
     (COND
      ((AND *GLOBALS (FLAGP (SETQ U (CAR U)) 'GLB2RF))
       (FLAG (LIST U) 'GLB2ST))))) 
(PUT 'SETQ 'ANLFN 'ANLSETQ) 
(PUT 'COND 'DEFINED-ON-LINE '371) 
(PUT 'COND 'DEFINED-IN-FILE 'MISC/RCREF.RED) 
(PUT 'COND 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(PUTC 'COND 'ANLFN
      '(LAMBDA (U)
         (PROG (X)
           (SETQ X U)
          LAB
           (COND ((NULL X) (RETURN NIL)))
           ((LAMBDA (X) (ANFORML X)) (CAR X))
           (SETQ X (CDR X))
           (GO LAB)))) 
(PUT 'PROG 'DEFINED-ON-LINE '374) 
(PUT 'PROG 'DEFINED-IN-FILE 'MISC/RCREF.RED) 
(PUT 'PROG 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(PUTC 'PROG 'ANLFN
      '(LAMBDA (U)
         (PROGN
          (ADD2LOCS (CAR U))
          (PROG (X)
            (SETQ X (CDR U))
           LAB
            (COND ((NULL X) (RETURN NIL)))
            ((LAMBDA (X) (COND ((NOT (ATOM X)) (ANFORM1 X)))) (CAR X))
            (SETQ X (CDR X))
            (GO LAB))
          (REMLOCS (CAR U))))) 
(PUT 'FUNCTION 'DEFINED-ON-LINE '380) 
(PUT 'FUNCTION 'DEFINED-IN-FILE 'MISC/RCREF.RED) 
(PUT 'FUNCTION 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(PUTC 'FUNCTION 'ANLFN
      '(LAMBDA (U)
         (COND ((PAIRP (SETQ U (CAR U))) (ANFORM1 U))
               ((FLAGP U 'DCLGLB)
                (COND
                 ((NOT (FLAGP U 'GLB2RF))
                  (PROGN
                   (FLAG (LIST U) 'GLB2RF)
                   (SETQ GLOBS* (CONS U GLOBS*))))))
               ((NULL (ASSOC U LOCLS*)) (ADD2CALLS U))))) 
(FLAG ''GO 'NOANL) 
(PUT 'ERRORSET 'DEFINED-ON-LINE '387) 
(PUT 'ERRORSET 'DEFINED-IN-FILE 'MISC/RCREF.RED) 
(PUT 'ERRORSET 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(PUTC 'ERRORSET 'ANLFN
      '(LAMBDA (U)
         (PROG (FN X)
           (ANFORML (CDR U))
           (COND
            ((EQCAR (SETQ U (CAR U)) 'QUOTE) (RETURN (ERSANFORM (CADR U))))
            ((NOT
              (AND (OR (EQCAR U 'CONS) (SETQ X (EQCAR U 'LIST)))
                   (QUOTP (SETQ FN (CADR U)))))
             (RETURN (ANFORM U))))
           (ANFORML (CDDR U))
           (COND ((PAIRP (SETQ FN (CADR FN))) (ANFORM1 FN))
                 ((FLAGP FN 'GLB2RF) NIL)
                 ((FLAGP FN 'DCLGLB)
                  (COND
                   ((NOT (FLAGP FN 'GLB2RF))
                    (PROGN
                     (FLAG (LIST FN) 'GLB2RF)
                     (SETQ GLOBS* (CONS FN GLOBS*))))))
                 (T
                  (PROGN
                   (ADD2CALLS FN)
                   (COND (X (CHECKARGCOUNT FN (LENGTH (CDDR U))))))))))) 
(PUT 'ERSANFORM 'NUMBER-OF-ARGS 1) 
(PUT 'ERSANFORM 'DEFINED-ON-LINE '401) 
(PUT 'ERSANFORM 'DEFINED-IN-FILE 'MISC/RCREF.RED) 
(PUT 'ERSANFORM 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE ERSANFORM (U) (PROG (LOCLS*) (RETURN (ANFORM U)))) 
(PUT 'ANLMAP 'NUMBER-OF-ARGS 1) 
(PUT 'ANLMAP 'DEFINED-ON-LINE '406) 
(PUT 'ANLMAP 'DEFINED-IN-FILE 'MISC/RCREF.RED) 
(PUT 'ANLMAP 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE ANLMAP (U)
    (PROGN
     (ANFORML U)
     (COND
      ((AND (QUOTP (SETQ U (CADR U))) (IDP (SETQ U (CADR U)))
            (NOT (FLAGP U 'DCLGLB)) (NOT (ASSOC U LOCLS*)))
       (CHECKARGCOUNT U 1))))) 
(PROG (X)
  (SETQ X '(MAP MAPC MAPLIST MAPCAR MAPCON MAPCAN))
 LAB
  (COND ((NULL X) (RETURN NIL)))
  ((LAMBDA (X) (PUT X 'ANLFN 'ANLMAP)) (CAR X))
  (SETQ X (CDR X))
  (GO LAB)) 
(PUT 'LISPAPPLY 'DEFINED-ON-LINE '415) 
(PUT 'LISPAPPLY 'DEFINED-IN-FILE 'MISC/RCREF.RED) 
(PUT 'LISPAPPLY 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(PUTC 'LISPAPPLY 'ANLFN
      '(LAMBDA (U)
         (PROG (FN)
           (ANFORML (CDR U))
           (COND
            ((AND (QUOTP (SETQ FN (CADR U))) (IDP (SETQ FN (CADR FN)))
                  (EQCAR (SETQ U (CADDR U)) 'LIST))
             (CHECKARGCOUNT FN (LENGTH (CDR U)))))))) 
(PUT 'APPLY 'DEFINED-ON-LINE '422) 
(PUT 'APPLY 'DEFINED-IN-FILE 'MISC/RCREF.RED) 
(PUT 'APPLY 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(PUTC 'APPLY 'ANLFN
      '(LAMBDA (U)
         (PROG (FN)
           (ANFORML (CDR U))
           (COND
            ((AND (QUOTP (SETQ FN (CADR U))) (IDP (SETQ FN (CADR FN)))
                  (EQCAR (SETQ U (CADDR U)) 'LIST))
             (CHECKARGCOUNT FN (LENGTH (CDR U)))))))) 
(PUT 'QUOTP 'NUMBER-OF-ARGS 1) 
(PUT 'QUOTP 'DEFINED-ON-LINE '429) 
(PUT 'QUOTP 'DEFINED-IN-FILE 'MISC/RCREF.RED) 
(PUT 'QUOTP 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE QUOTP (U) (OR (EQCAR U 'QUOTE) (EQCAR U 'FUNCTION))) 
(PUT 'CREF 'SIMPFG '((T (CREFON)) (NIL (CREFOFF)))) 
(PUT 'OUTREF 'NUMBER-OF-ARGS 4) 
(PUT 'OUTREF 'DEFINED-ON-LINE '433) 
(PUT 'OUTREF 'DEFINED-IN-FILE 'MISC/RCREF.RED) 
(PUT 'OUTREF 'PROCEDURE_TYPE
     '(ARROW (TIMES GENERAL GENERAL GENERAL GENERAL) GENERAL)) 
(DE OUTREF (S VARLIS BODY TYPE)
    (PROG (CURFUN* CALLS* GLOBS* LOCLS* TOPLV* A)
      (SETQ A
              (COND ((MEMQ VARLIS '(ANP!ATOM ANP!IDB ANP!EQ ANP!UNKNOWN)) NIL)
                    (T (LENGTH VARLIS))))
      (SETQ S (OUTRDEFUN S TYPE (COND (A A) (T (GET BODY 'NUMBER-OF-ARGS)))))
      (COND (A (PROGN (ADD2LOCS VARLIS) (ANFORM BODY) (REMLOCS VARLIS)))
            ((OR (NULL BODY) (NOT (IDP BODY))) NIL)
            ((EQ VARLIS 'ANP!EQ)
             (PROGN (PUT S 'SAMEAS (LIST BODY)) (TRAPUT BODY 'ALSOIS S)))
            (T (ADD2CALLS BODY)))
      (OUTREFEND S))) 
(PUT 'TRAPUT 'NUMBER-OF-ARGS 3) 
(PUT 'TRAPUT 'DEFINED-ON-LINE '447) 
(PUT 'TRAPUT 'DEFINED-IN-FILE 'MISC/RCREF.RED) 
(PUT 'TRAPUT 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL GENERAL) GENERAL)) 
(DE TRAPUT (U V W)
    (PROG (A)
      (COND
       ((SETQ A (GET U V))
        (COND ((NOT (OR TOPLV* (MEMQ W A))) (RPLACD A (CONS W (CDR A))))))
       (T (PUT U V (LIST W)))))) 
(DE TOPUT (U V W)
    (COND (W (PUT U V (COND (TOPLV* (UNION W (GET U V))) (T W)))))) 
(PUT 'TOPUT 'NUMBER-OF-ARGS 3) 
(PUT 'TOPUT 'DEFINED-ON-LINE '454) 
(PUT 'TOPUT 'DEFINED-IN-FILE 'MISC/RCREF.RED) 
(PUT 'TOPUT 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL GENERAL) GENERAL)) 
(PUTC 'TOPUT 'INLINE
      '(LAMBDA (U V W)
         (COND (W (PUT U V (COND (TOPLV* (UNION W (GET U V))) (T W))))))) 
(PUT 'OUTREFEND 'NUMBER-OF-ARGS 1) 
(PUT 'OUTREFEND 'DEFINED-ON-LINE '457) 
(PUT 'OUTREFEND 'DEFINED-IN-FILE 'MISC/RCREF.RED) 
(PUT 'OUTREFEND 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE OUTREFEND (S)
    (PROGN
     ((LAMBDA (G541)
        (COND
         (G541
          (PUT S 'CALLS
               (COND (TOPLV* (UNION G541 (GET S 'CALLS))) (T G541))))))
      CALLS*)
     (PROG (X)
       (SETQ X CALLS*)
      LAB
       (COND ((NULL X) (RETURN NIL)))
       ((LAMBDA (X)
          (PROGN
           (REMFLAG (LIST X) 'CINTHIS)
           (COND
            ((NOT (EQ X S))
             (PROGN
              (COND
               ((NOT (FLAGP X 'SEEN))
                (PROGN (FLAG (LIST X) 'SEEN) (SETQ SEEN* (CONS X SEEN*)))))
              (TRAPUT X 'CALLEDBY S))))))
        (CAR X))
       (SETQ X (CDR X))
       (GO LAB))
     ((LAMBDA (G544)
        (COND
         (G544
          (PUT S 'GLOBS
               (COND (TOPLV* (UNION G544 (GET S 'GLOBS))) (T G544))))))
      GLOBS*)
     (PROG (X)
       (SETQ X GLOBS*)
      LAB
       (COND ((NULL X) (RETURN NIL)))
       ((LAMBDA (X)
          (PROGN
           (TRAPUT X
            (COND ((FLAGP X 'DCLGLB) 'USEDBY)
                  (T
                   (PROGN
                    (COND
                     ((NOT (FLAGP X 'GSEEN))
                      (PROGN
                       (SETQ GSEEN* (CONS X GSEEN*))
                       (FLAG (LIST X) 'GSEEN))))
                    'USEDUNBY)))
            S)
           (REMFLAG (LIST X) 'GLB2RF)
           (COND
            ((FLAGP X 'GLB2BD)
             (PROGN (REMFLAG (LIST X) 'GLB2BD) (TRAPUT X 'BOUNDBY S))))
           (COND
            ((FLAGP X 'GLB2ST)
             (PROGN (REMFLAG (LIST X) 'GLB2ST) (TRAPUT X 'SETBY S))))))
        (CAR X))
       (SETQ X (CDR X))
       (GO LAB)))) 
(PUT 'RECREF 'NUMBER-OF-ARGS 2) 
(PUT 'RECREF 'DEFINED-ON-LINE '472) 
(PUT 'RECREF 'DEFINED-IN-FILE 'MISC/RCREF.RED) 
(PUT 'RECREF 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE RECREF (S TYPE)
    (PROGN
     (QERLINE 2)
     (PRTATM "*** Redefinition to ")
     (PRIN1 TYPE)
     (PRTATM " procedure, of:")
     (CREF5 S)
     (REMPROPSS (LIST S) '(CALLS GLOBS SAMEAS))
     (NEWLINE 2))) 
(PUT 'OUTRDEFUN 'NUMBER-OF-ARGS 3) 
(PUT 'OUTRDEFUN 'DEFINED-ON-LINE '481) 
(PUT 'OUTRDEFUN 'DEFINED-IN-FILE 'MISC/RCREF.RED) 
(PUT 'OUTRDEFUN 'PROCEDURE_TYPE
     '(ARROW (TIMES GENERAL GENERAL GENERAL) GENERAL)) 
(DE OUTRDEFUN (S TYPE V)
    (PROG ()
      (SETQ S (QTYPNM S TYPE))
      (COND ((FLAGP S 'DEFD) (RECREF S TYPE)) (T (FLAG (LIST S) 'DEFD)))
      (COND
       ((AND (FLAGP TYPE 'FUNCTION) (OR (FLAGP S 'DCLGLB) (ASSOC S LOCLS*)))
        (PROGN
         (QERLINE 0)
         (PRIN2 "**** Variable ")
         (PRINCNG S)
         (PRIN2 " defined as function")
         (NEWLINE 0))))
      (COND ((AND V (NOT (FLAGP TYPE 'NARYARG))) (DEFINEARGS S V))
            ((AND (FLAGP TYPE 'NARYARG) (NOT (FLAGP S 'NARYARGS)))
             (FLAG (LIST S) 'NARYARGS)))
      (PUT S 'GALL (CONS CURLIN* TYPE))
      (SETQ GLOBS* NIL)
      (SETQ CALLS* NIL)
      (RETURN (SETQ CURFUN* S)))) 
(FLAG '(MACRO FEXPR) 'NARYARG) 
(PUT 'QTYPNM 'NUMBER-OF-ARGS 2) 
(PUT 'QTYPNM 'DEFINED-ON-LINE '503) 
(PUT 'QTYPNM 'DEFINED-IN-FILE 'MISC/RCREF.RED) 
(PUT 'QTYPNM 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE QTYPNM (S TYPE)
    (COND
     ((FLAGP TYPE 'FUNCTION)
      (PROGN
       (COND
        ((NOT (FLAGP S 'SEEN))
         (PROGN (FLAG (LIST S) 'SEEN) (SETQ SEEN* (CONS S SEEN*)))))
       S))
     (T
      (PROG (X Y Z)
        (COND
         ((AND (SETQ Y (GET TYPE 'TSEEN)) (SETQ X (ATSOC S (CDR Y))))
          (RETURN (CDR X))))
        (COND
         ((NULL Y)
          (PROGN
           (SETQ Y (LIST (CONS '|(| (NCONC (EXPLODE TYPE) (LIST '|)|)))))
           (PUT TYPE 'TSEEN Y)
           (SETQ TSEEN* (CONS TYPE TSEEN*)))))
        (SETQ X (COMPRESS (SETQ Z (EXPLODE S))))
        (RPLACD Y (CONS (CONS S X) (CDR Y)))
        (SETQ Y (APPEND (CAR Y) Z))
        (PUT X 'RCCNAM (CONS (LENGTH Y) Y))
        (TRAPUT TYPE 'FUNS X)
        (RETURN X))))) 
(PUT 'DEFINEARGS 'NUMBER-OF-ARGS 2) 
(PUT 'DEFINEARGS 'DEFINED-ON-LINE '519) 
(PUT 'DEFINEARGS 'DEFINED-IN-FILE 'MISC/RCREF.RED) 
(PUT 'DEFINEARGS 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE DEFINEARGS (NAME N)
    (PROG (CALLEDWITH X)
      (SETQ CALLEDWITH (GET NAME 'NUMBER-OF-ARGS))
      (COND ((NULL CALLEDWITH) (RETURN (HASARG NAME N))))
      (COND ((EQUAL N CALLEDWITH) (RETURN NIL)))
      (COND ((SETQ X (GET NAME 'CALLEDBY)) (INSTDOF NAME N CALLEDWITH X)))
      (HASARG NAME N))) 
(PUT 'INSTDOF 'NUMBER-OF-ARGS 4) 
(PUT 'INSTDOF 'DEFINED-ON-LINE '528) 
(PUT 'INSTDOF 'DEFINED-IN-FILE 'MISC/RCREF.RED) 
(PUT 'INSTDOF 'PROCEDURE_TYPE
     '(ARROW (TIMES GENERAL GENERAL GENERAL GENERAL) GENERAL)) 
(DE INSTDOF (NAME N M FNLST)
    (PROGN
     (QERLINE 0)
     (PRIN2 "***** ")
     (PRIN1 NAME)
     (PRIN2 " called with ")
     (PRIN2 M)
     (PRIN2 " instead of ")
     (PRIN2 N)
     (PRIN2 " arguments in:")
     (LPRINT (IDSORT FNLST) (PLUS (POSN) 1))
     (NEWLINE 0))) 
(PUT 'HASARG 'NUMBER-OF-ARGS 2) 
(PUT 'HASARG 'DEFINED-ON-LINE '540) 
(PUT 'HASARG 'DEFINED-IN-FILE 'MISC/RCREF.RED) 
(PUT 'HASARG 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE HASARG (NAME N)
    (PROGN
     (SETQ HAVEARGS* (CONS NAME HAVEARGS*))
     (COND
      ((GREATERP N MAXARG*)
       (PROGN
        (QERLINE 0)
        (PRIN2 "**** ")
        (PRIN1 NAME)
        (PRIN2 " has ")
        (PRIN2 N)
        (PRIN2 " arguments")
        (NEWLINE 0))))
     (COND ((NEQ NAME 'BLDMSG) (PUT NAME 'NUMBER-OF-ARGS N))))) 
(PUT 'CHECKARGCOUNT 'NUMBER-OF-ARGS 2) 
(PUT 'CHECKARGCOUNT 'DEFINED-ON-LINE '550) 
(PUT 'CHECKARGCOUNT 'DEFINED-IN-FILE 'MISC/RCREF.RED) 
(PUT 'CHECKARGCOUNT 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE CHECKARGCOUNT (NAME N)
    (PROG (CORRECTN)
      (COND ((FLAGP NAME 'NARYARGS) (RETURN NIL)))
      (SETQ CORRECTN (GET NAME 'NUMBER-OF-ARGS))
      (COND ((NULL CORRECTN) (RETURN (HASARG NAME N))))
      (COND
       ((NOT (EQUAL CORRECTN N)) (INSTDOF NAME CORRECTN N (LIST CURFUN*)))))) 
(PUT 'REFPRINT 'NUMBER-OF-ARGS 1) 
(PUT 'REFPRINT 'DEFINED-ON-LINE '558) 
(PUT 'REFPRINT 'DEFINED-IN-FILE 'MISC/RCREF.RED) 
(PUT 'REFPRINT 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE REFPRINT (U)
    (PROG (X Y)
      (SETQ X (COND (CLOC* (CAR CLOC*)) (T "*TTYINPUT*")))
      (COND
       ((SETQ CURFUN* (ASSOC X PFILES*))
        (PROGN (SETQ X (CAR CURFUN*)) (SETQ CURFUN* (CDR CURFUN*))))
       (T
        (PROGN
         (SETQ PFILES* (CONS (CONS X (SETQ CURFUN* (GENSYM))) PFILES*))
         (SETQ Y (REVERSIP (CDR (REVERSIP (CDR (EXPLODE X))))))
         (PUT CURFUN* 'RCCNAM (CONS (LENGTH Y) Y)))))
      (SETQ CURLIN*
              (COND ((AND CLOC* (CDR CLOC*)) (CONS X (CDR CLOC*))) (T NIL)))
      (SETQ CALLS* (SETQ GLOBS* (SETQ LOCLS* NIL)))
      (ANFORM U)
      (OUTREFEND CURFUN*))) 
(PUT 'FILEMK 'NUMBER-OF-ARGS 1) 
(PUT 'FILEMK 'DEFINED-ON-LINE '573) 
(PUT 'FILEMK 'DEFINED-IN-FILE 'MISC/RCREF.RED) 
(PUT 'FILEMK 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE FILEMK (U)
    (PROG (DEV NAME FLG FLG2)
      (COND ((NULL U) (RETURN NIL)) ((ATOM U) (SETQ NAME (EXPLODE2 U)))
            (T
             (PROG (X)
               (SETQ X U)
              LAB
               (COND ((NULL X) (RETURN NIL)))
               ((LAMBDA (X)
                  (COND ((EQ X '|DIR:|) (SETQ FLG T))
                        ((ATOM X)
                         (COND
                          (FLG
                           (SETQ DEV (CONS '< (NCONC (EXPLODE2 X) (LIST '>)))))
                          ((EQ X '|DSK:|) (SETQ DEV NIL))
                          ((%DEVP X) (SETQ DEV (EXPLODE2 X)))
                          (T (SETQ NAME (EXPLODE2 X)))))
                        ((ATOM (CDR X))
                         (SETQ NAME
                                 (NCONC (EXPLODE2 (CAR X))
                                        (CONS '|.| (EXPLODE2 (CDR X))))))
                        (T
                         (PROGN
                          (SETQ FLG2 T)
                          (SETQ DEV
                                  (CONS '[
                                        (NCONC (EXPLODE2 (CAR X))
                                               (CONS '|,|
                                                     (NCONC (EXPLODE2 (CADR X))
                                                            (LIST ']))))))))))
                (CAR X))
               (SETQ X (CDR X))
               (GO LAB))))
      (SETQ U (COND (FLG2 (NCONC NAME DEV)) (T (NCONC DEV NAME))))
      (RETURN (COMPRESS (CONS '|"| (NCONC U '(|"|))))))) 
(FLAG '(INLINE SMACRO NMACRO) 'CREF) 
(PUT 'PUT 'DEFINED-ON-LINE '598) 
(PUT 'PUT 'DEFINED-IN-FILE 'MISC/RCREF.RED) 
(PUT 'PUT 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(PUTC 'PUT 'ANLFN
      '(LAMBDA (U)
         (COND ((AND TOPLV* (QCPUTX (CADR U))) (ANPUTX U)) (T (ANFORML U))))) 
(PUT 'PUTC 'ANLFN (GET 'PUT 'ANLFN)) 
(PUT 'QCPUTX 'NUMBER-OF-ARGS 1) 
(PUT 'QCPUTX 'DEFINED-ON-LINE '604) 
(PUT 'QCPUTX 'DEFINED-IN-FILE 'MISC/RCREF.RED) 
(PUT 'QCPUTX 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE QCPUTX (U)
    (AND (EQCAR U 'QUOTE)
         (OR (FLAGP (CADR U) 'CREF) (FLAGP (CADR U) 'COMPILE)))) 
(PUT 'ANPUTX 'NUMBER-OF-ARGS 1) 
(PUT 'ANPUTX 'DEFINED-ON-LINE '607) 
(PUT 'ANPUTX 'DEFINED-IN-FILE 'MISC/RCREF.RED) 
(PUT 'ANPUTX 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE ANPUTX (U)
    (PROG (NAM TYP BODY)
      (SETQ NAM (QCRF (CAR U)))
      (SETQ TYP (QCRF (CADR U)))
      (SETQ U (CADDR U))
      (COND ((ATOM U) (PROGN (SETQ BODY (QCRF U)) (SETQ U 'ANP!ATOM)))
            ((MEMQ (CAR U) ''FUNCTION)
             (COND
              ((EQCAR (SETQ U (CADR U)) 'LAMBDA)
               (PROGN (SETQ BODY (CADDR U)) (SETQ U (CADR U))))
              ((IDP U) (PROGN (SETQ BODY U) (SETQ U 'ANP!IDB)))
              (T (RETURN NIL))))
            ((AND (EQ (CAR U) 'CDR) (EQCAR (CADR U) 'GETD))
             (PROGN (SETQ BODY (QCRF (CADADR U))) (SETQ U 'ANP!EQ)))
            ((AND (EQ (CAR U) 'GET) (QCPUTX (CADDR U)))
             (PROGN
              (SETQ BODY (QTYPNM (QCRF (CADR U)) (CADR (CADDR U))))
              (SETQ U 'ANP!EQ)))
            ((EQ (CAR U) 'MKCODE)
             (PROGN
              (ANFORM (CADR U))
              (SETQ U (QCRF (CADDR U)))
              (SETQ BODY NIL)))
            (T (PROGN (SETQ BODY (QCRF U)) (SETQ U 'ANP!UNKNOWN))))
      (OUTREF NAM U BODY TYP))) 
(PUT 'PUTD 'DEFINED-ON-LINE '627) 
(PUT 'PUTD 'DEFINED-IN-FILE 'MISC/RCREF.RED) 
(PUT 'PUTD 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(PUTC 'PUTD 'ANLFN '(LAMBDA (U) (COND (TOPLV* (ANPUTX U)) (T (ANFORML U))))) 
(PUT 'DE 'DEFINED-ON-LINE '630) 
(PUT 'DE 'DEFINED-IN-FILE 'MISC/RCREF.RED) 
(PUT 'DE 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(PUTC 'DE 'ANLFN '(LAMBDA (U) (OUTDEFR U 'EXPR))) 
(PUT 'DF 'DEFINED-ON-LINE '633) 
(PUT 'DF 'DEFINED-IN-FILE 'MISC/RCREF.RED) 
(PUT 'DF 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(PUTC 'DF 'ANLFN '(LAMBDA (U) (OUTDEFR U 'FEXPR))) 
(PUT 'DM 'DEFINED-ON-LINE '636) 
(PUT 'DM 'DEFINED-IN-FILE 'MISC/RCREF.RED) 
(PUT 'DM 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(PUTC 'DM 'ANLFN '(LAMBDA (U) (OUTDEFR U 'MACRO))) 
(PUT 'DN 'DEFINED-ON-LINE '639) 
(PUT 'DN 'DEFINED-IN-FILE 'MISC/RCREF.RED) 
(PUT 'DN 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(PUTC 'DN 'ANLFN '(LAMBDA (U) (OUTDEFR U 'MACRO))) 
(PUT 'DS 'DEFINED-ON-LINE '642) 
(PUT 'DS 'DEFINED-IN-FILE 'MISC/RCREF.RED) 
(PUT 'DS 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(PUTC 'DS 'ANLFN '(LAMBDA (U) (OUTDEFR U 'SMACRO))) 
(PUT 'OUTDEFR 'NUMBER-OF-ARGS 2) 
(PUT 'OUTDEFR 'DEFINED-ON-LINE '645) 
(PUT 'OUTDEFR 'DEFINED-IN-FILE 'MISC/RCREF.RED) 
(PUT 'OUTDEFR 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE OUTDEFR (U TYPE) (OUTREF (CAR U) (CADR U) (CADDR U) TYPE)) 
(PUT 'QCRF 'NUMBER-OF-ARGS 1) 
(PUT 'QCRF 'DEFINED-ON-LINE '648) 
(PUT 'QCRF 'DEFINED-IN-FILE 'MISC/RCREF.RED) 
(PUT 'QCRF 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE QCRF (U)
    (COND ((OR (NULL U) (EQ U T)) U) ((EQCAR U 'QUOTE) (CADR U))
          (T (PROGN (ANFORM U) (COMPRESS (EXPLODE '?VALUE??)))))) 
(FLAG '(EXPR FEXPR MACRO INLINE SMACRO NMACRO) 'FUNCTION) 
(ENDMODULE) 