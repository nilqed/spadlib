(cl:declaim (cl:optimize cl:debug cl:safety))
(cl:declaim (sb-ext:muffle-conditions sb-ext:compiler-note cl:style-warning))
(MODULE (LIST 'TALPMISC)) 
(REVISION 'TALPMISC
          "$Id: talpmisc.red 5986 2021-08-28 13:35:27Z thomas-sturm $") 
(COPYRIGHT 'TALPMISC "(c) 2004-2009 A. Dolzmann, T. Sturm, 2016 T. Sturm") 
(PUT 'TALP_ORDATP 'NUMBER-OF-ARGS 2) 
(PUT 'TALP_ORDATP 'DEFINED-ON-LINE '32) 
(PUT 'TALP_ORDATP 'DEFINED-IN-FILE 'REDLOG/TALP/TALPMISC.RED) 
(PUT 'TALP_ORDATP 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE TALP_ORDATP (A1 A2)
    (PROG (W1 W2)
      (SETQ A1 (TALP_SIMPAT A1))
      (SETQ A2 (TALP_SIMPAT A2))
      (SETQ W1 (CADR A1))
      (SETQ W2 (CADR A2))
      (COND ((NEQ W1 W2) (RETURN (TALP_TORDP (CADR A1) (CADR A2)))))
      (SETQ W1 (CADDR A1))
      (SETQ W2 (CADDR A2))
      (COND ((NEQ W1 W2) (RETURN (TALP_TORDP (CADDR A1) (CADDR A2)))))
      (RETURN 'TRUE))) 
(PUT 'TALP_TORDP 'NUMBER-OF-ARGS 2) 
(PUT 'TALP_TORDP 'DEFINED-ON-LINE '50) 
(PUT 'TALP_TORDP 'DEFINED-IN-FILE 'REDLOG/TALP/TALPMISC.RED) 
(PUT 'TALP_TORDP 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE TALP_TORDP (T1 T2) (ORDP T1 T2)) 
(PUT 'TALP_TERMMLAT 'NUMBER-OF-ARGS 1) 
(PUT 'TALP_TERMMLAT 'DEFINED-ON-LINE '56) 
(PUT 'TALP_TERMMLAT 'DEFINED-IN-FILE 'REDLOG/TALP/TALPMISC.RED) 
(PUT 'TALP_TERMMLAT 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE TALP_TERMMLAT (AT)
    (PROG (R W)
      (SETQ W (CADR AT))
      (COND (W (SETQ R (CONS (CONS W 1) R))))
      (SETQ W (CADDR AT))
      (COND (W (SETQ R (CONS (CONS W 1) R))))
      (RETURN R))) 
(PUT 'TALP_ATNUM 'NUMBER-OF-ARGS 1) 
(PUT 'TALP_ATNUM 'DEFINED-ON-LINE '70) 
(PUT 'TALP_ATNUM 'DEFINED-IN-FILE 'REDLOG/TALP/TALPMISC.RED) 
(PUT 'TALP_ATNUM 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE TALP_ATNUM (F)
    (PROG (OP)
      (SETQ OP (COND ((ATOM F) F) (T (CAR F))))
      (COND
       ((OR (OR (OR (EQ OP 'OR) (EQ OP 'AND)) (EQ OP 'NOT))
            (OR (EQ OP 'IMPL) (EQ OP 'REPL) (EQ OP 'EQUIV)))
        (RETURN
         (PROG (SUBF FORALL-RESULT)
           (SETQ SUBF (CDR F))
           (SETQ FORALL-RESULT 0)
          LAB1
           (COND ((NULL SUBF) (RETURN FORALL-RESULT)))
           (SETQ FORALL-RESULT
                   (PLUS ((LAMBDA (SUBF) (TALP_ATNUM SUBF)) (CAR SUBF))
                         FORALL-RESULT))
           (SETQ SUBF (CDR SUBF))
           (GO LAB1)))))
      (COND ((OR (EQ OP 'EX) (EQ OP 'ALL)) (RETURN (TALP_ATNUM (CADDR F)))))
      (COND ((OR (EQ OP 'TRUE) (EQ OP 'FALSE)) (RETURN 0)))
      (RETURN 1))) 
(PUT 'TALP_VARLAT 'NUMBER-OF-ARGS 1) 
(PUT 'TALP_VARLAT 'DEFINED-ON-LINE '85) 
(PUT 'TALP_VARLAT 'DEFINED-IN-FILE 'REDLOG/TALP/TALPMISC.RED) 
(PUT 'TALP_VARLAT 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE TALP_VARLAT (ATF) (UNION (TALP_VARLT (CADR ATF)) (TALP_VARLT (CADDR ATF)))) 
(PUT 'TALP_VARLT 'NUMBER-OF-ARGS 1) 
(PUT 'TALP_VARLT 'DEFINED-ON-LINE '91) 
(PUT 'TALP_VARLT 'DEFINED-IN-FILE 'REDLOG/TALP/TALPMISC.RED) 
(PUT 'TALP_VARLT 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE TALP_VARLT (TERM) (TALP_VARLT1 TERM NIL)) 
(PUT 'TALP_VARLT1 'NUMBER-OF-ARGS 2) 
(PUT 'TALP_VARLT1 'DEFINED-ON-LINE '97) 
(PUT 'TALP_VARLT1 'DEFINED-IN-FILE 'REDLOG/TALP/TALPMISC.RED) 
(PUT 'TALP_VARLT1 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE TALP_VARLT1 (TERM VL)
    (PROG ()
      (COND
       ((ATOM TERM)
        (COND ((NOT (ATSOC TERM TALP_LANG*)) (RETURN (LTO_INSERT TERM VL)))
              (T (RETURN NIL)))))
      (PROG (ARG)
        (SETQ ARG (CDR TERM))
       LAB
        (COND ((NULL ARG) (RETURN NIL)))
        ((LAMBDA (ARG) (SETQ VL (UNION (TALP_VARLT1 ARG VL) VL))) (CAR ARG))
        (SETQ ARG (CDR ARG))
        (GO LAB))
      (RETURN VL))) 
(PUT 'TALP_SUBAT 'NUMBER-OF-ARGS 2) 
(PUT 'TALP_SUBAT 'DEFINED-ON-LINE '112) 
(PUT 'TALP_SUBAT 'DEFINED-IN-FILE 'REDLOG/TALP/TALPMISC.RED) 
(PUT 'TALP_SUBAT 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE TALP_SUBAT (AL ATF)
    (LIST (CAR ATF) (TALP_SUBT AL (CADR ATF)) (TALP_SUBT AL (CADDR ATF)))) 
(PUT 'TALP_SUBT 'NUMBER-OF-ARGS 2) 
(PUT 'TALP_SUBT 'DEFINED-ON-LINE '118) 
(PUT 'TALP_SUBT 'DEFINED-IN-FILE 'REDLOG/TALP/TALPMISC.RED) 
(PUT 'TALP_SUBT 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE TALP_SUBT (AL U)
    (PROG (W)
      (COND ((AND (IDP U) (SETQ W (ATSOC U AL))) (RETURN (CDR W))))
      (COND ((ATOM U) (RETURN U)))
      (RETURN
       (CONS (CAR U)
             (PROG (ARG FORALL-RESULT FORALL-ENDPTR)
               (SETQ ARG (CDR U))
               (COND ((NULL ARG) (RETURN NIL)))
               (SETQ FORALL-RESULT
                       (SETQ FORALL-ENDPTR
                               (CONS
                                ((LAMBDA (ARG) (TALP_SUBT AL ARG)) (CAR ARG))
                                NIL)))
              LOOPLABEL
               (SETQ ARG (CDR ARG))
               (COND ((NULL ARG) (RETURN FORALL-RESULT)))
               (RPLACD FORALL-ENDPTR
                       (CONS ((LAMBDA (ARG) (TALP_SUBT AL ARG)) (CAR ARG))
                             NIL))
               (SETQ FORALL-ENDPTR (CDR FORALL-ENDPTR))
               (GO LOOPLABEL)))))) 
(PUT 'TALP_SUBALCHK 'NUMBER-OF-ARGS 1) 
(PUT 'TALP_SUBALCHK 'DEFINED-ON-LINE '128) 
(PUT 'TALP_SUBALCHK 'DEFINED-IN-FILE 'REDLOG/TALP/TALPMISC.RED) 
(PUT 'TALP_SUBALCHK 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE TALP_SUBALCHK (AL) NIL) 
(PUT 'TALP_EQNRHSKERNELS 'NUMBER-OF-ARGS 1) 
(PUT 'TALP_EQNRHSKERNELS 'DEFINED-ON-LINE '132) 
(PUT 'TALP_EQNRHSKERNELS 'DEFINED-IN-FILE 'REDLOG/TALP/TALPMISC.RED) 
(PUT 'TALP_EQNRHSKERNELS 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE TALP_EQNRHSKERNELS (X) (TALP_VARLT (CDR X))) 
(PUT 'TALP_VARSUBSTAT 'NUMBER-OF-ARGS 3) 
(PUT 'TALP_VARSUBSTAT 'DEFINED-ON-LINE '138) 
(PUT 'TALP_VARSUBSTAT 'DEFINED-IN-FILE 'REDLOG/TALP/TALPMISC.RED) 
(PUT 'TALP_VARSUBSTAT 'PROCEDURE_TYPE
     '(ARROW (TIMES GENERAL GENERAL GENERAL) GENERAL)) 
(DE TALP_VARSUBSTAT (ATF NEW OLD)
    (LIST (CAR ATF) (TALP_VARSUBSTAT1 (CADR ATF) OLD NEW)
          (TALP_VARSUBSTAT1 (CADDR ATF) OLD NEW))) 
(PUT 'TALP_VARSUBSTAT1 'NUMBER-OF-ARGS 3) 
(PUT 'TALP_VARSUBSTAT1 'DEFINED-ON-LINE '145) 
(PUT 'TALP_VARSUBSTAT1 'DEFINED-IN-FILE 'REDLOG/TALP/TALPMISC.RED) 
(PUT 'TALP_VARSUBSTAT1 'PROCEDURE_TYPE
     '(ARROW (TIMES GENERAL GENERAL GENERAL) GENERAL)) 
(DE TALP_VARSUBSTAT1 (U V W)
    (COND ((EQ U V) W) ((ATOM U) U)
          (T
           (CONS (CAR U)
                 (PROG (ARG FORALL-RESULT FORALL-ENDPTR)
                   (SETQ ARG (CDR U))
                   (COND ((NULL ARG) (RETURN NIL)))
                   (SETQ FORALL-RESULT
                           (SETQ FORALL-ENDPTR
                                   (CONS
                                    ((LAMBDA (ARG) (TALP_VARSUBSTAT1 ARG V W))
                                     (CAR ARG))
                                    NIL)))
                  LOOPLABEL
                   (SETQ ARG (CDR ARG))
                   (COND ((NULL ARG) (RETURN FORALL-RESULT)))
                   (RPLACD FORALL-ENDPTR
                           (CONS
                            ((LAMBDA (ARG) (TALP_VARSUBSTAT1 ARG V W))
                             (CAR ARG))
                            NIL))
                   (SETQ FORALL-ENDPTR (CDR FORALL-ENDPTR))
                   (GO LOOPLABEL)))))) 
(PUT 'TALP_NEGATEAT 'NUMBER-OF-ARGS 1) 
(PUT 'TALP_NEGATEAT 'DEFINED-ON-LINE '155) 
(PUT 'TALP_NEGATEAT 'DEFINED-IN-FILE 'REDLOG/TALP/TALPMISC.RED) 
(PUT 'TALP_NEGATEAT 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE TALP_NEGATEAT (ATF)
    (PROG (OP)
      (SETQ OP (CAR ATF))
      (COND ((EQ OP 'EQUAL) (SETQ OP 'NEQ)) (T (SETQ OP 'EQUAL)))
      (RETURN (LIST OP (CADR ATF) (CADDR ATF))))) 
(PUT 'TALP_TAB 'NUMBER-OF-ARGS 4) 
(DE TALP_TAB (F CDL ITERATE ITERATEB)
    (COND (CDL (TALP_TAB0 F CDL)) (ITERATE (TALP_ITAB F ITERATEB))
          (T (TALP_ATAB F)))) 
(PUT 'TALP_TAB0 'NUMBER-OF-ARGS 2) 
(PUT 'TALP_TAB0 'DEFINED-ON-LINE '173) 
(PUT 'TALP_TAB0 'DEFINED-IN-FILE 'REDLOG/TALP/TALPMISC.RED) 
(PUT 'TALP_TAB0 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE TALP_TAB0 (F CDL)
    ((LAMBDA (X) (COND ((NEQ X 'FALSE) (CL_TAB F CDL)) (T X)))
     (RL_SIMPL F NIL (MINUS 1)))) 
(PUT 'TALP_ATAB 'NUMBER-OF-ARGS 1) 
(PUT 'TALP_ATAB 'DEFINED-ON-LINE '181) 
(PUT 'TALP_ATAB 'DEFINED-IN-FILE 'REDLOG/TALP/TALPMISC.RED) 
(PUT 'TALP_ATAB 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE TALP_ATAB (F)
    (PROG (W) (SETQ W (TALP_ATAB1 F)) (RETURN (COND (W (CL_MKTF W)) (T F))))) 
(PUT 'TALP_ATAB1 'NUMBER-OF-ARGS 1) 
(PUT 'TALP_ATAB1 'DEFINED-ON-LINE '194) 
(PUT 'TALP_ATAB1 'DEFINED-IN-FILE 'REDLOG/TALP/TALPMISC.RED) 
(PUT 'TALP_ATAB1 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE TALP_ATAB1 (F)
    (PROG (CDL CDLL ATNUM ATNUMOLD ATNUMNF NRESL RESL DPTH)
      (SETQ ATNUM (TALP_ATNUM F))
      (SETQ ATNUMOLD ATNUM)
      (SETQ CDLL (TALP_A2CDL (CL_ATML F)))
      (COND
       (*RLVERBOSE
        (PROGN
         (IOTO_TPRIN2T (LIST ATNUM " = 100%"))
         (SETQ DPTH (LENGTH CDLL)))))
      (PROG ()
       WHILELABEL
        (COND ((NOT CDLL) (RETURN NIL)))
        (PROGN
         (SETQ CDL (CAR CDLL))
         (SETQ CDLL (CDR CDLL))
         (SETQ NRESL (CL_TAB1 F CDL))
         (SETQ ATNUMNF (TALP_ATNUM (CL_MKTF NRESL)))
         (COND
          (*RLVERBOSE
           (PROGN
            (IOTO_PRIN2 (LIST "[" DPTH ": " ATNUMNF "] "))
            (SETQ DPTH (DIFFERENCE DPTH 1)))))
         (COND
          ((LESSP ATNUMNF ATNUM)
           (PROGN (SETQ RESL NRESL) (SETQ ATNUM ATNUMNF)))))
        (GO WHILELABEL))
      (COND
       (*RLVERBOSE
        (COND
         ((LESSP ATNUM ATNUMOLD)
          (IOTO_TPRIN2T (LIST "Success: " ATNUMOLD " -> " ATNUM)))
         (T
          (IOTO_TPRIN2T
           (LIST "No success, returning the original formula"))))))
      (RETURN RESL))) 
(PUT 'TALP_ITAB 'NUMBER-OF-ARGS 2) 
(PUT 'TALP_ITAB 'DEFINED-ON-LINE '227) 
(PUT 'TALP_ITAB 'DEFINED-IN-FILE 'REDLOG/TALP/TALPMISC.RED) 
(PUT 'TALP_ITAB 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE TALP_ITAB (F ITERATEB) (COND (ITERATEB (TALP_ITAB2 F)) (T (TALP_ITAB1 F)))) 
(PUT 'TALP_ITAB1 'NUMBER-OF-ARGS 1) 
(PUT 'TALP_ITAB1 'DEFINED-ON-LINE '235) 
(PUT 'TALP_ITAB1 'DEFINED-IN-FILE 'REDLOG/TALP/TALPMISC.RED) 
(PUT 'TALP_ITAB1 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE TALP_ITAB1 (F)
    (PROG (W RES)
      (SETQ W (TALP_ATAB1 F))
      (PROG ()
       WHILELABEL
        (COND ((NOT W) (RETURN NIL)))
        (PROGN
         (SETQ RES (CL_MKTF W))
         (COND (*RLVERBOSE (IOTO_TPRIN2T (LIST "Recomputing tableau."))))
         (SETQ W (TALP_ATAB1 RES)))
        (GO WHILELABEL))
      (RETURN (OR RES F)))) 
(PUT 'TALP_ITAB2 'NUMBER-OF-ARGS 1) 
(PUT 'TALP_ITAB2 'DEFINED-ON-LINE '249) 
(PUT 'TALP_ITAB2 'DEFINED-IN-FILE 'REDLOG/TALP/TALPMISC.RED) 
(PUT 'TALP_ITAB2 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE TALP_ITAB2 (F)
    (PROG (W)
      (SETQ W (TALP_ATAB1 F))
      (RETURN
       (COND
        (W
         (CL_MKTF
          (PROG (RES FORALL-RESULT FORALL-ENDPTR)
            (SETQ RES W)
            (COND ((NULL RES) (RETURN NIL)))
            (SETQ FORALL-RESULT
                    (SETQ FORALL-ENDPTR
                            (CONS
                             ((LAMBDA (RES)
                                (CONS (TALP_ITAB2 (CAR RES)) (CDR RES)))
                              (CAR RES))
                             NIL)))
           LOOPLABEL
            (SETQ RES (CDR RES))
            (COND ((NULL RES) (RETURN FORALL-RESULT)))
            (RPLACD FORALL-ENDPTR
                    (CONS
                     ((LAMBDA (RES) (CONS (TALP_ITAB2 (CAR RES)) (CDR RES)))
                      (CAR RES))
                     NIL))
            (SETQ FORALL-ENDPTR (CDR FORALL-ENDPTR))
            (GO LOOPLABEL))))
        (T F))))) 
(PUT 'TALP_A2CDL 'NUMBER-OF-ARGS 1) 
(PUT 'TALP_A2CDL 'DEFINED-ON-LINE '260) 
(PUT 'TALP_A2CDL 'DEFINED-IN-FILE 'REDLOG/TALP/TALPMISC.RED) 
(PUT 'TALP_A2CDL 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE TALP_A2CDL (ATML)
    (PROG (ATFS)
      (PROG ()
       WHILELABEL
        (COND ((NOT ATML) (RETURN NIL)))
        (PROGN (SETQ ATFS (CONS (CAAR ATML) ATFS)) (SETQ ATML (CDR ATML)) NIL)
        (GO WHILELABEL))
      (RETURN
       (PROG (X FORALL-RESULT FORALL-ENDPTR)
         (SETQ X ATFS)
         (COND ((NULL X) (RETURN NIL)))
         (SETQ FORALL-RESULT
                 (SETQ FORALL-ENDPTR
                         (CONS
                          ((LAMBDA (X)
                             (LIST (LIST 'EQUAL (CADR X) (CADDR X))
                                   (LIST 'NEQ (CADR X) (CADDR X))))
                           (CAR X))
                          NIL)))
        LOOPLABEL
         (SETQ X (CDR X))
         (COND ((NULL X) (RETURN FORALL-RESULT)))
         (RPLACD FORALL-ENDPTR
                 (CONS
                  ((LAMBDA (X)
                     (LIST (LIST 'EQUAL (CADR X) (CADDR X))
                           (LIST 'NEQ (CADR X) (CADDR X))))
                   (CAR X))
                  NIL))
         (SETQ FORALL-ENDPTR (CDR FORALL-ENDPTR))
         (GO LOOPLABEL))))) 
(PUT 'TALP_RNF 'NUMBER-OF-ARGS 1) 
(PUT 'TALP_RNF 'DEFINED-ON-LINE '274) 
(PUT 'TALP_RNF 'DEFINED-IN-FILE 'REDLOG/TALP/TALPMISC.RED) 
(PUT 'TALP_RNF 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE TALP_RNF (F) (TALP_RNF1 (CL_SIMPL F NIL (MINUS 1)))) 
(PUT 'TALP_RNF1 'NUMBER-OF-ARGS 1) 
(PUT 'TALP_RNF1 'DEFINED-ON-LINE '282) 
(PUT 'TALP_RNF1 'DEFINED-IN-FILE 'REDLOG/TALP/TALPMISC.RED) 
(PUT 'TALP_RNF1 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE TALP_RNF1 (F)
    (PROG (TMP)
      (COND ((ATOM F) (RETURN F)))
      (SETQ TMP (CL_SIMPL F NIL (MINUS 1)))
      (COND ((OR (EQ TMP 'TRUE) (EQ TMP 'FALSE)) (RETURN TMP)))
      (COND
       ((TALP_ATFP TMP)
        (RETURN
         (COND ((TALP_ACFRP TMP) (CL_SIMPL (TALP_RAF TMP) NIL (MINUS 1)))
               (T TMP)))))
      (RETURN
       (CL_SIMPL
        (CONS (CAR TMP)
              (PROG (SF FORALL-RESULT FORALL-ENDPTR)
                (SETQ SF (CDR TMP))
                (COND ((NULL SF) (RETURN NIL)))
                (SETQ FORALL-RESULT
                        (SETQ FORALL-ENDPTR
                                (CONS ((LAMBDA (SF) (TALP_RNF1 SF)) (CAR SF))
                                      NIL)))
               LOOPLABEL
                (SETQ SF (CDR SF))
                (COND ((NULL SF) (RETURN FORALL-RESULT)))
                (RPLACD FORALL-ENDPTR
                        (CONS ((LAMBDA (SF) (TALP_RNF1 SF)) (CAR SF)) NIL))
                (SETQ FORALL-ENDPTR (CDR FORALL-ENDPTR))
                (GO LOOPLABEL)))
        NIL (MINUS 1))))) 
(PUT 'TALP_ACFRP 'NUMBER-OF-ARGS 1) 
(PUT 'TALP_ACFRP 'DEFINED-ON-LINE '300) 
(PUT 'TALP_ACFRP 'DEFINED-IN-FILE 'REDLOG/TALP/TALPMISC.RED) 
(PUT 'TALP_ACFRP 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE TALP_ACFRP (ATF) (OR (TALP_TCFRP (CADR ATF)) (TALP_TCFRP (CADDR ATF)))) 
(PUT 'TALP_TCFRP 'NUMBER-OF-ARGS 1) 
(PUT 'TALP_TCFRP 'DEFINED-ON-LINE '307) 
(PUT 'TALP_TCFRP 'DEFINED-IN-FILE 'REDLOG/TALP/TALPMISC.RED) 
(PUT 'TALP_TCFRP 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE TALP_TCFRP (TT) (NOT (OR (ATOM TT) (TALP_INVP TT)))) 
(PUT 'TALP_RAF 'NUMBER-OF-ARGS 1) 
(PUT 'TALP_RAF 'DEFINED-ON-LINE '313) 
(PUT 'TALP_RAF 'DEFINED-IN-FILE 'REDLOG/TALP/TALPMISC.RED) 
(PUT 'TALP_RAF 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE TALP_RAF (ATF)
    (PROG (REL F LHS RHS TMP FST SND TMP2)
      (SETQ REL (CAR ATF))
      (SETQ LHS
              (COND
               ((TALP_TCFRP (CADR ATF))
                (PROGN (SETQ RHS (CADDR ATF)) (CADR ATF)))
               (T (PROGN (SETQ RHS (CADR ATF)) (CADDR ATF)))))
      (SETQ F (CONS (TALP_GETINVFSYM (CAR LHS) 1) (LIST RHS)))
      (SETQ FST
              (TALP_SIMPAT
               (COND ((EQ REL 'EQUAL) (LIST 'NEQ F RHS))
                     (T (LIST 'EQUAL F RHS)))))
      (SETQ SND
              (PROG (I FORALL-RESULT FORALL-ENDPTR)
                (SETQ I 1)
                (COND
                 ((MINUSP (DIFFERENCE (CDR (ATSOC (CAR LHS) TALP_LANG*)) I))
                  (RETURN NIL)))
                (SETQ FORALL-RESULT
                        (SETQ FORALL-ENDPTR
                                (CONS
                                 (PROGN
                                  (SETQ TMP (TALP_GETINVFSYM (CAR LHS) I))
                                  (TALP_SIMPAT
                                   (LIST REL (CONS TMP (LIST RHS))
                                         (NTH (CDR LHS) I))))
                                 NIL)))
               LOOPLABEL
                (SETQ I (PLUS2 I 1))
                (COND
                 ((MINUSP (DIFFERENCE (CDR (ATSOC (CAR LHS) TALP_LANG*)) I))
                  (RETURN FORALL-RESULT)))
                (RPLACD FORALL-ENDPTR
                        (CONS
                         (PROGN
                          (SETQ TMP (TALP_GETINVFSYM (CAR LHS) I))
                          (TALP_SIMPAT
                           (LIST REL (CONS TMP (LIST RHS)) (NTH (CDR LHS) I))))
                         NIL))
                (SETQ FORALL-ENDPTR (CDR FORALL-ENDPTR))
                (GO LOOPLABEL)))
      (SETQ SND
              (PROG (X FORALL-RESULT FORALL-ENDPTR)
                (SETQ X SND)
                (COND ((NULL X) (RETURN NIL)))
                (SETQ FORALL-RESULT
                        (SETQ FORALL-ENDPTR
                                (CONS ((LAMBDA (X) (TALP_RNF1 X)) (CAR X))
                                      NIL)))
               LOOPLABEL
                (SETQ X (CDR X))
                (COND ((NULL X) (RETURN FORALL-RESULT)))
                (RPLACD FORALL-ENDPTR
                        (CONS ((LAMBDA (X) (TALP_RNF1 X)) (CAR X)) NIL))
                (SETQ FORALL-ENDPTR (CDR FORALL-ENDPTR))
                (GO LOOPLABEL)))
      (SETQ TMP2 (CONS (COND ((EQ REL 'EQUAL) 'AND) (T 'OR)) (CONS FST SND)))
      (RETURN TMP2))) 
(PUT 'TALP_ATFP 'NUMBER-OF-ARGS 1) 
(PUT 'TALP_ATFP 'DEFINED-ON-LINE '337) 
(PUT 'TALP_ATFP 'DEFINED-IN-FILE 'REDLOG/TALP/TALPMISC.RED) 
(PUT 'TALP_ATFP 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE TALP_ATFP (F) (AND (PAIRP F) (MEMQ (CAR F) '(NEQ EQUAL)))) 
(PUT 'TALP_GETINVFSYM 'NUMBER-OF-ARGS 2) 
(PUT 'TALP_GETINVFSYM 'DEFINED-ON-LINE '343) 
(PUT 'TALP_GETINVFSYM 'DEFINED-IN-FILE 'REDLOG/TALP/TALPMISC.RED) 
(PUT 'TALP_GETINVFSYM 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE TALP_GETINVFSYM (ID I)
    (PROG (TMP)
      (SETQ TMP TALP_EXTLANG*)
      (PROG ()
       WHILELABEL
        (COND ((NOT (NEQ (CAAR TMP) ID)) (RETURN NIL)))
        (SETQ TMP (CDR TMP))
        (GO WHILELABEL))
      (PROG (J)
        (SETQ J 1)
       LAB
        (COND ((MINUSP (DIFFERENCE I J)) (RETURN NIL)))
        (SETQ TMP (CDR TMP))
        (SETQ J (PLUS2 J 1))
        (GO LAB))
      (RETURN (CAAR TMP)))) 
(ENDMODULE) 