(cl:declaim (cl:optimize cl:debug cl:safety))
(cl:declaim (sb-ext:muffle-conditions sb-ext:compiler-note cl:style-warning))
(MODULE (LIST 'SQPRINT)) 
(FLUID
 '(*FORT *HORNER *NAT *NERO *PRI |*PRIN#| OVERFLOWED* ORIG* OUTPUTHANDLER*
   POSN* TESTING-WIDTH* YCOORD* YMAX* YMIN* WTL*)) 
(SETQ TESTING-WIDTH* (SETQ OVERFLOWED* NIL)) 
(GLOBAL '(*ERAISE)) 
(SWITCH (LIST 'HORNER)) 
(PUT '*SQPRINT 'NUMBER-OF-ARGS 1) 
(PUT '*SQPRINT 'DEFINED-ON-LINE '80) 
(PUT '*SQPRINT 'DEFINED-IN-FILE 'MATHPR/SQPRINT.RED) 
(PUT '*SQPRINT 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE *SQPRINT (U) (SQPRINT (CADR U))) 
(PUT '*SQ 'PRIFN '*SQPRINT) 
(PUT 'PRINTSQ 'NUMBER-OF-ARGS 1) 
(PUT 'PRINTSQ 'DEFINED-ON-LINE '84) 
(PUT 'PRINTSQ 'DEFINED-IN-FILE 'MATHPR/SQPRINT.RED) 
(PUT 'PRINTSQ 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE PRINTSQ (U) (PROGN (TERPRI* T) (SQPRINT U) (TERPRI* U) U)) 
(PUT 'SQPRINT 'NUMBER-OF-ARGS 1) 
(PUT 'SQPRINT 'DEFINED-ON-LINE '86) 
(PUT 'SQPRINT 'DEFINED-IN-FILE 'MATHPR/SQPRINT.RED) 
(PUT 'SQPRINT 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE SQPRINT (U)
    (PROG (FLG Z |*PRIN#|)
      (SETQ |*PRIN#| T)
      (SETQ Z ORIG*)
      (COND ((AND *NAT (LESSP POSN* 20)) (SETQ ORIG* POSN*)))
      (COND ((OR *PRI WTL*) (MAPRIN (PREPREFORM (PREPSQ* (SQHORNER* U)))))
            ((NEQ (CDR U) 1)
             (PROGN
              (SETQ FLG
                      (AND (NOT (OR (ATOM (CAR U)) (ATOM (CAR (CAR U)))))
                           (CDR (CAR U))))
              (XPRINF (CAR U) FLG NIL)
              (PRIN2* " / ")
              (SETQ FLG
                      (AND (NOT (OR (ATOM (CDR U)) (ATOM (CAR (CDR U)))))
                           (OR (CDR (CDR U)) (NEQ (CDAR (CDR U)) 1))))
              (XPRINF (CDR U) FLG NIL)))
            (T (XPRINF2 (CAR U))))
      (RETURN (SETQ ORIG* Z)))) 
(PUT 'PREPREFORM 'NUMBER-OF-ARGS 1) 
(PUT 'PREPREFORM 'DEFINED-ON-LINE '104) 
(PUT 'PREPREFORM 'DEFINED-IN-FILE 'MATHPR/SQPRINT.RED) 
(PUT 'PREPREFORM 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE PREPREFORM (U) (PREPREFORM1 U (APPEND ORDL* FACTORS*))) 
(PUT 'PREPREFORM1 'NUMBER-OF-ARGS 2) 
(PUT 'PREPREFORM1 'DEFINED-ON-LINE '110) 
(PUT 'PREPREFORM1 'DEFINED-IN-FILE 'MATHPR/SQPRINT.RED) 
(PUT 'PREPREFORM1 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE PREPREFORM1 (U L)
    (COND ((OR (ATOM U) (GET (CAR U) 'DNAME)) U)
          (T
           (PROG (W L1)
             (SETQ L1 L)
             (PROG ()
              WHILELABEL
               (COND ((NOT (AND (NULL W) L1)) (RETURN NIL)))
               (COND ((SMEMQ (CAR L1) (CDR U)) (SETQ W T))
                     (T (SETQ L1 (CDR L1))))
               (GO WHILELABEL))
             (COND ((NULL W) (RETURN U)))
             (COND
              ((OR (MEMQ (CAR U) '(PLUS DIFFERENCE MINUS TIMES QUOTIENT))
                   (NULL (GET (CAR U) 'SIMPFN)))
               (SETQ W NIL)))
             (RETURN
              (COND
               ((EQ (CAR U) '*SQ)
                (PREPREFORM1 (PREPSQ* (SQHORNER* (CADR U))) L))
               (T
                (CONS (CAR U)
                      (PROG (P FORALL-RESULT FORALL-ENDPTR)
                        (SETQ P (CDR U))
                        (COND ((NULL P) (RETURN NIL)))
                        (SETQ FORALL-RESULT
                                (SETQ FORALL-ENDPTR
                                        (CONS
                                         ((LAMBDA (P)
                                            (PREPREFORM1
                                             (COND
                                              (W
                                               (PREPSQ* (SQHORNER* (SIMP* P))))
                                              (T P))
                                             L))
                                          (CAR P))
                                         NIL)))
                       LOOPLABEL
                        (SETQ P (CDR P))
                        (COND ((NULL P) (RETURN FORALL-RESULT)))
                        (RPLACD FORALL-ENDPTR
                                (CONS
                                 ((LAMBDA (P)
                                    (PREPREFORM1
                                     (COND (W (PREPSQ* (SQHORNER* (SIMP* P))))
                                           (T P))
                                     L))
                                  (CAR P))
                                 NIL))
                        (SETQ FORALL-ENDPTR (CDR FORALL-ENDPTR))
                        (GO LOOPLABEL)))))))))) 
(PUT 'SQHORNER* 'NUMBER-OF-ARGS 1) 
(PUT 'SQHORNER* 'DEFINED-ON-LINE '126) 
(PUT 'SQHORNER* 'DEFINED-IN-FILE 'MATHPR/SQPRINT.RED) 
(PUT 'SQHORNER* 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE SQHORNER* (U)
    (COND ((NOT *HORNER) U)
          (T
           ((LAMBDA (KORD*)
              (HORNERSQ (CONS (REORDER (CAR U)) (HORNERF (REORDER (CDR U))))))
            (APPEND ORDL* KORD*))))) 
(PUT 'PRINTSF 'NUMBER-OF-ARGS 1) 
(PUT 'PRINTSF 'DEFINED-ON-LINE '131) 
(PUT 'PRINTSF 'DEFINED-IN-FILE 'MATHPR/SQPRINT.RED) 
(PUT 'PRINTSF 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE PRINTSF (U) (PROGN (PRINSF U) (TERPRI* NIL) U)) 
(PUT 'PRINSF 'NUMBER-OF-ARGS 1) 
(PUT 'PRINSF 'DEFINED-ON-LINE '133) 
(PUT 'PRINSF 'DEFINED-IN-FILE 'MATHPR/SQPRINT.RED) 
(PUT 'PRINSF 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE PRINSF (U) (COND ((NULL U) (PRIN2* 0)) (T (XPRINF2 U)))) 
(PUT 'XPRINF 'NUMBER-OF-ARGS 3) 
(PUT 'XPRINF 'DEFINED-ON-LINE '135) 
(PUT 'XPRINF 'DEFINED-IN-FILE 'MATHPR/SQPRINT.RED) 
(PUT 'XPRINF 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL GENERAL) GENERAL)) 
(DE XPRINF (U FLG W)
    (PROG () (AND FLG (PRIN2* "(")) (XPRINF2 U) (AND FLG (PRIN2* ")")))) 
(PUT 'XPRINF2 'NUMBER-OF-ARGS 1) 
(PUT 'XPRINF2 'DEFINED-ON-LINE '141) 
(PUT 'XPRINF2 'DEFINED-IN-FILE 'MATHPR/SQPRINT.RED) 
(PUT 'XPRINF2 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE XPRINF2 (U)
    (PROG (V)
      (PROG ()
       WHILELABEL
        (COND ((NOT (NOT (OR (ATOM U) (ATOM (CAR U))))) (RETURN NIL)))
        (PROGN (XPRINT (CAR U) V) (SETQ U (CDR U)) (SETQ V T))
        (GO WHILELABEL))
      (COND ((NULL U) (RETURN NIL))
            ((MINUSF U) (PROGN (OPRIN 'MINUS) (SETQ U (|:MINUS| U))))
            (V (OPRIN 'PLUS)))
      (COND ((ATOM U) (PRIN2* U)) (T (MAPRIN U))))) 
(PUT 'XPRINT 'NUMBER-OF-ARGS 2) 
(PUT 'XPRINT 'DEFINED-ON-LINE '150) 
(PUT 'XPRINT 'DEFINED-IN-FILE 'MATHPR/SQPRINT.RED) 
(PUT 'XPRINT 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE XPRINT (U FLG)
    (PROG (V W)
      (SETQ V (CDR U))
      (SETQ U (CAR U))
      (COND
       ((AND (SETQ W (KERNLP V)) (NOT (|:ONEP| W)))
        (PROGN
         (SETQ V ((LAMBDA (*EXP) (QUOTF1 V W)) T))
         (COND
          ((MINUSF W)
           (PROGN (OPRIN 'MINUS) (SETQ W (|:MINUS| W)) (SETQ FLG NIL)))))))
      (COND (FLG (OPRIN 'PLUS)))
      (COND
       ((AND W (NOT (|:ONEP| W)))
        (PROGN
         (COND ((OR (ATOM W) (ATOM (CAR W))) (MAPRIN W)) (T (PRIN2* W)))
         (OPRIN 'TIMES))))
      (XPRINP U)
      (COND
       ((NOT (AND (OR (ATOM V) (ATOM (CAR V))) (|:ONEP| V)))
        (PROGN (OPRIN 'TIMES) (XPRINF V (CDR V) NIL)))))) 
(PUT 'XPRINP 'NUMBER-OF-ARGS 1) 
(PUT 'XPRINP 'DEFINED-ON-LINE '168) 
(PUT 'XPRINP 'DEFINED-IN-FILE 'MATHPR/SQPRINT.RED) 
(PUT 'XPRINP 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE XPRINP (U)
    (PROG ()
      (COND ((ATOM (CAR U)) (PRIN2* (CAR U)))
            ((OR (NOT (ATOM (CAAR U))) (EQ (CAAR U) '*SQ))
             (PROGN
              (PRIN2* "(")
              (COND ((NOT (ATOM (CAAR U))) (XPRINF2 (CAR U)))
                    (T (SQPRINT (CADAR U))))
              (PRIN2* ")")))
            ((EQ (CAAR U) 'PLUS) (MAPRINT (CAR U) 100)) (T (MAPRIN (CAR U))))
      (COND ((EQUAL (SETQ U (CDR U)) 1) (RETURN NIL))
            ((AND *NAT *ERAISE)
             (PROGN
              (SETQ YCOORD* (PLUS YCOORD* 1))
              (COND ((GREATERP YCOORD* YMAX*) (SETQ YMAX* YCOORD*)))))
            (T (PRIN2* (GET 'EXPT 'PRTCH))))
      (PRIN2* (COND ((AND (NUMBERP U) (MINUSP U)) (LIST U)) (T U)))
      (COND
       ((AND *NAT *ERAISE)
        (PROGN
         (SETQ YCOORD* (DIFFERENCE YCOORD* 1))
         (COND ((GREATERP YMIN* YCOORD*) (SETQ YMIN* YCOORD*)))))))) 
(ENDMODULE) 