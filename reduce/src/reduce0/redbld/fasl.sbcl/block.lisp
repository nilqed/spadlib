(cl:declaim (cl:optimize cl:debug cl:safety))
(cl:declaim (sb-ext:muffle-conditions sb-ext:compiler-note cl:style-warning))
(MODULE (LIST 'BLOCK)) 
(FLUID '(*BLOCKP *NOVARMSG *RLISP88)) 
(GLOBAL '(*VARS* CURSYM* NXTSYM*)) 
(FLAG '(NOVARMSG) 'SWITCH) 
(PUT 'GOSTAT 'NUMBER-OF-ARGS 0) 
(PUT 'GOSTAT 'DEFINED-ON-LINE '40) 
(PUT 'GOSTAT 'DEFINED-IN-FILE 'RLISP/BLOCK.RED) 
(PUT 'GOSTAT 'PROCEDURE_TYPE '(ARROW UNIT GENERAL)) 
(DE GOSTAT NIL
    (PROG (VAR)
      (SETQ VAR (COND ((EQ (SCAN) 'TO) (SCAN)) (T CURSYM*)))
      (SCAN)
      (RETURN (LIST 'GO VAR)))) 
(PUT 'GO 'STAT 'GOSTAT) 
(PUT 'GOTO 'NEWNAM 'GO) 
(PUT 'READ_PARAMETER_LIST 'NUMBER-OF-ARGS 0) 
(PUT 'READ_PARAMETER_LIST 'DEFINED-ON-LINE '59) 
(PUT 'READ_PARAMETER_LIST 'DEFINED-IN-FILE 'RLISP/BLOCK.RED) 
(PUT 'READ_PARAMETER_LIST 'PROCEDURE_TYPE '(ARROW UNIT GENERAL)) 
(DE READ_PARAMETER_LIST NIL
    (PROG (X XT XV Y Z)
      (PROG ()
       REPEATLABEL
        (PROGN
         (COND ((EQUAL CURSYM* '*COMMA*) (SCAN)))
         (SETQ X CURSYM*)
         (COND ((NOT (IDP X)) (TYPERR X "variable name")))
         (SETQ Y (SCAN))
         (COND
          ((EQUAL Y '*COLON*)
           (PROGN (SCAN) (SETQ XT (READ_TYPE)) (SETQ Y CURSYM*)))
          (T (SETQ XT 'GENERAL)))
         (COND
          ((EQUAL Y 'SETQ)
           (PROGN (SCAN) (SETQ XV (XREAD1 T)) (SETQ Y CURSYM*)))
          (T (SETQ XV NIL)))
         (SETQ Z (CONS (LIST X XT XV) Z)))
        (COND ((NOT (NOT (EQUAL Y '*COMMA*))) (GO REPEATLABEL))))
      (RETURN (REVERSIP Z)))) 
(PUT 'COLLECT_DECLS 'NUMBER-OF-ARGS 2) 
(PUT 'COLLECT_DECLS 'DEFINED-ON-LINE '94) 
(PUT 'COLLECT_DECLS 'DEFINED-IN-FILE 'RLISP/BLOCK.RED) 
(PUT 'COLLECT_DECLS 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE COLLECT_DECLS (U W)
    (COND ((NULL U) NIL)
          (T (CONS (CONS (CAAR U) W) (COLLECT_DECLS (CDR U) W))))) 
(PUT 'DECL 'NUMBER-OF-ARGS 0) 
(PUT 'DECL 'DEFINED-ON-LINE '98) 
(PUT 'DECL 'DEFINED-IN-FILE 'RLISP/BLOCK.RED) 
(PUT 'DECL 'PROCEDURE_TYPE '(ARROW UNIT GENERAL)) 
(DE DECL NIL
    (PROG (VARLIS W PL TYPELIST)
     A
      (PROG ()
       WHILELABEL
        (COND ((NOT (EQUAL CURSYM* '*SEMICOL*)) (RETURN NIL)))
        (SCAN)
        (GO WHILELABEL))
      (COND ((AND (EQUAL CURSYM* 'LOCAL) *REDUCE4) NIL)
            ((NOT (FLAGP CURSYM* 'TYPE)) (RETURN (CONS VARLIS TYPELIST)))
            (*REDUCE4 (TYPERR CURSYM* "local declaration")))
      (SETQ W CURSYM*)
      (SCAN)
      (COND (*REDUCE4 (SETQ VARLIS (APPEND VARLIS (READ_PARAM_LIST NIL))))
            ((EQUAL CURSYM* '*SEMICOL*)
             (PROGN
              (LPRIM (LIST "Empty variable list in" W "declaration"))
              (RETURN (CONS NIL NIL))))
            (T
             (PROGN
              (SETQ PL (READ_PARAMETER_LIST))
              (SETQ TYPELIST (APPEND TYPELIST PL))
              (SETQ VARLIS (APPEND VARLIS (COLLECT_DECLS PL W))))))
      (COND ((NOT (EQUAL CURSYM* '*SEMICOL*)) (SYMERR NIL T)))
      (SCAN)
      (GO A))) 
(PUT 'INTEGER 'INITVALUE* 0) 
(PUT 'DECSTAT 'NUMBER-OF-ARGS 0) 
(PUT 'DECSTAT 'DEFINED-ON-LINE '121) 
(PUT 'DECSTAT 'DEFINED-IN-FILE 'RLISP/BLOCK.RED) 
(PUT 'DECSTAT 'PROCEDURE_TYPE '(ARROW UNIT GENERAL)) 
(DE DECSTAT NIL
    (PROG (X)
      (COND (*BLOCKP (SYMERR 'BLOCK T)))
      (SETQ X CURSYM*)
      (COND
       ((NEQ NXTSYM* 'PROCEDURE)
        (RERROR 'RLISP 7 (LIST X "invalid outside block"))))
      (SCAN)
      (RETURN (PROCSTAT1 X)))) 
(FLAG '(INTEGER REAL SCALAR) 'TYPE) 
(PUT 'BLOCKTYPERR 'NUMBER-OF-ARGS 1) 
(PUT 'BLOCKTYPERR 'DEFINED-ON-LINE '137) 
(PUT 'BLOCKTYPERR 'DEFINED-IN-FILE 'RLISP/BLOCK.RED) 
(PUT 'BLOCKTYPERR 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE BLOCKTYPERR (U)
    (RERROR 'RLISP 8 (LIST U "invalid except at head of block"))) 
(PUT 'MAPOVERCAR 'NUMBER-OF-ARGS 1) 
(PUT 'MAPOVERCAR 'DEFINED-ON-LINE '144) 
(PUT 'MAPOVERCAR 'DEFINED-IN-FILE 'RLISP/BLOCK.RED) 
(PUT 'MAPOVERCAR 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE MAPOVERCAR (U)
    (PROG (X)
      (PROG ()
       WHILELABEL
        (COND ((NOT U) (RETURN NIL)))
        (PROGN (SETQ X (CONS (CAAR U) X)) (SETQ U (CDR U)))
        (GO WHILELABEL))
      (RETURN (REVERSIP* X)))) 
(PUT 'EXTRACT_TYPES 'NUMBER-OF-ARGS 1) 
(PUT 'EXTRACT_TYPES 'DEFINED-ON-LINE '169) 
(PUT 'EXTRACT_TYPES 'DEFINED-IN-FILE 'RLISP/BLOCK.RED) 
(PUT 'EXTRACT_TYPES 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE EXTRACT_TYPES (VL)
    (COND ((NULL VL) NIL)
          ((EQUAL (CADAR VL) 'GENERAL) (EXTRACT_TYPES (CDR VL)))
          (T (CONS (CONS (CAAR VL) (CADAR VL)) (EXTRACT_TYPES (CDR VL)))))) 
(PUT 'ADD_INITIALIZERS 'NUMBER-OF-ARGS 2) 
(PUT 'ADD_INITIALIZERS 'DEFINED-ON-LINE '177) 
(PUT 'ADD_INITIALIZERS 'DEFINED-IN-FILE 'RLISP/BLOCK.RED) 
(PUT 'ADD_INITIALIZERS 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE ADD_INITIALIZERS (VL B)
    (COND ((NULL VL) B) ((NULL (CADDAR VL)) (ADD_INITIALIZERS (CDR VL) B))
          (T
           (CONS (LIST 'SETQ (CAAR VL) (CADDAR VL))
                 (ADD_INITIALIZERS (CDR VL) B))))) 
(PUT 'ADD_VARINFO 'NUMBER-OF-ARGS 2) 
(PUT 'ADD_VARINFO 'DEFINED-ON-LINE '182) 
(PUT 'ADD_VARINFO 'DEFINED-IN-FILE 'RLISP/BLOCK.RED) 
(PUT 'ADD_VARINFO 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE ADD_VARINFO (VL B)
    (PROG (TT)
      (SETQ TT (EXTRACT_TYPES VL))
      (SETQ B (ADD_INITIALIZERS VL B))
      (COND (TT (SETQ B (CONS (MKQUOTE TT) B))))
      (RETURN B))) 
(PUT 'BLOCKSTAT 'NUMBER-OF-ARGS 0) 
(PUT 'BLOCKSTAT 'DEFINED-ON-LINE '192) 
(PUT 'BLOCKSTAT 'DEFINED-IN-FILE 'RLISP/BLOCK.RED) 
(PUT 'BLOCKSTAT 'PROCEDURE_TYPE '(ARROW UNIT GENERAL)) 
(DE BLOCKSTAT NIL
    (PROG (HOLD VARLIS X *BLOCKP)
      (SETQ *BLOCKP T)
      (SCAN)
      (COND ((MEMQ CURSYM* '(NIL *RPAR*)) (RERROR 'RLISP 9 "BEGIN invalid")))
      (SETQ VARLIS (DECL))
     A
      (COND
       ((AND (EQUAL CURSYM* 'END) (NOT (EQUAL NXTSYM* '|:|)))
        (PROGN
         (COMM1 'END)
         (RETURN (MKBLOCK (CAR VARLIS) (ADD_VARINFO (CDR VARLIS) HOLD))))))
      (SETQ X (XREAD1 NIL))
      (COND
       ((EQCAR X 'END)
        (RETURN (MKBLOCK (CAR VARLIS) (ADD_VARINFO (CDR VARLIS) HOLD)))))
      (COND ((NOT (EQUAL CURSYM* 'END)) (SCAN)))
      (COND
       (X
        (PROGN
         (COND
          ((EQCAR X 'EQUAL)
           (LPRIM (LIST "top level" (CADR X) "= ... in block"))))
         (SETQ HOLD (ACONC* HOLD X)))))
      (GO A))) 
(PUT 'MKBLOCK 'NUMBER-OF-ARGS 2) 
(PUT 'MKBLOCK 'DEFINED-ON-LINE '213) 
(PUT 'MKBLOCK 'DEFINED-IN-FILE 'RLISP/BLOCK.RED) 
(PUT 'MKBLOCK 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE MKBLOCK (U V) (CONS 'RBLOCK (CONS U V))) 
(PUTD 'RBLOCK 'MACRO
      '(LAMBDA (U) (CONS 'PROG (CONS (MAPOVERCAR (CADR U)) (CDDR U))))) 
(PUT 'SYMBVARLST 'NUMBER-OF-ARGS 3) 
(PUT 'SYMBVARLST 'DEFINED-ON-LINE '218) 
(PUT 'SYMBVARLST 'DEFINED-IN-FILE 'RLISP/BLOCK.RED) 
(PUT 'SYMBVARLST 'PROCEDURE_TYPE
     '(ARROW (TIMES GENERAL GENERAL GENERAL) GENERAL)) 
(DE SYMBVARLST (VARS BODY MODE)
    (PROG (X Y)
      (COND ((NOT (EQUAL MODE 'SYMBOLIC)) (RETURN NIL)))
      (SETQ Y VARS)
      (PROG ()
       WHILELABEL
        (COND ((NOT Y) (RETURN NIL)))
        (PROGN
         (SETQ X (COND ((PAIRP (CAR Y)) (CAAR Y)) (T (CAR Y))))
         (COND
          ((AND (NOT (FLUIDP X)) (NOT (GLOBALP X)) (NOT (SMEMQ X BODY))
                (NOT *NOVARMSG))
           (LPRIM (LIST "local variable" X "in procedure" FNAME* "not used"))))
         (SETQ Y (CDR Y)))
        (GO WHILELABEL)))) 
(PUT 'MAKE_PROG_DECLARES 'NUMBER-OF-ARGS 2) 
(PUT 'MAKE_PROG_DECLARES 'DEFINED-ON-LINE '232) 
(PUT 'MAKE_PROG_DECLARES 'DEFINED-IN-FILE 'RLISP/BLOCK.RED) 
(PUT 'MAKE_PROG_DECLARES 'PROCEDURE_TYPE
     '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE MAKE_PROG_DECLARES (V B) (PROG () (RETURN (CONS 'PROG (CONS V B))))) 
(PUT 'FORMBLOCK 'NUMBER-OF-ARGS 3) 
(PUT 'FORMBLOCK 'DEFINED-ON-LINE '264) 
(PUT 'FORMBLOCK 'DEFINED-IN-FILE 'RLISP/BLOCK.RED) 
(PUT 'FORMBLOCK 'PROCEDURE_TYPE
     '(ARROW (TIMES GENERAL GENERAL GENERAL) GENERAL)) 
(DE FORMBLOCK (U VARS MODE)
    (PROG (W)
      (SYMBVARLST (CADR U) (CDDR U) MODE)
      (SETQ W (INITPROGVARS (CADR U)))
      (RETURN
       (MAKE_PROG_DECLARES (CAR W)
                           (APPEND (CDR W)
                                   (FORMPROG1 (CDDR U) (APPEND (CADR U) VARS)
                                              MODE)))))) 
(PUT 'INITPROGVARS 'NUMBER-OF-ARGS 1) 
(PUT 'INITPROGVARS 'DEFINED-ON-LINE '273) 
(PUT 'INITPROGVARS 'DEFINED-IN-FILE 'RLISP/BLOCK.RED) 
(PUT 'INITPROGVARS 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE INITPROGVARS (U)
    (PROG (X Y Z)
      (PROG ()
       WHILELABEL
        (COND ((NOT U) (RETURN NIL)))
        (PROGN
         (COND ((OR (NULL (CAAR U)) (EQUAL (CAAR U) 'T)) (RSVERR (CAAR U)))
               ((OR (SETQ Z (GET (CAAR U) 'INITVALUE*))
                    (SETQ Z (GET (CDAR U) 'INITVALUE*)))
                (SETQ Y (CONS (MKSETQ (CAAR U) Z) Y))))
         (SETQ X (CONS (CAAR U) X))
         (SETQ U (CDR U)))
        (GO WHILELABEL))
      (RETURN (CONS (REVERSIP* X) (REVERSIP* Y))))) 
(PUT 'FORMPROG 'NUMBER-OF-ARGS 3) 
(PUT 'FORMPROG 'DEFINED-ON-LINE '285) 
(PUT 'FORMPROG 'DEFINED-IN-FILE 'RLISP/BLOCK.RED) 
(PUT 'FORMPROG 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL GENERAL) GENERAL)) 
(DE FORMPROG (U VARS MODE)
    (MAKE_PROG_DECLARES (CADR U)
                        (FORMPROG1 (CDDR U) (PAIRVARS (CADR U) VARS MODE)
                                   MODE))) 
(PUT 'FORMPROG1 'NUMBER-OF-ARGS 3) 
(PUT 'FORMPROG1 'DEFINED-ON-LINE '290) 
(PUT 'FORMPROG1 'DEFINED-IN-FILE 'RLISP/BLOCK.RED) 
(PUT 'FORMPROG1 'PROCEDURE_TYPE
     '(ARROW (TIMES GENERAL GENERAL GENERAL) GENERAL)) 
(DE FORMPROG1 (U VARS MODE)
    (COND ((NULL U) NIL) ((NULL (CAR U)) (FORMPROG1 (CDR U) VARS MODE))
          ((ATOM (CAR U)) (CONS (CAR U) (FORMPROG1 (CDR U) VARS MODE)))
          ((AND (EQCAR (CAR U) 'QUOTE) (NOT (EQUAL MODE 'SYMBOLIC)))
           (FORMPROG1 (CDR U) VARS MODE))
          ((AND (IDP (CAAR U)) (FLAGP (CAAR U) 'MODEFN))
           (COND
            ((AND *RLISP88 (NULL (EQUAL (CAAR U) 'SYMBOLIC)))
             (TYPERR "algebraic expression" "Rlisp88 form"))
            (T
             (CONS (FORMC (CADAR U) VARS (CAAR U))
                   (FORMPROG1 (CDR U) VARS MODE)))))
          (T (CONS (FORMC (CAR U) VARS MODE) (FORMPROG1 (CDR U) VARS MODE))))) 
(PUT 'RBLOCK 'FORMFN 'FORMBLOCK) 
(PUT 'PROG 'FORMFN 'FORMPROG) 
(PUT 'BEGIN 'STAT 'BLOCKSTAT) 
(FLAG '(DECLARE) 'NOFORM) 
(PUT 'RETSTAT 'NUMBER-OF-ARGS 0) 
(PUT 'RETSTAT 'DEFINED-ON-LINE '313) 
(PUT 'RETSTAT 'DEFINED-IN-FILE 'RLISP/BLOCK.RED) 
(PUT 'RETSTAT 'PROCEDURE_TYPE '(ARROW UNIT GENERAL)) 
(DE RETSTAT NIL
    (COND ((NOT *BLOCKP) (SYMERR NIL T))
          (T
           (PROG (*BLOCKP)
             (RETURN
              (LIST 'RETURN
                    (COND ((FLAGP (SCAN) 'DELIM) NIL) (T (XREAD1 T))))))))) 
(PUT 'RETURN 'STAT 'RETSTAT) 
(ENDMODULE) 