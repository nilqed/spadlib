(cl:declaim (cl:optimize cl:debug cl:safety))
(cl:declaim (sb-ext:muffle-conditions sb-ext:compiler-note cl:style-warning))
(MODULE (LIST 'PLOTNUM)) 
(FLUID '(PLOTSYNERR* PLOTEVAL-ALIST2* *PLOTOVERFLOW)) 
(GLOBAL '(*PLOTINTERRUPTS)) 
(FLAG
 '(PLUS PLUS2 DIFFERENCE TIMES TIMES2 QUOTIENT EXP EXPT EXPT-INT MINUS SIN COS
        TAN COT ASIN ACOS ACOT ATAN ABS LOG)
 'PLOTEVALLISP) 
(PUT 'PLOTROUNDED 'NUMBER-OF-ARGS 1) 
(PUT 'PLOTROUNDED 'DEFINED-ON-LINE '36) 
(PUT 'PLOTROUNDED 'DEFINED-IN-FILE 'PLOT/PLOTNUM.RED) 
(PUT 'PLOTROUNDED 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE PLOTROUNDED (D)
    (PROG (O *PROTFG C R *MSG)
      (SETQ *PROTFG T)
      (COND
       ((NULL D)
        (PROGN
         (SETQ C *COMPLEX)
         (SETQ R *ROUNDED)
         (COND (C (PROGN (SETDMODE 'COMPLEX NIL) (SETQ *COMPLEX NIL))))
         (COND
          ((AND (NOT R) DMODE*)
           (PROGN (SETQ O (GET DMODE* 'DNAME)) (SETDMODE O NIL))))
         (SETQ O (LIST O R *ROUNDBF C (PRECISION 0)))
         (COND ((NOT R) (PROGN (SETQ *ROUNDED T) (SETDMODE 'ROUNDED T))))
         (SETQ *ROUNDBF NIL)
         (COND (C (PROGN (SETDMODE 'COMPLEX T) (SETQ *COMPLEX T))))
         (RETURN O)
         NIL))
       (T
        (PROGN
         (COND (*COMPLEX (SETDMODE 'COMPLEX NIL)))
         (COND ((NULL (SETQ *ROUNDED (CADR D))) (SETDMODE 'ROUNDED NIL)))
         (SETQ *ROUNDBF (CADDR D))
         (COND ((CAR D) (SETDMODE (CAR D) T)))
         (COND (*COMPLEX (SETDMODE 'COMPLEX T)))
         (PRECISION (CAR (CDDDDR D)))
         NIL))))) 
(SETQ PLOTEVAL-ALIST2* (LIST (LIST (CONS 'X 1)) (LIST (CONS 'Y 2)))) 
(PUT 'PLOT-FORM-PREP 'NUMBER-OF-ARGS 3) 
(PUT 'PLOT-FORM-PREP 'DEFINED-ON-LINE '79) 
(PUT 'PLOT-FORM-PREP 'DEFINED-IN-FILE 'PLOT/PLOTNUM.RED) 
(PUT 'PLOT-FORM-PREP 'PROCEDURE_TYPE
     '(ARROW (TIMES GENERAL GENERAL GENERAL) GENERAL)) 
(DE PLOT-FORM-PREP (F X Y)
    (LIST 'LAMBDA '(&1 &2)
          (LIST 'PLOT-FORM-CALL2 (MKQUOTE (RDWRAP F)) (MKQUOTE F) (MKQUOTE X)
                '&1 (MKQUOTE Y) '&2))) 
(PUT 'PLOT-FORM-CALL2 'NUMBER-OF-ARGS 6) 
(PUT 'PLOT-FORM-CALL2 'DEFINED-ON-LINE '88) 
(PUT 'PLOT-FORM-CALL2 'DEFINED-IN-FILE 'PLOT/PLOTNUM.RED) 
(PUT 'PLOT-FORM-CALL2 'PROCEDURE_TYPE
     '(ARROW (TIMES GENERAL GENERAL GENERAL GENERAL GENERAL GENERAL) GENERAL)) 
(DE PLOT-FORM-CALL2 (FF F X X0 Y Y0)
    (PROG (A)
      (SETQ A (CAR PLOTEVAL-ALIST2*))
      (SETCAR A X)
      (SETCDR A X0)
      (SETQ A (CADR PLOTEVAL-ALIST2*))
      (SETCAR A Y)
      (SETCDR A Y0)
      (RETURN (PLOTEVALFORM FF F PLOTEVAL-ALIST2*)))) 
(PUT 'RDWRAP 'NUMBER-OF-ARGS 1) 
(PUT 'RDWRAP 'DEFINED-ON-LINE '102) 
(PUT 'RDWRAP 'DEFINED-IN-FILE 'PLOT/PLOTNUM.RED) 
(PUT 'RDWRAP 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE RDWRAP (F)
    (PROG (R *MSG *PROTFG ERFG)
      (SETQ *PROTFG T)
      (SETQ ERFG ERFG*)
      (SETQ R (ERRORSET (LIST 'RDWRAP1 (MKQUOTE F)) NIL NIL))
      (SETQ ERFG* ERFG)
      (RETURN (COND ((ERRORP R) 'FAILED) (T (CAR R)))))) 
(PUT 'RDWRAP1 'NUMBER-OF-ARGS 1) 
(PUT 'RDWRAP1 'DEFINED-ON-LINE '110) 
(PUT 'RDWRAP1 'DEFINED-IN-FILE 'PLOT/PLOTNUM.RED) 
(PUT 'RDWRAP1 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE RDWRAP1 (F)
    (COND ((NUMBERP F) (FLOAT F)) ((EQUAL F 'PI) 3.141592653589793)
          ((EQUAL F 'E) 2.718281828459045)
          ((AND (EQUAL F 'I) *COMPLEX) (REDERR "i not LISP evaluable"))
          ((ATOM F) F) ((GET (CAR F) 'DNAME) (RDWRAP-DM F))
          ((EQCAR F 'MINUS)
           (PROG (X)
             (SETQ X (RDWRAP1 (CADR F)))
             (RETURN
              (COND ((NUMBERP X) (MINUS (FLOAT X))) (T (LIST 'MINUS X))))))
          ((EQCAR F 'EXPT) (RDWRAP-EXPT F))
          (T
           (PROG (A W)
             (COND
              ((OR (NULL (GETD (CAR F))) (NOT (FLAGP (CAR F) 'PLOTEVALLISP)))
               (TYPERR (CAR F) "Lisp arithmetic function (warning)")))
             (SETQ A
                     (PROG (C FORALL-RESULT FORALL-ENDPTR)
                       (SETQ C (CDR F))
                       (COND ((NULL C) (RETURN NIL)))
                       (SETQ FORALL-RESULT
                               (SETQ FORALL-ENDPTR
                                       (CONS ((LAMBDA (C) (RDWRAP1 C)) (CAR C))
                                             NIL)))
                      LOOPLABEL
                       (SETQ C (CDR C))
                       (COND ((NULL C) (RETURN FORALL-RESULT)))
                       (RPLACD FORALL-ENDPTR
                               (CONS ((LAMBDA (C) (RDWRAP1 C)) (CAR C)) NIL))
                       (SETQ FORALL-ENDPTR (CDR FORALL-ENDPTR))
                       (GO LOOPLABEL)))
             (COND
              ((SETQ W (ATSOC (CAR F) '((PLUS . PLUS2) (TIMES . TIMES2))))
               (RETURN (RDWRAPN (CDR W) A))))
             (RETURN (CONS (CAR F) A)))))) 
(PUT 'RDWRAPN 'NUMBER-OF-ARGS 2) 
(PUT 'RDWRAPN 'DEFINED-ON-LINE '133) 
(PUT 'RDWRAPN 'DEFINED-IN-FILE 'PLOT/PLOTNUM.RED) 
(PUT 'RDWRAPN 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE RDWRAPN (F A)
    (COND ((NULL (CDR A)) (CAR A)) (T (LIST F (CAR A) (RDWRAPN F (CDR A)))))) 
(PUT 'RDWRAP-DM 'NUMBER-OF-ARGS 1) 
(PUT 'RDWRAP-DM 'DEFINED-ON-LINE '137) 
(PUT 'RDWRAP-DM 'DEFINED-IN-FILE 'PLOT/PLOTNUM.RED) 
(PUT 'RDWRAP-DM 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE RDWRAP-DM (F)
    (COND ((EQ (CAR F) '|:RD:|) (COND ((ATOM (CDR F)) (CDR F)) (T (BF2FLR F))))
          ((EQ (CAR F) '|:CR:|) (RDWRAP-CR F))
          ((EQ (CAR F) '|:GI:|)
           (RDWRAP-CMPLEX F (FLOAT (CADR F)) (FLOAT (CDDR F))))
          ((EQ (CAR F) '|:DN:|) (RDWRAP2 (CDR F)))
          (T
           (PROGN
            (SETQ PLOTSYNERR* T)
            (RERROR 'PLOTPACKAGE 32
                    (LIST (GET (CAR F) 'DNAME) "illegal domain for PLOT")))))) 
(PUT 'RDWRAP-CR 'NUMBER-OF-ARGS 1) 
(PUT 'RDWRAP-CR 'DEFINED-ON-LINE '150) 
(PUT 'RDWRAP-CR 'DEFINED-IN-FILE 'PLOT/PLOTNUM.RED) 
(PUT 'RDWRAP-CR 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE RDWRAP-CR (F)
    (PROG (RE IM)
      (SETQ RE (CADR F))
      (COND ((NOT (ATOM RE)) (SETQ RE (BF2FLR RE))))
      (SETQ IM (CDDR F))
      (COND ((NOT (ATOM IM)) (SETQ IM (BF2FLR IM))))
      (RETURN (RDWRAP-CMPLX F RE IM)))) 
(PUT 'RDWRAP-CMPLX 'NUMBER-OF-ARGS 3) 
(PUT 'RDWRAP-CMPLX 'DEFINED-ON-LINE '159) 
(PUT 'RDWRAP-CMPLX 'DEFINED-IN-FILE 'PLOT/PLOTNUM.RED) 
(PUT 'RDWRAP-CMPLX 'PROCEDURE_TYPE
     '(ARROW (TIMES GENERAL GENERAL GENERAL) GENERAL)) 
(DE RDWRAP-CMPLX (F RE IM)
    (COND
     ((GREATERP (TIMES (ABS IM) 1000.0) (ABS RE)) (TYPERR F "real number"))
     (T RE))) 
(PUT 'PLOTREPART 'NUMBER-OF-ARGS 1) 
(PUT 'PLOTREPART 'DEFINED-ON-LINE '162) 
(PUT 'PLOTREPART 'DEFINED-IN-FILE 'PLOT/PLOTNUM.RED) 
(PUT 'PLOTREPART 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE PLOTREPART (U)
    (COND ((EQ (CAR U) '|:RD:|) U)
          ((MEMQ (CAR U) '(|:GI:| |:CR:|)) (CONS '|:RD:| (CADR U))))) 
(PUT 'RDWRAP-EXPT 'NUMBER-OF-ARGS 1) 
(PUT 'RDWRAP-EXPT 'DEFINED-ON-LINE '166) 
(PUT 'RDWRAP-EXPT 'DEFINED-IN-FILE 'PLOT/PLOTNUM.RED) 
(PUT 'RDWRAP-EXPT 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE RDWRAP-EXPT (F)
    (COND
     ((FIXP (CADDR F))
      (COND
       ((GREATERP (CADDR F) 0) (LIST 'EXPT-INT (RDWRAP1 (CADR F)) (CADDR F)))
       (T
        (LIST 'QUOTIENT 1
              (LIST 'EXPT-INT (RDWRAP1 (CADR F)) (MINUS (CADDR F)))))))
     (T (LIST 'EXPT (RDWRAP1 (CADR F)) (RDWRAP (CADDR F)))))) 
(PUT 'RDWRAP2 'NUMBER-OF-ARGS 1) 
(PUT 'RDWRAP2 'DEFINED-ON-LINE '173) 
(PUT 'RDWRAP2 'DEFINED-IN-FILE 'PLOT/PLOTNUM.RED) 
(PUT 'RDWRAP2 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE RDWRAP2 (F)
    (COND ((ATOM F) F) (T (TIMES (FLOAT (CAR F)) (EXPT 10 (CDR F)))))) 
(PUT 'RDWRAP* 'NUMBER-OF-ARGS 1) 
(PUT 'RDWRAP* 'DEFINED-ON-LINE '177) 
(PUT 'RDWRAP* 'DEFINED-IN-FILE 'PLOT/PLOTNUM.RED) 
(PUT 'RDWRAP* 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE RDWRAP* (F) (COND ((NULL F) 0.0) (T (RDWRAP F)))) 
(PUT 'RDUNWRAP 'NUMBER-OF-ARGS 1) 
(PUT 'RDUNWRAP 'DEFINED-ON-LINE '182) 
(PUT 'RDUNWRAP 'DEFINED-IN-FILE 'PLOT/PLOTNUM.RED) 
(PUT 'RDUNWRAP 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE RDUNWRAP (F)
    (COND ((EQUAL F 0.0) 0) ((EQUAL F 1.0) 1) (T (CONS '|:RD:| F)))) 
(PUT 'EXPT-INT 'NUMBER-OF-ARGS 2) 
(PUT 'EXPT-INT 'DEFINED-ON-LINE '186) 
(PUT 'EXPT-INT 'DEFINED-IN-FILE 'PLOT/PLOTNUM.RED) 
(PUT 'EXPT-INT 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE EXPT-INT (A B) (EXPT A (FIX B))) 
(PUT 'PLOTEVALFORM 'NUMBER-OF-ARGS 3) 
(PUT 'PLOTEVALFORM 'DEFINED-ON-LINE '188) 
(PUT 'PLOTEVALFORM 'DEFINED-IN-FILE 'PLOT/PLOTNUM.RED) 
(PUT 'PLOTEVALFORM 'PROCEDURE_TYPE
     '(ARROW (TIMES GENERAL GENERAL GENERAL) GENERAL)) 
(DE PLOTEVALFORM (FF F A)
    (PROG (U W *PROTFG MN R *MSG ERFG)
      (SETQ *PROTFG T)
      (SETQ ERFG ERFG*)
      (COND
       ((OR (EQ FF 'FAILED) (AND (NOT (ATOM FF)) (MEMQ 'FAILED FF)))
        (GO NON_LISP)))
      (SETQ U
              (ERRORSET (LIST 'PLOTEVALFORM1 (MKQUOTE FF) (MKQUOTE A)) NIL
                        NIL))
      (SETQ ERFG* ERFG)
      (COND
       ((AND (NOT (PLOTERRORP U)) (NUMBERP (SETQ U (CAR U))))
        (PROGN
         (COND ((GREATERP (ABS U) PLOTMAX*) (RETURN (PLOTOVERFLOW PLOTMAX*)))
               (T (RETURN U)))
         NIL)))
     NON_LISP
      (SETQ W
              (LIST 'SIMP
                    (MKQUOTE
                     (SUBLIS
                      (PROG (P FORALL-RESULT FORALL-ENDPTR)
                        (SETQ P A)
                        (COND ((NULL P) (RETURN NIL)))
                        (SETQ FORALL-RESULT
                                (SETQ FORALL-ENDPTR
                                        (CONS
                                         ((LAMBDA (P)
                                            (CONS (CAR P) (RDUNWRAP (CDR P))))
                                          (CAR P))
                                         NIL)))
                       LOOPLABEL
                        (SETQ P (CDR P))
                        (COND ((NULL P) (RETURN FORALL-RESULT)))
                        (RPLACD FORALL-ENDPTR
                                (CONS
                                 ((LAMBDA (P)
                                    (CONS (CAR P) (RDUNWRAP (CDR P))))
                                  (CAR P))
                                 NIL))
                        (SETQ FORALL-ENDPTR (CDR FORALL-ENDPTR))
                        (GO LOOPLABEL))
                      F))))
      (SETQ U (ERRORSET W NIL NIL))
      (COND ((OR (PLOTERRORP U) (EQ (SETQ U (CAR U)) 'FAILED)) (RETURN NIL)))
      (COND ((NEQ (CDR U) 1) (RETURN NIL)))
      (SETQ U (CAR U))
      (COND ((NULL U) (RETURN 0)))
      (COND ((NUMBERP U) (PROGN (SETQ R (FLOAT U)) (GO X))))
      (COND
       ((OR (NOT (OR (ATOM U) (ATOM (CAR U))))
            (NOT (MEMQ (CAR U) '(|:RD:| |:GI:| |:CR:|))))
        (RETURN NIL)))
      (COND
       ((EVALGREATERP (PLOTREPART U) (CONS '|:RD:| PLOTMAX*))
        (RETURN (PLOTOVERFLOW PLOTMAX*)))
       ((EVALGREATERP (CONS '|:RD:| (MINUS PLOTMAX*)) (PLOTREPART U))
        (RETURN (PLOTOVERFLOW (MINUS PLOTMAX*)))))
      (SETQ R (ERRORSET (LIST 'RDWRAP-DM (MKQUOTE U)) NIL NIL))
      (COND ((OR (ERRORP R) (EQ (SETQ R (CAR R)) 'FAILED)) (RETURN NIL)))
     X
      (RETURN (COND (MN (MINUS R)) (T R))))) 
(PUT 'PLOTOVERFLOW 'NUMBER-OF-ARGS 1) 
(PUT 'PLOTOVERFLOW 'DEFINED-ON-LINE '224) 
(PUT 'PLOTOVERFLOW 'DEFINED-IN-FILE 'PLOT/PLOTNUM.RED) 
(PUT 'PLOTOVERFLOW 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE PLOTOVERFLOW (U)
    ((LAMBDA (*PROTFG)
       (PROGN
        (COND ((NOT *PLOTOVERFLOW) (LPRIM "plot number range exceeded")))
        (SETQ *PLOTOVERFLOW T)
        (CONS 'OVERFLOW U)))
     NIL)) 
(PUT 'PLOTEVALFORM0 'NUMBER-OF-ARGS 2) 
(PUT 'PLOTEVALFORM0 'DEFINED-ON-LINE '231) 
(PUT 'PLOTEVALFORM0 'DEFINED-IN-FILE 'PLOT/PLOTNUM.RED) 
(PUT 'PLOTEVALFORM0 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE PLOTEVALFORM0 (F A)
    ((LAMBDA (U)
       (COND ((PLOTERRORP U) (TYPERR F "expression for plot")) (T (CAR U))))
     (ERRORSET (LIST 'PLOTEVALFORM1 (MKQUOTE F) (MKQUOTE A)) NIL NIL))) 
(PUT 'PLOTEVALFORM1 'NUMBER-OF-ARGS 2) 
(PUT 'PLOTEVALFORM1 'DEFINED-ON-LINE '254) 
(PUT 'PLOTEVALFORM1 'DEFINED-IN-FILE 'PLOT/PLOTNUM.RED) 
(PUT 'PLOTEVALFORM1 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE PLOTEVALFORM1 (F A)
    (PROG (X)
      (COND ((NUMBERP F) (RETURN (FLOAT F))))
      (COND ((SETQ X (ASSOC F A)) (RETURN (PLOTEVALFORM1 (CDR X) A))))
      (COND ((ATOM F) (GO ERR)))
      (RETURN
       (COND
        ((CDDR F)
         (IDAPPLY (CAR F)
          (LIST (PLOTEVALFORM1 (CADR F) A) (PLOTEVALFORM1 (CADDR F) A))))
        (T (IDAPPLY (CAR F) (LIST (PLOTEVALFORM1 (CADR F) A))))))
     ERR
      (SETQ PLOTSYNERR* T)
      (TYPERR F "numeric value"))) 
(PUT 'PLOTERRORP 'NUMBER-OF-ARGS 1) 
(PUT 'PLOTERRORP 'DEFINED-ON-LINE '287) 
(PUT 'PLOTERRORP 'DEFINED-IN-FILE 'PLOT/PLOTNUM.RED) 
(PUT 'PLOTERRORP 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE PLOTERRORP (U)
    (COND ((MEMBER U *PLOTINTERRUPTS) (REDERR (PRIN2 "***** plot killed")))
          (T (OR (ATOM U) (CDR U))))) 
(ENDMODULE) 