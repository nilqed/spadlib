(cl:declaim (cl:optimize cl:debug cl:safety))
(cl:declaim (sb-ext:muffle-conditions sb-ext:compiler-note cl:style-warning))
(MODULE (LIST 'LIEDF)) 
(GLOBAL '(COMMUTATOR-OF-FRAMEVECTORS)) 
(NEWTOK '((|\|| _) LIEDF)) 
(INFIX (LIST 'LIEDF)) 
(FLAG '(LIEDF) 'SPACED) 
(PRECEDENCE (LIST 'LIEDF 'INNERPROD)) 
(PUT 'LIEDF 'SIMPFN 'SIMPLIEDF) 
(PUT 'LIEDF 'RTYPEFN 'GETRTYPEOR) 
(PUT 'SIMPLIEDF 'NUMBER-OF-ARGS 1) 
(PUT 'SIMPLIEDF 'DEFINED-ON-LINE '46) 
(PUT 'SIMPLIEDF 'DEFINED-IN-FILE 'EXCALC/LIEDF.RED) 
(PUT 'SIMPLIEDF 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE SIMPLIEDF (U) (*PF2SQ (PARTITLIEDF U))) 
(PUT 'LIEDF 'PARTITFN 'PARTITLIEDF) 
(PUT 'PARTITLIEDF 'NUMBER-OF-ARGS 1) 
(PUT 'PARTITLIEDF 'DEFINED-ON-LINE '51) 
(PUT 'PARTITLIEDF 'DEFINED-IN-FILE 'EXCALC/LIEDF.RED) 
(PUT 'PARTITLIEDF 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE PARTITLIEDF (U) (LIEDFPF (PARTITOP (CAR U)) (PARTITOP (CADR U)))) 
(PUT 'MKLIEDF 'NUMBER-OF-ARGS 2) 
(PUT 'MKLIEDF 'DEFINED-ON-LINE '54) 
(PUT 'MKLIEDF 'DEFINED-IN-FILE 'EXCALC/LIEDF.RED) 
(PUT 'MKLIEDF 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE MKLIEDF (U V)
    (PROG (X Y)
      (RETURN
       (COND ((SETQ X (OPMTCH (SETQ Y (LIST 'LIEDF U V)))) (PARTITOP X))
             (T (MKUPF Y)))))) 
(PUT 'LIEDFPF 'NUMBER-OF-ARGS 2) 
(PUT 'LIEDFPF 'DEFINED-ON-LINE '62) 
(PUT 'LIEDFPF 'DEFINED-IN-FILE 'EXCALC/LIEDF.RED) 
(PUT 'LIEDFPF 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE LIEDFPF (U V)
    (COND
     ((NULL (TVECTORP U))
      (RERROR 'EXCALC 9 "First argument of lie derivative must be a vector"))
     ((NULL (TVECTORP V))
      (ADDPF (EXDFPF (INNERPRODPF U V)) (INNERPRODPF U (EXDFPF V))))
     (T
      (PROG (X)
        (PROG (K)
          (SETQ K U)
         LAB
          (COND ((NULL K) (RETURN NIL)))
          (PROG (L)
            (SETQ L V)
           LAB
            (COND ((NULL L) (RETURN NIL)))
            (SETQ X (ADDPF (LIEDFTT (CAR K) (CAR L)) X))
            (SETQ L (CDR L))
            (GO LAB))
          (SETQ K (CDR K))
          (GO LAB))
        (RETURN X))))) 
(PUT 'LIEDFTT 'NUMBER-OF-ARGS 2) 
(PUT 'LIEDFTT 'DEFINED-ON-LINE '76) 
(PUT 'LIEDFTT 'DEFINED-IN-FILE 'EXCALC/LIEDF.RED) 
(PUT 'LIEDFTT 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE LIEDFTT (U V)
    (PROG (X)
      (RETURN
       (ADDPF (MULTPFSQ (LIEDFK (CAR U) (CAR V)) (MULTSQ (CDR U) (CDR V)))
        (ADDPF
         (COND
          ((SETQ X
                   (INNERPRODPF (CONS (CONS (CAR U) (CONS 1 1)) NIL)
                    (EXDF0 (CDR V))))
           (CONS (CONS (CAR V) (MULTSQ (*PF2SQ X) (CDR U))) NIL))
          (T NIL))
         (COND
          ((SETQ X
                   (INNERPRODPF (CONS (CONS (CAR V) (CONS 1 1)) NIL)
                    (EXDF0 (CDR U))))
           (CONS (CONS (CAR U) (NEGSQ (MULTSQ (*PF2SQ X) (CDR V)))) NIL))
          (T NIL))))))) 
(PUT 'LIEDFK 'NUMBER-OF-ARGS 2) 
(PUT 'LIEDFK 'DEFINED-ON-LINE '89) 
(PUT 'LIEDFK 'DEFINED-IN-FILE 'EXCALC/LIEDF.RED) 
(PUT 'LIEDFK 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE LIEDFK (U V)
    (COND ((EQ U V) NIL) ((AND (EQCAR U 'PARTDF) (EQCAR V 'PARTDF)) NIL)
          ((AND (BASISVECTORP U) (BASISVECTORP V))
           (COND
            ((NULL (ORDOP U V)) (MULTPFSQ (LIEDFK V U) (CONS (MINUS 1) 1)))
            (COMMUTATOR-OF-FRAMEVECTORS (GET-STRUCTURE-CONST U V))
            (T (MKLIEDF U V))))
          ((EQCAR V 'LIEDF)
           (COND ((ORDOP U (CADR V)) (MKLIEDF U V))
                 (T
                  (ADDPF
                   (LIEDFPF (LIEDFK U (CADR V))
                    (CONS (CONS (CADDR V) (CONS 1 1)) NIL))
                   (LIEDFPF (CONS (CONS (CADR V) (CONS 1 1)) NIL)
                    (LIEDFPF (CONS (CONS U (CONS 1 1)) NIL)
                     (CONS (CONS (CADDR V) (CONS 1 1)) NIL)))))))
          ((WORDERP U V) (MKLIEDF U V))
          (T (MULTPFSQ (MKLIEDF V U) (CONS (MINUS 1) 1))))) 
(PUT 'GET-STRUCTURE-CONST 'NUMBER-OF-ARGS 2) 
(PUT 'GET-STRUCTURE-CONST 'DEFINED-ON-LINE '106) 
(PUT 'GET-STRUCTURE-CONST 'DEFINED-IN-FILE 'EXCALC/LIEDF.RED) 
(PUT 'GET-STRUCTURE-CONST 'PROCEDURE_TYPE
     '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE GET-STRUCTURE-CONST (U V)
    (PROG (X)
      (RETURN
       (COND
        ((SETQ X
                 (ASSOC (LIST (CADADR U) (CADADR V))
                        COMMUTATOR-OF-FRAMEVECTORS))
         (*PFSQ2PF (CDR X)))
        (T NIL))))) 
(ENDMODULE) 