(cl:declaim (cl:optimize cl:debug cl:safety))
(cl:declaim (sb-ext:muffle-conditions sb-ext:compiler-note cl:style-warning))
(MODULE (LIST 'MATHML)) 
(FLUID
 '(ATTS CH CHA CHAR COUNT FILE* PVAR RDCI* RDELEMS* RDLIST* RDRELN* SPACE
   SAFE_ATTS TEMP2 UNARY* *MATHPRINT CONSTS_COMPL CONSTS_INT FLAGG FOUND_COMPL
   FOUND_INT CONSTS_MAT_INT CONSTS_MAT_COMPL FOUND_MAT_COMPL FOUND_MAT_INT
   INDENT)) 
(LOAD-PACKAGE 'ASSIST) 
(LOAD-PACKAGE 'INEQ) 
(LOAD-PACKAGE 'MATRIX) 
(ROUNDCONSTANTS) 
(GLOBAL '(F)) 
(GLOBAL '(*MATHML)) 
(SWITCH (LIST 'MATHML)) 
(GLOBAL '(*BOTH)) 
(SWITCH (LIST 'BOTH)) 
(GLOBAL '(*WEB)) 
(SWITCH (LIST 'WEB)) 
(SETQ FILE* NIL) 
(SETQ *MATHML NIL) 
(SETQ *BOTH NIL) 
(SETQ *WEB NIL) 
(SETQ RDCI*
        '((|&IMAGINARYI;| CONSTS 'I) (|&II;| CONSTS 'I)
          (|&EXPONENTIAL;| CONSTS 'E) (|&EE;| CONSTS 'E) (|&PI;| CONSTS 'P)
          (|&DIFFERENTIALD;| CONST 'D) (|&DD;| CONSTS 'D))) 
(SETQ RDRELN*
        '((TENDSTO TENDSTORD) (EQ/ RELATIONRD 'EQ) (NEQ/ RELATIONRD 'NEQ)
          (LT/ RELATIONRD 'LT) (GT/ RELATIONRD 'GT) (GEQ/ RELATIONRD 'GEQ)
          (LEQ/ RELATIONRD 'LEQ) (IN/ INRD) (NOTIN/ NOTINRD)
          (SUBSET/ RELATIONRD 'SUBSET) (PRSUBSET/ RELATIONRD 'PRSUBSET)
          (NOTPRSUBSET/ NOTPRSUBSETRD) (NOTSUBSET/ NOTSUBSETRD))) 
(SETQ RDLIST*
        (APPEND RDRELN*
                '((DIVIDE/ DIVIDERD) (SETDIFF/ SETDIFFRD) (SELECT/ SELECTRD)
                  (TRANSPOSE/ TRANSPOSERD) (DETERMINANT/ DETERMINANTRD)
                  (FN APPLYFNRD) (UNION/ UNIONRD) (INTERSECT/ INTERSECTIONRD)
                  (IMPLIES/ IMPLIESRD) (NOT/ NOTRD) (XOR/ XORRD) (OR/ ORRD)
                  (AND/ ANDRD) (MEAN/ MEANRD) (VAR/ VARRD) (SDEV/ SDEVRD)
                  (MOMENT/ MOMENTRD) (MEDIAN/ MEDIANRD) (SIN/ SINRD)
                  (SEC/ SECRD) (SINH/ SINHRD) (SECH/ SECHRD) (ARCSIN/ ARCSINRD)
                  (COS/ COSRD) (CSC/ CSCRD) (COSH/ COSHRD) (CSCH/ CSCHRD)
                  (ARCCOS/ ARCCOSRD) (TAN/ TANRD) (COT/ COTRD) (TANH/ TANHRD)
                  (COTH/ COTHRD) (ARCTAN/ ARCTANRD) (ABS/ ABSRD) (LN/ LNRD)
                  (PLUS/ PLUSRD) (TIMES/ TIMESRD) (POWER/ POWERRD) (EXP/ EXPRD)
                  (FACTORIAL/ FACTORIALRD) (QUOTIENT/ QUOTIENTRD) (MAX/ MAXRD)
                  (MIN/ MINRD) (MINUS/ MINUSRD) (REM/ REMRD)
                  (CONJUGATE/ CONJUGATERD) (ROOT/ ROOTRD) (GCD/ GCDRD)
                  (LOG/ LOGRD) (INT/ INTRD) (SUM/ SUMRD) (LIMIT/ LIMITRD)
                  (CONDITION CONDITIONRD) (PRODUCT/ PRODUCTRD) (DIFF/ DIFFRD)
                  (PARTIALDIFF/ PARTIALDIFFRD)))) 
(SETQ RDELEMS*
        '((RELN RELNRD /RELN "</reln>") (SET SETRD /SET "</set>")
          (FN FNRD /FN "</fn>") (DECLARE DECLARERD /DECLARE "</declare>")
          (LIST LISTRD /LIST "</list>") (MATRIX MATRIXRD /MATRIX "</matrix>")
          (CN CNML /CN "</cn>") (CI CIML /CI "</ci>")
          (LAMBDA LAMBDARD /LAMBDA "</lambda>"))) 
(SETQ UNARY*
        '((DETERMINANT UNARY DETERMINANT) (TRANSPOSE UNARY TRANSPOSE)
          (SUM SUM_PRODML SUM) (PROD SUM_PRODML PRODUCT) (DF DFML NIL)
          (IMPART COMPLPART IMPART) (REPART COMPLPART REPART) (ABS UNARY ABS)
          (GCD N_NARY GCD) (SET SETML SET) (FACTORIAL UNARY FACTORIAL)
          (MAX N_NARY MAX) (MIN N_NARY MIN) (COS UNARY COS) (SIN UNARY SIN)
          (SEC UNARY SEC) (COSH UNARY COSH) (COT UNARY COT) (COTH UNARY COTH)
          (CSCH UNARY CSCH) (ACOS TRIGML ACOS) (ASIN TRIGML ASIN)
          (ATAN TRIGML ATAN) (SECH UNARY SECH) (SINH UNARY SINH)
          (TAN UNARY TAN) (TANH UNARY TANH) (CSC UNARY CSC)
          (QUOTIENT QUOTIENTML NIL) (PLUS N_NARY PLUS) (TIMES N_NARY TIMES)
          (EXPT N_NARY POWER) (SQRT SQRTML SQRT) (LOG UNARY LOG)
          (LOGB LOG_BASEML LOGB) (LOG10 LOG_BASEML LOG10) (LN UNARY LN)
          (EQ RELN EQ) (NEQ RELN NEQ) (GT RELN GT) (LT RELN LT)
          (GREATERP RELN GT) (LESSP RELN LT) (GEQ RELN GEQ) (LEQ RELN LEQ)
          (UNION SETS UNION) (INTERSECTION SETS INTERSECTION) (IN RELN IN)
          (NOTIN RELN NOTIN) (SUBSET RELN SUBSET) (PRSUBSET RELN PRSUBSET)
          (NOTSUBSET RELN NOTSUBSET) (NOTPRSUBSET RELN NOTPRSUBSET)
          (SETDF SETS SETDF) (ARBCOMPLEX PRINTSUB2 CADR ARBCOMPLEX)
          (ARBINT PRINTSUB2 CADR ARBINT) (MAT MATRIXML NIL) (MINUS MINUSML NIL)
          (INT INTEGRALML NIL) (EQUAL EQUALML NIL) (LIST LISTML NIL))) 
(PUT 'LEX 'NUMBER-OF-ARGS 0) 
(PUT 'LEX 'DEFINED-ON-LINE '237) 
(PUT 'LEX 'DEFINED-IN-FILE 'MATHML/MATHML.RED) 
(PUT 'LEX 'PROCEDURE_TYPE '(ARROW UNIT GENERAL)) 
(DE LEX NIL
    (PROG (TOKEN)
      (SETQ TOKEN NIL)
      (COND ((NEQ ATTS NIL) (SETQ SAFE_ATTS ATTS)))
      (SETQ ATTS NIL)
      (COND
       ((NEQ CH $EOF$)
        (PROGN
         (COND
          ((EQUAL CH SPACE)
           (PROG ()
            WHILELABEL
             (COND ((NOT (EQUAL (SETQ CH (READCH)) SPACE)) (RETURN NIL)))
            NIL
             (GO WHILELABEL)))
          ((EQUAL CH '<) (SETQ CHAR (GET_TOKEN)))
          (T (SETQ CHAR (GET_CONTENT))))
         (COND
          ((NEQ CHAR NIL)
           (PROGN
            (SETQ COUNT (PLUS COUNT 1))
            (SETQ TOKEN (REVERSE CHAR))
            (SETQ CHAR (BUTES TOKEN))
            (ATTRIBUTES CHAR TOKEN)))
          (T (LEX)))
         NIL))))) 
(PUT 'GET_TOKEN 'NUMBER-OF-ARGS 0) 
(PUT 'GET_TOKEN 'DEFINED-ON-LINE '259) 
(PUT 'GET_TOKEN 'DEFINED-IN-FILE 'MATHML/MATHML.RED) 
(PUT 'GET_TOKEN 'PROCEDURE_TYPE '(ARROW UNIT GENERAL)) 
(DE GET_TOKEN NIL
    (PROG (D)
      (SETQ D NIL)
      (PROG ()
       WHILELABEL
        (COND ((NOT (NEQ (SETQ CH (READCH)) '>)) (RETURN NIL)))
        (SETQ D (CONS CH D))
        (GO WHILELABEL))
      (RETURN (CONS '$ D)))) 
(PUT 'GET_CONTENT 'NUMBER-OF-ARGS 0) 
(PUT 'GET_CONTENT 'DEFINED-ON-LINE '267) 
(PUT 'GET_CONTENT 'DEFINED-IN-FILE 'MATHML/MATHML.RED) 
(PUT 'GET_CONTENT 'PROCEDURE_TYPE '(ARROW UNIT GENERAL)) 
(DE GET_CONTENT NIL
    (PROG (D)
      (SETQ D NIL)
      (PROG ()
       WHILELABEL
        (COND
         ((NOT (AND (NEQ (SETQ CH (READCH)) '<) (NEQ CH $EOF$))) (RETURN NIL)))
        (COND
         ((AND (NEQ CH SPACE) (GREATERP (ID2INT CH) 10)) (SETQ D (CONS CH D))))
        (GO WHILELABEL))
      (COND ((NEQ D NIL) (SETQ D (CONS '$ D))))
      (RETURN D))) 
(PUT 'SEARCH_ATT 'NUMBER-OF-ARGS 2) 
(PUT 'SEARCH_ATT 'DEFINED-ON-LINE '281) 
(PUT 'SEARCH_ATT 'DEFINED-IN-FILE 'MATHML/MATHML.RED) 
(PUT 'SEARCH_ATT 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE SEARCH_ATT (ATT KEY)
    (PROG (L STOP D)
      (SETQ L NIL)
      (SETQ D NIL)
      (SETQ STOP 0)
      (SETQ ATT (FIND ATT KEY))
      (COND
       ((NEQ ATT '(STOP))
        (PROGN
         (PROG ()
          WHILELABEL
           (COND ((NOT (EQUAL (CAR ATT) BLANK)) (RETURN NIL)))
           (SETQ ATT (CDR ATT))
           (GO WHILELABEL))
         (COND
          ((EQUAL (CAR ATT) '=)
           (PROGN
            (SETQ ATT (CDR ATT))
            (PROG ()
             WHILELABEL
              (COND ((NOT (EQUAL (CAR ATT) BLANK)) (RETURN NIL)))
              (SETQ ATT (CDR ATT))
              (GO WHILELABEL))
            (COND
             ((EQUAL (CAR ATT) '|"|)
              (PROGN
               (SETQ ATT (CDR ATT))
               (PROG ()
                WHILELABEL
                 (COND ((NOT (EQUAL STOP 0)) (RETURN NIL)))
                 (PROGN
                  (SETQ D (CONS (CAR ATT) D))
                  (SETQ ATT (CDR ATT))
                  (COND
                   ((OR (EQUAL (CAR ATT) BLANK) (EQUAL (CAR ATT) '$))
                    (SETQ STOP 1))))
                 (GO WHILELABEL))))
             (T
              (PROG ()
               WHILELABEL
                (COND ((NOT (EQUAL STOP 0)) (RETURN NIL)))
                (PROGN
                 (SETQ D (CONS (CAR ATT) D))
                 (SETQ ATT (CDR ATT))
                 (COND
                  ((OR (EQUAL (CAR ATT) BLANK) (EQUAL (CAR ATT) '$))
                   (SETQ STOP 1))))
                (GO WHILELABEL))))))
          (T (ERRORML (COMPRESS KEY) 1)))
         (COND ((EQUAL (CAR D) '|"|) (SETQ D (CDR D))))
         (RETURN (REVERSE D))))))) 
(PUT 'FIND 'NUMBER-OF-ARGS 2) 
(PUT 'FIND 'DEFINED-ON-LINE '316) 
(PUT 'FIND 'DEFINED-IN-FILE 'MATHML/MATHML.RED) 
(PUT 'FIND 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE FIND (FATT FKEY)
    (PROG ()
      (RETURN
       (COND ((EQUAL FKEY 'NIL) (COND ((NEQ FATT NIL) (CDR FATT)) (T '(STOP))))
             (T (FIND (MEMBER (CAR FKEY) FATT) (CDR FKEY))))))) 
(PUT 'ATTRIBUTES 'NUMBER-OF-ARGS 2) 
(PUT 'ATTRIBUTES 'DEFINED-ON-LINE '323) 
(PUT 'ATTRIBUTES 'DEFINED-IN-FILE 'MATHML/MATHML.RED) 
(PUT 'ATTRIBUTES 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE ATTRIBUTES (A B)
    (PROG (L)
      (SETQ L (LENGTH A))
      (PROG (A)
        (SETQ A 1)
       LAB
        (COND ((MINUSP (DIFFERENCE L A)) (RETURN NIL)))
        (SETQ B (CDR B))
        (SETQ A (PLUS2 A 1))
        (GO LAB))
      (PROG ()
       WHILELABEL
        (COND ((NOT (EQUAL (CAR B) BLANK)) (RETURN NIL)))
        (SETQ B (CDR B))
        (GO WHILELABEL))
      (COND ((NEQ B '($)) (SETQ ATTS B))))) 
(PUT 'BUTES 'NUMBER-OF-ARGS 1) 
(PUT 'BUTES 'DEFINED-ON-LINE '332) 
(PUT 'BUTES 'DEFINED-IN-FILE 'MATHML/MATHML.RED) 
(PUT 'BUTES 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE BUTES (STR)
    (PROG (CHA)
      (SETQ CHA (CAR STR))
      (RETURN
       (COND ((OR (EQUAL CHA BLANK) (EQUAL CHA '$)) NIL)
             (T (CONS (CAR STR) (BUTES (CDR STR)))))))) 
(PUT 'MML 'NUMBER-OF-ARGS 1) 
(PUT 'MML 'DEFINED-ON-LINE '344) 
(PUT 'MML 'DEFINED-IN-FILE 'MATHML/MATHML.RED) 
(PUT 'MML 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE MML (FF)
    (PROG ()
      (SETQ FILE* T)
      (SETQ FF (OPEN FF 'INPUT))
      (SETQ FF (RDS FF))
      (PARSEML)
      (CLOSE (RDS FF))
      (SETQ FILE* NIL))) 
(PUT 'PARSEML 'NUMBER-OF-ARGS 0) 
(PUT 'PARSEML 'DEFINED-ON-LINE '358) 
(PUT 'PARSEML 'DEFINED-IN-FILE 'MATHML/MATHML.RED) 
(PUT 'PARSEML 'PROCEDURE_TYPE '(ARROW UNIT GENERAL)) 
(DE PARSEML NIL
    (PROG (RES VSWITCH)
      (SETQ RES NIL)
      (SETQ VSWITCH NIL)
      (SETQ SPACE BLANK)
      (SETQ COUNT 0)
      (SETQ CH (READCH))
      (SETQ TEMP2 NIL)
      (LEX)
      (COND ((EQUAL CHAR '(M A T H)) (SETQ RES (MATHML)))
            (T (ERRORML "<math>" 2)))
      (LEX)
      (COND ((EQUAL CHAR '(/ M A T H)) (TERPRI)) (T (ERRORML "</math>" 19)))
      (RETURN (AEVAL RES)))) 
(PUT 'MATHML 'NUMBER-OF-ARGS 0) 
(PUT 'MATHML 'DEFINED-ON-LINE '383) 
(PUT 'MATHML 'DEFINED-IN-FILE 'MATHML/MATHML.RED) 
(PUT 'MATHML 'PROCEDURE_TYPE '(ARROW UNIT GENERAL)) 
(DE MATHML NIL (PROG (A) (SETQ A NIL) (LEX) (RETURN (SUB_MATH)))) 
(PUT 'MATHML2 'NUMBER-OF-ARGS 0) 
(PUT 'MATHML2 'DEFINED-ON-LINE '390) 
(PUT 'MATHML2 'DEFINED-IN-FILE 'MATHML/MATHML.RED) 
(PUT 'MATHML2 'PROCEDURE_TYPE '(ARROW UNIT GENERAL)) 
(DE MATHML2 NIL (PROG (A) (SETQ A NIL) (RETURN (SUB_MATH)))) 
(PUT 'SUB_MATH 'NUMBER-OF-ARGS 0) 
(PUT 'SUB_MATH 'DEFINED-ON-LINE '398) 
(PUT 'SUB_MATH 'DEFINED-IN-FILE 'MATHML/MATHML.RED) 
(PUT 'SUB_MATH 'PROCEDURE_TYPE '(ARROW UNIT GENERAL)) 
(DE SUB_MATH NIL
    (PROG (A AA)
      (COND
       ((EQUAL CHAR '(A P P L Y))
        (PROGN
         (SETQ A (APPLYML))
         (COND ((NEQ CHAR '(/ A P P L Y)) (ERRORML "</apply>" 3)))))
       ((EQUAL CHAR '(V E C T O R))
        (PROGN
         (SETQ A (VECTORRD))
         (COND ((NEQ CHAR '(/ V E C T O R)) (ERRORML "</vector>" 2)))))
       ((SETQ AA (ASSOC (COMPRESS* CHAR) RDELEMS*))
        (PROGN
         (SETQ A (APPLY (CADR AA) 'NIL))
         (COND
          ((NEQ (COMPRESS* CHAR) (THIRD AA)) (ERRORML (THIRD (CDR AA)) 2))))))
      (RETURN A))) 
(PUT 'COMPRESS* 'NUMBER-OF-ARGS 1) 
(PUT 'COMPRESS* 'DEFINED-ON-LINE '414) 
(PUT 'COMPRESS* 'DEFINED-IN-FILE 'MATHML/MATHML.RED) 
(PUT 'COMPRESS* 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE COMPRESS* (U)
    (PROG (X)
      (COND ((DIGIT (CAR U)) (RETURN (COMPRESS U))))
      (PROG (J)
        (SETQ J U)
       LAB
        (COND ((NULL J) (RETURN NIL)))
        ((LAMBDA (J)
           (COND
            ((OR (EQ J '/) (EQ J '-) (EQ J '|;|) (EQ J '|.|))
             (SETQ X (CONS J (CONS '! X))))
            (T (SETQ X (CONS J X)))))
         (CAR J))
        (SETQ J (CDR J))
        (GO LAB))
      (RETURN (INTERN (COMPRESS (REVERSIP X)))))) 
(PUT 'CNML 'NUMBER-OF-ARGS 0) 
(PUT 'CNML 'DEFINED-ON-LINE '429) 
(PUT 'CNML 'DEFINED-IN-FILE 'MATHML/MATHML.RED) 
(PUT 'CNML 'PROCEDURE_TYPE '(ARROW UNIT GENERAL)) 
(DE CNML NIL
    (PROG (TYPE SEP TT AA)
      (SETQ TYPE NIL)
      (SETQ SEP NIL)
      (SETQ TYPE (SEARCH_ATT ATTS '(T Y P E)))
      (LEX)
      (SETQ TT CHAR)
      (LEX)
      (COND
       ((EQUAL TYPE '(C O N S T A N T))
        (PROGN
         (COND
          ((SETQ AA (ASSOC (INTERN (COMPRESS TT)) RDCI*))
           (RETURN (APPLY (FIRST (CDR AA)) (REST (CDR AA)))))))))
      (COND ((IDP (COMPRESS TT)) (ERRORML (COMPRESS TT) 16)))
      (COND ((EQUAL TYPE NIL) (RETURN (COMPRESS TT))))
      (COND
       ((NEQ (MEMBER TYPE '((R E A L) (I N T E G E R))) NIL)
        (RETURN (COMPRESS TT))))
      (COND
       ((NEQ
         (MEMBER TYPE
                 '((R A T I O N A L) (C O M P L E X - C A R T E S I A N)
                   (C O M P L E X - P O L A R)))
         NIL)
        (PROGN
         (SETQ SEP (SEPRD))
         (COND
          ((EQUAL TYPE '(R A T I O N A L))
           (PROGN (LEX) (RETURN (ALG_QUOTIENT (COMPRESS TT) SEP))))
          ((EQUAL TYPE '(C O M P L E X - C A R T E S I A N))
           (PROGN (LEX) (RETURN (COMP2 (COMPRESS TT) SEP))))
          ((EQUAL TYPE '(C O M P L E X - P O L A R))
           (PROGN
            (SETQ SEP (PO2CA (COMPRESS TT) SEP))
            (PROGN (LEX) (RETURN (COMP2 (CAR SEP) (CADR SEP)))))))))))) 
(PUT 'CIML 'NUMBER-OF-ARGS 0) 
(PUT 'CIML 'DEFINED-ON-LINE '463) 
(PUT 'CIML 'DEFINED-IN-FILE 'MATHML/MATHML.RED) 
(PUT 'CIML 'PROCEDURE_TYPE '(ARROW UNIT GENERAL)) 
(DE CIML NIL
    (PROG (TEST TYPE AA TT)
      (SETQ AA NIL)
      (SETQ TYPE NIL)
      (SETQ TEST NIL)
      (SETQ TYPE (SEARCH_ATT ATTS '(T Y P E)))
      (LEX)
      (SETQ TT CHAR)
      (LEX)
      (PROGN
       (SETQ TEST (COMPRESS TT))
       (COND ((NUMBERP TEST) (ERRORML TEST 4)))
       (SETQ TEST (INTERN TEST))
       (RETURN TEST)))) 
(PUT 'CONSTS 'NUMBER-OF-ARGS 1) 
(FLAG '(CONSTS) 'OPFN) 
(PUT 'CONSTS 'DEFINED-ON-LINE '478) 
(PUT 'CONSTS 'DEFINED-IN-FILE 'MATHML/MATHML.RED) 
(PUT 'CONSTS 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE CONSTS (C)
    (PROG ()
      (COND ((EVALEQUAL (AEVAL C) (AEVAL 'I)) (RETURN (AEVAL 'I))))
      (COND ((EVALEQUAL (AEVAL C) (AEVAL 'D)) (RETURN (AEVAL 'D))))
      (COND ((EVALEQUAL (AEVAL C) (AEVAL 'E)) (RETURN (AEVAL 'E))))
      (COND ((EVALEQUAL (AEVAL C) (AEVAL 'P)) (RETURN (AEVAL 'PI)))))) 
(PUT 'COMP2 'NUMBER-OF-ARGS 2) 
(FLAG '(COMP2) 'OPFN) 
(PUT 'COMP2 'DEFINED-ON-LINE '488) 
(PUT 'COMP2 'DEFINED-IN-FILE 'MATHML/MATHML.RED) 
(PUT 'COMP2 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE COMP2 (A B) (PROG () (RETURN (AEVAL (LIST 'PLUS A (LIST 'TIMES B 'I)))))) 
(PUT 'SEPRD 'NUMBER-OF-ARGS 0) 
(PUT 'SEPRD 'DEFINED-ON-LINE '495) 
(PUT 'SEPRD 'DEFINED-IN-FILE 'MATHML/MATHML.RED) 
(PUT 'SEPRD 'PROCEDURE_TYPE '(ARROW UNIT GENERAL)) 
(DE SEPRD NIL
    (PROG (P1 P2)
      (SETQ P1 NIL)
      (SETQ P2 NIL)
      (COND ((NEQ CHAR '(S E P /)) (ERRORML "<sep/>" 2)))
      (LEX)
      (SETQ P2 (COMPRESS CHAR))
      (RETURN P2))) 
(PUT 'VECTORRD 'NUMBER-OF-ARGS 0) 
(PUT 'VECTORRD 'DEFINED-ON-LINE '506) 
(PUT 'VECTORRD 'DEFINED-IN-FILE 'MATHML/MATHML.RED) 
(PUT 'VECTORRD 'PROCEDURE_TYPE '(ARROW UNIT GENERAL)) 
(DE VECTORRD NIL
    (PROG (A)
      (SETQ A NIL)
      (SETQ A (MATRIXROWRD))
      (SETQ A (REVAL1 (LIST 'MAT A) NIL))
      (RETURN A))) 
(PUT 'MATRIXRD 'NUMBER-OF-ARGS 0) 
(PUT 'MATRIXRD 'DEFINED-ON-LINE '516) 
(PUT 'MATRIXRD 'DEFINED-IN-FILE 'MATHML/MATHML.RED) 
(PUT 'MATRIXRD 'PROCEDURE_TYPE '(ARROW UNIT GENERAL)) 
(DE MATRIXRD NIL
    (PROG (B1 B2 STOP)
      (SETQ STOP 0)
      (SETQ B1 'NIL)
      (SETQ B2 NIL)
      (PROG ()
       WHILELABEL
        (COND ((NOT (EQUAL STOP 0)) (RETURN NIL)))
        (PROGN
         (LEX)
         (COND
          ((EQUAL CHAR '(M A T R I X R O W))
           (PROGN
            (SETQ B2 (MATRIXROWRD))
            (COND ((NEQ B1 NIL) (SETQ B1 (APPEND B1 (LIST B2))))
                  (T (SETQ B1 (LIST B2))))
            (COND
             ((NEQ CHAR '(/ M A T R I X R O W)) (ERRORML "</matrixrow>" 2)))))
          (T (SETQ STOP 1))))
        (GO WHILELABEL))
      (RETURN (REVAL1 (CONS 'MAT B1) NIL)))) 
(PUT 'MATRIXROWRD 'NUMBER-OF-ARGS 0) 
(PUT 'MATRIXROWRD 'DEFINED-ON-LINE '535) 
(PUT 'MATRIXROWRD 'DEFINED-IN-FILE 'MATHML/MATHML.RED) 
(PUT 'MATRIXROWRD 'PROCEDURE_TYPE '(ARROW UNIT GENERAL)) 
(DE MATRIXROWRD NIL
    (PROG (A)
      (SETQ A NIL)
      (SETQ A (MATHML))
      (RETURN (COND ((EQUAL A NIL) NIL) (T (CONS A (MATRIXROWRD))))))) 
(PUT 'LAMBDARD 'NUMBER-OF-ARGS 0) 
(PUT 'LAMBDARD 'DEFINED-ON-LINE '545) 
(PUT 'LAMBDARD 'DEFINED-IN-FILE 'MATHML/MATHML.RED) 
(PUT 'LAMBDARD 'PROCEDURE_TYPE '(ARROW UNIT GENERAL)) 
(DE LAMBDARD NIL
    (PROG (B1 B2)
      (LEX)
      (SETQ B1 (BVARRD))
      (SETQ B1 (CAR B1))
      (SETQ B2 (MATHML))
      (LEX)
      (RETURN (AEVAL ((LAMBDA (B1) B2) B1))))) 
(PUT 'SETRD 'NUMBER-OF-ARGS 0) 
(PUT 'SETRD 'DEFINED-ON-LINE '557) 
(PUT 'SETRD 'DEFINED-IN-FILE 'MATHML/MATHML.RED) 
(PUT 'SETRD 'PROCEDURE_TYPE '(ARROW UNIT GENERAL)) 
(DE SETRD NIL
    (PROG (SETVARS)
      (SETQ ATTS '(T Y P E = S E T $))
      (SETQ SETVARS (CONS 'LIST (STATS_GETARGS)))
      (SETQ SETVARS (CONS (CAR SETVARS) (NOREPEAT (CDR SETVARS))))
      (RETURN SETVARS))) 
(PUT 'NOREPEAT 'NUMBER-OF-ARGS 1) 
(PUT 'NOREPEAT 'DEFINED-ON-LINE '567) 
(PUT 'NOREPEAT 'DEFINED-IN-FILE 'MATHML/MATHML.RED) 
(PUT 'NOREPEAT 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE NOREPEAT (ARGS)
    (PROG ()
      (RETURN
       (COND ((EQUAL ARGS NIL) NIL) ((EQUAL (LENGTH ARGS) 1) (LIST (CAR ARGS)))
             (T
              (APPEND (LIST (CAR ARGS))
                      (NOREPEAT (DELALL (CAR ARGS) (CDR ARGS))))))))) 
(PUT 'DELALL 'NUMBER-OF-ARGS 2) 
(PUT 'DELALL 'DEFINED-ON-LINE '576) 
(PUT 'DELALL 'DEFINED-IN-FILE 'MATHML/MATHML.RED) 
(PUT 'DELALL 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE DELALL (X L)
    (COND ((EQUAL L NIL) NIL) ((EQUAL X (CAR L)) (DELALL X (CDR L)))
          (T (APPEND (LIST (CAR L)) (DELALL X (CDR L)))))) 
(PUT 'LISTRD 'NUMBER-OF-ARGS 0) 
(PUT 'LISTRD 'DEFINED-ON-LINE '583) 
(PUT 'LISTRD 'DEFINED-IN-FILE 'MATHML/MATHML.RED) 
(PUT 'LISTRD 'PROCEDURE_TYPE '(ARROW UNIT GENERAL)) 
(DE LISTRD NIL
    (PROG (SETVARS LORDER TMP)
      (SETQ LORDER (SEARCH_ATT ATTS '(O R D E R)))
      (SETQ ATTS '(T Y P E = L I S T $))
      (SETQ SETVARS (CONS 'LIST (STATS_GETARGS)))
      (SETQ TMP SETVARS)
      (COND
       ((EQUAL LORDER '(L E X I C O G R A P H I C))
        (SETQ SETVARS (AEVAL (LIST 'SORTLIST SETVARS 'LEXOG)))))
      (COND
       ((EQUAL LORDER '(N U M E R I C))
        (SETQ SETVARS (AEVAL (LIST 'SORTLIST SETVARS 'NUMER))))
       (T (SETQ SETVARS (AEVAL (LIST 'SORTLIST SETVARS 'PRED)))))
      (COND ((EQUAL SETVARS NIL) (SETQ SETVARS TMP)))
      (RETURN SETVARS))) 
(PUT 'PRED 'NUMBER-OF-ARGS 2) 
(PUT 'PRED 'DEFINED-ON-LINE '605) 
(PUT 'PRED 'DEFINED-IN-FILE 'MATHML/MATHML.RED) 
(PUT 'PRED 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE PRED (U V)
    (PROG ()
      (RETURN
       (COND ((AND (NUMBERP U) (NUMBERP V)) (PROGN (COND ((LESSP U V) T))))
             ((AND (IDP U) (IDP V))
              (PROGN (COND ((LESSP (ID2INT U) (ID2INT V)) T))))
             ((AND (NUMBERP U) (IDP V))
              (PROGN (COND ((LESSP U (ID2INT V)) T))))
             ((AND (IDP U) (NUMBERP V))
              (PROGN (COND ((LESSP (ID2INT U) V) T)))))))) 
(PUT 'LEXOG 'NUMBER-OF-ARGS 2) 
(PUT 'LEXOG 'DEFINED-ON-LINE '615) 
(PUT 'LEXOG 'DEFINED-IN-FILE 'MATHML/MATHML.RED) 
(PUT 'LEXOG 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE LEXOG (U V)
    (PROG ()
      (RETURN
       (COND
        ((AND (IDP U) (IDP V))
         (PROGN (COND ((LESSP (ID2INT U) (ID2INT V)) T))))
        (T T))))) 
(PUT 'NUMER 'NUMBER-OF-ARGS 2) 
(PUT 'NUMER 'DEFINED-ON-LINE '623) 
(PUT 'NUMER 'DEFINED-IN-FILE 'MATHML/MATHML.RED) 
(PUT 'NUMER 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE NUMER (U V)
    (PROG ()
      (RETURN
       (COND ((AND (NUMBERP U) (NUMBERP V)) (PROGN (COND ((LESSP U V) T))))
             (T T))))) 
(PUT 'FNRD 'NUMBER-OF-ARGS 0) 
(PUT 'FNRD 'DEFINED-ON-LINE '631) 
(PUT 'FNRD 'DEFINED-IN-FILE 'MATHML/MATHML.RED) 
(PUT 'FNRD 'PROCEDURE_TYPE '(ARROW UNIT GENERAL)) 
(DE FNRD NIL
    (PROG (B1)
      (LEX)
      (COND ((NEQ CHAR '(C I)) (ERRORML (COMPRESS CHAR) 20))
            (T (SETQ B1 (MATHML2))))
      (COND ((ATOM B1) (AEVAL (OPERATOR (LIST B1)))))
      (LEX)
      (RETURN B1))) 
(PUT 'DECLARERD 'NUMBER-OF-ARGS 0) 
(PUT 'DECLARERD 'DEFINED-ON-LINE '644) 
(PUT 'DECLARERD 'DEFINED-IN-FILE 'MATHML/MATHML.RED) 
(PUT 'DECLARERD 'PROCEDURE_TYPE '(ARROW UNIT GENERAL)) 
(DE DECLARERD NIL
    (PROG (B1 B2 FLAGG AT)
      (SETQ AT ATTS)
      (SETQ FLAGG NIL)
      (SETQ B1 (MATHML))
      (CLEAR (LIST B1))
      (CLEAR (LIST (REVAL1 B1 T)))
      (LEX)
      (COND ((NEQ AT NIL) (PUT B1 'TYPE (SEARCH_ATT AT '(T Y P E)))))
      (COND ((EQUAL (SEARCH_ATT AT '(T Y P E)) '(V E C T O R)) (SETQ FLAGG T)))
      (COND ((EQUAL CHAR '(/ D E C L A R E)) (RETURN NIL)))
      (SETQ B2 (MATHML2))
      (COND
       ((EQUAL (GET B1 'TYPE) '(F N)) (PROGN (AEVAL (OPERATOR (LIST B1))))))
      (COND ((EQUAL FLAGG T) (SETK B1 B2)) (T (AEVAL (LIST 'SET B1 B2))))
      (LEX)
      (RETURN NIL))) 
(PUT 'APPLYML 'NUMBER-OF-ARGS 0) 
(PUT 'APPLYML 'DEFINED-ON-LINE '671) 
(PUT 'APPLYML 'DEFINED-IN-FILE 'MATHML/MATHML.RED) 
(PUT 'APPLYML 'PROCEDURE_TYPE '(ARROW UNIT GENERAL)) 
(DE APPLYML NIL
    (PROG (AA)
      (LEX)
      (COND
       ((SETQ AA (ASSOC (COMPRESS* CHAR) RDLIST*))
        (RETURN (APPLY (FIRST (CDR AA)) (REST (CDR AA)))))
       ((OR (EQUAL CHAR '(I D E N T /)) (EQUAL CHAR '(C O M P O S E /)))
        (RETURN NIL))
       ((EQUAL CHAR '(I N V E R S E /)) (RETURN T))
       (T (ERRORML (COMPRESS* CHAR) 17))))) 
(PUT 'SETDIFFRD 'NUMBER-OF-ARGS 0) 
(PUT 'SETDIFFRD 'DEFINED-ON-LINE '684) 
(PUT 'SETDIFFRD 'DEFINED-IN-FILE 'MATHML/MATHML.RED) 
(PUT 'SETDIFFRD 'PROCEDURE_TYPE '(ARROW UNIT GENERAL)) 
(DE SETDIFFRD NIL
    (PROG (B1 B2)
      (SETQ B1 (MATHML))
      (SETQ B2 (MATHML))
      (LEX)
      (COND
       ((AND (EQUAL B1 (REVAL1 B1 T)) (EQUAL B2 (REVAL1 B2 T)))
        (RETURN (LIST 'SETDIFF B1 B2)))
       ((EQUAL B1 (REVAL1 B1 T)) (RETURN (LIST 'SETDIFF B1 (REVAL1 B2 T))))
       ((EQUAL B2 (REVAL1 B2 T)) (RETURN (LIST 'SETDIFF (REVAL1 B1 T) B2)))
       (T
        (RETURN (APPEND (LIST 'SET) (SETDIFF (REVAL1 B1 T) (REVAL1 B2 T)))))))) 
(PUT 'SELECTRD 'NUMBER-OF-ARGS 0) 
(PUT 'SELECTRD 'DEFINED-ON-LINE '698) 
(PUT 'SELECTRD 'DEFINED-IN-FILE 'MATHML/MATHML.RED) 
(PUT 'SELECTRD 'PROCEDURE_TYPE '(ARROW UNIT GENERAL)) 
(DE SELECTRD NIL
    (PROG (A1 RES)
      (SETQ A1 (STATS_GETARGS))
      (COND ((EQUAL (CAAR A1) 'MAT) (SETQ RES (MAT_SELECT A1))))
      (COND ((EQUAL (CAAR A1) 'LIST) (SETQ RES (LIST_SELECT A1))))
      (COND ((ATOM RES) (RETURN RES)))
      (RETURN (CONS 'LIST RES)))) 
(PUT 'MAT_SELECT 'NUMBER-OF-ARGS 1) 
(PUT 'MAT_SELECT 'DEFINED-ON-LINE '707) 
(PUT 'MAT_SELECT 'DEFINED-IN-FILE 'MATHML/MATHML.RED) 
(PUT 'MAT_SELECT 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE MAT_SELECT (A1)
    (PROG ()
      (COND ((EQUAL (LENGTH (CAR A1)) 2) (RETURN (NTH (CADAR A1) (CADR A1))))
            ((EQUAL (LENGTH A1) 2) (RETURN (NTH (CDAR A1) (CADR A1)))))
      (COND
       ((EQUAL (LENGTH A1) 3)
        (RETURN (NTH (NTH (CDAR A1) (CADDR A1)) (CADR A1))))))) 
(PUT 'LIST_SELECT 'NUMBER-OF-ARGS 1) 
(PUT 'LIST_SELECT 'DEFINED-ON-LINE '715) 
(PUT 'LIST_SELECT 'DEFINED-IN-FILE 'MATHML/MATHML.RED) 
(PUT 'LIST_SELECT 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE LIST_SELECT (A1)
    (PROG (B1) (SETQ B1 (CDAR A1)) (RETURN (NTH B1 (CADR A1))))) 
(PUT 'TRANSPOSERD 'NUMBER-OF-ARGS 0) 
(PUT 'TRANSPOSERD 'DEFINED-ON-LINE '724) 
(PUT 'TRANSPOSERD 'DEFINED-IN-FILE 'MATHML/MATHML.RED) 
(PUT 'TRANSPOSERD 'PROCEDURE_TYPE '(ARROW UNIT GENERAL)) 
(DE TRANSPOSERD NIL
    (PROG (A RES)
      (SETQ A (MATHML))
      (SETQ RES (AEVAL (LIST 'TP A)))
      (LEX)
      (RETURN RES))) 
(PUT 'DETERMINANTRD 'NUMBER-OF-ARGS 0) 
(PUT 'DETERMINANTRD 'DEFINED-ON-LINE '734) 
(PUT 'DETERMINANTRD 'DEFINED-IN-FILE 'MATHML/MATHML.RED) 
(PUT 'DETERMINANTRD 'PROCEDURE_TYPE '(ARROW UNIT GENERAL)) 
(DE DETERMINANTRD NIL
    (PROG (A RES) (SETQ A (MATHML)) (SETQ RES (ALG_DET A)) (LEX) (RETURN RES))) 
(PUT 'ALG_DET 'NUMBER-OF-ARGS 1) 
(FLAG '(ALG_DET) 'OPFN) 
(PUT 'ALG_DET 'DEFINED-ON-LINE '742) 
(PUT 'ALG_DET 'DEFINED-IN-FILE 'MATHML/MATHML.RED) 
(PUT 'ALG_DET 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE ALG_DET (A) (PROG () (RETURN (AEVAL (LIST 'DET A))))) 
(PUT 'APPLYFNRD 'NUMBER-OF-ARGS 0) 
(PUT 'APPLYFNRD 'DEFINED-ON-LINE '750) 
(PUT 'APPLYFNRD 'DEFINED-IN-FILE 'MATHML/MATHML.RED) 
(PUT 'APPLYFNRD 'PROCEDURE_TYPE '(ARROW UNIT GENERAL)) 
(DE APPLYFNRD NIL
    (PROG (B1 B2 C1)
      (SETQ B1 NIL)
      (SETQ B2 NIL)
      (SETQ C1 NIL)
      (SETQ B1 (FNRD))
      (SETQ B2 (STATS_GETARGS))
      (SETQ B2 (CONS B1 B2))
      (SETQ C1 (AEVAL B2))
      (RETURN C1))) 
(PUT 'UNIONRD 'NUMBER-OF-ARGS 0) 
(PUT 'UNIONRD 'DEFINED-ON-LINE '762) 
(PUT 'UNIONRD 'DEFINED-IN-FILE 'MATHML/MATHML.RED) 
(PUT 'UNIONRD 'PROCEDURE_TYPE '(ARROW UNIT GENERAL)) 
(DE UNIONRD NIL
    (PROG (B1 A1 A2 TYPE RES)
      (SETQ B1 (STATS_GETARGS))
      (SETQ A1 (CAR B1))
      (SETQ A2 (CADR B1))
      (COND
       ((AND (PAIRP A1) (PAIRP A2))
        (PROGN
         (SETQ TYPE (CAR A1))
         (SETQ A1 (CONS 'LIST (EVAL_LIST (CDR A1))))
         (SETQ A2 (CONS 'LIST (EVAL_LIST (CDR A2))))
         (SETQ RES (AEVAL (LIST 'UNION A1 A2)))
         NIL))
       (T
        (PROGN
         (SETQ TYPE 'LIST)
         (SETQ RES (CONS 'LIST (CONS A1 (LIST A2))))
         NIL)))
      (RETURN (CONS TYPE (CDR RES))))) 
(PUT 'INTERSECTIONRD 'NUMBER-OF-ARGS 0) 
(PUT 'INTERSECTIONRD 'DEFINED-ON-LINE '782) 
(PUT 'INTERSECTIONRD 'DEFINED-IN-FILE 'MATHML/MATHML.RED) 
(PUT 'INTERSECTIONRD 'PROCEDURE_TYPE '(ARROW UNIT GENERAL)) 
(DE INTERSECTIONRD NIL
    (PROG (B1 A1 A2 TYPE RES)
      (SETQ B1 (STATS_GETARGS))
      (SETQ A1 (CAR B1))
      (SETQ A2 (CADR B1))
      (COND
       ((AND (PAIRP A1) (PAIRP A2))
        (PROGN
         (SETQ TYPE (CAR A1))
         (SETQ A1 (CONS 'LIST (EVAL_LIST (CDR A1))))
         (SETQ A2 (CONS 'LIST (EVAL_LIST (CDR A2))))
         (SETQ RES (AEVAL (LIST 'INTERSECT A1 A2)))
         NIL))
       (T
        (PROGN
         (SETQ TYPE 'LIST)
         (SETQ RES (CONS 'LIST (CONS A1 (LIST A2))))
         NIL)))
      (RETURN (CONS TYPE (CDR RES))))) 
(PUT 'EVAL_LIST 'NUMBER-OF-ARGS 1) 
(PUT 'EVAL_LIST 'DEFINED-ON-LINE '804) 
(PUT 'EVAL_LIST 'DEFINED-IN-FILE 'MATHML/MATHML.RED) 
(PUT 'EVAL_LIST 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE EVAL_LIST (ARGS)
    (PROG ()
      (RETURN
       (COND ((EQUAL ARGS NIL) NIL)
             (T (CONS (REVAL1 (CAR ARGS) T) (EVAL_LIST (CDR ARGS)))))))) 
(PUT 'EVAL_LIST_SETS 'NUMBER-OF-ARGS 1) 
(PUT 'EVAL_LIST_SETS 'DEFINED-ON-LINE '813) 
(PUT 'EVAL_LIST_SETS 'DEFINED-IN-FILE 'MATHML/MATHML.RED) 
(PUT 'EVAL_LIST_SETS 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE EVAL_LIST_SETS (ARGS)
    (PROG (AB)
      (RETURN
       (COND ((EQUAL ARGS NIL) NIL)
             (T
              (PROGN
               (COND
                ((PAIRP (REVAL1 (CAR ARGS) T))
                 (PROGN
                  (COND
                   ((EQUAL (CAR (REVAL1 (CAR ARGS) T)) 'LIST)
                    (SETQ AB (CONS 'SET (CDR (REVAL1 (CAR ARGS) T))))))))
                (T (SETQ AB (REVAL1 (CAR ARGS) T))))
               (CONS AB (EVAL_LIST_SETS (CDR ARGS))))))))) 
(PUT 'CONSTANTS 'NUMBER-OF-ARGS 1) 
(PUT 'CONSTANTS 'DEFINED-ON-LINE '827) 
(PUT 'CONSTANTS 'DEFINED-IN-FILE 'MATHML/MATHML.RED) 
(PUT 'CONSTANTS 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE CONSTANTS (ARGS)
    (PROG (B1)
      (COND ((NEQ ARGS NIL) (SETQ B1 (CAR ARGS))))
      (RETURN
       (COND ((EQUAL ARGS NIL) NIL)
             (T
              (PROGN
               (COND
                ((OR (AND (EQUAL B1 (REVAL1 B1 T)) (IDP B1)) (PAIRP B1))
                 (SETQ TEMP2 'STOP))
                (T (CONSTANTS (CDR ARGS)))))))))) 
(PUT 'NOTRD 'NUMBER-OF-ARGS 0) 
(PUT 'NOTRD 'DEFINED-ON-LINE '839) 
(PUT 'NOTRD 'DEFINED-IN-FILE 'MATHML/MATHML.RED) 
(PUT 'NOTRD 'PROCEDURE_TYPE '(ARROW UNIT GENERAL)) 
(DE NOTRD NIL (PROG (A) (SETQ A (MATHML)) (LEX) (RETURN (NOT (REVAL1 A T))))) 
(PUT 'IMPLIESRD 'NUMBER-OF-ARGS 0) 
(PUT 'IMPLIESRD 'DEFINED-ON-LINE '846) 
(PUT 'IMPLIESRD 'DEFINED-IN-FILE 'MATHML/MATHML.RED) 
(PUT 'IMPLIESRD 'PROCEDURE_TYPE '(ARROW UNIT GENERAL)) 
(DE IMPLIESRD NIL
    (PROG (A1 B1 C1)
      (SETQ A1 (MATHML))
      (SETQ B1 (MATHML))
      (COND ((EQUAL B1 'FALSE) (SETQ B1 NIL)))
      (COND ((EQUAL A1 'FALSE) (SETQ A1 NIL)))
      (COND ((AND (REVAL1 A1 T) (NOT (REVAL1 B1 T))) (SETQ C1 NIL))
            (T (SETQ C1 T)))
      (LEX)
      (RETURN C1))) 
(PUT 'ANDRD 'NUMBER-OF-ARGS 0) 
(PUT 'ANDRD 'DEFINED-ON-LINE '858) 
(PUT 'ANDRD 'DEFINED-IN-FILE 'MATHML/MATHML.RED) 
(PUT 'ANDRD 'PROCEDURE_TYPE '(ARROW UNIT GENERAL)) 
(DE ANDRD NIL
    (PROG (A)
      (SETQ A (STATS_GETARGS))
      (SETQ A (SUBST NIL 'FALSE A))
      (SETQ A (AND2RD A))
      (RETURN A))) 
(PUT 'AND2RD 'NUMBER-OF-ARGS 1) 
(PUT 'AND2RD 'DEFINED-ON-LINE '866) 
(PUT 'AND2RD 'DEFINED-IN-FILE 'MATHML/MATHML.RED) 
(PUT 'AND2RD 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE AND2RD (ARGS)
    (PROG ()
      (RETURN
       (COND ((EQUAL (LENGTH ARGS) 1) (REVAL1 (CAR ARGS) T))
             (T (AND (REVAL1 (CAR ARGS) T) (AND2RD (CDR ARGS)))))))) 
(PUT 'ORRD 'NUMBER-OF-ARGS 0) 
(PUT 'ORRD 'DEFINED-ON-LINE '873) 
(PUT 'ORRD 'DEFINED-IN-FILE 'MATHML/MATHML.RED) 
(PUT 'ORRD 'PROCEDURE_TYPE '(ARROW UNIT GENERAL)) 
(DE ORRD NIL
    (PROG (A)
      (SETQ A (STATS_GETARGS))
      (SETQ A (SUBST NIL 'FALSE A))
      (SETQ A (OR2RD A))
      (RETURN A))) 
(PUT 'OR2RD 'NUMBER-OF-ARGS 1) 
(PUT 'OR2RD 'DEFINED-ON-LINE '881) 
(PUT 'OR2RD 'DEFINED-IN-FILE 'MATHML/MATHML.RED) 
(PUT 'OR2RD 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE OR2RD (ARGS)
    (PROG ()
      (RETURN
       (COND ((EQUAL (LENGTH ARGS) 1) (REVAL1 (CAR ARGS) T))
             (T (OR (REVAL1 (CAR ARGS) T) (OR2RD (CDR ARGS)))))))) 
(PUT 'XORRD 'NUMBER-OF-ARGS 0) 
(PUT 'XORRD 'DEFINED-ON-LINE '888) 
(PUT 'XORRD 'DEFINED-IN-FILE 'MATHML/MATHML.RED) 
(PUT 'XORRD 'PROCEDURE_TYPE '(ARROW UNIT GENERAL)) 
(DE XORRD NIL
    (PROG (A)
      (SETQ A (STATS_GETARGS))
      (SETQ A (SUBST NIL 'FALSE A))
      (SETQ A (XOR2RD A))
      (RETURN A))) 
(PUT 'XOR2RD 'NUMBER-OF-ARGS 1) 
(PUT 'XOR2RD 'DEFINED-ON-LINE '896) 
(PUT 'XOR2RD 'DEFINED-IN-FILE 'MATHML/MATHML.RED) 
(PUT 'XOR2RD 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE XOR2RD (ARGS)
    (PROG ()
      (RETURN
       (COND ((EQUAL ARGS NIL) NIL)
             (T (ALG_XOR (REVAL1 (CAR ARGS) T) (XOR2RD (CDR ARGS)))))))) 
(PUT 'ALG_XOR 'NUMBER-OF-ARGS 2) 
(PUT 'ALG_XOR 'DEFINED-ON-LINE '904) 
(PUT 'ALG_XOR 'DEFINED-IN-FILE 'MATHML/MATHML.RED) 
(PUT 'ALG_XOR 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE ALG_XOR (A B) (PROG () (RETURN (AND (OR A B) (NOT (AND A B)))))) 
(PUT 'SINRD 'NUMBER-OF-ARGS 0) 
(FLAG '(SINRD) 'OPFN) 
(PUT 'SINRD 'DEFINED-ON-LINE '911) 
(PUT 'SINRD 'DEFINED-IN-FILE 'MATHML/MATHML.RED) 
(PUT 'SINRD 'PROCEDURE_TYPE '(ARROW UNIT GENERAL)) 
(DE SINRD NIL
    (PROG (A) (SETQ A (AEVAL (MATHML))) (LEX) (RETURN (AEVAL (LIST 'SIN A))))) 
(PUT 'SECRD 'NUMBER-OF-ARGS 0) 
(FLAG '(SECRD) 'OPFN) 
(PUT 'SECRD 'DEFINED-ON-LINE '918) 
(PUT 'SECRD 'DEFINED-IN-FILE 'MATHML/MATHML.RED) 
(PUT 'SECRD 'PROCEDURE_TYPE '(ARROW UNIT GENERAL)) 
(DE SECRD NIL
    (PROG (A) (SETQ A (AEVAL (MATHML))) (LEX) (RETURN (AEVAL (LIST 'SEC A))))) 
(PUT 'SINHRD 'NUMBER-OF-ARGS 0) 
(FLAG '(SINHRD) 'OPFN) 
(PUT 'SINHRD 'DEFINED-ON-LINE '925) 
(PUT 'SINHRD 'DEFINED-IN-FILE 'MATHML/MATHML.RED) 
(PUT 'SINHRD 'PROCEDURE_TYPE '(ARROW UNIT GENERAL)) 
(DE SINHRD NIL
    (PROG (A) (SETQ A (AEVAL (MATHML))) (LEX) (RETURN (AEVAL (LIST 'SINH A))))) 
(PUT 'SECHRD 'NUMBER-OF-ARGS 0) 
(FLAG '(SECHRD) 'OPFN) 
(PUT 'SECHRD 'DEFINED-ON-LINE '932) 
(PUT 'SECHRD 'DEFINED-IN-FILE 'MATHML/MATHML.RED) 
(PUT 'SECHRD 'PROCEDURE_TYPE '(ARROW UNIT GENERAL)) 
(DE SECHRD NIL
    (PROG (A) (SETQ A (AEVAL (MATHML))) (LEX) (RETURN (AEVAL (LIST 'SECH A))))) 
(PUT 'ARCSINRD 'NUMBER-OF-ARGS 0) 
(FLAG '(ARCSINRD) 'OPFN) 
(PUT 'ARCSINRD 'DEFINED-ON-LINE '939) 
(PUT 'ARCSINRD 'DEFINED-IN-FILE 'MATHML/MATHML.RED) 
(PUT 'ARCSINRD 'PROCEDURE_TYPE '(ARROW UNIT GENERAL)) 
(DE ARCSINRD NIL
    (PROG (A) (SETQ A (AEVAL (MATHML))) (LEX) (RETURN (AEVAL (LIST 'ASIN A))))) 
(PUT 'COSRD 'NUMBER-OF-ARGS 0) 
(FLAG '(COSRD) 'OPFN) 
(PUT 'COSRD 'DEFINED-ON-LINE '946) 
(PUT 'COSRD 'DEFINED-IN-FILE 'MATHML/MATHML.RED) 
(PUT 'COSRD 'PROCEDURE_TYPE '(ARROW UNIT GENERAL)) 
(DE COSRD NIL
    (PROG (A) (SETQ A (AEVAL (MATHML))) (LEX) (RETURN (AEVAL (LIST 'COS A))))) 
(PUT 'CSCRD 'NUMBER-OF-ARGS 0) 
(FLAG '(CSCRD) 'OPFN) 
(PUT 'CSCRD 'DEFINED-ON-LINE '953) 
(PUT 'CSCRD 'DEFINED-IN-FILE 'MATHML/MATHML.RED) 
(PUT 'CSCRD 'PROCEDURE_TYPE '(ARROW UNIT GENERAL)) 
(DE CSCRD NIL
    (PROG (A) (SETQ A (AEVAL (MATHML))) (LEX) (RETURN (AEVAL (LIST 'CSC A))))) 
(PUT 'COSHRD 'NUMBER-OF-ARGS 0) 
(FLAG '(COSHRD) 'OPFN) 
(PUT 'COSHRD 'DEFINED-ON-LINE '960) 
(PUT 'COSHRD 'DEFINED-IN-FILE 'MATHML/MATHML.RED) 
(PUT 'COSHRD 'PROCEDURE_TYPE '(ARROW UNIT GENERAL)) 
(DE COSHRD NIL
    (PROG (A) (SETQ A (AEVAL (MATHML))) (LEX) (RETURN (AEVAL (LIST 'COSH A))))) 
(PUT 'CSCHRD 'NUMBER-OF-ARGS 0) 
(FLAG '(CSCHRD) 'OPFN) 
(PUT 'CSCHRD 'DEFINED-ON-LINE '967) 
(PUT 'CSCHRD 'DEFINED-IN-FILE 'MATHML/MATHML.RED) 
(PUT 'CSCHRD 'PROCEDURE_TYPE '(ARROW UNIT GENERAL)) 
(DE CSCHRD NIL
    (PROG (A) (SETQ A (AEVAL (MATHML))) (LEX) (RETURN (AEVAL (LIST 'CSCH A))))) 
(PUT 'ARCCOSRD 'NUMBER-OF-ARGS 0) 
(FLAG '(ARCCOSRD) 'OPFN) 
(PUT 'ARCCOSRD 'DEFINED-ON-LINE '974) 
(PUT 'ARCCOSRD 'DEFINED-IN-FILE 'MATHML/MATHML.RED) 
(PUT 'ARCCOSRD 'PROCEDURE_TYPE '(ARROW UNIT GENERAL)) 
(DE ARCCOSRD NIL
    (PROG (A) (SETQ A (AEVAL (MATHML))) (LEX) (RETURN (AEVAL (LIST 'ACOS A))))) 
(PUT 'TANRD 'NUMBER-OF-ARGS 0) 
(FLAG '(TANRD) 'OPFN) 
(PUT 'TANRD 'DEFINED-ON-LINE '981) 
(PUT 'TANRD 'DEFINED-IN-FILE 'MATHML/MATHML.RED) 
(PUT 'TANRD 'PROCEDURE_TYPE '(ARROW UNIT GENERAL)) 
(DE TANRD NIL
    (PROG (A) (SETQ A (AEVAL (MATHML))) (LEX) (RETURN (AEVAL (LIST 'TAN A))))) 
(PUT 'COTRD 'NUMBER-OF-ARGS 0) 
(FLAG '(COTRD) 'OPFN) 
(PUT 'COTRD 'DEFINED-ON-LINE '988) 
(PUT 'COTRD 'DEFINED-IN-FILE 'MATHML/MATHML.RED) 
(PUT 'COTRD 'PROCEDURE_TYPE '(ARROW UNIT GENERAL)) 
(DE COTRD NIL
    (PROG (A) (SETQ A (AEVAL (MATHML))) (LEX) (RETURN (AEVAL (LIST 'COT A))))) 
(PUT 'TANHRD 'NUMBER-OF-ARGS 0) 
(FLAG '(TANHRD) 'OPFN) 
(PUT 'TANHRD 'DEFINED-ON-LINE '995) 
(PUT 'TANHRD 'DEFINED-IN-FILE 'MATHML/MATHML.RED) 
(PUT 'TANHRD 'PROCEDURE_TYPE '(ARROW UNIT GENERAL)) 
(DE TANHRD NIL
    (PROG (A) (SETQ A (AEVAL (MATHML))) (LEX) (RETURN (AEVAL (LIST 'TANH A))))) 
(PUT 'COTHRD 'NUMBER-OF-ARGS 0) 
(FLAG '(COTHRD) 'OPFN) 
(PUT 'COTHRD 'DEFINED-ON-LINE '1002) 
(PUT 'COTHRD 'DEFINED-IN-FILE 'MATHML/MATHML.RED) 
(PUT 'COTHRD 'PROCEDURE_TYPE '(ARROW UNIT GENERAL)) 
(DE COTHRD NIL
    (PROG (A) (SETQ A (AEVAL (MATHML))) (LEX) (RETURN (AEVAL (LIST 'COTH A))))) 
(PUT 'ARCTANRD 'NUMBER-OF-ARGS 0) 
(FLAG '(ARCTANRD) 'OPFN) 
(PUT 'ARCTANRD 'DEFINED-ON-LINE '1009) 
(PUT 'ARCTANRD 'DEFINED-IN-FILE 'MATHML/MATHML.RED) 
(PUT 'ARCTANRD 'PROCEDURE_TYPE '(ARROW UNIT GENERAL)) 
(DE ARCTANRD NIL
    (PROG (A) (SETQ A (AEVAL (MATHML))) (LEX) (RETURN (AEVAL (LIST 'ATAN A))))) 
(PUT 'CONDITIONRD 'NUMBER-OF-ARGS 0) 
(PUT 'CONDITIONRD 'DEFINED-ON-LINE '1018) 
(PUT 'CONDITIONRD 'DEFINED-IN-FILE 'MATHML/MATHML.RED) 
(PUT 'CONDITIONRD 'PROCEDURE_TYPE '(ARROW UNIT GENERAL)) 
(DE CONDITIONRD NIL
    (PROG (A)
      (LEX)
      (COND ((EQUAL CHAR '(R E L N)) (SETQ A (RELNRD))) (T (SETQ A (MATHML))))
      (LEX)
      (RETURN A))) 
(PUT 'RELNRD 'NUMBER-OF-ARGS 0) 
(PUT 'RELNRD 'DEFINED-ON-LINE '1029) 
(PUT 'RELNRD 'DEFINED-IN-FILE 'MATHML/MATHML.RED) 
(PUT 'RELNRD 'PROCEDURE_TYPE '(ARROW UNIT GENERAL)) 
(DE RELNRD NIL
    (PROG (A AA)
      (LEX)
      (COND
       ((SETQ AA (ASSOC (COMPRESS* CHAR) RDRELN*))
        (SETQ A (APPLY (FIRST (CDR AA)) (REST (CDR AA)))))
       (T (ERRORML (COMPRESS* CHAR) 18)))
      (RETURN (COND ((EQUAL A T) T) ((NULL A) 'FALSE) (T A))))) 
(PUT 'RELATIONRD 'NUMBER-OF-ARGS 1) 
(PUT 'RELATIONRD 'DEFINED-ON-LINE '1039) 
(PUT 'RELATIONRD 'DEFINED-IN-FILE 'MATHML/MATHML.RED) 
(PUT 'RELATIONRD 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE RELATIONRD (TYPE)
    (PROG (ARGS A)
      (SETQ ARGS (STATS_GETARGS))
      (COND ((EQUAL TYPE ''EQ) (PROGN (SETQ A (CONS 'EQUAL ARGS))))
            ((EQUAL TYPE ''LT) (PROGN (SETQ A (CONS 'LESSP ARGS))))
            ((EQUAL TYPE ''GT) (PROGN (SETQ A (CONS 'GREATERP ARGS))))
            ((EQUAL TYPE ''SUBSET) (PROGN (SETQ A (SUBSETRD ARGS))))
            ((EQUAL TYPE ''PRSUBSET) (PROGN (SETQ A (PRSUBSETRD ARGS))))
            ((EQUAL TYPE ''GEQ) (SETQ A (CONS 'GEQ ARGS)))
            ((EQUAL TYPE ''LEQ) (SETQ A (CONS 'LEQ ARGS))))
      (RETURN (COND ((EQUAL A T) T) ((EQUAL A NIL) 'FALSE) (T A))))) 
(PUT 'NOTSUBSETRD 'NUMBER-OF-ARGS 0) 
(PUT 'NOTSUBSETRD 'DEFINED-ON-LINE '1064) 
(PUT 'NOTSUBSETRD 'DEFINED-IN-FILE 'MATHML/MATHML.RED) 
(PUT 'NOTSUBSETRD 'PROCEDURE_TYPE '(ARROW UNIT GENERAL)) 
(DE NOTSUBSETRD NIL
    (PROG (B1 B2)
      (SETQ B1 (MATHML))
      (SETQ B2 (MATHML))
      (LEX)
      (COND
       ((AND (EQUAL B1 (REVAL1 B1 T)) (EQUAL B2 (REVAL1 B2 T)))
        (RETURN (LIST 'NOTSUBSET B1 B2))))
      (COND
       ((EQUAL B1 (REVAL1 B1 T))
        (RETURN (LIST 'NOTSUBSET B1 (CONS 'SET (CDR (REVAL1 B2 T)))))))
      (COND
       ((EQUAL B2 (REVAL1 B2 T))
        (RETURN (LIST 'NOTSUBSET (CONS 'SET (CDR (REVAL1 B1 T))) B2))))
      (COND
       ((EQUAL (INTERSECTION (CDR (REVAL1 B1 T)) (CDR (REVAL1 B2 T))) NIL)
        (RETURN T))
       (T (RETURN NIL))))) 
(PUT 'NOTPRSUBSETRD 'NUMBER-OF-ARGS 0) 
(PUT 'NOTPRSUBSETRD 'DEFINED-ON-LINE '1081) 
(PUT 'NOTPRSUBSETRD 'DEFINED-IN-FILE 'MATHML/MATHML.RED) 
(PUT 'NOTPRSUBSETRD 'PROCEDURE_TYPE '(ARROW UNIT GENERAL)) 
(DE NOTPRSUBSETRD NIL
    (PROG (B1 B2)
      (SETQ B1 (MATHML))
      (SETQ B2 (MATHML))
      (LEX)
      (COND
       ((AND (EQUAL B1 (REVAL1 B1 T)) (EQUAL B2 (REVAL1 B2 T)))
        (RETURN (LIST 'NOTPRSUBSET B1 B2))))
      (COND
       ((EQUAL B1 (REVAL1 B1 T))
        (RETURN (LIST 'NOTPRSUBSET B1 (CONS 'SET (CDR (REVAL1 B2 T)))))))
      (COND
       ((EQUAL B2 (REVAL1 B2 T))
        (RETURN (LIST 'NOTPRSUBSET (CONS 'SET (CDR (REVAL1 B1 T))) B2))))
      (COND ((EQUAL (REVAL1 B1 T) (REVAL1 B2 T)) (RETURN T)))
      (COND
       ((EQUAL (INTERSECTION (CDR (REVAL1 B1 T)) (CDR (REVAL1 B2 T))) NIL)
        (RETURN T))
       (T (RETURN NIL))))) 
(PUT 'SUBSETRD 'NUMBER-OF-ARGS 1) 
(PUT 'SUBSETRD 'DEFINED-ON-LINE '1098) 
(PUT 'SUBSETRD 'DEFINED-IN-FILE 'MATHML/MATHML.RED) 
(PUT 'SUBSETRD 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE SUBSETRD (SETS)
    (PROG (ARGS VAL)
      (SETQ ARGS SETS)
      (SETQ VAL T)
      (PROG ()
       WHILELABEL
        (COND ((NOT (GREATERP (LENGTH ARGS) 1)) (RETURN NIL)))
        (PROGN
         (COND
          ((NUMBERP (REVAL1 (CAR ARGS) T)) (ERRORML (REVAL1 (CAR ARGS) T) 5)))
         (COND
          ((OR (EQUAL (CAR ARGS) (REVAL1 (CAR ARGS) T))
               (EQUAL (CADR ARGS) (REVAL1 (CADR ARGS) T)))
           (PROGN
            (SETQ ARGS 'NIL)
            (SETQ VAL (CONS 'SUBSET (EVAL_LIST_SETS SETS)))))
          (T
           (PROGN
            (SETQ VAL
                    (AND VAL
                         (ALG_SUBSET (REVAL1 (CAR ARGS) T)
                          (REVAL1 (CADR ARGS) T))))
            (SETQ ARGS (CDR ARGS))))))
        (GO WHILELABEL))
      (RETURN VAL))) 
(PUT 'ALG_SUBSET 'NUMBER-OF-ARGS 2) 
(PUT 'ALG_SUBSET 'DEFINED-ON-LINE '1117) 
(PUT 'ALG_SUBSET 'DEFINED-IN-FILE 'MATHML/MATHML.RED) 
(PUT 'ALG_SUBSET 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE ALG_SUBSET (A B)
    (PROG ()
      (COND ((EQUAL A B) (RETURN T)) ((EQUAL (SETDIFF A B) NIL) (RETURN T))
            (T (RETURN NIL))))) 
(PUT 'PRSUBSETRD 'NUMBER-OF-ARGS 1) 
(PUT 'PRSUBSETRD 'DEFINED-ON-LINE '1125) 
(PUT 'PRSUBSETRD 'DEFINED-IN-FILE 'MATHML/MATHML.RED) 
(PUT 'PRSUBSETRD 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE PRSUBSETRD (SETS)
    (PROG (ARGS VAL)
      (SETQ VAL T)
      (PROG ()
       WHILELABEL
        (COND ((NOT (GREATERP (LENGTH ARGS) 1)) (RETURN NIL)))
        (PROGN
         (COND
          ((OR (EQUAL (CAR ARGS) (REVAL1 (CAR ARGS) T))
               (EQUAL (CADR ARGS) (REVAL1 (CADR ARGS) T)))
           (PROGN
            (SETQ ARGS 'NIL)
            (SETQ VAL (CONS 'PRSUBSET (EVAL_LIST_SETS SETS)))))
          (T
           (PROGN
            (SETQ VAL
                    (AND VAL
                         (ALG_PRSUBSET (REVAL1 (CAR ARGS) T)
                          (REVAL1 (CADR ARGS) T))))
            (SETQ ARGS (CDR ARGS))))))
        (GO WHILELABEL))
      (RETURN VAL))) 
(PUT 'ALG_PRSUBSET 'NUMBER-OF-ARGS 2) 
(PUT 'ALG_PRSUBSET 'DEFINED-ON-LINE '1138) 
(PUT 'ALG_PRSUBSET 'DEFINED-IN-FILE 'MATHML/MATHML.RED) 
(PUT 'ALG_PRSUBSET 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE ALG_PRSUBSET (A B)
    (PROG () (COND ((EQUAL (SETDIFF A B) NIL) (RETURN T)) (T (RETURN NIL))))) 
(PUT 'INRD 'NUMBER-OF-ARGS 0) 
(PUT 'INRD 'DEFINED-ON-LINE '1143) 
(PUT 'INRD 'DEFINED-IN-FILE 'MATHML/MATHML.RED) 
(PUT 'INRD 'PROCEDURE_TYPE '(ARROW UNIT GENERAL)) 
(DE INRD NIL
    (PROG (B1 B2)
      (SETQ B1 (MATHML))
      (SETQ B2 (MATHML))
      (LEX)
      (COND
       ((AND (EQUAL B2 (REVAL1 B2 T)) (ATOM B2))
        (PROGN
         (COND
          ((EQUAL B2 'N)
           (PROGN (COND ((FIXP B1) (RETURN T)) (T (RETURN NIL))))))
         (COND
          ((EQUAL B2 'R)
           (PROGN (COND ((NUMBERP B1) (RETURN T)) (T (RETURN NIL))))))
         (RETURN (LIST 'IN (REVAL1 B1 T) B2)))))
      (COND ((NEQ (MEMBER (REVAL1 B1 T) (REVAL1 B2 T)) NIL) (RETURN T))
            (T (RETURN NIL))))) 
(PUT 'NOTINRD 'NUMBER-OF-ARGS 0) 
(PUT 'NOTINRD 'DEFINED-ON-LINE '1158) 
(PUT 'NOTINRD 'DEFINED-IN-FILE 'MATHML/MATHML.RED) 
(PUT 'NOTINRD 'PROCEDURE_TYPE '(ARROW UNIT GENERAL)) 
(DE NOTINRD NIL
    (PROG (B1 B2)
      (SETQ B1 (MATHML))
      (SETQ B2 (MATHML))
      (LEX)
      (COND
       ((AND (EQUAL B2 (REVAL1 B2 T)) (ATOM B2))
        (PROGN
         (COND
          ((EQUAL B2 'N) (COND ((FIXP B1) (RETURN NIL)) (T (RETURN NIL)))))
         (COND
          ((EQUAL B2 'R) (COND ((NUMBERP B1) (RETURN NIL)) (T (RETURN NIL)))))
         (RETURN (LIST 'NOTIN (REVAL1 B1 T) B2)))))
      (COND ((NEQ (MEMBER (REVAL1 B1 T) (REVAL1 B2 T)) NIL) (RETURN NIL))
            (T (RETURN T))))) 
(PUT 'ALG_EQ 'NUMBER-OF-ARGS 1) 
(PUT 'ALG_EQ 'DEFINED-ON-LINE '1172) 
(PUT 'ALG_EQ 'DEFINED-IN-FILE 'MATHML/MATHML.RED) 
(PUT 'ALG_EQ 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE ALG_EQ (ARGS)
    (PROG () (CONSTANTS ARGS) (RETURN (ALG_EQ2 (EVAL_LIST ARGS))))) 
(PUT 'ALG_EQ2 'NUMBER-OF-ARGS 1) 
(PUT 'ALG_EQ2 'DEFINED-ON-LINE '1179) 
(PUT 'ALG_EQ2 'DEFINED-IN-FILE 'MATHML/MATHML.RED) 
(PUT 'ALG_EQ2 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE ALG_EQ2 (ARGS)
    (PROG ()
      (RETURN
       (COND ((EQUAL (LENGTH ARGS) 1) T)
             ((EQ (REVAL1 (CAR ARGS) T) (REVAL1 (CADR ARGS) T))
              (ALG_EQ2 (CDR ARGS))))))) 
(PUT 'ALG_NEQ 'NUMBER-OF-ARGS 1) 
(PUT 'ALG_NEQ 'DEFINED-ON-LINE '1186) 
(PUT 'ALG_NEQ 'DEFINED-IN-FILE 'MATHML/MATHML.RED) 
(PUT 'ALG_NEQ 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE ALG_NEQ (ARGS)
    (PROG () (CONSTANTS ARGS) (RETURN (ALG_NEQ2 (EVAL_LIST ARGS))))) 
(PUT 'ALG_NEQ2 'NUMBER-OF-ARGS 1) 
(PUT 'ALG_NEQ2 'DEFINED-ON-LINE '1192) 
(PUT 'ALG_NEQ2 'DEFINED-IN-FILE 'MATHML/MATHML.RED) 
(PUT 'ALG_NEQ2 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE ALG_NEQ2 (ARGS)
    (PROG ()
      (RETURN
       (COND ((EQUAL (LENGTH ARGS) 1) T)
             ((NEQ (REVAL1 (CAR ARGS) T) (REVAL1 (CADR ARGS) T))
              (ALG_NEQ2 (CDR ARGS))))))) 
(PUT 'ALG_LT 'NUMBER-OF-ARGS 1) 
(PUT 'ALG_LT 'DEFINED-ON-LINE '1199) 
(PUT 'ALG_LT 'DEFINED-IN-FILE 'MATHML/MATHML.RED) 
(PUT 'ALG_LT 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE ALG_LT (ARGS)
    (PROG ()
      (CONSTANTS ARGS)
      (COND
       ((EQUAL TEMP2 'STOP)
        (PROGN (SETQ TEMP2 NIL) (RETURN (APPEND (LIST 'LT) (EVAL_LIST ARGS)))))
       (T (RETURN (ALG_LT2 (EVAL_LIST ARGS))))))) 
(PUT 'ALG_LT2 'NUMBER-OF-ARGS 1) 
(PUT 'ALG_LT2 'DEFINED-ON-LINE '1207) 
(PUT 'ALG_LT2 'DEFINED-IN-FILE 'MATHML/MATHML.RED) 
(PUT 'ALG_LT2 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE ALG_LT2 (ARGS)
    (PROG ()
      (RETURN
       (COND ((EQUAL (LENGTH ARGS) 1) T)
             ((AND (NUMBERP (REVAL1 (CAR ARGS) T))
                   (NUMBERP (REVAL1 (CADR ARGS) T)))
              (PROGN
               (COND
                ((LESSP (REVAL1 (CAR ARGS) T) (REVAL1 (CADR ARGS) T))
                 (ALG_LT2 (CDR ARGS)))
                (T NIL))))
             (T (ERRORML "" 6)))))) 
(PUT 'ALG_GT 'NUMBER-OF-ARGS 1) 
(PUT 'ALG_GT 'DEFINED-ON-LINE '1220) 
(PUT 'ALG_GT 'DEFINED-IN-FILE 'MATHML/MATHML.RED) 
(PUT 'ALG_GT 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE ALG_GT (ARGS)
    (PROG ()
      (CONSTANTS ARGS)
      (COND
       ((EQUAL TEMP2 'STOP)
        (PROGN (SETQ TEMP2 NIL) (RETURN (APPEND (LIST 'GT) (EVAL_LIST ARGS)))))
       (T (RETURN (ALG_GT2 (EVAL_LIST ARGS))))))) 
(PUT 'ALG_GT2 'NUMBER-OF-ARGS 1) 
(PUT 'ALG_GT2 'DEFINED-ON-LINE '1228) 
(PUT 'ALG_GT2 'DEFINED-IN-FILE 'MATHML/MATHML.RED) 
(PUT 'ALG_GT2 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE ALG_GT2 (ARGS)
    (PROG ()
      (RETURN
       (COND ((EQUAL (LENGTH ARGS) 1) T)
             ((AND (NUMBERP (REVAL1 (CAR ARGS) T))
                   (NUMBERP (REVAL1 (CADR ARGS) T)))
              (PROGN
               (COND
                ((GREATERP (REVAL1 (CAR ARGS) T) (REVAL1 (CADR ARGS) T))
                 (ALG_GT2 (CDR ARGS)))
                (T NIL))))
             (T (ERRORML "" 6)))))) 
(PUT 'ALG_GEQ 'NUMBER-OF-ARGS 1) 
(PUT 'ALG_GEQ 'DEFINED-ON-LINE '1239) 
(PUT 'ALG_GEQ 'DEFINED-IN-FILE 'MATHML/MATHML.RED) 
(PUT 'ALG_GEQ 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE ALG_GEQ (ARGS)
    (PROG ()
      (CONSTANTS ARGS)
      (COND
       ((EQUAL TEMP2 'STOP)
        (PROGN
         (SETQ TEMP2 NIL)
         (RETURN (APPEND (LIST 'G_EQ) (EVAL_LIST ARGS)))))
       (T (RETURN (ALG_GEQ2 (EVAL_LIST ARGS))))))) 
(PUT 'ALG_GEQ2 'NUMBER-OF-ARGS 1) 
(PUT 'ALG_GEQ2 'DEFINED-ON-LINE '1247) 
(PUT 'ALG_GEQ2 'DEFINED-IN-FILE 'MATHML/MATHML.RED) 
(PUT 'ALG_GEQ2 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE ALG_GEQ2 (ARGS)
    (PROG ()
      (RETURN
       (COND ((EQUAL (LENGTH ARGS) 1) T)
             ((AND (NUMBERP (REVAL1 (CAR ARGS) T))
                   (NUMBERP (REVAL1 (CADR ARGS) T)))
              (PROGN
               (COND
                ((GEQ (REVAL1 (CAR ARGS) T) (REVAL1 (CADR ARGS) T))
                 (ALG_GEQ2 (CDR ARGS)))
                (T NIL))))
             (T (ERRORML "" 6)))))) 
(PUT 'ALG_LEQ 'NUMBER-OF-ARGS 1) 
(PUT 'ALG_LEQ 'DEFINED-ON-LINE '1258) 
(PUT 'ALG_LEQ 'DEFINED-IN-FILE 'MATHML/MATHML.RED) 
(PUT 'ALG_LEQ 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE ALG_LEQ (ARGS)
    (PROG ()
      (CONSTANTS ARGS)
      (COND
       ((EQUAL TEMP2 'STOP)
        (PROGN
         (SETQ TEMP2 NIL)
         (RETURN (APPEND (LIST 'L_EQ) (EVAL_LIST ARGS)))))
       (T (RETURN (ALG_LEQ2 (EVAL_LIST ARGS))))))) 
(PUT 'ALG_LEQ2 'NUMBER-OF-ARGS 1) 
(PUT 'ALG_LEQ2 'DEFINED-ON-LINE '1266) 
(PUT 'ALG_LEQ2 'DEFINED-IN-FILE 'MATHML/MATHML.RED) 
(PUT 'ALG_LEQ2 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE ALG_LEQ2 (ARGS)
    (PROG ()
      (RETURN
       (COND ((EQUAL (LENGTH ARGS) 1) T)
             ((AND (NUMBERP (REVAL1 (CAR ARGS) T))
                   (NUMBERP (REVAL1 (CADR ARGS) T)))
              (PROGN
               (COND
                ((LEQ (REVAL1 (CAR ARGS) T) (REVAL1 (CADR ARGS) T))
                 (ALG_LEQ2 (CDR ARGS)))
                (T NIL))))
             (T (ERRORML "" 6)))))) 
(PUT 'TENDSTORD 'NUMBER-OF-ARGS 0) 
(PUT 'TENDSTORD 'DEFINED-ON-LINE '1279) 
(PUT 'TENDSTORD 'DEFINED-IN-FILE 'MATHML/MATHML.RED) 
(PUT 'TENDSTORD 'PROCEDURE_TYPE '(ARROW UNIT GENERAL)) 
(DE TENDSTORD NIL
    (PROG (ATTR ARG1 ARG2)
      (COND
       ((NEQ (INTERSECTION ATTS '(T Y P E)) NIL)
        (SETQ ATTR (SEARCH_ATT ATTS '(T Y P E))))
       (T (SETQ ATTR NIL)))
      (SETQ ARG1 (MATHML))
      (SETQ ARG2 (MATHML))
      (LEX)
      (RETURN (LIST ATTR ARG2)))) 
(PUT 'LIMITRD 'NUMBER-OF-ARGS 0) 
(PUT 'LIMITRD 'DEFINED-ON-LINE '1293) 
(PUT 'LIMITRD 'DEFINED-IN-FILE 'MATHML/MATHML.RED) 
(PUT 'LIMITRD 'PROCEDURE_TYPE '(ARROW UNIT GENERAL)) 
(DE LIMITRD NIL
    (PROG (VAR CONDI LOW EXP)
      (LEX)
      (COND
       ((EQUAL CHAR '(B V A R))
        (PROGN
         (SETQ VAR (BVARRD))
         (COND ((EQN (CADR VAR) 1) (SETQ VAR (CAR VAR)))
               (T (ERRORML "<degree>" 8)))
         (LEX)))
       (T (SETQ VAR NIL)))
      (COND
       ((EQUAL CHAR '(L O W L I M I T)) (PROGN (SETQ LOW (LOWLIMITRD)) (LEX)))
       ((EQUAL CHAR '(C O N D I T I O N))
        (PROGN
         (SETQ CONDI (CONDITIONRD))
         (COND ((NEQ CHAR '(/ C O N D I T I O N)) (ERRORML "</condition>" 2)))
         (LEX)))
       (T (SETQ CONDI NIL)))
      (SETQ EXP (MATHML2))
      (LEX)
      (COND ((EQUAL CONDI NIL) (RETURN (ALG_LIMIT EXP VAR LOW 'NORM))))
      (COND
       ((EQUAL LOW NIL)
        (COND
         ((EQUAL (CAR CONDI) '(A B O V E))
          (RETURN (ALG_LIMIT EXP VAR (CADR CONDI) 'PLUS)))
         (T (RETURN (ALG_LIMIT EXP VAR (CADR CONDI) 'MIN)))))))) 
(PUT 'ALG_LIMIT 'NUMBER-OF-ARGS 4) 
(FLAG '(ALG_LIMIT) 'OPFN) 
(PUT 'ALG_LIMIT 'DEFINED-ON-LINE '1327) 
(PUT 'ALG_LIMIT 'DEFINED-IN-FILE 'MATHML/MATHML.RED) 
(PUT 'ALG_LIMIT 'PROCEDURE_TYPE
     '(ARROW (TIMES GENERAL GENERAL GENERAL GENERAL) GENERAL)) 
(DE ALG_LIMIT (EXP VAR TENDTO TYPE)
    (PROG ()
      (COND
       ((EVALEQUAL (AEVAL TYPE) (AEVAL 'NORM))
        (RETURN (AEVAL (LIST 'LIMIT EXP VAR TENDTO)))))
      (COND
       ((EVALEQUAL (AEVAL TYPE) (AEVAL 'PLUS))
        (RETURN (AEVAL (LIST 'LIMIT+ EXP VAR TENDTO)))))
      (COND
       ((EVALEQUAL (AEVAL TYPE) (AEVAL 'MIN))
        (RETURN (AEVAL (LIST 'LIMIT- EXP VAR TENDTO))))))) 
(PUT 'SUMRD 'NUMBER-OF-ARGS 0) 
(PUT 'SUMRD 'DEFINED-ON-LINE '1336) 
(PUT 'SUMRD 'DEFINED-IN-FILE 'MATHML/MATHML.RED) 
(PUT 'SUMRD 'PROCEDURE_TYPE '(ARROW UNIT GENERAL)) 
(DE SUMRD NIL
    (PROG (SVAR LOW UPPER EXPRESS RES)
      (SETQ SVAR NIL)
      (SETQ LOW NIL)
      (SETQ UPPER NIL)
      (SETQ EXPRESS NIL)
      (SETQ RES NIL)
      (LEX)
      (COND
       ((EQUAL CHAR '(B V A R))
        (PROGN
         (SETQ SVAR (BVARRD))
         (COND ((EQN (CADR SVAR) 1) (SETQ SVAR (CAR SVAR)))
               (T (ERRORML "<degree>" 7)))
         (LEX)))
       (T (ERRORML "<bvar>" 9)))
      (COND
       ((EQUAL CHAR '(L O W L I M I T))
        (PROGN
         (SETQ LOW (LOWLIMITRD))
         (LEX)
         (COND
          ((EQUAL CHAR '(U P L I M I T))
           (PROGN (SETQ UPPER (UPPERLIMITRD)) (LEX)))
          (T (ERRORML "<uplimit>" 10)))))
       ((EQUAL CHAR '(I N T E R V A L))
        (PROGN
         (SETQ RES (INTERVALRD))
         (LEX)
         (SETQ LOW (CAR RES))
         (SETQ UPPER (CADR RES))))
       (T (ERRORML "<lowlimit> or <interval>" 11)))
      (SETQ EXPRESS (MATHML2))
      (LEX)
      (RETURN (AEVAL (LIST 'SUM EXPRESS SVAR LOW UPPER))))) 
(PUT 'ALG_SUM 'NUMBER-OF-ARGS 3) 
(FLAG '(ALG_SUM) 'OPFN) 
(PUT 'ALG_SUM 'DEFINED-ON-LINE '1369) 
(PUT 'ALG_SUM 'DEFINED-IN-FILE 'MATHML/MATHML.RED) 
(PUT 'ALG_SUM 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL GENERAL) GENERAL)) 
(DE ALG_SUM (LOW UPPER FORMU)
    (PROG (TEMP VAR2)
     ALGEBRAIC
      (SETQ TEMP (AEVAL 0))
      (SETQ VAR2 (AEVAL SVAR))
      (PROG (TT)
        (SETQ TT (AEVAL* LOW))
       LAB
        (COND ((|AMINUSP:| (LIST 'DIFFERENCE (AEVAL* UPPER) TT)) (RETURN NIL)))
        (PROGN
         (AEVAL* (LIST 'SET VAR2 TT))
         (SETQ TEMP (AEVAL* (LIST 'PLUS TEMP FORMU)))
         (AEVAL* (CLEAR (LIST SVAR)))
         (SETQ VAR2 (AEVAL* SVAR)))
        (SETQ TT
                ((LAMBDA (FORALL-RESULT) (AEVAL* (LIST 'PLUS FORALL-RESULT 1)))
                 TT))
        (GO LAB))
     SYMBOLIC
      (RETURN (AEVAL TEMP)))) 
(PUT 'PRODUCTRD 'NUMBER-OF-ARGS 0) 
(PUT 'PRODUCTRD 'DEFINED-ON-LINE '1386) 
(PUT 'PRODUCTRD 'DEFINED-IN-FILE 'MATHML/MATHML.RED) 
(PUT 'PRODUCTRD 'PROCEDURE_TYPE '(ARROW UNIT GENERAL)) 
(DE PRODUCTRD NIL
    (PROG (PVAR LOW UPPER PEXPRESS RES)
      (LEX)
      (COND
       ((EQUAL CHAR '(B V A R))
        (PROGN
         (SETQ PVAR (BVARRD))
         (COND ((EQN (CADR PVAR) 1) (SETQ PVAR (CAR PVAR)))
               (T (ERRORML "<degree>" 12)))
         (LEX)))
       (T (ERRORML "<bvar>" 9)))
      (COND
       ((EQUAL CHAR '(L O W L I M I T))
        (PROGN
         (SETQ LOW (LOWLIMITRD))
         (LEX)
         (COND
          ((EQUAL CHAR '(U P L I M I T))
           (PROGN (SETQ UPPER (UPPERLIMITRD)) (LEX)))
          (T (ERRORML "<uplimit>" 10)))))
       ((EQUAL CHAR '(I N T E R V A L))
        (PROGN
         (SETQ RES (INTERVALRD))
         (LEX)
         (SETQ LOW (CAR RES))
         (SETQ UPPER (CADR RES))))
       (T (ERRORML "<lowlimit> or <interval>" 11)))
      (SETQ PEXPRESS (MATHML2))
      (LEX)
      (RETURN (AEVAL (LIST 'PROD PEXPRESS PVAR LOW UPPER))))) 
(PUT 'ALG_PROD 'NUMBER-OF-ARGS 3) 
(FLAG '(ALG_PROD) 'OPFN) 
(PUT 'ALG_PROD 'DEFINED-ON-LINE '1420) 
(PUT 'ALG_PROD 'DEFINED-IN-FILE 'MATHML/MATHML.RED) 
(PUT 'ALG_PROD 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL GENERAL) GENERAL)) 
(DE ALG_PROD (LOW UPPER FORMU)
    (PROG (TEMP VAR2)
     ALGEBRAIC
      (SETQ TEMP (AEVAL 1))
      (SETQ VAR2 (AEVAL PVAR))
      (PROG (TT)
        (SETQ TT (AEVAL* LOW))
       LAB
        (COND ((|AMINUSP:| (LIST 'DIFFERENCE (AEVAL* UPPER) TT)) (RETURN NIL)))
        (PROGN
         (AEVAL* (LIST 'SET VAR2 TT))
         (SETQ TEMP (AEVAL* (LIST 'TIMES TEMP FORMU)))
         (AEVAL* (CLEAR (LIST PVAR)))
         (SETQ VAR2 (AEVAL* PVAR)))
        (SETQ TT
                ((LAMBDA (FORALL-RESULT) (AEVAL* (LIST 'PLUS FORALL-RESULT 1)))
                 TT))
        (GO LAB))
     SYMBOLIC
      (RETURN (AEVAL TEMP)))) 
(PUT 'PARTIALDIFFRD 'NUMBER-OF-ARGS 0) 
(PUT 'PARTIALDIFFRD 'DEFINED-ON-LINE '1436) 
(PUT 'PARTIALDIFFRD 'DEFINED-IN-FILE 'MATHML/MATHML.RED) 
(PUT 'PARTIALDIFFRD 'PROCEDURE_TYPE '(ARROW UNIT GENERAL)) 
(DE PARTIALDIFFRD NIL
    (PROG (RES BVAR EXPRESS)
      (LEX)
      (SETQ BVAR (GETARGSRD))
      (SETQ EXPRESS (MATHML2))
      (LEX)
      (SETQ RES (DIFFERENTIATE EXPRESS BVAR))
      (RETURN RES))) 
(PUT 'DIFFERENTIATE 'NUMBER-OF-ARGS 2) 
(PUT 'DIFFERENTIATE 'DEFINED-ON-LINE '1446) 
(PUT 'DIFFERENTIATE 'DEFINED-IN-FILE 'MATHML/MATHML.RED) 
(PUT 'DIFFERENTIATE 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE DIFFERENTIATE (EXPRESS BVAR)
    (PROG (TEMP DIFFED)
      (RETURN
       (COND ((EQN (LENGTH BVAR) 0) EXPRESS)
             (T
              (PROGN
               (SETQ TEMP (CAR BVAR))
               (SETQ DIFFED (ALG_DF EXPRESS (CAR TEMP) (CADR TEMP)))
               (DIFFERENTIATE DIFFED (CDR BVAR)))))))) 
(PUT 'GETARGSRD 'NUMBER-OF-ARGS 0) 
(PUT 'GETARGSRD 'DEFINED-ON-LINE '1460) 
(PUT 'GETARGSRD 'DEFINED-IN-FILE 'MATHML/MATHML.RED) 
(PUT 'GETARGSRD 'PROCEDURE_TYPE '(ARROW UNIT GENERAL)) 
(DE GETARGSRD NIL
    (PROG (A)
      (COND
       ((EQUAL CHAR '(B V A R))
        (PROGN (SETQ A (BVARRD)) (LEX) (RETURN (CONS A (GETARGSRD)))))))) 
(PUT 'DIFFRD 'NUMBER-OF-ARGS 0) 
(PUT 'DIFFRD 'DEFINED-ON-LINE '1474) 
(PUT 'DIFFRD 'DEFINED-IN-FILE 'MATHML/MATHML.RED) 
(PUT 'DIFFRD 'PROCEDURE_TYPE '(ARROW UNIT GENERAL)) 
(DE DIFFRD NIL
    (PROG (BVAR DEGREE EXPRESS RES)
      (LEX)
      (COND
       ((EQUAL CHAR '(B V A R))
        (PROGN
         (SETQ BVAR (BVARRD))
         (SETQ DEGREE (CADR BVAR))
         (SETQ BVAR (CAR BVAR))
         (LEX)))
       (T (PROGN (SETQ BVAR NIL) (SETQ DEGREE NIL))))
      (SETQ EXPRESS (MATHML2))
      (LEX)
      (SETQ RES (ALG_DF EXPRESS BVAR DEGREE))
      (RETURN RES))) 
(PUT 'ALG_DF 'NUMBER-OF-ARGS 3) 
(FLAG '(ALG_DF) 'OPFN) 
(PUT 'ALG_DF 'DEFINED-ON-LINE '1488) 
(PUT 'ALG_DF 'DEFINED-IN-FILE 'MATHML/MATHML.RED) 
(PUT 'ALG_DF 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL GENERAL) GENERAL)) 
(DE ALG_DF (A B C) (PROG () (RETURN (AEVAL (LIST 'DF A B C))))) 
(PUT 'INTRD 'NUMBER-OF-ARGS 0) 
(PUT 'INTRD 'DEFINED-ON-LINE '1496) 
(PUT 'INTRD 'DEFINED-IN-FILE 'MATHML/MATHML.RED) 
(PUT 'INTRD 'PROCEDURE_TYPE '(ARROW UNIT GENERAL)) 
(DE INTRD NIL
    (PROG (BVAR LOW UPPER INT EXP)
      (LEX)
      (COND
       ((EQUAL CHAR '(B V A R))
        (PROGN
         (SETQ BVAR (BVARRD))
         (COND ((EQN (CADR BVAR) 1) (SETQ BVAR (CAR BVAR)))
               (T (ERRORML "" 13)))
         (LEX)))
       (T (ERRORML "<bvar>" 14)))
      (COND
       ((EQUAL CHAR '(L O W L I M I T)) (PROGN (SETQ LOW (LOWLIMITRD)) (LEX)))
       (T (SETQ LOW NIL)))
      (COND
       ((EQUAL CHAR '(U P L I M I T))
        (PROGN (SETQ UPPER (UPPERLIMITRD)) (LEX)))
       (T (SETQ UPPER NIL)))
      (COND
       ((EQUAL CHAR '(I N T E R V A L))
        (PROGN
         (SETQ INT (INTERVALRD))
         (SETQ LOW (CAR INT))
         (SETQ UPPER (CADR INT))
         (LEX)))
       (T (SETQ INT NIL)))
      (SETQ EXP (MATHML2))
      (LEX)
      (RETURN (ALG_INT EXP BVAR LOW UPPER)))) 
(PUT 'ALG_INT 'NUMBER-OF-ARGS 4) 
(FLAG '(ALG_INT) 'OPFN) 
(PUT 'ALG_INT 'DEFINED-ON-LINE '1527) 
(PUT 'ALG_INT 'DEFINED-IN-FILE 'MATHML/MATHML.RED) 
(PUT 'ALG_INT 'PROCEDURE_TYPE
     '(ARROW (TIMES GENERAL GENERAL GENERAL GENERAL) GENERAL)) 
(DE ALG_INT (EXP BVAR LOW UPPER)
    (PROG (RES)
      (COND
       ((AND (EVALEQUAL (AEVAL LOW) (AEVAL 'NIL))
             (EVALEQUAL (AEVAL UPPER) (AEVAL 'NIL)))
        (SETQ RES (AEVAL (LIST 'INT EXP BVAR))))
       (T (SETQ RES (AEVAL (LIST 'INT EXP BVAR LOW UPPER)))))
      (RETURN (AEVAL RES)))) 
(PUT 'BVARRD 'NUMBER-OF-ARGS 0) 
(PUT 'BVARRD 'DEFINED-ON-LINE '1537) 
(PUT 'BVARRD 'DEFINED-IN-FILE 'MATHML/MATHML.RED) 
(PUT 'BVARRD 'PROCEDURE_TYPE '(ARROW UNIT GENERAL)) 
(DE BVARRD NIL
    (PROG (VAR DEG)
      (LEX)
      (COND ((EQUAL CHAR '(D E G R E E)) (ERRORML "<bvar>" 15)))
      (SETQ VAR (MATHML2))
      (LEX)
      (COND
       ((EQUAL CHAR '(D E G R E E))
        (PROGN
         (SETQ DEG (MATHML))
         (LEX)
         (COND ((NEQ CHAR '(/ D E G R E E)) (ERROR "</degree>" 2)))
         (LEX)))
       (T (SETQ DEG 1)))
      (COND ((EQUAL CHAR '(/ B V A R)) (RETURN (LIST VAR DEG)))
            (T (ERRORML "</bvar>" 2))))) 
(PUT 'LOWLIMITRD 'NUMBER-OF-ARGS 0) 
(PUT 'LOWLIMITRD 'DEFINED-ON-LINE '1557) 
(PUT 'LOWLIMITRD 'DEFINED-IN-FILE 'MATHML/MATHML.RED) 
(PUT 'LOWLIMITRD 'PROCEDURE_TYPE '(ARROW UNIT GENERAL)) 
(DE LOWLIMITRD NIL
    (PROG (LOWLIMIT)
      (SETQ LOWLIMIT (MATHML))
      (LEX)
      (COND ((EQUAL CHAR '(/ L O W L I M I T)) (RETURN LOWLIMIT))
            (T (ERRORML "</lowlimit>" 2))))) 
(PUT 'UPPERLIMITRD 'NUMBER-OF-ARGS 0) 
(PUT 'UPPERLIMITRD 'DEFINED-ON-LINE '1565) 
(PUT 'UPPERLIMITRD 'DEFINED-IN-FILE 'MATHML/MATHML.RED) 
(PUT 'UPPERLIMITRD 'PROCEDURE_TYPE '(ARROW UNIT GENERAL)) 
(DE UPPERLIMITRD NIL
    (PROG (UPPERLIMIT)
      (SETQ UPPERLIMIT (MATHML))
      (LEX)
      (COND ((EQUAL CHAR '(/ U P L I M I T)) (RETURN UPPERLIMIT))
            (T (ERRORML "</uplimit>" 2))))) 
(PUT 'INTERVALRD 'NUMBER-OF-ARGS 0) 
(PUT 'INTERVALRD 'DEFINED-ON-LINE '1574) 
(PUT 'INTERVALRD 'DEFINED-IN-FILE 'MATHML/MATHML.RED) 
(PUT 'INTERVALRD 'PROCEDURE_TYPE '(ARROW UNIT GENERAL)) 
(DE INTERVALRD NIL
    (PROG (L U)
      (SETQ L (MATHML))
      (SETQ U (MATHML))
      (LEX)
      (COND ((EQUAL CHAR '(/ I N T E R V A L)) (RETURN (LIST L U)))
            (T (ERRORML "</interval>" 2))))) 
(PUT 'LNRD 'NUMBER-OF-ARGS 0) 
(PUT 'LNRD 'DEFINED-ON-LINE '1585) 
(PUT 'LNRD 'DEFINED-IN-FILE 'MATHML/MATHML.RED) 
(PUT 'LNRD 'PROCEDURE_TYPE '(ARROW UNIT GENERAL)) 
(DE LNRD NIL (PROG (A) (SETQ A (ALG_LN (MATHML))) (LEX) (RETURN A))) 
(PUT 'ALG_LN 'NUMBER-OF-ARGS 1) 
(FLAG '(ALG_LN) 'OPFN) 
(PUT 'ALG_LN 'DEFINED-ON-LINE '1592) 
(PUT 'ALG_LN 'DEFINED-IN-FILE 'MATHML/MATHML.RED) 
(PUT 'ALG_LN 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE ALG_LN (A) (PROG () (RETURN (AEVAL (LIST 'LN A))))) 
(PUT 'LOGRD 'NUMBER-OF-ARGS 0) 
(PUT 'LOGRD 'DEFINED-ON-LINE '1597) 
(PUT 'LOGRD 'DEFINED-IN-FILE 'MATHML/MATHML.RED) 
(PUT 'LOGRD 'PROCEDURE_TYPE '(ARROW UNIT GENERAL)) 
(DE LOGRD NIL
    (PROG (A A1 BASE)
      (SETQ BASE NIL)
      (LEX)
      (COND
       ((EQUAL CHAR '(L O G B A S E)) (PROGN (SETQ BASE (LOGBASERD)) (LEX))))
      (SETQ A1 (MATHML2))
      (LEX)
      (SETQ A (ALG_LOG A1 BASE))
      (RETURN A))) 
(PUT 'ALG_LOG 'NUMBER-OF-ARGS 2) 
(FLAG '(ALG_LOG) 'OPFN) 
(PUT 'ALG_LOG 'DEFINED-ON-LINE '1610) 
(PUT 'ALG_LOG 'DEFINED-IN-FILE 'MATHML/MATHML.RED) 
(PUT 'ALG_LOG 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE ALG_LOG (A BASE)
    (PROG ()
      (COND
       ((EVALEQUAL (AEVAL BASE) (AEVAL 'NIL)) (RETURN (AEVAL (LIST 'LOG A))))
       (T (RETURN (AEVAL (LIST 'LOGB A BASE))))))) 
(PUT 'LOGBASERD 'NUMBER-OF-ARGS 0) 
(PUT 'LOGBASERD 'DEFINED-ON-LINE '1617) 
(PUT 'LOGBASERD 'DEFINED-IN-FILE 'MATHML/MATHML.RED) 
(PUT 'LOGBASERD 'PROCEDURE_TYPE '(ARROW UNIT GENERAL)) 
(DE LOGBASERD NIL
    (PROG (A)
      (SETQ A (MATHML))
      (LEX)
      (COND ((EQUAL CHAR '(/ L O G B A S E)) (RETURN A))
            (T (ERRORML "</logbase>" 2))))) 
(PUT 'CONJUGATERD 'NUMBER-OF-ARGS 0) 
(PUT 'CONJUGATERD 'DEFINED-ON-LINE '1626) 
(PUT 'CONJUGATERD 'DEFINED-IN-FILE 'MATHML/MATHML.RED) 
(PUT 'CONJUGATERD 'PROCEDURE_TYPE '(ARROW UNIT GENERAL)) 
(DE CONJUGATERD NIL (PROG (A) (SETQ A (ALG_CONJ (MATHML))) (LEX) (RETURN A))) 
(PUT 'ALG_CONJ 'NUMBER-OF-ARGS 1) 
(FLAG '(ALG_CONJ) 'OPFN) 
(PUT 'ALG_CONJ 'DEFINED-ON-LINE '1633) 
(PUT 'ALG_CONJ 'DEFINED-IN-FILE 'MATHML/MATHML.RED) 
(PUT 'ALG_CONJ 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE ALG_CONJ (A) (PROG () (RETURN (AEVAL (LIST 'CONJ A))))) 
(PUT 'MINUSRD 'NUMBER-OF-ARGS 0) 
(PUT 'MINUSRD 'DEFINED-ON-LINE '1639) 
(PUT 'MINUSRD 'DEFINED-IN-FILE 'MATHML/MATHML.RED) 
(PUT 'MINUSRD 'PROCEDURE_TYPE '(ARROW UNIT GENERAL)) 
(DE MINUSRD NIL
    (PROG (C B)
      (SETQ C (MATHML))
      (SETQ B (MATHML))
      (COND ((EQUAL B NIL) (SETQ C (ALG_MINUS C)))
            (T (PROGN (SETQ C (ALG_DIFFERENCE C B)) (LEX))))
      (RETURN C))) 
(PUT 'ALG_MINUS 'NUMBER-OF-ARGS 1) 
(FLAG '(ALG_MINUS) 'OPFN) 
(PUT 'ALG_MINUS 'DEFINED-ON-LINE '1650) 
(PUT 'ALG_MINUS 'DEFINED-IN-FILE 'MATHML/MATHML.RED) 
(PUT 'ALG_MINUS 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE ALG_MINUS (A) (PROG () (RETURN (AEVAL (LIST 'MINUS A))))) 
(PUT 'ALG_DIFFERENCE 'NUMBER-OF-ARGS 2) 
(FLAG '(ALG_DIFFERENCE) 'OPFN) 
(PUT 'ALG_DIFFERENCE 'DEFINED-ON-LINE '1655) 
(PUT 'ALG_DIFFERENCE 'DEFINED-IN-FILE 'MATHML/MATHML.RED) 
(PUT 'ALG_DIFFERENCE 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE ALG_DIFFERENCE (A B) (PROG () (RETURN (AEVAL (LIST 'DIFFERENCE A B))))) 
(PUT 'ABSRD 'NUMBER-OF-ARGS 0) 
(PUT 'ABSRD 'DEFINED-ON-LINE '1661) 
(PUT 'ABSRD 'DEFINED-IN-FILE 'MATHML/MATHML.RED) 
(PUT 'ABSRD 'PROCEDURE_TYPE '(ARROW UNIT GENERAL)) 
(DE ABSRD NIL (PROG (A) (SETQ A (ALG_ABS (MATHML))) (LEX) (RETURN A))) 
(PUT 'ALG_ABS 'NUMBER-OF-ARGS 1) 
(FLAG '(ALG_ABS) 'OPFN) 
(PUT 'ALG_ABS 'DEFINED-ON-LINE '1668) 
(PUT 'ALG_ABS 'DEFINED-IN-FILE 'MATHML/MATHML.RED) 
(PUT 'ALG_ABS 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE ALG_ABS (A) (PROG () (RETURN (AEVAL (LIST 'ABS A))))) 
(PUT 'ROOTRD 'NUMBER-OF-ARGS 0) 
(PUT 'ROOTRD 'DEFINED-ON-LINE '1673) 
(PUT 'ROOTRD 'DEFINED-IN-FILE 'MATHML/MATHML.RED) 
(PUT 'ROOTRD 'PROCEDURE_TYPE '(ARROW UNIT GENERAL)) 
(DE ROOTRD NIL
    (PROG (B DEG)
      (LEX)
      (COND
       ((EQUAL CHAR '(D E G R E E))
        (PROGN
         (SETQ DEG (MATHML))
         (LEX)
         (COND
          ((NEQ CHAR '(/ D E G R E E))
           (ERROR "</degree>" "Syntax ERROR: Missing end tag")))
         (LEX)))
       (T (SETQ DEG 2)))
      (SETQ B (MATHML2))
      (LEX)
      (RETURN (ALG_ROOT B DEG)))) 
(PUT 'ALG_ROOT 'NUMBER-OF-ARGS 2) 
(FLAG '(ALG_ROOT) 'OPFN) 
(PUT 'ALG_ROOT 'DEFINED-ON-LINE '1689) 
(PUT 'ALG_ROOT 'DEFINED-IN-FILE 'MATHML/MATHML.RED) 
(PUT 'ALG_ROOT 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE ALG_ROOT (B A)
    (PROG () (RETURN (AEVAL (LIST 'EXPT B (LIST 'QUOTIENT 1 A)))))) 
(PUT 'REMRD 'NUMBER-OF-ARGS 0) 
(PUT 'REMRD 'DEFINED-ON-LINE '1695) 
(PUT 'REMRD 'DEFINED-IN-FILE 'MATHML/MATHML.RED) 
(PUT 'REMRD 'PROCEDURE_TYPE '(ARROW UNIT GENERAL)) 
(DE REMRD NIL
    (PROG (A A1 A2)
      (SETQ A1 (MATHML))
      (SETQ A2 (MATHML))
      (SETQ A (ALG_REMAINDER A1 A2))
      (LEX)
      (RETURN A))) 
(PUT 'ALG_REMAINDER 'NUMBER-OF-ARGS 2) 
(FLAG '(ALG_REMAINDER) 'OPFN) 
(PUT 'ALG_REMAINDER 'DEFINED-ON-LINE '1704) 
(PUT 'ALG_REMAINDER 'DEFINED-IN-FILE 'MATHML/MATHML.RED) 
(PUT 'ALG_REMAINDER 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE ALG_REMAINDER (A B) (PROG () (RETURN (AEVAL (LIST 'REMAINDER A B))))) 
(PUT 'FACTORIALRD 'NUMBER-OF-ARGS 0) 
(PUT 'FACTORIALRD 'DEFINED-ON-LINE '1709) 
(PUT 'FACTORIALRD 'DEFINED-IN-FILE 'MATHML/MATHML.RED) 
(PUT 'FACTORIALRD 'PROCEDURE_TYPE '(ARROW UNIT GENERAL)) 
(DE FACTORIALRD NIL
    (PROG (A) (SETQ A (ALG_FACTORIAL (MATHML))) (LEX) (RETURN A))) 
(PUT 'ALG_FACTORIAL 'NUMBER-OF-ARGS 1) 
(FLAG '(ALG_FACTORIAL) 'OPFN) 
(PUT 'ALG_FACTORIAL 'DEFINED-ON-LINE '1716) 
(PUT 'ALG_FACTORIAL 'DEFINED-IN-FILE 'MATHML/MATHML.RED) 
(PUT 'ALG_FACTORIAL 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE ALG_FACTORIAL (A) (PROG () (RETURN (AEVAL (LIST 'FACTORIAL A))))) 
(PUT 'EXPRD 'NUMBER-OF-ARGS 0) 
(PUT 'EXPRD 'DEFINED-ON-LINE '1721) 
(PUT 'EXPRD 'DEFINED-IN-FILE 'MATHML/MATHML.RED) 
(PUT 'EXPRD 'PROCEDURE_TYPE '(ARROW UNIT GENERAL)) 
(DE EXPRD NIL (PROG (A) (SETQ A (ALG_EXP (MATHML))) (LEX) (RETURN A))) 
(PUT 'ALG_EXP 'NUMBER-OF-ARGS 1) 
(FLAG '(ALG_EXP) 'OPFN) 
(PUT 'ALG_EXP 'DEFINED-ON-LINE '1728) 
(PUT 'ALG_EXP 'DEFINED-IN-FILE 'MATHML/MATHML.RED) 
(PUT 'ALG_EXP 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE ALG_EXP (A) (PROG () (RETURN (AEVAL (LIST 'EXP A))))) 
(PUT 'QUOTIENTRD 'NUMBER-OF-ARGS 0) 
(PUT 'QUOTIENTRD 'DEFINED-ON-LINE '1733) 
(PUT 'QUOTIENTRD 'DEFINED-IN-FILE 'MATHML/MATHML.RED) 
(PUT 'QUOTIENTRD 'PROCEDURE_TYPE '(ARROW UNIT GENERAL)) 
(DE QUOTIENTRD NIL
    (PROG (A A1 A2)
      (SETQ A1 (MATHML))
      (SETQ A2 (MATHML))
      (COND
       ((OR (IDP (REVAL1 A1 T)) (IDP (REVAL1 A2 T)))
        (SETQ A (ALG_QUOTIENT A1 A2)))
       (T (SETQ A (QUOTIENT (REVAL1 A1 T) (REVAL1 A2 T)))))
      (LEX)
      (RETURN A))) 
(PUT 'ALG_QUOTIENT 'NUMBER-OF-ARGS 2) 
(FLAG '(ALG_QUOTIENT) 'OPFN) 
(PUT 'ALG_QUOTIENT 'DEFINED-ON-LINE '1744) 
(PUT 'ALG_QUOTIENT 'DEFINED-IN-FILE 'MATHML/MATHML.RED) 
(PUT 'ALG_QUOTIENT 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE ALG_QUOTIENT (A B) (PROG () (RETURN (AEVAL (LIST 'QUOTIENT A B))))) 
(PUT 'DIVIDERD 'NUMBER-OF-ARGS 0) 
(PUT 'DIVIDERD 'DEFINED-ON-LINE '1749) 
(PUT 'DIVIDERD 'DEFINED-IN-FILE 'MATHML/MATHML.RED) 
(PUT 'DIVIDERD 'PROCEDURE_TYPE '(ARROW UNIT GENERAL)) 
(DE DIVIDERD NIL
    (PROG (A A1 A2)
      (SETQ A1 (MATHML))
      (SETQ A2 (MATHML))
      (COND ((EQUAL A2 0) (ERRORML "" 21)))
      (SETQ A (ALG_DIVIDE A1 A2))
      (LEX)
      (RETURN A))) 
(PUT 'ALG_DIVIDE 'NUMBER-OF-ARGS 2) 
(FLAG '(ALG_DIVIDE) 'OPFN) 
(PUT 'ALG_DIVIDE 'DEFINED-ON-LINE '1759) 
(PUT 'ALG_DIVIDE 'DEFINED-IN-FILE 'MATHML/MATHML.RED) 
(PUT 'ALG_DIVIDE 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE ALG_DIVIDE (A B) (PROG () (RETURN (AEVAL (LIST 'QUOTIENT A B))))) 
(PUT 'GCDRD 'NUMBER-OF-ARGS 0) 
(PUT 'GCDRD 'DEFINED-ON-LINE '1764) 
(PUT 'GCDRD 'DEFINED-IN-FILE 'MATHML/MATHML.RED) 
(PUT 'GCDRD 'PROCEDURE_TYPE '(ARROW UNIT GENERAL)) 
(DE GCDRD NIL
    (PROG (C1)
      (SETQ C1 (STATS_GETARGS))
      (CONSTANTS C1)
      (COND
       ((EQUAL TEMP2 'STOP)
        (PROGN (SETQ TEMP2 NIL) (RETURN (CONS 'GCD (EVAL_LIST C1)))))
       (T (RETURN (GCDRD2 C1)))))) 
(PUT 'GCDRD2 'NUMBER-OF-ARGS 1) 
(PUT 'GCDRD2 'DEFINED-ON-LINE '1774) 
(PUT 'GCDRD2 'DEFINED-IN-FILE 'MATHML/MATHML.RED) 
(PUT 'GCDRD2 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE GCDRD2 (ARGS)
    (PROG (A)
      (SETQ A (REVAL1 (CAR ARGS) T))
      (RETURN
       (COND ((EQUAL (LENGTH ARGS) 1) (CAR ARGS))
             (T (ALG_GCD2 A (GCDRD2 (CDR ARGS)))))))) 
(PUT 'ALG_GCD2 'NUMBER-OF-ARGS 2) 
(FLAG '(ALG_GCD2) 'OPFN) 
(PUT 'ALG_GCD2 'DEFINED-ON-LINE '1781) 
(PUT 'ALG_GCD2 'DEFINED-IN-FILE 'MATHML/MATHML.RED) 
(PUT 'ALG_GCD2 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE ALG_GCD2 (A B) (PROG () (RETURN (AEVAL (LIST 'GCD A B))))) 
(PUT 'MINRD 'NUMBER-OF-ARGS 0) 
(PUT 'MINRD 'DEFINED-ON-LINE '1786) 
(PUT 'MINRD 'DEFINED-IN-FILE 'MATHML/MATHML.RED) 
(PUT 'MINRD 'PROCEDURE_TYPE '(ARROW UNIT GENERAL)) 
(DE MINRD NIL
    (PROG (A)
      (SETQ A (MATHML))
      (RETURN (COND ((EQUAL A NIL) NIL) (T (ALG_MIN A (MINRD))))))) 
(PUT 'ALG_MIN 'NUMBER-OF-ARGS 2) 
(FLAG '(ALG_MIN) 'OPFN) 
(PUT 'ALG_MIN 'DEFINED-ON-LINE '1793) 
(PUT 'ALG_MIN 'DEFINED-IN-FILE 'MATHML/MATHML.RED) 
(PUT 'ALG_MIN 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE ALG_MIN (A B) (PROG () (RETURN (AEVAL (LIST 'MIN B A))))) 
(PUT 'MAXRD 'NUMBER-OF-ARGS 0) 
(PUT 'MAXRD 'DEFINED-ON-LINE '1798) 
(PUT 'MAXRD 'DEFINED-IN-FILE 'MATHML/MATHML.RED) 
(PUT 'MAXRD 'PROCEDURE_TYPE '(ARROW UNIT GENERAL)) 
(DE MAXRD NIL
    (PROG (A)
      (SETQ A (MATHML))
      (RETURN (COND ((EQUAL A NIL) NIL) (T (ALG_MAX A (MAXRD))))))) 
(PUT 'ALG_MAX 'NUMBER-OF-ARGS 2) 
(FLAG '(ALG_MAX) 'OPFN) 
(PUT 'ALG_MAX 'DEFINED-ON-LINE '1805) 
(PUT 'ALG_MAX 'DEFINED-IN-FILE 'MATHML/MATHML.RED) 
(PUT 'ALG_MAX 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE ALG_MAX (A B) (PROG () (RETURN (AEVAL (LIST 'MAX A B))))) 
(FLAG '(PLUSRD) 'OPFN) 
(PUT 'PLUSRD 'NUMBER-OF-ARGS 0) 
(PUT 'PLUSRD 'DEFINED-ON-LINE '1812) 
(PUT 'PLUSRD 'DEFINED-IN-FILE 'MATHML/MATHML.RED) 
(PUT 'PLUSRD 'PROCEDURE_TYPE '(ARROW UNIT GENERAL)) 
(DE PLUSRD NIL
    (PROG (ABC1)
      (SETQ ABC1 NIL)
      (SETQ ABC1 (MATHML))
      (RETURN (COND ((EQUAL ABC1 NIL) 0) (T (ALG_PLUS ABC1 (PLUSRD))))))) 
(PUT 'ALG_PLUS 'NUMBER-OF-ARGS 2) 
(FLAG '(ALG_PLUS) 'OPFN) 
(PUT 'ALG_PLUS 'DEFINED-ON-LINE '1820) 
(PUT 'ALG_PLUS 'DEFINED-IN-FILE 'MATHML/MATHML.RED) 
(PUT 'ALG_PLUS 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE ALG_PLUS (ACB1 B) (PROG () (RETURN (AEVAL (LIST 'PLUS ACB1 B))))) 
(PUT 'TIMESRD 'NUMBER-OF-ARGS 0) 
(PUT 'TIMESRD 'DEFINED-ON-LINE '1826) 
(PUT 'TIMESRD 'DEFINED-IN-FILE 'MATHML/MATHML.RED) 
(PUT 'TIMESRD 'PROCEDURE_TYPE '(ARROW UNIT GENERAL)) 
(DE TIMESRD NIL
    (PROG (A)
      (SETQ A NIL)
      (SETQ A (MATHML))
      (RETURN (COND ((EQUAL A NIL) 1) (T (ALG_TIMES A (TIMESRD))))))) 
(PUT 'ALG_TIMES 'NUMBER-OF-ARGS 2) 
(FLAG '(ALG_TIMES) 'OPFN) 
(PUT 'ALG_TIMES 'DEFINED-ON-LINE '1834) 
(PUT 'ALG_TIMES 'DEFINED-IN-FILE 'MATHML/MATHML.RED) 
(PUT 'ALG_TIMES 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE ALG_TIMES (A B)
    (PROG ()
      (COND
       ((EVALEQUAL (AEVAL B) (AEVAL 'I)) (RETURN (AEVAL (LIST 'TIMES A 'I)))))
      (RETURN (AEVAL (LIST 'TIMES A B))))) 
(PUT 'POWERRD 'NUMBER-OF-ARGS 0) 
(PUT 'POWERRD 'DEFINED-ON-LINE '1843) 
(PUT 'POWERRD 'DEFINED-IN-FILE 'MATHML/MATHML.RED) 
(PUT 'POWERRD 'PROCEDURE_TYPE '(ARROW UNIT GENERAL)) 
(DE POWERRD NIL
    (PROG (VAR POWER)
      (SETQ VAR (MATHML))
      (SETQ POWER (MATHML))
      (LEX)
      (RETURN (ALG_EXPT VAR POWER)))) 
(PUT 'ALG_EXPT 'NUMBER-OF-ARGS 2) 
(FLAG '(ALG_EXPT) 'OPFN) 
(PUT 'ALG_EXPT 'DEFINED-ON-LINE '1851) 
(PUT 'ALG_EXPT 'DEFINED-IN-FILE 'MATHML/MATHML.RED) 
(PUT 'ALG_EXPT 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE ALG_EXPT (A B) (PROG () (RETURN (AEVAL (LIST 'EXPT A B))))) 
(PUT 'ERRORML 'NUMBER-OF-ARGS 2) 
(PUT 'ERRORML 'DEFINED-ON-LINE '1860) 
(PUT 'ERRORML 'DEFINED-IN-FILE 'MATHML/MATHML.RED) 
(PUT 'ERRORML 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE ERRORML (STR MSG)
    (PROG ()
      (TERPRI)
      (PRINC "***** Error in token number ")
      (PRINC COUNT)
      (PRINC " (<")
      (PRINC (COMPRESS CHAR))
      (PRINC ">)")
      (TERPRI)
      (COND
       ((EQUAL MSG 1)
        (PROGN
         (PRINC "Needed attribute")
         (PRINC STR)
         (PRINC " and none was found.")))
       ((EQUAL MSG 2) (PROGN (PRINC "Missing tag: ") (PRINC STR)))
       ((EQUAL MSG 3)
        (PROGN
         (PRINC "Undefined error!")
         (PRINC " Token number ")
         (PRINC (SUB1 COUNT))
         (PRINC " probably mispelled or an")
         (PRINC "ambiguous or erroneous use of <apply></apply>.")))
       ((EQUAL MSG 4)
        (PROGN
         (PRINC "Numerical constant ")
         (PRINC STR)
         (PRINC " was enclosed between <ci></ci> tags.")
         (TERPRI)
         (PRINC "Correct syntax: <cn>")
         (PRINC STR)
         (PRINC "</cn>.")))
       ((EQUAL MSG 5)
        (PROGN
         (PRINC "All arguments must be sets")
         (TERPRI)
         (PRINC STR)
         (PRINC " does not represent a set.")))
       ((EQUAL MSG 6) (PROGN (PRINC "Non-numeric argument in arithmetic.")))
       ((EQUAL MSG 7)
        (PROGN
         (PRINC "The degree quantifier is of no use in the sumation")
         (PRINC "operator.")))
       ((EQUAL MSG 8)
        (PROGN
         (PRINC "The degree quantifier is of no use in the limit")
         (PRINC " operator.")))
       ((EQUAL MSG 9)
        (PROGN
         (PRINC "The index of sumation has not been specified.")
         (TERPRI)
         (PRINC "Please use <bvar></bvar> tags to specify an index.")))
       ((EQUAL MSG 10) (PROGN (PRINC "Upperlimit not specified.")))
       ((EQUAL MSG 11)
        (PROGN (PRINC "Upper and lower limits have not been specified.")))
       ((EQUAL MSG 12)
        (PROGN
         (PRINC "The degree quantifier is of no use in the product")
         (PRINC " operator.")))
       ((EQUAL MSG 13)
        (PROGN
         (PRINC "The degree quantifier is not allowed in the integral")
         (PRINC " operator.")))
       ((EQUAL MSG 14)
        (PROGN
         (PRINC "Variable of integration not specified.")
         (PRINC "Please use <bvar></bvar> tags to specify variable.")))
       ((EQUAL MSG 15)
        (PROGN
         (PRINC "Incorrect use of <bvar></bvar> tags.")
         (PRINC " Correct use:")
         (TERPRI)
         (PRINC
          "<bvar> bound_var </bvar> [<degree> degree </degree>] </bvar>")))
       ((EQUAL MSG 16)
        (PROGN
         (PRINC "Symbolic constant ")
         (PRINC STR)
         (PRINC " was enclosed between <cn></cn> tags.")
         (TERPRI)
         (PRINC "Correct syntax: <ci> ")
         (PRINC STR)
         (PRINC " </ci>")
         (TERPRI)
         (PRINC "or <cn type=\"constant\"> </cn>")
         (PRINC
          "if using constants &ImaginaryI;, &ii;, &ExponentialE;, &ee; or &pi;.")))
       ((EQUAL MSG 17)
        (PROGN
         (PRINC "Unknown tag: <")
         (PRINC STR)
         (PRINC ">.")
         (TERPRI)
         (PRINC "Token not allowed within <apply></apply> tags.")
         (TERPRI)
         (PRINC "Might be: <")
         (PRINC STR)
         (PRINC "/>.")))
       ((EQUAL MSG 18)
        (PROGN
         (PRINC "Unknown tag: <")
         (PRINC STR)
         (PRINC ">.")
         (TERPRI)
         (PRINC "Not allowed within <reln></reln> tags.")))
       ((EQUAL MSG 19)
        (PROGN
         (PRINC "Undefined error!")
         (PRINC " Token ")
         (PRINC (SUB1 COUNT))
         (PRINC " is probably mispelled")
         (TERPRI)
         (PRINC "or unknown, ")
         (PRINC "or the </math> tag is missing")))
       ((EQUAL MSG 20)
        (PROGN
         (PRINC "Function ")
         (PRINC STR)
         (PRINC "()")
         (PRINC " was not enclosed in <ci></ci> tags.")
         (TERPRI)
         (PRINC "Correct syntax: <fn><ci>")
         (PRINC STR)
         (PRINC "</ci></fn>.")))
       ((EQUAL MSG 21) (PROGN (PRINC "Error, division by 0"))))
      (TERPRI)
      (COND ((EQUAL FILE* T) (CLOSE (RDS F))))
      (SETQ FILE* NIL)
      (REDERR "")
      (REDERR "")
      (TERPRI))) 
(PUT 'MEANRD 'NUMBER-OF-ARGS 0) 
(PUT 'MEANRD 'DEFINED-ON-LINE '1981) 
(PUT 'MEANRD 'DEFINED-IN-FILE 'MATHML/MATHML.RED) 
(PUT 'MEANRD 'PROCEDURE_TYPE '(ARROW UNIT GENERAL)) 
(DE MEANRD NIL
    (PROG (B SIZE ARGS)
      (SETQ ARGS (STATS_GETARGS))
      (SETQ B 0)
      (SETQ SIZE (LENGTH ARGS))
      (PROG ()
       WHILELABEL
        (COND ((NOT (NEQ ARGS NIL)) (RETURN NIL)))
        (PROGN (SETQ B (ALG_PLUS B (CAR ARGS))) (SETQ ARGS (CDR ARGS)))
        (GO WHILELABEL))
      (RETURN (ALG_QUOTIENT B SIZE)))) 
(PUT 'SDEVRD 'NUMBER-OF-ARGS 0) 
(PUT 'SDEVRD 'DEFINED-ON-LINE '1992) 
(PUT 'SDEVRD 'DEFINED-IN-FILE 'MATHML/MATHML.RED) 
(PUT 'SDEVRD 'PROCEDURE_TYPE '(ARROW UNIT GENERAL)) 
(DE SDEVRD NIL
    (PROG (ARGS MEAN B SIZE)
      (SETQ ARGS (STATS_GETARGS))
      (SETQ MEAN (ALG_MEAN ARGS))
      (SETQ SIZE (LENGTH ARGS))
      (PROG ()
       WHILELABEL
        (COND ((NOT (NEQ ARGS NIL)) (RETURN NIL)))
        (PROGN
         (SETQ B (ALG_PLUS B (ALG_EXPT (ALG_DIFFERENCE (CAR ARGS) MEAN) 2)))
         (SETQ ARGS (CDR ARGS))
         NIL)
        (GO WHILELABEL))
      (RETURN B))) 
(PUT 'VARRD 'NUMBER-OF-ARGS 0) 
(PUT 'VARRD 'DEFINED-ON-LINE '2003) 
(PUT 'VARRD 'DEFINED-IN-FILE 'MATHML/MATHML.RED) 
(PUT 'VARRD 'PROCEDURE_TYPE '(ARROW UNIT GENERAL)) 
(DE VARRD NIL
    (PROG (ARGS) (SETQ ARGS (STATS_GETARGS)) (RETURN (ALG_EXPT (SDEV ARGS) 2)))) 
(PUT 'MEDIANRD 'NUMBER-OF-ARGS 0) 
(PUT 'MEDIANRD 'DEFINED-ON-LINE '2009) 
(PUT 'MEDIANRD 'DEFINED-IN-FILE 'MATHML/MATHML.RED) 
(PUT 'MEDIANRD 'PROCEDURE_TYPE '(ARROW UNIT GENERAL)) 
(DE MEDIANRD NIL
    (PROG (ARGS SIZ SI)
      (SETQ ARGS (STATS_GETARGS))
      (SETQ ARGS (CONS 'LIST ARGS))
      (SETQ ARGS (SORTL ARGS))
      (SETQ ARGS (CDR ARGS))
      (SETQ SI (LENGTH ARGS))
      (SETQ SIZ (QUOTIENT SI 2))
      (COND
       ((EQUAL (REMAINDER SI 2) 0)
        (RETURN
         (ALG_QUOTIENT (ALG_PLUS (NTH ARGS SIZ) (NTH ARGS (PLUS SIZ 1))) 2)))
       (T (RETURN (NTH ARGS SIZ)))))) 
(PUT 'SORTL 'NUMBER-OF-ARGS 1) 
(FLAG '(SORTL) 'OPFN) 
(PUT 'SORTL 'DEFINED-ON-LINE '2022) 
(PUT 'SORTL 'DEFINED-IN-FILE 'MATHML/MATHML.RED) 
(PUT 'SORTL 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE SORTL (ARGS)
    (PROG (RR)
      (SETQ RR (AEVAL (LIST 'SORTLIST ARGS 'PRED)))
      (COND
       ((EVALEQUAL (AEVAL RR) (AEVAL 'NIL))
        (RETURN (AEVAL (LIST 'SORTNUMLIST ARGS))))
       (T (RETURN (AEVAL RR)))))) 
(PUT 'MOMENTRD 'NUMBER-OF-ARGS 0) 
(PUT 'MOMENTRD 'DEFINED-ON-LINE '2029) 
(PUT 'MOMENTRD 'DEFINED-IN-FILE 'MATHML/MATHML.RED) 
(PUT 'MOMENTRD 'PROCEDURE_TYPE '(ARROW UNIT GENERAL)) 
(DE MOMENTRD NIL
    (PROG (ARGS SIZE D I)
      (SETQ ARGS (STATS_GETARGS))
      (COND
       ((EQUAL CHAR '(D E G R E E))
        (PROGN
         (SETQ I (MATHML))
         (LEX)
         (COND ((EQUAL CHAR '(/ D E G R E E)) (LEX))
               (T (ERRORML "</degree>" 2)))))
       (T (SETQ I 1)))
      (SETQ D NIL)
      (SETQ SIZE (LENGTH ARGS))
      (PROG ()
       WHILELABEL
        (COND ((NOT (NEQ ARGS NIL)) (RETURN NIL)))
        (PROGN
         (SETQ D (CONS (ALG_EXPT (CAR ARGS) I) D))
         (SETQ ARGS (CDR ARGS)))
        (GO WHILELABEL))
      (RETURN (ALG_MEAN D)))) 
(PUT 'ALG_MEAN 'NUMBER-OF-ARGS 1) 
(PUT 'ALG_MEAN 'DEFINED-ON-LINE '2046) 
(PUT 'ALG_MEAN 'DEFINED-IN-FILE 'MATHML/MATHML.RED) 
(PUT 'ALG_MEAN 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE ALG_MEAN (ARGS)
    (PROG (B SIZE)
      (SETQ B 0)
      (SETQ SIZE (LENGTH ARGS))
      (PROG ()
       WHILELABEL
        (COND ((NOT (NEQ ARGS NIL)) (RETURN NIL)))
        (PROGN (SETQ B (ALG_PLUS B (CAR ARGS))) (SETQ ARGS (CDR ARGS)))
        (GO WHILELABEL))
      (RETURN (ALG_QUOTIENT B SIZE)))) 
(PUT 'SDEV 'NUMBER-OF-ARGS 1) 
(PUT 'SDEV 'DEFINED-ON-LINE '2056) 
(PUT 'SDEV 'DEFINED-IN-FILE 'MATHML/MATHML.RED) 
(PUT 'SDEV 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE SDEV (ARGS)
    (PROG (MEAN B SIZE)
      (SETQ MEAN (ALG_MEAN ARGS))
      (SETQ SIZE (LENGTH ARGS))
      (PROG ()
       WHILELABEL
        (COND ((NOT (NEQ ARGS NIL)) (RETURN NIL)))
        (PROGN
         (SETQ B (ALG_PLUS B (ALG_EXPT (ALG_DIFFERENCE (CAR ARGS) MEAN) 2)))
         (SETQ ARGS (CDR ARGS))
         NIL)
        (GO WHILELABEL))
      (RETURN B))) 
(PUT 'STATS_GETARGS 'NUMBER-OF-ARGS 0) 
(PUT 'STATS_GETARGS 'DEFINED-ON-LINE '2068) 
(PUT 'STATS_GETARGS 'DEFINED-IN-FILE 'MATHML/MATHML.RED) 
(PUT 'STATS_GETARGS 'PROCEDURE_TYPE '(ARROW UNIT GENERAL)) 
(DE STATS_GETARGS NIL
    (PROG (WW)
      (SETQ WW NIL)
      (SETQ WW (MATHML))
      (COND ((NEQ WW NIL) (PROGN (RETURN (CONS WW (STATS_GETARGS)))))))) 
(PUT 'PO2CA 'NUMBER-OF-ARGS 2) 
(PUT 'PO2CA 'DEFINED-ON-LINE '2078) 
(PUT 'PO2CA 'DEFINED-IN-FILE 'MATHML/MATHML.RED) 
(PUT 'PO2CA 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE PO2CA (R P)
    (PROG (THETA X Y)
      (SETQ THETA (RAD P))
      (SETQ X (TIMES R (COS THETA)))
      (SETQ Y (TIMES R (SIN THETA)))
      (RETURN (LIST X Y)))) 
(PUT 'RAD 'NUMBER-OF-ARGS 1) 
(PUT 'RAD 'DEFINED-ON-LINE '2086) 
(PUT 'RAD 'DEFINED-IN-FILE 'MATHML/MATHML.RED) 
(PUT 'RAD 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE RAD (MU) (PROG (B) (SETQ B (TIMES MU (QUOTIENT 3.141529 180))) (RETURN B))) 
(PUT 'MATH_ML_PRINTER 'NUMBER-OF-ARGS 2) 
(PUT 'MATH_ML_PRINTER 'DEFINED-ON-LINE '2102) 
(PUT 'MATH_ML_PRINTER 'DEFINED-IN-FILE 'MATHML/MATHML.RED) 
(PUT 'MATH_ML_PRINTER 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE MATH_ML_PRINTER (MODE U)
    (PROGN
     (COND
      ((EQUAL *BOTH T)
       ((LAMBDA (OUTPUTHANDLER*)
          (PROGN (COND ((EQUAL U T) NIL) (T (MAPRIN U))) (TERPRI* NIL)))
        NIL)))
     (COND
      ((NEQ MODE 'TERPRI)
       (PROGN
        (EQUAL FOUND_MAT_INT 0)
        NIL
        (EQUAL FOUND_MAT_COMPL 0)
        NIL
        (SETQ INDENT 0)
        (SETQ CONSTS_COMPL NIL)
        (SETQ CONSTS_MAT_COMPL NIL)
        (SETQ CONSTS_INT NIL)
        (SETQ CONSTS_MAT_INT NIL)
        (SETQ FOUND_INT 0)
        (SETQ FOUND_COMPL 0)
        (SETQ FLAGG 0)
        (COND
         ((PAIRP U)
          (PROGN
           (COND
            ((EQUAL *WEB T)
             (PRINTOUT "<EMBED TYPE=\"text/mathml\" MMLDATA=\"")))
           (PRINTOUT "<math>")
           (SETQ INDENT 3)
           (COND
            ((EQUAL (CAR U) 'SETQ)
             (PROGN
              (COND
               ((PAIRP (CADDR U))
                (COND
                 ((EQUAL (ISSQ (CADDR U)) 1)
                  (ARBITRARY_C (PREPSQ (CADR (CADDR U)))))
                 ((EQUAL (CAADDR U) 'MAT) (ARBITRARY_C (CADDR U)))
                 ((EQUAL (CAADDR U) 'LIST) (ARBITRARY_C (*A2K (CADDR U)))))))
              (SETQML U)))
            ((EQUAL (CAR U) 'LIST)
             (PROGN (ARBITRARY_C (*A2K U)) (LISTML (CDR U))))
            ((EQUAL (CAR U) 'MAT) (PROGN (ARBITRARY_C U) (MATRIXML (CDR U))))
            ((EQUAL (CAR U) '*SQ)
             (PROGN
              (ARBITRARY_C (PREPSQ (CADR U)))
              (EXPRESSION (PREPSQ (CADR U)))))
            (T (EXPRESSION U)))
           (SETQ INDENT (DIFFERENCE INDENT 3))
           (CLOSE_FORALL)
           (SETQ INDENT 0)
           (PRINTOUT "</math>")
           (COND ((EQUAL *WEB T) (PRINC "\" HEIGHT=300 WIDTH=500>")))
           (TERPRI)))
         ((ATOM U)
          (PROGN
           (COND
            ((EQUAL *WEB T)
             (PRINTOUT "<EMBED TYPE=\"text/mathml\" MMLDATA=\" ")))
           (PRINTOUT "<math>")
           (SETQ INDENT 3)
           (EXPRESSION U)
           (SETQ INDENT 0)
           (PRINTOUT "</math>")
           (COND ((EQUAL *WEB T) (PRINC " \" HEIGHT=300 WIDTH=500>")))
           (TERPRI)))
         (T NIL))
        NIL))))) 
(PUT 'VECTORML 'NUMBER-OF-ARGS 1) 
(PUT 'VECTORML 'DEFINED-ON-LINE '2168) 
(PUT 'VECTORML 'DEFINED-IN-FILE 'MATHML/MATHML.RED) 
(PUT 'VECTORML 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE VECTORML (ELEM)
    (PROG ()
      (PRINTOUT "<vector>")
      (SETQ INDENT (PLUS INDENT 3))
      (MULTI_ELEM (CAR ELEM))
      (SETQ INDENT (DIFFERENCE INDENT 3))
      (PRINTOUT "</vector>"))) 
(PUT 'MATRIXML 'NUMBER-OF-ARGS 1) 
(PUT 'MATRIXML 'DEFINED-ON-LINE '2179) 
(PUT 'MATRIXML 'DEFINED-IN-FILE 'MATHML/MATHML.RED) 
(PUT 'MATRIXML 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE MATRIXML (ELEM)
    (PROG ()
      (COND ((EQUAL (LENGTH ELEM) 1) (VECTORML ELEM))
            (T
             (PROGN
              (PRINTOUT "<matrix>")
              (SETQ INDENT (PLUS INDENT 3))
              (MATRIX_ROWS ELEM)
              (SETQ INDENT (DIFFERENCE INDENT 3))
              (PRINTOUT "</matrix>")))))) 
(PUT 'MATRIX_ROWS 'NUMBER-OF-ARGS 1) 
(PUT 'MATRIX_ROWS 'DEFINED-ON-LINE '2191) 
(PUT 'MATRIX_ROWS 'DEFINED-IN-FILE 'MATHML/MATHML.RED) 
(PUT 'MATRIX_ROWS 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE MATRIX_ROWS (ELEM)
    (PROG ()
      (COND
       ((NEQ ELEM NIL)
        (PROGN
         (PRINTOUT "<matrixrow>")
         (SETQ INDENT (PLUS INDENT 3))
         (ROW (CAR ELEM))
         (SETQ INDENT (DIFFERENCE INDENT 3))
         (PRINTOUT "</matrixrow>")
         (MATRIX_ROWS (CDR ELEM))
         NIL))))) 
(PUT 'ROW 'NUMBER-OF-ARGS 1) 
(PUT 'ROW 'DEFINED-ON-LINE '2202) 
(PUT 'ROW 'DEFINED-IN-FILE 'MATHML/MATHML.RED) 
(PUT 'ROW 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE ROW (ELEM)
    (PROG ()
      (COND
       ((NEQ ELEM NIL) (PROGN (EXPRESSION (CAR ELEM)) (ROW (CDR ELEM)) NIL))))) 
(PUT 'ARBITRARY_C 'NUMBER-OF-ARGS 1) 
(PUT 'ARBITRARY_C 'DEFINED-ON-LINE '2211) 
(PUT 'ARBITRARY_C 'DEFINED-IN-FILE 'MATHML/MATHML.RED) 
(PUT 'ARBITRARY_C 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE ARBITRARY_C (ELEM)
    (PROG ()
      (SETQ FOUND_INT NIL)
      (SETQ FOUND_MAT_INT NIL)
      (SETQ FOUND_COMPL NIL)
      (SETQ FOUND_MAT_COMPL NIL)
      (COND
       ((PAIRP ELEM)
        (PROGN
         (COND
          ((EQUAL (CAR ELEM) 'MAT)
           (PROGN (ISARB_MAT_COMPL (CDR ELEM)) (ISARB_MAT_INT (CDR ELEM))))
          (T (PROGN (ISARB_COMPL ELEM) (ISARB_INT ELEM))))
         (COND
          ((OR (EQUAL FOUND_COMPL 1) (EQUAL FOUND_INT 1))
           (PROGN
            (SETQ FLAGG 1)
            (PRINTOUT "<apply><forall/>")
            (SETQ INDENT (PLUS INDENT 3))
            (PRINT_ARB_COMPL ELEM)
            (PRINT_ARB_INT ELEM)
            (PRINTOUT "<condition>")
            (SETQ INDENT (PLUS INDENT 3))
            (COND
             ((AND (EQUAL FOUND_COMPL 1) (EQUAL FOUND_INT 1))
              (PROGN (PRINTOUT "<apply><and/>") (SETQ INDENT (PLUS INDENT 3))))
             ((GREATERP (LENGTH CONSTS_COMPL) 1)
              (PROGN (PRINTOUT "<apply><and/>") (SETQ INDENT (PLUS INDENT 3))))
             ((GREATERP (LENGTH CONSTS_INT) 1)
              (PROGN
               (PRINTOUT "<apply><and/>")
               (SETQ INDENT (PLUS INDENT 3)))))
            (COND ((EQUAL FOUND_COMPL 1) (IN_COMPLEXML CONSTS_COMPL)))
            (COND ((EQUAL FOUND_INT 1) (IN_INTEGERML CONSTS_INT)))
            (COND
             ((AND (EQUAL FOUND_COMPL 1) (EQUAL FOUND_INT 1))
              (PROGN
               (SETQ INDENT (DIFFERENCE INDENT 3))
               (PRINTOUT "</apply>")))
             ((GREATERP (LENGTH CONSTS_COMPL) 1)
              (PROGN
               (SETQ INDENT (DIFFERENCE INDENT 3))
               (PRINTOUT "</apply>")))
             ((GREATERP (LENGTH CONSTS_INT) 1)
              (PROGN
               (SETQ INDENT (DIFFERENCE INDENT 3))
               (PRINTOUT "</apply>"))))
            (SETQ INDENT (DIFFERENCE INDENT 3))
            (PRINTOUT "</condition>"))))
         (COND
          ((OR (EQUAL FOUND_MAT_COMPL 1) (EQUAL FOUND_MAT_INT 1))
           (PROGN
            (SETQ FLAGG 1)
            (PRINTOUT "<apply><forall/>")
            (SETQ INDENT (PLUS INDENT 3))
            (PRINTARB_MAT_COMPL (CDR ELEM))
            (PRINTARB_MAT_INT (CDR ELEM))
            (PRINTOUT "<condition>")
            (SETQ INDENT (PLUS INDENT 3))
            (COND
             ((AND (EQUAL FOUND_MAT_COMPL 1) (EQUAL FOUND_MAT_INT 1))
              (PROGN (PRINTOUT "<apply><and/>") (SETQ INDENT (PLUS INDENT 3))))
             ((GREATERP (LENGTH CONSTS_MAT_COMPL) 1)
              (PROGN (PRINTOUT "<apply><and/>") (SETQ INDENT (PLUS INDENT 3))))
             ((GREATERP (LENGTH CONSTS_MAT_INT) 1)
              (PROGN
               (PRINTOUT "<apply><and/>")
               (SETQ INDENT (PLUS INDENT 3)))))
            (COND ((EQUAL FOUND_MAT_COMPL 1) (IN_COMPLEXML CONSTS_MAT_COMPL)))
            (COND ((EQUAL FOUND_MAT_INT 1) (IN_INTEGERML CONSTS_MAT_INT)))
            (COND
             ((AND (EQUAL FOUND_MAT_COMPL 1) (EQUAL FOUND_MAT_INT 1))
              (PROGN
               (SETQ INDENT (DIFFERENCE INDENT 3))
               (PRINTOUT "</apply>")))
             ((GREATERP (LENGTH CONSTS_MAT_COMPL) 1)
              (PROGN
               (SETQ INDENT (DIFFERENCE INDENT 3))
               (PRINTOUT "</apply>")))
             ((GREATERP (LENGTH CONSTS_MAT_INT) 1)
              (PROGN
               (SETQ INDENT (DIFFERENCE INDENT 3))
               (PRINTOUT "</apply>"))))
            (SETQ INDENT (DIFFERENCE INDENT 3))
            (PRINTOUT "</condition>"))))
         NIL))))) 
(PUT 'IN_COMPLEXML 'NUMBER-OF-ARGS 1) 
(PUT 'IN_COMPLEXML 'DEFINED-ON-LINE '2315) 
(PUT 'IN_COMPLEXML 'DEFINED-IN-FILE 'MATHML/MATHML.RED) 
(PUT 'IN_COMPLEXML 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE IN_COMPLEXML (ELEM)
    (PROG ()
      (COND
       ((NEQ ELEM NIL)
        (PROGN
         (PRINTOUT "<reln><in/>")
         (SETQ INDENT (PLUS INDENT 3))
         (PRINTSUB2 (CAR ELEM) 'COMPL)
         (PRINTOUT "<complexes/>")
         (SETQ INDENT (DIFFERENCE INDENT 3))
         (PRINTOUT "</reln>")
         (IN_COMPLEXML (CDR ELEM))))))) 
(PUT 'IN_INTEGERML 'NUMBER-OF-ARGS 1) 
(PUT 'IN_INTEGERML 'DEFINED-ON-LINE '2329) 
(PUT 'IN_INTEGERML 'DEFINED-IN-FILE 'MATHML/MATHML.RED) 
(PUT 'IN_INTEGERML 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE IN_INTEGERML (ELEM)
    (PROG ()
      (COND
       ((NEQ ELEM NIL)
        (PROGN
         (PRINTOUT "<reln><in/>")
         (SETQ INDENT (PLUS INDENT 3))
         (PRINTSUB2 (CAR ELEM) 'INT)
         (PRINTOUT "<integers/>")
         (SETQ INDENT (DIFFERENCE INDENT 3))
         (PRINTOUT "</reln>")
         (IN_INTEGERML (CDR ELEM))))))) 
(PUT 'CLOSE_FORALL 'NUMBER-OF-ARGS 0) 
(PUT 'CLOSE_FORALL 'DEFINED-ON-LINE '2342) 
(PUT 'CLOSE_FORALL 'DEFINED-IN-FILE 'MATHML/MATHML.RED) 
(PUT 'CLOSE_FORALL 'PROCEDURE_TYPE '(ARROW UNIT GENERAL)) 
(DE CLOSE_FORALL NIL (PROG () (COND ((EQUAL FLAGG 1) (PRINTOUT "</apply>"))))) 
(PUT 'SETQML 'NUMBER-OF-ARGS 1) 
(PUT 'SETQML 'DEFINED-ON-LINE '2349) 
(PUT 'SETQML 'DEFINED-IN-FILE 'MATHML/MATHML.RED) 
(PUT 'SETQML 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE SETQML (ELEM)
    (PROG ()
      (PRINTOUT "<declare>")
      (SETQ INDENT (PLUS INDENT 3))
      (EXPRESSION (CADR ELEM))
      (EXPRESSION (CADDR ELEM))
      (SETQ INDENT (DIFFERENCE INDENT 3))
      (PRINTOUT "</declare>"))) 
(PUT 'LISTML 'NUMBER-OF-ARGS 1) 
(PUT 'LISTML 'DEFINED-ON-LINE '2361) 
(PUT 'LISTML 'DEFINED-IN-FILE 'MATHML/MATHML.RED) 
(PUT 'LISTML 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE LISTML (ELEM)
    (PROG ()
      (PRINTOUT "<list>")
      (SETQ INDENT (PLUS INDENT 3))
      (MULTILISTS ELEM)
      (SETQ INDENT (DIFFERENCE INDENT 3))
      (PRINTOUT "</list>"))) 
(PUT 'MULTILISTS 'NUMBER-OF-ARGS 1) 
(PUT 'MULTILISTS 'DEFINED-ON-LINE '2370) 
(PUT 'MULTILISTS 'DEFINED-IN-FILE 'MATHML/MATHML.RED) 
(PUT 'MULTILISTS 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE MULTILISTS (ELEM)
    (PROG ()
      (COND
       ((NEQ ELEM NIL)
        (COND ((EQUAL (LENGTH ELEM) 1) (EXPRESSION (CAR ELEM)))
              (T
               (PROGN (EXPRESSION (CAR ELEM)) (MULTILISTS (CDR ELEM)) NIL))))))) 
(PUT 'EXPRESSION 'NUMBER-OF-ARGS 1) 
(PUT 'EXPRESSION 'DEFINED-ON-LINE '2382) 
(PUT 'EXPRESSION 'DEFINED-IN-FILE 'MATHML/MATHML.RED) 
(PUT 'EXPRESSION 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE EXPRESSION (ELEM)
    (PROG (AA)
      (COND ((ATOM ELEM) (F4 ELEM))
            ((EQUAL (CAR ELEM) '|:RD:|) (PROGN (PRINTOUT ELEM)))
            (T
             (PROGN
              (COND
               ((SETQ AA (ASSOC (CAR ELEM) UNARY*))
                (PROGN
                 (COND
                  ((EQUAL (CADDR AA) NIL) (APPLY (CADR AA) (LIST (CDR ELEM))))
                  (T (APPLY (CADR AA) (LIST (CDR ELEM) (CADDR AA)))))))
               ((EQUAL (CAR ELEM) '*SQ) (EXPRESSION (PREPSQ (CADR ELEM))))
               (T (OPERATOR_FN ELEM)))
              NIL))))) 
(PUT 'SUM_PRODML 'NUMBER-OF-ARGS 2) 
(PUT 'SUM_PRODML 'DEFINED-ON-LINE '2401) 
(PUT 'SUM_PRODML 'DEFINED-IN-FILE 'MATHML/MATHML.RED) 
(PUT 'SUM_PRODML 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE SUM_PRODML (ELEM TTY)
    (PROG ()
      (PRINTOUT "<apply>")
      (PRINC "<")
      (PRINC TTY)
      (PRINC "/>")
      (SETQ INDENT (PLUS INDENT 3))
      (PRINTOUT "<bvar>")
      (SETQ INDENT (PLUS INDENT 3))
      (EXPRESSION (CADR ELEM))
      (SETQ INDENT (DIFFERENCE INDENT 3))
      (PRINTOUT "</bvar>")
      (PRINTOUT "<lowlimit>")
      (SETQ INDENT (PLUS INDENT 3))
      (EXPRESSION (CADDR ELEM))
      (SETQ INDENT (DIFFERENCE INDENT 3))
      (PRINTOUT "</lowlimit>")
      (PRINTOUT "<uplimit>")
      (SETQ INDENT (PLUS INDENT 3))
      (EXPRESSION (CADDDR ELEM))
      (SETQ INDENT (DIFFERENCE INDENT 3))
      (PRINTOUT "</uplimit>")
      (EXPRESSION (CAR ELEM))
      (SETQ INDENT (DIFFERENCE INDENT 3))
      (PRINTOUT "</apply>"))) 
(PUT 'DFML 'NUMBER-OF-ARGS 1) 
(PUT 'DFML 'DEFINED-ON-LINE '2428) 
(PUT 'DFML 'DEFINED-IN-FILE 'MATHML/MATHML.RED) 
(PUT 'DFML 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE DFML (ELEM)
    (PROG (TEST)
      (SETQ TEST (CDR ELEM))
      (COND
       ((OR (EQUAL (LENGTH TEST) 1)
            (AND (EQUAL (LENGTH TEST) 2) (NUMBERP (CADR TEST))))
        (PRINTOUT "<apply><diff/>"))
       (T (PRINTOUT "<apply><partialdiff/>")))
      (SETQ INDENT (PLUS INDENT 3))
      (DFARGS (CDR ELEM))
      (EXPRESSION (CAR ELEM))
      (SETQ INDENT (DIFFERENCE INDENT 3))
      (PRINTOUT "</apply>"))) 
(PUT 'DFARGS 'NUMBER-OF-ARGS 1) 
(PUT 'DFARGS 'DEFINED-ON-LINE '2442) 
(PUT 'DFARGS 'DEFINED-IN-FILE 'MATHML/MATHML.RED) 
(PUT 'DFARGS 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE DFARGS (ELEM)
    (PROG ()
      (COND
       ((NEQ ELEM NIL)
        (PROGN
         (COND
          ((GREATERP (LENGTH ELEM) 1)
           (PROGN
            (COND
             ((NUMBERP (CADR ELEM))
              (PROGN
               (PRINTOUT "<bvar>")
               (SETQ INDENT (PLUS INDENT 3))
               (EXPRESSION (CAR ELEM))
               (DEGREEML (CADR ELEM))
               (SETQ INDENT (DIFFERENCE INDENT 3))
               (PRINTOUT "</bvar>")
               (DFARGS (CDDR ELEM))))
             (T
              (PROGN
               (PRINTOUT "<bvar>")
               (SETQ INDENT (PLUS INDENT 3))
               (EXPRESSION (CAR ELEM))
               (SETQ INDENT (DIFFERENCE INDENT 3))
               (PRINTOUT "</bvar>")
               (DFARGS (CDR ELEM)))))
            NIL))
          (T
           (PROGN
            (PRINTOUT "<bvar>")
            (SETQ INDENT (PLUS INDENT 3))
            (EXPRESSION (CAR ELEM))
            (SETQ INDENT (DIFFERENCE INDENT 3))
            (PRINTOUT "</bvar>")
            (DFARGS (CDR ELEM)))))))))) 
(PUT 'DEGREEML 'NUMBER-OF-ARGS 1) 
(PUT 'DEGREEML 'DEFINED-ON-LINE '2472) 
(PUT 'DEGREEML 'DEFINED-IN-FILE 'MATHML/MATHML.RED) 
(PUT 'DEGREEML 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE DEGREEML (ELEM)
    (PROG ()
      (PRINTOUT "<degree>")
      (SETQ INDENT (PLUS INDENT 3))
      (EXPRESSION ELEM)
      (SETQ INDENT (DIFFERENCE INDENT 3))
      (PRINTOUT "</degree>"))) 
(PUT 'COMPLPART 'NUMBER-OF-ARGS 2) 
(PUT 'COMPLPART 'DEFINED-ON-LINE '2483) 
(PUT 'COMPLPART 'DEFINED-IN-FILE 'MATHML/MATHML.RED) 
(PUT 'COMPLPART 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE COMPLPART (ELEM TTY)
    (PROG ()
      (PRINTOUT "<apply><fn><")
      (PRINC TTY)
      (PRINC "></fn>")
      (SETQ INDENT (PLUS INDENT 3))
      (EXPRESSION (CAR ELEM))
      (SETQ INDENT (DIFFERENCE INDENT 3))
      (PRINTOUT "<apply>"))) 
(PUT 'SETS 'NUMBER-OF-ARGS 2) 
(PUT 'SETS 'DEFINED-ON-LINE '2496) 
(PUT 'SETS 'DEFINED-IN-FILE 'MATHML/MATHML.RED) 
(PUT 'SETS 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE SETS (ELEM TTY)
    (PROG ()
      (PRINTOUT "<apply>")
      (PRINC "<")
      (PRINC TTY)
      (PRINC "/>")
      (SETQ INDENT (PLUS INDENT 3))
      (MULTI_ELEM ELEM)
      (SETQ INDENT (DIFFERENCE INDENT 3))
      (PRINTOUT "</apply>"))) 
(PUT 'RELN 'NUMBER-OF-ARGS 2) 
(PUT 'RELN 'DEFINED-ON-LINE '2508) 
(PUT 'RELN 'DEFINED-IN-FILE 'MATHML/MATHML.RED) 
(PUT 'RELN 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE RELN (ELEM TTY)
    (PROG ()
      (PRINTOUT "<reln>")
      (PRINC "<")
      (PRINC TTY)
      (PRINC "/>")
      (SETQ INDENT (PLUS INDENT 3))
      (MULTI_ELEM ELEM)
      (SETQ INDENT (DIFFERENCE INDENT 3))
      (PRINTOUT "</reln>"))) 
(PUT 'SETML 'NUMBER-OF-ARGS 1) 
(PUT 'SETML 'DEFINED-ON-LINE '2520) 
(PUT 'SETML 'DEFINED-IN-FILE 'MATHML/MATHML.RED) 
(PUT 'SETML 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE SETML (ELEM)
    (PROG ()
      (PRINTOUT "<set>")
      (SETQ INDENT (PLUS INDENT 3))
      (MULTI_ELEM ELEM)
      (SETQ INDENT (DIFFERENCE INDENT 3))
      (PRINTOUT "</set>"))) 
(PUT 'OPERATOR_FN 'NUMBER-OF-ARGS 1) 
(PUT 'OPERATOR_FN 'DEFINED-ON-LINE '2532) 
(PUT 'OPERATOR_FN 'DEFINED-IN-FILE 'MATHML/MATHML.RED) 
(PUT 'OPERATOR_FN 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE OPERATOR_FN (ELEM)
    (PROG (ASSO)
      (SETQ ASSO
              (ATSOC (CAR ELEM)
                     '((ARCSINH . SINH) (ARCSECH . SECH) (ARCCOSH . COSH)
                       (ARCCSCH CSCH) (ARCTANH . TANH) (ARCCOTH . COTH))))
      (COND
       (ASSO (PROGN (PRINTOUT "<apply><inverse/>") (PRINC (CDR ASSO)) NIL))
       (T
        (PROGN
         (PRINTOUT "<apply><fn><ci>")
         (PRINC (CAR ELEM))
         (PRINC "</ci></fn>"))))
      (SETQ INDENT (PLUS INDENT 3))
      (MULTI_ARGS (CDR ELEM))
      (SETQ INDENT (DIFFERENCE INDENT 3))
      (PRINTOUT "</apply>"))) 
(PUT 'MULTI_ARGS 'NUMBER-OF-ARGS 1) 
(PUT 'MULTI_ARGS 'DEFINED-ON-LINE '2552) 
(PUT 'MULTI_ARGS 'DEFINED-IN-FILE 'MATHML/MATHML.RED) 
(PUT 'MULTI_ARGS 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE MULTI_ARGS (ELEM)
    (PROG ()
      (COND
       ((NEQ ELEM NIL)
        (PROGN (EXPRESSION (CAR ELEM)) (MULTI_ARGS (CDR ELEM)) NIL))))) 
(PUT 'TRIGML 'NUMBER-OF-ARGS 2) 
(PUT 'TRIGML 'DEFINED-ON-LINE '2560) 
(PUT 'TRIGML 'DEFINED-IN-FILE 'MATHML/MATHML.RED) 
(PUT 'TRIGML 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE TRIGML (ELEM TYPE)
    (PROG ()
      (PRINTOUT "<apply>")
      (COND
       ((OR (EQUAL TYPE 'ACOS) (EQUAL TYPE 'ASIN) (EQUAL TYPE 'ATAN))
        (PROGN
         (COND ((EQUAL TYPE 'ACOS) (PRINC "<arccos/>")))
         (COND ((EQUAL TYPE 'ASIN) (PRINC "<arcsin/>")))
         (COND ((EQUAL TYPE 'ATAN) (PRINC "<arctan/>"))))))
      (SETQ INDENT (PLUS INDENT 3))
      (EXPRESSION (CAR ELEM))
      (SETQ INDENT (DIFFERENCE INDENT 3))
      (PRINTOUT "</apply>"))) 
(PUT 'UNARY 'NUMBER-OF-ARGS 2) 
(PUT 'UNARY 'DEFINED-ON-LINE '2575) 
(PUT 'UNARY 'DEFINED-IN-FILE 'MATHML/MATHML.RED) 
(PUT 'UNARY 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE UNARY (ELEM TYPE)
    (PROG ()
      (PRINTOUT "<apply>")
      (PRINC "<")
      (PRINC TYPE)
      (PRINC "/>")
      (SETQ INDENT (PLUS INDENT 3))
      (EXPRESSION (CAR ELEM))
      (SETQ INDENT (DIFFERENCE INDENT 3))
      (PRINTOUT "</apply>"))) 
(PUT 'LOG_BASEML 'NUMBER-OF-ARGS 2) 
(PUT 'LOG_BASEML 'DEFINED-ON-LINE '2589) 
(PUT 'LOG_BASEML 'DEFINED-IN-FILE 'MATHML/MATHML.RED) 
(PUT 'LOG_BASEML 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE LOG_BASEML (ELEM TYPE)
    (PROG ()
      (PRINTOUT "<apply><log/>")
      (SETQ INDENT (PLUS INDENT 3))
      (PRINTOUT "<logbase>")
      (SETQ INDENT (PLUS INDENT 3))
      (COND ((EQUAL TYPE 'LOGB) (EXPRESSION (CADR ELEM))))
      (COND ((EQUAL TYPE 'LOG10) (F4 10)))
      (SETQ INDENT (DIFFERENCE INDENT 3))
      (PRINTOUT "</logbase>")
      (EXPRESSION (CAR ELEM))
      (SETQ INDENT (DIFFERENCE INDENT 3))
      (PRINTOUT "<apply>"))) 
(PUT 'EQUALML 'NUMBER-OF-ARGS 1) 
(PUT 'EQUALML 'DEFINED-ON-LINE '2606) 
(PUT 'EQUALML 'DEFINED-IN-FILE 'MATHML/MATHML.RED) 
(PUT 'EQUALML 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE EQUALML (ELEM)
    (PROG ()
      (PRINTOUT "<reln><eq/>")
      (SETQ INDENT (PLUS INDENT 3))
      (EXPRESSION (CAR ELEM))
      (EXPRESSION (CADR ELEM))
      (SETQ INDENT (DIFFERENCE INDENT 3))
      (PRINTOUT "</reln>"))) 
(PUT 'SQRTML 'NUMBER-OF-ARGS 2) 
(PUT 'SQRTML 'DEFINED-ON-LINE '2618) 
(PUT 'SQRTML 'DEFINED-IN-FILE 'MATHML/MATHML.RED) 
(PUT 'SQRTML 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE SQRTML (ELEM TYPE)
    (PROG ()
      (PRINTOUT "<apply><root/>")
      (SETQ INDENT (PLUS INDENT 3))
      (PRINTOUT "<degree><cn> 2 </cn></degree>")
      (EXPRESSION (CAR ELEM))
      (SETQ INDENT (DIFFERENCE INDENT 3))
      (PRINTOUT "</apply>"))) 
(PUT 'INTEGRALML 'NUMBER-OF-ARGS 1) 
(PUT 'INTEGRALML 'DEFINED-ON-LINE '2630) 
(PUT 'INTEGRALML 'DEFINED-IN-FILE 'MATHML/MATHML.RED) 
(PUT 'INTEGRALML 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE INTEGRALML (ELEM)
    (PROG ()
      (PRINTOUT "<apply><int/>")
      (SETQ INDENT (PLUS INDENT 3))
      (PRINTOUT "<bvar>")
      (SETQ INDENT (PLUS INDENT 3))
      (EXPRESSION (CADR ELEM))
      (SETQ INDENT (DIFFERENCE INDENT 3))
      (PRINTOUT "</bvar>")
      (COND
       ((GREATERP (LENGTH (CDR ELEM)) 1)
        (PROGN
         (PRINTOUT "<lowlimit>")
         (SETQ INDENT (PLUS INDENT 3))
         (EXPRESSION (CADDR ELEM))
         (SETQ INDENT (DIFFERENCE INDENT 3))
         (PRINTOUT "</lowlimit>")
         (PRINTOUT "<uplimit>")
         (SETQ INDENT (PLUS INDENT 3))
         (EXPRESSION (CADDDR ELEM))
         (SETQ INDENT (DIFFERENCE INDENT 3))
         (PRINTOUT "</uplimit>"))))
      (EXPRESSION (CAR ELEM))
      (SETQ INDENT (DIFFERENCE INDENT 3))
      (PRINTOUT "</apply>"))) 
(PUT 'QUOTIENTML 'NUMBER-OF-ARGS 1) 
(PUT 'QUOTIENTML 'DEFINED-ON-LINE '2657) 
(PUT 'QUOTIENTML 'DEFINED-IN-FILE 'MATHML/MATHML.RED) 
(PUT 'QUOTIENTML 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE QUOTIENTML (ELEM)
    (PROG ()
      (COND
       ((AND (NUMBERP (CAR ELEM)) (NUMBERP (CADR ELEM)))
        (PROGN
         (COND ((EQUAL *WEB NIL) (PRINTOUT "<cn type=\"rational\"> "))
               (T (PRINTOUT "<cn type=&quot;rational&quot;> ")))
         (PRINC (CAR ELEM))
         (PRINC " <sep/> ")
         (PRINC (CADR ELEM))
         (PRINC " </cn>")))
       (T
        (PROGN
         (PRINTOUT "<apply><divide/>")
         (SETQ INDENT (PLUS INDENT 3))
         (EXPRESSION (CAR ELEM))
         (EXPRESSION (CADR ELEM))
         (SETQ INDENT (DIFFERENCE INDENT 3))
         (PRINTOUT "</apply>")))))) 
(PUT 'N_NARY 'NUMBER-OF-ARGS 2) 
(PUT 'N_NARY 'DEFINED-ON-LINE '2677) 
(PUT 'N_NARY 'DEFINED-IN-FILE 'MATHML/MATHML.RED) 
(PUT 'N_NARY 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE N_NARY (ELEM TYPE)
    (PROG ()
      (COND
       ((AND (EQUAL (CAR ELEM) 'E) (EQUAL TYPE 'POWER))
        (UNARY (CDR ELEM) 'EXP))
       (T
        (PROGN
         (PRINTOUT "<apply>")
         (PRINC "<")
         (PRINC TYPE)
         (PRINC "/>")
         (SETQ INDENT (PLUS INDENT 3))
         (MULTI_ELEM ELEM)
         (SETQ INDENT (DIFFERENCE INDENT 3))
         (PRINTOUT "</apply>")))))) 
(PUT 'MULTI_ELEM 'NUMBER-OF-ARGS 1) 
(PUT 'MULTI_ELEM 'DEFINED-ON-LINE '2691) 
(PUT 'MULTI_ELEM 'DEFINED-IN-FILE 'MATHML/MATHML.RED) 
(PUT 'MULTI_ELEM 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE MULTI_ELEM (ELEM)
    (PROG ()
      (COND ((EQUAL (LENGTH ELEM) 1) (EXPRESSION (CAR ELEM)))
            (T (PROGN (EXPRESSION (CAR ELEM)) (MULTI_ELEM (CDR ELEM)) NIL))))) 
(PUT 'MINUSML 'NUMBER-OF-ARGS 1) 
(PUT 'MINUSML 'DEFINED-ON-LINE '2698) 
(PUT 'MINUSML 'DEFINED-IN-FILE 'MATHML/MATHML.RED) 
(PUT 'MINUSML 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE MINUSML (ELEM)
    (PROG ()
      (PRINTOUT "<apply><minus/>")
      (SETQ INDENT (PLUS INDENT 3))
      (MULTIMINUS ELEM)
      (SETQ INDENT (DIFFERENCE INDENT 3))
      (PRINTOUT "</apply>"))) 
(PUT 'MULTIMINUS 'NUMBER-OF-ARGS 1) 
(PUT 'MULTIMINUS 'DEFINED-ON-LINE '2707) 
(PUT 'MULTIMINUS 'DEFINED-IN-FILE 'MATHML/MATHML.RED) 
(PUT 'MULTIMINUS 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE MULTIMINUS (ELEM)
    (PROG ()
      (EXPRESSION (CAR ELEM))
      (COND ((EQUAL (LENGTH ELEM) 2) (EXPRESSION (CADR ELEM)))))) 
(PUT 'F4 'NUMBER-OF-ARGS 1) 
(PUT 'F4 'DEFINED-ON-LINE '2716) 
(PUT 'F4 'DEFINED-IN-FILE 'MATHML/MATHML.RED) 
(PUT 'F4 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE F4 (EXP)
    (PROG ()
      (COND ((EQUAL EXP 'PI) (PRINC "<pi/>"))
            ((EQUAL EXP 'EULER_GAMMA) (PRINC "<eulergamma/>"))
            ((EQUAL EXP 'TRUE) (PRINC "<true/>"))
            ((EQUAL EXP 'FALSE) (PRINC "<false/>"))
            ((EQUAL EXP '|nAn|) (PRINC "<notanumber/>"))
            ((EQUAL EXP 'INFINITY)
             (PROGN
              (COND ((EQUAL *WEB NIL) (PRINTOUT "<cn type=\"constant\">"))
                    (T (PRINTOUT "<cn type=&quot;constant&quot;>")))
              (PRINC "&infin;")
              (PRINC "</cn>")))
            (T
             (PROGN
              (COND
               ((EQUAL EXP 'E)
                (PROGN
                 (COND ((EQUAL *WEB NIL) (PRINTOUT "<cn type=\"constant\">"))
                       (T (PRINTOUT "<cn type=&quot;constant&quot;>")))
                 (PRINC "&ExponentialE;")
                 (PRINC "</cn>")))
               (T
                (PROGN
                 (COND
                  ((EQUAL EXP 'I)
                   (PROGN
                    (COND
                     ((EQUAL *WEB NIL) (PRINTOUT "<cn type=\"constant\">"))
                     (T (PRINTOUT "<cn type=&quot;constant&quot;>")))
                    (PRINC "&ImaginaryI;")
                    (PRINC "</cn>")))
                  (T
                   (PROGN
                    (COND
                     ((NUMBERP EXP)
                      (PROGN
                       (PRINTOUT "<cn")
                       (COND
                        ((FLOATP EXP)
                         (PROGN
                          (COND ((EQUAL *WEB NIL) (PRINC " type=\"real\">"))
                                (T (PRINC " type=&quot;real&quot;>")))))
                        ((FIXP EXP)
                         (PROGN
                          (COND ((EQUAL *WEB NIL) (PRINC " type=\"integer\">"))
                                (T (PRINC " type=&quot;integer&quot;>")))))
                        (T (PRINC ">")))
                       (PRINC EXP)
                       (PRINC "</cn>"))))
                    (COND
                     ((IDP EXP)
                      (PROGN
                       (PRINTOUT "<ci")
                       (COND
                        ((LISTP EXP)
                         (PROGN
                          (COND ((EQUAL *WEB NIL) (PRINC " type=\"list\">"))
                                (T (PRINC " type=&quot;list&quot;>")))))
                        ((VECTORP EXP)
                         (PROGN
                          (COND ((EQUAL *WEB NIL) (PRINC " type=\"vector\">"))
                                (T (PRINC " type=&quot;vector&quot;>")))))
                        (T (PRINC ">")))
                       (PRINC EXP)
                       (PRINC "</ci>"))))
                    NIL))))))))))) 
(PUT 'PRINTSUB 'NUMBER-OF-ARGS 2) 
(PUT 'PRINTSUB 'DEFINED-ON-LINE '2778) 
(PUT 'PRINTSUB 'DEFINED-IN-FILE 'MATHML/MATHML.RED) 
(PUT 'PRINTSUB 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE PRINTSUB (SUBSCRIPT TYPE)
    (PROG ()
      (PRINTOUT "<bvar>")
      (SETQ INDENT (PLUS INDENT 3))
      (PRINTOUT "<ci>")
      (SETQ INDENT (PLUS INDENT 3))
      (PRINTOUT "<msub>")
      (SETQ INDENT (PLUS INDENT 3))
      (COND ((EQUAL TYPE 'COMPL) (PRINTOUT "<mi>c</mi>")))
      (COND ((EQUAL TYPE 'INT) (PRINTOUT "<mi>d</mi>")))
      (PRINTOUT "<mn>")
      (PRINC SUBSCRIPT)
      (PRINC "</mn>")
      (SETQ INDENT (DIFFERENCE INDENT 3))
      (PRINTOUT "</msub>")
      (SETQ INDENT (DIFFERENCE INDENT 3))
      (PRINTOUT "</ci>")
      (SETQ INDENT (DIFFERENCE INDENT 3))
      (PRINTOUT "</bvar>"))) 
(PUT 'PRINTSUB2 'NUMBER-OF-ARGS 2) 
(PUT 'PRINTSUB2 'DEFINED-ON-LINE '2800) 
(PUT 'PRINTSUB2 'DEFINED-IN-FILE 'MATHML/MATHML.RED) 
(PUT 'PRINTSUB2 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE PRINTSUB2 (SUBSCRIPT TYPE)
    (PROG ()
      (PRINTOUT "<ci>")
      (SETQ INDENT (PLUS INDENT 3))
      (PRINTOUT "<msub>")
      (SETQ INDENT (PLUS INDENT 3))
      (COND ((EQUAL TYPE 'COMPL) (PRINTOUT "<mi>c</mi>")))
      (COND ((EQUAL TYPE 'INT) (PRINTOUT "<mi>d</mi>")))
      (PRINTOUT "<mn>")
      (PRINC SUBSCRIPT)
      (PRINC "</mn>")
      (SETQ INDENT (DIFFERENCE INDENT 3))
      (PRINTOUT "</msub>")
      (SETQ INDENT (DIFFERENCE INDENT 3))
      (PRINTOUT "</ci>"))) 
(PUT 'MA_PRINT 'NUMBER-OF-ARGS 1) 
(PUT 'MA_PRINT 'DEFINED-ON-LINE '2820) 
(PUT 'MA_PRINT 'DEFINED-IN-FILE 'MATHML/MATHML.RED) 
(PUT 'MA_PRINT 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE MA_PRINT (L)
    (PROG (TEMP)
      (SETQ TEMP OUTPUTHANDLER*)
      (SETQ OUTPUTHANDLER* NIL)
      (TERPRI* NIL)
      (COND ((EQUAL *WEB NIL) (MAPRIN "<cn type=\"real\">"))
            (T (MAPRIN "<cn type=&quot;real&quot;>")))
      (MAPRIN L)
      (MAPRIN "</cn>")
      (TERPRI* NIL)
      (SETQ OUTPUTHANDLER* TEMP))) 
(PUT 'PRINTOUT 'NUMBER-OF-ARGS 1) 
(PUT 'PRINTOUT 'DEFINED-ON-LINE '2836) 
(PUT 'PRINTOUT 'DEFINED-IN-FILE 'MATHML/MATHML.RED) 
(PUT 'PRINTOUT 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE PRINTOUT (STR)
    (PROG ()
      (COND ((EQUAL *WEB NIL) (TERPRI)))
      (COND
       ((EQUAL *WEB NIL)
        (PROG (I)
          (SETQ I 1)
         LAB
          (COND ((MINUSP (DIFFERENCE INDENT I)) (RETURN NIL)))
          (PROGN (PRINC " "))
          (SETQ I (PLUS2 I 1))
          (GO LAB))))
      (COND
       ((PAIRP STR)
        (PROGN
         (COND
          ((OR (EQUAL (CAR STR) '|:RD:|) (EQUAL (CAR STR) '|:RN:|))
           (MA_PRINT STR))
          (T (PRINC STR)))))
       (T (PRINC STR))))) 
(PUT 'ISSQ 'NUMBER-OF-ARGS 1) 
(PUT 'ISSQ 'DEFINED-ON-LINE '2851) 
(PUT 'ISSQ 'DEFINED-IN-FILE 'MATHML/MATHML.RED) 
(PUT 'ISSQ 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE ISSQ (ELEM)
    (PROG (VALUE)
      (SETQ VALUE 0)
      (COND ((ATOM ELEM) (SETQ VALUE 0))
            (T
             (PROGN
              (COND ((EQUAL (CAR ELEM) '*SQ) (SETQ VALUE 1))
                    (T (SETQ VALUE 0))))))
      (RETURN VALUE))) 
(PUT 'ISARB_COMPL 'NUMBER-OF-ARGS 1) 
(PUT 'ISARB_COMPL 'DEFINED-ON-LINE '2860) 
(PUT 'ISARB_COMPL 'DEFINED-IN-FILE 'MATHML/MATHML.RED) 
(PUT 'ISARB_COMPL 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE ISARB_COMPL (ELEM)
    (PROG ()
      (COND
       ((PAIRP ELEM)
        (PROGN
         (COND ((EQUAL (CAR ELEM) 'ARBCOMPLEX) (SETQ FOUND_COMPL 1))
               (T (MULTI_ISARB_COMPL (CDR ELEM))))
         NIL))))) 
(PUT 'MULTI_ISARB_COMPL 'NUMBER-OF-ARGS 1) 
(PUT 'MULTI_ISARB_COMPL 'DEFINED-ON-LINE '2867) 
(PUT 'MULTI_ISARB_COMPL 'DEFINED-IN-FILE 'MATHML/MATHML.RED) 
(PUT 'MULTI_ISARB_COMPL 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE MULTI_ISARB_COMPL (ELEM)
    (PROG ()
      (COND
       ((PAIRP ELEM)
        (PROGN
         (COND ((EQUAL ELEM NIL) NIL)
               (T
                (PROGN
                 (ISARB_COMPL (CAR ELEM))
                 (MULTI_ISARB_COMPL (CDR ELEM))
                 NIL)))))))) 
(PUT 'ISARB_INT 'NUMBER-OF-ARGS 1) 
(PUT 'ISARB_INT 'DEFINED-ON-LINE '2875) 
(PUT 'ISARB_INT 'DEFINED-IN-FILE 'MATHML/MATHML.RED) 
(PUT 'ISARB_INT 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE ISARB_INT (ELEM)
    (PROG ()
      (COND
       ((PAIRP ELEM)
        (PROGN
         (COND ((EQUAL (CAR ELEM) 'ARBINT) (SETQ FOUND_INT 1))
               (T (MULTI_ISARB_INT (CDR ELEM))))
         NIL))))) 
(PUT 'MULTI_ISARB_INT 'NUMBER-OF-ARGS 1) 
(PUT 'MULTI_ISARB_INT 'DEFINED-ON-LINE '2882) 
(PUT 'MULTI_ISARB_INT 'DEFINED-IN-FILE 'MATHML/MATHML.RED) 
(PUT 'MULTI_ISARB_INT 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE MULTI_ISARB_INT (ELEM)
    (PROG ()
      (COND
       ((PAIRP ELEM)
        (PROGN
         (COND ((EQUAL ELEM NIL) NIL)
               (T
                (PROGN
                 (ISARB_INT (CAR ELEM))
                 (MULTI_ISARB_INT (CDR ELEM))
                 NIL)))))))) 
(PUT 'PRINT_ARB_COMPL 'NUMBER-OF-ARGS 1) 
(PUT 'PRINT_ARB_COMPL 'DEFINED-ON-LINE '2889) 
(PUT 'PRINT_ARB_COMPL 'DEFINED-IN-FILE 'MATHML/MATHML.RED) 
(PUT 'PRINT_ARB_COMPL 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE PRINT_ARB_COMPL (ELEM)
    (PROG ()
      (COND
       ((PAIRP ELEM)
        (PROGN
         (COND
          ((EQUAL (CAR ELEM) 'ARBCOMPLEX)
           (PROGN
            (COND
             ((EQ (XNP (LIST (CADR ELEM)) CONSTS_COMPL) NIL)
              (PROGN
               (PRINTSUB (CADR ELEM) 'COMPL)
               (SETQ CONSTS_COMPL (CONS (CADR ELEM) CONSTS_COMPL)))))))
          (T (MULTI_COMPL (CDR ELEM))))
         NIL))))) 
(PUT 'MULTI_COMPL 'NUMBER-OF-ARGS 1) 
(PUT 'MULTI_COMPL 'DEFINED-ON-LINE '2899) 
(PUT 'MULTI_COMPL 'DEFINED-IN-FILE 'MATHML/MATHML.RED) 
(PUT 'MULTI_COMPL 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE MULTI_COMPL (ELEM)
    (PROG ()
      (COND ((EQUAL ELEM NIL) NIL)
            (T
             (PROGN
              (PRINT_ARB_COMPL (CAR ELEM))
              (MULTI_COMPL (CDR ELEM))
              NIL))))) 
(PUT 'PRINT_ARB_INT 'NUMBER-OF-ARGS 1) 
(PUT 'PRINT_ARB_INT 'DEFINED-ON-LINE '2906) 
(PUT 'PRINT_ARB_INT 'DEFINED-IN-FILE 'MATHML/MATHML.RED) 
(PUT 'PRINT_ARB_INT 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE PRINT_ARB_INT (ELEM)
    (PROG ()
      (COND
       ((PAIRP ELEM)
        (PROGN
         (COND
          ((EQUAL (CAR ELEM) 'ARBINT)
           (PROGN
            (COND
             ((EQ (XNP (LIST (CADR ELEM)) CONSTS_INT) NIL)
              (PROGN
               (PRINTSUB (CADR ELEM) 'INT)
               (SETQ CONSTS_INT (CONS (CADR ELEM) CONSTS_INT)))))))
          (T (MULTI_INT (CDR ELEM))))
         NIL))))) 
(PUT 'MULTI_INT 'NUMBER-OF-ARGS 1) 
(PUT 'MULTI_INT 'DEFINED-ON-LINE '2916) 
(PUT 'MULTI_INT 'DEFINED-IN-FILE 'MATHML/MATHML.RED) 
(PUT 'MULTI_INT 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE MULTI_INT (ELEM)
    (PROG ()
      (COND ((EQUAL ELEM NIL) NIL)
            (T (PROGN (PRINT_ARB_INT (CAR ELEM)) (MULTI_INT (CDR ELEM)) NIL))))) 
(PUT 'ISARB_MAT_INT 'NUMBER-OF-ARGS 1) 
(PUT 'ISARB_MAT_INT 'DEFINED-ON-LINE '2922) 
(PUT 'ISARB_MAT_INT 'DEFINED-IN-FILE 'MATHML/MATHML.RED) 
(PUT 'ISARB_MAT_INT 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE ISARB_MAT_INT (ELEM)
    (PROG ()
      (COND
       ((NEQ ELEM NIL)
        (PROGN (ISARB_ROW_INT (CAR ELEM)) (ISARB_MAT_INT (CDR ELEM)) NIL))))) 
(PUT 'ISARB_ROW_INT 'NUMBER-OF-ARGS 1) 
(PUT 'ISARB_ROW_INT 'DEFINED-ON-LINE '2929) 
(PUT 'ISARB_ROW_INT 'DEFINED-IN-FILE 'MATHML/MATHML.RED) 
(PUT 'ISARB_ROW_INT 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE ISARB_ROW_INT (ELEM)
    (PROG ()
      (COND
       ((NEQ ELEM NIL)
        (PROGN
         (COND
          ((EQUAL (ISSQ (CAR ELEM)) 1)
           (COND
            ((PAIRP (PREPSQ (CADR (CAR ELEM))))
             (COND
              ((EQUAL (CAR (PREPSQ (CADR (CAR ELEM)))) 'ARBINT)
               (SETQ FOUND_MAT_INT 1)))))))
         (ISARB_ROW_INT (CDR ELEM))
         NIL))))) 
(PUT 'ISARB_MAT_COMPL 'NUMBER-OF-ARGS 1) 
(PUT 'ISARB_MAT_COMPL 'DEFINED-ON-LINE '2940) 
(PUT 'ISARB_MAT_COMPL 'DEFINED-IN-FILE 'MATHML/MATHML.RED) 
(PUT 'ISARB_MAT_COMPL 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE ISARB_MAT_COMPL (ELEM)
    (PROG ()
      (COND
       ((NEQ ELEM NIL)
        (PROGN
         (ISARB_ROW_COMPL (CAR ELEM))
         (ISARB_MAT_COMPL (CDR ELEM))
         NIL))))) 
(PUT 'ISARB_ROW_COMPL 'NUMBER-OF-ARGS 1) 
(PUT 'ISARB_ROW_COMPL 'DEFINED-ON-LINE '2948) 
(PUT 'ISARB_ROW_COMPL 'DEFINED-IN-FILE 'MATHML/MATHML.RED) 
(PUT 'ISARB_ROW_COMPL 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE ISARB_ROW_COMPL (ELEM)
    (PROG ()
      (COND
       ((NEQ ELEM NIL)
        (PROGN
         (COND
          ((EQUAL (ISSQ (CAR ELEM)) 1)
           (COND
            ((PAIRP (PREPSQ (CADR (CAR ELEM))))
             (COND
              ((EQUAL (CAR (PREPSQ (CADR (CAR ELEM)))) 'ARBCOMPLEX)
               (SETQ FOUND_MAT_COMPL 1)))))))
         (ISARB_ROW_COMPL (CDR ELEM))
         NIL))))) 
(PUT 'PRINTARB_MAT_COMPL 'NUMBER-OF-ARGS 1) 
(PUT 'PRINTARB_MAT_COMPL 'DEFINED-ON-LINE '2958) 
(PUT 'PRINTARB_MAT_COMPL 'DEFINED-IN-FILE 'MATHML/MATHML.RED) 
(PUT 'PRINTARB_MAT_COMPL 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE PRINTARB_MAT_COMPL (ELEM)
    (PROG ()
      (COND
       ((NEQ ELEM NIL)
        (PROGN
         (PRINTARB_ROW_COMPL (CAR ELEM))
         (PRINTARB_MAT_COMPL (CDR ELEM))
         NIL))))) 
(PUT 'PRINTARB_ROW_COMPL 'NUMBER-OF-ARGS 1) 
(PUT 'PRINTARB_ROW_COMPL 'DEFINED-ON-LINE '2965) 
(PUT 'PRINTARB_ROW_COMPL 'DEFINED-IN-FILE 'MATHML/MATHML.RED) 
(PUT 'PRINTARB_ROW_COMPL 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE PRINTARB_ROW_COMPL (ELEM)
    (PROG (VALUE)
      (COND
       ((NEQ ELEM NIL)
        (PROGN
         (COND
          ((EQUAL (ISSQ (CAR ELEM)) 1)
           (COND
            ((PAIRP (PREPSQ (CADR (CAR ELEM))))
             (PROGN
              (SETQ VALUE (CADR (PREPSQ (CADR (CAR ELEM)))))
              (COND
               ((EQUAL (CAR (PREPSQ (CADR (CAR ELEM)))) 'ARBCOMPLEX)
                (COND
                 ((EQ (XNP (LIST VALUE) CONSTS_MAT_COMPL) NIL)
                  (PROGN
                   (PRINTSUB VALUE 'COMPL)
                   (SETQ CONSTS_MAT_COMPL
                           (CONS VALUE CONSTS_MAT_COMPL))))))))))))
         (PRINTARB_ROW_COMPL (CDR ELEM))
         NIL))))) 
(PUT 'PRINTARB_MAT_INT 'NUMBER-OF-ARGS 1) 
(PUT 'PRINTARB_MAT_INT 'DEFINED-ON-LINE '2979) 
(PUT 'PRINTARB_MAT_INT 'DEFINED-IN-FILE 'MATHML/MATHML.RED) 
(PUT 'PRINTARB_MAT_INT 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE PRINTARB_MAT_INT (ELEM)
    (PROG ()
      (COND
       ((NEQ ELEM NIL)
        (PROGN
         (PRINTARB_ROW_INT (CAR ELEM))
         (PRINTARB_MAT_INT (CDR ELEM))
         NIL))))) 
(PUT 'PRINTARB_ROW_INT 'NUMBER-OF-ARGS 1) 
(PUT 'PRINTARB_ROW_INT 'DEFINED-ON-LINE '2987) 
(PUT 'PRINTARB_ROW_INT 'DEFINED-IN-FILE 'MATHML/MATHML.RED) 
(PUT 'PRINTARB_ROW_INT 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE PRINTARB_ROW_INT (ELEM)
    (PROG (VALUE)
      (COND
       ((NEQ ELEM NIL)
        (PROGN
         (COND
          ((EQUAL (ISSQ (CAR ELEM)) 1)
           (COND
            ((PAIRP (PREPSQ (CADR (CAR ELEM))))
             (PROGN
              (SETQ VALUE (CADR (PREPSQ (CADR (CAR ELEM)))))
              (COND
               ((EQUAL (CAR (PREPSQ (CADR (CAR ELEM)))) 'ARBINT)
                (COND
                 ((EQ (XNP (LIST VALUE) CONSTS_MAT_INT) NIL)
                  (PROGN
                   (PRINTSUB VALUE 'INT)
                   (SETQ CONSTS_MAT_INT (CONS VALUE CONSTS_MAT_INT))))))))))))
         (PRINTARB_ROW_INT (CDR ELEM))
         NIL))))) 
(PUT 'MATH_ML 'NUMBER-OF-ARGS 1) 
(PUT 'MATH_ML 'DEFINED-ON-LINE '3010) 
(PUT 'MATH_ML 'DEFINED-IN-FILE 'MATHML/MATHML.RED) 
(PUT 'MATH_ML 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE MATH_ML (U)
    (PROGN
     (SETQ *MATHPRINT 0)
     (EQUAL FOUND_MAT_INT 0)
     NIL
     (EQUAL FOUND_MAT_COMPL 0)
     NIL
     (SETQ INDENT 0)
     (SETQ CONSTS_COMPL NIL)
     (SETQ CONSTS_MAT_COMPL NIL)
     (SETQ CONSTS_INT NIL)
     (SETQ CONSTS_MAT_INT NIL)
     (SETQ FOUND_INT 0)
     (SETQ FOUND_COMPL 0)
     (SETQ FLAGG 0)
     (COND
      ((PAIRP U)
       (PROGN
        (PRINTOUT "<math>")
        (SETQ INDENT 3)
        (COND
         ((EQUAL (CAR U) 'SETQ)
          (PROGN
           (COND
            ((PAIRP (CADDR U))
             (COND
              ((EQUAL (ISSQ (CADDR U)) 1)
               (ARBITRARY_C (PREPSQ (CADR (CADDR U)))))
              ((EQUAL (CAADDR U) 'MAT) (ARBITRARY_C (CADDR U)))
              ((EQUAL (CAADDR U) 'LIST) (ARBITRARY_C (*A2K (CADDR U)))))))
           (SETQML U)))
         ((EQUAL (CAR U) 'LIST)
          (PROGN (ARBITRARY_C (*A2K U)) (LISTML (CDR U))))
         ((EQUAL (CAR U) 'MAT) (PROGN (ARBITRARY_C U) (MATRIXML (CDR U))))
         ((EQUAL (CAR U) '*SQ)
          (PROGN
           (ARBITRARY_C (PREPSQ (CADR U)))
           (EXPRESSION (PREPSQ (CADR U)))))
         (T (EXPRESSION U)))
        (SETQ INDENT (DIFFERENCE INDENT 3))
        (CLOSE_FORALL)
        (SETQ INDENT 0)
        (PRINTOUT "</math>")))
      ((ATOM U)
       (PROGN
        (PRINTOUT "<math>")
        (SETQ INDENT 3)
        (EXPRESSION U)
        (SETQ INDENT 0)
        (PRINTOUT "</math>")))
      (T NIL))
     NIL)) 
(PUT 'WEB 'SIMPFG
     '((NIL (OR *MATHML (SETQ OUTPUTHANDLER* NIL)))
       (T (SETQ OUTPUTHANDLER* 'MATH_ML_PRINTER)))) 
(PUT 'MATHML 'SIMPFG
     '((NIL (AND (NULL *BOTH) (SETQ OUTPUTHANDLER* NIL)))
       (T (SETQ OUTPUTHANDLER* 'MATH_ML_PRINTER)))) 
(PUT 'BOTH 'SIMPFG
     '((NIL (SETQ OUTPUTHANDLER* (AND *MATHML 'MATH_ML_PRINTER)))
       (T (SETQ OUTPUTHANDLER* 'MATH_ML_PRINTER)))) 
(FLAG '(MML) 'OPFN) 
(FLAG '(PARSEML) 'OPFN) 
(ENDMODULE) 