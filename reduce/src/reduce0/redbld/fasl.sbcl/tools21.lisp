(cl:declaim (cl:optimize cl:debug cl:safety))
(cl:declaim (sb-ext:muffle-conditions sb-ext:compiler-note cl:style-warning))
(MODULE (LIST 'TOOLS21)) 
(NULL (SETQ *MODE 'SYMBOLIC)) 
(AEVAL (NULL (SETQ *MODE 'ALGEBRAIC))) 
(PUT 'GET_FIRST_KERNEL 'NUMBER-OF-ARGS 2) 
(PUT 'GET_FIRST_KERNEL 'DEFINED-ON-LINE '50) 
(PUT 'GET_FIRST_KERNEL 'DEFINED-IN-FILE 'CDIFF/TOOLS21.RED) 
(PUT 'GET_FIRST_KERNEL 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE GET_FIRST_KERNEL (FORM OPLIST) (GFK FORM OPLIST NIL)) 
(PUT 'GFK 'NUMBER-OF-ARGS 3) 
(PUT 'GFK 'DEFINED-ON-LINE '53) 
(PUT 'GFK 'DEFINED-IN-FILE 'CDIFF/TOOLS21.RED) 
(PUT 'GFK 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL GENERAL) GENERAL)) 
(DE GFK (FORM OPLIST L)
    (COND ((OR L (OR (ATOM FORM) (ATOM (CAR FORM)))) L)
          (T
           ((LAMBDA (X)
              (GFK (CDR FORM) OPLIST
               (GFK (CDAR FORM) OPLIST
                (COND ((AND (NOT (ATOM X)) (MEMBER (CAR X) OPLIST)) X)
                      (T L)))))
            (CAAAR FORM))))) 
(FLAG '(GET_KERNEL) 'OPFN) 
(PUT 'GET_KERNEL 'NUMBER-OF-ARGS 2) 
(PUT 'GET_KERNEL 'DEFINED-ON-LINE '65) 
(PUT 'GET_KERNEL 'DEFINED-IN-FILE 'CDIFF/TOOLS21.RED) 
(PUT 'GET_KERNEL 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE GET_KERNEL (EXPRSS OPLIST)
    (GFK (CAR (SIMP* EXPRSS))
     (COND ((NULL OPLIST) NIL) ((ATOM OPLIST) (LIST OPLIST))
           ((EQUAL (CAR OPLIST) 'LIST) (CDR OPLIST)) (T OPLIST))
     NIL)) 
(PUT 'GET_ALL_KERNELS 'NUMBER-OF-ARGS 2) 
(PUT 'GET_ALL_KERNELS 'DEFINED-ON-LINE '75) 
(PUT 'GET_ALL_KERNELS 'DEFINED-IN-FILE 'CDIFF/TOOLS21.RED) 
(PUT 'GET_ALL_KERNELS 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE GET_ALL_KERNELS (FORM OPLIST) (GAK FORM OPLIST NIL)) 
(PUT 'GAK 'NUMBER-OF-ARGS 3) 
(PUT 'GAK 'DEFINED-ON-LINE '78) 
(PUT 'GAK 'DEFINED-IN-FILE 'CDIFF/TOOLS21.RED) 
(PUT 'GAK 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL GENERAL) GENERAL)) 
(DE GAK (FORM OPLIST L)
    (COND ((OR (ATOM FORM) (ATOM (CAR FORM))) L)
          (T
           ((LAMBDA (X)
              (GAK (CDR FORM) OPLIST
               (GAK (CDAR FORM) OPLIST
                (COND
                 ((AND (NOT (ATOM X)) (MEMBER (CAR X) OPLIST)
                       (NOT (MEMBER X L)))
                  (SETQ L (ACONC L X)))
                 (T L)))))
            (CAAAR FORM))))) 
(FLAG '(CDIFF_GET_KERNELS) 'OPFN) 
(PUT 'CDIFF_GET_KERNELS 'NUMBER-OF-ARGS 2) 
(PUT 'CDIFF_GET_KERNELS 'DEFINED-ON-LINE '95) 
(PUT 'CDIFF_GET_KERNELS 'DEFINED-IN-FILE 'CDIFF/TOOLS21.RED) 
(PUT 'CDIFF_GET_KERNELS 'PROCEDURE_TYPE
     '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE CDIFF_GET_KERNELS (EXPRSS OPLIST)
    (CONS 'LIST
          (GAK (CAR (SIMP* EXPRSS))
           (COND ((NULL OPLIST) NIL) ((ATOM OPLIST) (LIST OPLIST))
                 ((EQUAL (CAR OPLIST) 'LIST) (CDR OPLIST)) (T OPLIST))
           NIL))) 
(PUT 'GET_RECURSIVE_KERNELS 'NUMBER-OF-ARGS 2) 
(PUT 'GET_RECURSIVE_KERNELS 'DEFINED-ON-LINE '106) 
(PUT 'GET_RECURSIVE_KERNELS 'DEFINED-IN-FILE 'CDIFF/TOOLS21.RED) 
(PUT 'GET_RECURSIVE_KERNELS 'PROCEDURE_TYPE
     '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE GET_RECURSIVE_KERNELS (FORM OPLIST) (GRK FORM OPLIST NIL)) 
(PUT 'GRK 'NUMBER-OF-ARGS 3) 
(PUT 'GRK 'DEFINED-ON-LINE '109) 
(PUT 'GRK 'DEFINED-IN-FILE 'CDIFF/TOOLS21.RED) 
(PUT 'GRK 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL GENERAL) GENERAL)) 
(DE GRK (FORM OPLIST L)
    (COND ((OR (ATOM FORM) (ATOM (CAR FORM))) L)
          (T
           ((LAMBDA (X)
              (GRK (CDR FORM) OPLIST
               (GRK (CDAR FORM) OPLIST
                (COND
                 ((NOT (ATOM X))
                  (PROG (Y)
                    (PROG (ARG)
                      (SETQ ARG (CDR X))
                     LAB
                      (COND ((NULL ARG) (RETURN NIL)))
                      ((LAMBDA (ARG)
                         (PROGN
                          (SETQ Y (SIMP ARG))
                          (SETQ L
                                  (GRK (CAR Y) OPLIST
                                   (GRK (CDR Y) OPLIST L)))))
                       (CAR ARG))
                      (SETQ ARG (CDR ARG))
                      (GO LAB))
                    (RETURN
                     (COND
                      ((AND (MEMBER (CAR X) OPLIST) (NOT (MEMBER X L)))
                       (CONS X L))
                      (T L)))))
                 (T L)))))
            (CAAAR FORM))))) 
(FLAG '(GET_DEEP_KERNELS) 'OPFN) 
(PUT 'GET_DEEP_KERNELS 'NUMBER-OF-ARGS 2) 
(PUT 'GET_DEEP_KERNELS 'DEFINED-ON-LINE '129) 
(PUT 'GET_DEEP_KERNELS 'DEFINED-IN-FILE 'CDIFF/TOOLS21.RED) 
(PUT 'GET_DEEP_KERNELS 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE GET_DEEP_KERNELS (EXPRSS OPLIST)
    ((LAMBDA (VAL)
       (CONS 'LIST
             (GRK (CAR VAL)
              (COND ((NULL OPLIST) NIL) ((ATOM OPLIST) (LIST OPLIST))
                    ((EQUAL (CAR OPLIST) 'LIST) (CDR OPLIST)) (T OPLIST))
              (GRK (CDR VAL)
               (COND ((NULL OPLIST) NIL) ((ATOM OPLIST) (LIST OPLIST))
                     ((EQUAL (CAR OPLIST) 'LIST) (CDR OPLIST)) (T OPLIST))
               NIL))))
     (SIMP* EXPRSS))) 
(PUT 'TLO 'NUMBER-OF-ARGS 2) 
(PUT 'TLO 'DEFINED-ON-LINE '149) 
(PUT 'TLO 'DEFINED-IN-FILE 'CDIFF/TOOLS21.RED) 
(PUT 'TLO 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE TLO (FORM L)
    (COND ((OR (ATOM FORM) (ATOM (CAR FORM))) L)
          (T
           ((LAMBDA (X)
              (TLO (CDR FORM)
               (TLO (CDAR FORM)
                (COND
                 ((AND (NOT (ATOM X)) (NOT (MEMBER (CAR X) L)))
                  (CONS (CAR X) L))
                 (T L)))))
            (CAAAR FORM))))) 
(PUT 'TOP_LEVEL_OPERATORS 'PSOPFN 'TOP_LEVEL_OPERATORS) 
(PUT 'TOP_LEVEL_OPERATORS 'NUMBER-OF-ARGS 1) 
(PUT 'TOP_LEVEL_OPERATORS 'DEFINED-ON-LINE '160) 
(PUT 'TOP_LEVEL_OPERATORS 'DEFINED-IN-FILE 'CDIFF/TOOLS21.RED) 
(PUT 'TOP_LEVEL_OPERATORS 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE TOP_LEVEL_OPERATORS (U)
    ((LAMBDA (SQ_FORM)
       (CONS 'LIST (UNION (TLO (CAR SQ_FORM) NIL) (TLO (CDR SQ_FORM) NIL))))
     (SIMP* (CAR U)))) 
(FLAG '(WRITE_DEFS) 'OPFN) 
(PUT 'WRITE_DEFS 'NUMBER-OF-ARGS 1) 
(PUT 'WRITE_DEFS 'DEFINED-ON-LINE '166) 
(PUT 'WRITE_DEFS 'DEFINED-IN-FILE 'CDIFF/TOOLS21.RED) 
(PUT 'WRITE_DEFS 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE WRITE_DEFS (OPR)
    (PROG ()
      (PROG (EL)
        (SETQ EL (GET OPR 'KVALUE))
       LAB
        (COND ((NULL EL) (RETURN NIL)))
        ((LAMBDA (EL)
           ((LAMBDA (VALUE) (ASSGNPRI VALUE (LIST (CAR EL)) 'ONLY))
            (REVAL1 (CADR EL) NIL)))
         (CAR EL))
        (SETQ EL (CDR EL))
        (GO LAB)))) 
(FLAG '(REASSIGN_DEFS) 'OPFN) 
(PUT 'REASSIGN_DEFS 'NUMBER-OF-ARGS 1) 
(PUT 'REASSIGN_DEFS 'DEFINED-ON-LINE '174) 
(PUT 'REASSIGN_DEFS 'DEFINED-IN-FILE 'CDIFF/TOOLS21.RED) 
(PUT 'REASSIGN_DEFS 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE REASSIGN_DEFS (OPR)
    (PROG (KVALUE_LIST)
      (SETQ KVALUE_LIST
              (PROG (EL FORALL-RESULT FORALL-ENDPTR)
                (SETQ EL (GET OPR 'KVALUE))
                (COND ((NULL EL) (RETURN NIL)))
                (SETQ FORALL-RESULT
                        (SETQ FORALL-ENDPTR
                                (CONS ((LAMBDA (EL) (CAR EL)) (CAR EL)) NIL)))
               LOOPLABEL
                (SETQ EL (CDR EL))
                (COND ((NULL EL) (RETURN FORALL-RESULT)))
                (RPLACD FORALL-ENDPTR
                        (CONS ((LAMBDA (EL) (CAR EL)) (CAR EL)) NIL))
                (SETQ FORALL-ENDPTR (CDR FORALL-ENDPTR))
                (GO LOOPLABEL)))
      (PROG (KERNEL)
        (SETQ KERNEL KVALUE_LIST)
       LAB
        (COND ((NULL KERNEL) (RETURN NIL)))
        ((LAMBDA (KERNEL) (SETK KERNEL (REVAL1 KERNEL NIL))) (CAR KERNEL))
        (SETQ KERNEL (CDR KERNEL))
        (GO LAB)))) 
(FLAG '(USED) 'OPFN) 
(PUT 'USED 'NUMBER-OF-ARGS 1) 
(PUT 'USED 'DEFINED-ON-LINE '183) 
(PUT 'USED 'DEFINED-IN-FILE 'CDIFF/TOOLS21.RED) 
(PUT 'USED 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE USED (OPKERN) (LENGTH (GET OPKERN 'KLIST))) 
(FLAG '(KNOWN) 'OPFN) 
(PUT 'KNOWN 'NUMBER-OF-ARGS 1) 
(PUT 'KNOWN 'DEFINED-ON-LINE '187) 
(PUT 'KNOWN 'DEFINED-IN-FILE 'CDIFF/TOOLS21.RED) 
(PUT 'KNOWN 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE KNOWN (OPKERN) (LENGTH (GET OPKERN 'KVALUE))) 
(PUT 'CLEAR_OP 'STAT 'RLIS) 
(PUT 'CLEAR_OP 'NUMBER-OF-ARGS 1) 
(PUT 'CLEAR_OP 'DEFINED-ON-LINE '193) 
(PUT 'CLEAR_OP 'DEFINED-IN-FILE 'CDIFF/TOOLS21.RED) 
(PUT 'CLEAR_OP 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE CLEAR_OP (KERNEL_LIST)
    (PROG (KERNEL)
      (SETQ KERNEL KERNEL_LIST)
     LAB
      (COND ((NULL KERNEL) (RETURN NIL)))
      ((LAMBDA (KERNEL)
         (COND
          ((ATOM KERNEL)
           (PROGN
            (PROG (PROPERTY)
              (SETQ PROPERTY (PROP KERNEL))
             LAB
              (COND ((NULL PROPERTY) (RETURN NIL)))
              ((LAMBDA (PROPERTY)
                 (COND
                  ((NOT (ATOM PROPERTY)) (REMPROP KERNEL (CAR PROPERTY)))))
               (CAR PROPERTY))
              (SETQ PROPERTY (CDR PROPERTY))
              (GO LAB))
            (REMFLAG (LIST KERNEL) 'FULL)
            (RMSUBS)))
          (T
           (PROG (OP_NAME KEY ENTRY)
             (SETQ OP_NAME (CAR KERNEL))
             (SETQ KEY
                     (PROG (I FORALL-RESULT FORALL-ENDPTR)
                       (SETQ I (CDR KERNEL))
                       (COND ((NULL I) (RETURN NIL)))
                       (SETQ FORALL-RESULT
                               (SETQ FORALL-ENDPTR
                                       (CONS
                                        ((LAMBDA (I) (REVAL1 I T)) (CAR I))
                                        NIL)))
                      LOOPLABEL
                       (SETQ I (CDR I))
                       (COND ((NULL I) (RETURN FORALL-RESULT)))
                       (RPLACD FORALL-ENDPTR
                               (CONS ((LAMBDA (I) (REVAL1 I T)) (CAR I)) NIL))
                       (SETQ FORALL-ENDPTR (CDR FORALL-ENDPTR))
                       (GO LOOPLABEL)))
             (SETQ ENTRY (NA_GET (GET OP_NAME 'NA_VALUES) KEY))
             (COND
              ((OR (NULL ENTRY) (NULL (CDR ENTRY)))
               (MSGPRI "CLEAR_OP:" KERNEL "not found" NIL NIL))
              (T (RPLACD ENTRY NIL)))))))
       (CAR KERNEL))
      (SETQ KERNEL (CDR KERNEL))
      (GO LAB))) 
(PUT 'OPERATOR_REPRESENTATION 'PSOPFN 'OPR_REPRESENTATION) 
(PUT 'OPR_REPRESENTATION 'NUMBER-OF-ARGS 1) 
(PUT 'OPR_REPRESENTATION 'DEFINED-ON-LINE '212) 
(PUT 'OPR_REPRESENTATION 'DEFINED-IN-FILE 'CDIFF/TOOLS21.RED) 
(PUT 'OPR_REPRESENTATION 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE OPR_REPRESENTATION (L)
    (OPERATOR_REPRESENTATION (REVAL1 (CAR L) T) (REVAL1 (CADR L) T)
     (COND ((GREATERP (LENGTH L) 2) (REVAL1 (CADDR L) T)) (T (LIST 'LIST))))) 
(PUT 'OPERATOR_REPRESENTATION 'NUMBER-OF-ARGS 3) 
(PUT 'OPERATOR_REPRESENTATION 'DEFINED-ON-LINE '216) 
(PUT 'OPERATOR_REPRESENTATION 'DEFINED-IN-FILE 'CDIFF/TOOLS21.RED) 
(PUT 'OPERATOR_REPRESENTATION 'PROCEDURE_TYPE
     '(ARROW (TIMES GENERAL GENERAL GENERAL) GENERAL)) 
(DE OPERATOR_REPRESENTATION (INT_OPR EVEN_LIST ODD_LIST)
    (PROG (N_EVEN N_ODD)
      (COND
       ((GET INT_OPR 'ALIAS_VECTOR)
        (REDERR
         "OPERATOR_REPRESENTATION: first call CLEAR_OPERATOR_REPRESENTATION")))
      (SETQ EVEN_LIST (CDR EVEN_LIST))
      (SETQ ODD_LIST (CDR ODD_LIST))
      (COND ((NOT (GET INT_OPR 'SIMPFN)) (PUT INT_OPR 'SIMPFN 'SIMPIDEN)))
      (SETQ N_EVEN 0)
      (PROG (EL)
        (SETQ EL EVEN_LIST)
       LAB
        (COND ((NULL EL) (RETURN NIL)))
        ((LAMBDA (EL)
           (PROGN
            (COND
             ((NOT (ATOM EL))
              (MSGPRI "OPERATOR_REPRESENTATION:" EL "not an atom" NIL T)))
            (SETK EL (LIST INT_OPR (SETQ N_EVEN (PLUS N_EVEN 1))))
            (PUT EL 'NEWNAM (LIST INT_OPR N_EVEN))))
         (CAR EL))
        (SETQ EL (CDR EL))
        (GO LAB))
      (SETQ N_ODD 0)
      (PROG (EL)
        (SETQ EL ODD_LIST)
       LAB
        (COND ((NULL EL) (RETURN NIL)))
        ((LAMBDA (EL)
           (PROGN
            (COND
             ((NOT (ATOM EL))
              (MSGPRI "OPERATOR_REPRESENTATION:" EL "not an atom" NIL T)))
            (SETK EL (LIST INT_OPR (SETQ N_ODD (DIFFERENCE N_ODD 1))))
            (PUT EL 'NEWNAM (LIST INT_OPR N_ODD))))
         (CAR EL))
        (SETQ EL (CDR EL))
        (GO LAB))
      (SETQ N_ODD (MINUS N_ODD))
      (COND ((NOT (GET INT_OPR 'PRIFN)) (PUT INT_OPR 'PRIFN 'PRINT_ALIAS)))
      (PUT INT_OPR 'ALIAS_VECTOR
           (CONS N_ODD
                 (CONS N_EVEN
                       (LIST2VECTOR
                        (APPEND (REVERSE ODD_LIST) (CONS NIL EVEN_LIST)))))))) 
(PUT 'PRINT_ALIAS 'NUMBER-OF-ARGS 1) 
(PUT 'PRINT_ALIAS 'DEFINED-ON-LINE '246) 
(PUT 'PRINT_ALIAS 'DEFINED-IN-FILE 'CDIFF/TOOLS21.RED) 
(PUT 'PRINT_ALIAS 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE PRINT_ALIAS (L)
    (PROG (I N_ODD N_EVEN ALIAS_VECTOR)
      (SETQ ALIAS_VECTOR (GET (CAR L) 'ALIAS_VECTOR))
      (COND
       (ALIAS_VECTOR
        (PROGN
         (SETQ N_ODD (CAR ALIAS_VECTOR))
         (SETQ N_EVEN (CADR ALIAS_VECTOR))
         (SETQ ALIAS_VECTOR (CDDR ALIAS_VECTOR)))))
      (COND
       ((OR (NULL ALIAS_VECTOR) (GREATERP (LENGTH L) 2)
            (NOT (FIXP (SETQ I (CADR L)))) (LESSP I (MINUS N_ODD))
            (GREATERP I N_EVEN))
        (PROGN
         (PRIN2* (CAR L))
         (PRIN2* "(")
         (SETQ OBRKP* NIL)
         (COND ((CDR L) (INPRINT '*COMMA* 0 (CDR L))))
         (SETQ OBRKP* T)
         (PRIN2* ")")))
       (T (MAPRIN (GETV ALIAS_VECTOR (PLUS I N_ODD))))))) 
(FLAG '(CONSTRUCT_ALIAS_PRINT) 'OPFN) 
(PUT 'CONSTRUCT_ALIAS_PRINT 'NUMBER-OF-ARGS 3) 
(PUT 'CONSTRUCT_ALIAS_PRINT 'DEFINED-ON-LINE '268) 
(PUT 'CONSTRUCT_ALIAS_PRINT 'DEFINED-IN-FILE 'CDIFF/TOOLS21.RED) 
(PUT 'CONSTRUCT_ALIAS_PRINT 'PROCEDURE_TYPE
     '(ARROW (TIMES GENERAL GENERAL GENERAL) GENERAL)) 
(DE CONSTRUCT_ALIAS_PRINT (INT_OPR EVEN_LIST ODD_LIST)
    (PROG (N_EVEN N_ODD)
      (SETQ EVEN_LIST (CDR EVEN_LIST))
      (SETQ ODD_LIST (CDR ODD_LIST))
      (SETQ N_EVEN (LENGTH EVEN_LIST))
      (SETQ N_ODD (LENGTH ODD_LIST))
      (COND ((NOT (GET INT_OPR 'PRIFN)) (PUT INT_OPR 'PRIFN 'PRINT_ALIAS)))
      (PUT INT_OPR 'ALIAS_VECTOR
           (CONS N_ODD
                 (CONS N_EVEN
                       (LIST2VECTOR
                        (APPEND (REVERSE ODD_LIST) (CONS NIL EVEN_LIST)))))))) 
(PUT 'ADD_TO_OPERATOR_REPRESENTATION 'PSOPFN 'ADD_TO_OPR_REPRESENTATION) 
(PUT 'ADD_TO_OPR_REPRESENTATION 'NUMBER-OF-ARGS 1) 
(PUT 'ADD_TO_OPR_REPRESENTATION 'DEFINED-ON-LINE '281) 
(PUT 'ADD_TO_OPR_REPRESENTATION 'DEFINED-IN-FILE 'CDIFF/TOOLS21.RED) 
(PUT 'ADD_TO_OPR_REPRESENTATION 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE ADD_TO_OPR_REPRESENTATION (L)
    (ADD_TO_OPERATOR_REPRESENTATION (REVAL1 (CAR L) T) (REVAL1 (CADR L) T)
     (COND ((GREATERP (LENGTH L) 2) (REVAL1 (CADDR L) T)) (T (LIST 'LIST))))) 
(PUT 'ADD_TO_OPERATOR_REPRESENTATION 'NUMBER-OF-ARGS 3) 
(PUT 'ADD_TO_OPERATOR_REPRESENTATION 'DEFINED-ON-LINE '285) 
(PUT 'ADD_TO_OPERATOR_REPRESENTATION 'DEFINED-IN-FILE 'CDIFF/TOOLS21.RED) 
(PUT 'ADD_TO_OPERATOR_REPRESENTATION 'PROCEDURE_TYPE
     '(ARROW (TIMES GENERAL GENERAL GENERAL) GENERAL)) 
(DE ADD_TO_OPERATOR_REPRESENTATION (INT_OPR EVEN_LIST ODD_LIST)
    (PROG (N_EVEN N_ODD OLD_LIST ALIAS_VECTOR)
      (COND
       ((NOT (GET INT_OPR 'ALIAS_VECTOR))
        (REDERR
         "ADD_TO_OPERATOR_REPRESENTATION: first call OPERATOR_REPRESENTATION")))
      (SETQ ALIAS_VECTOR (GET INT_OPR 'ALIAS_VECTOR))
      (SETQ N_EVEN (CADR ALIAS_VECTOR))
      (SETQ N_ODD (MINUS (CAR ALIAS_VECTOR)))
      (SETQ ALIAS_VECTOR (CDDR ALIAS_VECTOR))
      (SETQ OLD_LIST
              (PROG (I FORALL-RESULT FORALL-ENDPTR)
                (SETQ I 0)
                (COND
                 ((MINUSP (DIFFERENCE (UPBV ALIAS_VECTOR) I)) (RETURN NIL)))
                (SETQ FORALL-RESULT
                        (SETQ FORALL-ENDPTR (CONS (GETV ALIAS_VECTOR I) NIL)))
               LOOPLABEL
                (SETQ I (PLUS2 I 1))
                (COND
                 ((MINUSP (DIFFERENCE (UPBV ALIAS_VECTOR) I))
                  (RETURN FORALL-RESULT)))
                (RPLACD FORALL-ENDPTR (CONS (GETV ALIAS_VECTOR I) NIL))
                (SETQ FORALL-ENDPTR (CDR FORALL-ENDPTR))
                (GO LOOPLABEL)))
      (SETQ EVEN_LIST (CDR EVEN_LIST))
      (SETQ ODD_LIST (CDR ODD_LIST))
      (PROG (EL)
        (SETQ EL EVEN_LIST)
       LAB
        (COND ((NULL EL) (RETURN NIL)))
        ((LAMBDA (EL)
           (PROGN
            (COND
             ((NOT (ATOM EL))
              (MSGPRI "ADD_TO_OPERATOR_REPRESENTATION:" EL "not an atom" NIL
                      T)))
            (SETK EL (LIST INT_OPR (SETQ N_EVEN (PLUS N_EVEN 1))))
            (PUT EL 'NEWNAM (LIST INT_OPR N_EVEN))))
         (CAR EL))
        (SETQ EL (CDR EL))
        (GO LAB))
      (PROG (EL)
        (SETQ EL ODD_LIST)
       LAB
        (COND ((NULL EL) (RETURN NIL)))
        ((LAMBDA (EL)
           (PROGN
            (COND
             ((NOT (ATOM EL))
              (MSGPRI "ADD_TO_OPERATOR_REPRESENTATION:" EL "not an atom" NIL
                      T)))
            (SETK EL (LIST INT_OPR (SETQ N_ODD (DIFFERENCE N_ODD 1))))
            (PUT EL 'NEWNAM (LIST INT_OPR N_ODD))))
         (CAR EL))
        (SETQ EL (CDR EL))
        (GO LAB))
      (SETQ N_ODD (MINUS N_ODD))
      (PUT INT_OPR 'ALIAS_VECTOR
           (CONS N_ODD
                 (CONS N_EVEN
                       (LIST2VECTOR
                        (APPEND (REVERSE ODD_LIST)
                                (APPEND OLD_LIST EVEN_LIST)))))))) 
(FLAG '(CLEAR_OPERATOR_REPRESENTATION) 'OPFN) 
(PUT 'CLEAR_OPERATOR_REPRESENTATION 'NUMBER-OF-ARGS 1) 
(PUT 'CLEAR_OPERATOR_REPRESENTATION 'DEFINED-ON-LINE '319) 
(PUT 'CLEAR_OPERATOR_REPRESENTATION 'DEFINED-IN-FILE 'CDIFF/TOOLS21.RED) 
(PUT 'CLEAR_OPERATOR_REPRESENTATION 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE CLEAR_OPERATOR_REPRESENTATION (INT_OPR)
    (PROG (ALIAS_VECTOR N_ODD N_EVEN KERNEL)
      (COND
       ((SETQ ALIAS_VECTOR (GET INT_OPR 'ALIAS_VECTOR))
        (PROGN
         (SETQ N_ODD (CAR ALIAS_VECTOR))
         (SETQ N_EVEN (CADR ALIAS_VECTOR))
         (SETQ ALIAS_VECTOR (CDDR ALIAS_VECTOR))
         (PROG (I)
           (SETQ I (MINUS N_ODD))
          LAB
           (COND ((MINUSP (DIFFERENCE N_EVEN I)) (RETURN NIL)))
           (COND
            ((NEQ I 0)
             (PROGN
              (SETQ KERNEL (GETV ALIAS_VECTOR (PLUS N_ODD I)))
              (REMPROP KERNEL 'NEWNAM)
              (REMPROP KERNEL 'AVALUE))))
           (SETQ I (PLUS2 I 1))
           (GO LAB))
         (CLEAR_ALIAS_PRINT INT_OPR)))))) 
(FLAG '(CLEAR_ALIAS_PRINT) 'OPFN) 
(PUT 'CLEAR_ALIAS_PRINT 'NUMBER-OF-ARGS 1) 
(PUT 'CLEAR_ALIAS_PRINT 'DEFINED-ON-LINE '333) 
(PUT 'CLEAR_ALIAS_PRINT 'DEFINED-IN-FILE 'CDIFF/TOOLS21.RED) 
(PUT 'CLEAR_ALIAS_PRINT 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE CLEAR_ALIAS_PRINT (INT_OPR)
    (PROG () (REMPROP INT_OPR 'PRIFN) (REMPROP INT_OPR 'ALIAS_VECTOR))) 
(PUT 'SPLIT_F 'NUMBER-OF-ARGS 4) 
(PUT 'SPLIT_F 'DEFINED-ON-LINE '340) 
(PUT 'SPLIT_F 'DEFINED-IN-FILE 'CDIFF/TOOLS21.RED) 
(PUT 'SPLIT_F 'PROCEDURE_TYPE
     '(ARROW (TIMES GENERAL GENERAL GENERAL GENERAL) GENERAL)) 
(DE SPLIT_F (FORM OPLIST FACT KC_LIST)
    (COND ((NULL FORM) KC_LIST)
          ((OR (ATOM FORM) (ATOM (CAR FORM)))
           (CONS
            (ADDF
             (COND (*PHYSOP-LOADED (PHYSOP-MULTF FACT FORM))
                   (T (POLY-MULTF FACT FORM)))
             (CAR KC_LIST))
            (CDR KC_LIST)))
          ((AND (NOT (ATOM (CAAAR FORM))) (MEMBER (CAR (CAAAR FORM)) OPLIST))
           (COND
            ((OR (NEQ (CDAAR FORM) 1) (GET_FIRST_KERNEL (CDAR FORM) OPLIST))
             (MSGPRI "SPLIT_F: expression not linear w.r.t."
                     (CONS 'LIST OPLIST) NIL NIL T))
            (T
             (SPLIT_F (CDR FORM) OPLIST FACT
              (UPDATE_KC_LIST KC_LIST (CAAAR FORM)
               (COND (*PHYSOP-LOADED (PHYSOP-MULTF FACT (CDAR FORM)))
                     (T (POLY-MULTF FACT (CDAR FORM)))))))))
          (T
           (SPLIT_F (CDR FORM) OPLIST FACT
            (SPLIT_F (CDAR FORM) OPLIST
             ((LAMBDA (G124)
                (COND (*PHYSOP-LOADED (PHYSOP-MULTF FACT G124))
                      (T (POLY-MULTF FACT G124))))
              (LIST (CONS (CAAR FORM) 1)))
             KC_LIST))))) 
(PUT 'SPLIT_FORM 'NUMBER-OF-ARGS 2) 
(PUT 'SPLIT_FORM 'DEFINED-ON-LINE '357) 
(PUT 'SPLIT_FORM 'DEFINED-IN-FILE 'CDIFF/TOOLS21.RED) 
(PUT 'SPLIT_FORM 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE SPLIT_FORM (FORM OPLIST) (SPLIT_F FORM OPLIST 1 (CONS NIL NIL))) 
(PUT 'LIST_ASSOC 'NUMBER-OF-ARGS 2) 
(PUT 'LIST_ASSOC 'DEFINED-ON-LINE '360) 
(PUT 'LIST_ASSOC 'DEFINED-IN-FILE 'CDIFF/TOOLS21.RED) 
(PUT 'LIST_ASSOC 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE LIST_ASSOC (CAR_EXPRN A_LIST)
    (COND ((NULL A_LIST) A_LIST) ((EQUAL (CAAR A_LIST) CAR_EXPRN) A_LIST)
          (T (LIST_ASSOC CAR_EXPRN (CDR A_LIST))))) 
(PUT 'UPDATE_KC_LIST 'NUMBER-OF-ARGS 3) 
(PUT 'UPDATE_KC_LIST 'DEFINED-ON-LINE '364) 
(PUT 'UPDATE_KC_LIST 'DEFINED-IN-FILE 'CDIFF/TOOLS21.RED) 
(PUT 'UPDATE_KC_LIST 'PROCEDURE_TYPE
     '(ARROW (TIMES GENERAL GENERAL GENERAL) GENERAL)) 
(DE UPDATE_KC_LIST (KC_LIST KERNEL COEFFICIENT)
    ((LAMBDA (REST_LIST)
       (COND
        (REST_LIST
         (PROGN
          (RPLACA REST_LIST
                  (CONS (CAAR REST_LIST) (ADDF (CDAR REST_LIST) COEFFICIENT)))
          KC_LIST))
        (T
         (CONS (CAR KC_LIST) (CONS (CONS KERNEL COEFFICIENT) (CDR KC_LIST))))))
     (LIST_ASSOC KERNEL (CDR KC_LIST)))) 
(PUT 'OPERATOR_COEFF 'PSOPFN 'OPERATOR_COEFF_1) 
(PUT 'OPERATOR_COEFF_1 'NUMBER-OF-ARGS 1) 
(PUT 'OPERATOR_COEFF_1 'DEFINED-ON-LINE '373) 
(PUT 'OPERATOR_COEFF_1 'DEFINED-IN-FILE 'CDIFF/TOOLS21.RED) 
(PUT 'OPERATOR_COEFF_1 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE OPERATOR_COEFF_1 (U)
    (COND
     ((NEQ (LENGTH U) 2) (REDERR "OPERATOR_COEFF: wrong number of arguments"))
     (T (OPERATOR_COEFF (CAR U) (REVAL1 (CADR U) T))))) 
(PUT 'OPERATOR_COEFF 'NUMBER-OF-ARGS 2) 
(PUT 'OPERATOR_COEFF 'DEFINED-ON-LINE '378) 
(PUT 'OPERATOR_COEFF 'DEFINED-IN-FILE 'CDIFF/TOOLS21.RED) 
(PUT 'OPERATOR_COEFF 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE OPERATOR_COEFF (EXPRN OPLIST)
    (PROG (NUMR_EX DENR_EX KC_LIST)
      (SETQ OPLIST
              (COND ((NULL OPLIST) NIL) ((ATOM OPLIST) (LIST OPLIST))
                    ((EQUAL (CAR OPLIST) 'LIST) (CDR OPLIST)) (T OPLIST)))
      (SETQ EXPRN (SIMP* EXPRN))
      (SETQ NUMR_EX (CAR EXPRN))
      (SETQ DENR_EX (CDR EXPRN))
      (COND
       ((GFK DENR_EX OPLIST NIL)
        (REDERR "OPERATOR_COEFF: denominator not independent of operator(s)")))
      (SETQ KC_LIST (SPLIT_FORM NUMR_EX OPLIST))
      (RETURN
       (CONS 'LIST
             (CONS (*FF2A (CAR KC_LIST) DENR_EX)
                   (PROG (KC_PAIR FORALL-RESULT FORALL-ENDPTR)
                     (SETQ KC_PAIR (CDR KC_LIST))
                     (COND ((NULL KC_PAIR) (RETURN NIL)))
                     (SETQ FORALL-RESULT
                             (SETQ FORALL-ENDPTR
                                     (CONS
                                      ((LAMBDA (KC_PAIR)
                                         (LIST 'LIST (CAR KC_PAIR)
                                               (*FF2A (CDR KC_PAIR) DENR_EX)))
                                       (CAR KC_PAIR))
                                      NIL)))
                    LOOPLABEL
                     (SETQ KC_PAIR (CDR KC_PAIR))
                     (COND ((NULL KC_PAIR) (RETURN FORALL-RESULT)))
                     (RPLACD FORALL-ENDPTR
                             (CONS
                              ((LAMBDA (KC_PAIR)
                                 (LIST 'LIST (CAR KC_PAIR)
                                       (*FF2A (CDR KC_PAIR) DENR_EX)))
                               (CAR KC_PAIR))
                              NIL))
                     (SETQ FORALL-ENDPTR (CDR FORALL-ENDPTR))
                     (GO LOOPLABEL))))))) 
(PUT 'DUMP_OPERATORS 'NUMBER-OF-ARGS 3) 
(PUT 'DUMP_OPERATORS 'DEFINED-ON-LINE '398) 
(PUT 'DUMP_OPERATORS 'DEFINED-IN-FILE 'CDIFF/TOOLS21.RED) 
(PUT 'DUMP_OPERATORS 'PROCEDURE_TYPE
     '(ARROW (TIMES GENERAL GENERAL GENERAL) GENERAL)) 
(DE DUMP_OPERATORS (FORM OPLIST FACT)
    (COND ((NULL FORM) NIL)
          ((OR (ATOM FORM) (ATOM (CAR FORM)))
           (COND (*PHYSOP-LOADED (PHYSOP-MULTF FACT FORM))
                 (T (POLY-MULTF FACT FORM))))
          ((AND (NOT (ATOM (CAAAR FORM))) (MEMBER (CAR (CAAAR FORM)) OPLIST))
           (DUMP_OPERATORS (CDR FORM) OPLIST FACT))
          (T
           (ADDF (DUMP_OPERATORS (CDR FORM) OPLIST FACT)
                 (DUMP_OPERATORS (CDAR FORM) OPLIST
                  ((LAMBDA (G126)
                     (COND (*PHYSOP-LOADED (PHYSOP-MULTF FACT G126))
                           (T (POLY-MULTF FACT G126))))
                   (LIST (CONS (CAAR FORM) 1)))))))) 
(PUT 'INDEPENDENT_PART 'PSOPFN 'INDEPENDENT_PART_1) 
(PUT 'INDEPENDENT_PART_1 'NUMBER-OF-ARGS 1) 
(PUT 'INDEPENDENT_PART_1 'DEFINED-ON-LINE '410) 
(PUT 'INDEPENDENT_PART_1 'DEFINED-IN-FILE 'CDIFF/TOOLS21.RED) 
(PUT 'INDEPENDENT_PART_1 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE INDEPENDENT_PART_1 (U)
    (COND
     ((NEQ (LENGTH U) 2)
      (REDERR "INDEPENDENT_PART: wrong number of arguments"))
     (T (INDEPENDENT_PART (CAR U) (REVAL1 (CADR U) T))))) 
(PUT 'INDEPENDENT_PART 'NUMBER-OF-ARGS 2) 
(PUT 'INDEPENDENT_PART 'DEFINED-ON-LINE '414) 
(PUT 'INDEPENDENT_PART 'DEFINED-IN-FILE 'CDIFF/TOOLS21.RED) 
(PUT 'INDEPENDENT_PART 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE INDEPENDENT_PART (EXPRN OPLIST)
    (PROG (NUMR_EX DENR_EX)
      (SETQ OPLIST
              (COND ((NULL OPLIST) NIL) ((ATOM OPLIST) (LIST OPLIST))
                    ((EQUAL (CAR OPLIST) 'LIST) (CDR OPLIST)) (T OPLIST)))
      (SETQ EXPRN (SIMP* EXPRN))
      (SETQ NUMR_EX (CAR EXPRN))
      (SETQ DENR_EX (CDR EXPRN))
      (COND
       ((GFK DENR_EX OPLIST NIL)
        (REDERR "INDEPENDENT_PART: denominator not independent")))
      (RETURN (*FF2A (DUMP_OPERATORS NUMR_EX OPLIST 1) DENR_EX)))) 
(PUT 'SPLIT_NON_LINEAR_F 'NUMBER-OF-ARGS 5) 
(PUT 'SPLIT_NON_LINEAR_F 'DEFINED-ON-LINE '431) 
(PUT 'SPLIT_NON_LINEAR_F 'DEFINED-IN-FILE 'CDIFF/TOOLS21.RED) 
(PUT 'SPLIT_NON_LINEAR_F 'PROCEDURE_TYPE
     '(ARROW (TIMES GENERAL GENERAL GENERAL GENERAL GENERAL) GENERAL)) 
(DE SPLIT_NON_LINEAR_F (FORM VAR_LIST MULTI_POWER FACT PC_LIST)
    (COND ((NULL FORM) PC_LIST)
          ((OR (ATOM FORM) (ATOM (CAR FORM)))
           (COND
            (MULTI_POWER
             (UPDATE_KC_LIST PC_LIST MULTI_POWER
              (COND (*PHYSOP-LOADED (PHYSOP-MULTF FACT FORM))
                    (T (POLY-MULTF FACT FORM)))))
            (T
             (CONS
              (ADDF
               (COND (*PHYSOP-LOADED (PHYSOP-MULTF FACT FORM))
                     (T (POLY-MULTF FACT FORM)))
               (CAR PC_LIST))
              (CDR PC_LIST)))))
          (T
           (SPLIT_NON_LINEAR_F (CDR FORM) VAR_LIST MULTI_POWER FACT
            (COND
             ((OR
               (AND (NOT (ATOM (CAAAR FORM)))
                    (MEMBER (CAR (CAAAR FORM)) VAR_LIST))
               (MEMBER (CAAAR FORM) VAR_LIST))
              (SPLIT_NON_LINEAR_F (CDAR FORM) VAR_LIST
               (APPEND MULTI_POWER (LIST (CAAR FORM))) FACT PC_LIST))
             (T
              (SPLIT_NON_LINEAR_F (CDAR FORM) VAR_LIST MULTI_POWER
               ((LAMBDA (G128)
                  (COND (*PHYSOP-LOADED (PHYSOP-MULTF FACT G128))
                        (T (POLY-MULTF FACT G128))))
                (LIST (CONS (CAAR FORM) 1)))
               PC_LIST))))))) 
(PUT 'SPLIT_NON_LINEAR_FORM 'NUMBER-OF-ARGS 2) 
(PUT 'SPLIT_NON_LINEAR_FORM 'DEFINED-ON-LINE '447) 
(PUT 'SPLIT_NON_LINEAR_FORM 'DEFINED-IN-FILE 'CDIFF/TOOLS21.RED) 
(PUT 'SPLIT_NON_LINEAR_FORM 'PROCEDURE_TYPE
     '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE SPLIT_NON_LINEAR_FORM (FORM KERNEL_LIST)
    (SPLIT_NON_LINEAR_F FORM KERNEL_LIST NIL 1 (CONS NIL NIL))) 
(PUT 'MULTI_COEFF 'PSOPFN 'MULTI_COEFF_1) 
(PUT 'MULTI_COEFF_1 'NUMBER-OF-ARGS 1) 
(PUT 'MULTI_COEFF_1 'DEFINED-ON-LINE '453) 
(PUT 'MULTI_COEFF_1 'DEFINED-IN-FILE 'CDIFF/TOOLS21.RED) 
(PUT 'MULTI_COEFF_1 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE MULTI_COEFF_1 (U)
    (COND
     ((NEQ (LENGTH U) 2) (REDERR "MULTI_COEFF: wrong number of arguments"))
     (T (MULTI_COEFF (CAR U) (REVAL1 (CADR U) T))))) 
(PUT 'MULTI_COEFF 'NUMBER-OF-ARGS 2) 
(PUT 'MULTI_COEFF 'DEFINED-ON-LINE '457) 
(PUT 'MULTI_COEFF 'DEFINED-IN-FILE 'CDIFF/TOOLS21.RED) 
(PUT 'MULTI_COEFF 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE MULTI_COEFF (EXPRN KERNEL_LIST)
    (PROG (NUMR_EX DENR_EX PC_LIST)
      (SETQ KERNEL_LIST
              (COND ((NULL KERNEL_LIST) NIL)
                    ((ATOM KERNEL_LIST) (LIST KERNEL_LIST))
                    ((EQUAL (CAR KERNEL_LIST) 'LIST) (CDR KERNEL_LIST))
                    (T KERNEL_LIST)))
      (SETQ EXPRN (SIMP* EXPRN))
      (SETQ NUMR_EX (CAR EXPRN))
      (SETQ DENR_EX (CDR EXPRN))
      (PROG (GENERATOR)
        (SETQ GENERATOR KERNEL_LIST)
       LAB
        (COND ((NULL GENERATOR) (RETURN NIL)))
        ((LAMBDA (GENERATOR)
           (COND
            ((DEPENDS DENR_EX GENERATOR)
             (MSGPRI "MULTI_COEFF: expression is not polynomial w.r.t. "
                     (CONS 'LIST KERNEL_LIST) NIL NIL T))))
         (CAR GENERATOR))
        (SETQ GENERATOR (CDR GENERATOR))
        (GO LAB))
      (SETQ PC_LIST (SPLIT_NON_LINEAR_FORM NUMR_EX KERNEL_LIST))
      (RETURN
       (CONS 'LIST
             (CONS (*FF2A (CAR PC_LIST) DENR_EX)
                   (PROG (PC_PAIR FORALL-RESULT FORALL-ENDPTR)
                     (SETQ PC_PAIR (CDR PC_LIST))
                     (COND ((NULL PC_PAIR) (RETURN NIL)))
                     (SETQ FORALL-RESULT
                             (SETQ FORALL-ENDPTR
                                     (CONS
                                      ((LAMBDA (PC_PAIR)
                                         (LIST 'LIST
                                               (CONVERT_MULTI_POWER
                                                (CAR PC_PAIR))
                                               (*FF2A (CDR PC_PAIR) DENR_EX)))
                                       (CAR PC_PAIR))
                                      NIL)))
                    LOOPLABEL
                     (SETQ PC_PAIR (CDR PC_PAIR))
                     (COND ((NULL PC_PAIR) (RETURN FORALL-RESULT)))
                     (RPLACD FORALL-ENDPTR
                             (CONS
                              ((LAMBDA (PC_PAIR)
                                 (LIST 'LIST
                                       (CONVERT_MULTI_POWER (CAR PC_PAIR))
                                       (*FF2A (CDR PC_PAIR) DENR_EX)))
                               (CAR PC_PAIR))
                              NIL))
                     (SETQ FORALL-ENDPTR (CDR FORALL-ENDPTR))
                     (GO LOOPLABEL))))))) 
(PUT 'CONVERT_MULTI_POWER 'NUMBER-OF-ARGS 1) 
(PUT 'CONVERT_MULTI_POWER 'DEFINED-ON-LINE '480) 
(PUT 'CONVERT_MULTI_POWER 'DEFINED-IN-FILE 'CDIFF/TOOLS21.RED) 
(PUT 'CONVERT_MULTI_POWER 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE CONVERT_MULTI_POWER (MULTI_POWER)
    (CONS 'TIMES
          (PROG (POWER FORALL-RESULT FORALL-ENDPTR)
            (SETQ POWER MULTI_POWER)
            (COND ((NULL POWER) (RETURN NIL)))
            (SETQ FORALL-RESULT
                    (SETQ FORALL-ENDPTR
                            (CONS
                             ((LAMBDA (POWER)
                                (COND ((EQUAL (CDR POWER) 1) (CAR POWER))
                                      (T
                                       (LIST 'EXPT (CAR POWER) (CDR POWER)))))
                              (CAR POWER))
                             NIL)))
           LOOPLABEL
            (SETQ POWER (CDR POWER))
            (COND ((NULL POWER) (RETURN FORALL-RESULT)))
            (RPLACD FORALL-ENDPTR
                    (CONS
                     ((LAMBDA (POWER)
                        (COND ((EQUAL (CDR POWER) 1) (CAR POWER))
                              (T (LIST 'EXPT (CAR POWER) (CDR POWER)))))
                      (CAR POWER))
                     NIL))
            (SETQ FORALL-ENDPTR (CDR FORALL-ENDPTR))
            (GO LOOPLABEL)))) 
(PUT 'SPLIT_ARGUMENTS 'NUMBER-OF-ARGS 3) 
(PUT 'SPLIT_ARGUMENTS 'DEFINED-ON-LINE '485) 
(PUT 'SPLIT_ARGUMENTS 'DEFINED-IN-FILE 'CDIFF/TOOLS21.RED) 
(PUT 'SPLIT_ARGUMENTS 'PROCEDURE_TYPE
     '(ARROW (TIMES GENERAL GENERAL GENERAL) GENERAL)) 
(DE SPLIT_ARGUMENTS (ARG_LIST OPLIST SPLITTED_LIST)
    (COND ((NULL ARG_LIST) SPLITTED_LIST)
          (T
           ((LAMBDA (FIRST_ARG)
              (SPLIT_ARGUMENTS (CDR ARG_LIST) OPLIST
               (CONS
                (COND
                 (*PHYSOP-LOADED
                  (PHYSOP-MULTF (CDR FIRST_ARG) (CAR SPLITTED_LIST)))
                 (T (POLY-MULTF (CDR FIRST_ARG) (CAR SPLITTED_LIST))))
                (CONS (SPLIT_FORM (CAR FIRST_ARG) OPLIST)
                      (CDR SPLITTED_LIST)))))
            (SIMP* (CAR ARG_LIST)))))) 
(PUT 'SPLIT_NON_LINEAR_ARGUMENTS 'NUMBER-OF-ARGS 3) 
(PUT 'SPLIT_NON_LINEAR_ARGUMENTS 'DEFINED-ON-LINE '492) 
(PUT 'SPLIT_NON_LINEAR_ARGUMENTS 'DEFINED-IN-FILE 'CDIFF/TOOLS21.RED) 
(PUT 'SPLIT_NON_LINEAR_ARGUMENTS 'PROCEDURE_TYPE
     '(ARROW (TIMES GENERAL GENERAL GENERAL) GENERAL)) 
(DE SPLIT_NON_LINEAR_ARGUMENTS (ARG_LIST OPLIST SPLITTED_LIST)
    (COND ((NULL ARG_LIST) SPLITTED_LIST)
          (T
           ((LAMBDA (FIRST_ARG)
              (SPLIT_NON_LINEAR_ARGUMENTS (CDR ARG_LIST) OPLIST
               (CONS
                (COND
                 (*PHYSOP-LOADED
                  (PHYSOP-MULTF (CDR FIRST_ARG) (CAR SPLITTED_LIST)))
                 (T (POLY-MULTF (CDR FIRST_ARG) (CAR SPLITTED_LIST))))
                (CONS (SPLIT_NON_LINEAR_FORM (CAR FIRST_ARG) OPLIST)
                      (CDR SPLITTED_LIST)))))
            (SIMP* (CAR ARG_LIST)))))) 
(PUT 'SPLIT_OPERATOR 'NUMBER-OF-ARGS 1) 
(PUT 'SPLIT_OPERATOR 'DEFINED-ON-LINE '501) 
(PUT 'SPLIT_OPERATOR 'DEFINED-IN-FILE 'CDIFF/TOOLS21.RED) 
(PUT 'SPLIT_OPERATOR 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE SPLIT_OPERATOR (U)
    (SPLIT_ARGUMENTS (CDR U) (GET (CAR U) 'OPLIST) (CONS 1 NIL))) 
(PUT 'SPLIT_NON_LINEAR_OPERATOR 'NUMBER-OF-ARGS 1) 
(PUT 'SPLIT_NON_LINEAR_OPERATOR 'DEFINED-ON-LINE '504) 
(PUT 'SPLIT_NON_LINEAR_OPERATOR 'DEFINED-IN-FILE 'CDIFF/TOOLS21.RED) 
(PUT 'SPLIT_NON_LINEAR_OPERATOR 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE SPLIT_NON_LINEAR_OPERATOR (U)
    (SPLIT_NON_LINEAR_ARGUMENTS (CDR U) (GET (CAR U) 'OPLIST) (CONS 1 NIL))) 
(PUT 'PROCESS_ARG_STACK 'NUMBER-OF-ARGS 4) 
(PUT 'PROCESS_ARG_STACK 'DEFINED-ON-LINE '509) 
(PUT 'PROCESS_ARG_STACK 'DEFINED-IN-FILE 'CDIFF/TOOLS21.RED) 
(PUT 'PROCESS_ARG_STACK 'PROCEDURE_TYPE
     '(ARROW (TIMES GENERAL GENERAL GENERAL GENERAL) GENERAL)) 
(DE PROCESS_ARG_STACK (ARG_STACK OP_NAME ARG_LIST FACT)
    (COND
     ((NULL ARG_STACK)
      (MULTSQ (CONS FACT 1)
              (APPLY1 (GET OP_NAME 'RESIMP_FN) (CONS OP_NAME ARG_LIST))))
     (T
      (PROCESS_COMP_LIST (CAR ARG_STACK) (CDR ARG_STACK) OP_NAME ARG_LIST
       FACT)))) 
(PUT 'PROCESS_NON_LINEAR_ARG_STACK 'NUMBER-OF-ARGS 4) 
(PUT 'PROCESS_NON_LINEAR_ARG_STACK 'DEFINED-ON-LINE '514) 
(PUT 'PROCESS_NON_LINEAR_ARG_STACK 'DEFINED-IN-FILE 'CDIFF/TOOLS21.RED) 
(PUT 'PROCESS_NON_LINEAR_ARG_STACK 'PROCEDURE_TYPE
     '(ARROW (TIMES GENERAL GENERAL GENERAL GENERAL) GENERAL)) 
(DE PROCESS_NON_LINEAR_ARG_STACK (ARG_STACK OP_NAME ARG_LIST FACT)
    (COND
     ((NULL ARG_STACK)
      (MULTSQ (CONS FACT 1)
              (APPLY1 (GET OP_NAME 'RESIMP_FN)
                      (CONS OP_NAME
                            (PROG (POWER_SET FORALL-RESULT FORALL-ENDPTR)
                              (SETQ POWER_SET ARG_LIST)
                              (COND ((NULL POWER_SET) (RETURN NIL)))
                              (SETQ FORALL-RESULT
                                      (SETQ FORALL-ENDPTR
                                              (CONS
                                               ((LAMBDA (POWER_SET)
                                                  (COND
                                                   ((EQUAL POWER_SET 1)
                                                    POWER_SET)
                                                   (T
                                                    (CONVERT_MULTI_POWER
                                                     POWER_SET))))
                                                (CAR POWER_SET))
                                               NIL)))
                             LOOPLABEL
                              (SETQ POWER_SET (CDR POWER_SET))
                              (COND ((NULL POWER_SET) (RETURN FORALL-RESULT)))
                              (RPLACD FORALL-ENDPTR
                                      (CONS
                                       ((LAMBDA (POWER_SET)
                                          (COND ((EQUAL POWER_SET 1) POWER_SET)
                                                (T
                                                 (CONVERT_MULTI_POWER
                                                  POWER_SET))))
                                        (CAR POWER_SET))
                                       NIL))
                              (SETQ FORALL-ENDPTR (CDR FORALL-ENDPTR))
                              (GO LOOPLABEL))))))
     (T
      (PROCESS_NON_LINEAR_COMP_LIST (CAR ARG_STACK) (CDR ARG_STACK) OP_NAME
       ARG_LIST FACT)))) 
(PUT 'PROCESS_COMP_LIST 'NUMBER-OF-ARGS 5) 
(PUT 'PROCESS_COMP_LIST 'DEFINED-ON-LINE '524) 
(PUT 'PROCESS_COMP_LIST 'DEFINED-IN-FILE 'CDIFF/TOOLS21.RED) 
(PUT 'PROCESS_COMP_LIST 'PROCEDURE_TYPE
     '(ARROW (TIMES GENERAL GENERAL GENERAL GENERAL GENERAL) GENERAL)) 
(DE PROCESS_COMP_LIST (COMP_LIST ARG_STACK OP_NAME ARG_LIST FACT)
    (ADDSQ
     (PROCESS_INDEPENDENT_PART (CAR COMP_LIST) ARG_STACK OP_NAME ARG_LIST FACT)
     (PROCESS_COMPONENTS (CDR COMP_LIST) ARG_STACK OP_NAME ARG_LIST FACT))) 
(PUT 'PROCESS_NON_LINEAR_COMP_LIST 'NUMBER-OF-ARGS 5) 
(PUT 'PROCESS_NON_LINEAR_COMP_LIST 'DEFINED-ON-LINE '528) 
(PUT 'PROCESS_NON_LINEAR_COMP_LIST 'DEFINED-IN-FILE 'CDIFF/TOOLS21.RED) 
(PUT 'PROCESS_NON_LINEAR_COMP_LIST 'PROCEDURE_TYPE
     '(ARROW (TIMES GENERAL GENERAL GENERAL GENERAL GENERAL) GENERAL)) 
(DE PROCESS_NON_LINEAR_COMP_LIST (COMP_LIST ARG_STACK OP_NAME ARG_LIST FACT)
    (ADDSQ
     (PROCESS_NON_LINEAR_INDEPENDENT_PART (CAR COMP_LIST) ARG_STACK OP_NAME
      ARG_LIST FACT)
     (PROCESS_NON_LINEAR_COMPONENTS (CDR COMP_LIST) ARG_STACK OP_NAME ARG_LIST
      FACT))) 
(PUT 'PROCESS_INDEPENDENT_PART 'NUMBER-OF-ARGS 5) 
(PUT 'PROCESS_INDEPENDENT_PART 'DEFINED-ON-LINE '532) 
(PUT 'PROCESS_INDEPENDENT_PART 'DEFINED-IN-FILE 'CDIFF/TOOLS21.RED) 
(PUT 'PROCESS_INDEPENDENT_PART 'PROCEDURE_TYPE
     '(ARROW (TIMES GENERAL GENERAL GENERAL GENERAL GENERAL) GENERAL)) 
(DE PROCESS_INDEPENDENT_PART (INDEPENDENT_PART ARG_STACK OP_NAME ARG_LIST FACT)
    (COND ((NULL INDEPENDENT_PART) (CONS NIL 1))
          (T
           (PROCESS_ARG_STACK ARG_STACK OP_NAME (CONS 1 ARG_LIST)
            (COND (*PHYSOP-LOADED (PHYSOP-MULTF FACT INDEPENDENT_PART))
                  (T (POLY-MULTF FACT INDEPENDENT_PART))))))) 
(PUT 'PROCESS_NON_LINEAR_INDEPENDENT_PART 'NUMBER-OF-ARGS 5) 
(PUT 'PROCESS_NON_LINEAR_INDEPENDENT_PART 'DEFINED-ON-LINE '538) 
(PUT 'PROCESS_NON_LINEAR_INDEPENDENT_PART 'DEFINED-IN-FILE 'CDIFF/TOOLS21.RED) 
(PUT 'PROCESS_NON_LINEAR_INDEPENDENT_PART 'PROCEDURE_TYPE
     '(ARROW (TIMES GENERAL GENERAL GENERAL GENERAL GENERAL) GENERAL)) 
(DE PROCESS_NON_LINEAR_INDEPENDENT_PART
    (INDEPENDENT_PART ARG_STACK OP_NAME ARG_LIST FACT)
    (COND ((NULL INDEPENDENT_PART) (CONS NIL 1))
          (T
           (PROCESS_NON_LINEAR_ARG_STACK ARG_STACK OP_NAME (CONS 1 ARG_LIST)
            (COND (*PHYSOP-LOADED (PHYSOP-MULTF FACT INDEPENDENT_PART))
                  (T (POLY-MULTF FACT INDEPENDENT_PART))))))) 
(PUT 'PROCESS_COMPONENTS 'NUMBER-OF-ARGS 5) 
(PUT 'PROCESS_COMPONENTS 'DEFINED-ON-LINE '546) 
(PUT 'PROCESS_COMPONENTS 'DEFINED-IN-FILE 'CDIFF/TOOLS21.RED) 
(PUT 'PROCESS_COMPONENTS 'PROCEDURE_TYPE
     '(ARROW (TIMES GENERAL GENERAL GENERAL GENERAL GENERAL) GENERAL)) 
(DE PROCESS_COMPONENTS (COMP_LIST ARG_STACK OP_NAME ARG_LIST FACT)
    (COND ((NULL COMP_LIST) (CONS NIL 1))
          (T
           (ADDSQ
            (PROCESS_COMPONENTS (CDR COMP_LIST) ARG_STACK OP_NAME ARG_LIST
             FACT)
            (PROCESS_ARG_STACK ARG_STACK OP_NAME
             (CONS (CAAR COMP_LIST) ARG_LIST)
             (COND (*PHYSOP-LOADED (PHYSOP-MULTF FACT (CDAR COMP_LIST)))
                   (T (POLY-MULTF FACT (CDAR COMP_LIST))))))))) 
(PUT 'PROCESS_NON_LINEAR_COMPONENTS 'NUMBER-OF-ARGS 5) 
(PUT 'PROCESS_NON_LINEAR_COMPONENTS 'DEFINED-ON-LINE '553) 
(PUT 'PROCESS_NON_LINEAR_COMPONENTS 'DEFINED-IN-FILE 'CDIFF/TOOLS21.RED) 
(PUT 'PROCESS_NON_LINEAR_COMPONENTS 'PROCEDURE_TYPE
     '(ARROW (TIMES GENERAL GENERAL GENERAL GENERAL GENERAL) GENERAL)) 
(DE PROCESS_NON_LINEAR_COMPONENTS (COMP_LIST ARG_STACK OP_NAME ARG_LIST FACT)
    (COND ((NULL COMP_LIST) (CONS NIL 1))
          (T
           (ADDSQ
            (PROCESS_NON_LINEAR_COMPONENTS (CDR COMP_LIST) ARG_STACK OP_NAME
             ARG_LIST FACT)
            (PROCESS_NON_LINEAR_ARG_STACK ARG_STACK OP_NAME
             (CONS (CAAR COMP_LIST) ARG_LIST)
             (COND (*PHYSOP-LOADED (PHYSOP-MULTF FACT (CDAR COMP_LIST)))
                   (T (POLY-MULTF FACT (CDAR COMP_LIST))))))))) 
(PUT 'BUILD_SUM 'NUMBER-OF-ARGS 2) 
(PUT 'BUILD_SUM 'DEFINED-ON-LINE '562) 
(PUT 'BUILD_SUM 'DEFINED-IN-FILE 'CDIFF/TOOLS21.RED) 
(PUT 'BUILD_SUM 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE BUILD_SUM (OP_NAME ARG_STACK) (PROCESS_ARG_STACK ARG_STACK OP_NAME NIL 1)) 
(PUT 'BUILD_NON_LINEAR_SUM 'NUMBER-OF-ARGS 2) 
(PUT 'BUILD_NON_LINEAR_SUM 'DEFINED-ON-LINE '565) 
(PUT 'BUILD_NON_LINEAR_SUM 'DEFINED-IN-FILE 'CDIFF/TOOLS21.RED) 
(PUT 'BUILD_NON_LINEAR_SUM 'PROCEDURE_TYPE
     '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE BUILD_NON_LINEAR_SUM (OP_NAME ARG_STACK)
    (PROCESS_NON_LINEAR_ARG_STACK ARG_STACK OP_NAME NIL 1)) 
(PUT 'SIMP_MULTILINEAR 'NUMBER-OF-ARGS 1) 
(PUT 'SIMP_MULTILINEAR 'DEFINED-ON-LINE '569) 
(PUT 'SIMP_MULTILINEAR 'DEFINED-IN-FILE 'CDIFF/TOOLS21.RED) 
(PUT 'SIMP_MULTILINEAR 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE SIMP_MULTILINEAR (U)
    ((LAMBDA (SPLITTED_LIST)
       (MULTSQ (BUILD_SUM (CAR U) (CDR SPLITTED_LIST))
               (INVSQ (CONS (CAR SPLITTED_LIST) 1))))
     (SPLIT_OPERATOR U))) 
(PUT 'SIMP_MULTIMORPH 'NUMBER-OF-ARGS 1) 
(PUT 'SIMP_MULTIMORPH 'DEFINED-ON-LINE '573) 
(PUT 'SIMP_MULTIMORPH 'DEFINED-IN-FILE 'CDIFF/TOOLS21.RED) 
(PUT 'SIMP_MULTIMORPH 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE SIMP_MULTIMORPH (U)
    ((LAMBDA (SPLITTED_LIST)
       (MULTSQ (BUILD_NON_LINEAR_SUM (CAR U) (CDR SPLITTED_LIST))
               (INVSQ (CONS (CAR SPLITTED_LIST) 1))))
     (SPLIT_NON_LINEAR_OPERATOR U))) 
(PUT 'MULTILINEAR 'STAT 'RLIS) 
(PUT 'MULTIMORPH 'STAT 'RLIS) 
(PUT 'MULTILINEAR 'NUMBER-OF-ARGS 1) 
(PUT 'MULTILINEAR 'DEFINED-ON-LINE '583) 
(PUT 'MULTILINEAR 'DEFINED-IN-FILE 'CDIFF/TOOLS21.RED) 
(PUT 'MULTILINEAR 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE MULTILINEAR (U)
    (PROG (DECL)
      (SETQ DECL U)
     LAB
      (COND ((NULL DECL) (RETURN NIL)))
      ((LAMBDA (DECL)
         (PROG (OP_NAME RESIMP_FN)
           (COND
            ((AND (NEQ (LENGTH DECL) 2) (NEQ (LENGTH DECL) 3))
             (MSGPRI NIL DECL "invalid multilinear declaration" NIL T)))
           (COND
            ((NOT (IDP (SETQ OP_NAME (CAR DECL))))
             (MSGPRI NIL OP_NAME "invalid as operator" NIL T)))
           (PUT OP_NAME 'OPLIST
                (COND ((NULL (CADR DECL)) NIL)
                      ((ATOM (CADR DECL)) (LIST (CADR DECL)))
                      ((EQUAL (CAR (CADR DECL)) 'LIST) (CDR (CADR DECL)))
                      (T (CADR DECL))))
           (COND
            ((OR (AND (EQUAL (LENGTH DECL) 3) (SETQ RESIMP_FN (CADDR DECL)))
                 (SETQ RESIMP_FN (GET OP_NAME 'RESIMP_FN))
                 (SETQ RESIMP_FN (GET OP_NAME 'SIMPFN)))
             (PUT OP_NAME 'RESIMP_FN RESIMP_FN))
            (T (PUT OP_NAME 'RESIMP_FN 'SIMPIDEN)))
           (PUT OP_NAME 'SIMPFN 'SIMP_MULTILINEAR)
           (FLAG (LIST OP_NAME) 'FULL)))
       (CAR DECL))
      (SETQ DECL (CDR DECL))
      (GO LAB))) 
(PUT 'MULTIMORPH 'NUMBER-OF-ARGS 1) 
(PUT 'MULTIMORPH 'DEFINED-ON-LINE '609) 
(PUT 'MULTIMORPH 'DEFINED-IN-FILE 'CDIFF/TOOLS21.RED) 
(PUT 'MULTIMORPH 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE MULTIMORPH (U)
    (PROG (DECL)
      (SETQ DECL U)
     LAB
      (COND ((NULL DECL) (RETURN NIL)))
      ((LAMBDA (DECL)
         (PROG (OP_NAME RESIMP_FN)
           (COND
            ((AND (NEQ (LENGTH DECL) 2) (NEQ (LENGTH DECL) 3))
             (MSGPRI NIL DECL "invalid multimorph declaration" NIL T)))
           (COND
            ((NOT (IDP (SETQ OP_NAME (CAR DECL))))
             (MSGPRI NIL OP_NAME "invalid as operator" NIL T)))
           (PUT OP_NAME 'OPLIST
                (COND ((NULL (CADR DECL)) NIL)
                      ((ATOM (CADR DECL)) (LIST (CADR DECL)))
                      ((EQUAL (CAR (CADR DECL)) 'LIST) (CDR (CADR DECL)))
                      (T (CADR DECL))))
           (COND
            ((OR (AND (EQUAL (LENGTH DECL) 3) (SETQ RESIMP_FN (CADDR DECL)))
                 (SETQ RESIMP_FN (GET OP_NAME 'RESIMP_FN))
                 (SETQ RESIMP_FN (GET OP_NAME 'SIMPFN)))
             (PUT OP_NAME 'RESIMP_FN RESIMP_FN))
            (T (PUT OP_NAME 'RESIMP_FN 'SIMPIDEN)))
           (PUT OP_NAME 'SIMPFN 'SIMP_MULTIMORPH)
           (FLAG (LIST OP_NAME) 'FULL)))
       (CAR DECL))
      (SETQ DECL (CDR DECL))
      (GO LAB))) 
(PUT 'LINEAR_SOLVE 'PSOPFN 'LINEAR_SOLVE_1) 
(PUT 'LINEAR_SOLVE_1 'NUMBER-OF-ARGS 1) 
(PUT 'LINEAR_SOLVE_1 'DEFINED-ON-LINE '637) 
(PUT 'LINEAR_SOLVE_1 'DEFINED-IN-FILE 'CDIFF/TOOLS21.RED) 
(PUT 'LINEAR_SOLVE_1 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE LINEAR_SOLVE_1 (U)
    (COND
     ((NEQ (LENGTH U) 2) (REDERR "LINEAR_SOLVE: wrong number of arguments"))
     (T (LINEAR_SOLVE (CAR U) (*A2K (CADR U)))))) 
(PUT 'LINEAR_SOLVE 'NUMBER-OF-ARGS 2) 
(PUT 'LINEAR_SOLVE 'DEFINED-ON-LINE '643) 
(PUT 'LINEAR_SOLVE 'DEFINED-IN-FILE 'CDIFF/TOOLS21.RED) 
(PUT 'LINEAR_SOLVE 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE LINEAR_SOLVE (EXPRN KERNEL)
    (PROG (KORD* FORM)
      (SETQ EXPRN (FCTRF (CAR (SIMP* EXPRN))))
      (SETQ EXPRN
              (COND
               ((OR (ATOM (CAR EXPRN)) (ATOM (CAR (CAR EXPRN)))) (CDR EXPRN))
               (T (CONS (CONS (CAR EXPRN) 1) (CDR EXPRN)))))
      (SETQ FORM
              (PROG (FACTOR FORALL-RESULT FORALL-ENDPTR)
                (SETQ FACTOR EXPRN)
               STARTOVER
                (COND ((NULL FACTOR) (RETURN NIL)))
                (SETQ FORALL-RESULT
                        ((LAMBDA (FACTOR)
                           (COND ((DEPENDS FACTOR KERNEL) (LIST FACTOR))))
                         (CAR FACTOR)))
                (SETQ FORALL-ENDPTR (LASTPAIR FORALL-RESULT))
                (SETQ FACTOR (CDR FACTOR))
                (COND ((ATOM FORALL-ENDPTR) (GO STARTOVER)))
               LOOPLABEL
                (COND ((NULL FACTOR) (RETURN FORALL-RESULT)))
                (RPLACD FORALL-ENDPTR
                        ((LAMBDA (FACTOR)
                           (COND ((DEPENDS FACTOR KERNEL) (LIST FACTOR))))
                         (CAR FACTOR)))
                (SETQ FORALL-ENDPTR (LASTPAIR FORALL-ENDPTR))
                (SETQ FACTOR (CDR FACTOR))
                (GO LOOPLABEL)))
      (COND ((EQUAL (LENGTH FORM) 1) (SETQ FORM (CAR (CAR FORM))))
            (T
             (MSGPRI "LINEAR_SOLVE: expression not linear with respect to"
                     KERNEL NIL NIL T)))
      (SETKORDER (LIST KERNEL))
      (SETQ FORM (REORDER FORM))
      (COND
       ((AND (EQUAL (CAAAR FORM) KERNEL) (EQUAL (CDAAR FORM) 1)
             (NOT (DEPENDS (CDAR FORM) KERNEL))
             (NOT (DEPENDS (CDR FORM) KERNEL)))
        (RETURN (*FF2A (NEGF (CDR FORM)) (CDAR FORM))))
       (T
        (MSGPRI "LINEAR_SOLVE: expression not linear with respect to" KERNEL
                NIL NIL T))))) 
(PUT 'LINEAR_SOLVE_AND_ASSIGN 'PSOPFN 'LINEAR_SOLVE_AND_ASSIGN_1) 
(PUT 'LINEAR_SOLVE_AND_ASSIGN_1 'NUMBER-OF-ARGS 1) 
(PUT 'LINEAR_SOLVE_AND_ASSIGN_1 'DEFINED-ON-LINE '667) 
(PUT 'LINEAR_SOLVE_AND_ASSIGN_1 'DEFINED-IN-FILE 'CDIFF/TOOLS21.RED) 
(PUT 'LINEAR_SOLVE_AND_ASSIGN_1 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE LINEAR_SOLVE_AND_ASSIGN_1 (U)
    (COND
     ((NEQ (LENGTH U) 2)
      (REDERR "LINEAR_SOLVE_AND_ASSIGN: wrong number of arguments"))
     (T (LINEAR_SOLVE_AND_ASSIGN (CAR U) (CADR U))))) 
(PUT 'LINEAR_SOLVE_AND_ASSIGN 'NUMBER-OF-ARGS 2) 
(PUT 'LINEAR_SOLVE_AND_ASSIGN 'DEFINED-ON-LINE '672) 
(PUT 'LINEAR_SOLVE_AND_ASSIGN 'DEFINED-IN-FILE 'CDIFF/TOOLS21.RED) 
(PUT 'LINEAR_SOLVE_AND_ASSIGN 'PROCEDURE_TYPE
     '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE LINEAR_SOLVE_AND_ASSIGN (EXPRN KERNEL)
    ((LAMBDA (KRNL) (SETK KRNL (LINEAR_SOLVE EXPRN KRNL))) (*A2K KERNEL))) 
(PUT 'SOLVABLE_KERNELS 'PSOPFN 'SOLVABLE_KERNELS_1) 
(PUT 'SOLVABLE_KERNELS_1 'NUMBER-OF-ARGS 1) 
(PUT 'SOLVABLE_KERNELS_1 'DEFINED-ON-LINE '680) 
(PUT 'SOLVABLE_KERNELS_1 'DEFINED-IN-FILE 'CDIFF/TOOLS21.RED) 
(PUT 'SOLVABLE_KERNELS_1 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE SOLVABLE_KERNELS_1 (U)
    (COND
     ((NEQ (LENGTH U) 3)
      (REDERR "SOLVABLE_KERNELS: wrong number of arguments"))
     (T (SOLVABLE_KERNELS (CAR U) (CADR U) (CADDR U))))) 
(PUT 'LIST_MERGE 'NUMBER-OF-ARGS 2) 
(PUT 'LIST_MERGE 'DEFINED-ON-LINE '686) 
(PUT 'LIST_MERGE 'DEFINED-IN-FILE 'CDIFF/TOOLS21.RED) 
(PUT 'LIST_MERGE 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE LIST_MERGE (ELEMENT MERGE_LIST)
    (COND ((MEMBER ELEMENT MERGE_LIST) MERGE_LIST)
          (T (CONS ELEMENT MERGE_LIST)))) 
(PUT 'MK_KERNEL_LIST 'NUMBER-OF-ARGS 5) 
(PUT 'MK_KERNEL_LIST 'DEFINED-ON-LINE '690) 
(PUT 'MK_KERNEL_LIST 'DEFINED-IN-FILE 'CDIFF/TOOLS21.RED) 
(PUT 'MK_KERNEL_LIST 'PROCEDURE_TYPE
     '(ARROW (TIMES GENERAL GENERAL GENERAL GENERAL GENERAL) GENERAL)) 
(DE MK_KERNEL_LIST (FORM K_OPLIST C_OPLIST FORBIDDEN KERNEL_LIST)
    (COND ((OR (ATOM FORM) (ATOM (CAR FORM))) KERNEL_LIST)
          (T
           ((LAMBDA (KERNEL)
              (COND
               ((NOT (ATOM KERNEL))
                (MK_KERNEL_LIST (CDR FORM) K_OPLIST C_OPLIST FORBIDDEN
                 (MK_KERNEL_LIST (CDAR FORM) K_OPLIST C_OPLIST
                  (COND ((MEMBER (CAR KERNEL) C_OPLIST) T) (T FORBIDDEN))
                  (COND
                   ((MEMBER (CAR KERNEL) K_OPLIST)
                    (COND
                     ((AND (NOT FORBIDDEN) (EQUAL (CDAAR FORM) 1)
                           (NOT (GET_FIRST_KERNEL (CDAR FORM) C_OPLIST)))
                      (CONS (LIST_MERGE KERNEL (CAR KERNEL_LIST))
                            (CDR KERNEL_LIST)))
                     (T
                      (CONS (CAR KERNEL_LIST)
                            (LIST_MERGE KERNEL (CDR KERNEL_LIST))))))
                   (T KERNEL_LIST)))))
               (T
                (MK_KERNEL_LIST (CDR FORM) K_OPLIST C_OPLIST FORBIDDEN
                 (MK_KERNEL_LIST (CDAR FORM) K_OPLIST C_OPLIST FORBIDDEN
                  KERNEL_LIST)))))
            (CAAAR FORM))))) 
(PUT 'SOLVABLE_KERNELS 'NUMBER-OF-ARGS 3) 
(PUT 'SOLVABLE_KERNELS 'DEFINED-ON-LINE '709) 
(PUT 'SOLVABLE_KERNELS 'DEFINED-IN-FILE 'CDIFF/TOOLS21.RED) 
(PUT 'SOLVABLE_KERNELS 'PROCEDURE_TYPE
     '(ARROW (TIMES GENERAL GENERAL GENERAL) GENERAL)) 
(DE SOLVABLE_KERNELS (EXPRN K_OPLIST C_OPLIST)
    (PROG (FORM KERNEL_LIST FORBIDDEN_KERNELS)
      (SETQ FORM (CAR (SIMP* EXPRN)))
      (SETQ K_OPLIST
              (COND ((NULL K_OPLIST) NIL) ((ATOM K_OPLIST) (LIST K_OPLIST))
                    ((EQUAL (CAR K_OPLIST) 'LIST) (CDR K_OPLIST))
                    (T K_OPLIST)))
      (SETQ C_OPLIST
              (COND ((NULL C_OPLIST) NIL) ((ATOM C_OPLIST) (LIST C_OPLIST))
                    ((EQUAL (CAR C_OPLIST) 'LIST) (CDR C_OPLIST))
                    (T C_OPLIST)))
      (SETQ KERNEL_LIST
              (MK_KERNEL_LIST FORM K_OPLIST C_OPLIST NIL (CONS NIL NIL)))
      (SETQ FORBIDDEN_KERNELS (CDR KERNEL_LIST))
      (SETQ KERNEL_LIST (CAR KERNEL_LIST))
      (PROG (KERNEL)
        (SETQ KERNEL FORBIDDEN_KERNELS)
       LAB
        (COND ((NULL KERNEL) (RETURN NIL)))
        ((LAMBDA (KERNEL) (SETQ KERNEL_LIST (DELETE KERNEL KERNEL_LIST)))
         (CAR KERNEL))
        (SETQ KERNEL (CDR KERNEL))
        (GO LAB))
      (RETURN (CONS 'LIST KERNEL_LIST)))) 
(PUT 'NA_GET 'NUMBER-OF-ARGS 2) 
(PUT 'NA_GET 'DEFINED-ON-LINE '737) 
(PUT 'NA_GET 'DEFINED-IN-FILE 'CDIFF/TOOLS21.RED) 
(PUT 'NA_GET 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE NA_GET (NA_LIST KEY)
    (COND
     (NA_LIST
      (COND ((NULL KEY) (CAR NA_LIST))
            (T
             ((LAMBDA (NA_ASSOC)
                (COND (NA_ASSOC (NA_GET (CDR NA_ASSOC) (CDR KEY)))))
              (ASSOC (CAR KEY) (CDR NA_LIST)))))))) 
(PUT 'NA_PUT 'NUMBER-OF-ARGS 3) 
(PUT 'NA_PUT 'DEFINED-ON-LINE '743) 
(PUT 'NA_PUT 'DEFINED-IN-FILE 'CDIFF/TOOLS21.RED) 
(PUT 'NA_PUT 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL GENERAL) GENERAL)) 
(DE NA_PUT (NA_LIST KEY VALUE)
    (COND ((NULL KEY) (CAR (RPLACA NA_LIST VALUE)))
          (T
           ((LAMBDA (NA_ASSOC)
              (COND (NA_ASSOC (NA_PUT (CDR NA_ASSOC) (CDR KEY) VALUE))
                    (T
                     (NA_PUT
                      (CDADR
                       (RPLACD NA_LIST
                               (CONS (LIST (CAR KEY) NIL) (CDR NA_LIST))))
                      (CDR KEY) VALUE))))
            (ASSOC (CAR KEY) (CDR NA_LIST)))))) 
(PUT 'NA_OPERATOR 'STAT 'RLIS) 
(PUT 'NA_OPERATOR 'NUMBER-OF-ARGS 1) 
(PUT 'NA_OPERATOR 'DEFINED-ON-LINE '753) 
(PUT 'NA_OPERATOR 'DEFINED-IN-FILE 'CDIFF/TOOLS21.RED) 
(PUT 'NA_OPERATOR 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE NA_OPERATOR (U)
    (PROG (DECL)
      (SETQ DECL U)
     LAB
      (COND ((NULL DECL) (RETURN NIL)))
      ((LAMBDA (DECL)
         (PROG ()
           (COND
            ((NOT (ATOM DECL))
             (MSGPRI NIL DECL "invalid na_operator declaration" NIL T)))
           (PUT DECL 'NA_VALUES (LIST NIL))
           (PUT DECL 'SIMPFN 'SIMP_NA_OP)
           (PUT DECL 'SETKFN 'SETK_NA_OP)
           (PUT DECL 'MKSQSUBFN 'MKSQSUB_NA_OP)
           (PUT DECL 'FKERNFN 'FKERN_NA_OP)
           (PUT DECL 'CLEARFN 'CLEAR_NA_OP)
           (PUT DECL 'PREPSQ*FN 'PREPSQ*_GET_KERNELS)
           (FLAG (LIST DECL) 'FULL)))
       (CAR DECL))
      (SETQ DECL (CDR DECL))
      (GO LAB))) 
(FLUID '(_NA_KRNL_)) 
(PUT 'SIMP_NA_OP 'NUMBER-OF-ARGS 1) 
(PUT 'SIMP_NA_OP 'DEFINED-ON-LINE '771) 
(PUT 'SIMP_NA_OP 'DEFINED-IN-FILE 'CDIFF/TOOLS21.RED) 
(PUT 'SIMP_NA_OP 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE SIMP_NA_OP (KERNEL)
    (PROG (OP_NAME KEY ENTRY)
      (SETQ OP_NAME (CAR KERNEL))
      (SETQ KEY
              (PROG (I FORALL-RESULT FORALL-ENDPTR)
                (SETQ I (CDR KERNEL))
                (COND ((NULL I) (RETURN NIL)))
                (SETQ FORALL-RESULT
                        (SETQ FORALL-ENDPTR
                                (CONS ((LAMBDA (I) (REVAL1 I T)) (CAR I))
                                      NIL)))
               LOOPLABEL
                (SETQ I (CDR I))
                (COND ((NULL I) (RETURN FORALL-RESULT)))
                (RPLACD FORALL-ENDPTR
                        (CONS ((LAMBDA (I) (REVAL1 I T)) (CAR I)) NIL))
                (SETQ FORALL-ENDPTR (CDR FORALL-ENDPTR))
                (GO LOOPLABEL)))
      (RETURN
       (COND
        ((AND (SETQ ENTRY (NA_GET (GET OP_NAME 'NA_VALUES) KEY)) (CDR ENTRY))
         (SIMP (CDR ENTRY)))
        (T ((LAMBDA (_NA_KRNL_) (MKSQ (CONS OP_NAME KEY) 1)) (LIST ENTRY))))))) 
(PUT 'SETK_NA_OP 'NUMBER-OF-ARGS 2) 
(PUT 'SETK_NA_OP 'DEFINED-ON-LINE '782) 
(PUT 'SETK_NA_OP 'DEFINED-IN-FILE 'CDIFF/TOOLS21.RED) 
(PUT 'SETK_NA_OP 'PROCEDURE_TYPE '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE SETK_NA_OP (KERNEL VALUE)
    (PROG (OP_NAME KEY ENTRY)
      (SETQ OP_NAME (CAR KERNEL))
      (SETQ KEY (CDR KERNEL))
      (RETURN
       (COND
        ((SETQ ENTRY (NA_GET (GET OP_NAME 'NA_VALUES) KEY))
         (CDR (RPLACD ENTRY VALUE)))
        (T
         (CDR
          (NA_PUT (GET OP_NAME 'NA_VALUES) KEY
           (CONS (LIST (CONS OP_NAME KEY) NIL) VALUE)))))))) 
(PUT 'MKSQSUB_NA_OP 'NUMBER-OF-ARGS 1) 
(PUT 'MKSQSUB_NA_OP 'DEFINED-ON-LINE '793) 
(PUT 'MKSQSUB_NA_OP 'DEFINED-IN-FILE 'CDIFF/TOOLS21.RED) 
(PUT 'MKSQSUB_NA_OP 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE MKSQSUB_NA_OP (KERNEL)
    (COND
     (_NA_KRNL_
      (AND (CAR _NA_KRNL_) (CDAR _NA_KRNL_) (LIST KERNEL (CDAR _NA_KRNL_))))
     (T
      (PROG (OP_NAME KEY ENTRY)
        (SETQ OP_NAME (CAR KERNEL))
        (SETQ KEY (CDR KERNEL))
        (COND
         ((AND (SETQ ENTRY (NA_GET (GET OP_NAME 'NA_VALUES) KEY)) (CDR ENTRY))
          (RETURN (LIST KERNEL (CDR ENTRY))))))))) 
(PUT 'FKERN_NA_OP 'NUMBER-OF-ARGS 1) 
(PUT 'FKERN_NA_OP 'DEFINED-ON-LINE '804) 
(PUT 'FKERN_NA_OP 'DEFINED-IN-FILE 'CDIFF/TOOLS21.RED) 
(PUT 'FKERN_NA_OP 'PROCEDURE_TYPE '(ARROW GENERAL GENERAL)) 
(DE FKERN_NA_OP (KERNEL)
    (PROG (OP_NAME KEY ENTRY)
      (SETQ OP_NAME (CAR KERNEL))
      (SETQ KEY (CDR KERNEL))
      (RETURN
       (COND
        ((SETQ ENTRY
                 (COND (_NA_KRNL_ (CAR _NA_KRNL_))
                       (T (NA_GET (GET OP_NAME 'NA_VALUES) KEY))))
         (COND ((CAR ENTRY) (CAR ENTRY))
               (T (CAR (RPLACA ENTRY (LIST KERNEL NIL))))))
        (T
         (CAR
          (NA_PUT (GET OP_NAME 'NA_VALUES) KEY
           (CONS (LIST KERNEL NIL) NIL)))))))) 
(PUT 'PREPSQ*_GET_KERNELS 'NUMBER-OF-ARGS 2) 
(PUT 'PREPSQ*_GET_KERNELS 'DEFINED-ON-LINE '816) 
(PUT 'PREPSQ*_GET_KERNELS 'DEFINED-IN-FILE 'CDIFF/TOOLS21.RED) 
(PUT 'PREPSQ*_GET_KERNELS 'PROCEDURE_TYPE
     '(ARROW (TIMES GENERAL GENERAL) GENERAL)) 
(DE PREPSQ*_GET_KERNELS (U OP_NAME) (ORDN (GET_ALL_KERNELS (CAR U) OP_NAME))) 
(ENDMODULE) 